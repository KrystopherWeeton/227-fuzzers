; ModuleID = '../../extensions/browser/api/declarative_net_request/indexed_rule.cc'
source_filename = "../../extensions/browser/api/declarative_net_request/indexed_rule.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"struct.extensions::declarative_net_request::IndexedRule" = type { i32, i32, i32, i8, i16, i16, i8, i32, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.absl::optional", %"class.absl::optional", %"class.std::__1::unique_ptr", %"class.std::__1::vector.34", %"class.std::__1::vector.34", %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.extensions::api::declarative_net_request::URLTransform"* }
%"struct.extensions::api::declarative_net_request::URLTransform" = type { %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.extensions::api::declarative_net_request::QueryTransform"* }
%"struct.extensions::api::declarative_net_request::QueryTransform" = type { %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::vector"* }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::vector.24"* }
%"class.std::__1::vector.24" = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"class.std::__1::__compressed_pair.36" }
%"struct.extensions::api::declarative_net_request::ModifyHeaderInfo" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::unique_ptr.9" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.41" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { i32*, i32*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.extensions::api::declarative_net_request::Rule" = type { i32, %"class.std::__1::unique_ptr.54", %"struct.extensions::api::declarative_net_request::RuleCondition", %"struct.extensions::api::declarative_net_request::RuleAction" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.extensions::api::declarative_net_request::RuleCondition" = type { %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78", i32, %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i8* }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::vector.68"* }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { i32*, i32*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { i32* }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::vector.81"* }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { i32*, i32*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i32* }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::vector.41"* }
%"struct.extensions::api::declarative_net_request::RuleAction" = type { i32, %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.103" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.extensions::api::declarative_net_request::Redirect"* }
%"struct.extensions::api::declarative_net_request::Redirect" = type { %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::vector.34"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.48" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.GURL* }
%"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare" = type { i8 }
%"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser" = type { %"class.std::__1::basic_string", i64, i64, %"struct.extensions::declarative_net_request::IndexedRule"* }
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map"*, %"class.std::__1::map.109"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map" = type opaque
%"class.std::__1::map.109" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { i64 }
%"struct.std::__1::once_flag" = type { i64 }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.121", [4 x i8] }>
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@_ZN3url17kJavaScriptSchemeE = external constant [0 x i8], align 1
@_ZN10extensions23declarative_net_request24kAllowedTransformSchemesE = external local_unnamed_addr constant [4 x i8*], align 16
@_ZN10extensions23declarative_net_request22kIsLargeRegexHistogramE = external constant [0 x i8], align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZZN10extensions23declarative_net_request12_GLOBAL__N_119RecordLargeRegexUMAEbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.6 = private unnamed_addr constant [7 x i16] [i16 1, i16 2, i16 4, i16 8, i16 16, i16 32, i16 64], align 2
@switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.8 = private unnamed_addr constant [13 x i16] [i16 8192, i16 128, i16 8, i16 2, i16 4, i16 1024, i16 16, i16 32, i16 256, i16 4096, i16 512, i16 2048, i16 1], align 2
@switch.table._ZN10extensions23declarative_net_request26ComputeIndexedRulePriorityEiNS_3api23declarative_net_request14RuleActionTypeE = private unnamed_addr constant [6 x i32] [i32 3, i32 1, i32 5, i32 2, i32 0, i32 4], align 4

@_ZN10extensions23declarative_net_request11IndexedRuleC1Ev = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::IndexedRule"*), void (%"struct.extensions::declarative_net_request::IndexedRule"*)* @_ZN10extensions23declarative_net_request11IndexedRuleC2Ev
@_ZN10extensions23declarative_net_request11IndexedRuleD1Ev = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::IndexedRule"*), void (%"struct.extensions::declarative_net_request::IndexedRule"*)* @_ZN10extensions23declarative_net_request11IndexedRuleD2Ev
@_ZN10extensions23declarative_net_request11IndexedRuleC1EOS1_ = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::IndexedRule"*, %"struct.extensions::declarative_net_request::IndexedRule"*), void (%"struct.extensions::declarative_net_request::IndexedRule"*, %"struct.extensions::declarative_net_request::IndexedRule"*)* @_ZN10extensions23declarative_net_request11IndexedRuleC2EOS1_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request11IndexedRuleC2Ev(%"struct.extensions::declarative_net_request::IndexedRule"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 4
  store i16 0, i16* %2, align 2
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 5
  store i16 0, i16* %3, align 8
  %4 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 6
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.extensions::declarative_net_request::IndexedRule"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 13, i1 false)
  %9 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 85, i1 false)
  %10 = bitcast %union.anon.6* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false)
  %11 = bitcast %union.anon.6* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 128, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request11IndexedRuleD2Ev(%"struct.extensions::declarative_net_request::IndexedRule"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 18, i32 0, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 17
  %21 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %21, align 8
  %23 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %19
  %25 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %22 to i8*
  %26 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 17, i32 0, i32 1
  %27 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %26, align 8
  %28 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %27, %22
  br i1 %28, label %36, label %29

29:                                               ; preds = %24, %29
  %30 = phi %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* [ %31, %29 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %30, i64 -1
  tail call void @_ZN10extensions3api23declarative_net_request16ModifyHeaderInfoD1Ev(%"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %31) #12
  %32 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %31, %22
  br i1 %32, label %33, label %29

33:                                               ; preds = %29
  %34 = bitcast %"class.std::__1::vector.34"* %20 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %24
  %37 = phi i8* [ %35, %33 ], [ %25, %24 ]
  store %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %22, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %26, align 8
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %19, %36
  %39 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 16
  %40 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %39, i64 0, i32 0, i32 0
  %41 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %40, align 8
  %42 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %41, null
  br i1 %42, label %57, label %43

43:                                               ; preds = %38
  %44 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %41 to i8*
  %45 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 16, i32 0, i32 1
  %46 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %45, align 8
  %47 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %46, %41
  br i1 %47, label %55, label %48

48:                                               ; preds = %43, %48
  %49 = phi %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* [ %50, %48 ], [ %46, %43 ]
  %50 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %49, i64 -1
  tail call void @_ZN10extensions3api23declarative_net_request16ModifyHeaderInfoD1Ev(%"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %50) #12
  %51 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %50, %41
  br i1 %51, label %52, label %48

52:                                               ; preds = %48
  %53 = bitcast %"class.std::__1::vector.34"* %39 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %43
  %56 = phi i8* [ %54, %52 ], [ %44, %43 ]
  store %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %41, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %45, align 8
  tail call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %38, %55
  %58 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %59 = load %"struct.extensions::api::declarative_net_request::URLTransform"*, %"struct.extensions::api::declarative_net_request::URLTransform"** %58, align 8
  store %"struct.extensions::api::declarative_net_request::URLTransform"* null, %"struct.extensions::api::declarative_net_request::URLTransform"** %58, align 8
  %60 = icmp eq %"struct.extensions::api::declarative_net_request::URLTransform"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  tail call void @_ZN10extensions3api23declarative_net_request12URLTransformD1Ev(%"struct.extensions::api::declarative_net_request::URLTransform"* nonnull %59) #12
  %62 = bitcast %"struct.extensions::api::declarative_net_request::URLTransform"* %59 to i8*
  tail call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %57, %61
  %64 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  tail call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %73, %67
  store i8 0, i8* %64, align 8
  br label %77

77:                                               ; preds = %63, %76
  %78 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %87, %81
  store i8 0, i8* %78, align 8
  br label %91

91:                                               ; preds = %77, %90
  %92 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 12
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %93, align 8
  %95 = icmp eq %"class.std::__1::basic_string"* %94, null
  br i1 %95, label %118, label %96

96:                                               ; preds = %91
  %97 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %98 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 12, i32 0, i32 1
  %99 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %98, align 8
  %100 = icmp eq %"class.std::__1::basic_string"* %99, %94
  br i1 %100, label %116, label %101

101:                                              ; preds = %96, %111
  %102 = phi %"class.std::__1::basic_string"* [ %103, %111 ], [ %99, %96 ]
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 -1
  %104 = bitcast %"class.std::__1::basic_string"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  tail call void @_ZdlPv(i8* %110) #11
  br label %111

111:                                              ; preds = %108, %101
  %112 = icmp eq %"class.std::__1::basic_string"* %103, %94
  br i1 %112, label %113, label %101

113:                                              ; preds = %111
  %114 = bitcast %"class.std::__1::vector"* %92 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %113, %96
  %117 = phi i8* [ %115, %113 ], [ %97, %96 ]
  store %"class.std::__1::basic_string"* %94, %"class.std::__1::basic_string"** %98, align 8
  tail call void @_ZdlPv(i8* %117) #11
  br label %118

118:                                              ; preds = %91, %116
  %119 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 11
  %120 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %120, align 8
  %122 = icmp eq %"class.std::__1::basic_string"* %121, null
  br i1 %122, label %145, label %123

123:                                              ; preds = %118
  %124 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  %125 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 11, i32 0, i32 1
  %126 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %125, align 8
  %127 = icmp eq %"class.std::__1::basic_string"* %126, %121
  br i1 %127, label %143, label %128

128:                                              ; preds = %123, %138
  %129 = phi %"class.std::__1::basic_string"* [ %130, %138 ], [ %126, %123 ]
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 -1
  %131 = bitcast %"class.std::__1::basic_string"* %130 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  tail call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %135, %128
  %139 = icmp eq %"class.std::__1::basic_string"* %130, %121
  br i1 %139, label %140, label %128

140:                                              ; preds = %138
  %141 = bitcast %"class.std::__1::vector"* %119 to i8**
  %142 = load i8*, i8** %141, align 8
  br label %143

143:                                              ; preds = %140, %123
  %144 = phi i8* [ %142, %140 ], [ %124, %123 ]
  store %"class.std::__1::basic_string"* %121, %"class.std::__1::basic_string"** %125, align 8
  tail call void @_ZdlPv(i8* %144) #11
  br label %145

145:                                              ; preds = %118, %143
  %146 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 10
  %147 = bitcast %"class.std::__1::basic_string"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  tail call void @_ZdlPv(i8* %153) #11
  br label %154

154:                                              ; preds = %145, %151
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request11IndexedRuleC2EOS1_(%"struct.extensions::declarative_net_request::IndexedRule"* nocapture, %"struct.extensions::declarative_net_request::IndexedRule"* nocapture dereferenceable(272)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::declarative_net_request::IndexedRule"* %0 to i8*
  %4 = bitcast %"struct.extensions::declarative_net_request::IndexedRule"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 10
  %6 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 10
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 11
  %10 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 11
  %11 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = bitcast %"class.std::__1::vector"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 11, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 11, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #12
  %26 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 12
  %27 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 12
  %28 = bitcast %"class.std::__1::vector"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #12
  %29 = bitcast %"class.std::__1::vector"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %26 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 12, i32 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 12, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #12
  %43 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 32, i1 false) #12
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #12
  store i8 1, i8* %43, align 8
  br label %52

52:                                               ; preds = %2, %47
  %53 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 32, i1 false) #12
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #12
  store i8 1, i8* %53, align 8
  br label %62

62:                                               ; preds = %52, %57
  %63 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 15
  %64 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 15
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.extensions::api::declarative_net_request::URLTransform"* null, %"struct.extensions::api::declarative_net_request::URLTransform"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 16
  %70 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 16
  %71 = bitcast %"class.std::__1::vector.34"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #12
  %72 = bitcast %"class.std::__1::vector.34"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.34"* %69 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 16, i32 0, i32 1
  %76 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 16, i32 0, i32 1
  %79 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = bitcast %"class.std::__1::vector.34"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #12
  %86 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 17
  %87 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 17
  %88 = bitcast %"class.std::__1::vector.34"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #12
  %89 = bitcast %"class.std::__1::vector.34"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::vector.34"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 17, i32 0, i32 1
  %93 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 17, i32 0, i32 1
  %96 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 17, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 17, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast %"class.std::__1::vector.34"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #12
  %103 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 18
  %104 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 18
  %105 = bitcast %"class.base::internal::flat_tree"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #12
  %106 = bitcast %"class.base::internal::flat_tree"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::internal::flat_tree"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 18, i32 0, i32 0, i32 1
  %110 = bitcast i32** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 18, i32 0, i32 0, i32 1
  %113 = bitcast i32** %112 to i64*
  store i64 %111, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 18, i32 0, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast i32** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 18, i32 0, i32 0, i32 2, i32 0, i32 0
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast %"class.base::internal::flat_tree"* %104 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #12
  %120 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 19
  %121 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19
  %122 = bitcast %"class.base::internal::flat_tree"* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #12
  %123 = bitcast %"class.base::internal::flat_tree"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.base::internal::flat_tree"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19, i32 0, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %130 = bitcast i32** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19, i32 0, i32 0, i32 2, i32 0, i32 0
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 19, i32 0, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast i32** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"class.base::internal::flat_tree"* %121 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(272) %"struct.extensions::declarative_net_request::IndexedRule"* @_ZN10extensions23declarative_net_request11IndexedRuleaSEOS1_(%"struct.extensions::declarative_net_request::IndexedRule"* returned, %"struct.extensions::declarative_net_request::IndexedRule"* nocapture dereferenceable(272)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::declarative_net_request::IndexedRule"* %0 to i8*
  %4 = bitcast %"struct.extensions::declarative_net_request::IndexedRule"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 10
  %6 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 10
  %7 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #11
  br label %14

14:                                               ; preds = %2, %11
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #12
  %17 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 0, i8* %18, align 1
  store i8 0, i8* %16, align 1
  %19 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 11
  %20 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 11
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %23 = icmp eq %"class.std::__1::basic_string"* %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %14
  %25 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %26 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 11, i32 0, i32 1
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %28 = icmp eq %"class.std::__1::basic_string"* %27, %22
  br i1 %28, label %44, label %29

29:                                               ; preds = %24, %39
  %30 = phi %"class.std::__1::basic_string"* [ %31, %39 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 -1
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %36, %29
  %40 = icmp eq %"class.std::__1::basic_string"* %31, %22
  br i1 %40, label %41, label %29

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector"* %19 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %24
  %45 = phi i8* [ %43, %41 ], [ %25, %24 ]
  store %"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"** %26, align 8
  tail call void @_ZdlPv(i8* %45) #11
  %46 = bitcast %"class.std::__1::vector"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #12
  br label %47

47:                                               ; preds = %14, %44
  %48 = bitcast %"class.std::__1::vector"* %20 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector"* %19 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 11, i32 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 11, i32 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"class.std::__1::basic_string"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"class.std::__1::basic_string"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"class.std::__1::vector"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #12
  %62 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 12
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 0, i32 0, i32 0
  %65 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %64, align 8
  %66 = icmp eq %"class.std::__1::basic_string"* %65, null
  br i1 %66, label %90, label %67

67:                                               ; preds = %47
  %68 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %69 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 12, i32 0, i32 1
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %69, align 8
  %71 = icmp eq %"class.std::__1::basic_string"* %70, %65
  br i1 %71, label %87, label %72

72:                                               ; preds = %67, %82
  %73 = phi %"class.std::__1::basic_string"* [ %74, %82 ], [ %70, %67 ]
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  tail call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %79, %72
  %83 = icmp eq %"class.std::__1::basic_string"* %74, %65
  br i1 %83, label %84, label %72

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector"* %62 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %67
  %88 = phi i8* [ %86, %84 ], [ %68, %67 ]
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %69, align 8
  tail call void @_ZdlPv(i8* %88) #11
  %89 = bitcast %"class.std::__1::vector"* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #12
  br label %90

90:                                               ; preds = %47, %87
  %91 = bitcast %"class.std::__1::vector"* %63 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.std::__1::vector"* %62 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 12, i32 0, i32 1
  %95 = bitcast %"class.std::__1::basic_string"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 12, i32 0, i32 1
  %98 = bitcast %"class.std::__1::basic_string"** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast %"class.std::__1::basic_string"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast %"class.std::__1::basic_string"** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast %"class.std::__1::vector"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #12
  %105 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 13
  %106 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %107 = load i8, i8* %106, align 8, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %131, label %109

109:                                              ; preds = %90
  %110 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %111 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %105, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8, i8* %111, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  %114 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %113, label %128, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZdlPv(i8* %122) #11
  br label %123

123:                                              ; preds = %120, %115
  %124 = bitcast %"class.std::__1::basic_string"* %114 to i8*
  %125 = bitcast %"class.std::__1::basic_string"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 24, i1 false) #12
  %126 = bitcast %"class.std::__1::basic_string"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  store i8 0, i8* %127, align 1
  store i8 0, i8* %125, align 1
  br label %145

128:                                              ; preds = %109
  %129 = bitcast %"class.std::__1::basic_string"* %114 to i8*
  %130 = bitcast %"class.std::__1::basic_string"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 24, i1 false) #12
  store i8 1, i8* %111, align 8
  br label %145

131:                                              ; preds = %90
  %132 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %105, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8, i8* %132, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %145, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %137 = bitcast %"class.std::__1::basic_string"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  tail call void @_ZdlPv(i8* %143) #11
  br label %144

144:                                              ; preds = %141, %135
  store i8 0, i8* %132, align 8
  br label %145

145:                                              ; preds = %123, %128, %131, %144
  %146 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 14
  %147 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %148 = load i8, i8* %147, align 8, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %172, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %152 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8, i8* %152, align 8, !range !2
  %154 = icmp eq i8 %153, 0
  %155 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %154, label %169, label %156

156:                                              ; preds = %150
  %157 = bitcast %"class.std::__1::basic_string"* %155 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  tail call void @_ZdlPv(i8* %163) #11
  br label %164

164:                                              ; preds = %161, %156
  %165 = bitcast %"class.std::__1::basic_string"* %155 to i8*
  %166 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 24, i1 false) #12
  %167 = bitcast %"class.std::__1::basic_string"* %151 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  store i8 0, i8* %168, align 1
  store i8 0, i8* %166, align 1
  br label %186

169:                                              ; preds = %150
  %170 = bitcast %"class.std::__1::basic_string"* %155 to i8*
  %171 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %171, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 24, i1 false) #12
  store i8 1, i8* %152, align 8
  br label %186

172:                                              ; preds = %145
  %173 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8, i8* %173, align 8, !range !2
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %186, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %178 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  tail call void @_ZdlPv(i8* %184) #11
  br label %185

185:                                              ; preds = %182, %176
  store i8 0, i8* %173, align 8
  br label %186

186:                                              ; preds = %164, %169, %172, %185
  %187 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 15
  %188 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 15
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = bitcast %"class.std::__1::unique_ptr"* %188 to i64*
  %191 = load i64, i64* %190, align 8
  store %"struct.extensions::api::declarative_net_request::URLTransform"* null, %"struct.extensions::api::declarative_net_request::URLTransform"** %189, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %187, i64 0, i32 0, i32 0, i32 0
  %193 = load %"struct.extensions::api::declarative_net_request::URLTransform"*, %"struct.extensions::api::declarative_net_request::URLTransform"** %192, align 8
  %194 = bitcast %"class.std::__1::unique_ptr"* %187 to i64*
  store i64 %191, i64* %194, align 8
  %195 = icmp eq %"struct.extensions::api::declarative_net_request::URLTransform"* %193, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %186
  tail call void @_ZN10extensions3api23declarative_net_request12URLTransformD1Ev(%"struct.extensions::api::declarative_net_request::URLTransform"* nonnull %193) #12
  %197 = bitcast %"struct.extensions::api::declarative_net_request::URLTransform"* %193 to i8*
  tail call void @_ZdlPv(i8* %197) #11
  br label %198

198:                                              ; preds = %186, %196
  %199 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 16
  %200 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 16
  %201 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %199, i64 0, i32 0, i32 0
  %202 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %201, align 8
  %203 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %202, null
  br i1 %203, label %219, label %204

204:                                              ; preds = %198
  %205 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %202 to i8*
  %206 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 16, i32 0, i32 1
  %207 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %206, align 8
  %208 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %207, %202
  br i1 %208, label %216, label %209

209:                                              ; preds = %204, %209
  %210 = phi %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* [ %211, %209 ], [ %207, %204 ]
  %211 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %210, i64 -1
  tail call void @_ZN10extensions3api23declarative_net_request16ModifyHeaderInfoD1Ev(%"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %211) #12
  %212 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %211, %202
  br i1 %212, label %213, label %209

213:                                              ; preds = %209
  %214 = bitcast %"class.std::__1::vector.34"* %199 to i8**
  %215 = load i8*, i8** %214, align 8
  br label %216

216:                                              ; preds = %213, %204
  %217 = phi i8* [ %215, %213 ], [ %205, %204 ]
  store %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %202, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %206, align 8
  tail call void @_ZdlPv(i8* %217) #11
  %218 = bitcast %"class.std::__1::vector.34"* %199 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 24, i1 false) #12
  br label %219

219:                                              ; preds = %198, %216
  %220 = bitcast %"class.std::__1::vector.34"* %200 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.std::__1::vector.34"* %199 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 16, i32 0, i32 1
  %224 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 16, i32 0, i32 1
  %227 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %226 to i64*
  store i64 %225, i64* %227, align 8
  %228 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %229 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %232 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %231 to i64*
  store i64 %230, i64* %232, align 8
  %233 = bitcast %"class.std::__1::vector.34"* %200 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #12
  %234 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 17
  %235 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 17
  %236 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %234, i64 0, i32 0, i32 0
  %237 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %236, align 8
  %238 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %237, null
  br i1 %238, label %254, label %239

239:                                              ; preds = %219
  %240 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %237 to i8*
  %241 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 17, i32 0, i32 1
  %242 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %241, align 8
  %243 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %242, %237
  br i1 %243, label %251, label %244

244:                                              ; preds = %239, %244
  %245 = phi %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* [ %246, %244 ], [ %242, %239 ]
  %246 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %245, i64 -1
  tail call void @_ZN10extensions3api23declarative_net_request16ModifyHeaderInfoD1Ev(%"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %246) #12
  %247 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %246, %237
  br i1 %247, label %248, label %244

248:                                              ; preds = %244
  %249 = bitcast %"class.std::__1::vector.34"* %234 to i8**
  %250 = load i8*, i8** %249, align 8
  br label %251

251:                                              ; preds = %248, %239
  %252 = phi i8* [ %250, %248 ], [ %240, %239 ]
  store %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %237, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %241, align 8
  tail call void @_ZdlPv(i8* %252) #11
  %253 = bitcast %"class.std::__1::vector.34"* %234 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %253, i8 0, i64 24, i1 false) #12
  br label %254

254:                                              ; preds = %219, %251
  %255 = bitcast %"class.std::__1::vector.34"* %235 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.std::__1::vector.34"* %234 to i64*
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 17, i32 0, i32 1
  %259 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 17, i32 0, i32 1
  %262 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %261 to i64*
  store i64 %260, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 17, i32 0, i32 2, i32 0, i32 0
  %264 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 17, i32 0, i32 2, i32 0, i32 0
  %267 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %266 to i64*
  store i64 %265, i64* %267, align 8
  %268 = bitcast %"class.std::__1::vector.34"* %235 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %268, i8 0, i64 24, i1 false) #12
  %269 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 18
  %270 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 18
  %271 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %269, i64 0, i32 0, i32 0, i32 0
  %272 = load i32*, i32** %271, align 8
  %273 = icmp eq i32* %272, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %254
  %275 = ptrtoint i32* %272 to i64
  %276 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 18, i32 0, i32 0, i32 1
  %277 = bitcast i32** %276 to i64*
  store i64 %275, i64* %277, align 8
  %278 = bitcast i32* %272 to i8*
  tail call void @_ZdlPv(i8* %278) #11
  %279 = bitcast %"class.base::internal::flat_tree"* %269 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %279, i8 0, i64 24, i1 false) #12
  br label %280

280:                                              ; preds = %254, %274
  %281 = bitcast %"class.base::internal::flat_tree"* %270 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.base::internal::flat_tree"* %269 to i64*
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 18, i32 0, i32 0, i32 1
  %285 = bitcast i32** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 18, i32 0, i32 0, i32 1
  %288 = bitcast i32** %287 to i64*
  store i64 %286, i64* %288, align 8
  %289 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 18, i32 0, i32 0, i32 2, i32 0, i32 0
  %290 = bitcast i32** %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 18, i32 0, i32 0, i32 2, i32 0, i32 0
  %293 = bitcast i32** %292 to i64*
  store i64 %291, i64* %293, align 8
  %294 = bitcast %"class.base::internal::flat_tree"* %270 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 0, i64 24, i1 false) #12
  %295 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 19
  %296 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19
  %297 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %295, i64 0, i32 0, i32 0, i32 0
  %298 = load i32*, i32** %297, align 8
  %299 = icmp eq i32* %298, null
  br i1 %299, label %306, label %300

300:                                              ; preds = %280
  %301 = ptrtoint i32* %298 to i64
  %302 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %303 = bitcast i32** %302 to i64*
  store i64 %301, i64* %303, align 8
  %304 = bitcast i32* %298 to i8*
  tail call void @_ZdlPv(i8* %304) #11
  %305 = bitcast %"class.base::internal::flat_tree"* %295 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %305, i8 0, i64 24, i1 false) #12
  br label %306

306:                                              ; preds = %280, %300
  %307 = bitcast %"class.base::internal::flat_tree"* %296 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast %"class.base::internal::flat_tree"* %295 to i64*
  store i64 %308, i64* %309, align 8
  %310 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19, i32 0, i32 0, i32 1
  %311 = bitcast i32** %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %314 = bitcast i32** %313 to i64*
  store i64 %312, i64* %314, align 8
  %315 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19, i32 0, i32 0, i32 2, i32 0, i32 0
  %316 = bitcast i32** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %0, i64 0, i32 19, i32 0, i32 0, i32 2, i32 0, i32 0
  %319 = bitcast i32** %318 to i64*
  store i64 %317, i64* %319, align 8
  %320 = bitcast %"class.base::internal::flat_tree"* %296 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %320, i8 0, i64 24, i1 false) #12
  ret %"struct.extensions::declarative_net_request::IndexedRule"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_(%"struct.extensions::api::declarative_net_request::Rule"*, %class.GURL* dereferenceable(120), i32, %"struct.extensions::declarative_net_request::IndexedRule"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", align 1
  %6 = alloca %"class.base::internal::flat_tree", align 16
  %7 = alloca %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", align 1
  %8 = alloca %"class.base::internal::flat_tree", align 16
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser", align 8
  %11 = alloca [15 x i8], align 8
  %12 = alloca i32, align 4
  %13 = alloca %class.GURL, align 8
  %14 = alloca %class.GURL, align 8
  %15 = alloca %"struct.extensions::api::declarative_net_request::Redirect", align 8
  %16 = alloca %"class.re2::RE2", align 8
  %17 = alloca %"class.re2::StringPiece", align 8
  %18 = alloca %"class.re2::RE2::Options", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.re2::StringPiece", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %1930, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* %27, align 4
  %31 = icmp slt i32 %30, 1
  br i1 %31, label %1930, label %32

32:                                               ; preds = %25, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %25 ]
  %34 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 3, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %392

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %39 = load %"struct.extensions::api::declarative_net_request::Redirect"*, %"struct.extensions::api::declarative_net_request::Redirect"** %38, align 8
  %40 = icmp eq %"struct.extensions::api::declarative_net_request::Redirect"* %39, null
  br i1 %40, label %1930, label %41

41:                                               ; preds = %37
  call void @_ZN10extensions3api23declarative_net_request8RedirectC1EOS2_(%"struct.extensions::api::declarative_net_request::Redirect"* nonnull %15, %"struct.extensions::api::declarative_net_request::Redirect"* nonnull dereferenceable(32) %39) #12
  %42 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Redirect", %"struct.extensions::api::declarative_net_request::Redirect"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, null
  br i1 %44, label %87, label %45

45:                                               ; preds = %41
  %46 = bitcast %class.GURL* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %46) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 120, i1 false) #12
  %47 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %54 = select i1 %50, i8* %52, i8* %53
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %49 to i64
  %58 = select i1 %50, i64 %56, i64 %57
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %13, i8* %54, i64 %58) #12
  %59 = getelementptr inbounds %class.GURL, %class.GURL* %13, i64 0, i32 1
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %387, label %62

62:                                               ; preds = %45
  %63 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kJavaScriptSchemeE, i64 0, i64 0)) #12
  %64 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %13, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kJavaScriptSchemeE, i64 0, i64 0), i64 %63) #12
  br i1 %64, label %387, label %65

65:                                               ; preds = %62
  %66 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %67 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %69, label %84, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #11
  br label %79

79:                                               ; preds = %76, %71
  %80 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  %81 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #12
  %82 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  store i8 0, i8* %83, align 1
  store i8 0, i8* %81, align 1
  br label %387

84:                                               ; preds = %65
  %85 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #12
  store i8 1, i8* %67, align 8
  br label %387

87:                                               ; preds = %41
  %88 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Redirect", %"struct.extensions::api::declarative_net_request::Redirect"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %88, align 8
  %90 = icmp eq %"class.std::__1::basic_string"* %89, null
  br i1 %90, label %171, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %94 to i64
  %99 = select i1 %95, i64 %97, i64 %98
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %384, label %101

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %105 = select i1 %95, i8* %103, i8* %104
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 47
  br i1 %107, label %108, label %384

108:                                              ; preds = %101
  %109 = bitcast %class.GURL* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %109) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 120, i1 false) #12
  %110 = load i8, i8* %93, align 1
  %111 = icmp slt i8 %110, 0
  %112 = load i8*, i8** %102, align 8
  %113 = select i1 %111, i8* %112, i8* %104
  %114 = load i64, i64* %96, align 8
  %115 = zext i8 %110 to i64
  %116 = select i1 %111, i64 %114, i64 %115
  call void @_ZNK4GURL7ResolveEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull sret %14, %class.GURL* %1, i8* %113, i64 %116) #12
  %117 = getelementptr inbounds %class.GURL, %class.GURL* %14, i64 0, i32 1
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %387, label %120

120:                                              ; preds = %108
  %121 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %14) #12
  %122 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %123 = load i8, i8* %122, align 8, !range !2
  %124 = icmp eq i8 %123, 0
  %125 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %124, label %157, label %126

126:                                              ; preds = %120
  %127 = icmp eq %"class.std::__1::basic_string"* %125, %121
  br i1 %127, label %387, label %128

128:                                              ; preds = %126
  %129 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  %133 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %132, label %147, label %137

137:                                              ; preds = %128
  br i1 %136, label %141, label %138

138:                                              ; preds = %137
  %139 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  %140 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 24, i1 false) #12
  br label %387

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %125, i8* %143, i64 %145) #12
  br label %387

147:                                              ; preds = %128
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  %153 = zext i8 %135 to i64
  %154 = select i1 %136, i8* %149, i8* %152
  %155 = select i1 %136, i64 %151, i64 %153
  %156 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %125, i8* %154, i64 %155) #12
  br label %387

157:                                              ; preds = %120
  %158 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %157
  %163 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  %164 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 24, i1 false) #12
  br label %170

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = load i64, i64* %168, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %125, i8* %167, i64 %169) #12
  br label %170

170:                                              ; preds = %165, %162
  store i8 1, i8* %122, align 8
  br label %387

171:                                              ; preds = %87
  %172 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Redirect", %"struct.extensions::api::declarative_net_request::Redirect"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %173 = load %"struct.extensions::api::declarative_net_request::URLTransform"*, %"struct.extensions::api::declarative_net_request::URLTransform"** %172, align 8
  %174 = icmp eq %"struct.extensions::api::declarative_net_request::URLTransform"* %173, null
  br i1 %174, label %348, label %175

175:                                              ; preds = %171
  %176 = ptrtoint %"struct.extensions::api::declarative_net_request::URLTransform"* %173 to i64
  %177 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 15
  store %"struct.extensions::api::declarative_net_request::URLTransform"* null, %"struct.extensions::api::declarative_net_request::URLTransform"** %172, align 8
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = load %"struct.extensions::api::declarative_net_request::URLTransform"*, %"struct.extensions::api::declarative_net_request::URLTransform"** %178, align 8
  %180 = bitcast %"class.std::__1::unique_ptr"* %177 to i64*
  store i64 %176, i64* %180, align 8
  %181 = icmp eq %"struct.extensions::api::declarative_net_request::URLTransform"* %179, null
  br i1 %181, label %185, label %182

182:                                              ; preds = %175
  call void @_ZN10extensions3api23declarative_net_request12URLTransformD1Ev(%"struct.extensions::api::declarative_net_request::URLTransform"* nonnull %179) #12
  %183 = bitcast %"struct.extensions::api::declarative_net_request::URLTransform"* %179 to i8*
  call void @_ZdlPv(i8* %183) #11
  %184 = load %"struct.extensions::api::declarative_net_request::URLTransform"*, %"struct.extensions::api::declarative_net_request::URLTransform"** %178, align 8
  br label %185

185:                                              ; preds = %182, %175
  %186 = phi %"struct.extensions::api::declarative_net_request::URLTransform"* [ %173, %175 ], [ %184, %182 ]
  %187 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %186, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %187, align 8
  %189 = icmp eq %"class.std::__1::basic_string"* %188, null
  br i1 %189, label %268, label %190

190:                                              ; preds = %185
  %191 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN10extensions23declarative_net_request24kAllowedTransformSchemesE, i64 0, i64 0), align 16
  %192 = call i64 @strlen(i8* %191) #12
  %193 = bitcast %"class.std::__1::basic_string"* %188 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = zext i8 %195 to i64
  %200 = select i1 %196, i64 %198, i64 %199
  %201 = icmp eq i64 %192, %200
  br i1 %201, label %202, label %213

202:                                              ; preds = %190
  %203 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %188, i64 0, i64 -1, i8* %191, i64 %192) #12
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %268, label %205

205:                                              ; preds = %202
  %206 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %187, align 8
  %207 = bitcast %"class.std::__1::basic_string"* %206 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %206, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %211 = load i64, i64* %210, align 8
  %212 = zext i8 %209 to i64
  br label %213

213:                                              ; preds = %205, %190
  %214 = phi i64 [ %212, %205 ], [ %199, %190 ]
  %215 = phi i64 [ %211, %205 ], [ %198, %190 ]
  %216 = phi i8 [ %209, %205 ], [ %195, %190 ]
  %217 = phi %"class.std::__1::basic_string"* [ %206, %205 ], [ %188, %190 ]
  %218 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN10extensions23declarative_net_request24kAllowedTransformSchemesE, i64 0, i64 1), align 8
  %219 = call i64 @strlen(i8* %218) #12
  %220 = icmp slt i8 %216, 0
  %221 = select i1 %220, i64 %215, i64 %214
  %222 = icmp eq i64 %219, %221
  br i1 %222, label %223, label %234

223:                                              ; preds = %213
  %224 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %217, i64 0, i64 -1, i8* %218, i64 %219) #12
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %268, label %226

226:                                              ; preds = %223
  %227 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %187, align 8
  %228 = bitcast %"class.std::__1::basic_string"* %227 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %228, i64 0, i32 1, i32 0
  %230 = load i8, i8* %229, align 1
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = zext i8 %230 to i64
  br label %234

234:                                              ; preds = %226, %213
  %235 = phi i64 [ %233, %226 ], [ %214, %213 ]
  %236 = phi i64 [ %232, %226 ], [ %215, %213 ]
  %237 = phi i8 [ %230, %226 ], [ %216, %213 ]
  %238 = phi %"class.std::__1::basic_string"* [ %227, %226 ], [ %217, %213 ]
  %239 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN10extensions23declarative_net_request24kAllowedTransformSchemesE, i64 0, i64 2), align 16
  %240 = call i64 @strlen(i8* %239) #12
  %241 = icmp slt i8 %237, 0
  %242 = select i1 %241, i64 %236, i64 %235
  %243 = icmp eq i64 %240, %242
  br i1 %243, label %244, label %255

244:                                              ; preds = %234
  %245 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %238, i64 0, i64 -1, i8* %239, i64 %240) #12
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %268, label %247

247:                                              ; preds = %244
  %248 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %187, align 8
  %249 = bitcast %"class.std::__1::basic_string"* %248 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %249, i64 0, i32 1, i32 0
  %251 = load i8, i8* %250, align 1
  %252 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %248, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %253 = load i64, i64* %252, align 8
  %254 = zext i8 %251 to i64
  br label %255

255:                                              ; preds = %247, %234
  %256 = phi i64 [ %254, %247 ], [ %235, %234 ]
  %257 = phi i64 [ %253, %247 ], [ %236, %234 ]
  %258 = phi i8 [ %251, %247 ], [ %237, %234 ]
  %259 = phi %"class.std::__1::basic_string"* [ %248, %247 ], [ %238, %234 ]
  %260 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN10extensions23declarative_net_request24kAllowedTransformSchemesE, i64 0, i64 3), align 8
  %261 = call i64 @strlen(i8* %260) #12
  %262 = icmp slt i8 %258, 0
  %263 = select i1 %262, i64 %257, i64 %256
  %264 = icmp eq i64 %261, %263
  br i1 %264, label %265, label %384

265:                                              ; preds = %255
  %266 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %259, i64 0, i64 -1, i8* %260, i64 %261) #12
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %384

268:                                              ; preds = %265, %244, %223, %202, %185
  %269 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %186, i64 0, i32 2, i32 0, i32 0, i32 0
  %270 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %269, align 8
  %271 = icmp eq %"class.std::__1::basic_string"* %270, null
  br i1 %271, label %299, label %272

272:                                              ; preds = %268
  %273 = bitcast %"class.std::__1::basic_string"* %270 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %273, i64 0, i32 1, i32 0
  %275 = load i8, i8* %274, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %280

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %279 = load i64, i64* %278, align 8
  br label %282

280:                                              ; preds = %272
  %281 = zext i8 %275 to i64
  br label %282

282:                                              ; preds = %280, %277
  %283 = phi i64 [ %279, %277 ], [ %281, %280 ]
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %299, label %285

285:                                              ; preds = %282
  %286 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %286) #12
  store i32 0, i32* %12, align 4
  %287 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load i8*, i8** %287, align 8
  %289 = bitcast %"class.std::__1::basic_string"* %270 to i8*
  %290 = select i1 %276, i8* %288, i8* %289
  %291 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %292 = load i64, i64* %291, align 8
  %293 = zext i8 %275 to i64
  %294 = select i1 %276, i64 %292, i64 %293
  %295 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %290, i64 %294, i32* nonnull %12) #12
  %296 = load i32, i32* %12, align 4
  %297 = icmp ult i32 %296, 65536
  %298 = and i1 %295, %297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %286) #12
  br i1 %298, label %299, label %384

299:                                              ; preds = %285, %282, %268
  %300 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %186, i64 0, i32 4, i32 0, i32 0, i32 0
  %301 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %300, align 8
  %302 = icmp eq %"class.std::__1::basic_string"* %301, null
  br i1 %302, label %320, label %303

303:                                              ; preds = %299
  %304 = bitcast %"class.std::__1::basic_string"* %301 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %305 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %304, i64 0, i32 1, i32 0
  %306 = load i8, i8* %305, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %303
  %309 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %310 = load i64, i64* %309, align 8
  br label %313

311:                                              ; preds = %303
  %312 = zext i8 %306 to i64
  br label %313

313:                                              ; preds = %311, %308
  %314 = phi i64 [ %310, %308 ], [ %312, %311 ]
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %320, label %316

316:                                              ; preds = %313
  %317 = call dereferenceable(1) i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE2atEm(%"class.std::__1::basic_string"* nonnull %301, i64 0) #12
  %318 = load i8, i8* %317, align 1
  %319 = icmp eq i8 %318, 63
  br i1 %319, label %320, label %384

320:                                              ; preds = %316, %313, %299
  %321 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %186, i64 0, i32 6, i32 0, i32 0, i32 0
  %322 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %321, align 8
  %323 = icmp eq %"class.std::__1::basic_string"* %322, null
  br i1 %323, label %341, label %324

324:                                              ; preds = %320
  %325 = bitcast %"class.std::__1::basic_string"* %322 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %326 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %325, i64 0, i32 1, i32 0
  %327 = load i8, i8* %326, align 1
  %328 = icmp slt i8 %327, 0
  br i1 %328, label %329, label %332

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %322, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %331 = load i64, i64* %330, align 8
  br label %334

332:                                              ; preds = %324
  %333 = zext i8 %327 to i64
  br label %334

334:                                              ; preds = %332, %329
  %335 = phi i64 [ %331, %329 ], [ %333, %332 ]
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %341, label %337

337:                                              ; preds = %334
  %338 = call dereferenceable(1) i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE2atEm(%"class.std::__1::basic_string"* nonnull %322, i64 0) #12
  %339 = load i8, i8* %338, align 1
  %340 = icmp eq i8 %339, 35
  br i1 %340, label %341, label %384

341:                                              ; preds = %337, %334, %320
  %342 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %300, align 8
  %343 = icmp eq %"class.std::__1::basic_string"* %342, null
  br i1 %343, label %386, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %186, i64 0, i32 5, i32 0, i32 0, i32 0
  %346 = load %"struct.extensions::api::declarative_net_request::QueryTransform"*, %"struct.extensions::api::declarative_net_request::QueryTransform"** %345, align 8
  %347 = icmp eq %"struct.extensions::api::declarative_net_request::QueryTransform"* %346, null
  br i1 %347, label %386, label %384

348:                                              ; preds = %171
  %349 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Redirect", %"struct.extensions::api::declarative_net_request::Redirect"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %350 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %349, align 8
  %351 = icmp eq %"class.std::__1::basic_string"* %350, null
  br i1 %351, label %384, label %352

352:                                              ; preds = %348
  %353 = bitcast %"class.std::__1::basic_string"* %350 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %354 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %353, i64 0, i32 1, i32 0
  %355 = load i8, i8* %354, align 1
  %356 = icmp slt i8 %355, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %352
  %358 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %350, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %359 = load i64, i64* %358, align 8
  br label %362

360:                                              ; preds = %352
  %361 = zext i8 %355 to i64
  br label %362

362:                                              ; preds = %360, %357
  %363 = phi i64 [ %359, %357 ], [ %361, %360 ]
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %384, label %365

365:                                              ; preds = %362
  %366 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %367 = load i8, i8* %366, align 8, !range !2
  %368 = icmp eq i8 %367, 0
  %369 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %368, label %381, label %370

370:                                              ; preds = %365
  %371 = bitcast %"class.std::__1::basic_string"* %369 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  %373 = load i8, i8* %372, align 1
  %374 = icmp slt i8 %373, 0
  br i1 %374, label %375, label %378

375:                                              ; preds = %370
  %376 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %369, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load i8*, i8** %376, align 8
  call void @_ZdlPv(i8* %377) #11
  br label %378

378:                                              ; preds = %375, %370
  %379 = bitcast %"class.std::__1::basic_string"* %369 to i8*
  %380 = bitcast %"class.std::__1::basic_string"* %350 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %379, i8* nonnull align 8 %380, i64 24, i1 false) #12
  store i8 0, i8* %354, align 1
  store i8 0, i8* %380, align 1
  br label %386

381:                                              ; preds = %365
  %382 = bitcast %"class.std::__1::basic_string"* %369 to i8*
  %383 = bitcast %"class.std::__1::basic_string"* %350 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %382, i8* nonnull align 8 %383, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %383, i8 0, i64 24, i1 false) #12
  store i8 1, i8* %366, align 8
  br label %386

384:                                              ; preds = %101, %362, %348, %285, %316, %337, %344, %255, %265, %91
  %385 = phi i32 [ 19, %91 ], [ 20, %265 ], [ 20, %255 ], [ 24, %344 ], [ 23, %337 ], [ 22, %316 ], [ 21, %285 ], [ 18, %348 ], [ 32, %362 ], [ 19, %101 ]
  call void @_ZN10extensions3api23declarative_net_request8RedirectD1Ev(%"struct.extensions::api::declarative_net_request::Redirect"* nonnull %15) #12
  br label %1930

386:                                              ; preds = %378, %381, %344, %341
  call void @_ZN10extensions3api23declarative_net_request8RedirectD1Ev(%"struct.extensions::api::declarative_net_request::Redirect"* nonnull %15) #12
  br label %392

387:                                              ; preds = %108, %126, %138, %141, %147, %170, %45, %62, %79, %84
  %388 = phi %class.GURL* [ %13, %84 ], [ %13, %79 ], [ %13, %62 ], [ %13, %45 ], [ %14, %170 ], [ %14, %147 ], [ %14, %141 ], [ %14, %138 ], [ %14, %126 ], [ %14, %108 ]
  %389 = phi i8* [ %46, %84 ], [ %46, %79 ], [ %46, %62 ], [ %46, %45 ], [ %109, %170 ], [ %109, %147 ], [ %109, %141 ], [ %109, %138 ], [ %109, %126 ], [ %109, %108 ]
  %390 = phi i32 [ 1, %84 ], [ 1, %79 ], [ 25, %62 ], [ 11, %45 ], [ 1, %170 ], [ 1, %147 ], [ 1, %141 ], [ 1, %138 ], [ 1, %126 ], [ 19, %108 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %388) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %389) #12
  call void @_ZN10extensions3api23declarative_net_request8RedirectD1Ev(%"struct.extensions::api::declarative_net_request::Redirect"* nonnull %15) #12
  %391 = icmp eq i32 %390, 1
  br i1 %391, label %392, label %1930

392:                                              ; preds = %386, %387, %32
  %393 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0
  %394 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %393, align 8
  %395 = icmp eq %"class.std::__1::vector"* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %392
  %397 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %394, i64 0, i32 0, i32 0
  %398 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %397, align 8
  %399 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %394, i64 0, i32 0, i32 1
  %400 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %399, align 8
  %401 = icmp eq %"class.std::__1::basic_string"* %398, %400
  br i1 %401, label %1930, label %402

402:                                              ; preds = %392, %396
  %403 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 5, i32 0, i32 0, i32 0
  %404 = load %"class.std::__1::vector.68"*, %"class.std::__1::vector.68"** %403, align 8
  %405 = icmp eq %"class.std::__1::vector.68"* %404, null
  br i1 %405, label %412, label %406

406:                                              ; preds = %402
  %407 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %404, i64 0, i32 0, i32 0
  %408 = load i32*, i32** %407, align 8
  %409 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %404, i64 0, i32 0, i32 1
  %410 = load i32*, i32** %409, align 8
  %411 = icmp eq i32* %408, %410
  br i1 %411, label %1930, label %412

412:                                              ; preds = %402, %406
  %413 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 7, i32 0, i32 0, i32 0
  %414 = load %"class.std::__1::vector.81"*, %"class.std::__1::vector.81"** %413, align 8
  %415 = icmp eq %"class.std::__1::vector.81"* %414, null
  br i1 %415, label %422, label %416

416:                                              ; preds = %412
  %417 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %414, i64 0, i32 0, i32 0
  %418 = load i32*, i32** %417, align 8
  %419 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %414, i64 0, i32 0, i32 1
  %420 = load i32*, i32** %419, align 8
  %421 = icmp eq i32* %418, %420
  br i1 %421, label %1930, label %422

422:                                              ; preds = %412, %416
  %423 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 10, i32 0, i32 0, i32 0
  %424 = load %"class.std::__1::vector.41"*, %"class.std::__1::vector.41"** %423, align 8
  %425 = icmp ne %"class.std::__1::vector.41"* %424, null
  br i1 %425, label %426, label %432

426:                                              ; preds = %422
  %427 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %424, i64 0, i32 0, i32 0
  %428 = load i32*, i32** %427, align 8
  %429 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %424, i64 0, i32 0, i32 1
  %430 = load i32*, i32** %429, align 8
  %431 = icmp eq i32* %428, %430
  br i1 %431, label %1930, label %432

432:                                              ; preds = %426, %422
  %433 = icmp eq i32 %2, -1
  br i1 %433, label %439, label %434

434:                                              ; preds = %432
  br i1 %425, label %1930, label %435

435:                                              ; preds = %434
  %436 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 11, i32 0, i32 0, i32 0
  %437 = load %"class.std::__1::vector.41"*, %"class.std::__1::vector.41"** %436, align 8
  %438 = icmp eq %"class.std::__1::vector.41"* %437, null
  br i1 %438, label %439, label %1930

439:                                              ; preds = %435, %432
  %440 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %441 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %440, align 8
  %442 = icmp eq %"class.std::__1::basic_string"* %441, null
  %443 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %444 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %443, align 8
  br i1 %442, label %449, label %445

445:                                              ; preds = %439
  %446 = icmp eq %"class.std::__1::basic_string"* %444, null
  br i1 %446, label %447, label %1930

447:                                              ; preds = %445
  %448 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  br label %452

449:                                              ; preds = %439
  %450 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %451 = icmp eq %"class.std::__1::basic_string"* %444, null
  br i1 %451, label %452, label %457

452:                                              ; preds = %449, %447
  %453 = phi %"class.std::__1::basic_string"** [ %448, %447 ], [ %450, %449 ]
  %454 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %455 = load i8, i8* %454, align 8, !range !2
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %570, label %1930

457:                                              ; preds = %449
  %458 = bitcast %"class.std::__1::basic_string"* %444 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %459 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %458, i64 0, i32 1, i32 0
  %460 = load i8, i8* %459, align 1
  %461 = icmp slt i8 %460, 0
  br i1 %461, label %462, label %465

462:                                              ; preds = %457
  %463 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %464 = load i64, i64* %463, align 8
  br label %467

465:                                              ; preds = %457
  %466 = zext i8 %460 to i64
  br label %467

467:                                              ; preds = %462, %465
  %468 = phi i64 [ %464, %462 ], [ %466, %465 ]
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %1930, label %470

470:                                              ; preds = %467
  %471 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %472 = load i8*, i8** %471, align 8
  %473 = bitcast %"class.std::__1::basic_string"* %444 to i8*
  %474 = select i1 %461, i8* %472, i8* %473
  %475 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %476 = load i64, i64* %475, align 8
  %477 = zext i8 %460 to i64
  %478 = select i1 %461, i64 %476, i64 %477
  %479 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %474, i64 %478) #12
  br i1 %479, label %480, label %1930

480:                                              ; preds = %470
  %481 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %482 = load i8, i8* %481, align 8, !range !2
  %483 = icmp ne i8 %482, 0
  %484 = bitcast %"class.re2::RE2"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %484) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %484, i8 -86, i64 200, i1 false)
  %485 = bitcast %"class.re2::StringPiece"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %485) #12
  %486 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %450, align 8
  %487 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %17, i64 0, i32 0
  %488 = bitcast %"class.std::__1::basic_string"* %486 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %489 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %488, i64 0, i32 1, i32 0
  %490 = load i8, i8* %489, align 1
  %491 = icmp slt i8 %490, 0
  %492 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %486, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = load i8*, i8** %492, align 8
  %494 = bitcast %"class.std::__1::basic_string"* %486 to i8*
  %495 = select i1 %491, i8* %493, i8* %494
  store i8* %495, i8** %487, align 8
  %496 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %17, i64 0, i32 1
  %497 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %486, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %498 = load i64, i64* %497, align 8
  %499 = zext i8 %490 to i64
  %500 = select i1 %491, i64 %498, i64 %499
  store i64 %500, i64* %496, align 8
  %501 = bitcast %"class.re2::RE2::Options"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %501) #12
  %502 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %503 = load i8*, i8** %502, align 8
  %504 = icmp eq i8* %503, null
  br i1 %504, label %508, label %505

505:                                              ; preds = %480
  %506 = load i8, i8* %503, align 1, !range !2
  %507 = icmp ne i8 %506, 0
  br label %508

508:                                              ; preds = %480, %505
  %509 = phi i1 [ %507, %505 ], [ true, %480 ]
  call void @_ZN10extensions23declarative_net_request16CreateRE2OptionsEbb(%"class.re2::RE2::Options"* nonnull sret %18, i1 zeroext %509, i1 zeroext %483) #12
  call void @_ZN3re23RE2C1ERKNS_11StringPieceERKNS0_7OptionsE(%"class.re2::RE2"* nonnull %16, %"class.re2::StringPiece"* nonnull dereferenceable(16) %17, %"class.re2::RE2::Options"* nonnull dereferenceable(24) %18) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %501) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %485) #12
  %510 = getelementptr inbounds %"class.re2::RE2", %"class.re2::RE2"* %16, i64 0, i32 4
  %511 = load i32, i32* %510, align 8
  switch i32 %511, label %564 [
    i32 15, label %512
    i32 0, label %521
  ]

512:                                              ; preds = %508
  %513 = load atomic i64, i64* @_ZZN10extensions23declarative_net_request12_GLOBAL__N_119RecordLargeRegexUMAEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %514 = inttoptr i64 %513 to %"class.base::HistogramBase"*
  %515 = icmp eq i64 %513, 0
  br i1 %515, label %516, label %519

516:                                              ; preds = %512
  %517 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions23declarative_net_request22kIsLargeRegexHistogramE, i64 0, i64 0), i32 1) #12
  %518 = ptrtoint %"class.base::HistogramBase"* %517 to i64
  store atomic i64 %518, i64* @_ZZN10extensions23declarative_net_request12_GLOBAL__N_119RecordLargeRegexUMAEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %519

519:                                              ; preds = %512, %516
  %520 = phi %"class.base::HistogramBase"* [ %514, %512 ], [ %517, %516 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %520, i1 zeroext true) #12
  br label %564

521:                                              ; preds = %508
  %522 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %522) #12
  %523 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %522, i8 0, i64 24, i1 false) #12
  %524 = load i8, i8* %481, align 8, !range !2
  %525 = icmp eq i8 %524, 0
  %526 = bitcast %"class.re2::StringPiece"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %526) #12
  br i1 %525, label %544, label %527

527:                                              ; preds = %521
  %528 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %529 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %20, i64 0, i32 0
  %530 = bitcast %"class.std::__1::basic_string"* %528 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %531 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %530, i64 0, i32 1, i32 0
  %532 = load i8, i8* %531, align 1
  %533 = icmp slt i8 %532, 0
  %534 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %528, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %535 = load i8*, i8** %534, align 8
  %536 = bitcast %"class.std::__1::basic_string"* %528 to i8*
  %537 = select i1 %533, i8* %535, i8* %536
  store i8* %537, i8** %529, align 8
  %538 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %20, i64 0, i32 1
  %539 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %540 = load i64, i64* %539, align 8
  %541 = zext i8 %532 to i64
  %542 = select i1 %533, i64 %540, i64 %541
  store i64 %542, i64* %538, align 8
  %543 = call zeroext i1 @_ZNK3re23RE218CheckRewriteStringERKNS_11StringPieceEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.re2::RE2"* nonnull %16, %"class.re2::StringPiece"* nonnull dereferenceable(16) %20, %"class.std::__1::basic_string"* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %526) #12
  br i1 %543, label %545, label %554

544:                                              ; preds = %521
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %526) #12
  br label %545

545:                                              ; preds = %527, %544
  %546 = load atomic i64, i64* @_ZZN10extensions23declarative_net_request12_GLOBAL__N_119RecordLargeRegexUMAEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %547 = inttoptr i64 %546 to %"class.base::HistogramBase"*
  %548 = icmp eq i64 %546, 0
  br i1 %548, label %549, label %552

549:                                              ; preds = %545
  %550 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions23declarative_net_request22kIsLargeRegexHistogramE, i64 0, i64 0), i32 1) #12
  %551 = ptrtoint %"class.base::HistogramBase"* %550 to i64
  store atomic i64 %551, i64* @_ZZN10extensions23declarative_net_request12_GLOBAL__N_119RecordLargeRegexUMAEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %552

552:                                              ; preds = %545, %549
  %553 = phi %"class.base::HistogramBase"* [ %547, %545 ], [ %550, %549 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %553, i1 zeroext false) #12
  br label %554

554:                                              ; preds = %527, %552
  %555 = phi i32 [ 0, %552 ], [ 1, %527 ]
  %556 = phi i32 [ 1, %552 ], [ 32, %527 ]
  %557 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %558 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %557, i64 0, i32 1, i32 0
  %559 = load i8, i8* %558, align 1
  %560 = icmp slt i8 %559, 0
  br i1 %560, label %561, label %563

561:                                              ; preds = %554
  %562 = load i8*, i8** %523, align 8
  call void @_ZdlPv(i8* %562) #11
  br label %563

563:                                              ; preds = %554, %561
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %522) #12
  br label %564

564:                                              ; preds = %508, %563, %519
  %565 = phi i32 [ 1, %519 ], [ %555, %563 ], [ 1, %508 ]
  %566 = phi i32 [ 29, %519 ], [ %556, %563 ], [ 28, %508 ]
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %484) #12
  %567 = icmp eq i32 %565, 0
  br i1 %567, label %568, label %1930

568:                                              ; preds = %564
  %569 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %440, align 8
  br label %570

570:                                              ; preds = %568, %452
  %571 = phi i1 [ true, %568 ], [ false, %452 ]
  %572 = phi %"class.std::__1::basic_string"** [ %450, %568 ], [ %453, %452 ]
  %573 = phi %"class.std::__1::basic_string"* [ %569, %568 ], [ %441, %452 ]
  %574 = icmp eq %"class.std::__1::basic_string"* %573, null
  br i1 %574, label %598, label %575

575:                                              ; preds = %570
  %576 = bitcast %"class.std::__1::basic_string"* %573 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %577 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %576, i64 0, i32 1, i32 0
  %578 = load i8, i8* %577, align 1
  %579 = icmp slt i8 %578, 0
  br i1 %579, label %580, label %583

580:                                              ; preds = %575
  %581 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %573, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %582 = load i64, i64* %581, align 8
  br label %585

583:                                              ; preds = %575
  %584 = zext i8 %578 to i64
  br label %585

585:                                              ; preds = %580, %583
  %586 = phi i64 [ %582, %580 ], [ %584, %583 ]
  %587 = icmp eq i64 %586, 0
  br i1 %587, label %1930, label %588

588:                                              ; preds = %585
  %589 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %573, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %590 = load i8*, i8** %589, align 8
  %591 = bitcast %"class.std::__1::basic_string"* %573 to i8*
  %592 = select i1 %579, i8* %590, i8* %591
  %593 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %573, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %594 = load i64, i64* %593, align 8
  %595 = zext i8 %578 to i64
  %596 = select i1 %579, i64 %594, i64 %595
  %597 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %592, i64 %596) #12
  br i1 %597, label %598, label %1930

598:                                              ; preds = %570, %588
  %599 = load i32, i32* %34, align 8
  %600 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 0
  store i32 %599, i32* %600, align 8
  %601 = load i32, i32* %22, align 8
  %602 = icmp sgt i32 %601, -1
  br i1 %602, label %604, label %603, !prof !3

603:                                              ; preds = %598
  call void @llvm.trap() #12
  unreachable

604:                                              ; preds = %598
  %605 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 1
  store i32 %601, i32* %605, align 4
  %606 = shl i32 %33, 8
  %607 = add i32 %599, -1
  %608 = icmp ult i32 %607, 6
  br i1 %608, label %609, label %613

609:                                              ; preds = %604
  %610 = sext i32 %607 to i64
  %611 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN10extensions23declarative_net_request26ComputeIndexedRulePriorityEiNS_3api23declarative_net_request14RuleActionTypeE, i64 0, i64 %610
  %612 = load i32, i32* %611, align 4
  br label %613

613:                                              ; preds = %604, %609
  %614 = phi i32 [ %612, %609 ], [ 0, %604 ]
  %615 = or i32 %614, %606
  %616 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 2
  store i32 %615, i32* %616, align 8
  %617 = load i32, i32* %34, align 8
  %618 = icmp eq i32 %617, 3
  %619 = zext i1 %618 to i8
  %620 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %621 = load i8*, i8** %620, align 8
  %622 = icmp eq i8* %621, null
  br i1 %622, label %627, label %623

623:                                              ; preds = %613
  %624 = load i8, i8* %621, align 1, !range !2
  %625 = icmp eq i8 %624, 0
  %626 = or i8 %619, 8
  br i1 %625, label %628, label %627

627:                                              ; preds = %623, %613
  br label %628

628:                                              ; preds = %627, %623
  %629 = phi i8 [ %619, %627 ], [ %626, %623 ]
  %630 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 9
  %631 = load i32, i32* %630, align 8
  switch i32 %631, label %638 [
    i32 1, label %632
    i32 2, label %634
    i32 0, label %636
  ]

632:                                              ; preds = %628
  %633 = or i8 %629, 2
  br label %638

634:                                              ; preds = %628
  %635 = or i8 %629, 4
  br label %638

636:                                              ; preds = %628
  %637 = or i8 %629, 6
  br label %638

638:                                              ; preds = %628, %632, %634, %636
  %639 = phi i8 [ %629, %628 ], [ %637, %636 ], [ %635, %634 ], [ %633, %632 ]
  %640 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 3
  store i8 %639, i8* %640, align 4
  %641 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 6
  store i8 0, i8* %641, align 2
  %642 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 5
  %643 = load %"class.std::__1::vector.81"*, %"class.std::__1::vector.81"** %413, align 8
  %644 = icmp eq %"class.std::__1::vector.81"* %643, null
  br i1 %644, label %696, label %645

645:                                              ; preds = %638
  %646 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %643, i64 0, i32 0, i32 0
  %647 = load i32*, i32** %646, align 8
  %648 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %643, i64 0, i32 0, i32 1
  %649 = load i32*, i32** %648, align 8
  %650 = icmp eq i32* %647, %649
  br i1 %650, label %696, label %651

651:                                              ; preds = %645
  %652 = ptrtoint i32* %647 to i64
  %653 = getelementptr i32, i32* %649, i64 -1
  %654 = ptrtoint i32* %653 to i64
  %655 = sub i64 %654, %652
  %656 = lshr i64 %655, 2
  %657 = add nuw nsw i64 %656, 1
  %658 = and i64 %657, 1
  %659 = icmp eq i64 %656, 0
  br i1 %659, label %680, label %660

660:                                              ; preds = %651
  %661 = sub nuw nsw i64 %657, %658
  br label %662

662:                                              ; preds = %1966, %660
  %663 = phi i16 [ 0, %660 ], [ %1968, %1966 ]
  %664 = phi i32* [ %647, %660 ], [ %1969, %1966 ]
  %665 = phi i64 [ %661, %660 ], [ %1970, %1966 ]
  %666 = load i32, i32* %664, align 4
  %667 = add i32 %666, -1
  %668 = icmp ult i32 %667, 7
  br i1 %668, label %669, label %673

669:                                              ; preds = %662
  %670 = sext i32 %667 to i64
  %671 = getelementptr inbounds [7 x i16], [7 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.6, i64 0, i64 %670
  %672 = load i16, i16* %671, align 2
  br label %673

673:                                              ; preds = %669, %662
  %674 = phi i16 [ 0, %662 ], [ %672, %669 ]
  %675 = or i16 %674, %663
  %676 = getelementptr inbounds i32, i32* %664, i64 1
  %677 = load i32, i32* %676, align 4
  %678 = add i32 %677, -1
  %679 = icmp ult i32 %678, 7
  br i1 %679, label %1962, label %1966

680:                                              ; preds = %1966, %651
  %681 = phi i16 [ undef, %651 ], [ %1968, %1966 ]
  %682 = phi i16 [ 0, %651 ], [ %1968, %1966 ]
  %683 = phi i32* [ %647, %651 ], [ %1969, %1966 ]
  %684 = icmp eq i64 %658, 0
  br i1 %684, label %696, label %685

685:                                              ; preds = %680
  %686 = load i32, i32* %683, align 4
  %687 = add i32 %686, -1
  %688 = icmp ult i32 %687, 7
  br i1 %688, label %689, label %693

689:                                              ; preds = %685
  %690 = sext i32 %687 to i64
  %691 = getelementptr inbounds [7 x i16], [7 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.6, i64 0, i64 %690
  %692 = load i16, i16* %691, align 2
  br label %693

693:                                              ; preds = %685, %689
  %694 = phi i16 [ 0, %685 ], [ %692, %689 ]
  %695 = or i16 %694, %682
  br label %696

696:                                              ; preds = %693, %680, %645, %638
  %697 = phi i16 [ 0, %638 ], [ 0, %645 ], [ %681, %680 ], [ %695, %693 ]
  %698 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 8, i32 0, i32 0, i32 0
  %699 = load %"class.std::__1::vector.81"*, %"class.std::__1::vector.81"** %698, align 8
  %700 = icmp eq %"class.std::__1::vector.81"* %699, null
  br i1 %700, label %752, label %701

701:                                              ; preds = %696
  %702 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %699, i64 0, i32 0, i32 0
  %703 = load i32*, i32** %702, align 8
  %704 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %699, i64 0, i32 0, i32 1
  %705 = load i32*, i32** %704, align 8
  %706 = icmp eq i32* %703, %705
  br i1 %706, label %752, label %707

707:                                              ; preds = %701
  %708 = ptrtoint i32* %703 to i64
  %709 = getelementptr i32, i32* %705, i64 -1
  %710 = ptrtoint i32* %709 to i64
  %711 = sub i64 %710, %708
  %712 = lshr i64 %711, 2
  %713 = add nuw nsw i64 %712, 1
  %714 = and i64 %713, 1
  %715 = icmp eq i64 %712, 0
  br i1 %715, label %736, label %716

716:                                              ; preds = %707
  %717 = sub nuw nsw i64 %713, %714
  br label %718

718:                                              ; preds = %1956, %716
  %719 = phi i16 [ 0, %716 ], [ %1958, %1956 ]
  %720 = phi i32* [ %703, %716 ], [ %1959, %1956 ]
  %721 = phi i64 [ %717, %716 ], [ %1960, %1956 ]
  %722 = load i32, i32* %720, align 4
  %723 = add i32 %722, -1
  %724 = icmp ult i32 %723, 7
  br i1 %724, label %725, label %729

725:                                              ; preds = %718
  %726 = sext i32 %723 to i64
  %727 = getelementptr inbounds [7 x i16], [7 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.6, i64 0, i64 %726
  %728 = load i16, i16* %727, align 2
  br label %729

729:                                              ; preds = %725, %718
  %730 = phi i16 [ 0, %718 ], [ %728, %725 ]
  %731 = or i16 %730, %719
  %732 = getelementptr inbounds i32, i32* %720, i64 1
  %733 = load i32, i32* %732, align 4
  %734 = add i32 %733, -1
  %735 = icmp ult i32 %734, 7
  br i1 %735, label %1952, label %1956

736:                                              ; preds = %1956, %707
  %737 = phi i16 [ undef, %707 ], [ %1958, %1956 ]
  %738 = phi i16 [ 0, %707 ], [ %1958, %1956 ]
  %739 = phi i32* [ %703, %707 ], [ %1959, %1956 ]
  %740 = icmp eq i64 %714, 0
  br i1 %740, label %752, label %741

741:                                              ; preds = %736
  %742 = load i32, i32* %739, align 4
  %743 = add i32 %742, -1
  %744 = icmp ult i32 %743, 7
  br i1 %744, label %745, label %749

745:                                              ; preds = %741
  %746 = sext i32 %743 to i64
  %747 = getelementptr inbounds [7 x i16], [7 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.6, i64 0, i64 %746
  %748 = load i16, i16* %747, align 2
  br label %749

749:                                              ; preds = %741, %745
  %750 = phi i16 [ 0, %741 ], [ %748, %745 ]
  %751 = or i16 %750, %738
  br label %752

752:                                              ; preds = %749, %736, %701, %696
  %753 = phi i16 [ 0, %696 ], [ 0, %701 ], [ %737, %736 ], [ %751, %749 ]
  %754 = and i16 %753, %697
  %755 = icmp eq i16 %754, 0
  br i1 %755, label %756, label %1930

756:                                              ; preds = %752
  %757 = icmp eq i16 %697, 0
  br i1 %757, label %758, label %763

758:                                              ; preds = %756
  %759 = icmp eq i16 %753, 0
  br i1 %759, label %763, label %760

760:                                              ; preds = %758
  %761 = and i16 %753, 127
  %762 = xor i16 %761, 127
  br label %763

763:                                              ; preds = %758, %756, %760
  %764 = phi i16 [ %762, %760 ], [ %697, %756 ], [ 127, %758 ]
  store i16 %764, i16* %642, align 2
  %765 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 4
  %766 = load %"class.std::__1::vector.68"*, %"class.std::__1::vector.68"** %403, align 8
  %767 = icmp eq %"class.std::__1::vector.68"* %766, null
  br i1 %767, label %819, label %768

768:                                              ; preds = %763
  %769 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %766, i64 0, i32 0, i32 0
  %770 = load i32*, i32** %769, align 8
  %771 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %766, i64 0, i32 0, i32 1
  %772 = load i32*, i32** %771, align 8
  %773 = icmp eq i32* %770, %772
  br i1 %773, label %819, label %774

774:                                              ; preds = %768
  %775 = ptrtoint i32* %770 to i64
  %776 = getelementptr i32, i32* %772, i64 -1
  %777 = ptrtoint i32* %776 to i64
  %778 = sub i64 %777, %775
  %779 = lshr i64 %778, 2
  %780 = add nuw nsw i64 %779, 1
  %781 = and i64 %780, 1
  %782 = icmp eq i64 %779, 0
  br i1 %782, label %803, label %783

783:                                              ; preds = %774
  %784 = sub nuw nsw i64 %780, %781
  br label %785

785:                                              ; preds = %1946, %783
  %786 = phi i16 [ 0, %783 ], [ %1948, %1946 ]
  %787 = phi i32* [ %770, %783 ], [ %1949, %1946 ]
  %788 = phi i64 [ %784, %783 ], [ %1950, %1946 ]
  %789 = load i32, i32* %787, align 4
  %790 = add i32 %789, -1
  %791 = icmp ult i32 %790, 13
  br i1 %791, label %792, label %796

792:                                              ; preds = %785
  %793 = sext i32 %790 to i64
  %794 = getelementptr inbounds [13 x i16], [13 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.8, i64 0, i64 %793
  %795 = load i16, i16* %794, align 2
  br label %796

796:                                              ; preds = %792, %785
  %797 = phi i16 [ 0, %785 ], [ %795, %792 ]
  %798 = or i16 %797, %786
  %799 = getelementptr inbounds i32, i32* %787, i64 1
  %800 = load i32, i32* %799, align 4
  %801 = add i32 %800, -1
  %802 = icmp ult i32 %801, 13
  br i1 %802, label %1942, label %1946

803:                                              ; preds = %1946, %774
  %804 = phi i16 [ undef, %774 ], [ %1948, %1946 ]
  %805 = phi i16 [ 0, %774 ], [ %1948, %1946 ]
  %806 = phi i32* [ %770, %774 ], [ %1949, %1946 ]
  %807 = icmp eq i64 %781, 0
  br i1 %807, label %819, label %808

808:                                              ; preds = %803
  %809 = load i32, i32* %806, align 4
  %810 = add i32 %809, -1
  %811 = icmp ult i32 %810, 13
  br i1 %811, label %812, label %816

812:                                              ; preds = %808
  %813 = sext i32 %810 to i64
  %814 = getelementptr inbounds [13 x i16], [13 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.8, i64 0, i64 %813
  %815 = load i16, i16* %814, align 2
  br label %816

816:                                              ; preds = %808, %812
  %817 = phi i16 [ 0, %808 ], [ %815, %812 ]
  %818 = or i16 %817, %805
  br label %819

819:                                              ; preds = %816, %803, %768, %763
  %820 = phi i16 [ 0, %763 ], [ 0, %768 ], [ %804, %803 ], [ %818, %816 ]
  %821 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 0
  %822 = load %"class.std::__1::vector.68"*, %"class.std::__1::vector.68"** %821, align 8
  %823 = icmp eq %"class.std::__1::vector.68"* %822, null
  br i1 %823, label %878, label %824

824:                                              ; preds = %819
  %825 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %822, i64 0, i32 0, i32 0
  %826 = load i32*, i32** %825, align 8
  %827 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %822, i64 0, i32 0, i32 1
  %828 = load i32*, i32** %827, align 8
  %829 = icmp eq i32* %826, %828
  br i1 %829, label %878, label %830

830:                                              ; preds = %824
  %831 = ptrtoint i32* %826 to i64
  %832 = getelementptr i32, i32* %828, i64 -1
  %833 = ptrtoint i32* %832 to i64
  %834 = sub i64 %833, %831
  %835 = lshr i64 %834, 2
  %836 = add nuw nsw i64 %835, 1
  %837 = and i64 %836, 1
  %838 = icmp eq i64 %835, 0
  br i1 %838, label %859, label %839

839:                                              ; preds = %830
  %840 = sub nuw nsw i64 %836, %837
  br label %841

841:                                              ; preds = %1936, %839
  %842 = phi i16 [ 0, %839 ], [ %1938, %1936 ]
  %843 = phi i32* [ %826, %839 ], [ %1939, %1936 ]
  %844 = phi i64 [ %840, %839 ], [ %1940, %1936 ]
  %845 = load i32, i32* %843, align 4
  %846 = add i32 %845, -1
  %847 = icmp ult i32 %846, 13
  br i1 %847, label %848, label %852

848:                                              ; preds = %841
  %849 = sext i32 %846 to i64
  %850 = getelementptr inbounds [13 x i16], [13 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.8, i64 0, i64 %849
  %851 = load i16, i16* %850, align 2
  br label %852

852:                                              ; preds = %848, %841
  %853 = phi i16 [ 0, %841 ], [ %851, %848 ]
  %854 = or i16 %853, %842
  %855 = getelementptr inbounds i32, i32* %843, i64 1
  %856 = load i32, i32* %855, align 4
  %857 = add i32 %856, -1
  %858 = icmp ult i32 %857, 13
  br i1 %858, label %1932, label %1936

859:                                              ; preds = %1936, %830
  %860 = phi i16 [ undef, %830 ], [ %1938, %1936 ]
  %861 = phi i16 [ 0, %830 ], [ %1938, %1936 ]
  %862 = phi i32* [ %826, %830 ], [ %1939, %1936 ]
  %863 = icmp eq i64 %837, 0
  br i1 %863, label %875, label %864

864:                                              ; preds = %859
  %865 = load i32, i32* %862, align 4
  %866 = add i32 %865, -1
  %867 = icmp ult i32 %866, 13
  br i1 %867, label %868, label %872

868:                                              ; preds = %864
  %869 = sext i32 %866 to i64
  %870 = getelementptr inbounds [13 x i16], [13 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.8, i64 0, i64 %869
  %871 = load i16, i16* %870, align 2
  br label %872

872:                                              ; preds = %864, %868
  %873 = phi i16 [ 0, %864 ], [ %871, %868 ]
  %874 = or i16 %873, %861
  br label %875

875:                                              ; preds = %859, %872
  %876 = phi i16 [ %860, %859 ], [ %874, %872 ]
  %877 = icmp eq i16 %876, 16319
  br i1 %877, label %1930, label %878

878:                                              ; preds = %875, %824, %819
  %879 = phi i16 [ %876, %875 ], [ 0, %819 ], [ 0, %824 ]
  %880 = and i16 %879, %820
  %881 = icmp eq i16 %880, 0
  br i1 %881, label %882, label %1930

882:                                              ; preds = %878
  %883 = load i32, i32* %34, align 8
  %884 = icmp eq i32 %883, 6
  %885 = icmp eq i16 %820, 0
  br i1 %884, label %886, label %891

886:                                              ; preds = %882
  %887 = xor i1 %885, true
  %888 = and i16 %820, -8321
  %889 = icmp eq i16 %888, 0
  %890 = and i1 %889, %887
  br i1 %890, label %897, label %1930

891:                                              ; preds = %882
  br i1 %885, label %892, label %897

892:                                              ; preds = %891
  %893 = icmp eq i16 %879, 0
  br i1 %893, label %897, label %894

894:                                              ; preds = %892
  %895 = and i16 %879, 16383
  %896 = xor i16 %895, 16383
  br label %897

897:                                              ; preds = %892, %886, %891, %894
  %898 = phi i16 [ %896, %894 ], [ %820, %891 ], [ %820, %886 ], [ 8191, %892 ]
  store i16 %898, i16* %765, align 2
  %899 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %393, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %393, align 8
  %900 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 11
  %901 = call fastcc zeroext i1 @_ZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENSt3__110unique_ptrINS2_6vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS8_ISA_EEEENS2_14default_deleteISC_EEEEPSC_(%"class.std::__1::vector"* %899, %"class.std::__1::vector"* %900)
  br i1 %901, label %902, label %1930

902:                                              ; preds = %897
  %903 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 4, i32 0, i32 0, i32 0
  %904 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %903, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %903, align 8
  %905 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 12
  %906 = call fastcc zeroext i1 @_ZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENSt3__110unique_ptrINS2_6vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS8_ISA_EEEENS2_14default_deleteISC_EEEEPSC_(%"class.std::__1::vector"* %904, %"class.std::__1::vector"* %905)
  br i1 %906, label %907, label %1930

907:                                              ; preds = %902
  %908 = load %"class.std::__1::vector.41"*, %"class.std::__1::vector.41"** %423, align 8
  %909 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 18
  %910 = icmp eq %"class.std::__1::vector.41"* %908, null
  br i1 %910, label %1196, label %911

911:                                              ; preds = %907
  %912 = bitcast %"class.base::internal::flat_tree"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %912) #12
  %913 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %908, i64 0, i32 0, i32 0
  %914 = load i32*, i32** %913, align 8
  %915 = bitcast i32* %914 to i8*
  %916 = ptrtoint i32* %914 to i64
  %917 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %908, i64 0, i32 0, i32 1
  %918 = load i32*, i32** %917, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %912, i8 0, i64 24, i1 false) #12
  %919 = ptrtoint i32* %918 to i64
  %920 = sub i64 %919, %916
  %921 = ashr exact i64 %920, 2
  %922 = icmp eq i64 %920, 0
  br i1 %922, label %1102, label %923

923:                                              ; preds = %911
  %924 = icmp ugt i64 %921, 4611686018427387903
  br i1 %924, label %925, label %927

925:                                              ; preds = %923
  %926 = bitcast %"class.base::internal::flat_tree"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %926) #13
  unreachable

927:                                              ; preds = %923
  %928 = call i8* @_Znwm(i64 %920) #11
  %929 = bitcast i8* %928 to i32*
  %930 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 1
  %931 = bitcast i32** %930 to i8**
  store i8* %928, i8** %931, align 8
  %932 = bitcast %"class.base::internal::flat_tree"* %6 to i8**
  store i8* %928, i8** %932, align 16
  %933 = getelementptr inbounds i32, i32* %929, i64 %921
  %934 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %933, i32** %934, align 16
  %935 = bitcast i32** %930 to i64*
  %936 = ptrtoint i8* %928 to i64
  %937 = icmp eq i32* %914, %918
  br i1 %937, label %1098, label %938

938:                                              ; preds = %927
  %939 = getelementptr i32, i32* %918, i64 -1
  %940 = ptrtoint i32* %939 to i64
  %941 = sub i64 %940, %916
  %942 = lshr i64 %941, 2
  %943 = add nuw nsw i64 %942, 1
  %944 = icmp ult i64 %943, 8
  br i1 %944, label %1040, label %945

945:                                              ; preds = %938
  %946 = getelementptr i32, i32* %918, i64 -1
  %947 = ptrtoint i32* %946 to i64
  %948 = sub i64 %947, %916
  %949 = lshr i64 %948, 2
  %950 = add i64 %948, 4
  %951 = and i64 %950, -4
  %952 = getelementptr i8, i8* %928, i64 %951
  %953 = add nuw nsw i64 %949, 1
  %954 = getelementptr i32, i32* %914, i64 %953
  %955 = bitcast i32* %954 to i8*
  %956 = icmp ult i8* %928, %955
  %957 = icmp ugt i8* %952, %915
  %958 = and i1 %956, %957
  br i1 %958, label %1040, label %959

959:                                              ; preds = %945
  %960 = and i64 %943, 9223372036854775800
  %961 = getelementptr i32, i32* %929, i64 %960
  %962 = getelementptr i32, i32* %914, i64 %960
  %963 = add nsw i64 %960, -8
  %964 = lshr exact i64 %963, 3
  %965 = add nuw nsw i64 %964, 1
  %966 = and i64 %965, 3
  %967 = icmp ult i64 %963, 24
  br i1 %967, label %1019, label %968

968:                                              ; preds = %959
  %969 = sub nsw i64 %965, %966
  br label %970

970:                                              ; preds = %970, %968
  %971 = phi i64 [ 0, %968 ], [ %1016, %970 ]
  %972 = phi i64 [ %969, %968 ], [ %1017, %970 ]
  %973 = getelementptr i32, i32* %929, i64 %971
  %974 = getelementptr i32, i32* %914, i64 %971
  %975 = bitcast i32* %974 to <4 x i32>*
  %976 = load <4 x i32>, <4 x i32>* %975, align 4, !alias.scope !4
  %977 = getelementptr i32, i32* %974, i64 4
  %978 = bitcast i32* %977 to <4 x i32>*
  %979 = load <4 x i32>, <4 x i32>* %978, align 4, !alias.scope !4
  %980 = bitcast i32* %973 to <4 x i32>*
  store <4 x i32> %976, <4 x i32>* %980, align 4, !alias.scope !7, !noalias !4
  %981 = getelementptr i32, i32* %973, i64 4
  %982 = bitcast i32* %981 to <4 x i32>*
  store <4 x i32> %979, <4 x i32>* %982, align 4, !alias.scope !7, !noalias !4
  %983 = or i64 %971, 8
  %984 = getelementptr i32, i32* %929, i64 %983
  %985 = getelementptr i32, i32* %914, i64 %983
  %986 = bitcast i32* %985 to <4 x i32>*
  %987 = load <4 x i32>, <4 x i32>* %986, align 4, !alias.scope !4
  %988 = getelementptr i32, i32* %985, i64 4
  %989 = bitcast i32* %988 to <4 x i32>*
  %990 = load <4 x i32>, <4 x i32>* %989, align 4, !alias.scope !4
  %991 = bitcast i32* %984 to <4 x i32>*
  store <4 x i32> %987, <4 x i32>* %991, align 4, !alias.scope !7, !noalias !4
  %992 = getelementptr i32, i32* %984, i64 4
  %993 = bitcast i32* %992 to <4 x i32>*
  store <4 x i32> %990, <4 x i32>* %993, align 4, !alias.scope !7, !noalias !4
  %994 = or i64 %971, 16
  %995 = getelementptr i32, i32* %929, i64 %994
  %996 = getelementptr i32, i32* %914, i64 %994
  %997 = bitcast i32* %996 to <4 x i32>*
  %998 = load <4 x i32>, <4 x i32>* %997, align 4, !alias.scope !4
  %999 = getelementptr i32, i32* %996, i64 4
  %1000 = bitcast i32* %999 to <4 x i32>*
  %1001 = load <4 x i32>, <4 x i32>* %1000, align 4, !alias.scope !4
  %1002 = bitcast i32* %995 to <4 x i32>*
  store <4 x i32> %998, <4 x i32>* %1002, align 4, !alias.scope !7, !noalias !4
  %1003 = getelementptr i32, i32* %995, i64 4
  %1004 = bitcast i32* %1003 to <4 x i32>*
  store <4 x i32> %1001, <4 x i32>* %1004, align 4, !alias.scope !7, !noalias !4
  %1005 = or i64 %971, 24
  %1006 = getelementptr i32, i32* %929, i64 %1005
  %1007 = getelementptr i32, i32* %914, i64 %1005
  %1008 = bitcast i32* %1007 to <4 x i32>*
  %1009 = load <4 x i32>, <4 x i32>* %1008, align 4, !alias.scope !4
  %1010 = getelementptr i32, i32* %1007, i64 4
  %1011 = bitcast i32* %1010 to <4 x i32>*
  %1012 = load <4 x i32>, <4 x i32>* %1011, align 4, !alias.scope !4
  %1013 = bitcast i32* %1006 to <4 x i32>*
  store <4 x i32> %1009, <4 x i32>* %1013, align 4, !alias.scope !7, !noalias !4
  %1014 = getelementptr i32, i32* %1006, i64 4
  %1015 = bitcast i32* %1014 to <4 x i32>*
  store <4 x i32> %1012, <4 x i32>* %1015, align 4, !alias.scope !7, !noalias !4
  %1016 = add i64 %971, 32
  %1017 = add i64 %972, -4
  %1018 = icmp eq i64 %1017, 0
  br i1 %1018, label %1019, label %970, !llvm.loop !9

1019:                                             ; preds = %970, %959
  %1020 = phi i64 [ 0, %959 ], [ %1016, %970 ]
  %1021 = icmp eq i64 %966, 0
  br i1 %1021, label %1038, label %1022

1022:                                             ; preds = %1019, %1022
  %1023 = phi i64 [ %1035, %1022 ], [ %1020, %1019 ]
  %1024 = phi i64 [ %1036, %1022 ], [ %966, %1019 ]
  %1025 = getelementptr i32, i32* %929, i64 %1023
  %1026 = getelementptr i32, i32* %914, i64 %1023
  %1027 = bitcast i32* %1026 to <4 x i32>*
  %1028 = load <4 x i32>, <4 x i32>* %1027, align 4, !alias.scope !4
  %1029 = getelementptr i32, i32* %1026, i64 4
  %1030 = bitcast i32* %1029 to <4 x i32>*
  %1031 = load <4 x i32>, <4 x i32>* %1030, align 4, !alias.scope !4
  %1032 = bitcast i32* %1025 to <4 x i32>*
  store <4 x i32> %1028, <4 x i32>* %1032, align 4, !alias.scope !7, !noalias !4
  %1033 = getelementptr i32, i32* %1025, i64 4
  %1034 = bitcast i32* %1033 to <4 x i32>*
  store <4 x i32> %1031, <4 x i32>* %1034, align 4, !alias.scope !7, !noalias !4
  %1035 = add i64 %1023, 8
  %1036 = add i64 %1024, -1
  %1037 = icmp eq i64 %1036, 0
  br i1 %1037, label %1038, label %1022, !llvm.loop !11

1038:                                             ; preds = %1022, %1019
  %1039 = icmp eq i64 %943, %960
  br i1 %1039, label %1093, label %1040

1040:                                             ; preds = %1038, %945, %938
  %1041 = phi i32* [ %929, %945 ], [ %929, %938 ], [ %961, %1038 ]
  %1042 = phi i32* [ %914, %945 ], [ %914, %938 ], [ %962, %1038 ]
  %1043 = ptrtoint i32* %1042 to i64
  %1044 = getelementptr i32, i32* %918, i64 -1
  %1045 = ptrtoint i32* %1044 to i64
  %1046 = sub i64 %1045, %1043
  %1047 = lshr i64 %1046, 2
  %1048 = add nuw nsw i64 %1047, 1
  %1049 = and i64 %1048, 7
  %1050 = icmp eq i64 %1049, 0
  br i1 %1050, label %1060, label %1051

1051:                                             ; preds = %1040, %1051
  %1052 = phi i32* [ %1057, %1051 ], [ %1041, %1040 ]
  %1053 = phi i32* [ %1056, %1051 ], [ %1042, %1040 ]
  %1054 = phi i64 [ %1058, %1051 ], [ %1049, %1040 ]
  %1055 = load i32, i32* %1053, align 4
  store i32 %1055, i32* %1052, align 4
  %1056 = getelementptr inbounds i32, i32* %1053, i64 1
  %1057 = getelementptr inbounds i32, i32* %1052, i64 1
  %1058 = add i64 %1054, -1
  %1059 = icmp eq i64 %1058, 0
  br i1 %1059, label %1060, label %1051, !llvm.loop !13

1060:                                             ; preds = %1051, %1040
  %1061 = phi i32* [ undef, %1040 ], [ %1057, %1051 ]
  %1062 = phi i32* [ %1041, %1040 ], [ %1057, %1051 ]
  %1063 = phi i32* [ %1042, %1040 ], [ %1056, %1051 ]
  %1064 = icmp ult i64 %1046, 28
  br i1 %1064, label %1093, label %1065

1065:                                             ; preds = %1060, %1065
  %1066 = phi i32* [ %1091, %1065 ], [ %1062, %1060 ]
  %1067 = phi i32* [ %1090, %1065 ], [ %1063, %1060 ]
  %1068 = load i32, i32* %1067, align 4
  store i32 %1068, i32* %1066, align 4
  %1069 = getelementptr inbounds i32, i32* %1067, i64 1
  %1070 = getelementptr inbounds i32, i32* %1066, i64 1
  %1071 = load i32, i32* %1069, align 4
  store i32 %1071, i32* %1070, align 4
  %1072 = getelementptr inbounds i32, i32* %1067, i64 2
  %1073 = getelementptr inbounds i32, i32* %1066, i64 2
  %1074 = load i32, i32* %1072, align 4
  store i32 %1074, i32* %1073, align 4
  %1075 = getelementptr inbounds i32, i32* %1067, i64 3
  %1076 = getelementptr inbounds i32, i32* %1066, i64 3
  %1077 = load i32, i32* %1075, align 4
  store i32 %1077, i32* %1076, align 4
  %1078 = getelementptr inbounds i32, i32* %1067, i64 4
  %1079 = getelementptr inbounds i32, i32* %1066, i64 4
  %1080 = load i32, i32* %1078, align 4
  store i32 %1080, i32* %1079, align 4
  %1081 = getelementptr inbounds i32, i32* %1067, i64 5
  %1082 = getelementptr inbounds i32, i32* %1066, i64 5
  %1083 = load i32, i32* %1081, align 4
  store i32 %1083, i32* %1082, align 4
  %1084 = getelementptr inbounds i32, i32* %1067, i64 6
  %1085 = getelementptr inbounds i32, i32* %1066, i64 6
  %1086 = load i32, i32* %1084, align 4
  store i32 %1086, i32* %1085, align 4
  %1087 = getelementptr inbounds i32, i32* %1067, i64 7
  %1088 = getelementptr inbounds i32, i32* %1066, i64 7
  %1089 = load i32, i32* %1087, align 4
  store i32 %1089, i32* %1088, align 4
  %1090 = getelementptr inbounds i32, i32* %1067, i64 8
  %1091 = getelementptr inbounds i32, i32* %1066, i64 8
  %1092 = icmp eq i32* %1090, %918
  br i1 %1092, label %1093, label %1065, !llvm.loop !14

1093:                                             ; preds = %1060, %1065, %1038
  %1094 = phi i32* [ %961, %1038 ], [ %1061, %1060 ], [ %1091, %1065 ]
  %1095 = ptrtoint i32* %1094 to i64
  %1096 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 0
  %1097 = load i32*, i32** %1096, align 16
  br label %1098

1098:                                             ; preds = %1093, %927
  %1099 = phi i32* [ %929, %927 ], [ %1097, %1093 ]
  %1100 = phi i64 [ %936, %927 ], [ %1095, %1093 ]
  store i64 %1100, i64* %935, align 8
  %1101 = inttoptr i64 %1100 to i32*
  br label %1102

1102:                                             ; preds = %911, %1098
  %1103 = phi i32* [ null, %911 ], [ %1101, %1098 ]
  %1104 = phi i32* [ null, %911 ], [ %1099, %1098 ]
  %1105 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 1
  %1106 = ptrtoint i32* %1103 to i64
  %1107 = getelementptr inbounds %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1107)
  %1108 = ptrtoint i32* %1104 to i64
  %1109 = sub i64 %1106, %1108
  %1110 = ashr exact i64 %1109, 2
  %1111 = icmp sgt i64 %1109, 512
  br i1 %1111, label %1112, label %1123

1112:                                             ; preds = %1102
  %1113 = icmp slt i64 %1110, 2305843009213693951
  %1114 = select i1 %1113, i64 %1110, i64 2305843009213693951
  br label %1115

1115:                                             ; preds = %1120, %1112
  %1116 = phi i64 [ %1121, %1120 ], [ %1114, %1112 ]
  %1117 = shl i64 %1116, 2
  %1118 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %1117, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %1119 = icmp eq i8* %1118, null
  br i1 %1119, label %1120, label %1124

1120:                                             ; preds = %1115
  %1121 = lshr i64 %1116, 1
  %1122 = icmp eq i64 %1121, 0
  br i1 %1122, label %1123, label %1115

1123:                                             ; preds = %1120, %1102
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %1104, i32* %1103, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %1110, i32* null, i64 0) #12
  br label %1126

1124:                                             ; preds = %1115
  %1125 = bitcast i8* %1118 to i32*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %1104, i32* %1103, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %1110, i32* nonnull %1125, i64 %1116) #12
  call void @_ZdlPv(i8* nonnull %1118) #11
  br label %1126

1126:                                             ; preds = %1123, %1124
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1107)
  %1127 = icmp eq i32* %1104, %1103
  br i1 %1127, label %1177, label %1128

1128:                                             ; preds = %1126, %1132
  %1129 = phi i32* [ %1130, %1132 ], [ %1104, %1126 ]
  %1130 = getelementptr inbounds i32, i32* %1129, i64 1
  %1131 = icmp eq i32* %1130, %1103
  br i1 %1131, label %1177, label %1132

1132:                                             ; preds = %1128
  %1133 = load i32, i32* %1129, align 4
  %1134 = load i32, i32* %1130, align 4
  %1135 = icmp slt i32 %1133, %1134
  br i1 %1135, label %1128, label %1136

1136:                                             ; preds = %1132
  %1137 = icmp eq i32* %1129, %1103
  br i1 %1137, label %1177, label %1138

1138:                                             ; preds = %1136
  %1139 = getelementptr inbounds i32, i32* %1129, i64 2
  %1140 = icmp eq i32* %1139, %1103
  br i1 %1140, label %1162, label %1141

1141:                                             ; preds = %1138
  %1142 = ptrtoint i32* %1129 to i64
  br label %1143

1143:                                             ; preds = %1158, %1141
  %1144 = phi i32 [ %1159, %1158 ], [ %1133, %1141 ]
  %1145 = phi i32* [ %1157, %1158 ], [ %1129, %1141 ]
  %1146 = phi i32* [ %1155, %1158 ], [ %1139, %1141 ]
  %1147 = phi i64 [ %1154, %1158 ], [ %1142, %1141 ]
  %1148 = load i32, i32* %1146, align 4
  %1149 = icmp slt i32 %1144, %1148
  br i1 %1149, label %1150, label %1153

1150:                                             ; preds = %1143
  %1151 = getelementptr inbounds i32, i32* %1145, i64 1
  %1152 = ptrtoint i32* %1151 to i64
  store i32 %1148, i32* %1151, align 4
  br label %1153

1153:                                             ; preds = %1150, %1143
  %1154 = phi i64 [ %1147, %1143 ], [ %1152, %1150 ]
  %1155 = getelementptr inbounds i32, i32* %1146, i64 1
  %1156 = icmp eq i32* %1155, %1103
  %1157 = inttoptr i64 %1154 to i32*
  br i1 %1156, label %1160, label %1158

1158:                                             ; preds = %1153
  %1159 = load i32, i32* %1157, align 4
  br label %1143

1160:                                             ; preds = %1153
  %1161 = inttoptr i64 %1154 to i32*
  br label %1162

1162:                                             ; preds = %1160, %1138
  %1163 = phi i32* [ %1129, %1138 ], [ %1161, %1160 ]
  %1164 = getelementptr inbounds i32, i32* %1163, i64 1
  %1165 = icmp eq i32* %1164, %1103
  br i1 %1165, label %1177, label %1166

1166:                                             ; preds = %1162
  %1167 = bitcast i32** %1105 to i64*
  %1168 = load i64, i64* %1167, align 8
  %1169 = sub i64 %1168, %1106
  %1170 = ashr exact i64 %1169, 2
  %1171 = icmp eq i64 %1169, 0
  br i1 %1171, label %1175, label %1172

1172:                                             ; preds = %1166
  %1173 = bitcast i32* %1164 to i8*
  %1174 = bitcast i32* %1103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1173, i8* align 4 %1174, i64 %1169, i1 false) #12
  br label %1175

1175:                                             ; preds = %1172, %1166
  %1176 = getelementptr inbounds i32, i32* %1164, i64 %1170
  store i32* %1176, i32** %1105, align 8
  br label %1177

1177:                                             ; preds = %1128, %1126, %1136, %1162, %1175
  %1178 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %909, i64 0, i32 0, i32 0, i32 0
  %1179 = load i32*, i32** %1178, align 8
  %1180 = icmp eq i32* %1179, null
  br i1 %1180, label %1187, label %1181

1181:                                             ; preds = %1177
  %1182 = ptrtoint i32* %1179 to i64
  %1183 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 18, i32 0, i32 0, i32 1
  %1184 = bitcast i32** %1183 to i64*
  store i64 %1182, i64* %1184, align 8
  %1185 = bitcast i32* %1179 to i8*
  call void @_ZdlPv(i8* %1185) #11
  %1186 = bitcast %"class.base::internal::flat_tree"* %909 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1186, i8 0, i64 24, i1 false) #12
  br label %1187

1187:                                             ; preds = %1177, %1181
  %1188 = bitcast %"class.base::internal::flat_tree"* %6 to <2 x i64>*
  %1189 = load <2 x i64>, <2 x i64>* %1188, align 16
  %1190 = bitcast %"class.base::internal::flat_tree"* %909 to <2 x i64>*
  store <2 x i64> %1189, <2 x i64>* %1190, align 8
  %1191 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1192 = bitcast i32** %1191 to i64*
  %1193 = load i64, i64* %1192, align 16
  %1194 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 18, i32 0, i32 0, i32 2, i32 0, i32 0
  %1195 = bitcast i32** %1194 to i64*
  store i64 %1193, i64* %1195, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %912) #12
  br label %1196

1196:                                             ; preds = %907, %1187
  %1197 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 2, i32 11, i32 0, i32 0, i32 0
  %1198 = load %"class.std::__1::vector.41"*, %"class.std::__1::vector.41"** %1197, align 8
  %1199 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 19
  %1200 = icmp eq %"class.std::__1::vector.41"* %1198, null
  br i1 %1200, label %1486, label %1201

1201:                                             ; preds = %1196
  %1202 = bitcast %"class.base::internal::flat_tree"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1202) #12
  %1203 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %1198, i64 0, i32 0, i32 0
  %1204 = load i32*, i32** %1203, align 8
  %1205 = bitcast i32* %1204 to i8*
  %1206 = ptrtoint i32* %1204 to i64
  %1207 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %1198, i64 0, i32 0, i32 1
  %1208 = load i32*, i32** %1207, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1202, i8 0, i64 24, i1 false) #12
  %1209 = ptrtoint i32* %1208 to i64
  %1210 = sub i64 %1209, %1206
  %1211 = ashr exact i64 %1210, 2
  %1212 = icmp eq i64 %1210, 0
  br i1 %1212, label %1392, label %1213

1213:                                             ; preds = %1201
  %1214 = icmp ugt i64 %1211, 4611686018427387903
  br i1 %1214, label %1215, label %1217

1215:                                             ; preds = %1213
  %1216 = bitcast %"class.base::internal::flat_tree"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1216) #13
  unreachable

1217:                                             ; preds = %1213
  %1218 = call i8* @_Znwm(i64 %1210) #11
  %1219 = bitcast i8* %1218 to i32*
  %1220 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %8, i64 0, i32 0, i32 0, i32 1
  %1221 = bitcast i32** %1220 to i8**
  store i8* %1218, i8** %1221, align 8
  %1222 = bitcast %"class.base::internal::flat_tree"* %8 to i8**
  store i8* %1218, i8** %1222, align 16
  %1223 = getelementptr inbounds i32, i32* %1219, i64 %1211
  %1224 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %1223, i32** %1224, align 16
  %1225 = bitcast i32** %1220 to i64*
  %1226 = ptrtoint i8* %1218 to i64
  %1227 = icmp eq i32* %1204, %1208
  br i1 %1227, label %1388, label %1228

1228:                                             ; preds = %1217
  %1229 = getelementptr i32, i32* %1208, i64 -1
  %1230 = ptrtoint i32* %1229 to i64
  %1231 = sub i64 %1230, %1206
  %1232 = lshr i64 %1231, 2
  %1233 = add nuw nsw i64 %1232, 1
  %1234 = icmp ult i64 %1233, 8
  br i1 %1234, label %1330, label %1235

1235:                                             ; preds = %1228
  %1236 = getelementptr i32, i32* %1208, i64 -1
  %1237 = ptrtoint i32* %1236 to i64
  %1238 = sub i64 %1237, %1206
  %1239 = lshr i64 %1238, 2
  %1240 = add i64 %1238, 4
  %1241 = and i64 %1240, -4
  %1242 = getelementptr i8, i8* %1218, i64 %1241
  %1243 = add nuw nsw i64 %1239, 1
  %1244 = getelementptr i32, i32* %1204, i64 %1243
  %1245 = bitcast i32* %1244 to i8*
  %1246 = icmp ult i8* %1218, %1245
  %1247 = icmp ugt i8* %1242, %1205
  %1248 = and i1 %1246, %1247
  br i1 %1248, label %1330, label %1249

1249:                                             ; preds = %1235
  %1250 = and i64 %1233, 9223372036854775800
  %1251 = getelementptr i32, i32* %1219, i64 %1250
  %1252 = getelementptr i32, i32* %1204, i64 %1250
  %1253 = add nsw i64 %1250, -8
  %1254 = lshr exact i64 %1253, 3
  %1255 = add nuw nsw i64 %1254, 1
  %1256 = and i64 %1255, 3
  %1257 = icmp ult i64 %1253, 24
  br i1 %1257, label %1309, label %1258

1258:                                             ; preds = %1249
  %1259 = sub nsw i64 %1255, %1256
  br label %1260

1260:                                             ; preds = %1260, %1258
  %1261 = phi i64 [ 0, %1258 ], [ %1306, %1260 ]
  %1262 = phi i64 [ %1259, %1258 ], [ %1307, %1260 ]
  %1263 = getelementptr i32, i32* %1219, i64 %1261
  %1264 = getelementptr i32, i32* %1204, i64 %1261
  %1265 = bitcast i32* %1264 to <4 x i32>*
  %1266 = load <4 x i32>, <4 x i32>* %1265, align 4, !alias.scope !15
  %1267 = getelementptr i32, i32* %1264, i64 4
  %1268 = bitcast i32* %1267 to <4 x i32>*
  %1269 = load <4 x i32>, <4 x i32>* %1268, align 4, !alias.scope !15
  %1270 = bitcast i32* %1263 to <4 x i32>*
  store <4 x i32> %1266, <4 x i32>* %1270, align 4, !alias.scope !18, !noalias !15
  %1271 = getelementptr i32, i32* %1263, i64 4
  %1272 = bitcast i32* %1271 to <4 x i32>*
  store <4 x i32> %1269, <4 x i32>* %1272, align 4, !alias.scope !18, !noalias !15
  %1273 = or i64 %1261, 8
  %1274 = getelementptr i32, i32* %1219, i64 %1273
  %1275 = getelementptr i32, i32* %1204, i64 %1273
  %1276 = bitcast i32* %1275 to <4 x i32>*
  %1277 = load <4 x i32>, <4 x i32>* %1276, align 4, !alias.scope !15
  %1278 = getelementptr i32, i32* %1275, i64 4
  %1279 = bitcast i32* %1278 to <4 x i32>*
  %1280 = load <4 x i32>, <4 x i32>* %1279, align 4, !alias.scope !15
  %1281 = bitcast i32* %1274 to <4 x i32>*
  store <4 x i32> %1277, <4 x i32>* %1281, align 4, !alias.scope !18, !noalias !15
  %1282 = getelementptr i32, i32* %1274, i64 4
  %1283 = bitcast i32* %1282 to <4 x i32>*
  store <4 x i32> %1280, <4 x i32>* %1283, align 4, !alias.scope !18, !noalias !15
  %1284 = or i64 %1261, 16
  %1285 = getelementptr i32, i32* %1219, i64 %1284
  %1286 = getelementptr i32, i32* %1204, i64 %1284
  %1287 = bitcast i32* %1286 to <4 x i32>*
  %1288 = load <4 x i32>, <4 x i32>* %1287, align 4, !alias.scope !15
  %1289 = getelementptr i32, i32* %1286, i64 4
  %1290 = bitcast i32* %1289 to <4 x i32>*
  %1291 = load <4 x i32>, <4 x i32>* %1290, align 4, !alias.scope !15
  %1292 = bitcast i32* %1285 to <4 x i32>*
  store <4 x i32> %1288, <4 x i32>* %1292, align 4, !alias.scope !18, !noalias !15
  %1293 = getelementptr i32, i32* %1285, i64 4
  %1294 = bitcast i32* %1293 to <4 x i32>*
  store <4 x i32> %1291, <4 x i32>* %1294, align 4, !alias.scope !18, !noalias !15
  %1295 = or i64 %1261, 24
  %1296 = getelementptr i32, i32* %1219, i64 %1295
  %1297 = getelementptr i32, i32* %1204, i64 %1295
  %1298 = bitcast i32* %1297 to <4 x i32>*
  %1299 = load <4 x i32>, <4 x i32>* %1298, align 4, !alias.scope !15
  %1300 = getelementptr i32, i32* %1297, i64 4
  %1301 = bitcast i32* %1300 to <4 x i32>*
  %1302 = load <4 x i32>, <4 x i32>* %1301, align 4, !alias.scope !15
  %1303 = bitcast i32* %1296 to <4 x i32>*
  store <4 x i32> %1299, <4 x i32>* %1303, align 4, !alias.scope !18, !noalias !15
  %1304 = getelementptr i32, i32* %1296, i64 4
  %1305 = bitcast i32* %1304 to <4 x i32>*
  store <4 x i32> %1302, <4 x i32>* %1305, align 4, !alias.scope !18, !noalias !15
  %1306 = add i64 %1261, 32
  %1307 = add i64 %1262, -4
  %1308 = icmp eq i64 %1307, 0
  br i1 %1308, label %1309, label %1260, !llvm.loop !20

1309:                                             ; preds = %1260, %1249
  %1310 = phi i64 [ 0, %1249 ], [ %1306, %1260 ]
  %1311 = icmp eq i64 %1256, 0
  br i1 %1311, label %1328, label %1312

1312:                                             ; preds = %1309, %1312
  %1313 = phi i64 [ %1325, %1312 ], [ %1310, %1309 ]
  %1314 = phi i64 [ %1326, %1312 ], [ %1256, %1309 ]
  %1315 = getelementptr i32, i32* %1219, i64 %1313
  %1316 = getelementptr i32, i32* %1204, i64 %1313
  %1317 = bitcast i32* %1316 to <4 x i32>*
  %1318 = load <4 x i32>, <4 x i32>* %1317, align 4, !alias.scope !15
  %1319 = getelementptr i32, i32* %1316, i64 4
  %1320 = bitcast i32* %1319 to <4 x i32>*
  %1321 = load <4 x i32>, <4 x i32>* %1320, align 4, !alias.scope !15
  %1322 = bitcast i32* %1315 to <4 x i32>*
  store <4 x i32> %1318, <4 x i32>* %1322, align 4, !alias.scope !18, !noalias !15
  %1323 = getelementptr i32, i32* %1315, i64 4
  %1324 = bitcast i32* %1323 to <4 x i32>*
  store <4 x i32> %1321, <4 x i32>* %1324, align 4, !alias.scope !18, !noalias !15
  %1325 = add i64 %1313, 8
  %1326 = add i64 %1314, -1
  %1327 = icmp eq i64 %1326, 0
  br i1 %1327, label %1328, label %1312, !llvm.loop !21

1328:                                             ; preds = %1312, %1309
  %1329 = icmp eq i64 %1233, %1250
  br i1 %1329, label %1383, label %1330

1330:                                             ; preds = %1328, %1235, %1228
  %1331 = phi i32* [ %1219, %1235 ], [ %1219, %1228 ], [ %1251, %1328 ]
  %1332 = phi i32* [ %1204, %1235 ], [ %1204, %1228 ], [ %1252, %1328 ]
  %1333 = ptrtoint i32* %1332 to i64
  %1334 = getelementptr i32, i32* %1208, i64 -1
  %1335 = ptrtoint i32* %1334 to i64
  %1336 = sub i64 %1335, %1333
  %1337 = lshr i64 %1336, 2
  %1338 = add nuw nsw i64 %1337, 1
  %1339 = and i64 %1338, 7
  %1340 = icmp eq i64 %1339, 0
  br i1 %1340, label %1350, label %1341

1341:                                             ; preds = %1330, %1341
  %1342 = phi i32* [ %1347, %1341 ], [ %1331, %1330 ]
  %1343 = phi i32* [ %1346, %1341 ], [ %1332, %1330 ]
  %1344 = phi i64 [ %1348, %1341 ], [ %1339, %1330 ]
  %1345 = load i32, i32* %1343, align 4
  store i32 %1345, i32* %1342, align 4
  %1346 = getelementptr inbounds i32, i32* %1343, i64 1
  %1347 = getelementptr inbounds i32, i32* %1342, i64 1
  %1348 = add i64 %1344, -1
  %1349 = icmp eq i64 %1348, 0
  br i1 %1349, label %1350, label %1341, !llvm.loop !22

1350:                                             ; preds = %1341, %1330
  %1351 = phi i32* [ undef, %1330 ], [ %1347, %1341 ]
  %1352 = phi i32* [ %1331, %1330 ], [ %1347, %1341 ]
  %1353 = phi i32* [ %1332, %1330 ], [ %1346, %1341 ]
  %1354 = icmp ult i64 %1336, 28
  br i1 %1354, label %1383, label %1355

1355:                                             ; preds = %1350, %1355
  %1356 = phi i32* [ %1381, %1355 ], [ %1352, %1350 ]
  %1357 = phi i32* [ %1380, %1355 ], [ %1353, %1350 ]
  %1358 = load i32, i32* %1357, align 4
  store i32 %1358, i32* %1356, align 4
  %1359 = getelementptr inbounds i32, i32* %1357, i64 1
  %1360 = getelementptr inbounds i32, i32* %1356, i64 1
  %1361 = load i32, i32* %1359, align 4
  store i32 %1361, i32* %1360, align 4
  %1362 = getelementptr inbounds i32, i32* %1357, i64 2
  %1363 = getelementptr inbounds i32, i32* %1356, i64 2
  %1364 = load i32, i32* %1362, align 4
  store i32 %1364, i32* %1363, align 4
  %1365 = getelementptr inbounds i32, i32* %1357, i64 3
  %1366 = getelementptr inbounds i32, i32* %1356, i64 3
  %1367 = load i32, i32* %1365, align 4
  store i32 %1367, i32* %1366, align 4
  %1368 = getelementptr inbounds i32, i32* %1357, i64 4
  %1369 = getelementptr inbounds i32, i32* %1356, i64 4
  %1370 = load i32, i32* %1368, align 4
  store i32 %1370, i32* %1369, align 4
  %1371 = getelementptr inbounds i32, i32* %1357, i64 5
  %1372 = getelementptr inbounds i32, i32* %1356, i64 5
  %1373 = load i32, i32* %1371, align 4
  store i32 %1373, i32* %1372, align 4
  %1374 = getelementptr inbounds i32, i32* %1357, i64 6
  %1375 = getelementptr inbounds i32, i32* %1356, i64 6
  %1376 = load i32, i32* %1374, align 4
  store i32 %1376, i32* %1375, align 4
  %1377 = getelementptr inbounds i32, i32* %1357, i64 7
  %1378 = getelementptr inbounds i32, i32* %1356, i64 7
  %1379 = load i32, i32* %1377, align 4
  store i32 %1379, i32* %1378, align 4
  %1380 = getelementptr inbounds i32, i32* %1357, i64 8
  %1381 = getelementptr inbounds i32, i32* %1356, i64 8
  %1382 = icmp eq i32* %1380, %1208
  br i1 %1382, label %1383, label %1355, !llvm.loop !23

1383:                                             ; preds = %1350, %1355, %1328
  %1384 = phi i32* [ %1251, %1328 ], [ %1351, %1350 ], [ %1381, %1355 ]
  %1385 = ptrtoint i32* %1384 to i64
  %1386 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %8, i64 0, i32 0, i32 0, i32 0
  %1387 = load i32*, i32** %1386, align 16
  br label %1388

1388:                                             ; preds = %1383, %1217
  %1389 = phi i32* [ %1219, %1217 ], [ %1387, %1383 ]
  %1390 = phi i64 [ %1226, %1217 ], [ %1385, %1383 ]
  store i64 %1390, i64* %1225, align 8
  %1391 = inttoptr i64 %1390 to i32*
  br label %1392

1392:                                             ; preds = %1201, %1388
  %1393 = phi i32* [ null, %1201 ], [ %1391, %1388 ]
  %1394 = phi i32* [ null, %1201 ], [ %1389, %1388 ]
  %1395 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %8, i64 0, i32 0, i32 0, i32 1
  %1396 = ptrtoint i32* %1393 to i64
  %1397 = getelementptr inbounds %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1397)
  %1398 = ptrtoint i32* %1394 to i64
  %1399 = sub i64 %1396, %1398
  %1400 = ashr exact i64 %1399, 2
  %1401 = icmp sgt i64 %1399, 512
  br i1 %1401, label %1402, label %1413

1402:                                             ; preds = %1392
  %1403 = icmp slt i64 %1400, 2305843009213693951
  %1404 = select i1 %1403, i64 %1400, i64 2305843009213693951
  br label %1405

1405:                                             ; preds = %1410, %1402
  %1406 = phi i64 [ %1411, %1410 ], [ %1404, %1402 ]
  %1407 = shl i64 %1406, 2
  %1408 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %1407, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %1409 = icmp eq i8* %1408, null
  br i1 %1409, label %1410, label %1414

1410:                                             ; preds = %1405
  %1411 = lshr i64 %1406, 1
  %1412 = icmp eq i64 %1411, 0
  br i1 %1412, label %1413, label %1405

1413:                                             ; preds = %1410, %1392
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %1394, i32* %1393, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %7, i64 %1400, i32* null, i64 0) #12
  br label %1416

1414:                                             ; preds = %1405
  %1415 = bitcast i8* %1408 to i32*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %1394, i32* %1393, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %7, i64 %1400, i32* nonnull %1415, i64 %1406) #12
  call void @_ZdlPv(i8* nonnull %1408) #11
  br label %1416

1416:                                             ; preds = %1413, %1414
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1397)
  %1417 = icmp eq i32* %1394, %1393
  br i1 %1417, label %1467, label %1418

1418:                                             ; preds = %1416, %1422
  %1419 = phi i32* [ %1420, %1422 ], [ %1394, %1416 ]
  %1420 = getelementptr inbounds i32, i32* %1419, i64 1
  %1421 = icmp eq i32* %1420, %1393
  br i1 %1421, label %1467, label %1422

1422:                                             ; preds = %1418
  %1423 = load i32, i32* %1419, align 4
  %1424 = load i32, i32* %1420, align 4
  %1425 = icmp slt i32 %1423, %1424
  br i1 %1425, label %1418, label %1426

1426:                                             ; preds = %1422
  %1427 = icmp eq i32* %1419, %1393
  br i1 %1427, label %1467, label %1428

1428:                                             ; preds = %1426
  %1429 = getelementptr inbounds i32, i32* %1419, i64 2
  %1430 = icmp eq i32* %1429, %1393
  br i1 %1430, label %1452, label %1431

1431:                                             ; preds = %1428
  %1432 = ptrtoint i32* %1419 to i64
  br label %1433

1433:                                             ; preds = %1448, %1431
  %1434 = phi i32 [ %1449, %1448 ], [ %1423, %1431 ]
  %1435 = phi i32* [ %1447, %1448 ], [ %1419, %1431 ]
  %1436 = phi i32* [ %1445, %1448 ], [ %1429, %1431 ]
  %1437 = phi i64 [ %1444, %1448 ], [ %1432, %1431 ]
  %1438 = load i32, i32* %1436, align 4
  %1439 = icmp slt i32 %1434, %1438
  br i1 %1439, label %1440, label %1443

1440:                                             ; preds = %1433
  %1441 = getelementptr inbounds i32, i32* %1435, i64 1
  %1442 = ptrtoint i32* %1441 to i64
  store i32 %1438, i32* %1441, align 4
  br label %1443

1443:                                             ; preds = %1440, %1433
  %1444 = phi i64 [ %1437, %1433 ], [ %1442, %1440 ]
  %1445 = getelementptr inbounds i32, i32* %1436, i64 1
  %1446 = icmp eq i32* %1445, %1393
  %1447 = inttoptr i64 %1444 to i32*
  br i1 %1446, label %1450, label %1448

1448:                                             ; preds = %1443
  %1449 = load i32, i32* %1447, align 4
  br label %1433

1450:                                             ; preds = %1443
  %1451 = inttoptr i64 %1444 to i32*
  br label %1452

1452:                                             ; preds = %1450, %1428
  %1453 = phi i32* [ %1419, %1428 ], [ %1451, %1450 ]
  %1454 = getelementptr inbounds i32, i32* %1453, i64 1
  %1455 = icmp eq i32* %1454, %1393
  br i1 %1455, label %1467, label %1456

1456:                                             ; preds = %1452
  %1457 = bitcast i32** %1395 to i64*
  %1458 = load i64, i64* %1457, align 8
  %1459 = sub i64 %1458, %1396
  %1460 = ashr exact i64 %1459, 2
  %1461 = icmp eq i64 %1459, 0
  br i1 %1461, label %1465, label %1462

1462:                                             ; preds = %1456
  %1463 = bitcast i32* %1454 to i8*
  %1464 = bitcast i32* %1393 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1463, i8* align 4 %1464, i64 %1459, i1 false) #12
  br label %1465

1465:                                             ; preds = %1462, %1456
  %1466 = getelementptr inbounds i32, i32* %1454, i64 %1460
  store i32* %1466, i32** %1395, align 8
  br label %1467

1467:                                             ; preds = %1418, %1416, %1426, %1452, %1465
  %1468 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %1199, i64 0, i32 0, i32 0, i32 0
  %1469 = load i32*, i32** %1468, align 8
  %1470 = icmp eq i32* %1469, null
  br i1 %1470, label %1477, label %1471

1471:                                             ; preds = %1467
  %1472 = ptrtoint i32* %1469 to i64
  %1473 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 19, i32 0, i32 0, i32 1
  %1474 = bitcast i32** %1473 to i64*
  store i64 %1472, i64* %1474, align 8
  %1475 = bitcast i32* %1469 to i8*
  call void @_ZdlPv(i8* %1475) #11
  %1476 = bitcast %"class.base::internal::flat_tree"* %1199 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1476, i8 0, i64 24, i1 false) #12
  br label %1477

1477:                                             ; preds = %1467, %1471
  %1478 = bitcast %"class.base::internal::flat_tree"* %8 to <2 x i64>*
  %1479 = load <2 x i64>, <2 x i64>* %1478, align 16
  %1480 = bitcast %"class.base::internal::flat_tree"* %1199 to <2 x i64>*
  store <2 x i64> %1479, <2 x i64>* %1480, align 8
  %1481 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1482 = bitcast i32** %1481 to i64*
  %1483 = load i64, i64* %1482, align 16
  %1484 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 19, i32 0, i32 0, i32 2, i32 0, i32 0
  %1485 = bitcast i32** %1484 to i64*
  store i64 %1483, i64* %1485, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1202) #12
  br label %1486

1486:                                             ; preds = %1196, %1477
  %1487 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %909, i64 0, i32 0, i32 0, i32 0
  %1488 = load i32*, i32** %1487, align 8
  %1489 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 18, i32 0, i32 0, i32 1
  %1490 = load i32*, i32** %1489, align 8
  %1491 = icmp eq i32* %1488, %1490
  br i1 %1491, label %1528, label %1492

1492:                                             ; preds = %1486
  %1493 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 19, i32 0, i32 0, i32 0
  %1494 = load i32*, i32** %1493, align 8
  %1495 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 19, i32 0, i32 0, i32 1
  %1496 = bitcast i32** %1495 to i64*
  %1497 = load i64, i64* %1496, align 8
  %1498 = ptrtoint i32* %1494 to i64
  %1499 = sub i64 %1497, %1498
  %1500 = icmp eq i64 %1499, 0
  %1501 = inttoptr i64 %1497 to i32*
  %1502 = ashr exact i64 %1499, 2
  br label %1503

1503:                                             ; preds = %1525, %1492
  %1504 = phi i32* [ %1488, %1492 ], [ %1526, %1525 ]
  %1505 = load i32, i32* %1504, align 4
  br i1 %1500, label %1519, label %1506

1506:                                             ; preds = %1503, %1506
  %1507 = phi i32* [ %1517, %1506 ], [ %1494, %1503 ]
  %1508 = phi i64 [ %1516, %1506 ], [ %1502, %1503 ]
  %1509 = lshr i64 %1508, 1
  %1510 = getelementptr inbounds i32, i32* %1507, i64 %1509
  %1511 = load i32, i32* %1510, align 4
  %1512 = icmp slt i32 %1511, %1505
  %1513 = getelementptr inbounds i32, i32* %1510, i64 1
  %1514 = xor i64 %1509, -1
  %1515 = add i64 %1508, %1514
  %1516 = select i1 %1512, i64 %1515, i64 %1509
  %1517 = select i1 %1512, i32* %1513, i32* %1507
  %1518 = icmp eq i64 %1516, 0
  br i1 %1518, label %1519, label %1506

1519:                                             ; preds = %1506, %1503
  %1520 = phi i32* [ %1494, %1503 ], [ %1517, %1506 ]
  %1521 = icmp eq i32* %1520, %1501
  br i1 %1521, label %1525, label %1522

1522:                                             ; preds = %1519
  %1523 = load i32, i32* %1520, align 4
  %1524 = icmp sgt i32 %1523, %1505
  br i1 %1524, label %1525, label %1528

1525:                                             ; preds = %1522, %1519
  %1526 = getelementptr inbounds i32, i32* %1504, i64 1
  %1527 = icmp eq i32* %1526, %1490
  br i1 %1527, label %1531, label %1503

1528:                                             ; preds = %1522, %1486
  %1529 = phi i32* [ %1488, %1486 ], [ %1504, %1522 ]
  %1530 = icmp eq i32* %1529, %1490
  br i1 %1530, label %1531, label %1930

1531:                                             ; preds = %1525, %1528
  br i1 %1491, label %1541, label %1532

1532:                                             ; preds = %1531
  %1533 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %1199, i64 0, i32 0, i32 0, i32 0
  %1534 = load i32*, i32** %1533, align 8
  %1535 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 19, i32 0, i32 0, i32 1
  %1536 = load i32*, i32** %1535, align 8
  %1537 = icmp eq i32* %1534, %1536
  br i1 %1537, label %1541, label %1538

1538:                                             ; preds = %1532
  %1539 = ptrtoint i32* %1534 to i64
  %1540 = bitcast i32** %1535 to i64*
  store i64 %1539, i64* %1540, align 8
  br label %1541

1541:                                             ; preds = %1538, %1532, %1531
  br i1 %571, label %1542, label %1558

1542:                                             ; preds = %1541
  %1543 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 7
  store i32 2, i32* %1543, align 4
  %1544 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %572, align 8
  %1545 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 10
  %1546 = bitcast %"class.std::__1::basic_string"* %1545 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1547 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1546, i64 0, i32 1, i32 0
  %1548 = load i8, i8* %1547, align 1
  %1549 = icmp slt i8 %1548, 0
  br i1 %1549, label %1550, label %1553

1550:                                             ; preds = %1542
  %1551 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1545, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1552 = load i8*, i8** %1551, align 8
  call void @_ZdlPv(i8* %1552) #11
  br label %1553

1553:                                             ; preds = %1542, %1550
  %1554 = bitcast %"class.std::__1::basic_string"* %1545 to i8*
  %1555 = bitcast %"class.std::__1::basic_string"* %1544 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1554, i8* align 8 %1555, i64 24, i1 false) #12
  %1556 = bitcast %"class.std::__1::basic_string"* %1544 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1557 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1556, i64 0, i32 1, i32 0
  store i8 0, i8* %1557, align 1
  store i8 0, i8* %1555, align 1
  br label %1695

1558:                                             ; preds = %1541
  %1559 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %440, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %440, align 8
  %1560 = getelementptr inbounds [15 x i8], [15 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %1560)
  %1561 = bitcast %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1561) #12
  %1562 = icmp eq %"class.std::__1::basic_string"* %1559, null
  br i1 %1562, label %1571, label %1563

1563:                                             ; preds = %1558
  %1564 = bitcast %"class.std::__1::basic_string"* %1559 to i8*
  %1565 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1559, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1566 = load i8*, i8** %1565, align 8
  %1567 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1559, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1568 = bitcast i64* %1567 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1560, i8* align 8 %1568, i64 15, i1 false) #12
  %1569 = getelementptr inbounds i8, i8* %1564, i64 23
  %1570 = load i8, i8* %1569, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1564, i8 0, i64 24, i1 false) #12
  br label %1572

1571:                                             ; preds = %1558
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1560, i8 0, i64 15, i1 false)
  br label %1572

1572:                                             ; preds = %1571, %1563
  %1573 = phi i8* [ %1566, %1563 ], [ null, %1571 ]
  %1574 = phi i8 [ %1570, %1563 ], [ 0, %1571 ]
  %1575 = getelementptr inbounds %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser", %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1573, i8** %1575, align 8
  %1576 = getelementptr inbounds %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser", %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1577 = bitcast i64* %1576 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1577, i8* nonnull align 8 %1560, i64 15, i1 false) #12
  %1578 = getelementptr inbounds i8, i8* %1561, i64 23
  store i8 %1574, i8* %1578, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1560, i8 0, i64 15, i1 false)
  %1579 = getelementptr inbounds %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser", %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser"* %10, i64 0, i32 1
  %1580 = bitcast %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1581 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1580, i64 0, i32 1, i32 0
  %1582 = icmp slt i8 %1574, 0
  %1583 = load i64, i64* %1576, align 8
  %1584 = zext i8 %1574 to i64
  %1585 = select i1 %1582, i64 %1583, i64 %1584
  store i64 %1585, i64* %1579, align 8
  %1586 = getelementptr inbounds %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser", %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser"* %10, i64 0, i32 2
  store i64 0, i64* %1586, align 8
  %1587 = getelementptr inbounds %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser", %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser"* %10, i64 0, i32 3
  store %"struct.extensions::declarative_net_request::IndexedRule"* %3, %"struct.extensions::declarative_net_request::IndexedRule"** %1587, align 8
  %1588 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 8
  store i32 0, i32* %1588, align 8
  %1589 = icmp eq i64 %1585, 0
  br i1 %1589, label %1601, label %1590

1590:                                             ; preds = %1572
  %1591 = select i1 %1582, i8* %1573, i8* %1561
  %1592 = load i8, i8* %1591, align 1
  %1593 = icmp eq i8 %1592, 124
  br i1 %1593, label %1594, label %1601

1594:                                             ; preds = %1590
  store i64 1, i64* %1586, align 8
  store i32 1, i32* %1588, align 8
  %1595 = icmp ugt i64 %1585, 1
  br i1 %1595, label %1596, label %1601

1596:                                             ; preds = %1594
  %1597 = getelementptr inbounds i8, i8* %1591, i64 1
  %1598 = load i8, i8* %1597, align 1
  %1599 = icmp eq i8 %1598, 124
  br i1 %1599, label %1600, label %1601

1600:                                             ; preds = %1596
  store i64 2, i64* %1586, align 8
  store i32 2, i32* %1588, align 8
  br label %1601

1601:                                             ; preds = %1600, %1596, %1594, %1590, %1572
  %1602 = phi i64 [ 0, %1572 ], [ 2, %1600 ], [ 1, %1596 ], [ 1, %1594 ], [ 0, %1590 ]
  %1603 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 7
  store i32 0, i32* %1603, align 4
  %1604 = icmp ult i64 %1602, %1585
  br i1 %1604, label %1605, label %1641

1605:                                             ; preds = %1601
  %1606 = select i1 %1582, i8* %1573, i8* %1561
  %1607 = getelementptr inbounds i8, i8* %1606, i64 %1602
  %1608 = load i8, i8* %1607, align 1
  %1609 = icmp eq i8 %1608, 124
  %1610 = icmp ne i64 %1602, 0
  %1611 = and i1 %1610, %1609
  %1612 = add nuw nsw i64 %1602, 1
  %1613 = icmp eq i64 %1612, %1585
  %1614 = and i1 %1613, %1611
  br i1 %1614, label %1641, label %1615

1615:                                             ; preds = %1605, %1629
  %1616 = phi i64 [ %1638, %1629 ], [ %1612, %1605 ]
  %1617 = phi i8 [ %1634, %1629 ], [ %1608, %1605 ]
  %1618 = phi i64 [ %1627, %1629 ], [ %1585, %1605 ]
  switch i8 %1617, label %1625 [
    i8 94, label %1619
    i8 42, label %1619
  ]

1619:                                             ; preds = %1615, %1615
  %1620 = load %"struct.extensions::declarative_net_request::IndexedRule"*, %"struct.extensions::declarative_net_request::IndexedRule"** %1587, align 8
  %1621 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1620, i64 0, i32 7
  store i32 1, i32* %1621, align 4
  %1622 = load i64, i64* %1586, align 8
  %1623 = load i64, i64* %1579, align 8
  %1624 = add i64 %1622, 1
  br label %1625

1625:                                             ; preds = %1619, %1615
  %1626 = phi i64 [ %1624, %1619 ], [ %1616, %1615 ]
  %1627 = phi i64 [ %1623, %1619 ], [ %1618, %1615 ]
  store i64 %1626, i64* %1586, align 8
  %1628 = icmp ult i64 %1626, %1627
  br i1 %1628, label %1629, label %1641

1629:                                             ; preds = %1625
  %1630 = load i8, i8* %1581, align 1
  %1631 = icmp slt i8 %1630, 0
  %1632 = select i1 %1631, i8* %1573, i8* %1561
  %1633 = getelementptr inbounds i8, i8* %1632, i64 %1626
  %1634 = load i8, i8* %1633, align 1
  %1635 = icmp eq i8 %1634, 124
  %1636 = icmp ne i64 %1626, 0
  %1637 = and i1 %1636, %1635
  %1638 = add nuw i64 %1626, 1
  %1639 = icmp eq i64 %1638, %1627
  %1640 = and i1 %1639, %1637
  br i1 %1640, label %1641, label %1615

1641:                                             ; preds = %1629, %1625, %1605, %1601
  %1642 = phi i64 [ %1602, %1601 ], [ %1602, %1605 ], [ %1626, %1625 ], [ %1626, %1629 ]
  %1643 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1643) #12
  %1644 = getelementptr inbounds %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser", %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser"* %10, i64 0, i32 0
  %1645 = sub i64 %1642, %1602
  %1646 = bitcast %"class.extensions::declarative_net_request::(anonymous namespace)::UrlFilterParser"* %10 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1644, i64 %1602, i64 %1645, %"class.std::__1::allocator"* nonnull dereferenceable(1) %1646) #12
  %1647 = load %"struct.extensions::declarative_net_request::IndexedRule"*, %"struct.extensions::declarative_net_request::IndexedRule"** %1587, align 8
  %1648 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1647, i64 0, i32 10
  %1649 = bitcast %"class.std::__1::basic_string"* %1648 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1650 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1649, i64 0, i32 1, i32 0
  %1651 = load i8, i8* %1650, align 1
  %1652 = icmp slt i8 %1651, 0
  br i1 %1652, label %1653, label %1656

1653:                                             ; preds = %1641
  %1654 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1648, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1655 = load i8*, i8** %1654, align 8
  call void @_ZdlPv(i8* %1655) #11
  br label %1656

1656:                                             ; preds = %1653, %1641
  %1657 = bitcast %"class.std::__1::basic_string"* %1648 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1657, i8* nonnull align 8 %1643, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1643) #12
  %1658 = load %"struct.extensions::declarative_net_request::IndexedRule"*, %"struct.extensions::declarative_net_request::IndexedRule"** %1587, align 8
  %1659 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1658, i64 0, i32 9
  store i32 0, i32* %1659, align 4
  %1660 = load i64, i64* %1586, align 8
  %1661 = load i64, i64* %1579, align 8
  %1662 = icmp ult i64 %1660, %1661
  %1663 = load i8, i8* %1581, align 1
  br i1 %1662, label %1664, label %1679

1664:                                             ; preds = %1656
  %1665 = icmp slt i8 %1663, 0
  %1666 = load i8*, i8** %1575, align 8
  %1667 = select i1 %1665, i8* %1666, i8* %1561
  %1668 = getelementptr inbounds i8, i8* %1667, i64 %1660
  %1669 = load i8, i8* %1668, align 1
  %1670 = icmp eq i8 %1669, 124
  %1671 = icmp ne i64 %1660, 0
  %1672 = and i1 %1671, %1670
  %1673 = add nuw i64 %1660, 1
  %1674 = icmp eq i64 %1673, %1661
  %1675 = and i1 %1674, %1672
  br i1 %1675, label %1676, label %1679

1676:                                             ; preds = %1664
  store i64 %1661, i64* %1586, align 8
  %1677 = load %"struct.extensions::declarative_net_request::IndexedRule"*, %"struct.extensions::declarative_net_request::IndexedRule"** %1587, align 8
  %1678 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1677, i64 0, i32 9
  store i32 1, i32* %1678, align 4
  br label %1679

1679:                                             ; preds = %1676, %1664, %1656
  %1680 = icmp slt i8 %1663, 0
  br i1 %1680, label %1681, label %1683

1681:                                             ; preds = %1679
  %1682 = load i8*, i8** %1575, align 8
  call void @_ZdlPv(i8* %1682) #11
  br label %1683

1683:                                             ; preds = %1681, %1679
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1561) #12
  br i1 %1562, label %1694, label %1684

1684:                                             ; preds = %1683
  %1685 = bitcast %"class.std::__1::basic_string"* %1559 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1686 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1685, i64 0, i32 1, i32 0
  %1687 = load i8, i8* %1686, align 1
  %1688 = icmp slt i8 %1687, 0
  br i1 %1688, label %1689, label %1692

1689:                                             ; preds = %1684
  %1690 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1559, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1691 = load i8*, i8** %1690, align 8
  call void @_ZdlPv(i8* %1691) #11
  br label %1692

1692:                                             ; preds = %1689, %1684
  %1693 = bitcast %"class.std::__1::basic_string"* %1559 to i8*
  call void @_ZdlPv(i8* %1693) #11
  br label %1694

1694:                                             ; preds = %1683, %1692
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %1560)
  br label %1695

1695:                                             ; preds = %1694, %1553
  %1696 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 8
  %1697 = load i32, i32* %1696, align 8
  %1698 = icmp eq i32 %1697, 2
  br i1 %1698, label %1699, label %1723

1699:                                             ; preds = %1695
  %1700 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 10
  %1701 = bitcast %"class.std::__1::basic_string"* %1700 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1702 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1701, i64 0, i32 1, i32 0
  %1703 = load i8, i8* %1702, align 1
  %1704 = icmp slt i8 %1703, 0
  br i1 %1704, label %1705, label %1708

1705:                                             ; preds = %1699
  %1706 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1707 = load i64, i64* %1706, align 8
  br label %1710

1708:                                             ; preds = %1699
  %1709 = zext i8 %1703 to i64
  br label %1710

1710:                                             ; preds = %1705, %1708
  %1711 = phi i64 [ %1707, %1705 ], [ %1709, %1708 ]
  %1712 = icmp eq i64 %1711, 0
  br i1 %1712, label %1723, label %1713

1713:                                             ; preds = %1710
  br i1 %1704, label %1714, label %1717

1714:                                             ; preds = %1713
  %1715 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1700, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1716 = load i8*, i8** %1715, align 8
  br label %1719

1717:                                             ; preds = %1713
  %1718 = bitcast %"class.std::__1::basic_string"* %1700 to i8*
  br label %1719

1719:                                             ; preds = %1714, %1717
  %1720 = phi i8* [ %1716, %1714 ], [ %1718, %1717 ]
  %1721 = load i8, i8* %1720, align 1
  %1722 = icmp eq i8 %1721, 42
  br i1 %1722, label %1930, label %1723

1723:                                             ; preds = %1719, %1710, %1695
  %1724 = load i8, i8* %640, align 4
  %1725 = and i8 %1724, 8
  %1726 = icmp eq i8 %1725, 0
  br i1 %1726, label %1747, label %1727

1727:                                             ; preds = %1723
  %1728 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1728) #12
  %1729 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 10
  %1730 = bitcast %"class.std::__1::basic_string"* %1729 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1731 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1730, i64 0, i32 1, i32 0
  %1732 = load i8, i8* %1731, align 1
  %1733 = icmp slt i8 %1732, 0
  %1734 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1729, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1735 = load i8*, i8** %1734, align 8
  %1736 = bitcast %"class.std::__1::basic_string"* %1729 to i8*
  %1737 = select i1 %1733, i8* %1735, i8* %1736
  %1738 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1739 = load i64, i64* %1738, align 8
  %1740 = zext i8 %1732 to i64
  %1741 = select i1 %1733, i64 %1739, i64 %1740
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %21, i8* %1737, i64 %1741) #12
  %1742 = load i8, i8* %1731, align 1
  %1743 = icmp slt i8 %1742, 0
  br i1 %1743, label %1744, label %1746

1744:                                             ; preds = %1727
  %1745 = load i8*, i8** %1734, align 8
  call void @_ZdlPv(i8* %1745) #11
  br label %1746

1746:                                             ; preds = %1744, %1727
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1736, i8* nonnull align 8 %1728, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1728) #12
  br label %1747

1747:                                             ; preds = %1723, %1746
  %1748 = load i32, i32* %34, align 8
  %1749 = icmp eq i32 %1748, 5
  br i1 %1749, label %1750, label %1930

1750:                                             ; preds = %1747
  %1751 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0
  %1752 = load %"class.std::__1::vector.34"*, %"class.std::__1::vector.34"** %1751, align 8
  %1753 = icmp eq %"class.std::__1::vector.34"* %1752, null
  br i1 %1753, label %1754, label %1758

1754:                                             ; preds = %1750
  %1755 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 3, i32 3, i32 0, i32 0, i32 0
  %1756 = load %"class.std::__1::vector.34"*, %"class.std::__1::vector.34"** %1755, align 8
  %1757 = icmp eq %"class.std::__1::vector.34"* %1756, null
  br i1 %1757, label %1930, label %1846

1758:                                             ; preds = %1750
  %1759 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 16
  %1760 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %1759, i64 0, i32 0, i32 0
  %1761 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1760, align 8
  %1762 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1761, null
  br i1 %1762, label %1778, label %1763

1763:                                             ; preds = %1758
  %1764 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1761 to i8*
  %1765 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 16, i32 0, i32 1
  %1766 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1765, align 8
  %1767 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1766, %1761
  br i1 %1767, label %1775, label %1768

1768:                                             ; preds = %1763, %1768
  %1769 = phi %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* [ %1770, %1768 ], [ %1766, %1763 ]
  %1770 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1769, i64 -1
  call void @_ZN10extensions3api23declarative_net_request16ModifyHeaderInfoD1Ev(%"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1770) #12
  %1771 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1770, %1761
  br i1 %1771, label %1772, label %1768

1772:                                             ; preds = %1768
  %1773 = bitcast %"class.std::__1::vector.34"* %1759 to i8**
  %1774 = load i8*, i8** %1773, align 8
  br label %1775

1775:                                             ; preds = %1772, %1763
  %1776 = phi i8* [ %1774, %1772 ], [ %1764, %1763 ]
  store %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1761, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1765, align 8
  call void @_ZdlPv(i8* %1776) #11
  %1777 = bitcast %"class.std::__1::vector.34"* %1759 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1777, i8 0, i64 24, i1 false) #12
  br label %1778

1778:                                             ; preds = %1758, %1775
  %1779 = bitcast %"class.std::__1::vector.34"* %1752 to i64*
  %1780 = load i64, i64* %1779, align 8
  %1781 = bitcast %"class.std::__1::vector.34"* %1759 to i64*
  store i64 %1780, i64* %1781, align 8
  %1782 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %1752, i64 0, i32 0, i32 1
  %1783 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1782 to i64*
  %1784 = load i64, i64* %1783, align 8
  %1785 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 16, i32 0, i32 1
  %1786 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1785 to i64*
  store i64 %1784, i64* %1786, align 8
  %1787 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %1752, i64 0, i32 0, i32 2, i32 0, i32 0
  %1788 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1787 to i64*
  %1789 = load i64, i64* %1788, align 8
  %1790 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %1791 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1790 to i64*
  store i64 %1789, i64* %1791, align 8
  %1792 = bitcast %"class.std::__1::vector.34"* %1752 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1792, i8 0, i64 24, i1 false) #12
  %1793 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1760, align 8
  %1794 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1785, align 8
  %1795 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1793, %1794
  br i1 %1795, label %1930, label %1796

1796:                                             ; preds = %1778, %1839
  %1797 = phi %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* [ %1840, %1839 ], [ %1793, %1778 ]
  %1798 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1797 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1799 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1798, i64 0, i32 1, i32 0
  %1800 = load i8, i8* %1799, align 1
  %1801 = icmp slt i8 %1800, 0
  %1802 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1797, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1803 = load i8*, i8** %1802, align 8
  %1804 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1797 to i8*
  %1805 = select i1 %1801, i8* %1803, i8* %1804
  %1806 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1797, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1807 = load i64, i64* %1806, align 8
  %1808 = zext i8 %1800 to i64
  %1809 = select i1 %1801, i64 %1807, i64 %1808
  %1810 = call zeroext i1 @_ZN3net8HttpUtil17IsValidHeaderNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1805, i64 %1809) #12
  br i1 %1810, label %1811, label %1930

1811:                                             ; preds = %1796
  %1812 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1797, i64 0, i32 1
  %1813 = load i32, i32* %1812, align 8
  %1814 = icmp eq i32 %1813, 1
  br i1 %1814, label %1930, label %1815

1815:                                             ; preds = %1811
  %1816 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1797, i64 0, i32 2, i32 0, i32 0, i32 0
  %1817 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1816, align 8
  %1818 = icmp eq %"class.std::__1::basic_string"* %1817, null
  br i1 %1818, label %1836, label %1819

1819:                                             ; preds = %1815
  %1820 = bitcast %"class.std::__1::basic_string"* %1817 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1821 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1820, i64 0, i32 1, i32 0
  %1822 = load i8, i8* %1821, align 1
  %1823 = icmp slt i8 %1822, 0
  %1824 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1817, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1825 = load i8*, i8** %1824, align 8
  %1826 = bitcast %"class.std::__1::basic_string"* %1817 to i8*
  %1827 = select i1 %1823, i8* %1825, i8* %1826
  %1828 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1817, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1829 = load i64, i64* %1828, align 8
  %1830 = zext i8 %1822 to i64
  %1831 = select i1 %1823, i64 %1829, i64 %1830
  %1832 = call zeroext i1 @_ZN3net8HttpUtil18IsValidHeaderValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1827, i64 %1831) #12
  br i1 %1832, label %1833, label %1930

1833:                                             ; preds = %1819
  %1834 = load i32, i32* %1812, align 8
  %1835 = icmp eq i32 %1834, 3
  br i1 %1835, label %1930, label %1839

1836:                                             ; preds = %1815
  %1837 = add i32 %1813, -1
  %1838 = icmp ult i32 %1837, 2
  br i1 %1838, label %1930, label %1839

1839:                                             ; preds = %1836, %1833
  %1840 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1797, i64 1
  %1841 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1840, %1794
  br i1 %1841, label %1842, label %1796

1842:                                             ; preds = %1839
  %1843 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::Rule", %"struct.extensions::api::declarative_net_request::Rule"* %0, i64 0, i32 3, i32 3, i32 0, i32 0, i32 0
  %1844 = load %"class.std::__1::vector.34"*, %"class.std::__1::vector.34"** %1843, align 8
  %1845 = icmp eq %"class.std::__1::vector.34"* %1844, null
  br i1 %1845, label %1930, label %1846

1846:                                             ; preds = %1754, %1842
  %1847 = phi %"class.std::__1::vector.34"* [ %1844, %1842 ], [ %1756, %1754 ]
  %1848 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 17
  %1849 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %1848, i64 0, i32 0, i32 0
  %1850 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1849, align 8
  %1851 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1850, null
  br i1 %1851, label %1867, label %1852

1852:                                             ; preds = %1846
  %1853 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1850 to i8*
  %1854 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 17, i32 0, i32 1
  %1855 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1854, align 8
  %1856 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1855, %1850
  br i1 %1856, label %1864, label %1857

1857:                                             ; preds = %1852, %1857
  %1858 = phi %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* [ %1859, %1857 ], [ %1855, %1852 ]
  %1859 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1858, i64 -1
  call void @_ZN10extensions3api23declarative_net_request16ModifyHeaderInfoD1Ev(%"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1859) #12
  %1860 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1859, %1850
  br i1 %1860, label %1861, label %1857

1861:                                             ; preds = %1857
  %1862 = bitcast %"class.std::__1::vector.34"* %1848 to i8**
  %1863 = load i8*, i8** %1862, align 8
  br label %1864

1864:                                             ; preds = %1861, %1852
  %1865 = phi i8* [ %1863, %1861 ], [ %1853, %1852 ]
  store %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1850, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1854, align 8
  call void @_ZdlPv(i8* %1865) #11
  %1866 = bitcast %"class.std::__1::vector.34"* %1848 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1866, i8 0, i64 24, i1 false) #12
  br label %1867

1867:                                             ; preds = %1846, %1864
  %1868 = bitcast %"class.std::__1::vector.34"* %1847 to i64*
  %1869 = load i64, i64* %1868, align 8
  %1870 = bitcast %"class.std::__1::vector.34"* %1848 to i64*
  store i64 %1869, i64* %1870, align 8
  %1871 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %1847, i64 0, i32 0, i32 1
  %1872 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1871 to i64*
  %1873 = load i64, i64* %1872, align 8
  %1874 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 17, i32 0, i32 1
  %1875 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1874 to i64*
  store i64 %1873, i64* %1875, align 8
  %1876 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %1847, i64 0, i32 0, i32 2, i32 0, i32 0
  %1877 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1876 to i64*
  %1878 = load i64, i64* %1877, align 8
  %1879 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %3, i64 0, i32 17, i32 0, i32 2, i32 0, i32 0
  %1880 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1879 to i64*
  store i64 %1878, i64* %1880, align 8
  %1881 = bitcast %"class.std::__1::vector.34"* %1847 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1881, i8 0, i64 24, i1 false) #12
  %1882 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1849, align 8
  %1883 = load %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %1874, align 8
  %1884 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1882, %1883
  br i1 %1884, label %1930, label %1885

1885:                                             ; preds = %1867, %1927
  %1886 = phi %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* [ %1928, %1927 ], [ %1882, %1867 ]
  %1887 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1886 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1888 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1887, i64 0, i32 1, i32 0
  %1889 = load i8, i8* %1888, align 1
  %1890 = icmp slt i8 %1889, 0
  %1891 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1886, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1892 = load i8*, i8** %1891, align 8
  %1893 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1886 to i8*
  %1894 = select i1 %1890, i8* %1892, i8* %1893
  %1895 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1886, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1896 = load i64, i64* %1895, align 8
  %1897 = zext i8 %1889 to i64
  %1898 = select i1 %1890, i64 %1896, i64 %1897
  %1899 = call zeroext i1 @_ZN3net8HttpUtil17IsValidHeaderNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1894, i64 %1898) #12
  br i1 %1899, label %1900, label %1930

1900:                                             ; preds = %1885
  %1901 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1886, i64 0, i32 2, i32 0, i32 0, i32 0
  %1902 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1901, align 8
  %1903 = icmp eq %"class.std::__1::basic_string"* %1902, null
  br i1 %1903, label %1922, label %1904

1904:                                             ; preds = %1900
  %1905 = bitcast %"class.std::__1::basic_string"* %1902 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1906 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1905, i64 0, i32 1, i32 0
  %1907 = load i8, i8* %1906, align 1
  %1908 = icmp slt i8 %1907, 0
  %1909 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1902, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1910 = load i8*, i8** %1909, align 8
  %1911 = bitcast %"class.std::__1::basic_string"* %1902 to i8*
  %1912 = select i1 %1908, i8* %1910, i8* %1911
  %1913 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1902, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1914 = load i64, i64* %1913, align 8
  %1915 = zext i8 %1907 to i64
  %1916 = select i1 %1908, i64 %1914, i64 %1915
  %1917 = call zeroext i1 @_ZN3net8HttpUtil18IsValidHeaderValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1912, i64 %1916) #12
  br i1 %1917, label %1918, label %1930

1918:                                             ; preds = %1904
  %1919 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1886, i64 0, i32 1
  %1920 = load i32, i32* %1919, align 8
  %1921 = icmp eq i32 %1920, 3
  br i1 %1921, label %1930, label %1927

1922:                                             ; preds = %1900
  %1923 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1886, i64 0, i32 1
  %1924 = load i32, i32* %1923, align 8
  %1925 = add i32 %1924, -1
  %1926 = icmp ult i32 %1925, 2
  br i1 %1926, label %1930, label %1927

1927:                                             ; preds = %1922, %1918
  %1928 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1886, i64 1
  %1929 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %1928, %1883
  br i1 %1929, label %1930, label %1885

1930:                                             ; preds = %1796, %1811, %1819, %1833, %1836, %1885, %1904, %1918, %1922, %1927, %37, %445, %1842, %1754, %1528, %452, %435, %1867, %1778, %384, %387, %1747, %875, %878, %886, %752, %29, %434, %1719, %902, %897, %588, %585, %470, %467, %564, %426, %416, %406, %396, %4
  %1931 = phi i32 [ 4, %4 ], [ 5, %29 ], [ 18, %37 ], [ 7, %396 ], [ 8, %406 ], [ 9, %416 ], [ 42, %426 ], [ 43, %435 ], [ 43, %434 ], [ 30, %445 ], [ %566, %564 ], [ 31, %452 ], [ 26, %467 ], [ 27, %470 ], [ 10, %585 ], [ 14, %588 ], [ 15, %897 ], [ 16, %902 ], [ 17, %1719 ], [ 34, %1754 ], [ 2, %752 ], [ 6, %875 ], [ 3, %878 ], [ 33, %886 ], [ 44, %1528 ], [ 1, %1842 ], [ 1, %1747 ], [ %385, %384 ], [ %390, %387 ], [ 35, %1778 ], [ 36, %1867 ], [ 39, %1922 ], [ 40, %1918 ], [ 38, %1904 ], [ 37, %1885 ], [ 1, %1927 ], [ 39, %1836 ], [ 40, %1833 ], [ 38, %1819 ], [ 41, %1811 ], [ 37, %1796 ]
  ret i32 %1931

1932:                                             ; preds = %852
  %1933 = sext i32 %857 to i64
  %1934 = getelementptr inbounds [13 x i16], [13 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.8, i64 0, i64 %1933
  %1935 = load i16, i16* %1934, align 2
  br label %1936

1936:                                             ; preds = %1932, %852
  %1937 = phi i16 [ 0, %852 ], [ %1935, %1932 ]
  %1938 = or i16 %1937, %854
  %1939 = getelementptr inbounds i32, i32* %843, i64 2
  %1940 = add i64 %844, -2
  %1941 = icmp eq i64 %1940, 0
  br i1 %1941, label %859, label %841

1942:                                             ; preds = %796
  %1943 = sext i32 %801 to i64
  %1944 = getelementptr inbounds [13 x i16], [13 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.8, i64 0, i64 %1943
  %1945 = load i16, i16* %1944, align 2
  br label %1946

1946:                                             ; preds = %1942, %796
  %1947 = phi i16 [ 0, %796 ], [ %1945, %1942 ]
  %1948 = or i16 %1947, %798
  %1949 = getelementptr inbounds i32, i32* %787, i64 2
  %1950 = add i64 %788, -2
  %1951 = icmp eq i64 %1950, 0
  br i1 %1951, label %803, label %785

1952:                                             ; preds = %729
  %1953 = sext i32 %734 to i64
  %1954 = getelementptr inbounds [7 x i16], [7 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.6, i64 0, i64 %1953
  %1955 = load i16, i16* %1954, align 2
  br label %1956

1956:                                             ; preds = %1952, %729
  %1957 = phi i16 [ 0, %729 ], [ %1955, %1952 ]
  %1958 = or i16 %1957, %731
  %1959 = getelementptr inbounds i32, i32* %720, i64 2
  %1960 = add i64 %721, -2
  %1961 = icmp eq i64 %1960, 0
  br i1 %1961, label %736, label %718

1962:                                             ; preds = %673
  %1963 = sext i32 %678 to i64
  %1964 = getelementptr inbounds [7 x i16], [7 x i16]* @switch.table._ZN10extensions23declarative_net_request11IndexedRule17CreateIndexedRuleENS_3api23declarative_net_request4RuleERK4GURLN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPS1_.6, i64 0, i64 %1963
  %1965 = load i16, i16* %1964, align 2
  br label %1966

1966:                                             ; preds = %1962, %673
  %1967 = phi i16 [ 0, %673 ], [ %1965, %1962 ]
  %1968 = or i16 %1967, %675
  %1969 = getelementptr inbounds i32, i32* %664, i64 2
  %1970 = add i64 %665, -2
  %1971 = icmp eq i64 %1970, 0
  br i1 %1971, label %680, label %662
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN10extensions3api23declarative_net_request8RedirectC1EOS2_(%"struct.extensions::api::declarative_net_request::Redirect"*, %"struct.extensions::api::declarative_net_request::Redirect"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions3api23declarative_net_request8RedirectD1Ev(%"struct.extensions::api::declarative_net_request::Redirect"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN10extensions23declarative_net_request16CreateRE2OptionsEbb(%"class.re2::RE2::Options"* sret, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_ZN3re23RE2C1ERKNS_11StringPieceERKNS0_7OptionsE(%"class.re2::RE2"*, %"class.re2::StringPiece"* dereferenceable(16), %"class.re2::RE2::Options"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZNK3re23RE218CheckRewriteStringERKNS_11StringPieceEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.re2::RE2"*, %"class.re2::StringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3re23RE2D1Ev(%"class.re2::RE2"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10extensions23declarative_net_request26ComputeIndexedRulePriorityEiNS_3api23declarative_net_request14RuleActionTypeE(i32, i32) local_unnamed_addr #0 {
  %3 = icmp sgt i32 %0, -1
  br i1 %3, label %5, label %4, !prof !3

4:                                                ; preds = %2
  tail call void @llvm.trap() #12
  unreachable

5:                                                ; preds = %2
  %6 = shl i32 %0, 8
  %7 = add i32 %1, -1
  %8 = icmp ult i32 %7, 6
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = sext i32 %7 to i64
  %11 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN10extensions23declarative_net_request26ComputeIndexedRulePriorityEiNS_3api23declarative_net_request14RuleActionTypeE, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %5, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %5 ]
  %15 = or i32 %14, %6
  %16 = zext i32 %15 to i64
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENSt3__110unique_ptrINS2_6vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS8_ISA_EEEENS2_14default_deleteISC_EEEEPSC_(%"class.std::__1::vector"*, %"class.std::__1::vector"*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = icmp eq %"class.std::__1::vector"* %0, null
  br i1 %4, label %89, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %7, %9
  br i1 %10, label %57, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %11, %54
  %20 = phi %"class.std::__1::basic_string"* [ %7, %11 ], [ %55, %54 ]
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %28 = select i1 %24, i8* %26, i8* %27
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %23 to i64
  %32 = select i1 %24, i64 %30, i64 %31
  %33 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %28, i64 %32) #12
  br i1 %33, label %34, label %62

34:                                               ; preds = %19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %35 = load i8, i8* %22, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i8*, i8** %25, align 8
  %38 = select i1 %36, i8* %37, i8* %27
  %39 = load i64, i64* %29, align 8
  %40 = zext i8 %35 to i64
  %41 = select i1 %36, i64 %39, i64 %40
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i8* %38, i64 %41) #12
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %44 = icmp ult %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %34
  %46 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %12, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #12
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %48 = ptrtoint %"class.std::__1::basic_string"* %47 to i64
  store i64 %48, i64* %15, align 8
  br label %54

49:                                               ; preds = %34
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %50 = load i8, i8* %17, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %45, %52, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %56 = icmp eq %"class.std::__1::basic_string"* %55, %9
  br i1 %56, label %57, label %19

57:                                               ; preds = %54, %5
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %61 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEvT0_SL_T_"(%"class.std::__1::basic_string"* %59, %"class.std::__1::basic_string"* %61) #12
  br label %62

62:                                               ; preds = %19, %57
  %63 = phi i1 [ true, %57 ], [ false, %19 ]
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %65 = icmp eq %"class.std::__1::basic_string"* %64, null
  br i1 %65, label %87, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %69 = icmp eq %"class.std::__1::basic_string"* %68, %64
  br i1 %69, label %85, label %70

70:                                               ; preds = %66, %80
  %71 = phi %"class.std::__1::basic_string"* [ %72, %80 ], [ %68, %66 ]
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 -1
  %73 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #11
  br label %80

80:                                               ; preds = %77, %70
  %81 = icmp eq %"class.std::__1::basic_string"* %72, %64
  br i1 %81, label %82, label %70

82:                                               ; preds = %80
  %83 = bitcast %"class.std::__1::vector"* %0 to i8**
  %84 = load i8*, i8** %83, align 8
  br label %85

85:                                               ; preds = %82, %66
  %86 = phi i8* [ %84, %82 ], [ %67, %66 ]
  store %"class.std::__1::basic_string"* %64, %"class.std::__1::basic_string"** %8, align 8
  call void @_ZdlPv(i8* %86) #11
  br label %87

87:                                               ; preds = %85, %62
  %88 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @_ZdlPv(i8* %88) #11
  br label %89

89:                                               ; preds = %2, %87
  %90 = phi i1 [ %63, %87 ], [ true, %2 ]
  ret i1 %90
}

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare void @_ZNK4GURL7ResolveEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* sret, %class.GURL*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #2

declare dereferenceable(1) i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE2atEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #12
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #12
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEvT0_SL_T_"(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  br label %4

4:                                                ; preds = %489, %2
  %5 = phi %"class.std::__1::basic_string"* [ %1, %2 ], [ %444, %489 ]
  %6 = phi %"class.std::__1::basic_string"* [ %0, %2 ], [ %20, %489 ]
  %7 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.std::__1::basic_string"* %8 to <2 x i64>*
  %16 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  br label %17

17:                                               ; preds = %500, %4
  %18 = phi %"class.std::__1::basic_string"* [ %6, %4 ], [ %501, %500 ]
  br label %19

19:                                               ; preds = %320, %17
  %20 = phi %"class.std::__1::basic_string"* [ %18, %17 ], [ %271, %320 ]
  %21 = ptrtoint %"class.std::__1::basic_string"* %20 to i64
  %22 = sub i64 %7, %21
  %23 = sdiv exact i64 %22, 24
  switch i64 %23, label %74 [
    i64 0, label %504
    i64 1, label %504
    i64 2, label %24
    i64 3, label %59
    i64 4, label %63
    i64 5, label %68
  ]

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  %38 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %45 = select i1 %41, i8* %43, i8* %44
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %40 to i64
  %49 = select i1 %41, i64 %47, i64 %48
  %50 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %33, i64 %37, i8* %45, i64 %49) #12
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %52, label %504

52:                                               ; preds = %24
  %53 = bitcast %"class.std::__1::basic_string"* %20 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i64, i64* %55, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %32, i64 24, i1 false) #12
  %57 = bitcast %"class.std::__1::basic_string"* %25 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %58, align 8
  br label %504

59:                                               ; preds = %19
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %62 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_T_"(%"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"* %60, %"class.std::__1::basic_string"* %61)
  br label %504

63:                                               ; preds = %19
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 2
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %67 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_SL_T_"(%"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"* %64, %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"* %66)
  br label %504

68:                                               ; preds = %19
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 2
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 3
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %73 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_SL_SL_T_"(%"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"* %69, %"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"* %71, %"class.std::__1::basic_string"* %72)
  br label %504

74:                                               ; preds = %19
  %75 = icmp slt i64 %22, 168
  br i1 %75, label %76, label %168

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 2
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %79 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_T_"(%"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"* %78, %"class.std::__1::basic_string"* %77) #12
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 3
  %81 = icmp eq %"class.std::__1::basic_string"* %80, %5
  br i1 %81, label %504, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  br label %89

89:                                               ; preds = %165, %82
  %90 = phi %"class.std::__1::basic_string"* [ %80, %82 ], [ %166, %165 ]
  %91 = phi %"class.std::__1::basic_string"* [ %77, %82 ], [ %90, %165 ]
  %92 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %99 = select i1 %95, i8* %97, i8* %98
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = zext i8 %94 to i64
  %103 = select i1 %95, i64 %101, i64 %102
  %104 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  %111 = select i1 %107, i8* %109, i8* %110
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = zext i8 %106 to i64
  %115 = select i1 %107, i64 %113, i64 %114
  %116 = call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %99, i64 %103, i8* %111, i64 %115) #12
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %118, label %165

118:                                              ; preds = %89
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 %98, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 24, i1 false) #12
  br label %119

119:                                              ; preds = %133, %118
  %120 = phi i8 [ 0, %118 ], [ %156, %133 ]
  %121 = phi %"class.std::__1::basic_string"* [ %90, %118 ], [ %122, %133 ]
  %122 = phi %"class.std::__1::basic_string"* [ %91, %118 ], [ %134, %133 ]
  %123 = icmp slt i8 %120, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #11
  br label %127

127:                                              ; preds = %124, %119
  %128 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  %129 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 24, i1 false) #12
  %130 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  store i8 0, i8* %131, align 1
  store i8 0, i8* %129, align 1
  %132 = icmp eq %"class.std::__1::basic_string"* %122, %20
  br i1 %132, label %163, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 -1
  %135 = load i8, i8* %87, align 1
  %136 = icmp slt i8 %135, 0
  %137 = load i8*, i8** %84, align 8
  %138 = select i1 %136, i8* %137, i8* %83
  %139 = load i64, i64* %85, align 8
  %140 = zext i8 %135 to i64
  %141 = select i1 %136, i64 %139, i64 %140
  %142 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  %149 = select i1 %145, i8* %147, i8* %148
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = zext i8 %144 to i64
  %153 = select i1 %145, i64 %151, i64 %152
  %154 = call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %138, i64 %141, i8* %149, i64 %153) #12
  %155 = icmp slt i32 %154, 0
  %156 = load i8, i8* %131, align 1
  br i1 %155, label %119, label %157

157:                                              ; preds = %133
  %158 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  %159 = icmp slt i8 %156, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #11
  br label %163

163:                                              ; preds = %127, %160, %157
  %164 = phi i8* [ %158, %160 ], [ %158, %157 ], [ %88, %127 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* nonnull align 8 %83, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #12
  br label %165

165:                                              ; preds = %163, %89
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 1
  %167 = icmp eq %"class.std::__1::basic_string"* %166, %5
  br i1 %167, label %504, label %89

168:                                              ; preds = %74
  %169 = icmp sgt i64 %22, 23976
  %170 = udiv i64 %22, 48
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 %170
  br i1 %169, label %172, label %177

172:                                              ; preds = %168
  %173 = udiv i64 %22, 96
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 %173
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 %173
  %176 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_SL_SL_T_"(%"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"* %174, %"class.std::__1::basic_string"* %171, %"class.std::__1::basic_string"* %175, %"class.std::__1::basic_string"* %8)
  br label %179

177:                                              ; preds = %168
  %178 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_T_"(%"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"* %171, %"class.std::__1::basic_string"* %8)
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi i32 [ %176, %172 ], [ %178, %177 ]
  %181 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %188 = select i1 %184, i8* %186, i8* %187
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = zext i8 %183 to i64
  %192 = select i1 %184, i64 %190, i64 %191
  %193 = bitcast %"class.std::__1::basic_string"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = bitcast %"class.std::__1::basic_string"* %171 to i8*
  %200 = select i1 %196, i8* %198, i8* %199
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 %170, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = zext i8 %195 to i64
  %204 = select i1 %196, i64 %202, i64 %203
  %205 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %188, i64 %192, i8* %200, i64 %204) #12
  %206 = icmp slt i32 %205, 0
  br i1 %206, label %362, label %207

207:                                              ; preds = %179, %330
  %208 = phi %"class.std::__1::basic_string"* [ %209, %330 ], [ %8, %179 ]
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %208, i64 -1
  %210 = icmp eq %"class.std::__1::basic_string"* %20, %209
  br i1 %210, label %211, label %330

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %213 = load i8, i8* %182, align 1
  %214 = icmp slt i8 %213, 0
  %215 = load i8*, i8** %185, align 8
  %216 = select i1 %214, i8* %215, i8* %187
  %217 = load i64, i64* %189, align 8
  %218 = zext i8 %213 to i64
  %219 = select i1 %214, i64 %217, i64 %218
  %220 = load i8, i8* %10, align 1
  %221 = icmp slt i8 %220, 0
  %222 = load i8*, i8** %11, align 8
  %223 = select i1 %221, i8* %222, i8* %12
  %224 = load i64, i64* %13, align 8
  %225 = zext i8 %220 to i64
  %226 = select i1 %221, i64 %224, i64 %225
  %227 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %216, i64 %219, i8* %223, i64 %226) #12
  %228 = icmp slt i32 %227, 0
  br i1 %228, label %264, label %229

229:                                              ; preds = %211
  %230 = icmp eq %"class.std::__1::basic_string"* %212, %8
  br i1 %230, label %504, label %231

231:                                              ; preds = %229, %261
  %232 = phi %"class.std::__1::basic_string"* [ %262, %261 ], [ %212, %229 ]
  %233 = load i8, i8* %182, align 1
  %234 = icmp slt i8 %233, 0
  %235 = load i8*, i8** %185, align 8
  %236 = select i1 %234, i8* %235, i8* %187
  %237 = load i64, i64* %189, align 8
  %238 = zext i8 %233 to i64
  %239 = select i1 %234, i64 %237, i64 %238
  %240 = bitcast %"class.std::__1::basic_string"* %232 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %242, 0
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %232, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  %247 = select i1 %243, i8* %245, i8* %246
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %232, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %249 = load i64, i64* %248, align 8
  %250 = zext i8 %242 to i64
  %251 = select i1 %243, i64 %249, i64 %250
  %252 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %236, i64 %239, i8* %247, i64 %251) #12
  %253 = icmp slt i32 %252, 0
  br i1 %253, label %254, label %261

254:                                              ; preds = %231
  %255 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  %256 = bitcast %"class.std::__1::basic_string"* %232 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %232, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %259 = load i64, i64* %258, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %255, i8* align 8 %12, i64 24, i1 false) #12
  store <2 x i64> %257, <2 x i64>* %15, align 8
  store i64 %259, i64* %14, align 8
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %232, i64 1
  br label %264

261:                                              ; preds = %231
  %262 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %232, i64 1
  %263 = icmp eq %"class.std::__1::basic_string"* %262, %8
  br i1 %263, label %504, label %231

264:                                              ; preds = %254, %211
  %265 = phi %"class.std::__1::basic_string"* [ %212, %211 ], [ %260, %254 ]
  %266 = icmp eq %"class.std::__1::basic_string"* %265, %8
  br i1 %266, label %504, label %267

267:                                              ; preds = %264, %322
  %268 = phi %"class.std::__1::basic_string"* [ %293, %322 ], [ %265, %264 ]
  %269 = phi %"class.std::__1::basic_string"* [ %298, %322 ], [ %8, %264 ]
  br label %270

270:                                              ; preds = %270, %267
  %271 = phi %"class.std::__1::basic_string"* [ %268, %267 ], [ %293, %270 ]
  %272 = load i8, i8* %182, align 1
  %273 = icmp slt i8 %272, 0
  %274 = load i8*, i8** %185, align 8
  %275 = select i1 %273, i8* %274, i8* %187
  %276 = load i64, i64* %189, align 8
  %277 = zext i8 %272 to i64
  %278 = select i1 %273, i64 %276, i64 %277
  %279 = bitcast %"class.std::__1::basic_string"* %271 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %280 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %279, i64 0, i32 1, i32 0
  %281 = load i8, i8* %280, align 1
  %282 = icmp slt i8 %281, 0
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = bitcast %"class.std::__1::basic_string"* %271 to i8*
  %286 = select i1 %282, i8* %284, i8* %285
  %287 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %288 = load i64, i64* %287, align 8
  %289 = zext i8 %281 to i64
  %290 = select i1 %282, i64 %288, i64 %289
  %291 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %275, i64 %278, i8* %286, i64 %290) #12
  %292 = icmp slt i32 %291, 0
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 1
  br i1 %292, label %294, label %270

294:                                              ; preds = %270
  %295 = bitcast %"class.std::__1::basic_string"* %271 to i8*
  br label %296

296:                                              ; preds = %294, %296
  %297 = phi %"class.std::__1::basic_string"* [ %298, %296 ], [ %269, %294 ]
  %298 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %297, i64 -1
  %299 = load i8, i8* %182, align 1
  %300 = icmp slt i8 %299, 0
  %301 = load i8*, i8** %185, align 8
  %302 = select i1 %300, i8* %301, i8* %187
  %303 = load i64, i64* %189, align 8
  %304 = zext i8 %299 to i64
  %305 = select i1 %300, i64 %303, i64 %304
  %306 = bitcast %"class.std::__1::basic_string"* %298 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %307 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %306, i64 0, i32 1, i32 0
  %308 = load i8, i8* %307, align 1
  %309 = icmp slt i8 %308, 0
  %310 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %298, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = bitcast %"class.std::__1::basic_string"* %298 to i8*
  %313 = select i1 %309, i8* %311, i8* %312
  %314 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %297, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %315 = load i64, i64* %314, align 8
  %316 = zext i8 %308 to i64
  %317 = select i1 %309, i64 %315, i64 %316
  %318 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %302, i64 %305, i8* %313, i64 %317) #12
  %319 = icmp slt i32 %318, 0
  br i1 %319, label %296, label %320

320:                                              ; preds = %296
  %321 = icmp ult %"class.std::__1::basic_string"* %271, %298
  br i1 %321, label %322, label %19

322:                                              ; preds = %320
  %323 = bitcast %"class.std::__1::basic_string"* %298 to i8*
  %324 = bitcast %"class.std::__1::basic_string"* %271 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8
  %326 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %327 = load i64, i64* %326, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %295, i8* align 8 %323, i64 24, i1 false) #12
  %328 = bitcast %"class.std::__1::basic_string"* %298 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8
  %329 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %297, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %327, i64* %329, align 8
  br label %267

330:                                              ; preds = %207
  %331 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  %335 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  %338 = select i1 %334, i8* %336, i8* %337
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %208, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %340 = load i64, i64* %339, align 8
  %341 = zext i8 %333 to i64
  %342 = select i1 %334, i64 %340, i64 %341
  %343 = load i8, i8* %194, align 1
  %344 = icmp slt i8 %343, 0
  %345 = load i8*, i8** %197, align 8
  %346 = select i1 %344, i8* %345, i8* %199
  %347 = load i64, i64* %201, align 8
  %348 = zext i8 %343 to i64
  %349 = select i1 %344, i64 %347, i64 %348
  %350 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %338, i64 %342, i8* %346, i64 %349) #12
  %351 = icmp slt i32 %350, 0
  br i1 %351, label %352, label %207

352:                                              ; preds = %330
  %353 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %354 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  %355 = bitcast %"class.std::__1::basic_string"* %20 to <2 x i64>*
  %356 = load <2 x i64>, <2 x i64>* %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %358 = load i64, i64* %357, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %353, i8* align 8 %354, i64 24, i1 false) #12
  %359 = bitcast %"class.std::__1::basic_string"* %209 to <2 x i64>*
  store <2 x i64> %356, <2 x i64>* %359, align 8
  %360 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %208, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %358, i64* %360, align 8
  %361 = add i32 %180, 1
  br label %362

362:                                              ; preds = %179, %352
  %363 = phi i32 [ %361, %352 ], [ %180, %179 ]
  %364 = phi %"class.std::__1::basic_string"* [ %209, %352 ], [ %8, %179 ]
  %365 = ptrtoint %"class.std::__1::basic_string"* %20 to i64
  %366 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %367 = icmp ult %"class.std::__1::basic_string"* %366, %364
  br i1 %367, label %368, label %441

368:                                              ; preds = %362, %430
  %369 = phi %"class.std::__1::basic_string"* [ %440, %430 ], [ %171, %362 ]
  %370 = phi i32 [ %438, %430 ], [ %363, %362 ]
  %371 = phi %"class.std::__1::basic_string"* [ %401, %430 ], [ %366, %362 ]
  %372 = phi %"class.std::__1::basic_string"* [ %406, %430 ], [ %364, %362 ]
  %373 = bitcast %"class.std::__1::basic_string"* %369 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %374 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %373, i64 0, i32 1, i32 0
  %375 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %369, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = bitcast %"class.std::__1::basic_string"* %369 to i8*
  %377 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %369, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %378

378:                                              ; preds = %378, %368
  %379 = phi %"class.std::__1::basic_string"* [ %371, %368 ], [ %401, %378 ]
  %380 = bitcast %"class.std::__1::basic_string"* %379 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %381 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %380, i64 0, i32 1, i32 0
  %382 = load i8, i8* %381, align 1
  %383 = icmp slt i8 %382, 0
  %384 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %379, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8
  %386 = bitcast %"class.std::__1::basic_string"* %379 to i8*
  %387 = select i1 %383, i8* %385, i8* %386
  %388 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %379, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %389 = load i64, i64* %388, align 8
  %390 = zext i8 %382 to i64
  %391 = select i1 %383, i64 %389, i64 %390
  %392 = load i8, i8* %374, align 1
  %393 = icmp slt i8 %392, 0
  %394 = load i8*, i8** %375, align 8
  %395 = select i1 %393, i8* %394, i8* %376
  %396 = load i64, i64* %377, align 8
  %397 = zext i8 %392 to i64
  %398 = select i1 %393, i64 %396, i64 %397
  %399 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %387, i64 %391, i8* %395, i64 %398) #12
  %400 = icmp slt i32 %399, 0
  %401 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %379, i64 1
  br i1 %400, label %378, label %402

402:                                              ; preds = %378
  %403 = bitcast %"class.std::__1::basic_string"* %379 to i8*
  br label %404

404:                                              ; preds = %402, %404
  %405 = phi %"class.std::__1::basic_string"* [ %406, %404 ], [ %372, %402 ]
  %406 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %405, i64 -1
  %407 = bitcast %"class.std::__1::basic_string"* %406 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %408 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %407, i64 0, i32 1, i32 0
  %409 = load i8, i8* %408, align 1
  %410 = icmp slt i8 %409, 0
  %411 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %406, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load i8*, i8** %411, align 8
  %413 = bitcast %"class.std::__1::basic_string"* %406 to i8*
  %414 = select i1 %410, i8* %412, i8* %413
  %415 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %405, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %416 = load i64, i64* %415, align 8
  %417 = zext i8 %409 to i64
  %418 = select i1 %410, i64 %416, i64 %417
  %419 = load i8, i8* %374, align 1
  %420 = icmp slt i8 %419, 0
  %421 = load i8*, i8** %375, align 8
  %422 = select i1 %420, i8* %421, i8* %376
  %423 = load i64, i64* %377, align 8
  %424 = zext i8 %419 to i64
  %425 = select i1 %420, i64 %423, i64 %424
  %426 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %414, i64 %418, i8* %422, i64 %425) #12
  %427 = icmp slt i32 %426, 0
  br i1 %427, label %428, label %404

428:                                              ; preds = %404
  %429 = icmp ugt %"class.std::__1::basic_string"* %379, %406
  br i1 %429, label %441, label %430

430:                                              ; preds = %428
  %431 = bitcast %"class.std::__1::basic_string"* %406 to i8*
  %432 = bitcast %"class.std::__1::basic_string"* %379 to <2 x i64>*
  %433 = load <2 x i64>, <2 x i64>* %432, align 8
  %434 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %379, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %435 = load i64, i64* %434, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %403, i8* align 8 %431, i64 24, i1 false) #12
  %436 = bitcast %"class.std::__1::basic_string"* %406 to <2 x i64>*
  store <2 x i64> %433, <2 x i64>* %436, align 8
  %437 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %405, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %435, i64* %437, align 8
  %438 = add i32 %370, 1
  %439 = icmp eq %"class.std::__1::basic_string"* %369, %379
  %440 = select i1 %439, %"class.std::__1::basic_string"* %406, %"class.std::__1::basic_string"* %369
  br label %368

441:                                              ; preds = %428, %362
  %442 = phi %"class.std::__1::basic_string"* [ %171, %362 ], [ %369, %428 ]
  %443 = phi i32 [ %363, %362 ], [ %370, %428 ]
  %444 = phi %"class.std::__1::basic_string"* [ %366, %362 ], [ %379, %428 ]
  %445 = icmp eq %"class.std::__1::basic_string"* %444, %442
  br i1 %445, label %481, label %446

446:                                              ; preds = %441
  %447 = bitcast %"class.std::__1::basic_string"* %442 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %448 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %447, i64 0, i32 1, i32 0
  %449 = load i8, i8* %448, align 1
  %450 = icmp slt i8 %449, 0
  %451 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %442, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = load i8*, i8** %451, align 8
  %453 = bitcast %"class.std::__1::basic_string"* %442 to i8*
  %454 = select i1 %450, i8* %452, i8* %453
  %455 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %442, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %456 = load i64, i64* %455, align 8
  %457 = zext i8 %449 to i64
  %458 = select i1 %450, i64 %456, i64 %457
  %459 = bitcast %"class.std::__1::basic_string"* %444 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %460 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %459, i64 0, i32 1, i32 0
  %461 = load i8, i8* %460, align 1
  %462 = icmp slt i8 %461, 0
  %463 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %464 = load i8*, i8** %463, align 8
  %465 = bitcast %"class.std::__1::basic_string"* %444 to i8*
  %466 = select i1 %462, i8* %464, i8* %465
  %467 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %468 = load i64, i64* %467, align 8
  %469 = zext i8 %461 to i64
  %470 = select i1 %462, i64 %468, i64 %469
  %471 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %454, i64 %458, i8* %466, i64 %470) #12
  %472 = icmp slt i32 %471, 0
  br i1 %472, label %473, label %481

473:                                              ; preds = %446
  %474 = bitcast %"class.std::__1::basic_string"* %444 to <2 x i64>*
  %475 = load <2 x i64>, <2 x i64>* %474, align 8
  %476 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %477 = load i64, i64* %476, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %465, i8* align 8 %453, i64 24, i1 false) #12
  %478 = bitcast %"class.std::__1::basic_string"* %442 to <2 x i64>*
  store <2 x i64> %475, <2 x i64>* %478, align 8
  %479 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %442, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %477, i64* %479, align 8
  %480 = add i32 %443, 1
  br label %481

481:                                              ; preds = %441, %473, %446
  %482 = phi i32 [ %480, %473 ], [ %443, %446 ], [ %443, %441 ]
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %491

484:                                              ; preds = %481
  %485 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEbT0_SL_T_"(%"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"* %444)
  %486 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 1
  %487 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEbT0_SL_T_"(%"class.std::__1::basic_string"* %486, %"class.std::__1::basic_string"* %5)
  br i1 %487, label %488, label %490

488:                                              ; preds = %484
  br i1 %485, label %504, label %489

489:                                              ; preds = %488, %502
  br label %4

490:                                              ; preds = %484
  br i1 %485, label %500, label %491

491:                                              ; preds = %490, %481
  %492 = ptrtoint %"class.std::__1::basic_string"* %444 to i64
  %493 = sub i64 %492, %365
  %494 = sdiv exact i64 %493, 24
  %495 = sub i64 %16, %492
  %496 = sdiv exact i64 %495, 24
  %497 = icmp slt i64 %494, %496
  br i1 %497, label %498, label %502

498:                                              ; preds = %491
  tail call fastcc void @"_ZNSt3__16__sortIRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEvT0_SL_T_"(%"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"* %444)
  %499 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 1
  br label %500

500:                                              ; preds = %498, %490
  %501 = phi %"class.std::__1::basic_string"* [ %486, %490 ], [ %499, %498 ]
  br label %17

502:                                              ; preds = %491
  %503 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEvT0_SL_T_"(%"class.std::__1::basic_string"* %503, %"class.std::__1::basic_string"* %5)
  br label %489

504:                                              ; preds = %488, %264, %19, %19, %229, %261, %165, %76, %24, %52, %59, %63, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_T_"(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %23 = select i1 %19, i8* %21, i8* %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %18 to i64
  %27 = select i1 %19, i64 %25, i64 %26
  %28 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %11, i64 %15, i8* %23, i64 %27) #12
  %29 = icmp slt i32 %28, 0
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %37 = select i1 %33, i8* %35, i8* %36
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %32 to i64
  %41 = select i1 %33, i64 %39, i64 %40
  %42 = load i8, i8* %5, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %8, align 8
  %45 = select i1 %43, i8* %44, i8* %10
  %46 = load i64, i64* %12, align 8
  %47 = zext i8 %42 to i64
  %48 = select i1 %43, i64 %46, i64 %47
  %49 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %37, i64 %41, i8* %45, i64 %48) #12
  %50 = icmp slt i32 %49, 0
  br i1 %29, label %81, label %51

51:                                               ; preds = %3
  br i1 %50, label %52, label %114

52:                                               ; preds = %51
  %53 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i64, i64* %55, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %36, i64 24, i1 false) #12
  %57 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %58, align 8
  %59 = load i8, i8* %5, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i8*, i8** %8, align 8
  %62 = select i1 %60, i8* %61, i8* %10
  %63 = load i64, i64* %12, align 8
  %64 = zext i8 %59 to i64
  %65 = select i1 %60, i64 %63, i64 %64
  %66 = load i8, i8* %17, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i8*, i8** %20, align 8
  %69 = select i1 %67, i8* %68, i8* %22
  %70 = load i64, i64* %24, align 8
  %71 = zext i8 %66 to i64
  %72 = select i1 %67, i64 %70, i64 %71
  %73 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %62, i64 %65, i8* %69, i64 %72) #12
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %75, label %114

75:                                               ; preds = %52
  %76 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %79 = load i64, i64* %78, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %10, i64 24, i1 false) #12
  %80 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %80, align 8
  store i64 %79, i64* %55, align 8
  br label %114

81:                                               ; preds = %3
  %82 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = load i64, i64* %24, align 8
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %86 = load i64, i64* %85, align 8
  br i1 %50, label %87, label %90

87:                                               ; preds = %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %36, i64 24, i1 false) #12
  %88 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  store i64 %83, i64* %88, align 8
  store i64 %84, i64* %38, align 8
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %86, i64* %89, align 8
  br label %114

90:                                               ; preds = %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %10, i64 24, i1 false) #12
  %91 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  store i64 %83, i64* %91, align 8
  store i64 %84, i64* %12, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %86, i64* %92, align 8
  %93 = load i8, i8* %31, align 1
  %94 = icmp slt i8 %93, 0
  %95 = load i8*, i8** %34, align 8
  %96 = select i1 %94, i8* %95, i8* %36
  %97 = load i64, i64* %38, align 8
  %98 = zext i8 %93 to i64
  %99 = select i1 %94, i64 %97, i64 %98
  %100 = lshr i64 %86, 56
  %101 = trunc i64 %100 to i8
  %102 = icmp slt i8 %101, 0
  %103 = inttoptr i64 %83 to i8*
  %104 = select i1 %102, i8* %103, i8* %10
  %105 = select i1 %102, i64 %84, i64 %100
  %106 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %96, i64 %99, i8* %104, i64 %105) #12
  %107 = icmp slt i32 %106, 0
  br i1 %107, label %108, label %114

108:                                              ; preds = %90
  %109 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8
  %111 = load i64, i64* %92, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %36, i64 24, i1 false) #12
  %112 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %111, i64* %113, align 8
  br label %114

114:                                              ; preds = %90, %108, %52, %75, %51, %87
  %115 = phi i32 [ 1, %87 ], [ 0, %51 ], [ 2, %75 ], [ 1, %52 ], [ 2, %108 ], [ 1, %90 ]
  ret i32 %115
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_SL_T_"(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_T_"(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2)
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %13 = select i1 %9, i8* %11, i8* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  %18 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %25 = select i1 %21, i8* %23, i8* %24
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %20 to i64
  %29 = select i1 %21, i64 %27, i64 %28
  %30 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %13, i64 %17, i8* %25, i64 %29) #12
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %96

32:                                               ; preds = %4
  %33 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %36 = load i64, i64* %35, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %12, i64 24, i1 false) #12
  %37 = bitcast %"class.std::__1::basic_string"* %3 to <2 x i64>*
  store <2 x i64> %34, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %38, align 8
  %39 = add i32 %5, 1
  %40 = load i8, i8* %19, align 1
  %41 = icmp slt i8 %40, 0
  %42 = load i8*, i8** %22, align 8
  %43 = select i1 %41, i8* %42, i8* %24
  %44 = load i64, i64* %26, align 8
  %45 = zext i8 %40 to i64
  %46 = select i1 %41, i64 %44, i64 %45
  %47 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %54 = select i1 %50, i8* %52, i8* %53
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %49 to i64
  %58 = select i1 %50, i64 %56, i64 %57
  %59 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %43, i64 %46, i8* %54, i64 %58) #12
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %96

61:                                               ; preds = %32
  %62 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %63 = load <2 x i64>, <2 x i64>* %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %65 = load i64, i64* %64, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %24, i64 24, i1 false) #12
  %66 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %66, align 8
  store i64 %65, i64* %35, align 8
  %67 = add i32 %5, 2
  %68 = load i8, i8* %48, align 1
  %69 = icmp slt i8 %68, 0
  %70 = load i8*, i8** %51, align 8
  %71 = select i1 %69, i8* %70, i8* %53
  %72 = load i64, i64* %55, align 8
  %73 = zext i8 %68 to i64
  %74 = select i1 %69, i64 %72, i64 %73
  %75 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %82 = select i1 %78, i8* %80, i8* %81
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %77 to i64
  %86 = select i1 %78, i64 %84, i64 %85
  %87 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %71, i64 %74, i8* %82, i64 %86) #12
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %89, label %96

89:                                               ; preds = %61
  %90 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %93 = load i64, i64* %92, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %53, i64 24, i1 false) #12
  %94 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8
  store i64 %93, i64* %64, align 8
  %95 = add i32 %5, 3
  br label %96

96:                                               ; preds = %32, %89, %61, %4
  %97 = phi i32 [ %95, %89 ], [ %67, %61 ], [ %39, %32 ], [ %5, %4 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_SL_SL_T_"(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_SL_T_"(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"* %3)
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %26 = select i1 %22, i8* %24, i8* %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %21 to i64
  %30 = select i1 %22, i64 %28, i64 %29
  %31 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %14, i64 %18, i8* %26, i64 %30) #12
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %125

33:                                               ; preds = %5
  %34 = bitcast %"class.std::__1::basic_string"* %3 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = load i64, i64* %36, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %13, i64 24, i1 false) #12
  %38 = bitcast %"class.std::__1::basic_string"* %4 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %39, align 8
  %40 = add i32 %6, 1
  %41 = load i8, i8* %20, align 1
  %42 = icmp slt i8 %41, 0
  %43 = load i8*, i8** %23, align 8
  %44 = select i1 %42, i8* %43, i8* %25
  %45 = load i64, i64* %27, align 8
  %46 = zext i8 %41 to i64
  %47 = select i1 %42, i64 %45, i64 %46
  %48 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %55 = select i1 %51, i8* %53, i8* %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %50 to i64
  %59 = select i1 %51, i64 %57, i64 %58
  %60 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %44, i64 %47, i8* %55, i64 %59) #12
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %125

62:                                               ; preds = %33
  %63 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %25, i64 24, i1 false) #12
  %67 = bitcast %"class.std::__1::basic_string"* %3 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %67, align 8
  store i64 %66, i64* %36, align 8
  %68 = add i32 %6, 2
  %69 = load i8, i8* %49, align 1
  %70 = icmp slt i8 %69, 0
  %71 = load i8*, i8** %52, align 8
  %72 = select i1 %70, i8* %71, i8* %54
  %73 = load i64, i64* %56, align 8
  %74 = zext i8 %69 to i64
  %75 = select i1 %70, i64 %73, i64 %74
  %76 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %83 = select i1 %79, i8* %81, i8* %82
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %78 to i64
  %87 = select i1 %79, i64 %85, i64 %86
  %88 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %72, i64 %75, i8* %83, i64 %87) #12
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %90, label %125

90:                                               ; preds = %62
  %91 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %94 = load i64, i64* %93, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %54, i64 24, i1 false) #12
  %95 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %95, align 8
  store i64 %94, i64* %65, align 8
  %96 = add i32 %6, 3
  %97 = load i8, i8* %77, align 1
  %98 = icmp slt i8 %97, 0
  %99 = load i8*, i8** %80, align 8
  %100 = select i1 %98, i8* %99, i8* %82
  %101 = load i64, i64* %84, align 8
  %102 = zext i8 %97 to i64
  %103 = select i1 %98, i64 %101, i64 %102
  %104 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %111 = select i1 %107, i8* %109, i8* %110
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = zext i8 %106 to i64
  %115 = select i1 %107, i64 %113, i64 %114
  %116 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %100, i64 %103, i8* %111, i64 %115) #12
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %118, label %125

118:                                              ; preds = %90
  %119 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %120 = load <2 x i64>, <2 x i64>* %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %122 = load i64, i64* %121, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %82, i64 24, i1 false) #12
  %123 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  store <2 x i64> %120, <2 x i64>* %123, align 8
  store i64 %122, i64* %93, align 8
  %124 = add i32 %6, 4
  br label %125

125:                                              ; preds = %33, %90, %118, %62, %5
  %126 = phi i32 [ %124, %118 ], [ %96, %90 ], [ %68, %62 ], [ %40, %33 ], [ %6, %5 ]
  ret i32 %126
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEbT0_SL_T_"(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  switch i64 %7, label %58 [
    i64 0, label %159
    i64 1, label %159
    i64 2, label %8
    i64 3, label %43
    i64 4, label %47
    i64 5, label %52
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %24 to i64
  %33 = select i1 %25, i64 %31, i64 %32
  %34 = tail call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %17, i64 %21, i8* %29, i64 %33) #12
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %159

36:                                               ; preds = %8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = load i64, i64* %39, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %16, i64 24, i1 false) #12
  %41 = bitcast %"class.std::__1::basic_string"* %9 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %42, align 8
  br label %159

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %46 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_T_"(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %44, %"class.std::__1::basic_string"* %45)
  br label %159

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %51 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_SL_T_"(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %48, %"class.std::__1::basic_string"* %49, %"class.std::__1::basic_string"* %50)
  br label %159

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 3
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %57 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_SL_SL_T_"(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %53, %"class.std::__1::basic_string"* %54, %"class.std::__1::basic_string"* %55, %"class.std::__1::basic_string"* %56)
  br label %159

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %61 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN10extensions23declarative_net_request12_GLOBAL__N_119CanonicalizeDomainsENS_10unique_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEENS_14default_deleteISD_EEEEPSD_E3$_1PSB_EEjT0_SL_SL_T_"(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %60, %"class.std::__1::basic_string"* %59)
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 3
  %63 = icmp eq %"class.std::__1::basic_string"* %62, %1
  br i1 %63, label %159, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %71

71:                                               ; preds = %64, %152
  %72 = phi %"class.std::__1::basic_string"* [ %62, %64 ], [ %154, %152 ]
  %73 = phi i32 [ 0, %64 ], [ %153, %152 ]
  %74 = phi %"class.std::__1::basic_string"* [ %59, %64 ], [ %72, %152 ]
  %75 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %82 = select i1 %78, i8* %80, i8* %81
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %77 to i64
  %86 = select i1 %78, i64 %84, i64 %85
  %87 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  %94 = select i1 %90, i8* %92, i8* %93
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = zext i8 %89 to i64
  %98 = select i1 %90, i64 %96, i64 %97
  %99 = call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %82, i64 %86, i8* %94, i64 %98) #12
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %101, label %152

101:                                              ; preds = %71
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 %81, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #12
  br label %102

102:                                              ; preds = %139, %101
  %103 = phi i8 [ 0, %101 ], [ %140, %139 ]
  %104 = phi %"class.std::__1::basic_string"* [ %72, %101 ], [ %105, %139 ]
  %105 = phi %"class.std::__1::basic_string"* [ %74, %101 ], [ %117, %139 ]
  %106 = icmp slt i8 %103, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #11
  br label %110

110:                                              ; preds = %102, %107
  %111 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %112 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false) #12
  %113 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 0, i8* %114, align 1
  store i8 0, i8* %112, align 1
  %115 = icmp eq %"class.std::__1::basic_string"* %105, %0
  br i1 %115, label %148, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 -1
  %118 = load i8, i8* %69, align 1
  %119 = icmp slt i8 %118, 0
  %120 = load i8*, i8** %66, align 8
  %121 = select i1 %119, i8* %120, i8* %65
  %122 = load i64, i64* %67, align 8
  %123 = zext i8 %118 to i64
  %124 = select i1 %119, i64 %122, i64 %123
  %125 = bitcast %"class.std::__1::basic_string"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = bitcast %"class.std::__1::basic_string"* %117 to i8*
  %132 = select i1 %128, i8* %130, i8* %131
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = zext i8 %127 to i64
  %136 = select i1 %128, i64 %134, i64 %135
  %137 = call i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %121, i64 %124, i8* %132, i64 %136) #12
  %138 = icmp slt i32 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %116
  %140 = load i8, i8* %114, align 1
  br label %102

141:                                              ; preds = %116
  %142 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %143 = load i8, i8* %114, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %147) #11
  br label %148

148:                                              ; preds = %110, %145, %141
  %149 = phi i8* [ %142, %145 ], [ %142, %141 ], [ %70, %110 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* nonnull align 8 %65, i64 24, i1 false) #12
  %150 = add i32 %73, 1
  %151 = icmp eq i32 %150, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  br i1 %151, label %156, label %152

152:                                              ; preds = %148, %71
  %153 = phi i32 [ %150, %148 ], [ %73, %71 ]
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %155 = icmp eq %"class.std::__1::basic_string"* %154, %1
  br i1 %155, label %159, label %71

156:                                              ; preds = %148
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %158 = icmp eq %"class.std::__1::basic_string"* %157, %1
  br label %159

159:                                              ; preds = %152, %156, %58, %8, %36, %2, %2, %52, %47, %43
  %160 = phi i1 [ true, %52 ], [ true, %47 ], [ true, %43 ], [ true, %2 ], [ true, %2 ], [ true, %36 ], [ true, %8 ], [ true, %58 ], [ %158, %156 ], [ true, %152 ]
  ret i1 %160
}

declare i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i32* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i32, i32* %0, i64 1
  %20 = icmp eq i32* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i32, i32* %1, i64 -2
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 4
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i32, i32* %19, align 4
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i32* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 -1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i32 %32, i32* %30, align 4
  %35 = icmp eq i32* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i32* [ %30, %29 ], [ %0, %34 ]
  store i32 %28, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i32* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 4
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i32* [ %410, %408 ], [ %40, %39 ]
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i32* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 -1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i32* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i32 %44, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %43, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i32 %49, i32* %47, align 4
  %57 = icmp eq i32* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i32, i32* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i32, i32* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %63, i32* %64)
  %65 = getelementptr inbounds i32, i32* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i32* %366 to i64
  %68 = icmp eq i32* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i32, i32* %4, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 2
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i32* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i32* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i32* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i32, i32* %4, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i32* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i32* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i32, i32* %90, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %90, i64 1
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !24

98:                                               ; preds = %89, %77
  %99 = phi i32* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i32* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 28
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i32, i32* %4, i64 %103
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i32, i32* %368, i64 %108
  %110 = getelementptr i32, i32* %366, i64 %108
  %111 = icmp ult i32* %368, %110
  %112 = icmp ult i32* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 9223372036854775800
  %116 = getelementptr i32, i32* %366, i64 %115
  %117 = getelementptr i32, i32* %368, i64 %115
  %118 = add nsw i64 %115, -8
  %119 = lshr exact i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 24
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i32, i32* %366, i64 %126
  %129 = getelementptr i32, i32* %368, i64 %126
  %130 = bitcast i32* %128 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !25
  %132 = getelementptr i32, i32* %128, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !25
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !28, !noalias !25
  %136 = getelementptr i32, i32* %129, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !28, !noalias !25
  %138 = or i64 %126, 8
  %139 = getelementptr i32, i32* %366, i64 %138
  %140 = getelementptr i32, i32* %368, i64 %138
  %141 = bitcast i32* %139 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !25
  %143 = getelementptr i32, i32* %139, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !25
  %146 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %146, align 4, !alias.scope !28, !noalias !25
  %147 = getelementptr i32, i32* %140, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4, !alias.scope !28, !noalias !25
  %149 = or i64 %126, 16
  %150 = getelementptr i32, i32* %366, i64 %149
  %151 = getelementptr i32, i32* %368, i64 %149
  %152 = bitcast i32* %150 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !25
  %154 = getelementptr i32, i32* %150, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !25
  %157 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !28, !noalias !25
  %158 = getelementptr i32, i32* %151, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !28, !noalias !25
  %160 = or i64 %126, 24
  %161 = getelementptr i32, i32* %366, i64 %160
  %162 = getelementptr i32, i32* %368, i64 %160
  %163 = bitcast i32* %161 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4, !alias.scope !25
  %165 = getelementptr i32, i32* %161, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4, !alias.scope !25
  %168 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %168, align 4, !alias.scope !28, !noalias !25
  %169 = getelementptr i32, i32* %162, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %170, align 4, !alias.scope !28, !noalias !25
  %171 = add i64 %126, 32
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !30

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i32, i32* %366, i64 %178
  %181 = getelementptr i32, i32* %368, i64 %178
  %182 = bitcast i32* %180 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 4, !alias.scope !25
  %184 = getelementptr i32, i32* %180, i64 4
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !25
  %187 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %187, align 4, !alias.scope !28, !noalias !25
  %188 = getelementptr i32, i32* %181, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %189, align 4, !alias.scope !28, !noalias !25
  %190 = add i64 %178, 8
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !31

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i32* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i32* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i32* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i32* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i32* %196 to i64
  %202 = icmp eq i32* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i32, i32* %4, i64 %204
  %206 = ptrtoint i32* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 2
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 8
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i32, i32* %4, i64 %212
  %214 = ptrtoint i32* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 2
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i32, i32* %198, i64 %217
  %219 = getelementptr i32, i32* %196, i64 %217
  %220 = icmp ult i32* %198, %219
  %221 = icmp ult i32* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 9223372036854775800
  %225 = getelementptr i32, i32* %196, i64 %224
  %226 = getelementptr i32, i32* %198, i64 %224
  %227 = add nsw i64 %224, -8
  %228 = lshr exact i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 24
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i32, i32* %196, i64 %235
  %238 = getelementptr i32, i32* %198, i64 %235
  %239 = bitcast i32* %237 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !32
  %241 = getelementptr i32, i32* %237, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !32
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %244, align 4, !alias.scope !35, !noalias !32
  %245 = getelementptr i32, i32* %238, i64 4
  %246 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %246, align 4, !alias.scope !35, !noalias !32
  %247 = or i64 %235, 8
  %248 = getelementptr i32, i32* %196, i64 %247
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = bitcast i32* %248 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !32
  %252 = getelementptr i32, i32* %248, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !32
  %255 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %255, align 4, !alias.scope !35, !noalias !32
  %256 = getelementptr i32, i32* %249, i64 4
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %257, align 4, !alias.scope !35, !noalias !32
  %258 = or i64 %235, 16
  %259 = getelementptr i32, i32* %196, i64 %258
  %260 = getelementptr i32, i32* %198, i64 %258
  %261 = bitcast i32* %259 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !32
  %263 = getelementptr i32, i32* %259, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !32
  %266 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %266, align 4, !alias.scope !35, !noalias !32
  %267 = getelementptr i32, i32* %260, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %268, align 4, !alias.scope !35, !noalias !32
  %269 = or i64 %235, 24
  %270 = getelementptr i32, i32* %196, i64 %269
  %271 = getelementptr i32, i32* %198, i64 %269
  %272 = bitcast i32* %270 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4, !alias.scope !32
  %274 = getelementptr i32, i32* %270, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !32
  %277 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %277, align 4, !alias.scope !35, !noalias !32
  %278 = getelementptr i32, i32* %271, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %279, align 4, !alias.scope !35, !noalias !32
  %280 = add i64 %235, 32
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !37

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i32, i32* %196, i64 %287
  %290 = getelementptr i32, i32* %198, i64 %287
  %291 = bitcast i32* %289 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !32
  %293 = getelementptr i32, i32* %289, i64 4
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !32
  %296 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %296, align 4, !alias.scope !35, !noalias !32
  %297 = getelementptr i32, i32* %290, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %298, align 4, !alias.scope !35, !noalias !32
  %299 = add i64 %287, 8
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !38

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i32* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i32* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i32* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i32, i32* %4, i64 %308
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 2
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i32* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i32* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i32, i32* %317, align 4
  store i32 %320, i32* %318, align 4
  %321 = getelementptr inbounds i32, i32* %317, i64 1
  %322 = getelementptr inbounds i32, i32* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !39

325:                                              ; preds = %316, %304
  %326 = phi i32* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i32* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 28
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i32* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i32* [ %355, %329 ], [ %327, %325 ]
  %332 = load i32, i32* %330, align 4
  store i32 %332, i32* %331, align 4
  %333 = getelementptr inbounds i32, i32* %330, i64 1
  %334 = getelementptr inbounds i32, i32* %331, i64 1
  %335 = load i32, i32* %333, align 4
  store i32 %335, i32* %334, align 4
  %336 = getelementptr inbounds i32, i32* %330, i64 2
  %337 = getelementptr inbounds i32, i32* %331, i64 2
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %337, align 4
  %339 = getelementptr inbounds i32, i32* %330, i64 3
  %340 = getelementptr inbounds i32, i32* %331, i64 3
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %340, align 4
  %342 = getelementptr inbounds i32, i32* %330, i64 4
  %343 = getelementptr inbounds i32, i32* %331, i64 4
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds i32, i32* %330, i64 5
  %346 = getelementptr inbounds i32, i32* %331, i64 5
  %347 = load i32, i32* %345, align 4
  store i32 %347, i32* %346, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 6
  %349 = getelementptr inbounds i32, i32* %331, i64 6
  %350 = load i32, i32* %348, align 4
  store i32 %350, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %330, i64 7
  %352 = getelementptr inbounds i32, i32* %331, i64 7
  %353 = load i32, i32* %351, align 4
  store i32 %353, i32* %352, align 4
  %354 = getelementptr inbounds i32, i32* %330, i64 8
  %355 = getelementptr inbounds i32, i32* %331, i64 8
  %356 = icmp eq i32* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !40

357:                                              ; preds = %195
  %358 = load i32, i32* %197, align 4
  %359 = load i32, i32* %196, align 4
  %360 = icmp slt i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i32 %358, i32* %198, align 4
  %362 = getelementptr inbounds i32, i32* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i32 %359, i32* %198, align 4
  %364 = getelementptr inbounds i32, i32* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i32* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i32* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i32, i32* %198, i64 1
  %369 = icmp eq i32* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i32* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i32* [ %396, %370 ], [ %100, %98 ]
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %371, i64 1
  %375 = getelementptr inbounds i32, i32* %372, i64 1
  %376 = load i32, i32* %374, align 4
  store i32 %376, i32* %375, align 4
  %377 = getelementptr inbounds i32, i32* %371, i64 2
  %378 = getelementptr inbounds i32, i32* %372, i64 2
  %379 = load i32, i32* %377, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %371, i64 3
  %381 = getelementptr inbounds i32, i32* %372, i64 3
  %382 = load i32, i32* %380, align 4
  store i32 %382, i32* %381, align 4
  %383 = getelementptr inbounds i32, i32* %371, i64 4
  %384 = getelementptr inbounds i32, i32* %372, i64 4
  %385 = load i32, i32* %383, align 4
  store i32 %385, i32* %384, align 4
  %386 = getelementptr inbounds i32, i32* %371, i64 5
  %387 = getelementptr inbounds i32, i32* %372, i64 5
  %388 = load i32, i32* %386, align 4
  store i32 %388, i32* %387, align 4
  %389 = getelementptr inbounds i32, i32* %371, i64 6
  %390 = getelementptr inbounds i32, i32* %372, i64 6
  %391 = load i32, i32* %389, align 4
  store i32 %391, i32* %390, align 4
  %392 = getelementptr inbounds i32, i32* %371, i64 7
  %393 = getelementptr inbounds i32, i32* %372, i64 7
  %394 = load i32, i32* %392, align 4
  store i32 %394, i32* %393, align 4
  %395 = getelementptr inbounds i32, i32* %371, i64 8
  %396 = getelementptr inbounds i32, i32* %372, i64 8
  %397 = icmp eq i32* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !41

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %399, i32* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %0, i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i32* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i32* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i32, i32* %402, i64 -1
  %404 = load i32, i32* %403, align 4
  %405 = icmp slt i32 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i32 %404, i32* %402, align 4
  %407 = icmp eq i32* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i32* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i32 %54, i32* %409, align 4
  %410 = getelementptr inbounds i32, i32* %43, i64 2
  %411 = icmp eq i32* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  %14 = getelementptr inbounds i32, i32* %4, i64 1
  %15 = load i32, i32* %0, align 4
  store i32 %15, i32* %14, align 4
  br label %390

16:                                               ; preds = %8
  store i32 %11, i32* %4, align 4
  %17 = getelementptr inbounds i32, i32* %4, i64 1
  %18 = load i32, i32* %9, align 4
  store i32 %18, i32* %17, align 4
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i32* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %0, align 4
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 1
  %26 = icmp eq i32* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i32 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i32* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i32* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = load i32, i32* %29, align 4
  %33 = icmp slt i32 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i32 %28, i32* %31, align 4
  %35 = icmp eq i32* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i32* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i32, i32* %37, i64 -1
  %39 = load i32, i32* %29, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i32 %40, i32* %37, align 4
  %43 = icmp eq i32* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i32* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %45, align 4
  br label %48

47:                                               ; preds = %27
  store i32 %32, i32* %31, align 4
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = icmp eq i32* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %31, align 4
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %55, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %54, i32* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i32, i32* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %55, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %56, i32* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i32* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i32* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i32* %60 to i64
  %63 = icmp eq i32* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i32, i32* %1, i64 -1
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 8
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i32, i32* %1, i64 -1
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i32, i32* %61, i64 %76
  %78 = getelementptr i32, i32* %60, i64 %76
  %79 = icmp ult i32* %61, %78
  %80 = icmp ult i32* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 9223372036854775800
  %84 = getelementptr i32, i32* %61, i64 %83
  %85 = getelementptr i32, i32* %60, i64 %83
  %86 = add nsw i64 %83, -8
  %87 = lshr exact i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 24
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i32, i32* %61, i64 %94
  %97 = getelementptr i32, i32* %60, i64 %94
  %98 = bitcast i32* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !alias.scope !42
  %100 = getelementptr i32, i32* %97, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !42
  %103 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %103, align 4, !alias.scope !45, !noalias !42
  %104 = getelementptr i32, i32* %96, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !45, !noalias !42
  %106 = or i64 %94, 8
  %107 = getelementptr i32, i32* %61, i64 %106
  %108 = getelementptr i32, i32* %60, i64 %106
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !42
  %111 = getelementptr i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !42
  %114 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !45, !noalias !42
  %115 = getelementptr i32, i32* %107, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !45, !noalias !42
  %117 = or i64 %94, 16
  %118 = getelementptr i32, i32* %61, i64 %117
  %119 = getelementptr i32, i32* %60, i64 %117
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !42
  %122 = getelementptr i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !42
  %125 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %125, align 4, !alias.scope !45, !noalias !42
  %126 = getelementptr i32, i32* %118, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %127, align 4, !alias.scope !45, !noalias !42
  %128 = or i64 %94, 24
  %129 = getelementptr i32, i32* %61, i64 %128
  %130 = getelementptr i32, i32* %60, i64 %128
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !42
  %133 = getelementptr i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !42
  %136 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %136, align 4, !alias.scope !45, !noalias !42
  %137 = getelementptr i32, i32* %129, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %138, align 4, !alias.scope !45, !noalias !42
  %139 = add i64 %94, 32
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !47

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i32, i32* %61, i64 %146
  %149 = getelementptr i32, i32* %60, i64 %146
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4, !alias.scope !42
  %152 = getelementptr i32, i32* %149, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !42
  %155 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %155, align 4, !alias.scope !45, !noalias !42
  %156 = getelementptr i32, i32* %148, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %157, align 4, !alias.scope !45, !noalias !42
  %158 = add i64 %146, 8
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !48

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i32* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i32* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i32* %165 to i64
  %167 = getelementptr i32, i32* %1, i64 -1
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i32* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i32* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %175, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 1
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !49

183:                                              ; preds = %174, %163
  %184 = phi i32* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i32* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 28
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i32* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i32* [ %212, %187 ], [ %185, %183 ]
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 1
  %192 = getelementptr inbounds i32, i32* %188, i64 1
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds i32, i32* %189, i64 2
  %195 = getelementptr inbounds i32, i32* %188, i64 2
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %189, i64 3
  %198 = getelementptr inbounds i32, i32* %188, i64 3
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = getelementptr inbounds i32, i32* %188, i64 4
  %202 = load i32, i32* %200, align 4
  store i32 %202, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %189, i64 5
  %204 = getelementptr inbounds i32, i32* %188, i64 5
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds i32, i32* %189, i64 6
  %207 = getelementptr inbounds i32, i32* %188, i64 6
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %189, i64 7
  %210 = getelementptr inbounds i32, i32* %188, i64 7
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds i32, i32* %189, i64 8
  %213 = getelementptr inbounds i32, i32* %188, i64 8
  %214 = icmp eq i32* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !50

215:                                              ; preds = %53, %385
  %216 = phi i32* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i32* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i32* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i32* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i32* %217 to i64
  %222 = icmp eq i32* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i32, i32* %0, i64 %224
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 8
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i32, i32* %0, i64 %232
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 2
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i32, i32* %216, i64 %237
  %239 = getelementptr i32, i32* %217, i64 %237
  %240 = icmp ult i32* %216, %239
  %241 = icmp ult i32* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 9223372036854775800
  %245 = getelementptr i32, i32* %216, i64 %244
  %246 = getelementptr i32, i32* %217, i64 %244
  %247 = add nsw i64 %244, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i32, i32* %216, i64 %255
  %258 = getelementptr i32, i32* %217, i64 %255
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !51
  %261 = getelementptr i32, i32* %258, i64 4
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !51
  %264 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %264, align 4, !alias.scope !54, !noalias !51
  %265 = getelementptr i32, i32* %257, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %266, align 4, !alias.scope !54, !noalias !51
  %267 = or i64 %255, 8
  %268 = getelementptr i32, i32* %216, i64 %267
  %269 = getelementptr i32, i32* %217, i64 %267
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !51
  %272 = getelementptr i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !51
  %275 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4, !alias.scope !54, !noalias !51
  %276 = getelementptr i32, i32* %268, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %277, align 4, !alias.scope !54, !noalias !51
  %278 = or i64 %255, 16
  %279 = getelementptr i32, i32* %216, i64 %278
  %280 = getelementptr i32, i32* %217, i64 %278
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !51
  %283 = getelementptr i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !51
  %286 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !54, !noalias !51
  %287 = getelementptr i32, i32* %279, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !54, !noalias !51
  %289 = or i64 %255, 24
  %290 = getelementptr i32, i32* %216, i64 %289
  %291 = getelementptr i32, i32* %217, i64 %289
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4, !alias.scope !51
  %294 = getelementptr i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !51
  %297 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %293, <4 x i32>* %297, align 4, !alias.scope !54, !noalias !51
  %298 = getelementptr i32, i32* %290, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %299, align 4, !alias.scope !54, !noalias !51
  %300 = add i64 %255, 32
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !56

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i32, i32* %216, i64 %307
  %310 = getelementptr i32, i32* %217, i64 %307
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !51
  %313 = getelementptr i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !51
  %316 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !alias.scope !54, !noalias !51
  %317 = getelementptr i32, i32* %309, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %318, align 4, !alias.scope !54, !noalias !51
  %319 = add i64 %307, 8
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !57

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i32* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i32* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i32* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i32, i32* %0, i64 %328
  %330 = ptrtoint i32* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 2
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i32* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i32* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %337, align 4
  %341 = getelementptr inbounds i32, i32* %338, i64 1
  %342 = getelementptr inbounds i32, i32* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !58

345:                                              ; preds = %336, %324
  %346 = phi i32* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i32* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 28
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i32* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i32* [ %374, %349 ], [ %347, %345 ]
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %351, i64 1
  %354 = getelementptr inbounds i32, i32* %350, i64 1
  %355 = load i32, i32* %353, align 4
  store i32 %355, i32* %354, align 4
  %356 = getelementptr inbounds i32, i32* %351, i64 2
  %357 = getelementptr inbounds i32, i32* %350, i64 2
  %358 = load i32, i32* %356, align 4
  store i32 %358, i32* %357, align 4
  %359 = getelementptr inbounds i32, i32* %351, i64 3
  %360 = getelementptr inbounds i32, i32* %350, i64 3
  %361 = load i32, i32* %359, align 4
  store i32 %361, i32* %360, align 4
  %362 = getelementptr inbounds i32, i32* %351, i64 4
  %363 = getelementptr inbounds i32, i32* %350, i64 4
  %364 = load i32, i32* %362, align 4
  store i32 %364, i32* %363, align 4
  %365 = getelementptr inbounds i32, i32* %351, i64 5
  %366 = getelementptr inbounds i32, i32* %350, i64 5
  %367 = load i32, i32* %365, align 4
  store i32 %367, i32* %366, align 4
  %368 = getelementptr inbounds i32, i32* %351, i64 6
  %369 = getelementptr inbounds i32, i32* %350, i64 6
  %370 = load i32, i32* %368, align 4
  store i32 %370, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %351, i64 7
  %372 = getelementptr inbounds i32, i32* %350, i64 7
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %351, i64 8
  %375 = getelementptr inbounds i32, i32* %350, i64 8
  %376 = icmp eq i32* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !59

377:                                              ; preds = %215
  %378 = load i32, i32* %218, align 4
  %379 = load i32, i32* %217, align 4
  %380 = icmp slt i32 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i32 %378, i32* %216, align 4
  %382 = getelementptr inbounds i32, i32* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i32 %379, i32* %216, align 4
  %384 = getelementptr inbounds i32, i32* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i32* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i32* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i32, i32* %216, i64 1
  %389 = icmp eq i32* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32*, i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i64, i32*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i32* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i32* %1 to i64
  %13 = ptrtoint i32* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i32* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i32*
  %27 = load i32, i32* %26, align 4
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i32*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i32*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i32* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i32, i32* %31, i64 -1
  %38 = bitcast i32* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 2
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 8
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i32* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i32* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i32* %47 to i64
  %49 = getelementptr i32, i32* %31, i64 -1
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i32* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i32* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 1
  %62 = getelementptr inbounds i32, i32* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !60

65:                                               ; preds = %56, %45
  %66 = phi i32* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i32* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i32* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 28
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i32, i32* %31, i64 -1
  %72 = bitcast i32* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i32, i32* %6, i64 %77
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr i32, i32* %29, i64 %77
  %81 = icmp ugt i32* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 9223372036854775800
  %86 = getelementptr i32, i32* %6, i64 %85
  %87 = getelementptr i32, i32* %29, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i32, i32* %6, i64 %96
  %99 = getelementptr i32, i32* %29, i64 %96
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !61
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !61
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !64, !noalias !61
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !64, !noalias !61
  %108 = or i64 %96, 8
  %109 = getelementptr i32, i32* %6, i64 %108
  %110 = getelementptr i32, i32* %29, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !61
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !61
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !64, !noalias !61
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !64, !noalias !61
  %119 = or i64 %96, 16
  %120 = getelementptr i32, i32* %6, i64 %119
  %121 = getelementptr i32, i32* %29, i64 %119
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !61
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !61
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !64, !noalias !61
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !64, !noalias !61
  %130 = or i64 %96, 24
  %131 = getelementptr i32, i32* %6, i64 %130
  %132 = getelementptr i32, i32* %29, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !61
  %135 = getelementptr i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !61
  %138 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !64, !noalias !61
  %139 = getelementptr i32, i32* %131, i64 4
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !64, !noalias !61
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !66

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i32, i32* %6, i64 %148
  %151 = getelementptr i32, i32* %29, i64 %148
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !61
  %154 = getelementptr i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !61
  %157 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !64, !noalias !61
  %158 = getelementptr i32, i32* %150, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !64, !noalias !61
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !67

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i32* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i32, i32* %15, i64 -1
  %169 = bitcast i32* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 8
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i32* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i32* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i32* %178 to i64
  %180 = getelementptr i32, i32* %15, i64 -1
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i32* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i32* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i32, i32* %189, align 4
  store i32 %191, i32* %188, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !68

196:                                              ; preds = %187, %176
  %197 = phi i32* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i32* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i32* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 28
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i32, i32* %15, i64 -1
  %203 = bitcast i32* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i32, i32* %6, i64 %208
  %210 = bitcast i32* %209 to i8*
  %211 = getelementptr i32, i32* %31, i64 %208
  %212 = icmp ugt i32* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 9223372036854775800
  %217 = getelementptr i32, i32* %6, i64 %216
  %218 = getelementptr i32, i32* %31, i64 %216
  %219 = add nsw i64 %216, -8
  %220 = lshr exact i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 24
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i32, i32* %6, i64 %227
  %230 = getelementptr i32, i32* %31, i64 %227
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !69
  %233 = getelementptr i32, i32* %230, i64 4
  %234 = bitcast i32* %233 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !69
  %236 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %236, align 4, !alias.scope !72, !noalias !69
  %237 = getelementptr i32, i32* %229, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %238, align 4, !alias.scope !72, !noalias !69
  %239 = or i64 %227, 8
  %240 = getelementptr i32, i32* %6, i64 %239
  %241 = getelementptr i32, i32* %31, i64 %239
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !69
  %244 = getelementptr i32, i32* %241, i64 4
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !69
  %247 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %247, align 4, !alias.scope !72, !noalias !69
  %248 = getelementptr i32, i32* %240, i64 4
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %246, <4 x i32>* %249, align 4, !alias.scope !72, !noalias !69
  %250 = or i64 %227, 16
  %251 = getelementptr i32, i32* %6, i64 %250
  %252 = getelementptr i32, i32* %31, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !69
  %255 = getelementptr i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !69
  %258 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %258, align 4, !alias.scope !72, !noalias !69
  %259 = getelementptr i32, i32* %251, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %260, align 4, !alias.scope !72, !noalias !69
  %261 = or i64 %227, 24
  %262 = getelementptr i32, i32* %6, i64 %261
  %263 = getelementptr i32, i32* %31, i64 %261
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !69
  %266 = getelementptr i32, i32* %263, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !69
  %269 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %269, align 4, !alias.scope !72, !noalias !69
  %270 = getelementptr i32, i32* %262, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %271, align 4, !alias.scope !72, !noalias !69
  %272 = add i64 %227, 32
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !74

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i32, i32* %6, i64 %279
  %282 = getelementptr i32, i32* %31, i64 %279
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !69
  %285 = getelementptr i32, i32* %282, i64 4
  %286 = bitcast i32* %285 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4, !alias.scope !69
  %288 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %288, align 4, !alias.scope !72, !noalias !69
  %289 = getelementptr i32, i32* %281, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %287, <4 x i32>* %290, align 4, !alias.scope !72, !noalias !69
  %291 = add i64 %279, 8
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !75

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i32* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i32* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i32* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i32* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i32* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i32* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i32* %297 to i64
  %306 = ptrtoint i32* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i32* %301 to i8*
  %311 = bitcast i32* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %307, i1 false) #12
  br label %887

312:                                              ; preds = %299
  %313 = load i32, i32* %302, align 4
  %314 = load i32, i32* %300, align 4
  %315 = icmp slt i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i32 %313, i32* %301, align 4
  %317 = getelementptr inbounds i32, i32* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i32 %314, i32* %301, align 4
  %319 = getelementptr inbounds i32, i32* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i32* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i32* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i32, i32* %301, i64 1
  %324 = icmp eq i32* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i32* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i32* [ %350, %325 ], [ %68, %65 ]
  %328 = load i32, i32* %327, align 4
  store i32 %328, i32* %326, align 4
  %329 = getelementptr inbounds i32, i32* %327, i64 1
  %330 = getelementptr inbounds i32, i32* %326, i64 1
  %331 = load i32, i32* %329, align 4
  store i32 %331, i32* %330, align 4
  %332 = getelementptr inbounds i32, i32* %327, i64 2
  %333 = getelementptr inbounds i32, i32* %326, i64 2
  %334 = load i32, i32* %332, align 4
  store i32 %334, i32* %333, align 4
  %335 = getelementptr inbounds i32, i32* %327, i64 3
  %336 = getelementptr inbounds i32, i32* %326, i64 3
  %337 = load i32, i32* %335, align 4
  store i32 %337, i32* %336, align 4
  %338 = getelementptr inbounds i32, i32* %327, i64 4
  %339 = getelementptr inbounds i32, i32* %326, i64 4
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %339, align 4
  %341 = getelementptr inbounds i32, i32* %327, i64 5
  %342 = getelementptr inbounds i32, i32* %326, i64 5
  %343 = load i32, i32* %341, align 4
  store i32 %343, i32* %342, align 4
  %344 = getelementptr inbounds i32, i32* %327, i64 6
  %345 = getelementptr inbounds i32, i32* %326, i64 6
  %346 = load i32, i32* %344, align 4
  store i32 %346, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %327, i64 7
  %348 = getelementptr inbounds i32, i32* %326, i64 7
  %349 = load i32, i32* %347, align 4
  store i32 %349, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %327, i64 8
  %351 = getelementptr inbounds i32, i32* %326, i64 8
  %352 = icmp eq i32* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !76

353:                                              ; preds = %196, %520, %294
  %354 = phi i32* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i32* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i32* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i32* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i32* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i32* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i32, i32* %358, i64 -1
  %363 = ptrtoint i32* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 2
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 8
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i32, i32* %358, i64 -1
  %370 = ptrtoint i32* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 2
  %373 = xor i64 %372, -1
  %374 = getelementptr i32, i32* %357, i64 %373
  %375 = getelementptr i32, i32* %358, i64 %373
  %376 = icmp ult i32* %374, %358
  %377 = icmp ult i32* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 9223372036854775800
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i32, i32* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i32, i32* %357, i64 %383
  %385 = add nsw i64 %380, -8
  %386 = lshr exact i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i32, i32* %358, i64 -1
  %393 = getelementptr i32, i32* %357, i64 -1
  %394 = getelementptr i32, i32* %358, i64 -1
  %395 = getelementptr i32, i32* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i32, i32* %392, i64 %399
  %402 = getelementptr inbounds i32, i32* %401, i64 -3
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4, !alias.scope !77
  %405 = getelementptr inbounds i32, i32* %401, i64 -4
  %406 = getelementptr inbounds i32, i32* %405, i64 -3
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4, !alias.scope !77
  %409 = getelementptr inbounds i32, i32* %393, i64 %400
  %410 = getelementptr inbounds i32, i32* %409, i64 -3
  %411 = bitcast i32* %410 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %411, align 4, !alias.scope !80, !noalias !77
  %412 = getelementptr inbounds i32, i32* %409, i64 -4
  %413 = getelementptr inbounds i32, i32* %412, i64 -3
  %414 = bitcast i32* %413 to <4 x i32>*
  store <4 x i32> %408, <4 x i32>* %414, align 4, !alias.scope !80, !noalias !77
  %415 = sub nuw nsw i64 -8, %397
  %416 = sub nuw nsw i64 -8, %397
  %417 = getelementptr inbounds i32, i32* %394, i64 %415
  %418 = getelementptr inbounds i32, i32* %417, i64 -3
  %419 = bitcast i32* %418 to <4 x i32>*
  %420 = load <4 x i32>, <4 x i32>* %419, align 4, !alias.scope !77
  %421 = getelementptr inbounds i32, i32* %417, i64 -4
  %422 = getelementptr inbounds i32, i32* %421, i64 -3
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !77
  %425 = getelementptr inbounds i32, i32* %395, i64 %416
  %426 = getelementptr inbounds i32, i32* %425, i64 -3
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %427, align 4, !alias.scope !80, !noalias !77
  %428 = getelementptr inbounds i32, i32* %425, i64 -4
  %429 = getelementptr inbounds i32, i32* %428, i64 -3
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %430, align 4, !alias.scope !80, !noalias !77
  %431 = add i64 %397, 16
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !82

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -16, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i32, i32* %358, i64 -1
  %441 = getelementptr i32, i32* %357, i64 -1
  %442 = getelementptr inbounds i32, i32* %440, i64 %437
  %443 = getelementptr inbounds i32, i32* %442, i64 -3
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !77
  %446 = getelementptr inbounds i32, i32* %442, i64 -4
  %447 = getelementptr inbounds i32, i32* %446, i64 -3
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4, !alias.scope !77
  %450 = getelementptr inbounds i32, i32* %441, i64 %437
  %451 = getelementptr inbounds i32, i32* %450, i64 -3
  %452 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %445, <4 x i32>* %452, align 4, !alias.scope !80, !noalias !77
  %453 = getelementptr inbounds i32, i32* %450, i64 -4
  %454 = getelementptr inbounds i32, i32* %453, i64 -3
  %455 = bitcast i32* %454 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %455, align 4, !alias.scope !80, !noalias !77
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i32* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i32* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i32, i32* %459, i64 -1
  %462 = ptrtoint i32* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 2
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i32* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i32* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i32, i32* %469, i64 -1
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds i32, i32* %470, i64 -1
  store i32 %473, i32* %474, align 4
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !83

477:                                              ; preds = %468, %458
  %478 = phi i32* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i32* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 28
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i32* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i32* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i32, i32* %482, i64 -1
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds i32, i32* %483, i64 -1
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds i32, i32* %482, i64 -2
  %488 = load i32, i32* %487, align 4
  %489 = getelementptr inbounds i32, i32* %483, i64 -2
  store i32 %488, i32* %489, align 4
  %490 = getelementptr inbounds i32, i32* %482, i64 -3
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds i32, i32* %483, i64 -3
  store i32 %491, i32* %492, align 4
  %493 = getelementptr inbounds i32, i32* %482, i64 -4
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i32, i32* %483, i64 -4
  store i32 %494, i32* %495, align 4
  %496 = getelementptr inbounds i32, i32* %482, i64 -5
  %497 = load i32, i32* %496, align 4
  %498 = getelementptr inbounds i32, i32* %483, i64 -5
  store i32 %497, i32* %498, align 4
  %499 = getelementptr inbounds i32, i32* %482, i64 -6
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds i32, i32* %483, i64 -6
  store i32 %500, i32* %501, align 4
  %502 = getelementptr inbounds i32, i32* %482, i64 -7
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds i32, i32* %483, i64 -7
  store i32 %503, i32* %504, align 4
  %505 = getelementptr inbounds i32, i32* %482, i64 -8
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds i32, i32* %483, i64 -8
  store i32 %506, i32* %507, align 4
  %508 = icmp eq i32* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !84

509:                                              ; preds = %356
  %510 = getelementptr inbounds i32, i32* %359, i64 -1
  %511 = getelementptr inbounds i32, i32* %358, i64 -1
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* %510, align 4
  %514 = icmp slt i32 %512, %513
  %515 = getelementptr inbounds i32, i32* %357, i64 -1
  %516 = select i1 %514, i32 %513, i32 %512
  %517 = select i1 %514, i32* %510, i32* %359
  %518 = select i1 %514, i32* %358, i32* %511
  store i32 %516, i32* %515, align 4
  %519 = icmp eq i32* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i32* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i32* [ %545, %520 ], [ %199, %196 ]
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %521, align 4
  %524 = getelementptr inbounds i32, i32* %522, i64 1
  %525 = getelementptr inbounds i32, i32* %521, i64 1
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %522, i64 2
  %528 = getelementptr inbounds i32, i32* %521, i64 2
  %529 = load i32, i32* %527, align 4
  store i32 %529, i32* %528, align 4
  %530 = getelementptr inbounds i32, i32* %522, i64 3
  %531 = getelementptr inbounds i32, i32* %521, i64 3
  %532 = load i32, i32* %530, align 4
  store i32 %532, i32* %531, align 4
  %533 = getelementptr inbounds i32, i32* %522, i64 4
  %534 = getelementptr inbounds i32, i32* %521, i64 4
  %535 = load i32, i32* %533, align 4
  store i32 %535, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %522, i64 5
  %537 = getelementptr inbounds i32, i32* %521, i64 5
  %538 = load i32, i32* %536, align 4
  store i32 %538, i32* %537, align 4
  %539 = getelementptr inbounds i32, i32* %522, i64 6
  %540 = getelementptr inbounds i32, i32* %521, i64 6
  %541 = load i32, i32* %539, align 4
  store i32 %541, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %522, i64 7
  %543 = getelementptr inbounds i32, i32* %521, i64 7
  %544 = load i32, i32* %542, align 4
  store i32 %544, i32* %543, align 4
  %545 = getelementptr inbounds i32, i32* %522, i64 8
  %546 = getelementptr inbounds i32, i32* %521, i64 8
  %547 = icmp eq i32* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !85

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = icmp slt i32 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i32, i32* %551, i64 1
  %556 = ptrtoint i32* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i32*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i32, i32* %26, i64 %563
  %565 = ptrtoint i32* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 2
  %570 = load i32, i32* %564, align 4
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i32* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = icmp slt i32 %570, %576
  %578 = getelementptr inbounds i32, i32* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i32* %572, i32* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i32* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i32* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 2
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i32*
  %593 = inttoptr i64 %550 to i32*
  store i32 %27, i32* %593, align 4
  store i32 %552, i32* %592, align 4
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i32, i32* %560, i64 %595
  %597 = ptrtoint i32* %596 to i64
  %598 = ptrtoint i32* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 2
  %603 = load i32, i32* %596, align 4
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i32* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i32, i32* %605, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = icmp slt i32 %609, %603
  %611 = getelementptr inbounds i32, i32* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i32* %611, i32* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i32* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i32* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 2
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i32*
  %630 = inttoptr i64 %624 to i32*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i32* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i32* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i32, i32* %629, i64 1
  %638 = icmp eq i32* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i32, i32* %629, align 4
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 2
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %631, i8* align 4 %632, i64 %641, i1 false) #12
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i32, i32* %629, i64 %642
  store i32 %640, i32* %646, align 4
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i32, i32* %26, i64 1
  %649 = icmp eq i32* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i32, i32* %630, i64 -1
  %652 = load i32, i32* %651, align 4
  %653 = ptrtoint i32* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 2
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i32, i32* %630, i64 %658
  %660 = bitcast i32* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %660, i8* align 4 %631, i64 %654, i1 false) #12
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i32* [ %659, %656 ], [ %630, %650 ]
  store i32 %652, i32* %629, align 4
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 2
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 2
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i32, i32* %629, align 4
  store i32 %27, i32* %629, align 4
  store i32 %670, i32* %26, align 4
  %671 = getelementptr inbounds i32, i32* %629, i64 1
  %672 = getelementptr inbounds i32, i32* %26, i64 1
  %673 = icmp eq i32* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i32, i32* %26, i64 -2
  %676 = bitcast i32* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 2
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 8
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i32, i32* %629, i64 2
  %685 = getelementptr i32, i32* %26, i64 -2
  %686 = bitcast i32* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 2
  %691 = getelementptr i32, i32* %684, i64 %690
  %692 = getelementptr i32, i32* %26, i64 2
  %693 = getelementptr i32, i32* %692, i64 %690
  %694 = icmp ult i32* %671, %693
  %695 = icmp ult i32* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 9223372036854775800
  %699 = getelementptr i32, i32* %672, i64 %698
  %700 = getelementptr i32, i32* %671, i64 %698
  %701 = add nsw i64 %698, -8
  %702 = lshr exact i64 %701, 3
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i32, i32* %672, i64 %709
  %712 = getelementptr i32, i32* %671, i64 %709
  %713 = bitcast i32* %711 to <4 x i32>*
  %714 = load <4 x i32>, <4 x i32>* %713, align 4, !alias.scope !86
  %715 = getelementptr i32, i32* %711, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %717 = load <4 x i32>, <4 x i32>* %716, align 4, !alias.scope !86
  %718 = bitcast i32* %712 to <4 x i32>*
  %719 = load <4 x i32>, <4 x i32>* %718, align 4, !alias.scope !89, !noalias !86
  %720 = getelementptr i32, i32* %712, i64 4
  %721 = bitcast i32* %720 to <4 x i32>*
  %722 = load <4 x i32>, <4 x i32>* %721, align 4, !alias.scope !89, !noalias !86
  %723 = bitcast i32* %712 to <4 x i32>*
  store <4 x i32> %714, <4 x i32>* %723, align 4, !alias.scope !89, !noalias !86
  %724 = bitcast i32* %720 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %724, align 4, !alias.scope !89, !noalias !86
  %725 = bitcast i32* %711 to <4 x i32>*
  store <4 x i32> %719, <4 x i32>* %725, align 4, !alias.scope !86
  %726 = bitcast i32* %715 to <4 x i32>*
  store <4 x i32> %722, <4 x i32>* %726, align 4, !alias.scope !86
  %727 = or i64 %709, 8
  %728 = getelementptr i32, i32* %672, i64 %727
  %729 = getelementptr i32, i32* %671, i64 %727
  %730 = bitcast i32* %728 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !86
  %732 = getelementptr i32, i32* %728, i64 4
  %733 = bitcast i32* %732 to <4 x i32>*
  %734 = load <4 x i32>, <4 x i32>* %733, align 4, !alias.scope !86
  %735 = bitcast i32* %729 to <4 x i32>*
  %736 = load <4 x i32>, <4 x i32>* %735, align 4, !alias.scope !89, !noalias !86
  %737 = getelementptr i32, i32* %729, i64 4
  %738 = bitcast i32* %737 to <4 x i32>*
  %739 = load <4 x i32>, <4 x i32>* %738, align 4, !alias.scope !89, !noalias !86
  %740 = bitcast i32* %729 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %740, align 4, !alias.scope !89, !noalias !86
  %741 = bitcast i32* %737 to <4 x i32>*
  store <4 x i32> %734, <4 x i32>* %741, align 4, !alias.scope !89, !noalias !86
  %742 = bitcast i32* %728 to <4 x i32>*
  store <4 x i32> %736, <4 x i32>* %742, align 4, !alias.scope !86
  %743 = bitcast i32* %732 to <4 x i32>*
  store <4 x i32> %739, <4 x i32>* %743, align 4, !alias.scope !86
  %744 = add i64 %709, 16
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !91

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i32, i32* %672, i64 %748
  %752 = getelementptr i32, i32* %671, i64 %748
  %753 = bitcast i32* %751 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !86
  %755 = getelementptr i32, i32* %751, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  %757 = load <4 x i32>, <4 x i32>* %756, align 4, !alias.scope !86
  %758 = bitcast i32* %752 to <4 x i32>*
  %759 = load <4 x i32>, <4 x i32>* %758, align 4, !alias.scope !89, !noalias !86
  %760 = getelementptr i32, i32* %752, i64 4
  %761 = bitcast i32* %760 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4, !alias.scope !89, !noalias !86
  %763 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %763, align 4, !alias.scope !89, !noalias !86
  %764 = bitcast i32* %760 to <4 x i32>*
  store <4 x i32> %757, <4 x i32>* %764, align 4, !alias.scope !89, !noalias !86
  %765 = bitcast i32* %751 to <4 x i32>*
  store <4 x i32> %759, <4 x i32>* %765, align 4, !alias.scope !86
  %766 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %762, <4 x i32>* %766, align 4, !alias.scope !86
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i32* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i32* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i32* %771 to i64
  %773 = getelementptr i32, i32* %26, i64 -1
  %774 = ptrtoint i32* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 2
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i32* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i32* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i32, i32* %781, align 4
  %785 = load i32, i32* %782, align 4
  store i32 %784, i32* %782, align 4
  store i32 %785, i32* %781, align 4
  %786 = getelementptr inbounds i32, i32* %782, i64 1
  %787 = getelementptr inbounds i32, i32* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !92

790:                                              ; preds = %780, %769
  %791 = phi i32* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i32* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 12
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i32* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i32* [ %811, %794 ], [ %792, %790 ]
  %797 = load i32, i32* %795, align 4
  %798 = load i32, i32* %796, align 4
  store i32 %797, i32* %796, align 4
  store i32 %798, i32* %795, align 4
  %799 = getelementptr inbounds i32, i32* %796, i64 1
  %800 = getelementptr inbounds i32, i32* %795, i64 1
  %801 = load i32, i32* %800, align 4
  %802 = load i32, i32* %799, align 4
  store i32 %801, i32* %799, align 4
  store i32 %802, i32* %800, align 4
  %803 = getelementptr inbounds i32, i32* %796, i64 2
  %804 = getelementptr inbounds i32, i32* %795, i64 2
  %805 = load i32, i32* %804, align 4
  %806 = load i32, i32* %803, align 4
  store i32 %805, i32* %803, align 4
  store i32 %806, i32* %804, align 4
  %807 = getelementptr inbounds i32, i32* %796, i64 3
  %808 = getelementptr inbounds i32, i32* %795, i64 3
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %807, align 4
  store i32 %809, i32* %807, align 4
  store i32 %810, i32* %808, align 4
  %811 = getelementptr inbounds i32, i32* %796, i64 4
  %812 = getelementptr inbounds i32, i32* %795, i64 4
  %813 = icmp eq i32* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !93

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i32, i32* %629, i64 %815
  %823 = shl nsw i64 %815, 2
  %824 = add i64 %823, -4
  %825 = and i64 %824, 4
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i32, i32* %822, i64 -1
  %829 = load i32, i32* %828, align 4
  %830 = getelementptr inbounds i32, i32* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i32* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i32* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i32* %833 to i64
  %835 = load i32, i32* %833, align 4
  store i32 %835, i32* %832, align 4
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 2
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i32, i32* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i32, i32* %629, i64 %840
  %842 = select i1 %838, i32* %839, i32* %841
  %843 = icmp eq i32* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i32 %829, i32* %833, align 4
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i32* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i32, i32* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i32* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i32, i32* %851, i64 -1
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds i32, i32* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i32* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i32* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i32* %857 to i64
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %856, align 4
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 2
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i32, i32* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i32, i32* %629, i64 %864
  %866 = select i1 %862, i32* %863, i32* %865
  %867 = icmp eq i32* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i32 %853, i32* %857, align 4
  %869 = getelementptr inbounds i32, i32* %851, i64 -2
  %870 = load i32, i32* %869, align 4
  %871 = getelementptr inbounds i32, i32* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i32* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i32* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %560, i32* %629, i32* %873, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i32* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %873, i32* %630, i32* %15, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i32* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i32* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i32* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i32* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i32* %890 to i64
  %892 = load i32, i32* %890, align 4
  store i32 %892, i32* %889, align 4
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 2
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i32, i32* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i32, i32* %629, i64 %897
  %899 = select i1 %895, i32* %896, i32* %898
  %900 = icmp eq i32* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i32 %870, i32* %890, align 4
  %902 = icmp eq i32* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare zeroext i1 @_ZN3net8HttpUtil17IsValidHeaderNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3net8HttpUtil18IsValidHeaderValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions3api23declarative_net_request12URLTransformD1Ev(%"struct.extensions::api::declarative_net_request::URLTransform"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN10extensions3api23declarative_net_request16ModifyHeaderInfoD1Ev(%"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !10}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !10}
!24 = distinct !{!24, !12}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !12}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !12}
!39 = distinct !{!39, !12}
!40 = distinct !{!40, !10}
!41 = distinct !{!41, !10}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !12}
!49 = distinct !{!49, !12}
!50 = distinct !{!50, !10}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !12}
!58 = distinct !{!58, !12}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !12}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !12}
!68 = distinct !{!68, !12}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !12}
!76 = distinct !{!76, !10}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !10}
!83 = distinct !{!83, !12}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !10}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !10}
!92 = distinct !{!92, !12}
!93 = distinct !{!93, !10}
