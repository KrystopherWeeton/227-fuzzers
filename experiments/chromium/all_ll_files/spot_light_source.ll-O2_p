; ModuleID = '../../third_party/blink/renderer/platform/graphics/filters/spot_light_source.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/filters/spot_light_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SpotLightSource" = type { %"class.blink::LightSource", %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D", float, float }
%"class.blink::LightSource" = type { i32 (...)**, %"class.WTF::RefCounted", i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FloatPoint3D" = type { float, float, float }
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }

$_ZN5blink15SpotLightSourceD0Ev = comdat any

$_ZN5blink11LightSource10SetAzimuthEf = comdat any

$_ZN5blink11LightSource12SetElevationEf = comdat any

@.str = private unnamed_addr constant [19 x i8] c"[type=SPOT-LIGHT] \00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"[position=\22\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"\22]\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"[direction=\22\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"[specularExponent=\22\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"[limitingConeAngle=\22\00", align 1
@_ZTVN5blink15SpotLightSourceE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LightSource"*)* @_ZN5blink11LightSourceD2Ev to i8*), i8* bitcast (void (%"class.blink::SpotLightSource"*)* @_ZN5blink15SpotLightSourceD0Ev to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::SpotLightSource"*, %"class.WTF::TextStream"*)* @_ZNK5blink15SpotLightSource22ExternalRepresentationERN3WTF10TextStreamE to i8*), i8* bitcast (i1 (%"class.blink::LightSource"*, float)* @_ZN5blink11LightSource10SetAzimuthEf to i8*), i8* bitcast (i1 (%"class.blink::LightSource"*, float)* @_ZN5blink11LightSource12SetElevationEf to i8*), i8* bitcast (i1 (%"class.blink::SpotLightSource"*, %"class.blink::FloatPoint3D"*)* @_ZN5blink15SpotLightSource11SetPositionERKNS_12FloatPoint3DE to i8*), i8* bitcast (i1 (%"class.blink::SpotLightSource"*, %"class.blink::FloatPoint3D"*)* @_ZN5blink15SpotLightSource11SetPointsAtERKNS_12FloatPoint3DE to i8*), i8* bitcast (i1 (%"class.blink::SpotLightSource"*, float)* @_ZN5blink15SpotLightSource19SetSpecularExponentEf to i8*), i8* bitcast (i1 (%"class.blink::SpotLightSource"*, float)* @_ZN5blink15SpotLightSource20SetLimitingConeAngleEf to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15SpotLightSource11SetPositionERKNS_12FloatPoint3DE(%"class.blink::SpotLightSource"* nocapture, %"class.blink::FloatPoint3D"* nocapture readonly dereferenceable(12)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %3, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fcmp oeq float %5, %7
  br i1 %8, label %9, label %21

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 1, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 1, i32 2
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 2
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %17, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %2, %9, %15
  %22 = bitcast %"class.blink::FloatPoint3D"* %3 to i8*
  %23 = bitcast %"class.blink::FloatPoint3D"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 4 %23, i64 12, i1 false)
  br label %24

24:                                               ; preds = %15, %21
  %25 = phi i1 [ true, %21 ], [ false, %15 ]
  ret i1 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15SpotLightSource11SetPointsAtERKNS_12FloatPoint3DE(%"class.blink::SpotLightSource"* nocapture, %"class.blink::FloatPoint3D"* nocapture readonly dereferenceable(12)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %3, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fcmp oeq float %5, %7
  br i1 %8, label %9, label %21

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 2, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 2, i32 2
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 2
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %17, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %2, %9, %15
  %22 = bitcast %"class.blink::FloatPoint3D"* %3 to i8*
  %23 = bitcast %"class.blink::FloatPoint3D"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %24

24:                                               ; preds = %15, %21
  %25 = phi i1 [ true, %21 ], [ false, %15 ]
  ret i1 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15SpotLightSource19SetSpecularExponentEf(%"class.blink::SpotLightSource"* nocapture, float) unnamed_addr #2 align 2 {
  %3 = fcmp ult float %1, 1.280000e+02
  %4 = fcmp ole float %1, 1.000000e+00
  %5 = select i1 %4, float 1.000000e+00, float %1
  %6 = select i1 %3, float %5, float 1.280000e+02
  %7 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 3
  %8 = load float, float* %7, align 8
  %9 = fcmp oeq float %8, %6
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  store float %6, float* %7, align 8
  br label %11

11:                                               ; preds = %2, %10
  %12 = phi i1 [ true, %10 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15SpotLightSource20SetLimitingConeAngleEf(%"class.blink::SpotLightSource"* nocapture, float) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 4
  %4 = load float, float* %3, align 4
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink15SpotLightSource22ExternalRepresentationERN3WTF10TextStreamE(%"class.blink::SpotLightSource"*, %"class.WTF::TextStream"* returned dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #6
  %4 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)) #6
  %5 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 1
  %6 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_12FloatPoint3DE(%"class.WTF::TextStream"* dereferenceable(48) %4, %"class.blink::FloatPoint3D"* dereferenceable(12) %5) #6
  %7 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #6
  %8 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #6
  %9 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 2
  %10 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_12FloatPoint3DE(%"class.WTF::TextStream"* dereferenceable(48) %8, %"class.blink::FloatPoint3D"* dereferenceable(12) %9) #6
  %11 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #6
  %12 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0)) #6
  %13 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 3
  %14 = load float, float* %13, align 8
  %15 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %12, float %14) #6
  %16 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #6
  %17 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #6
  %18 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 4
  %19 = load float, float* %18, align 4
  %20 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %17, float %19) #6
  %21 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #6
  ret %"class.WTF::TextStream"* %1
}

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #3

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_12FloatPoint3DE(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::FloatPoint3D"* dereferenceable(12)) local_unnamed_addr #3

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"*, float) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink11LightSourceD2Ev(%"class.blink::LightSource"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15SpotLightSourceD0Ev(%"class.blink::SpotLightSource"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SpotLightSource", %"class.blink::SpotLightSource"* %0, i64 0, i32 0
  tail call void @_ZN5blink11LightSourceD2Ev(%"class.blink::LightSource"* %2) #6
  %3 = bitcast %"class.blink::SpotLightSource"* %0 to i8*
  tail call void @free(i8* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11LightSource10SetAzimuthEf(%"class.blink::LightSource"*, float) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11LightSource12SetElevationEf(%"class.blink::LightSource"*, float) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
