; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/common/vp9_frame_buffers.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/common/vp9_frame_buffers.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.vpx_codec_frame_buffer = type { i8*, i64, i8* }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_alloc_internal_frame_buffers(%struct.InternalFrameBufferList* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.InternalFrameBufferList, %struct.InternalFrameBufferList* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %struct.InternalFrameBufferList, %struct.InternalFrameBufferList* %0, i64 0, i32 1
  %6 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %5, align 8
  br i1 %4, label %7, label %19

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %14, %7 ], [ 0, %1 ]
  %9 = phi %struct.InternalFrameBuffer* [ %18, %7 ], [ %6, %1 ]
  %10 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %9, i64 %8, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @vpx_free(i8* %11) #3
  %12 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %5, align 8
  %13 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %12, i64 %8, i32 0
  store i8* null, i8** %13, align 8
  %14 = add nuw nsw i64 %8, 1
  %15 = load i32, i32* %2, align 8
  %16 = sext i32 %15 to i64
  %17 = icmp slt i64 %14, %16
  %18 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %5, align 8
  br i1 %17, label %7, label %19

19:                                               ; preds = %7, %1
  %20 = phi %struct.InternalFrameBuffer* [ %6, %1 ], [ %18, %7 ]
  %21 = bitcast %struct.InternalFrameBuffer* %20 to i8*
  tail call void @vpx_free(i8* %21) #3
  store %struct.InternalFrameBuffer* null, %struct.InternalFrameBuffer** %5, align 8
  store i32 16, i32* %2, align 8
  %22 = tail call i8* @vpx_calloc(i64 16, i64 24) #3
  %23 = bitcast %struct.InternalFrameBuffer** %5 to i8**
  store i8* %22, i8** %23, align 8
  %24 = icmp eq i8* %22, null
  %25 = zext i1 %24 to i32
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_free_internal_frame_buffers(%struct.InternalFrameBufferList* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.InternalFrameBufferList, %struct.InternalFrameBufferList* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %struct.InternalFrameBufferList, %struct.InternalFrameBufferList* %0, i64 0, i32 1
  %6 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %5, align 8
  br i1 %4, label %7, label %19

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %14, %7 ], [ 0, %1 ]
  %9 = phi %struct.InternalFrameBuffer* [ %18, %7 ], [ %6, %1 ]
  %10 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %9, i64 %8, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @vpx_free(i8* %11) #3
  %12 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %5, align 8
  %13 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %12, i64 %8, i32 0
  store i8* null, i8** %13, align 8
  %14 = add nuw nsw i64 %8, 1
  %15 = load i32, i32* %2, align 8
  %16 = sext i32 %15 to i64
  %17 = icmp slt i64 %14, %16
  %18 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %5, align 8
  br i1 %17, label %7, label %19

19:                                               ; preds = %7, %1
  %20 = phi %struct.InternalFrameBuffer* [ %6, %1 ], [ %18, %7 ]
  %21 = bitcast %struct.InternalFrameBuffer* %20 to i8*
  tail call void @vpx_free(i8* %21) #3
  store %struct.InternalFrameBuffer* null, %struct.InternalFrameBuffer** %5, align 8
  ret void
}

declare i8* @vpx_calloc(i64, i64) local_unnamed_addr #1

declare void @vpx_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_get_frame_buffer(i8* readonly, i64, %struct.vpx_codec_frame_buffer* nocapture) local_unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %66, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %0 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %5
  %10 = getelementptr inbounds i8, i8* %0, i64 8
  %11 = bitcast i8* %10 to %struct.InternalFrameBuffer**
  %12 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %11, align 8
  %13 = sext i32 %7 to i64
  br label %14

14:                                               ; preds = %9, %20
  %15 = phi i64 [ 0, %9 ], [ %21, %20 ]
  %16 = phi i32 [ 0, %9 ], [ %22, %20 ]
  %17 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %12, i64 %15, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %14
  %21 = add nuw nsw i64 %15, 1
  %22 = add nuw nsw i32 %16, 1
  %23 = icmp slt i64 %21, %13
  br i1 %23, label %14, label %26

24:                                               ; preds = %14
  %25 = trunc i64 %15 to i32
  br label %26

26:                                               ; preds = %20, %24, %5
  %27 = phi i32 [ 0, %5 ], [ %25, %24 ], [ %22, %20 ]
  %28 = icmp eq i32 %27, %7
  br i1 %28, label %66, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i64 8
  %31 = bitcast i8* %30 to %struct.InternalFrameBuffer**
  %32 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %31, align 8
  %33 = zext i32 %27 to i64
  %34 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %32, i64 %33, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, %1
  br i1 %36, label %37, label %50

37:                                               ; preds = %29
  %38 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %32, i64 %33, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @vpx_free(i8* %39) #3
  %40 = tail call i8* @vpx_calloc(i64 1, i64 %1) #3
  %41 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %31, align 8
  %42 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %41, i64 %33, i32 0
  store i8* %40, i8** %42, align 8
  %43 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %31, align 8
  %44 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %43, i64 %33, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %66, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %43, i64 %33, i32 1
  store i64 %1, i64* %48, align 8
  %49 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %31, align 8
  br label %50

50:                                               ; preds = %47, %29
  %51 = phi %struct.InternalFrameBuffer* [ %49, %47 ], [ %32, %29 ]
  %52 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %51, i64 %33, i32 0
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %struct.vpx_codec_frame_buffer* %2 to i64*
  store i64 %54, i64* %55, align 8
  %56 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %31, align 8
  %57 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %56, i64 %33, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %struct.vpx_codec_frame_buffer, %struct.vpx_codec_frame_buffer* %2, i64 0, i32 1
  store i64 %58, i64* %59, align 8
  %60 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %31, align 8
  %61 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %60, i64 %33, i32 2
  store i32 1, i32* %61, align 8
  %62 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %31, align 8
  %63 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %62, i64 %33
  %64 = getelementptr inbounds %struct.vpx_codec_frame_buffer, %struct.vpx_codec_frame_buffer* %2, i64 0, i32 2
  %65 = bitcast i8** %64 to %struct.InternalFrameBuffer**
  store %struct.InternalFrameBuffer* %63, %struct.InternalFrameBuffer** %65, align 8
  br label %66

66:                                               ; preds = %37, %26, %3, %50
  %67 = phi i32 [ 0, %50 ], [ -1, %3 ], [ -1, %26 ], [ -1, %37 ]
  ret i32 %67
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @vp9_release_frame_buffer(i8* nocapture readnone, %struct.vpx_codec_frame_buffer* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.vpx_codec_frame_buffer, %struct.vpx_codec_frame_buffer* %1, i64 0, i32 2
  %4 = bitcast i8** %3 to %struct.InternalFrameBuffer**
  %5 = load %struct.InternalFrameBuffer*, %struct.InternalFrameBuffer** %4, align 8
  %6 = icmp eq %struct.InternalFrameBuffer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.InternalFrameBuffer, %struct.InternalFrameBuffer* %5, i64 0, i32 2
  store i32 0, i32* %8, align 8
  br label %9

9:                                                ; preds = %2, %7
  ret i32 0
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
