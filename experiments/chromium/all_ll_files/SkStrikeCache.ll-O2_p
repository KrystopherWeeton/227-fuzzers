; ModuleID = '../../third_party/skia/src/core/SkStrikeCache.cpp'
source_filename = "../../third_party/skia/src/core/SkStrikeCache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.33, i64, i64, i32, i32 }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.27", i64, i8, [7 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap, %"class.std::__1::vector", %class.SkArenaAlloc }
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp, %class.sk_sp.6, %class.sk_sp.7, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.sk_sp.6 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.7 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkTMaskPreBlend = type { %class.sk_sp.8, i8*, i8*, i8* }
%class.sk_sp.8 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%struct.SkPoint = type { float, float }
%struct.SkIPoint = type { i32, i32 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%struct.SkPackedGlyphID = type { i32 }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.24" }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.16, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.16 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.17, %class.SkTDArray.18, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.17 = type { i8*, i32, i32 }
%class.SkTDArray.18 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.19 }
%class.SkTDArray.19 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.20", [3 x i8] }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkGlyph** }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%class.SkTHashTable.33 = type { i32, i32, %class.SkAutoTArray.34 }
%class.SkAutoTArray.34 = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type <{ %class.sk_sp.41, i32, [4 x i8] }>
%class.sk_sp.41 = type { %"class.SkStrikeCache::Strike"* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%struct.SkScalerContextEffects = type { %class.SkPathEffect*, %class.SkMaskFilter* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)* }
%class.SkTraceMemoryDump = type { i32 (...)** }
%class.SkString = type { %class.sk_sp.48 }
%class.sk_sp.48 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.51, %class.SkAutoTMalloc }
%class.SkAutoTArray.51 = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon }
%union.anon = type { %class.SkGlyph* }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.63, %class.SkSTArray, %class.SkSTArray.68 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.62" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.62" = type { %struct.SkPoint* }
%class.SkZip.63 = type { %"class.std::__1::tuple.64", i64 }
%"class.std::__1::tuple.64" = type { %"struct.std::__1::__tuple_impl.65" }
%"struct.std::__1::__tuple_impl.65" = type { %"class.std::__1::__tuple_leaf.66", %"class.std::__1::__tuple_leaf.67" }
%"class.std::__1::__tuple_leaf.66" = type { i16* }
%"class.std::__1::__tuple_leaf.67" = type { %struct.SkPoint* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { i16*, i64 }
%class.SkSTArray.68 = type { %class.SkAlignedSTStorage.69, %class.SkTArray.70 }
%class.SkAlignedSTStorage.69 = type { [32 x i8] }
%class.SkTArray.70 = type { %struct.SkPoint*, i64 }

$_ZNK13SkStrikeCache6Strike13getDescriptorEv = comdat any

$_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE6removeERKS4_ = comdat any

$_ZN13SkStrikeCacheD2Ev = comdat any

$_ZN13SkStrikeCacheD0Ev = comdat any

$_ZThn16_NK13SkStrikeCache6Strike13getDescriptorEv = comdat any

$_ZNK18SkScalerContextRec4dumpEv = comdat any

$_ZN13SkStrikeCache6StrikeD2Ev = comdat any

$_ZN13SkStrikeCache6StrikeD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkStrikeCache6Strike12roundingSpecEv = comdat any

$_ZN13SkStrikeCache6Strike21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer = comdat any

$_ZN13SkStrikeCache6Strike21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer = comdat any

$_ZN13SkStrikeCache6Strike21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer = comdat any

$_ZN13SkStrikeCache6Strike18onAboutToExitScopeEv = comdat any

$_ZThn16_N13SkStrikeCache6StrikeD1Ev = comdat any

$_ZThn16_N13SkStrikeCache6StrikeD0Ev = comdat any

$_ZThn16_N13SkStrikeCache6Strike21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer = comdat any

$_ZThn16_N13SkStrikeCache6Strike21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer = comdat any

$_ZThn16_N13SkStrikeCache6Strike21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer = comdat any

$_ZThn16_NK13SkStrikeCache6Strike12roundingSpecEv = comdat any

$_ZThn16_N13SkStrikeCache6Strike18onAboutToExitScopeEv = comdat any

$_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE6resizeEi = comdat any

$_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE12uncheckedSetEOS3_ = comdat any

$_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE10removeSlotEi = comdat any

$_ZTVN13SkStrikeCache6StrikeE = comdat any

@gSkUseThreadLocalStrikeCaches_IAcknowledgeThisIsIncrediblyExperimental = hidden local_unnamed_addr global i8 0, align 1
@_ZZN13SkStrikeCache17GlobalStrikeCacheEvE5cache = internal thread_local unnamed_addr global %class.SkStrikeCache* null, align 8
@_ZGVZN13SkStrikeCache17GlobalStrikeCacheEvE5cache = internal thread_local unnamed_addr global i1 false, align 1
@_ZZN13SkStrikeCache17GlobalStrikeCacheEvE5cache_0 = internal unnamed_addr global %class.SkStrikeCache* null, align 8
@_ZGVZN13SkStrikeCache17GlobalStrikeCacheEvE5cache_0 = internal global i64 0, align 8
@.str = private unnamed_addr constant [50 x i8] c"../../third_party/skia/src/core/SkStrikeCache.cpp\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"GlyphCache [     used    budget ]\0A\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"    bytes  [ %8zu  %8zu ]\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"    count  [ %8zu  %8zu ]\0A\00", align 1
@_ZN12_GLOBAL__N_119gGlyphCacheDumpNameE = internal constant [20 x i8] c"skia/sk_glyph_cache\00", align 16
@.str.4 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"budget_size\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"glyph_count\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"objects\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"budget_glyph_count\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@_ZTV13SkStrikeCache = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkStrikeCache*)* @_ZN13SkStrikeCacheD2Ev to i8*), i8* bitcast (void (%class.SkStrikeCache*)* @_ZN13SkStrikeCacheD0Ev to i8*), i8* bitcast (%class.SkStrikeForGPU* (%class.SkStrikeCache*, %class.SkDescriptor*, %struct.SkScalerContextEffects*, %class.SkTypeface*)* @_ZN13SkStrikeCache24findOrCreateScopedStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface to i8*)] }, align 8
@.str.11 = private unnamed_addr constant [10 x i8] c"index %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"    Rec\0A\00", align 1
@.str.14 = private unnamed_addr constant [61 x i8] c"      textsize %a prescale %a preskew %a post [%a %a %a %a]\0A\00", align 1
@.str.15 = private unnamed_addr constant [61 x i8] c"      frame %g miter %g format %d join %d cap %d flags %#hx\0A\00", align 1
@.str.16 = private unnamed_addr constant [64 x i8] c"      lum bits %x, device gamma %d, paint gamma %d contrast %d\0A\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN13SkStrikeCache4DumpEvE3$_0FvRKNS4_6StrikeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@.str.17 = private unnamed_addr constant [12 x i8] c"%s/%s_%d/%p\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN13SkStrikeCache20DumpMemoryStatisticsEP17SkTraceMemoryDumpE3$_1FvRKNS4_6StrikeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN13SkStrikeCache6StrikeE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [10 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkStrikeCache::Strike"*)* @_ZN13SkStrikeCache6StrikeD2Ev to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*)* @_ZN13SkStrikeCache6StrikeD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%struct.SkGlyphPositionRoundingSpec* (%"class.SkStrikeCache::Strike"*)* @_ZNK13SkStrikeCache6Strike12roundingSpecEv to i8*), i8* bitcast (%class.SkDescriptor* (%"class.SkStrikeCache::Strike"*)* @_ZNK13SkStrikeCache6Strike13getDescriptorEv to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)* @_ZN13SkStrikeCache6Strike21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)* @_ZN13SkStrikeCache6Strike21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)* @_ZN13SkStrikeCache6Strike21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*)* @_ZN13SkStrikeCache6Strike18onAboutToExitScopeEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.SkStrikeCache::Strike"*)* @_ZThn16_N13SkStrikeCache6StrikeD1Ev to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*)* @_ZThn16_N13SkStrikeCache6StrikeD0Ev to i8*), i8* bitcast (%class.SkDescriptor* (%"class.SkStrikeCache::Strike"*)* @_ZThn16_NK13SkStrikeCache6Strike13getDescriptorEv to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)* @_ZThn16_N13SkStrikeCache6Strike21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)* @_ZThn16_N13SkStrikeCache6Strike21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)* @_ZThn16_N13SkStrikeCache6Strike21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer to i8*), i8* bitcast (%struct.SkGlyphPositionRoundingSpec* (%"class.SkStrikeCache::Strike"*)* @_ZThn16_NK13SkStrikeCache6Strike12roundingSpecEv to i8*), i8* bitcast (void (%"class.SkStrikeCache::Strike"*)* @_ZThn16_N13SkStrikeCache6Strike18onAboutToExitScopeEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() local_unnamed_addr #0 align 2 {
  %1 = load i8, i8* @gSkUseThreadLocalStrikeCaches_IAcknowledgeThisIsIncrediblyExperimental, align 1, !range !2
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %18, label %3

3:                                                ; preds = %0
  %4 = load i1, i1* @_ZGVZN13SkStrikeCache17GlobalStrikeCacheEvE5cache, align 1
  br i1 %4, label %37, label %5, !prof !3

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 80) #11
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkStrikeCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %6, i64 16
  %12 = getelementptr inbounds i8, i8* %6, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false) #12
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> <i64 20971520, i64 0>, <2 x i64>* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 72
  %15 = bitcast i8* %14 to i32*
  store i32 2048, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 76
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4
  store i8* %6, i8** bitcast (%class.SkStrikeCache** @_ZZN13SkStrikeCache17GlobalStrikeCacheEvE5cache to i8**), align 8
  store i1 true, i1* @_ZGVZN13SkStrikeCache17GlobalStrikeCacheEvE5cache, align 1
  br label %37

18:                                               ; preds = %0
  %19 = load atomic i8, i8* bitcast (i64* @_ZGVZN13SkStrikeCache17GlobalStrikeCacheEvE5cache_0 to i8*) acquire, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %37, !prof !4

21:                                               ; preds = %18
  %22 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN13SkStrikeCache17GlobalStrikeCacheEvE5cache_0) #12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %21
  %25 = tail call i8* @_Znwm(i64 80) #11
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkStrikeCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %25, i64 12
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %25, i64 16
  %31 = getelementptr inbounds i8, i8* %25, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 40, i1 false) #12
  %32 = bitcast i8* %31 to <2 x i64>*
  store <2 x i64> <i64 20971520, i64 0>, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 72
  %34 = bitcast i8* %33 to i32*
  store i32 2048, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %25, i64 76
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 4
  store i8* %25, i8** bitcast (%class.SkStrikeCache** @_ZZN13SkStrikeCache17GlobalStrikeCacheEvE5cache_0 to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN13SkStrikeCache17GlobalStrikeCacheEvE5cache_0) #12
  br label %37

37:                                               ; preds = %18, %24, %21, %5, %3
  %38 = phi %class.SkStrikeCache** [ @_ZZN13SkStrikeCache17GlobalStrikeCacheEvE5cache, %3 ], [ @_ZZN13SkStrikeCache17GlobalStrikeCacheEvE5cache, %5 ], [ @_ZZN13SkStrikeCache17GlobalStrikeCacheEvE5cache_0, %21 ], [ @_ZZN13SkStrikeCache17GlobalStrikeCacheEvE5cache_0, %24 ], [ @_ZZN13SkStrikeCache17GlobalStrikeCacheEvE5cache_0, %18 ]
  %39 = load %class.SkStrikeCache*, %class.SkStrikeCache** %38, align 8
  ret %class.SkStrikeCache* %39
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache18findOrCreateStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface(%class.sk_sp.41* noalias nocapture sret, %class.SkStrikeCache*, %class.SkDescriptor* dereferenceable(12), %struct.SkScalerContextEffects* dereferenceable(16), %class.SkTypeface* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.41, align 8
  %7 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %1, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acquire
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %7, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %12) #12
  br label %13

13:                                               ; preds = %5, %11
  %14 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %0, i64 0, i32 0
  store %"class.SkStrikeCache::Strike"* inttoptr (i64 -6148914691236517206 to %"class.SkStrikeCache::Strike"*), %"class.SkStrikeCache::Strike"** %14, align 8
  tail call void @_ZN13SkStrikeCache24internalFindStrikeOrNullERK12SkDescriptor(%class.sk_sp.41* sret %0, %class.SkStrikeCache* %1, %class.SkDescriptor* dereferenceable(12) %2)
  %15 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %14, align 8
  %16 = icmp eq %"class.SkStrikeCache::Strike"* %15, null
  br i1 %16, label %17, label %65

17:                                               ; preds = %13
  %18 = tail call %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface* %4, %struct.SkScalerContextEffects* dereferenceable(16) %3, %class.SkDescriptor* %2) #12
  %19 = bitcast %class.sk_sp.41* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = ptrtoint %class.SkStrikeCache* %1 to i64
  %21 = tail call i8* @_Znwm(i64 384) #11, !noalias !5
  %22 = bitcast i8* %21 to i32 (...)***
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 1, i32* %24, align 4, !noalias !5
  %25 = getelementptr inbounds i8, i8* %21, i64 16
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8, !noalias !5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %26, align 8, !noalias !5
  %27 = getelementptr inbounds i8, i8* %21, i64 24
  %28 = bitcast i8* %27 to i64*
  store i64 %20, i64* %28, align 8, !noalias !5
  %29 = getelementptr inbounds i8, i8* %21, i64 32
  %30 = getelementptr inbounds i8, i8* %21, i64 48
  %31 = bitcast i8* %30 to %class.SkScalerCache*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #12, !noalias !5
  tail call void @_ZN13SkScalerCacheC1ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEPK13SkFontMetrics(%class.SkScalerCache* %31, %class.SkDescriptor* dereferenceable(12) %2, %class.SkScalerContext* %18, %struct.SkFontMetrics* null) #12, !noalias !5
  %32 = getelementptr inbounds i8, i8* %21, i64 360
  %33 = bitcast i8* %32 to <2 x i64>*
  store <2 x i64> <i64 0, i64 312>, <2 x i64>* %33, align 8, !noalias !5
  %34 = getelementptr inbounds i8, i8* %21, i64 376
  store i8 0, i8* %34, align 8, !noalias !5
  %35 = ptrtoint i8* %21 to i64
  %36 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %6, i64 0, i32 0
  %37 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !10
  %38 = bitcast %class.sk_sp.41* %6 to i8**
  store i8* %21, i8** %38, align 8, !noalias !10
  call void @_ZN13SkStrikeCache20internalAttachToHeadE5sk_spINS_6StrikeEE(%class.SkStrikeCache* %1, %class.sk_sp.41* nonnull %6) #12, !noalias !10
  %39 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %36, align 8, !noalias !10
  %40 = icmp eq %"class.SkStrikeCache::Strike"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %17
  %42 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel, !noalias !10
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.SkStrikeCache::Strike"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.SkStrikeCache::Strike"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8, !noalias !10
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8, !noalias !10
  tail call void %50(%class.SkRefCntBase* nonnull %46) #12, !noalias !10
  br label %51

51:                                               ; preds = %17, %41, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %52 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %14, align 8
  %53 = bitcast %class.sk_sp.41* %0 to i64*
  store i64 %35, i64* %53, align 8
  %54 = icmp eq %"class.SkStrikeCache::Strike"* %52, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %"class.SkStrikeCache::Strike"* %52 to %class.SkRefCntBase*
  %61 = bitcast %"class.SkStrikeCache::Strike"* %52 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8
  tail call void %64(%class.SkRefCntBase* nonnull %60) #12
  br label %65

65:                                               ; preds = %59, %55, %51, %13
  %66 = tail call i64 @_ZN13SkStrikeCache13internalPurgeEm(%class.SkStrikeCache* %1, i64 0)
  %67 = atomicrmw add i32* %8, i32 1 release
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %7, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %70, i32 1) #12
  br label %71

71:                                               ; preds = %65, %69
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache24internalFindStrikeOrNullERK12SkDescriptor(%class.sk_sp.41* noalias nocapture sret, %class.SkStrikeCache* nocapture, %class.SkDescriptor* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %1, i64 0, i32 2
  %5 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %4, align 8
  %6 = icmp eq %"class.SkStrikeCache::Strike"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %5, i64 0, i32 6
  %9 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %8) #12
  %10 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %9, %class.SkDescriptor* dereferenceable(12) %2) #12
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %4, align 8
  %13 = icmp eq %"class.SkStrikeCache::Strike"* %12, null
  br i1 %13, label %89, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic, !noalias !11
  br label %89

17:                                               ; preds = %3, %7
  %18 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 1, i32 %19
  %22 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %1, i64 0, i32 4, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %89

25:                                               ; preds = %17
  %26 = add nsw i32 %23, -1
  %27 = and i32 %21, %26
  %28 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %1, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %49, %25
  %30 = phi i32 [ %23, %25 ], [ %50, %49 ]
  %31 = phi i32 [ 0, %25 ], [ %55, %49 ]
  %32 = phi i32 [ %27, %25 ], [ %54, %49 ]
  %33 = sext i32 %32 to i64
  %34 = load %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %28, align 8
  %35 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %34, i64 %33, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %89, label %38

38:                                               ; preds = %29
  %39 = icmp eq i32 %21, %36
  br i1 %39, label %40, label %49

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %34, i64 %33, i32 0
  %42 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %41, i64 0, i32 0
  %43 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %42, align 8
  %44 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %43, i64 0, i32 6
  %45 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %44) #12
  %46 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %2, %class.SkDescriptor* dereferenceable(12) %45) #12
  br i1 %46, label %57, label %47

47:                                               ; preds = %40
  %48 = load i32, i32* %22, align 4
  br label %49

49:                                               ; preds = %47, %38
  %50 = phi i32 [ %48, %47 ], [ %30, %38 ]
  %51 = add nsw i32 %32, -1
  %52 = icmp slt i32 %32, 1
  %53 = select i1 %52, i32 %50, i32 0
  %54 = add nsw i32 %51, %53
  %55 = add nuw nsw i32 %31, 1
  %56 = icmp slt i32 %55, %50
  br i1 %56, label %29, label %89

57:                                               ; preds = %40
  %58 = icmp eq %class.sk_sp.41* %41, null
  br i1 %58, label %89, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %41, i64 0, i32 0
  %61 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %60, align 8
  %62 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %4, align 8
  %63 = icmp eq %"class.SkStrikeCache::Strike"* %62, %61
  br i1 %63, label %84, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %61, i64 0, i32 4
  %66 = bitcast %"class.SkStrikeCache::Strike"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %61, i64 0, i32 5
  %69 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %68, align 8
  %70 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %69, i64 0, i32 4
  %71 = bitcast %"class.SkStrikeCache::Strike"** %70 to i64*
  store i64 %67, i64* %71, align 8
  %72 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %65, align 8
  %73 = icmp eq %"class.SkStrikeCache::Strike"* %72, null
  %74 = bitcast %"class.SkStrikeCache::Strike"** %68 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %1, i64 0, i32 3
  %77 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %72, i64 0, i32 5
  %78 = select i1 %73, %"class.SkStrikeCache::Strike"** %76, %"class.SkStrikeCache::Strike"** %77
  %79 = bitcast %"class.SkStrikeCache::Strike"** %78 to i64*
  store i64 %75, i64* %79, align 8
  %80 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %4, align 8
  %81 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %80, i64 0, i32 5
  store %"class.SkStrikeCache::Strike"* %61, %"class.SkStrikeCache::Strike"** %81, align 8
  %82 = bitcast %"class.SkStrikeCache::Strike"** %4 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %66, align 8
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %68, align 8
  store %"class.SkStrikeCache::Strike"* %61, %"class.SkStrikeCache::Strike"** %4, align 8
  br label %84

84:                                               ; preds = %59, %64
  %85 = icmp eq %"class.SkStrikeCache::Strike"* %61, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %61, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 1 monotonic, !noalias !14
  br label %89

89:                                               ; preds = %29, %49, %86, %84, %57, %17, %14, %11
  %90 = phi %"class.SkStrikeCache::Strike"* [ %12, %11 ], [ %12, %14 ], [ null, %17 ], [ null, %57 ], [ %61, %84 ], [ %61, %86 ], [ null, %49 ], [ null, %29 ]
  %91 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %0, i64 0, i32 0
  store %"class.SkStrikeCache::Strike"* %90, %"class.SkStrikeCache::Strike"** %91, align 8
  ret void
}

declare %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache20internalCreateStrikeERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEP13SkFontMetricsNS4_I14SkStrikePinnerNS6_ISB_EEEE(%class.sk_sp.41* noalias nocapture sret, %class.SkStrikeCache*, %class.SkDescriptor* dereferenceable(12), %class.SkScalerContext*, %struct.SkFontMetrics*, %class.SkStrikePinner*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.41, align 8
  %8 = ptrtoint %class.SkStrikePinner* %5 to i64
  %9 = ptrtoint %class.SkStrikeCache* %1 to i64
  %10 = tail call i8* @_Znwm(i64 384) #11, !noalias !17
  %11 = bitcast i8* %10 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4, !noalias !17
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !noalias !17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %15, align 8, !noalias !17
  %16 = getelementptr inbounds i8, i8* %10, i64 24
  %17 = bitcast i8* %16 to i64*
  store i64 %9, i64* %17, align 8, !noalias !17
  %18 = getelementptr inbounds i8, i8* %10, i64 32
  %19 = getelementptr inbounds i8, i8* %10, i64 48
  %20 = bitcast i8* %19 to %class.SkScalerCache*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #12, !noalias !17
  tail call void @_ZN13SkScalerCacheC1ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEPK13SkFontMetrics(%class.SkScalerCache* %20, %class.SkDescriptor* dereferenceable(12) %2, %class.SkScalerContext* %3, %struct.SkFontMetrics* %4) #12, !noalias !17
  %21 = getelementptr inbounds i8, i8* %10, i64 360
  %22 = bitcast i8* %21 to i64*
  store i64 %8, i64* %22, align 8, !noalias !17
  %23 = getelementptr inbounds i8, i8* %10, i64 368
  %24 = bitcast i8* %23 to i64*
  store i64 312, i64* %24, align 8, !noalias !17
  %25 = getelementptr inbounds i8, i8* %10, i64 376
  store i8 0, i8* %25, align 8, !noalias !17
  %26 = bitcast %class.sk_sp.41* %0 to i8**
  store i8* %10, i8** %26, align 8, !alias.scope !17
  %27 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %7, i64 0, i32 0
  %28 = atomicrmw add i32* %13, i32 1 monotonic
  %29 = bitcast %class.sk_sp.41* %7 to i8**
  store i8* %10, i8** %29, align 8
  call void @_ZN13SkStrikeCache20internalAttachToHeadE5sk_spINS_6StrikeEE(%class.SkStrikeCache* %1, %class.sk_sp.41* nonnull %7)
  %30 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %27, align 8
  %31 = icmp eq %"class.SkStrikeCache::Strike"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %6
  %33 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.SkStrikeCache::Strike"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.SkStrikeCache::Strike"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #12
  br label %42

42:                                               ; preds = %6, %32, %36
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13SkStrikeCache13internalPurgeEm(%class.SkStrikeCache*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 6
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = tail call i64 @llvm.usub.sat.i64(i64 %4, i64 %6)
  %8 = icmp ult i64 %7, %1
  %9 = select i1 %8, i64 %1, i64 %7
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = lshr i64 %4, 2
  %13 = icmp ult i64 %9, %12
  %14 = select i1 %13, i64 %12, i64 %9
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i64 [ 0, %2 ], [ %14, %11 ]
  %17 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 8
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %18, %20
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = sub nsw i32 %18, %20
  %24 = ashr i32 %18, 2
  %25 = icmp slt i32 %23, %24
  %26 = select i1 %25, i32 %24, i32 %23
  br label %27

27:                                               ; preds = %22, %15
  %28 = phi i32 [ %26, %22 ], [ 0, %15 ]
  %29 = icmp ne i32 %28, 0
  %30 = icmp ne i64 %16, 0
  %31 = or i1 %30, %29
  br i1 %31, label %32, label %91

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 3
  %34 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %33, align 8
  %35 = icmp eq %"class.SkStrikeCache::Strike"* %34, null
  br i1 %35, label %91, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 2
  %38 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 4
  br label %39

39:                                               ; preds = %36, %87
  %40 = phi %"class.SkStrikeCache::Strike"* [ %34, %36 ], [ %48, %87 ]
  %41 = phi i32 [ 0, %36 ], [ %89, %87 ]
  %42 = phi i64 [ 0, %36 ], [ %88, %87 ]
  %43 = icmp ult i64 %42, %16
  %44 = icmp slt i32 %41, %28
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %91

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %40, i64 0, i32 5
  %48 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %47, align 8
  %49 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %40, i64 0, i32 7, i32 0, i32 0, i32 0
  %50 = load %class.SkStrikePinner*, %class.SkStrikePinner** %49, align 8
  %51 = icmp eq %class.SkStrikePinner* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %46
  %53 = bitcast %class.SkStrikePinner* %50 to i1 (%class.SkStrikePinner*)***
  %54 = load i1 (%class.SkStrikePinner*)**, i1 (%class.SkStrikePinner*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%class.SkStrikePinner*)*, i1 (%class.SkStrikePinner*)** %54, i64 2
  %56 = load i1 (%class.SkStrikePinner*)*, i1 (%class.SkStrikePinner*)** %55, align 8
  %57 = tail call zeroext i1 %56(%class.SkStrikePinner* nonnull %50) #12
  br i1 %57, label %58, label %87

58:                                               ; preds = %52, %46
  %59 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %40, i64 0, i32 8
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, %42
  %62 = add nsw i32 %41, 1
  %63 = load i32, i32* %17, align 4
  %64 = add nsw i32 %63, -1
  store i32 %64, i32* %17, align 4
  %65 = load i64, i64* %59, align 8
  %66 = load i64, i64* %3, align 8
  %67 = sub i64 %66, %65
  store i64 %67, i64* %3, align 8
  %68 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %47, align 8
  %69 = icmp eq %"class.SkStrikeCache::Strike"* %68, null
  %70 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %40, i64 0, i32 4
  %71 = bitcast %"class.SkStrikeCache::Strike"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %68, i64 0, i32 4
  %74 = select i1 %69, %"class.SkStrikeCache::Strike"** %37, %"class.SkStrikeCache::Strike"** %73
  %75 = bitcast %"class.SkStrikeCache::Strike"** %74 to i64*
  store i64 %72, i64* %75, align 8
  %76 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %70, align 8
  %77 = icmp eq %"class.SkStrikeCache::Strike"* %76, null
  %78 = bitcast %"class.SkStrikeCache::Strike"** %47 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %76, i64 0, i32 5
  %81 = select i1 %77, %"class.SkStrikeCache::Strike"** %33, %"class.SkStrikeCache::Strike"** %80
  %82 = bitcast %"class.SkStrikeCache::Strike"** %81 to i64*
  store i64 %79, i64* %82, align 8
  %83 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %40, i64 0, i32 9
  %84 = bitcast %"class.SkStrikeCache::Strike"** %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #12
  store i8 1, i8* %83, align 8
  %85 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %40, i64 0, i32 6
  %86 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %85) #12
  tail call void @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE6removeERKS4_(%class.SkTHashTable.33* %38, %class.SkDescriptor* dereferenceable(12) %86) #12
  br label %87

87:                                               ; preds = %58, %52
  %88 = phi i64 [ %61, %58 ], [ %42, %52 ]
  %89 = phi i32 [ %62, %58 ], [ %41, %52 ]
  %90 = icmp eq %"class.SkStrikeCache::Strike"* %48, null
  br i1 %90, label %91, label %39

91:                                               ; preds = %39, %87, %32, %27
  %92 = phi i64 [ 0, %27 ], [ 0, %32 ], [ %42, %39 ], [ %88, %87 ]
  ret i64 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkStrikeForGPU* @_ZN13SkStrikeCache24findOrCreateScopedStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface(%class.SkStrikeCache*, %class.SkDescriptor* dereferenceable(12), %struct.SkScalerContextEffects* dereferenceable(16), %class.SkTypeface* dereferenceable(48)) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.41, align 8
  %6 = bitcast %class.sk_sp.41* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  call void @_ZN13SkStrikeCache18findOrCreateStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface(%class.sk_sp.41* nonnull sret %5, %class.SkStrikeCache* %0, %class.SkDescriptor* dereferenceable(12) %1, %struct.SkScalerContextEffects* dereferenceable(16) %2, %class.SkTypeface* dereferenceable(48) %3)
  %7 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %5, i64 0, i32 0
  %8 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %7, align 8
  %9 = icmp eq %"class.SkStrikeCache::Strike"* %8, null
  %10 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %8, i64 0, i32 2
  %11 = select i1 %9, %class.SkStrikeForGPU* null, %class.SkStrikeForGPU* %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret %class.SkStrikeForGPU* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache8PurgeAllEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv()
  %2 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %1, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %0
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #12
  br label %8

8:                                                ; preds = %6, %0
  %9 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %1, i64 0, i32 6
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN13SkStrikeCache13internalPurgeEm(%class.SkStrikeCache* %1, i64 %10) #12
  %12 = atomicrmw add i32* %3, i32 1 release
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %15, i32 1) #12
  br label %16

16:                                               ; preds = %8, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache8purgeAllEv(%class.SkStrikeCache*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 6
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN13SkStrikeCache13internalPurgeEm(%class.SkStrikeCache* %0, i64 %10)
  %12 = atomicrmw add i32* %3, i32 1 release
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %15, i32 1) #12
  br label %16

16:                                               ; preds = %8, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache4DumpEv() local_unnamed_addr #0 align 2 {
  %1 = alloca i32, align 4
  %2 = alloca %"class.std::__1::function", align 8
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #12
  %3 = tail call i64 @_ZN10SkGraphics16GetFontCacheUsedEv() #12
  %4 = tail call i64 @_ZN10SkGraphics17GetFontCacheLimitEv() #12
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i64 %3, i64 %4) #12
  %5 = tail call i32 @_ZN10SkGraphics21GetFontCacheCountUsedEv() #12
  %6 = tail call i32 @_ZN10SkGraphics22GetFontCacheCountLimitEv() #12
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %5, i32 %6) #12
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  store i32 0, i32* %1, align 4
  %8 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv()
  %9 = ptrtoint i32* %1 to i64
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)* @"_ZNSt3__110__function16__policy_invokerIFvRKN13SkStrikeCache6StrikeEEE11__call_implINS0_20__default_alloc_funcIZNS2_4DumpEvE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)** %10, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN13SkStrikeCache4DumpEvE3$_0FvRKNS4_6StrikeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %11, align 8
  %12 = bitcast %"class.std::__1::function"* %2 to i64*
  store i64 %9, i64* %12, align 8
  %13 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %8, i64 0, i32 1
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %0
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #12
  br label %19

19:                                               ; preds = %17, %0
  %20 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %8, i64 0, i32 2
  %21 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %20, align 8
  %22 = icmp eq %"class.SkStrikeCache::Strike"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0
  br label %30

25:                                               ; preds = %30, %19
  %26 = atomicrmw add i32* %14, i32 1 release
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %36

28:                                               ; preds = %25
  %29 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %29, i32 1) #12
  br label %36

30:                                               ; preds = %30, %23
  %31 = phi %"class.SkStrikeCache::Strike"* [ %21, %23 ], [ %34, %30 ]
  %32 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)** %10, align 8
  call void %32(%"union.std::__1::__function::__policy_storage"* nonnull %24, %"class.SkStrikeCache::Strike"* nonnull dereferenceable(384) %31) #12
  %33 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %31, i64 0, i32 4
  %34 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %33, align 8
  %35 = icmp eq %"class.SkStrikeCache::Strike"* %34, null
  br i1 %35, label %25, label %30

36:                                               ; preds = %25, %28
  %37 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %37, i64 0, i32 1
  %39 = load void (i8*)*, void (i8*)** %38, align 8
  %40 = icmp eq void (i8*)* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void %39(i8* %43) #12
  br label %44

44:                                               ; preds = %36, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  ret void
}

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

declare i64 @_ZN10SkGraphics16GetFontCacheUsedEv() local_unnamed_addr #4

declare i64 @_ZN10SkGraphics17GetFontCacheLimitEv() local_unnamed_addr #4

declare i32 @_ZN10SkGraphics21GetFontCacheCountUsedEv() local_unnamed_addr #4

declare i32 @_ZN10SkGraphics22GetFontCacheCountLimitEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkStrikeCache13forEachStrikeENSt3__18functionIFvRKNS_6StrikeEEEE(%class.SkStrikeCache*, %"class.std::__1::function"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw sub i32* %4, i32 1 acquire
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %8) #12
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 2
  %11 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %10, align 8
  %12 = icmp eq %"class.SkStrikeCache::Strike"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  br label %22

16:                                               ; preds = %22, %9
  %17 = atomicrmw add i32* %4, i32 1 release
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %20, i32 1) #12
  br label %21

21:                                               ; preds = %16, %19
  ret void

22:                                               ; preds = %13, %22
  %23 = phi %"class.SkStrikeCache::Strike"* [ %11, %13 ], [ %26, %22 ]
  %24 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)** %14, align 8
  tail call void %24(%"union.std::__1::__function::__policy_storage"* %15, %"class.SkStrikeCache::Strike"* nonnull dereferenceable(384) %23) #12
  %25 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %23, i64 0, i32 4
  %26 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %25, align 8
  %27 = icmp eq %"class.SkStrikeCache::Strike"* %26, null
  br i1 %27, label %16, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache20DumpMemoryStatisticsEP17SkTraceMemoryDump(%class.SkTraceMemoryDump*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkTraceMemoryDump*, align 8
  %3 = alloca %"class.std::__1::function", align 8
  store %class.SkTraceMemoryDump* %0, %class.SkTraceMemoryDump** %2, align 8
  %4 = tail call i64 @_ZN10SkGraphics16GetFontCacheUsedEv() #12
  %5 = bitcast %class.SkTraceMemoryDump* %0 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)***
  %6 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %5, align 8
  %7 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %6, align 8
  tail call void %7(%class.SkTraceMemoryDump* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN12_GLOBAL__N_119gGlyphCacheDumpNameE, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 %4) #12
  %8 = tail call i64 @_ZN10SkGraphics17GetFontCacheLimitEv() #12
  %9 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %5, align 8
  %10 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %9, align 8
  tail call void %10(%class.SkTraceMemoryDump* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN12_GLOBAL__N_119gGlyphCacheDumpNameE, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 %8) #12
  %11 = tail call i32 @_ZN10SkGraphics21GetFontCacheCountUsedEv() #12
  %12 = sext i32 %11 to i64
  %13 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %5, align 8
  %14 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %13, align 8
  tail call void %14(%class.SkTraceMemoryDump* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN12_GLOBAL__N_119gGlyphCacheDumpNameE, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 %12) #12
  %15 = tail call i32 @_ZN10SkGraphics22GetFontCacheCountLimitEv() #12
  %16 = sext i32 %15 to i64
  %17 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %5, align 8
  %18 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %17, align 8
  tail call void %18(%class.SkTraceMemoryDump* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN12_GLOBAL__N_119gGlyphCacheDumpNameE, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 %16) #12
  %19 = bitcast %class.SkTraceMemoryDump* %0 to i32 (%class.SkTraceMemoryDump*)***
  %20 = load i32 (%class.SkTraceMemoryDump*)**, i32 (%class.SkTraceMemoryDump*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%class.SkTraceMemoryDump*)*, i32 (%class.SkTraceMemoryDump*)** %20, i64 4
  %22 = load i32 (%class.SkTraceMemoryDump*)*, i32 (%class.SkTraceMemoryDump*)** %21, align 8
  %23 = tail call i32 %22(%class.SkTraceMemoryDump* %0) #12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %1
  %26 = bitcast %class.SkTraceMemoryDump* %0 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)***
  %27 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %27, i64 2
  %29 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %28, align 8
  tail call void %29(%class.SkTraceMemoryDump* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN12_GLOBAL__N_119gGlyphCacheDumpNameE, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* null) #12
  br label %67

30:                                               ; preds = %1
  %31 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv()
  %32 = ptrtoint %class.SkTraceMemoryDump** %2 to i64
  %33 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)* @"_ZNSt3__110__function16__policy_invokerIFvRKN13SkStrikeCache6StrikeEEE11__call_implINS0_20__default_alloc_funcIZNS2_20DumpMemoryStatisticsEP17SkTraceMemoryDumpE3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)** %33, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN13SkStrikeCache20DumpMemoryStatisticsEP17SkTraceMemoryDumpE3$_1FvRKNS4_6StrikeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %34, align 8
  %35 = bitcast %"class.std::__1::function"* %3 to i64*
  store i64 %32, i64* %35, align 8
  %36 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %31, i64 0, i32 1
  %37 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acquire
  %39 = icmp slt i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %30
  %41 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %36, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %41) #12
  br label %42

42:                                               ; preds = %40, %30
  %43 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %31, i64 0, i32 2
  %44 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %43, align 8
  %45 = icmp eq %"class.SkStrikeCache::Strike"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0
  br label %53

48:                                               ; preds = %53, %42
  %49 = atomicrmw add i32* %37, i32 1 release
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %48
  %52 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %36, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %52, i32 1) #12
  br label %59

53:                                               ; preds = %53, %46
  %54 = phi %"class.SkStrikeCache::Strike"* [ %44, %46 ], [ %57, %53 ]
  %55 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.SkStrikeCache::Strike"*)** %33, align 8
  call void %55(%"union.std::__1::__function::__policy_storage"* nonnull %47, %"class.SkStrikeCache::Strike"* nonnull dereferenceable(384) %54) #12
  %56 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %54, i64 0, i32 4
  %57 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %56, align 8
  %58 = icmp eq %"class.SkStrikeCache::Strike"* %57, null
  br i1 %58, label %48, label %53

59:                                               ; preds = %48, %51
  %60 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %34, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %60, i64 0, i32 1
  %62 = load void (i8*)*, void (i8*)** %61, align 8
  %63 = icmp eq void (i8*)* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void %62(i8* %66) #12
  br label %67

67:                                               ; preds = %64, %59, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache10findStrikeERK12SkDescriptor(%class.sk_sp.41* noalias nocapture sret, %class.SkStrikeCache*, %class.SkDescriptor* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %1, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acquire
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %9) #12
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %0, i64 0, i32 0
  store %"class.SkStrikeCache::Strike"* inttoptr (i64 -6148914691236517206 to %"class.SkStrikeCache::Strike"*), %"class.SkStrikeCache::Strike"** %11, align 8
  tail call void @_ZN13SkStrikeCache24internalFindStrikeOrNullERK12SkDescriptor(%class.sk_sp.41* sret %0, %class.SkStrikeCache* %1, %class.SkDescriptor* dereferenceable(12) %2)
  %12 = tail call i64 @_ZN13SkStrikeCache13internalPurgeEm(%class.SkStrikeCache* %1, i64 0)
  %13 = atomicrmw add i32* %5, i32 1 release
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %16, i32 1) #12
  br label %17

17:                                               ; preds = %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(12) %class.SkDescriptor* @_ZNK13SkStrikeCache6Strike13getDescriptorEv(%"class.SkStrikeCache::Strike"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6
  %3 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %2) #12
  ret %class.SkDescriptor* %3
}

declare zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor*, %class.SkDescriptor* dereferenceable(12)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache12createStrikeERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEP13SkFontMetricsNS4_I14SkStrikePinnerNS6_ISB_EEEE(%class.sk_sp.41* noalias nocapture sret, %class.SkStrikeCache*, %class.SkDescriptor* dereferenceable(12), %class.SkScalerContext*, %struct.SkFontMetrics*, %class.SkStrikePinner*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.41, align 8
  %8 = ptrtoint %class.SkStrikePinner* %5 to i64
  %9 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %1, i64 0, i32 1
  %10 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acquire
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %14) #12
  br label %15

15:                                               ; preds = %6, %13
  %16 = bitcast %class.sk_sp.41* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = ptrtoint %class.SkStrikeCache* %1 to i64
  %18 = tail call i8* @_Znwm(i64 384) #11, !noalias !20
  %19 = bitcast i8* %18 to i32 (...)***
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4, !noalias !20
  %22 = getelementptr inbounds i8, i8* %18, i64 16
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8, !noalias !20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %23, align 8, !noalias !20
  %24 = getelementptr inbounds i8, i8* %18, i64 24
  %25 = bitcast i8* %24 to i64*
  store i64 %17, i64* %25, align 8, !noalias !20
  %26 = getelementptr inbounds i8, i8* %18, i64 32
  %27 = getelementptr inbounds i8, i8* %18, i64 48
  %28 = bitcast i8* %27 to %class.SkScalerCache*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12, !noalias !20
  tail call void @_ZN13SkScalerCacheC1ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEPK13SkFontMetrics(%class.SkScalerCache* %28, %class.SkDescriptor* dereferenceable(12) %2, %class.SkScalerContext* %3, %struct.SkFontMetrics* %4) #12, !noalias !20
  %29 = getelementptr inbounds i8, i8* %18, i64 360
  %30 = bitcast i8* %29 to i64*
  store i64 %8, i64* %30, align 8, !noalias !20
  %31 = getelementptr inbounds i8, i8* %18, i64 368
  %32 = bitcast i8* %31 to i64*
  store i64 312, i64* %32, align 8, !noalias !20
  %33 = getelementptr inbounds i8, i8* %18, i64 376
  store i8 0, i8* %33, align 8, !noalias !20
  %34 = bitcast %class.sk_sp.41* %0 to i8**
  store i8* %18, i8** %34, align 8, !alias.scope !20
  %35 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %7, i64 0, i32 0
  %36 = atomicrmw add i32* %21, i32 1 monotonic, !noalias !25
  %37 = bitcast %class.sk_sp.41* %7 to i8**
  store i8* %18, i8** %37, align 8, !noalias !25
  call void @_ZN13SkStrikeCache20internalAttachToHeadE5sk_spINS_6StrikeEE(%class.SkStrikeCache* %1, %class.sk_sp.41* nonnull %7) #12, !noalias !25
  %38 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %35, align 8, !noalias !25
  %39 = icmp eq %"class.SkStrikeCache::Strike"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %15
  %41 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel, !noalias !25
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %"class.SkStrikeCache::Strike"* %38 to %class.SkRefCntBase*
  %46 = bitcast %"class.SkStrikeCache::Strike"* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8, !noalias !25
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8, !noalias !25
  tail call void %49(%class.SkRefCntBase* nonnull %45) #12, !noalias !25
  br label %50

50:                                               ; preds = %15, %40, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %51 = atomicrmw add i32* %10, i32 1 release
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %54, i32 1) #12
  br label %55

55:                                               ; preds = %50, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache20internalAttachToHeadE5sk_spINS_6StrikeEE(%class.SkStrikeCache*, %class.sk_sp.41* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.41, align 8
  %4 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %1, i64 0, i32 0
  %5 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %4, align 8
  %6 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 4
  %7 = ptrtoint %"class.SkStrikeCache::Strike"* %5 to i64
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %4, align 8
  %8 = bitcast %class.sk_sp.41* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = shl nsw i32 %10, 2
  %12 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 4, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %13, 3
  %15 = icmp slt i32 %11, %14
  br i1 %15, label %20, label %16

16:                                               ; preds = %2
  %17 = icmp sgt i32 %13, 0
  %18 = shl nsw i32 %13, 1
  %19 = select i1 %17, i32 %18, i32 4
  tail call void @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE6resizeEi(%class.SkTHashTable.33* %6, i32 %19) #12
  br label %20

20:                                               ; preds = %2, %16
  %21 = call %class.sk_sp.41* @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE12uncheckedSetEOS3_(%class.SkTHashTable.33* %6, %class.sk_sp.41* nonnull dereferenceable(8) %3) #12
  %22 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %3, i64 0, i32 0
  %23 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %22, align 8
  %24 = icmp eq %"class.SkStrikeCache::Strike"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %"class.SkStrikeCache::Strike"* %23 to %class.SkRefCntBase*
  %31 = bitcast %"class.SkStrikeCache::Strike"* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #12
  br label %35

35:                                               ; preds = %20, %25, %29
  %36 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 8
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 4
  %39 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %5, i64 0, i32 8
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 6
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, %40
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 2
  %45 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %44, align 8
  %46 = icmp eq %"class.SkStrikeCache::Strike"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %45, i64 0, i32 5
  store %"class.SkStrikeCache::Strike"* %5, %"class.SkStrikeCache::Strike"** %48, align 8
  %49 = bitcast %"class.SkStrikeCache::Strike"** %44 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %5, i64 0, i32 4
  %52 = bitcast %"class.SkStrikeCache::Strike"** %51 to i64*
  store i64 %50, i64* %52, align 8
  br label %53

53:                                               ; preds = %35, %47
  %54 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 3
  %55 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %54, align 8
  %56 = icmp eq %"class.SkStrikeCache::Strike"* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  store %"class.SkStrikeCache::Strike"* %5, %"class.SkStrikeCache::Strike"** %54, align 8
  br label %58

58:                                               ; preds = %57, %53
  store %"class.SkStrikeCache::Strike"* %5, %"class.SkStrikeCache::Strike"** %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK13SkStrikeCache18getTotalMemoryUsedEv(%class.SkStrikeCache*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 6
  %10 = load i64, i64* %9, align 8
  %11 = atomicrmw add i32* %3, i32 1 release
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %14, i32 1) #12
  br label %15

15:                                               ; preds = %8, %13
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13SkStrikeCache17getCacheCountUsedEv(%class.SkStrikeCache*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 8
  %10 = load i32, i32* %9, align 4
  %11 = atomicrmw add i32* %3, i32 1 release
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %14, i32 1) #12
  br label %15

15:                                               ; preds = %8, %13
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13SkStrikeCache18getCacheCountLimitEv(%class.SkStrikeCache*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 8
  %11 = atomicrmw add i32* %3, i32 1 release
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %14, i32 1) #12
  br label %15

15:                                               ; preds = %8, %13
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13SkStrikeCache17setCacheSizeLimitEm(%class.SkStrikeCache*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw sub i32* %4, i32 1 acquire
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %8) #12
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  store i64 %1, i64* %10, align 8
  %12 = tail call i64 @_ZN13SkStrikeCache13internalPurgeEm(%class.SkStrikeCache* %0, i64 0)
  %13 = atomicrmw add i32* %4, i32 1 release
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %16, i32 1) #12
  br label %17

17:                                               ; preds = %9, %15
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK13SkStrikeCache17getCacheSizeLimitEv(%class.SkStrikeCache*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = atomicrmw add i32* %3, i32 1 release
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %14, i32 1) #12
  br label %15

15:                                               ; preds = %8, %13
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkStrikeCache18setCacheCountLimitEi(%class.SkStrikeCache*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 0
  %4 = select i1 %3, i32 %1, i32 0
  %5 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acquire
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %10) #12
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  store i32 %4, i32* %12, align 8
  %14 = tail call i64 @_ZN13SkStrikeCache13internalPurgeEm(%class.SkStrikeCache* %0, i64 0)
  %15 = atomicrmw add i32* %6, i32 1 release
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %18, i32 1) #12
  br label %19

19:                                               ; preds = %11, %17
  ret i32 %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK13SkStrikeCache8validateEv(%class.SkStrikeCache* nocapture) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache20internalRemoveStrikeEPNS_6StrikeE(%class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1, i64 0, i32 8
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1, i64 0, i32 5
  %12 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %11, align 8
  %13 = icmp eq %"class.SkStrikeCache::Strike"* %12, null
  %14 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1, i64 0, i32 4
  %15 = bitcast %"class.SkStrikeCache::Strike"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %12, i64 0, i32 4
  %19 = select i1 %13, %"class.SkStrikeCache::Strike"** %17, %"class.SkStrikeCache::Strike"** %18
  %20 = bitcast %"class.SkStrikeCache::Strike"** %19 to i64*
  store i64 %16, i64* %20, align 8
  %21 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %14, align 8
  %22 = icmp eq %"class.SkStrikeCache::Strike"* %21, null
  %23 = bitcast %"class.SkStrikeCache::Strike"** %11 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %21, i64 0, i32 5
  %27 = select i1 %22, %"class.SkStrikeCache::Strike"** %25, %"class.SkStrikeCache::Strike"** %26
  %28 = bitcast %"class.SkStrikeCache::Strike"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1, i64 0, i32 9
  %30 = bitcast %"class.SkStrikeCache::Strike"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false)
  store i8 1, i8* %29, align 8
  %31 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 4
  %32 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1, i64 0, i32 6
  %33 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %32) #12
  tail call void @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE6removeERKS4_(%class.SkTHashTable.33* %31, %class.SkDescriptor* dereferenceable(12) %33)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE6removeERKS4_(%class.SkTHashTable.33*, %class.SkDescriptor* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i32 1, i32 %4
  %7 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %2
  %11 = add nsw i32 %8, -1
  %12 = and i32 %6, %11
  %13 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %10, %38
  %15 = phi i32 [ 0, %10 ], [ %44, %38 ]
  %16 = phi i32 [ %12, %10 ], [ %43, %38 ]
  %17 = sext i32 %16 to i64
  %18 = load %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %13, align 8
  %19 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %18, i64 %17, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %6, %20
  br i1 %21, label %22, label %38

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %18, i64 %17, i32 0, i32 0
  %24 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %23, align 8
  %25 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %24, i64 0, i32 6
  %26 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %25) #12
  %27 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %1, %class.SkDescriptor* dereferenceable(12) %26) #12
  br i1 %27, label %28, label %38

28:                                               ; preds = %22
  tail call void @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE10removeSlotEi(%class.SkTHashTable.33* %0, i32 %16)
  %29 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = shl nsw i32 %30, 2
  %32 = load i32, i32* %7, align 4
  %33 = icmp sle i32 %31, %32
  %34 = icmp sgt i32 %32, 4
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %46

36:                                               ; preds = %28
  %37 = lshr i32 %32, 1
  tail call void @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE6resizeEi(%class.SkTHashTable.33* %0, i32 %37)
  br label %46

38:                                               ; preds = %22, %14
  %39 = add nsw i32 %16, -1
  %40 = icmp slt i32 %16, 1
  %41 = load i32, i32* %7, align 4
  %42 = select i1 %40, i32 %41, i32 0
  %43 = add nsw i32 %39, %42
  %44 = add nuw nsw i32 %15, 1
  %45 = icmp slt i32 %44, %41
  br i1 %45, label %14, label %46

46:                                               ; preds = %38, %2, %28, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 3
  %6 = load %class.SkStrikeCache*, %class.SkStrikeCache** %5, align 8
  %7 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %6, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acquire
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %7, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %12) #12
  br label %13

13:                                               ; preds = %4, %11
  %14 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 8
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %1
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 9
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = load %class.SkStrikeCache*, %class.SkStrikeCache** %5, align 8
  %22 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %21, i64 0, i32 6
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %1
  store i64 %24, i64* %22, align 8
  br label %25

25:                                               ; preds = %13, %20
  %26 = atomicrmw add i32* %8, i32 1 release
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %7, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %29, i32 1) #12
  br label %30

30:                                               ; preds = %28, %25, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkStrikeCacheD2Ev(%class.SkStrikeCache*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkStrikeCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %3, align 8
  store %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %3, align 8
  %5 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %4, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %4, i64 -1, i32 1
  %8 = bitcast i32* %7 to i8*
  %9 = bitcast i32* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %4, i64 %10
  br label %14

14:                                               ; preds = %30, %12
  %15 = phi %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* [ %16, %30 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %15, i64 -1
  %17 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %17, align 8
  %19 = icmp eq %"class.SkStrikeCache::Strike"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.SkStrikeCache::Strike"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.SkStrikeCache::Strike"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #12
  br label %30

30:                                               ; preds = %24, %20, %14
  %31 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %16, %4
  br i1 %31, label %32, label %14

32:                                               ; preds = %30, %6
  tail call void @_ZdaPv(i8* %8) #11
  br label %33

33:                                               ; preds = %1, %32
  %34 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %34) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkStrikeCacheD0Ev(%class.SkStrikeCache*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkStrikeCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %3, align 8
  store %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %3, align 8
  %5 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %4, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %4, i64 -1, i32 1
  %8 = bitcast i32* %7 to i8*
  %9 = bitcast i32* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %4, i64 %10
  br label %14

14:                                               ; preds = %30, %12
  %15 = phi %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* [ %16, %30 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %15, i64 -1
  %17 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %17, align 8
  %19 = icmp eq %"class.SkStrikeCache::Strike"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.SkStrikeCache::Strike"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.SkStrikeCache::Strike"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #12
  br label %30

30:                                               ; preds = %24, %20, %14
  %31 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %16, %4
  br i1 %31, label %32, label %14

32:                                               ; preds = %30, %6
  tail call void @_ZdaPv(i8* %8) #11
  br label %33

33:                                               ; preds = %1, %32
  %34 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %0, i64 0, i32 1, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %34) #12
  %35 = bitcast %class.SkStrikeCache* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  ret void
}

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #4

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #4

declare dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(12) %class.SkDescriptor* @_ZThn16_NK13SkStrikeCache6Strike13getDescriptorEv(%"class.SkStrikeCache::Strike"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 -1, i32 8
  %3 = getelementptr inbounds i64, i64* %2, i64 6
  %4 = bitcast i64* %3 to %class.SkScalerCache*
  %5 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %4) #12
  ret %class.SkDescriptor* %5
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRKN13SkStrikeCache6StrikeEEE11__call_implINS0_20__default_alloc_funcIZNS2_4DumpEvE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.SkStrikeCache::Strike"* nocapture readonly dereferenceable(384)) #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.SkScalerContext*, %class.SkScalerContext** %4, align 8
  %6 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %5, i64 0, i32 1
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 69, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i32 %9) #12
  %10 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  call void @_ZNK18SkScalerContextRec4dumpEv(%class.SkString* nonnull sret %3, %struct.SkScalerContextRec* %6) #12
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  %12 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %12, i64 0, i32 2
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %13) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %14 = load i32*, i32** %7, align 8
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18SkScalerContextRec4dumpEv(%class.SkString* noalias sret, %struct.SkScalerContextRec*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %3, align 8
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %0) #12
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)) #12
  %4 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = fpext float %5 to double
  %7 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = fpext float %8 to double
  %10 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 3
  %11 = load float, float* %10, align 4
  %12 = fpext float %11 to double
  %13 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 0, i64 0
  %14 = load float, float* %13, align 4
  %15 = fpext float %14 to double
  %16 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 0, i64 1
  %17 = load float, float* %16, align 4
  %18 = fpext float %17 to double
  %19 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 1, i64 0
  %20 = load float, float* %19, align 4
  %21 = fpext float %20 to double
  %22 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 1, i64 1
  %23 = load float, float* %22, align 4
  %24 = fpext float %23 to double
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.14, i64 0, i64 0), double %6, double %9, double %12, double %15, double %18, double %21, double %24) #12
  %25 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 5
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  %28 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 6
  %29 = load float, float* %28, align 4
  %30 = fpext float %29 to double
  %31 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 12
  %32 = load i8, i8* %31, align 4
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 13
  %35 = load i8, i8* %34, align 1
  %36 = and i8 %35, 15
  %37 = zext i8 %36 to i32
  %38 = lshr i8 %35, 4
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 14
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15, i64 0, i64 0), double %27, double %30, i32 %33, i32 %37, i32 %39, i32 %42) #12
  %43 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 7
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 8
  %46 = load i8, i8* %45, align 4
  %47 = zext i8 %46 to i32
  %48 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 9
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 10
  %52 = load i8, i8* %51, align 2
  %53 = zext i8 %52 to i32
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.16, i64 0, i64 0), i32 %44, i32 %47, i32 %50, i32 %53) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #8

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRKN13SkStrikeCache6StrikeEEE11__call_implINS0_20__default_alloc_funcIZNS2_20DumpMemoryStatisticsEP17SkTraceMemoryDumpE3$_1S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.SkStrikeCache::Strike"* dereferenceable(384)) #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.SkString, align 8
  %5 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1, i64 0, i32 6
  %6 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0
  %7 = load %class.SkScalerContext*, %class.SkScalerContext** %6, align 8
  %8 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %7, i64 0, i32 2, i32 0
  %9 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  %10 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %11, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %3) #12
  call void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface* %9, %class.SkString* nonnull %3) #12
  %12 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %2, %31
  %17 = phi i64 [ %32, %31 ], [ 0, %2 ]
  %18 = call i8* @_ZN8SkString12writable_strEv(%class.SkString* nonnull %3) #12
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  %20 = load i8, i8* %19, align 1
  %21 = tail call i16** @__ctype_b_loc() #13
  %22 = load i16*, i16** %21, align 8
  %23 = sext i8 %20 to i64
  %24 = getelementptr inbounds i16, i16* %22, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = and i16 %25, 8
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %16
  %29 = call i8* @_ZN8SkString12writable_strEv(%class.SkString* nonnull %3) #12
  %30 = getelementptr inbounds i8, i8* %29, i64 %17
  store i8 95, i8* %30, align 1
  br label %31

31:                                               ; preds = %28, %16
  %32 = add nuw nsw i64 %17, 1
  %33 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %11, align 8
  %34 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = icmp ult i64 %32, %36
  br i1 %37, label %16, label %38

38:                                               ; preds = %31, %2
  %39 = phi %"struct.SkString::Rec"* [ %12, %2 ], [ %33, %31 ]
  %40 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  %41 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %41, align 8
  %42 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %39, i64 0, i32 2
  %43 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %7, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* nonnull sret %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN12_GLOBAL__N_119gGlyphCacheDumpNameE, i64 0, i64 0), i8* %42, i32 %44, %"class.SkStrikeCache::Strike"* %1) #12
  %45 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.SkTraceMemoryDump***
  %46 = load %class.SkTraceMemoryDump**, %class.SkTraceMemoryDump*** %45, align 8
  %47 = load %class.SkTraceMemoryDump*, %class.SkTraceMemoryDump** %46, align 8
  %48 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %41, align 8
  %49 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %48, i64 0, i32 2
  %50 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1, i64 0, i32 8
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %class.SkTraceMemoryDump* %47 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)***
  %53 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %52, align 8
  %54 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %53, align 8
  call void %54(%class.SkTraceMemoryDump* %47, i8* %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 %51) #12
  %55 = load %class.SkTraceMemoryDump**, %class.SkTraceMemoryDump*** %45, align 8
  %56 = load %class.SkTraceMemoryDump*, %class.SkTraceMemoryDump** %55, align 8
  %57 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %41, align 8
  %58 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %57, i64 0, i32 2
  %59 = call i32 @_ZNK13SkScalerCache17countCachedGlyphsEv(%class.SkScalerCache* %5) #12
  %60 = sext i32 %59 to i64
  %61 = bitcast %class.SkTraceMemoryDump* %56 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)***
  %62 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %61, align 8
  %63 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %62, align 8
  call void %63(%class.SkTraceMemoryDump* %56, i8* %58, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 %60) #12
  %64 = load %class.SkTraceMemoryDump**, %class.SkTraceMemoryDump*** %45, align 8
  %65 = load %class.SkTraceMemoryDump*, %class.SkTraceMemoryDump** %64, align 8
  %66 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %41, align 8
  %67 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %66, i64 0, i32 2
  %68 = bitcast %class.SkTraceMemoryDump* %65 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)***
  %69 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %69, i64 2
  %71 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %70, align 8
  call void %71(%class.SkTraceMemoryDump* %65, i8* %67, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* null) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret void
}

declare void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface*, %class.SkString*) local_unnamed_addr #4

declare void @_Z14SkStringPrintfPKcz(%class.SkString* sret, i8*, ...) local_unnamed_addr #4

declare i32 @_ZNK13SkScalerCache17countCachedGlyphsEv(%class.SkScalerCache*) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #9

declare i8* @_ZN8SkString12writable_strEv(%class.SkString*) local_unnamed_addr #4

declare void @_ZN13SkScalerCacheC1ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEPK13SkFontMetrics(%class.SkScalerCache*, %class.SkDescriptor* dereferenceable(12), %class.SkScalerContext*, %struct.SkFontMetrics*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkStrikeCache6StrikeD2Ev(%"class.SkStrikeCache::Strike"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.SkStrikePinner*, %class.SkStrikePinner** %4, align 8
  store %class.SkStrikePinner* null, %class.SkStrikePinner** %4, align 8
  %6 = icmp eq %class.SkStrikePinner* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.SkStrikePinner* %5 to void (%class.SkStrikePinner*)***
  %9 = load void (%class.SkStrikePinner*)**, void (%class.SkStrikePinner*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkStrikePinner*)*, void (%class.SkStrikePinner*)** %9, i64 1
  %11 = load void (%class.SkStrikePinner*)*, void (%class.SkStrikePinner*)** %10, align 8
  tail call void %11(%class.SkStrikePinner* nonnull %5) #12
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 7
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %13) #12
  %14 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 6, i32 0, i32 0
  %15 = load %class.SkGlyph**, %class.SkGlyph*** %14, align 8
  %16 = icmp eq %class.SkGlyph** %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = ptrtoint %class.SkGlyph** %15 to i64
  %19 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 6, i32 0, i32 1
  %20 = bitcast %class.SkGlyph*** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %class.SkGlyph** %15 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %17, %12
  %23 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %23, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %23, align 8
  %25 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %24 to i8*
  tail call void @_ZdaPv(i8* %27) #11
  br label %28

28:                                               ; preds = %26, %22
  %29 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 4, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %29) #12
  %30 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0
  %31 = load %class.SkScalerContext*, %class.SkScalerContext** %30, align 8
  store %class.SkScalerContext* null, %class.SkScalerContext** %30, align 8
  %32 = icmp eq %class.SkScalerContext* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = bitcast %class.SkScalerContext* %31 to void (%class.SkScalerContext*)***
  %35 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %35, i64 1
  %37 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %36, align 8
  tail call void %37(%class.SkScalerContext* nonnull %31) #12
  br label %38

38:                                               ; preds = %28, %33
  %39 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %39) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkStrikeCache6StrikeD0Ev(%"class.SkStrikeCache::Strike"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.SkStrikePinner*, %class.SkStrikePinner** %4, align 8
  store %class.SkStrikePinner* null, %class.SkStrikePinner** %4, align 8
  %6 = icmp eq %class.SkStrikePinner* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.SkStrikePinner* %5 to void (%class.SkStrikePinner*)***
  %9 = load void (%class.SkStrikePinner*)**, void (%class.SkStrikePinner*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkStrikePinner*)*, void (%class.SkStrikePinner*)** %9, i64 1
  %11 = load void (%class.SkStrikePinner*)*, void (%class.SkStrikePinner*)** %10, align 8
  tail call void %11(%class.SkStrikePinner* nonnull %5) #12
  br label %12

12:                                               ; preds = %7, %1
  %13 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 7
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %13) #12
  %14 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 6, i32 0, i32 0
  %15 = load %class.SkGlyph**, %class.SkGlyph*** %14, align 8
  %16 = icmp eq %class.SkGlyph** %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = ptrtoint %class.SkGlyph** %15 to i64
  %19 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 6, i32 0, i32 1
  %20 = bitcast %class.SkGlyph*** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %class.SkGlyph** %15 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %17, %12
  %23 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %23, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %23, align 8
  %25 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %24 to i8*
  tail call void @_ZdaPv(i8* %27) #11
  br label %28

28:                                               ; preds = %26, %22
  %29 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 4, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %29) #12
  %30 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0
  %31 = load %class.SkScalerContext*, %class.SkScalerContext** %30, align 8
  store %class.SkScalerContext* null, %class.SkScalerContext** %30, align 8
  %32 = icmp eq %class.SkScalerContext* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = bitcast %class.SkScalerContext* %31 to void (%class.SkScalerContext*)***
  %35 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %35, i64 1
  %37 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %36, align 8
  tail call void %37(%class.SkScalerContext* nonnull %31) #12
  br label %38

38:                                               ; preds = %28, %33
  %39 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %39) #12
  %40 = bitcast %"class.SkStrikeCache::Strike"* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %struct.SkGlyphPositionRoundingSpec* @_ZNK13SkStrikeCache6Strike12roundingSpecEv(%"class.SkStrikeCache::Strike"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6, i32 3
  ret %struct.SkGlyphPositionRoundingSpec* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkStrikeCache6Strike21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6
  %5 = tail call i64 @_ZN13SkScalerCache21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache* %4, %class.SkDrawableGlyphBuffer* %1, %class.SkSourceGlyphBuffer* %2) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 3
  %9 = load %class.SkStrikeCache*, %class.SkStrikeCache** %8, align 8
  %10 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %9, i64 0, i32 1
  %11 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acquire
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %15) #12
  br label %16

16:                                               ; preds = %14, %7
  %17 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 8
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %5
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 9
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = load %class.SkStrikeCache*, %class.SkStrikeCache** %8, align 8
  %25 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %24, i64 0, i32 6
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %5
  store i64 %27, i64* %25, align 8
  br label %28

28:                                               ; preds = %23, %16
  %29 = atomicrmw add i32* %11, i32 1 release
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %32, i32 1) #12
  br label %33

33:                                               ; preds = %3, %28, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkStrikeCache6Strike21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6
  %5 = tail call i64 @_ZN13SkScalerCache21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache* %4, %class.SkDrawableGlyphBuffer* %1, %class.SkSourceGlyphBuffer* %2) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 3
  %9 = load %class.SkStrikeCache*, %class.SkStrikeCache** %8, align 8
  %10 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %9, i64 0, i32 1
  %11 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acquire
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %15) #12
  br label %16

16:                                               ; preds = %14, %7
  %17 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 8
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %5
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 9
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = load %class.SkStrikeCache*, %class.SkStrikeCache** %8, align 8
  %25 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %24, i64 0, i32 6
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %5
  store i64 %27, i64* %25, align 8
  br label %28

28:                                               ; preds = %23, %16
  %29 = atomicrmw add i32* %11, i32 1 release
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %32, i32 1) #12
  br label %33

33:                                               ; preds = %3, %28, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkStrikeCache6Strike21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 6
  %5 = tail call i64 @_ZN13SkScalerCache21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache* %4, %class.SkDrawableGlyphBuffer* %1, %class.SkSourceGlyphBuffer* %2) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 3
  %9 = load %class.SkStrikeCache*, %class.SkStrikeCache** %8, align 8
  %10 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %9, i64 0, i32 1
  %11 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acquire
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %15) #12
  br label %16

16:                                               ; preds = %14, %7
  %17 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 8
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %5
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 9
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = load %class.SkStrikeCache*, %class.SkStrikeCache** %8, align 8
  %25 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %24, i64 0, i32 6
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %5
  store i64 %27, i64* %25, align 8
  br label %28

28:                                               ; preds = %23, %16
  %29 = atomicrmw add i32* %11, i32 1 release
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %32, i32 1) #12
  br label %33

33:                                               ; preds = %3, %28, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkStrikeCache6Strike18onAboutToExitScopeEv(%"class.SkStrikeCache::Strike"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 -1 acq_rel
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = bitcast %"class.SkStrikeCache::Strike"* %0 to %class.SkRefCntBase*
  %7 = bitcast %"class.SkStrikeCache::Strike"* %0 to void (%class.SkRefCntBase*)***
  %8 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %8, i64 2
  %10 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %9, align 8
  tail call void %10(%class.SkRefCntBase* %6) #12
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N13SkStrikeCache6StrikeD1Ev(%"class.SkStrikeCache::Strike"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 -1, i32 8
  %3 = bitcast i64* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i64, i64* %2, i64 2
  %5 = bitcast i64* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 45
  %7 = bitcast i64* %6 to %class.SkStrikePinner**
  %8 = load %class.SkStrikePinner*, %class.SkStrikePinner** %7, align 8
  store %class.SkStrikePinner* null, %class.SkStrikePinner** %7, align 8
  %9 = icmp eq %class.SkStrikePinner* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %class.SkStrikePinner* %8 to void (%class.SkStrikePinner*)***
  %12 = load void (%class.SkStrikePinner*)**, void (%class.SkStrikePinner*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkStrikePinner*)*, void (%class.SkStrikePinner*)** %12, i64 1
  %14 = load void (%class.SkStrikePinner*)*, void (%class.SkStrikePinner*)** %13, align 8
  tail call void %14(%class.SkStrikePinner* nonnull %8) #12
  br label %15

15:                                               ; preds = %10, %1
  %16 = getelementptr inbounds i64, i64* %2, i64 41
  %17 = bitcast i64* %16 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %17) #12
  %18 = getelementptr inbounds i64, i64* %2, i64 38
  %19 = bitcast i64* %18 to %class.SkGlyph***
  %20 = load %class.SkGlyph**, %class.SkGlyph*** %19, align 8
  %21 = icmp eq %class.SkGlyph** %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = ptrtoint %class.SkGlyph** %20 to i64
  %24 = getelementptr inbounds i64, i64* %2, i64 39
  store i64 %23, i64* %24, align 8
  %25 = bitcast %class.SkGlyph** %20 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %22, %15
  %27 = getelementptr inbounds i64, i64* %2, i64 37
  %28 = bitcast i64* %27 to %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"**
  %29 = load %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %28, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %29 to i8*
  tail call void @_ZdaPv(i8* %32) #11
  br label %33

33:                                               ; preds = %31, %26
  %34 = getelementptr inbounds i64, i64* %2, i64 34
  %35 = bitcast i64* %34 to %class.SkSemaphore*
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %35) #12
  %36 = getelementptr inbounds i64, i64* %2, i64 22
  %37 = bitcast i64* %36 to %class.SkScalerContext**
  %38 = load %class.SkScalerContext*, %class.SkScalerContext** %37, align 8
  store %class.SkScalerContext* null, %class.SkScalerContext** %37, align 8
  %39 = icmp eq %class.SkScalerContext* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = bitcast %class.SkScalerContext* %38 to void (%class.SkScalerContext*)***
  %42 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %42, i64 1
  %44 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %43, align 8
  tail call void %44(%class.SkScalerContext* nonnull %38) #12
  br label %45

45:                                               ; preds = %33, %40
  %46 = getelementptr inbounds i64, i64* %2, i64 6
  %47 = bitcast i64* %46 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %47) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N13SkStrikeCache6StrikeD0Ev(%"class.SkStrikeCache::Strike"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 -1, i32 8
  %3 = bitcast i64* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i64, i64* %2, i64 2
  %5 = bitcast i64* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN13SkStrikeCache6StrikeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 45
  %7 = bitcast i64* %6 to %class.SkStrikePinner**
  %8 = load %class.SkStrikePinner*, %class.SkStrikePinner** %7, align 8
  store %class.SkStrikePinner* null, %class.SkStrikePinner** %7, align 8
  %9 = icmp eq %class.SkStrikePinner* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %class.SkStrikePinner* %8 to void (%class.SkStrikePinner*)***
  %12 = load void (%class.SkStrikePinner*)**, void (%class.SkStrikePinner*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkStrikePinner*)*, void (%class.SkStrikePinner*)** %12, i64 1
  %14 = load void (%class.SkStrikePinner*)*, void (%class.SkStrikePinner*)** %13, align 8
  tail call void %14(%class.SkStrikePinner* nonnull %8) #12
  br label %15

15:                                               ; preds = %10, %1
  %16 = getelementptr inbounds i64, i64* %2, i64 41
  %17 = bitcast i64* %16 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %17) #12
  %18 = getelementptr inbounds i64, i64* %2, i64 38
  %19 = bitcast i64* %18 to %class.SkGlyph***
  %20 = load %class.SkGlyph**, %class.SkGlyph*** %19, align 8
  %21 = icmp eq %class.SkGlyph** %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = ptrtoint %class.SkGlyph** %20 to i64
  %24 = getelementptr inbounds i64, i64* %2, i64 39
  store i64 %23, i64* %24, align 8
  %25 = bitcast %class.SkGlyph** %20 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %22, %15
  %27 = getelementptr inbounds i64, i64* %2, i64 37
  %28 = bitcast i64* %27 to %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"**
  %29 = load %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %28, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %29 to i8*
  tail call void @_ZdaPv(i8* %32) #11
  br label %33

33:                                               ; preds = %31, %26
  %34 = getelementptr inbounds i64, i64* %2, i64 34
  %35 = bitcast i64* %34 to %class.SkSemaphore*
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %35) #12
  %36 = getelementptr inbounds i64, i64* %2, i64 22
  %37 = bitcast i64* %36 to %class.SkScalerContext**
  %38 = load %class.SkScalerContext*, %class.SkScalerContext** %37, align 8
  store %class.SkScalerContext* null, %class.SkScalerContext** %37, align 8
  %39 = icmp eq %class.SkScalerContext* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = bitcast %class.SkScalerContext* %38 to void (%class.SkScalerContext*)***
  %42 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %42, i64 1
  %44 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %43, align 8
  tail call void %44(%class.SkScalerContext* nonnull %38) #12
  br label %45

45:                                               ; preds = %33, %40
  %46 = getelementptr inbounds i64, i64* %2, i64 6
  %47 = bitcast i64* %46 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %47) #12
  %48 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %48) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N13SkStrikeCache6Strike21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 -1, i32 8
  %5 = getelementptr inbounds i64, i64* %4, i64 6
  %6 = bitcast i64* %5 to %class.SkScalerCache*
  %7 = tail call i64 @_ZN13SkScalerCache21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache* %6, %class.SkDrawableGlyphBuffer* %1, %class.SkSourceGlyphBuffer* %2) #12
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds i64, i64* %4, i64 3
  %11 = bitcast i64* %10 to %class.SkStrikeCache**
  %12 = load %class.SkStrikeCache*, %class.SkStrikeCache** %11, align 8
  %13 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %12, i64 0, i32 1
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #12
  br label %19

19:                                               ; preds = %17, %9
  %20 = getelementptr inbounds i64, i64* %4, i64 46
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %7
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds i64, i64* %4, i64 47
  %24 = bitcast i64* %23 to i8*
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %19
  %28 = load %class.SkStrikeCache*, %class.SkStrikeCache** %11, align 8
  %29 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %28, i64 0, i32 6
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %7
  store i64 %31, i64* %29, align 8
  br label %32

32:                                               ; preds = %27, %19
  %33 = atomicrmw add i32* %14, i32 1 release
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %36, i32 1) #12
  br label %37

37:                                               ; preds = %3, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N13SkStrikeCache6Strike21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 -1, i32 8
  %5 = getelementptr inbounds i64, i64* %4, i64 6
  %6 = bitcast i64* %5 to %class.SkScalerCache*
  %7 = tail call i64 @_ZN13SkScalerCache21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache* %6, %class.SkDrawableGlyphBuffer* %1, %class.SkSourceGlyphBuffer* %2) #12
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds i64, i64* %4, i64 3
  %11 = bitcast i64* %10 to %class.SkStrikeCache**
  %12 = load %class.SkStrikeCache*, %class.SkStrikeCache** %11, align 8
  %13 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %12, i64 0, i32 1
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #12
  br label %19

19:                                               ; preds = %17, %9
  %20 = getelementptr inbounds i64, i64* %4, i64 46
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %7
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds i64, i64* %4, i64 47
  %24 = bitcast i64* %23 to i8*
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %19
  %28 = load %class.SkStrikeCache*, %class.SkStrikeCache** %11, align 8
  %29 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %28, i64 0, i32 6
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %7
  store i64 %31, i64* %29, align 8
  br label %32

32:                                               ; preds = %27, %19
  %33 = atomicrmw add i32* %14, i32 1 release
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %36, i32 1) #12
  br label %37

37:                                               ; preds = %3, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N13SkStrikeCache6Strike21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%"class.SkStrikeCache::Strike"*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 -1, i32 8
  %5 = getelementptr inbounds i64, i64* %4, i64 6
  %6 = bitcast i64* %5 to %class.SkScalerCache*
  %7 = tail call i64 @_ZN13SkScalerCache21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache* %6, %class.SkDrawableGlyphBuffer* %1, %class.SkSourceGlyphBuffer* %2) #12
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds i64, i64* %4, i64 3
  %11 = bitcast i64* %10 to %class.SkStrikeCache**
  %12 = load %class.SkStrikeCache*, %class.SkStrikeCache** %11, align 8
  %13 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %12, i64 0, i32 1
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #12
  br label %19

19:                                               ; preds = %17, %9
  %20 = getelementptr inbounds i64, i64* %4, i64 46
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %7
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds i64, i64* %4, i64 47
  %24 = bitcast i64* %23 to i8*
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %19
  %28 = load %class.SkStrikeCache*, %class.SkStrikeCache** %11, align 8
  %29 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %28, i64 0, i32 6
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %7
  store i64 %31, i64* %29, align 8
  br label %32

32:                                               ; preds = %27, %19
  %33 = atomicrmw add i32* %14, i32 1 release
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %36, i32 1) #12
  br label %37

37:                                               ; preds = %3, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %struct.SkGlyphPositionRoundingSpec* @_ZThn16_NK13SkStrikeCache6Strike12roundingSpecEv(%"class.SkStrikeCache::Strike"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 -1, i32 8
  %3 = getelementptr inbounds i64, i64* %2, i64 31
  %4 = bitcast i64* %3 to %struct.SkGlyphPositionRoundingSpec*
  ret %struct.SkGlyphPositionRoundingSpec* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N13SkStrikeCache6Strike18onAboutToExitScopeEv(%"class.SkStrikeCache::Strike"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %0, i64 -1, i32 8
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %3 to i32*
  %5 = atomicrmw add i32* %4, i32 -1 acq_rel
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = bitcast i64* %2 to %class.SkRefCntBase*
  %9 = bitcast i64* %2 to void (%class.SkRefCntBase*)***
  %10 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %10, i64 2
  %12 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %11, align 8
  tail call void %12(%class.SkRefCntBase* %8) #12
  br label %13

13:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #8

declare i64 @_ZN13SkScalerCache21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) local_unnamed_addr #4

declare i64 @_ZN13SkScalerCache21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) local_unnamed_addr #4

declare i64 @_ZN13SkScalerCache21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE6resizeEi(%class.SkTHashTable.33*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkAutoTArray.34, align 8
  %4 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  store i32 %1, i32* %4, align 4
  %7 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkAutoTArray.34, %class.SkAutoTArray.34* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %class.SkAutoTArray.34* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %8, align 8
  %11 = bitcast %class.SkAutoTArray.34* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = bitcast %class.SkAutoTArray.34* %3 to i64*
  store i64 0, i64* %12, align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkAutoTArray.34, %class.SkAutoTArray.34* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %15, align 8
  store i64 0, i64* %9, align 8
  br label %97

16:                                               ; preds = %2
  %17 = sext i32 %1 to i64
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %17, i64 16) #12
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = or i64 %20, 8
  %22 = select i1 %19, i64 -1, i64 %21
  %23 = tail call i8* @_Znam(i64 %22) #11
  %24 = bitcast i8* %23 to i64*
  store i64 %17, i64* %24, align 16
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*
  %27 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %26, i64 %17
  %28 = shl nsw i64 %17, 4
  %29 = add nsw i64 %28, -16
  %30 = lshr exact i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %16, %34
  %35 = phi %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* [ %39, %34 ], [ %26, %16 ]
  %36 = phi i64 [ %40, %34 ], [ %32, %16 ]
  %37 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %35, i64 0, i32 0, i32 0
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %37, align 8
  %38 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %35, i64 0, i32 1
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %35, i64 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !26

42:                                               ; preds = %34, %16
  %43 = phi %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* [ %26, %16 ], [ %39, %34 ]
  %44 = icmp ult i64 %29, 112
  br i1 %44, label %65, label %45

45:                                               ; preds = %42, %45
  %46 = phi %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* [ %63, %45 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 0, i32 0, i32 0
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %47, align 8
  %48 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 0, i32 1
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 1, i32 0, i32 0
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %49, align 8
  %50 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 1, i32 1
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 2, i32 0, i32 0
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %51, align 8
  %52 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 2, i32 1
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 3, i32 0, i32 0
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %53, align 8
  %54 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 3, i32 1
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 4, i32 0, i32 0
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %55, align 8
  %56 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 4, i32 1
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 5, i32 0, i32 0
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %57, align 8
  %58 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 5, i32 1
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 6, i32 0, i32 0
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %59, align 8
  %60 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 6, i32 1
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 7, i32 0, i32 0
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %61, align 8
  %62 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 7, i32 1
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %46, i64 8
  %64 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %63, %27
  br i1 %64, label %65, label %45

65:                                               ; preds = %45, %42
  %66 = ptrtoint i8* %25 to i64
  %67 = load %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %8, align 8
  %68 = getelementptr inbounds %class.SkAutoTArray.34, %class.SkAutoTArray.34* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %68, align 8
  store i64 %66, i64* %9, align 8
  %69 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %67, null
  br i1 %69, label %97, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %67, i64 -1, i32 1
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %70
  tail call void @_ZdaPv(i8* %72) #11
  store %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %68, align 8
  br label %129

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %67, i64 %74
  br label %79

79:                                               ; preds = %95, %77
  %80 = phi %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* [ %81, %95 ], [ %78, %77 ]
  %81 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %80, i64 -1
  %82 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %82, align 8
  %84 = icmp eq %"class.SkStrikeCache::Strike"* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %83, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %"class.SkStrikeCache::Strike"* %83 to %class.SkRefCntBase*
  %91 = bitcast %"class.SkStrikeCache::Strike"* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8
  tail call void %94(%class.SkRefCntBase* nonnull %90) #12
  br label %95

95:                                               ; preds = %89, %85, %79
  %96 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %81, %67
  br i1 %96, label %99, label %79

97:                                               ; preds = %65, %14
  %98 = phi %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** [ %15, %14 ], [ %68, %65 ]
  store %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %98, align 8
  br label %129

99:                                               ; preds = %95
  %100 = load %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %68, align 8
  tail call void @_ZdaPv(i8* %72) #11
  store %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %68, align 8
  %101 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %100, null
  br i1 %101, label %129, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %100, i64 -1, i32 1
  %104 = bitcast i32* %103 to i8*
  %105 = bitcast i32* %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %128, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %100, i64 %106
  br label %110

110:                                              ; preds = %126, %108
  %111 = phi %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* [ %112, %126 ], [ %109, %108 ]
  %112 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %111, i64 -1
  %113 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %113, align 8
  %115 = icmp eq %"class.SkStrikeCache::Strike"* %114, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %114, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %126

120:                                              ; preds = %116
  %121 = bitcast %"class.SkStrikeCache::Strike"* %114 to %class.SkRefCntBase*
  %122 = bitcast %"class.SkStrikeCache::Strike"* %114 to void (%class.SkRefCntBase*)***
  %123 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %122, align 8
  %124 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, i64 2
  %125 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, align 8
  tail call void %125(%class.SkRefCntBase* nonnull %121) #12
  br label %126

126:                                              ; preds = %120, %116, %110
  %127 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %112, %100
  br i1 %127, label %128, label %110

128:                                              ; preds = %126, %102
  tail call void @_ZdaPv(i8* %104) #11
  br label %129

129:                                              ; preds = %76, %97, %99, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %130 = icmp sgt i32 %5, 0
  %131 = inttoptr i64 %10 to %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*
  br i1 %130, label %132, label %134

132:                                              ; preds = %129
  %133 = zext i32 %5 to i64
  br label %164

134:                                              ; preds = %172, %129
  %135 = icmp eq i64 %10, 0
  br i1 %135, label %163, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %131, i64 -1, i32 1
  %138 = bitcast i32* %137 to i8*
  %139 = bitcast i32* %137 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %162, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %131, i64 %140
  br label %144

144:                                              ; preds = %160, %142
  %145 = phi %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* [ %146, %160 ], [ %143, %142 ]
  %146 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %145, i64 -1
  %147 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %147, align 8
  %149 = icmp eq %"class.SkStrikeCache::Strike"* %148, null
  br i1 %149, label %160, label %150

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %148, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw add i32* %151, i32 -1 acq_rel
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %160

154:                                              ; preds = %150
  %155 = bitcast %"class.SkStrikeCache::Strike"* %148 to %class.SkRefCntBase*
  %156 = bitcast %"class.SkStrikeCache::Strike"* %148 to void (%class.SkRefCntBase*)***
  %157 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %156, align 8
  %158 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %157, i64 2
  %159 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %158, align 8
  tail call void %159(%class.SkRefCntBase* nonnull %155) #12
  br label %160

160:                                              ; preds = %154, %150, %144
  %161 = icmp eq %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %146, %131
  br i1 %161, label %162, label %144

162:                                              ; preds = %160, %136
  tail call void @_ZdaPv(i8* %138) #11
  br label %163

163:                                              ; preds = %134, %162
  ret void

164:                                              ; preds = %172, %132
  %165 = phi i64 [ 0, %132 ], [ %173, %172 ]
  %166 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %131, i64 %165, i32 1
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %172, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %131, i64 %165, i32 0
  %171 = tail call %class.sk_sp.41* @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE12uncheckedSetEOS3_(%class.SkTHashTable.33* %0, %class.sk_sp.41* dereferenceable(8) %170)
  br label %172

172:                                              ; preds = %169, %164
  %173 = add nuw nsw i64 %165, 1
  %174 = icmp eq i64 %173, %133
  br i1 %174, label %134, label %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.sk_sp.41* @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE12uncheckedSetEOS3_(%class.SkTHashTable.33*, %class.sk_sp.41* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %1, i64 0, i32 0
  %4 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %3, align 8
  %5 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %4, i64 0, i32 6
  %6 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %5) #12
  %7 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32 1, i32 %8
  %11 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %83

14:                                               ; preds = %2
  %15 = add nsw i32 %12, -1
  %16 = and i32 %10, %15
  %17 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %14, %75
  %19 = phi i32 [ 0, %14 ], [ %81, %75 ]
  %20 = phi i32 [ %16, %14 ], [ %80, %75 ]
  %21 = sext i32 %20 to i64
  %22 = load %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %17, align 8
  %23 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %22, i64 %21
  %24 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %22, i64 %21, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %49

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %23, i64 0, i32 0
  %29 = bitcast %class.sk_sp.41* %1 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %3, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %23, i64 0, i32 0, i32 0
  %32 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %31, align 8
  %33 = bitcast %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %23 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.SkStrikeCache::Strike"* %32, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %"class.SkStrikeCache::Strike"* %32 to %class.SkRefCntBase*
  %41 = bitcast %"class.SkStrikeCache::Strike"* %32 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  tail call void %44(%class.SkRefCntBase* nonnull %40) #12
  br label %45

45:                                               ; preds = %27, %35, %39
  store i32 %10, i32* %24, align 8
  %46 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %46, align 8
  br label %83

49:                                               ; preds = %18
  %50 = icmp eq i32 %10, %25
  br i1 %50, label %51, label %75

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %23, i64 0, i32 0, i32 0
  %53 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %52, align 8
  %54 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %53, i64 0, i32 6
  %55 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %54) #12
  %56 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %6, %class.SkDescriptor* dereferenceable(12) %55) #12
  br i1 %56, label %57, label %75

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %23, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %23, i64 0, i32 0
  %60 = bitcast %class.sk_sp.41* %1 to i64*
  %61 = load i64, i64* %60, align 8
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %3, align 8
  %62 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %58, align 8
  %63 = bitcast %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %23 to i64*
  store i64 %61, i64* %63, align 8
  %64 = icmp eq %"class.SkStrikeCache::Strike"* %62, null
  br i1 %64, label %83, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %83

69:                                               ; preds = %65
  %70 = bitcast %"class.SkStrikeCache::Strike"* %62 to %class.SkRefCntBase*
  %71 = bitcast %"class.SkStrikeCache::Strike"* %62 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8
  tail call void %74(%class.SkRefCntBase* nonnull %70) #12
  br label %83

75:                                               ; preds = %51, %49
  %76 = add nsw i32 %20, -1
  %77 = icmp slt i32 %20, 1
  %78 = load i32, i32* %11, align 4
  %79 = select i1 %77, i32 %78, i32 0
  %80 = add nsw i32 %76, %79
  %81 = add nuw nsw i32 %19, 1
  %82 = icmp slt i32 %81, %78
  br i1 %82, label %18, label %83

83:                                               ; preds = %75, %2, %69, %65, %57, %45
  %84 = phi %class.sk_sp.41* [ %59, %69 ], [ %59, %65 ], [ %59, %57 ], [ %28, %45 ], [ null, %2 ], [ null, %75 ]
  ret %class.sk_sp.41* %84
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableI5sk_spIN13SkStrikeCache6StrikeEE12SkDescriptorNS1_12StrikeTraitsEE10removeSlotEi(%class.SkTHashTable.33*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.SkTHashTable.33, %class.SkTHashTable.33* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %72, %2
  %9 = phi i32 [ %1, %2 ], [ %21, %72 ]
  %10 = sext i32 %9 to i64
  %11 = load %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"** %6, align 8
  %12 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %11, i64 %10
  br label %13

13:                                               ; preds = %48, %8
  %14 = phi i32 [ %9, %8 ], [ %21, %48 ]
  %15 = add nsw i32 %14, -1
  %16 = icmp slt i32 %14, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = load i32, i32* %7, align 4
  %19 = add nsw i32 %18, %15
  br label %20

20:                                               ; preds = %13, %17
  %21 = phi i32 [ %19, %17 ], [ %15, %13 ]
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %11, i64 %22, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %41

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %12, i64 0, i32 0, i32 0
  %28 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %27, align 8
  %29 = bitcast %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %12 to i64*
  store i64 0, i64* %29, align 8
  %30 = icmp eq %"class.SkStrikeCache::Strike"* %28, null
  br i1 %30, label %75, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %75

35:                                               ; preds = %31
  %36 = bitcast %"class.SkStrikeCache::Strike"* %28 to %class.SkRefCntBase*
  %37 = bitcast %"class.SkStrikeCache::Strike"* %28 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #12
  br label %75

41:                                               ; preds = %20
  %42 = load i32, i32* %7, align 4
  %43 = add nsw i32 %42, -1
  %44 = and i32 %43, %24
  %45 = icmp sle i32 %21, %44
  %46 = icmp slt i32 %44, %9
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %41, %49
  br label %13

49:                                               ; preds = %41
  %50 = icmp slt i32 %9, %21
  %51 = or i1 %46, %45
  %52 = and i1 %50, %51
  br i1 %52, label %48, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %11, i64 %22
  %55 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %54, i64 0, i32 0, i32 0
  %56 = bitcast %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %54 to i64*
  %57 = load i64, i64* %56, align 8
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %55, align 8
  %58 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %12, i64 0, i32 0, i32 0
  %59 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %58, align 8
  %60 = bitcast %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %12 to i64*
  store i64 %57, i64* %60, align 8
  %61 = icmp eq %"class.SkStrikeCache::Strike"* %59, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %"class.SkStrikeCache::Strike"* %59 to %class.SkRefCntBase*
  %68 = bitcast %"class.SkStrikeCache::Strike"* %59 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  tail call void %71(%class.SkRefCntBase* nonnull %67) #12
  br label %72

72:                                               ; preds = %66, %62, %53
  %73 = load i32, i32* %23, align 8
  %74 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %11, i64 %10, i32 1
  store i32 %73, i32* %74, align 8
  br label %8

75:                                               ; preds = %35, %31, %26
  %76 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot", %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* %11, i64 %10, i32 1
  store i32 0, i32* %76, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1023, i32 1}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_Z10sk_make_spIN13SkStrikeCache6StrikeEJPS0_RK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS6_14default_deleteIS8_EEEERP13SkFontMetricsNS7_I14SkStrikePinnerNS9_ISF_EEEEEE5sk_spIT_EDpOT0_: argument 0"}
!7 = distinct !{!7, !"_Z10sk_make_spIN13SkStrikeCache6StrikeEJPS0_RK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS6_14default_deleteIS8_EEEERP13SkFontMetricsNS7_I14SkStrikePinnerNS9_ISF_EEEEEE5sk_spIT_EDpOT0_"}
!8 = distinct !{!8, !9, !"_ZN13SkStrikeCache20internalCreateStrikeERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEP13SkFontMetricsNS4_I14SkStrikePinnerNS6_ISB_EEEE: argument 0"}
!9 = distinct !{!9, !"_ZN13SkStrikeCache20internalCreateStrikeERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEP13SkFontMetricsNS4_I14SkStrikePinnerNS6_ISB_EEEE"}
!10 = !{!8}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_Z9sk_ref_spIN13SkStrikeCache6StrikeEE5sk_spIT_EPS3_: argument 0"}
!13 = distinct !{!13, !"_Z9sk_ref_spIN13SkStrikeCache6StrikeEE5sk_spIT_EPS3_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_Z9sk_ref_spIN13SkStrikeCache6StrikeEE5sk_spIT_EPS3_: argument 0"}
!16 = distinct !{!16, !"_Z9sk_ref_spIN13SkStrikeCache6StrikeEE5sk_spIT_EPS3_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_Z10sk_make_spIN13SkStrikeCache6StrikeEJPS0_RK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS6_14default_deleteIS8_EEEERP13SkFontMetricsNS7_I14SkStrikePinnerNS9_ISF_EEEEEE5sk_spIT_EDpOT0_: argument 0"}
!19 = distinct !{!19, !"_Z10sk_make_spIN13SkStrikeCache6StrikeEJPS0_RK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS6_14default_deleteIS8_EEEERP13SkFontMetricsNS7_I14SkStrikePinnerNS9_ISF_EEEEEE5sk_spIT_EDpOT0_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_Z10sk_make_spIN13SkStrikeCache6StrikeEJPS0_RK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS6_14default_deleteIS8_EEEERP13SkFontMetricsNS7_I14SkStrikePinnerNS9_ISF_EEEEEE5sk_spIT_EDpOT0_: argument 0"}
!22 = distinct !{!22, !"_Z10sk_make_spIN13SkStrikeCache6StrikeEJPS0_RK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS6_14default_deleteIS8_EEEERP13SkFontMetricsNS7_I14SkStrikePinnerNS9_ISF_EEEEEE5sk_spIT_EDpOT0_"}
!23 = distinct !{!23, !24, !"_ZN13SkStrikeCache20internalCreateStrikeERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEP13SkFontMetricsNS4_I14SkStrikePinnerNS6_ISB_EEEE: argument 0"}
!24 = distinct !{!24, !"_ZN13SkStrikeCache20internalCreateStrikeERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEP13SkFontMetricsNS4_I14SkStrikePinnerNS6_ISB_EEEE"}
!25 = !{!23}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
