; ModuleID = '../../third_party/webrtc/modules/audio_processing/agc2/adaptive_digital_gain_applier.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/agc2/adaptive_digital_gain_applier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::metrics::Histogram" = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::AdaptiveDigitalGainApplier" = type { %"class.webrtc::ApmDataDumper"*, %"class.webrtc::GainApplier", i32, float, float, i8, i32, i32, float, %"class.std::__1::vector", %"class.std::__1::vector.8" }
%"class.webrtc::GainApplier" = type { i8, float, float, i32, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::vector.0"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { float**, float**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { float** }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo" = type { float, float, i8, float, float, float }
%"class.webrtc::AudioFrameView" = type { float**, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIPfNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = comdat any

@_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.4 = private unnamed_addr constant [39 x i8] c"WebRTC.Audio.Agc2.EstimatedSpeechLevel\00", align 1
@_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer_0 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.5 = private unnamed_addr constant [38 x i8] c"WebRTC.Audio.Agc2.EstimatedNoiseLevel\00", align 1
@_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer_1 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.6 = private unnamed_addr constant [27 x i8] c"WebRTC.Audio.Agc2.Headroom\00", align 1
@_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer_2 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.7 = private unnamed_addr constant [37 x i8] c"WebRTC.Audio.Agc2.DigitalGainApplied\00", align 1
@.str.8 = private unnamed_addr constant [88 x i8] c"../../third_party/webrtc/modules/audio_processing/agc2/adaptive_digital_gain_applier.cc\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"AGC2 adaptive digital\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c" | speech_dbfs: \00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c" | noise_dbfs: \00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c" | headroom_db: \00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c" | gain_db: \00", align 1
@.str.15 = private unnamed_addr constant [43 x i8] c"../../third_party/webrtc/rtc_base/checks.h\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"a % b == 0\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c" is not evenly divisible by \00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = linkonce_odr hidden constant [7 x i8] c"\0D\01\01\01\09\01\00", comdat, align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc26AdaptiveDigitalGainApplierC1EPNS_13ApmDataDumperEiffb = hidden unnamed_addr alias void (%"class.webrtc::AdaptiveDigitalGainApplier"*, %"class.webrtc::ApmDataDumper"*, i32, float, float, i1), void (%"class.webrtc::AdaptiveDigitalGainApplier"*, %"class.webrtc::ApmDataDumper"*, i32, float, float, i1)* @_ZN6webrtc26AdaptiveDigitalGainApplierC2EPNS_13ApmDataDumperEiffb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26AdaptiveDigitalGainApplierC2EPNS_13ApmDataDumperEiffb(%"class.webrtc::AdaptiveDigitalGainApplier"*, %"class.webrtc::ApmDataDumper"*, i32, float, float, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = zext i1 %5 to i8
  %8 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 0
  store %"class.webrtc::ApmDataDumper"* %1, %"class.webrtc::ApmDataDumper"** %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc11GainApplierC1Ebf(%"class.webrtc::GainApplier"* %9, i1 zeroext false, float 0x40041857E0000000) #9
  %10 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 2
  store i32 %2, i32* %10, align 4
  %11 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 3
  %12 = fmul float %3, 1.000000e+01
  %13 = fdiv float %12, 1.000000e+03
  store float %13, float* %11, align 8
  %14 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 4
  store float %4, float* %14, align 4
  %15 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 5
  store i8 %7, i8* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 6
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 7
  store i32 %2, i32* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 8
  store float 8.000000e+00, float* %18, align 4
  %19 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 9
  %20 = bitcast %"class.std::__1::vector"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 48, i1 false)
  tail call void @_ZN6webrtc26AdaptiveDigitalGainApplier10InitializeEii(%"class.webrtc::AdaptiveDigitalGainApplier"* %0, i32 48000, i32 1)
  ret void
}

declare void @_ZN6webrtc11GainApplierC1Ebf(%"class.webrtc::GainApplier"*, i1 zeroext, float) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26AdaptiveDigitalGainApplier10InitializeEii(%"class.webrtc::AdaptiveDigitalGainApplier"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %117, label %7

7:                                                ; preds = %3
  %8 = srem i32 %1, 100
  %9 = sdiv i32 %1, 100
  %10 = icmp eq i32 %8, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.15, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %8, i32 0, i32 %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i32 100) #10
  unreachable

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 9
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %14, align 8
  %16 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 9, i32 0, i32 1
  %17 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %16, align 8
  %18 = icmp eq %"class.std::__1::vector.0"* %15, %17
  %19 = ptrtoint %"class.std::__1::vector.0"* %17 to i64
  %20 = ptrtoint %"class.std::__1::vector.0"* %15 to i64
  br i1 %18, label %31, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %15, i64 0, i32 0, i32 1
  %23 = bitcast float** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.0"* %15 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 2
  %29 = sext i32 %9 to i64
  %30 = icmp eq i64 %28, %29
  br label %31

31:                                               ; preds = %21, %12
  %32 = phi i1 [ false, %12 ], [ %30, %21 ]
  %33 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 10
  %34 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 10, i32 0, i32 1
  %35 = bitcast float*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.8"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = sext i32 %2 to i64
  %42 = icmp eq i64 %40, %41
  %43 = and i1 %32, %42
  br i1 %43, label %117, label %44

44:                                               ; preds = %31
  %45 = sub i64 %19, %20
  %46 = sdiv exact i64 %45, 24
  %47 = icmp ult i64 %46, %41
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = sub nsw i64 %41, %46
  tail call void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector"* %13, i64 %49) #9
  br label %69

50:                                               ; preds = %44
  %51 = icmp ugt i64 %46, %41
  br i1 %51, label %52, label %69

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %15, i64 %41
  %54 = icmp eq %"class.std::__1::vector.0"* %53, %17
  br i1 %54, label %68, label %55

55:                                               ; preds = %52, %66
  %56 = phi %"class.std::__1::vector.0"* [ %57, %66 ], [ %17, %52 ]
  %57 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %56, i64 -1
  %58 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %57, i64 0, i32 0, i32 0
  %59 = load float*, float** %58, align 8
  %60 = icmp eq float* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %55
  %62 = ptrtoint float* %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %56, i64 -1, i32 0, i32 1
  %64 = bitcast float** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast float* %59 to i8*
  tail call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %61, %55
  %67 = icmp eq %"class.std::__1::vector.0"* %57, %53
  br i1 %67, label %68, label %55

68:                                               ; preds = %66, %52
  store %"class.std::__1::vector.0"* %53, %"class.std::__1::vector.0"** %16, align 8
  br label %69

69:                                               ; preds = %48, %50, %68
  %70 = load i64, i64* %35, align 8
  %71 = load i64, i64* %37, align 8
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ult i64 %73, %41
  %75 = inttoptr i64 %71 to float**
  br i1 %74, label %76, label %78

76:                                               ; preds = %69
  %77 = sub nsw i64 %41, %73
  tail call void @_ZNSt3__16vectorIPfNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.8"* %33, i64 %77) #9
  br label %82

78:                                               ; preds = %69
  %79 = icmp ugt i64 %73, %41
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = getelementptr inbounds float*, float** %75, i64 %41
  store float** %81, float*** %34, align 8
  br label %82

82:                                               ; preds = %76, %78, %80
  %83 = icmp sgt i32 %2, 0
  br i1 %83, label %84, label %117

84:                                               ; preds = %82
  %85 = sext i32 %9 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %33, i64 0, i32 0, i32 0
  %87 = zext i32 %2 to i64
  br label %88

88:                                               ; preds = %107, %84
  %89 = phi i64 [ 0, %84 ], [ %115, %107 ]
  %90 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %14, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %90, i64 %89
  %92 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %90, i64 %89, i32 0, i32 1
  %93 = bitcast float** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::vector.0"* %91 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 2
  %99 = icmp ult i64 %98, %85
  %100 = inttoptr i64 %96 to float*
  br i1 %99, label %101, label %103

101:                                              ; preds = %88
  %102 = sub nsw i64 %85, %98
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.0"* %91, i64 %102) #9
  br label %107

103:                                              ; preds = %88
  %104 = icmp ugt i64 %98, %85
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = getelementptr inbounds float, float* %100, i64 %85
  store float* %106, float** %92, align 8
  br label %107

107:                                              ; preds = %101, %103, %105
  %108 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %14, align 8
  %109 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %108, i64 %89, i32 0, i32 0
  %110 = bitcast float** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = load float**, float*** %86, align 8
  %113 = getelementptr inbounds float*, float** %112, i64 %89
  %114 = bitcast float** %113 to i64*
  store i64 %111, i64* %114, align 8
  %115 = add nuw nsw i64 %89, 1
  %116 = icmp eq i64 %115, %87
  br i1 %116, label %117, label %88

117:                                              ; preds = %107, %82, %31, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEE(%"class.webrtc::AdaptiveDigitalGainApplier"*, %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo"* nocapture readonly dereferenceable(24), %"class.webrtc::AudioFrameView"* nocapture readonly byval(%"class.webrtc::AudioFrameView") align 8) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.webrtc::AudioFrameView", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %10 = getelementptr inbounds %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo", %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo"* %1, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo", %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo"* %1, i64 0, i32 4
  %13 = load float, float* %12, align 4
  %14 = fadd float %11, %13
  %15 = fcmp olt float %14, -3.100000e+01
  br i1 %15, label %20, label %16

16:                                               ; preds = %3
  %17 = fcmp olt float %14, -1.000000e+00
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = fsub float -1.000000e+00, %14
  br label %20

20:                                               ; preds = %3, %16, %18
  %21 = phi float [ %19, %18 ], [ 3.000000e+01, %3 ], [ 0.000000e+00, %16 ]
  %22 = getelementptr inbounds %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo", %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo"* %1, i64 0, i32 3
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 4
  %25 = load float, float* %24, align 4
  %26 = fsub float %25, %23
  %27 = fcmp olt float %26, 0.000000e+00
  %28 = select i1 %27, float 0.000000e+00, float %26
  %29 = fcmp olt float %28, %21
  %30 = select i1 %29, float %28, float %21
  %31 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 8
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo", %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo"* %1, i64 0, i32 5
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo", %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo"* %1, i64 0, i32 2
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = fcmp ole float %34, -1.000000e+00
  %39 = or i1 %38, %37
  br i1 %39, label %47, label %40

40:                                               ; preds = %20
  %41 = fsub float %32, %34
  %42 = fadd float %41, -1.000000e+00
  %43 = fcmp olt float %42, 0.000000e+00
  %44 = select i1 %43, float 0.000000e+00, float %42
  %45 = fcmp ogt float %44, %30
  %46 = select i1 %45, float %30, float %44
  br label %47

47:                                               ; preds = %20, %40
  %48 = phi float [ %46, %40 ], [ %30, %20 ]
  %49 = getelementptr inbounds %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo", %"struct.webrtc::AdaptiveDigitalGainApplier::FrameInfo"* %1, i64 0, i32 0
  %50 = load float, float* %49, align 4
  %51 = fcmp olt float %50, 0x3FEE666660000000
  br i1 %51, label %52, label %56

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 7
  store i32 %54, i32* %55, align 8
  br label %75

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 7
  %58 = load i32, i32* %57, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %75

60:                                               ; preds = %56
  %61 = add nsw i32 %58, -1
  store i32 %61, i32* %57, align 8
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 3
  %64 = load float, float* %63, align 8
  br i1 %62, label %69, label %65

65:                                               ; preds = %60
  %66 = fsub float %48, %32
  %67 = fcmp ogt float %66, 0.000000e+00
  %68 = select i1 %67, float 0.000000e+00, float %66
  br label %87

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = sitofp i32 %71 to float
  %73 = fmul float %64, %72
  %74 = fsub float %48, %32
  br label %83

75:                                               ; preds = %56, %52
  %76 = phi i32 [ %54, %52 ], [ %58, %56 ]
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 3
  %79 = load float, float* %78, align 8
  %80 = fsub float %48, %32
  %81 = fcmp ogt float %80, 0.000000e+00
  %82 = select i1 %81, float 0.000000e+00, float %80
  br i1 %77, label %83, label %87

83:                                               ; preds = %69, %75
  %84 = phi float [ %74, %69 ], [ %80, %75 ]
  %85 = phi float [ %73, %69 ], [ %79, %75 ]
  %86 = phi float [ %64, %69 ], [ %79, %75 ]
  br label %87

87:                                               ; preds = %65, %75, %83
  %88 = phi float [ %85, %83 ], [ %79, %75 ], [ %64, %65 ]
  %89 = phi float [ %86, %83 ], [ %79, %75 ], [ %64, %65 ]
  %90 = phi float [ %84, %83 ], [ %82, %75 ], [ %68, %65 ]
  %91 = fsub float -0.000000e+00, %89
  %92 = fcmp ole float %90, %91
  %93 = fcmp oge float %90, %88
  %94 = select i1 %93, float %88, float %90
  %95 = select i1 %92, float %91, float %94
  %96 = fcmp une float %95, 0.000000e+00
  br i1 %96, label %97, label %102

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 1
  %99 = fadd float %32, %95
  %100 = fdiv float %99, 2.000000e+01
  %101 = tail call float @powf(float 1.000000e+01, float %100) #9
  tail call void @_ZN6webrtc11GainApplier13SetGainFactorEf(%"class.webrtc::GainApplier"* %98, float %101) #9
  br label %102

102:                                              ; preds = %97, %87
  %103 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 5
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc11GainApplier9ApplyGainENS_14AudioFrameViewIfEE(%"class.webrtc::GainApplier"* %107, %"class.webrtc::AudioFrameView"* nonnull byval(%"class.webrtc::AudioFrameView") align 8 %2) #9
  br label %157

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.webrtc::AudioFrameView", %"class.webrtc::AudioFrameView"* %2, i64 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.webrtc::AudioFrameView", %"class.webrtc::AudioFrameView"* %2, i64 0, i32 2
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %149, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.webrtc::AudioFrameView", %"class.webrtc::AudioFrameView"* %2, i64 0, i32 0
  %116 = load float**, float*** %115, align 8
  %117 = icmp eq i64 %112, 0
  %118 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 9, i32 0, i32 0
  %119 = shl nuw i64 %112, 2
  %120 = and i64 %110, 1
  %121 = icmp eq i64 %110, 1
  br i1 %121, label %137, label %122

122:                                              ; preds = %114
  %123 = sub i64 %110, %120
  br label %124

124:                                              ; preds = %296, %122
  %125 = phi i64 [ 0, %122 ], [ %297, %296 ]
  %126 = phi i64 [ %123, %122 ], [ %298, %296 ]
  br i1 %117, label %135, label %127

127:                                              ; preds = %124
  %128 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %118, align 8
  %129 = getelementptr inbounds float*, float** %116, i64 %125
  %130 = bitcast float** %129 to i8**
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %128, i64 %125, i32 0, i32 0
  %133 = bitcast float** %132 to i8**
  %134 = load i8*, i8** %133, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %134, i8* align 4 %131, i64 %119, i1 false) #9
  br label %135

135:                                              ; preds = %127, %124
  %136 = or i64 %125, 1
  br i1 %117, label %296, label %288

137:                                              ; preds = %296, %114
  %138 = phi i64 [ 0, %114 ], [ %297, %296 ]
  %139 = icmp eq i64 %120, 0
  %140 = or i1 %139, %117
  br i1 %140, label %149, label %141

141:                                              ; preds = %137
  %142 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %118, align 8
  %143 = getelementptr inbounds float*, float** %116, i64 %138
  %144 = bitcast float** %143 to i8**
  %145 = load i8*, i8** %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %142, i64 %138, i32 0, i32 0
  %147 = bitcast float** %146 to i8**
  %148 = load i8*, i8** %147, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %145, i64 %119, i1 false) #9
  br label %149

149:                                              ; preds = %137, %141, %108
  %150 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 10, i32 0, i32 0
  %151 = bitcast float*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 1
  %154 = bitcast %"class.webrtc::AudioFrameView"* %4 to i64*
  store i64 %152, i64* %154, align 8
  %155 = getelementptr inbounds %"class.webrtc::AudioFrameView", %"class.webrtc::AudioFrameView"* %4, i64 0, i32 1
  store i64 %110, i64* %155, align 8
  %156 = getelementptr inbounds %"class.webrtc::AudioFrameView", %"class.webrtc::AudioFrameView"* %4, i64 0, i32 2
  store i64 %112, i64* %156, align 8
  tail call void @_ZN6webrtc11GainApplier9ApplyGainENS_14AudioFrameViewIfEE(%"class.webrtc::GainApplier"* %153, %"class.webrtc::AudioFrameView"* nonnull byval(%"class.webrtc::AudioFrameView") align 8 %4) #9
  br label %157

157:                                              ; preds = %149, %106
  %158 = load float, float* %31, align 4
  %159 = fadd float %95, %158
  store float %159, float* %31, align 4
  %160 = getelementptr inbounds %"class.webrtc::AdaptiveDigitalGainApplier", %"class.webrtc::AdaptiveDigitalGainApplier"* %0, i64 0, i32 6
  %161 = load i32, i32* %160, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %160, align 4
  %163 = icmp eq i32 %162, 1000
  br i1 %163, label %164, label %287

164:                                              ; preds = %157
  store i32 0, i32* %160, align 4
  %165 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer to i64*) acquire, align 8
  %166 = inttoptr i64 %165 to %"class.webrtc::metrics::Histogram"*
  %167 = icmp eq i64 %165, 0
  br i1 %167, label %168, label %186

168:                                              ; preds = %164
  %169 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #9
  %170 = tail call i8* @_Znwm(i64 48) #11
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %170, i8** %171, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = bitcast i64* %172 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %173, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %170, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0), i64 38, i1 false) #9
  %174 = getelementptr inbounds i8, i8* %170, i64 38
  store i8 0, i8* %174, align 1
  %175 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 0, i32 100, i32 101) #9
  %176 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %168
  %181 = load i8*, i8** %171, align 8
  call void @_ZdlPv(i8* %181) #11
  br label %182

182:                                              ; preds = %180, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #9
  %183 = ptrtoint %"class.webrtc::metrics::Histogram"* %175 to i64
  %184 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer to i64*), i64 0, i64 %183 seq_cst seq_cst
  %185 = icmp eq %"class.webrtc::metrics::Histogram"* %175, null
  br i1 %185, label %191, label %186

186:                                              ; preds = %164, %182
  %187 = phi %"class.webrtc::metrics::Histogram"* [ %175, %182 ], [ %166, %164 ]
  %188 = load float, float* %10, align 4
  %189 = fsub float -0.000000e+00, %188
  %190 = fptosi float %189 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %187, i32 %190) #9
  br label %191

191:                                              ; preds = %182, %186
  %192 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer_0 to i64*) acquire, align 8
  %193 = inttoptr i64 %192 to %"class.webrtc::metrics::Histogram"*
  %194 = icmp eq i64 %192, 0
  br i1 %194, label %195, label %213

195:                                              ; preds = %191
  %196 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #9
  %197 = call i8* @_Znwm(i64 48) #11
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %197, i8** %198, align 8
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = bitcast i64* %199 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %200, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %197, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #9
  %201 = getelementptr inbounds i8, i8* %197, i64 37
  store i8 0, i8* %201, align 1
  %202 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 0, i32 100, i32 101) #9
  %203 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %195
  %208 = load i8*, i8** %198, align 8
  call void @_ZdlPv(i8* %208) #11
  br label %209

209:                                              ; preds = %207, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #9
  %210 = ptrtoint %"class.webrtc::metrics::Histogram"* %202 to i64
  %211 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer_0 to i64*), i64 0, i64 %210 seq_cst seq_cst
  %212 = icmp eq %"class.webrtc::metrics::Histogram"* %202, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %191, %209
  %214 = phi %"class.webrtc::metrics::Histogram"* [ %202, %209 ], [ %193, %191 ]
  %215 = load float, float* %22, align 4
  %216 = fsub float -0.000000e+00, %215
  %217 = fptosi float %216 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %214, i32 %217) #9
  br label %218

218:                                              ; preds = %209, %213
  %219 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer_1 to i64*) acquire, align 8
  %220 = inttoptr i64 %219 to %"class.webrtc::metrics::Histogram"*
  %221 = icmp eq i64 %219, 0
  br i1 %221, label %222, label %240

222:                                              ; preds = %218
  %223 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #9
  %224 = call i8* @_Znwm(i64 32) #11
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %224, i8** %225, align 8
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = bitcast i64* %226 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %227, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %224, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i64 26, i1 false) #9
  %228 = getelementptr inbounds i8, i8* %224, i64 26
  store i8 0, i8* %228, align 1
  %229 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 0, i32 50, i32 51) #9
  %230 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %236

234:                                              ; preds = %222
  %235 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %235) #11
  br label %236

236:                                              ; preds = %234, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #9
  %237 = ptrtoint %"class.webrtc::metrics::Histogram"* %229 to i64
  %238 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer_1 to i64*), i64 0, i64 %237 seq_cst seq_cst
  %239 = icmp eq %"class.webrtc::metrics::Histogram"* %229, null
  br i1 %239, label %244, label %240

240:                                              ; preds = %218, %236
  %241 = phi %"class.webrtc::metrics::Histogram"* [ %229, %236 ], [ %220, %218 ]
  %242 = load float, float* %12, align 4
  %243 = fptosi float %242 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %241, i32 %243) #9
  br label %244

244:                                              ; preds = %236, %240
  %245 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer_2 to i64*) acquire, align 8
  %246 = inttoptr i64 %245 to %"class.webrtc::metrics::Histogram"*
  %247 = icmp eq i64 %245, 0
  br i1 %247, label %248, label %266

248:                                              ; preds = %244
  %249 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %249) #9
  %250 = call i8* @_Znwm(i64 48) #11
  %251 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %250, i8** %251, align 8
  %252 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %253 = bitcast i64* %252 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %253, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %250, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i64 36, i1 false) #9
  %254 = getelementptr inbounds i8, i8* %250, i64 36
  store i8 0, i8* %254, align 1
  %255 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i32 0, i32 30, i32 31) #9
  %256 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %256, i64 0, i32 1, i32 0
  %258 = load i8, i8* %257, align 1
  %259 = icmp slt i8 %258, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %248
  %261 = load i8*, i8** %251, align 8
  call void @_ZdlPv(i8* %261) #11
  br label %262

262:                                              ; preds = %260, %248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %249) #9
  %263 = ptrtoint %"class.webrtc::metrics::Histogram"* %255 to i64
  %264 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc26AdaptiveDigitalGainApplier7ProcessERKNS0_9FrameInfoENS_14AudioFrameViewIfEEE24atomic_histogram_pointer_2 to i64*), i64 0, i64 %263 seq_cst seq_cst
  %265 = icmp eq %"class.webrtc::metrics::Histogram"* %255, null
  br i1 %265, label %270, label %266

266:                                              ; preds = %244, %262
  %267 = phi %"class.webrtc::metrics::Histogram"* [ %255, %262 ], [ %246, %244 ]
  %268 = load float, float* %31, align 4
  %269 = fptosi float %268 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %267, i32 %269) #9
  br label %270

270:                                              ; preds = %262, %266
  %271 = bitcast %"class.rtc::DiagnosticLogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %271) #9
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %9, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.8, i64 0, i64 0), i32 251, i32 3, i32 0, i32 0) #9
  %272 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %9, i64 0, i32 7
  %273 = bitcast %"class.std::__1::basic_ostringstream"* %272 to %"class.std::__1::basic_ostream"*
  %274 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %273, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i64 21) #9
  %275 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %274, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i64 16) #9
  %276 = load float, float* %10, align 4
  %277 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %275, float %276) #9
  %278 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %277, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i64 15) #9
  %279 = load float, float* %22, align 4
  %280 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %278, float %279) #9
  %281 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %280, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i64 16) #9
  %282 = load float, float* %12, align 4
  %283 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %281, float %282) #9
  %284 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %283, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12) #9
  %285 = load float, float* %31, align 4
  %286 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %284, float %285) #9
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %271) #9
  br label %287

287:                                              ; preds = %270, %157
  ret void

288:                                              ; preds = %135
  %289 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %118, align 8
  %290 = getelementptr inbounds float*, float** %116, i64 %136
  %291 = bitcast float** %290 to i8**
  %292 = load i8*, i8** %291, align 8
  %293 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %289, i64 %136, i32 0, i32 0
  %294 = bitcast float** %293 to i8**
  %295 = load i8*, i8** %294, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %295, i8* align 4 %292, i64 %119, i1 false) #9
  br label %296

296:                                              ; preds = %288, %135
  %297 = add nuw i64 %125, 2
  %298 = add i64 %126, -2
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %137, label %124
}

declare void @_ZN6webrtc11GainApplier13SetGainFactorEf(%"class.webrtc::GainApplier"*, float) local_unnamed_addr #1

declare void @_ZN6webrtc11GainApplier9ApplyGainENS_14AudioFrameViewIfEE(%"class.webrtc::GainApplier"*, %"class.webrtc::AudioFrameView"* byval(%"class.webrtc::AudioFrameView") align 8) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32) local_unnamed_addr #1

declare void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"*, i32) local_unnamed_addr #1

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"*, float) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::vector.0"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.0"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::vector.0"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast float** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #9
  %27 = ptrtoint %"class.std::__1::vector.0"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %124

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #10
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #11
  %52 = bitcast i8* %51 to %"class.std::__1::vector.0"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"class.std::__1::vector.0"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %55, i64 %34
  %57 = ptrtoint %"class.std::__1::vector.0"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %55, i64 %54
  %59 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"class.std::__1::vector.0"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #9
  %64 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %61, i64 1
  %65 = ptrtoint %"class.std::__1::vector.0"* %64 to i64
  %66 = icmp eq %"class.std::__1::vector.0"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::vector.0"* %58 to i64
  %69 = ptrtoint %"class.std::__1::vector.0"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %70, align 8
  %72 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %6, align 8
  %73 = icmp eq %"class.std::__1::vector.0"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"class.std::__1::vector.0"* %71 to i64
  br label %101

76:                                               ; preds = %67, %76
  %77 = phi %"class.std::__1::vector.0"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"class.std::__1::vector.0"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %78, i64 -1
  %81 = bitcast %"class.std::__1::vector.0"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #9
  %82 = bitcast %"class.std::__1::vector.0"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.0"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %78, i64 -1, i32 0, i32 1
  %86 = bitcast float** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %77, i64 -1, i32 0, i32 1
  %89 = bitcast float** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %78, i64 -1, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast float** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %77, i64 -1, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast float** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"class.std::__1::vector.0"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #9
  %96 = icmp eq %"class.std::__1::vector.0"* %80, %71
  br i1 %96, label %97, label %76

97:                                               ; preds = %76
  %98 = ptrtoint %"class.std::__1::vector.0"* %79 to i64
  %99 = load i64, i64* %31, align 8
  %100 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %6, align 8
  br label %101

101:                                              ; preds = %74, %97
  %102 = phi %"class.std::__1::vector.0"* [ %71, %74 ], [ %100, %97 ]
  %103 = phi i64 [ %57, %74 ], [ %98, %97 ]
  %104 = phi i64 [ %75, %74 ], [ %99, %97 ]
  store i64 %103, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %105 = inttoptr i64 %104 to %"class.std::__1::vector.0"*
  %106 = icmp eq %"class.std::__1::vector.0"* %102, %105
  br i1 %106, label %120, label %107

107:                                              ; preds = %101, %118
  %108 = phi %"class.std::__1::vector.0"* [ %109, %118 ], [ %102, %101 ]
  %109 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %108, i64 -1
  %110 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %109, i64 0, i32 0, i32 0
  %111 = load float*, float** %110, align 8
  %112 = icmp eq float* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = ptrtoint float* %111 to i64
  %115 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %108, i64 -1, i32 0, i32 1
  %116 = bitcast float** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast float* %111 to i8*
  tail call void @_ZdlPv(i8* %117) #11
  br label %118

118:                                              ; preds = %113, %107
  %119 = icmp eq %"class.std::__1::vector.0"* %109, %105
  br i1 %119, label %120, label %107

120:                                              ; preds = %118, %101
  %121 = icmp eq i64 %104, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %104 to i8*
  tail call void @_ZdlPv(i8* %123) #11
  br label %124

124:                                              ; preds = %122, %120, %28
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPfNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.8"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float*, float** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float*, float** %13, i64 %18
  %20 = bitcast float** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint float** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #11
  %54 = bitcast i8* %53 to float**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float*, float** %57, i64 %33
  %59 = getelementptr inbounds float*, float** %57, i64 %56
  %60 = getelementptr inbounds float*, float** %58, i64 %1
  %61 = bitcast float** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #9
  %63 = ptrtoint float** %59 to i64
  %64 = ptrtoint float** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %66 = load float**, float*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float*, float** %58, i64 %71
  %73 = ptrtoint float** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float** %72 to i8*
  %77 = bitcast float** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #9
  %78 = load float**, float*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #11
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.0"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.0"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.0"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #11
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #9
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #9
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #11
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
