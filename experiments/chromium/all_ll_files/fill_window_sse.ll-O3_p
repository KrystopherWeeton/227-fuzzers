; ModuleID = '../../third_party/zlib/fill_window_sse.c'
source_filename = "../../third_party/zlib/fill_window_sse.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.internal_state = type { %struct.z_stream_s*, i32, i8*, i64, i8*, i64, i32, %struct.Cr_z_gz_header_s*, i64, i8, i32, [20 x i32], i32, i32, i32, i8*, i64, i16*, i16*, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [573 x %struct.ct_data_s], [61 x %struct.ct_data_s], [39 x %struct.ct_data_s], %struct.tree_desc_s, %struct.tree_desc_s, %struct.tree_desc_s, [16 x i16], [573 x i32], i32, i32, [573 x i8], i8*, i32, i32, i32, i64, i64, i32, i32, i16, i32, i64 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.Cr_z_gz_header_s = type { i32, i64, i32, i32, i8*, i32, i32, i8*, i32, i8*, i32, i32, i32 }
%struct.ct_data_s = type { %union.anon, %union.anon.0 }
%union.anon = type { i16 }
%union.anon.0 = type { i16 }
%struct.tree_desc_s = type { %struct.ct_data_s*, i32, %struct.static_tree_desc_s* }
%struct.static_tree_desc_s = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden void @Cr_z_fill_window_sse(%struct.internal_state* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 8
  %4 = trunc i32 %3 to i16
  %5 = insertelement <8 x i16> undef, i16 %4, i32 0
  %6 = shufflevector <8 x i16> %5, <8 x i16> undef, <8 x i32> zeroinitializer
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 30
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %10 = add i32 %3, -262
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %12 = zext i32 %3 to i64
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 24
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 20
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 18
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 19
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 34
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 22
  %22 = load i32, i32* %8, align 4
  br label %23

23:                                               ; preds = %144, %1
  %24 = phi i32 [ %145, %144 ], [ %3, %1 ]
  %25 = phi i32 [ %87, %144 ], [ %22, %1 ]
  %26 = load i64, i64* %7, align 8
  %27 = load i32, i32* %9, align 4
  %28 = trunc i64 %26 to i32
  %29 = sub i32 %28, %25
  %30 = sub i32 %29, %27
  %31 = add i32 %10, %24
  %32 = icmp ult i32 %27, %31
  br i1 %32, label %71, label %33

33:                                               ; preds = %23
  %34 = load i8*, i8** %11, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %35, i64 %12, i1 false)
  %36 = load i32, i32* %13, align 8
  %37 = sub i32 %36, %3
  store i32 %37, i32* %13, align 8
  %38 = load i32, i32* %9, align 4
  %39 = sub i32 %38, %3
  store i32 %39, i32* %9, align 4
  %40 = load i64, i64* %14, align 8
  %41 = sub nsw i64 %40, %12
  store i64 %41, i64* %14, align 8
  %42 = load i32, i32* %15, align 4
  %43 = load i16*, i16** %16, align 8
  %44 = zext i32 %42 to i64
  %45 = getelementptr inbounds i16, i16* %43, i64 -8
  %46 = getelementptr inbounds i16, i16* %45, i64 %44
  br label %47

47:                                               ; preds = %47, %33
  %48 = phi i16* [ %46, %33 ], [ %53, %47 ]
  %49 = phi i32 [ %42, %33 ], [ %54, %47 ]
  %50 = bitcast i16* %48 to <8 x i16>*
  %51 = load <8 x i16>, <8 x i16>* %50, align 1
  %52 = tail call <8 x i16> @llvm.usub.sat.v8i16(<8 x i16> %51, <8 x i16> %6) #4
  store <8 x i16> %52, <8 x i16>* %50, align 1
  %53 = getelementptr inbounds i16, i16* %48, i64 -8
  %54 = add i32 %49, -8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %47

56:                                               ; preds = %47
  %57 = load i16*, i16** %17, align 8
  %58 = getelementptr inbounds i16, i16* %57, i64 -8
  %59 = getelementptr inbounds i16, i16* %58, i64 %12
  br label %60

60:                                               ; preds = %60, %56
  %61 = phi i16* [ %59, %56 ], [ %66, %60 ]
  %62 = phi i32 [ %3, %56 ], [ %67, %60 ]
  %63 = bitcast i16* %61 to <8 x i16>*
  %64 = load <8 x i16>, <8 x i16>* %63, align 1
  %65 = tail call <8 x i16> @llvm.usub.sat.v8i16(<8 x i16> %64, <8 x i16> %6) #4
  store <8 x i16> %65, <8 x i16>* %63, align 1
  %66 = getelementptr inbounds i16, i16* %61, i64 -8
  %67 = add i32 %62, -8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %60

69:                                               ; preds = %60
  %70 = add i32 %30, %3
  br label %71

71:                                               ; preds = %23, %69
  %72 = phi i32 [ %70, %69 ], [ %30, %23 ]
  %73 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  %74 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %73, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %146, label %77

77:                                               ; preds = %71
  %78 = load i8*, i8** %11, align 8
  %79 = load i32, i32* %9, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  %82 = load i32, i32* %8, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %81, i64 %83
  %85 = tail call i32 @Cr_z_deflate_read_buf(%struct.z_stream_s* %73, i8* %84, i32 %72) #4
  %86 = load i32, i32* %8, align 4
  %87 = add i32 %86, %85
  store i32 %87, i32* %8, align 4
  %88 = icmp ugt i32 %87, 2
  br i1 %88, label %89, label %139

89:                                               ; preds = %77
  %90 = load i32, i32* %9, align 4
  %91 = load i8*, i8** %11, align 8
  %92 = zext i32 %90 to i64
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  store i32 %95, i32* %19, align 8
  %96 = icmp eq i32 %90, 0
  br i1 %96, label %137, label %97

97:                                               ; preds = %89
  %98 = load i32, i32* %20, align 4
  %99 = icmp slt i32 %98, 6
  %100 = add i32 %90, 1
  %101 = add i32 %90, -1
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %91, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  br i1 %99, label %106, label %119

106:                                              ; preds = %97
  %107 = mul nuw nsw i32 %105, 3483
  %108 = load i8, i8* %93, align 1
  %109 = zext i8 %108 to i32
  %110 = mul nuw nsw i32 %109, 23081
  %111 = add nuw nsw i32 %110, %107
  %112 = zext i32 %100 to i64
  %113 = getelementptr inbounds i8, i8* %91, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = mul nuw nsw i32 %115, 6954
  %117 = add nuw nsw i32 %111, %116
  %118 = add i32 %90, 2
  br label %125

119:                                              ; preds = %97
  %120 = mul nuw nsw i32 %105, 25881
  %121 = load i8, i8* %93, align 1
  %122 = zext i8 %121 to i32
  %123 = mul nuw nsw i32 %122, 24674
  %124 = add nuw nsw i32 %123, %120
  br label %125

125:                                              ; preds = %106, %119
  %126 = phi i32 [ %100, %119 ], [ %118, %106 ]
  %127 = phi i32 [ 25811, %119 ], [ 20947, %106 ]
  %128 = phi i32 [ %124, %119 ], [ %117, %106 ]
  %129 = zext i32 %126 to i64
  %130 = getelementptr inbounds i8, i8* %91, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = mul nuw nsw i32 %127, %132
  %134 = add nuw nsw i32 %128, %133
  %135 = load i32, i32* %21, align 4
  %136 = and i32 %134, %135
  store i32 %136, i32* %19, align 8
  br label %137

137:                                              ; preds = %125, %89
  %138 = icmp ult i32 %87, 262
  br i1 %138, label %139, label %146

139:                                              ; preds = %77, %137
  %140 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  %141 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %140, i64 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %139
  %145 = load i32, i32* %2, align 8
  br label %23

146:                                              ; preds = %139, %137, %71
  %147 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 59
  %148 = load i64, i64* %147, align 8
  %149 = load i64, i64* %7, align 8
  %150 = icmp ugt i64 %149, %148
  br i1 %150, label %151, label %178

151:                                              ; preds = %146
  %152 = load i32, i32* %9, align 4
  %153 = zext i32 %152 to i64
  %154 = load i32, i32* %8, align 4
  %155 = zext i32 %154 to i64
  %156 = add nuw nsw i64 %155, %153
  %157 = icmp ult i64 %148, %156
  br i1 %157, label %158, label %165

158:                                              ; preds = %151
  %159 = sub i64 %149, %156
  %160 = icmp ult i64 %159, 258
  %161 = select i1 %160, i64 %159, i64 258
  %162 = load i8*, i8** %11, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 %156
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %163, i8 0, i64 %161, i1 false)
  %164 = add nuw nsw i64 %161, %156
  store i64 %164, i64* %147, align 8
  br label %178

165:                                              ; preds = %151
  %166 = add nuw nsw i64 %156, 258
  %167 = icmp ugt i64 %166, %148
  br i1 %167, label %168, label %178

168:                                              ; preds = %165
  %169 = sub i64 %166, %148
  %170 = sub i64 %149, %148
  %171 = icmp ugt i64 %169, %170
  %172 = select i1 %171, i64 %170, i64 %169
  %173 = load i8*, i8** %11, align 8
  %174 = getelementptr inbounds i8, i8* %173, i64 %148
  %175 = and i64 %172, 4294967295
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %174, i8 0, i64 %175, i1 false)
  %176 = load i64, i64* %147, align 8
  %177 = add i64 %176, %172
  store i64 %177, i64* %147, align 8
  br label %178

178:                                              ; preds = %158, %168, %165, %146
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @Cr_z_deflate_read_buf(%struct.z_stream_s*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare <8 x i16> @llvm.usub.sat.v8i16(<8 x i16>, <8 x i16>) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+pclmul,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+pclmul,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
