; ModuleID = '../../third_party/icu/source/common/rbbi_cache.cpp'
source_filename = "../../third_party/icu/source/common/rbbi_cache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::RuleBasedBreakIterator::DictionaryCache" = type <{ %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::UVector32", i32, i32, i32, i32, i32, [4 x i8] }>
%"class.icu_69::UVector32" = type { %"class.icu_69::UObject", i32, i32, i32, i32* }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::RuleBasedBreakIterator" = type { %"class.icu_69::BreakIterator.base", %struct.UText, %"class.icu_69::RBBIDataWrapper"*, i32, i32, %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::UStack"*, %"class.icu_69::UnhandledEngine"*, i32, %"class.icu_69::CharacterIterator"*, %"class.icu_69::StringCharacterIterator", i8, i32* }
%"class.icu_69::BreakIterator.base" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8] }>
%struct.UText = type { i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i16*, %struct.UTextFuncs*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i32, i32, i64, i32, i32 }
%struct.UTextFuncs = type { i32, i32, i32, i32, %struct.UText* (%struct.UText*, %struct.UText*, i8, i32*)*, i64 (%struct.UText*)*, i8 (%struct.UText*, i64, i8)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, void (%struct.UText*, i64, i64, i64, i8, i32*)*, i64 (%struct.UText*)*, i32 (%struct.UText*, i64)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)* }
%"class.icu_69::RBBIDataWrapper" = type <{ %"struct.icu_69::RBBIDataHeader"*, %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"*, i8*, i32*, i32, [4 x i8], %struct.UCPTrie*, %"struct.std::__1::atomic", [4 x i8], %struct.UDataMemory*, %"class.icu_69::UnicodeString", i8, [7 x i8] }>
%"struct.icu_69::RBBIDataHeader" = type { i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32] }
%"struct.icu_69::RBBIStateTable" = type { i32, i32, i32, i32, i32, [1 x i8] }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.UDataMemory = type opaque
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.1, [32 x i8] }
%struct.anon.1 = type { i16, i32, i32, i16* }
%"class.icu_69::RuleBasedBreakIterator::BreakCache" = type { i32 (...)**, %"class.icu_69::RuleBasedBreakIterator"*, i32, i32, i32, i32, [128 x i32], [128 x i16], %"class.icu_69::UVector32" }
%"class.icu_69::UStack" = type { %"class.icu_69::UVector" }
%"class.icu_69::UVector" = type { %"class.icu_69::UObject", i32, i32, %union.UElement*, void (i8*)*, i8 (i8*, i8*)* }
%union.UElement = type { i8* }
%"class.icu_69::UnhandledEngine" = type { %"class.icu_69::LanguageBreakEngine", %"class.icu_69::UnicodeSet"* }
%"class.icu_69::LanguageBreakEngine" = type { i32 (...)** }
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%"class.icu_69::CharacterIterator" = type { %"class.icu_69::ForwardCharacterIterator", i32, i32, i32, i32 }
%"class.icu_69::ForwardCharacterIterator" = type { %"class.icu_69::UObject" }
%"class.icu_69::StringCharacterIterator" = type { %"class.icu_69::UCharCharacterIterator", %"class.icu_69::UnicodeString" }
%"class.icu_69::UCharCharacterIterator" = type { %"class.icu_69::CharacterIterator", i16* }

$_ZTSN6icu_697UMemoryE = comdat any

$_ZTIN6icu_697UMemoryE = comdat any

@_ZTVN6icu_6922RuleBasedBreakIterator10BreakCacheE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6922RuleBasedBreakIterator10BreakCacheE to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)* @_ZN6icu_6922RuleBasedBreakIterator10BreakCacheD2Ev to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)* @_ZN6icu_6922RuleBasedBreakIterator10BreakCacheD0Ev to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6922RuleBasedBreakIterator10BreakCacheE = hidden constant [46 x i8] c"N6icu_6922RuleBasedBreakIterator10BreakCacheE\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN6icu_697UMemoryE = linkonce_odr hidden constant [18 x i8] c"N6icu_697UMemoryE\00", comdat, align 1
@_ZTIN6icu_697UMemoryE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6icu_697UMemoryE, i32 0, i32 0) }, comdat, align 8
@_ZTIN6icu_6922RuleBasedBreakIterator10BreakCacheE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @_ZTSN6icu_6922RuleBasedBreakIterator10BreakCacheE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_697UMemoryE to i8*) }, align 8

@_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheC1EPS0_R10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator"*, i32*), void (%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator"*, i32*)* @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheC2EPS0_R10UErrorCode
@_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheD1Ev = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*), void (%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*)* @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheD2Ev
@_ZN6icu_6922RuleBasedBreakIterator10BreakCacheC1EPS0_R10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator"*, i32*), void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator"*, i32*)* @_ZN6icu_6922RuleBasedBreakIterator10BreakCacheC2EPS0_R10UErrorCode
@_ZN6icu_6922RuleBasedBreakIterator10BreakCacheD1Ev = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*), void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)* @_ZN6icu_6922RuleBasedBreakIterator10BreakCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheC2EPS0_R10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 0
  store %"class.icu_69::RuleBasedBreakIterator"* %1, %"class.icu_69::RuleBasedBreakIterator"** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1
  tail call void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"* %5, i32* dereferenceable(4) %2) #8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 2
  store i32 -1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 3
  %8 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"*, i32* dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheD2Ev(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1
  tail call void @_ZN6icu_699UVector32D1Ev(%"class.icu_69::UVector32"* %2) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_699UVector32D1Ev(%"class.icu_69::UVector32"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache5resetEv(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 2
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 16, i1 false)
  tail call void @_ZN6icu_699UVector3217removeAllElementsEv(%"class.icu_69::UVector32"* %4) #8
  ret void
}

declare void @_ZN6icu_699UVector3217removeAllElementsEv(%"class.icu_69::UVector32"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache9followingEiPiS2_(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* nocapture, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %4, %8
  %13 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 2
  store i32 -1, i32* %13, align 8
  br label %67

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, -1
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %16, %19
  %21 = and i1 %17, %20
  br i1 %21, label %22, label %48

22:                                               ; preds = %14
  %23 = icmp sgt i32 %19, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %26 = load i32*, i32** %25, align 8
  %27 = sext i32 %16 to i64
  %28 = getelementptr inbounds i32, i32* %26, i64 %27
  %29 = load i32, i32* %28, align 4
  br label %30

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %29, %24 ], [ 0, %22 ]
  %32 = icmp eq i32 %31, %1
  br i1 %32, label %33, label %48

33:                                               ; preds = %30
  %34 = add nuw nsw i32 %16, 1
  store i32 %34, i32* %15, align 8
  %35 = icmp slt i32 %34, %19
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  store i32 -1, i32* %15, align 8
  br label %67

37:                                               ; preds = %33
  br i1 %23, label %38, label %44

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %40 = load i32*, i32** %39, align 8
  %41 = sext i32 %34 to i64
  %42 = getelementptr inbounds i32, i32* %40, i64 %41
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %37, %38
  %45 = phi i32 [ %43, %38 ], [ 0, %37 ]
  store i32 %45, i32* %2, align 4
  %46 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 6
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %3, align 4
  br label %67

48:                                               ; preds = %14, %30
  store i32 0, i32* %15, align 8
  %49 = icmp sgt i32 %19, 0
  br i1 %49, label %50, label %66

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %52 = sext i32 %19 to i64
  br label %56

53:                                               ; preds = %56
  %54 = trunc i64 %62 to i32
  store i32 %54, i32* %15, align 8
  %55 = icmp slt i64 %62, %52
  br i1 %55, label %56, label %66

56:                                               ; preds = %50, %53
  %57 = phi i64 [ 0, %50 ], [ %62, %53 ]
  %58 = load i32*, i32** %51, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %57
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, %1
  %62 = add nuw nsw i64 %57, 1
  br i1 %61, label %63, label %53

63:                                               ; preds = %56
  store i32 %60, i32* %2, align 4
  %64 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 6
  %65 = load i32, i32* %64, align 8
  store i32 %65, i32* %3, align 4
  br label %67

66:                                               ; preds = %53, %48
  tail call void @abort() #9
  unreachable

67:                                               ; preds = %36, %44, %63, %12
  %68 = phi i8 [ 0, %12 ], [ 0, %36 ], [ 1, %44 ], [ 1, %63 ]
  ret i8 %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache9precedingEiPiS2_(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* nocapture, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %4, %8
  %13 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 2
  store i32 -1, i32* %13, align 8
  br label %95

14:                                               ; preds = %8
  %15 = icmp eq i32 %10, %1
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  br label %24

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, -1
  %23 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  br label %24

24:                                               ; preds = %16, %19
  %25 = phi i32 [ %18, %16 ], [ %22, %19 ]
  %26 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 2
  %27 = icmp sgt i32 %25, 0
  br i1 %27, label %28, label %61

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %25, %30
  br i1 %31, label %32, label %67

32:                                               ; preds = %28
  %33 = icmp sgt i32 %30, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %36 = load i32*, i32** %35, align 8
  %37 = sext i32 %25 to i64
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %32, %34
  %41 = phi i32 [ %39, %34 ], [ 0, %32 ]
  %42 = icmp eq i32 %41, %1
  br i1 %42, label %43, label %67

43:                                               ; preds = %40
  %44 = add nsw i32 %25, -1
  store i32 %44, i32* %26, align 8
  %45 = icmp sge i32 %30, %25
  %46 = and i1 %33, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %49 = load i32*, i32** %48, align 8
  %50 = sext i32 %44 to i64
  %51 = getelementptr inbounds i32, i32* %49, i64 %50
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %43, %47
  %54 = phi i32 [ %52, %47 ], [ 0, %43 ]
  store i32 %54, i32* %2, align 4
  %55 = load i32, i32* %5, align 4
  %56 = icmp eq i32 %54, %55
  %57 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 5
  %58 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 6
  %59 = select i1 %56, i32* %57, i32* %58
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %3, align 4
  br label %95

61:                                               ; preds = %24
  %62 = icmp eq i32 %25, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 1
  %65 = load i32, i32* %64, align 8
  br label %67

66:                                               ; preds = %61
  store i32 -1, i32* %26, align 8
  br label %95

67:                                               ; preds = %63, %28, %40
  %68 = phi i32 [ %65, %63 ], [ %30, %28 ], [ %30, %40 ]
  %69 = icmp sgt i32 %68, 0
  %70 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %71 = sext i32 %68 to i64
  br label %72

72:                                               ; preds = %84, %67
  %73 = phi i64 [ %74, %84 ], [ %71, %67 ]
  %74 = add nsw i64 %73, -1
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %26, align 8
  %76 = icmp sgt i64 %73, 0
  br i1 %76, label %77, label %94

77:                                               ; preds = %72
  %78 = icmp sle i64 %73, %71
  %79 = and i1 %69, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %77
  %81 = load i32*, i32** %70, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 %74
  %83 = load i32, i32* %82, align 4
  br label %84

84:                                               ; preds = %77, %80
  %85 = phi i32 [ %83, %80 ], [ 0, %77 ]
  %86 = icmp slt i32 %85, %1
  br i1 %86, label %87, label %72

87:                                               ; preds = %84
  store i32 %85, i32* %2, align 4
  %88 = load i32, i32* %5, align 4
  %89 = icmp eq i32 %85, %88
  %90 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 5
  %91 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 6
  %92 = select i1 %89, i32* %90, i32* %91
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %3, align 4
  br label %95

94:                                               ; preds = %72
  tail call void @abort() #9
  unreachable

95:                                               ; preds = %53, %66, %87, %12
  %96 = phi i8 [ 0, %12 ], [ 1, %53 ], [ 0, %66 ], [ 1, %87 ]
  ret i8 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache18populateDictionaryEiiii(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = sub nsw i32 %2, %1
  %8 = icmp slt i32 %7, 2
  br i1 %8, label %158, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 2
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1
  %13 = bitcast i32* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 16, i1 false) #8
  tail call void @_ZN6icu_699UVector3217removeAllElementsEv(%"class.icu_69::UVector32"* %12) #8
  %14 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 5
  store i32 %3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 6
  store i32 %4, i32* %15, align 8
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 0, i32* %6, align 4
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 0
  %18 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %18, i64 0, i32 1
  %20 = sext i32 %1 to i64
  tail call void @utext_setNativeIndex_69(%struct.UText* %19, i64 %20) #8
  %21 = tail call i32 @utext_current32_69(%struct.UText* %19) #8
  %22 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %23 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %22, i64 0, i32 2
  %24 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %23, align 8
  %25 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %24, i64 0, i32 7
  %26 = load %struct.UCPTrie*, %struct.UCPTrie** %25, align 8
  %27 = tail call i32 @ucptrie_get_69(%struct.UCPTrie* %26, i32 %21) #8
  %28 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %29 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %28, i64 0, i32 2
  %30 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %29, align 8
  %31 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %30, i64 0, i32 1
  %32 = load %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"** %31, align 8
  %33 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %32, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %18, i64 0, i32 1, i32 8
  %36 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %18, i64 0, i32 1, i32 6
  %37 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %18, i64 0, i32 1, i32 7
  %38 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %18, i64 0, i32 1, i32 11
  br label %39

39:                                               ; preds = %86, %9
  %40 = phi i32 [ %21, %9 ], [ %88, %86 ]
  %41 = phi i32 [ 0, %9 ], [ %87, %86 ]
  %42 = phi i32 [ %27, %9 ], [ %94, %86 ]
  br label %43

43:                                               ; preds = %39, %65
  %44 = phi i32 [ %73, %65 ], [ %42, %39 ]
  %45 = phi i32 [ %67, %65 ], [ %40, %39 ]
  %46 = load i32, i32* %35, align 8
  %47 = load i32, i32* %36, align 4
  %48 = icmp sgt i32 %46, %47
  br i1 %48, label %53, label %49

49:                                               ; preds = %43
  %50 = load i64, i64* %37, align 8
  %51 = sext i32 %46 to i64
  %52 = add nsw i64 %50, %51
  br label %58

53:                                               ; preds = %43
  %54 = load %struct.UTextFuncs*, %struct.UTextFuncs** %38, align 8
  %55 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %54, i64 0, i32 10
  %56 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %55, align 8
  %57 = tail call i64 %56(%struct.UText* %19) #8
  br label %58

58:                                               ; preds = %53, %49
  %59 = phi i64 [ %52, %49 ], [ %57, %53 ]
  %60 = trunc i64 %59 to i32
  %61 = icmp slt i32 %60, %2
  %62 = and i32 %44, 65535
  %63 = icmp ult i32 %62, %34
  %64 = and i1 %63, %61
  br i1 %64, label %65, label %74

65:                                               ; preds = %58
  %66 = tail call i32 @utext_next32_69(%struct.UText* %19) #8
  %67 = tail call i32 @utext_current32_69(%struct.UText* %19) #8
  %68 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %69 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %68, i64 0, i32 2
  %70 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %69, align 8
  %71 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %70, i64 0, i32 7
  %72 = load %struct.UCPTrie*, %struct.UCPTrie** %71, align 8
  %73 = tail call i32 @ucptrie_get_69(%struct.UCPTrie* %72, i32 %67) #8
  br label %43

74:                                               ; preds = %58
  br i1 %61, label %75, label %95

75:                                               ; preds = %74
  %76 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %77 = tail call %"class.icu_69::LanguageBreakEngine"* @_ZN6icu_6922RuleBasedBreakIterator22getLanguageBreakEngineEi(%"class.icu_69::RuleBasedBreakIterator"* %76, i32 %45) #8
  %78 = icmp eq %"class.icu_69::LanguageBreakEngine"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.icu_69::LanguageBreakEngine"* %77 to i32 (%"class.icu_69::LanguageBreakEngine"*, %struct.UText*, i32, i32, %"class.icu_69::UVector32"*)***
  %81 = load i32 (%"class.icu_69::LanguageBreakEngine"*, %struct.UText*, i32, i32, %"class.icu_69::UVector32"*)**, i32 (%"class.icu_69::LanguageBreakEngine"*, %struct.UText*, i32, i32, %"class.icu_69::UVector32"*)*** %80, align 8
  %82 = getelementptr inbounds i32 (%"class.icu_69::LanguageBreakEngine"*, %struct.UText*, i32, i32, %"class.icu_69::UVector32"*)*, i32 (%"class.icu_69::LanguageBreakEngine"*, %struct.UText*, i32, i32, %"class.icu_69::UVector32"*)** %81, i64 3
  %83 = load i32 (%"class.icu_69::LanguageBreakEngine"*, %struct.UText*, i32, i32, %"class.icu_69::UVector32"*)*, i32 (%"class.icu_69::LanguageBreakEngine"*, %struct.UText*, i32, i32, %"class.icu_69::UVector32"*)** %82, align 8
  %84 = tail call i32 %83(%"class.icu_69::LanguageBreakEngine"* nonnull %77, %struct.UText* %19, i32 %1, i32 %2, %"class.icu_69::UVector32"* dereferenceable(32) %12) #8
  %85 = add nsw i32 %84, %41
  br label %86

86:                                               ; preds = %75, %79
  %87 = phi i32 [ %85, %79 ], [ %41, %75 ]
  %88 = tail call i32 @utext_current32_69(%struct.UText* %19) #8
  %89 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %90 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %89, i64 0, i32 2
  %91 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %90, align 8
  %92 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %91, i64 0, i32 7
  %93 = load %struct.UCPTrie*, %struct.UCPTrie** %92, align 8
  %94 = tail call i32 @ucptrie_get_69(%struct.UCPTrie* %93, i32 %88) #8
  br label %39

95:                                               ; preds = %74
  %96 = icmp sgt i32 %41, 0
  br i1 %96, label %97, label %157

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = icmp sgt i32 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %103 = load i32*, i32** %102, align 8
  %104 = load i32, i32* %103, align 4
  br label %105

105:                                              ; preds = %97, %101
  %106 = phi i32 [ %104, %101 ], [ 0, %97 ]
  %107 = icmp sgt i32 %106, %1
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  call void @_ZN6icu_699UVector3215insertElementAtEiiR10UErrorCode(%"class.icu_69::UVector32"* %12, i32 %1, i32 0, i32* nonnull dereferenceable(4) %6) #8
  %109 = load i32, i32* %98, align 8
  br label %110

110:                                              ; preds = %108, %105
  %111 = phi i32 [ %109, %108 ], [ %99, %105 ]
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %120

113:                                              ; preds = %110
  %114 = add nsw i32 %111, -1
  %115 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %116 = load i32*, i32** %115, align 8
  %117 = sext i32 %114 to i64
  %118 = getelementptr inbounds i32, i32* %116, i64 %117
  %119 = load i32, i32* %118, align 4
  br label %120

120:                                              ; preds = %110, %113
  %121 = phi i32 [ %119, %113 ], [ 0, %110 ]
  %122 = icmp slt i32 %121, %2
  br i1 %122, label %123, label %142

123:                                              ; preds = %120
  %124 = add nsw i32 %111, 1
  %125 = icmp sgt i32 %111, -2
  br i1 %125, label %126, label %130

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = icmp sgt i32 %128, %111
  br i1 %129, label %134, label %130

130:                                              ; preds = %126, %123
  %131 = call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %12, i32 %124, i32* nonnull dereferenceable(4) %6) #8
  %132 = icmp eq i8 %131, 0
  %133 = load i32, i32* %98, align 8
  br i1 %132, label %142, label %134

134:                                              ; preds = %130, %126
  %135 = phi i32 [ %111, %126 ], [ %133, %130 ]
  %136 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %137 = load i32*, i32** %136, align 8
  %138 = sext i32 %135 to i64
  %139 = getelementptr inbounds i32, i32* %137, i64 %138
  store i32 %2, i32* %139, align 4
  %140 = load i32, i32* %98, align 8
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %98, align 8
  br label %142

142:                                              ; preds = %130, %120, %134
  %143 = phi i32 [ %141, %134 ], [ %111, %120 ], [ %133, %130 ]
  store i32 0, i32* %10, align 8
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  store i32 0, i32* %11, align 4
  br label %154

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 1, i32 4
  %148 = load i32*, i32** %147, align 8
  %149 = load i32, i32* %148, align 4
  store i32 %149, i32* %11, align 4
  %150 = add nsw i32 %143, -1
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i32, i32* %148, i64 %151
  %153 = load i32, i32* %152, align 4
  br label %154

154:                                              ; preds = %145, %146
  %155 = phi i32 [ %153, %146 ], [ 0, %145 ]
  %156 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %0, i64 0, i32 4
  store i32 %155, i32* %156, align 8
  br label %157

157:                                              ; preds = %95, %154
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  br label %158

158:                                              ; preds = %5, %157
  ret void
}

declare void @utext_setNativeIndex_69(%struct.UText*, i64) local_unnamed_addr #1

declare i32 @utext_current32_69(%struct.UText*) local_unnamed_addr #1

declare i32 @ucptrie_get_69(%struct.UCPTrie*, i32) local_unnamed_addr #1

declare i32 @utext_next32_69(%struct.UText*) local_unnamed_addr #1

declare %"class.icu_69::LanguageBreakEngine"* @_ZN6icu_6922RuleBasedBreakIterator22getLanguageBreakEngineEi(%"class.icu_69::RuleBasedBreakIterator"*, i32) local_unnamed_addr #1

declare void @_ZN6icu_699UVector3215insertElementAtEiiR10UErrorCode(%"class.icu_69::UVector32"*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCacheC2EPS0_R10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIterator10BreakCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  store %"class.icu_69::RuleBasedBreakIterator"* %1, %"class.icu_69::RuleBasedBreakIterator"** %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8
  tail call void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"* %6, i32* dereferenceable(4) %2) #8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 0
  store i16 0, i16* %8, align 8
  %9 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache5resetEii(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* nocapture, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 0
  store i32 %1, i32* %8, align 8
  %9 = trunc i32 %2 to i16
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 0
  store i16 %9, i16* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCacheD2Ev(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIterator10BreakCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8
  tail call void @_ZN6icu_699UVector32D1Ev(%"class.icu_69::UVector32"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCacheD0Ev(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIterator10BreakCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8
  tail call void @_ZN6icu_699UVector32D1Ev(%"class.icu_69::UVector32"* %3) #8
  %4 = bitcast %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache7currentEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %5 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %5, i64 0, i32 3
  store i32 %3, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %9
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %4, align 8
  %14 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %13, i64 0, i32 4
  store i32 %12, i32* %14, align 4
  %15 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %4, align 8
  %16 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %15, i64 0, i32 12
  store i8 0, i8* %16, align 8
  %17 = load i32, i32* %2, align 8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache9followingEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %105

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %65, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %62, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, %1
  br i1 %23, label %62, label %24

24:                                               ; preds = %17
  %25 = icmp eq i32 %15, %1
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %12, i32* %27, align 4
  %28 = load i32, i32* %14, align 4
  store i32 %28, i32* %7, align 8
  br label %65

29:                                               ; preds = %24
  %30 = icmp eq i32 %22, %1
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = icmp eq i32 %12, %19
  br i1 %32, label %54, label %36

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %19, i32* %34, align 4
  %35 = load i32, i32* %21, align 4
  store i32 %35, i32* %7, align 8
  br label %65

36:                                               ; preds = %31, %36
  %37 = phi i32 [ %52, %36 ], [ %19, %31 ]
  %38 = phi i32 [ %51, %36 ], [ %12, %31 ]
  %39 = add nsw i32 %38, %37
  %40 = icmp sgt i32 %38, %37
  %41 = select i1 %40, i32 128, i32 0
  %42 = add nsw i32 %39, %41
  %43 = sdiv i32 %42, 2
  %44 = and i32 %43, 127
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, %1
  %49 = add nsw i32 %43, 1
  %50 = and i32 %49, 127
  %51 = select i1 %48, i32 %38, i32 %50
  %52 = select i1 %48, i32 %44, i32 %37
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %54, label %36

54:                                               ; preds = %36, %31
  %55 = phi i32 [ %12, %31 ], [ %51, %36 ]
  %56 = add i32 %55, 127
  %57 = and i32 %56, 127
  %58 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %57, i32* %58, align 4
  %59 = zext i32 %57 to i64
  %60 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %59
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %7, align 8
  br label %65

62:                                               ; preds = %17, %10
  %63 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache12populateNearEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i32 %1, i32* dereferenceable(4) %2)
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %105, label %65

65:                                               ; preds = %54, %33, %26, %62, %6
  %66 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %67 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %66, align 8
  %68 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %67, i64 0, i32 12
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %74, label %90

74:                                               ; preds = %65
  %75 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populateFollowingEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0) #8
  %76 = icmp eq i8 %75, 0
  %77 = zext i1 %76 to i8
  %78 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %66, align 8
  %79 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %78, i64 0, i32 12
  store i8 %77, i8* %79, align 8
  %80 = load i32, i32* %7, align 8
  %81 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %66, align 8
  %82 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %81, i64 0, i32 3
  store i32 %80, i32* %82, align 8
  %83 = load i32, i32* %69, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %84
  %86 = load i16, i16* %85, align 2
  %87 = zext i16 %86 to i32
  %88 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %66, align 8
  %89 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %88, i64 0, i32 4
  store i32 %87, i32* %89, align 4
  br label %105

90:                                               ; preds = %65
  %91 = add nsw i32 %70, 1
  %92 = and i32 %91, 127
  store i32 %92, i32* %69, align 4
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %66, align 8
  %97 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %96, i64 0, i32 3
  store i32 %95, i32* %97, align 8
  store i32 %95, i32* %7, align 8
  %98 = load i32, i32* %69, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %99
  %101 = load i16, i16* %100, align 2
  %102 = zext i16 %101 to i32
  %103 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %66, align 8
  %104 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %103, i64 0, i32 4
  store i32 %102, i32* %104, align 4
  br label %105

105:                                              ; preds = %90, %74, %62, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache4seekEi(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %5
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %57, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, %1
  br i1 %15, label %57, label %16

16:                                               ; preds = %9
  %17 = icmp eq i32 %7, %1
  br i1 %17, label %18, label %22

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %4, i32* %19, align 4
  %20 = load i32, i32* %6, align 4
  %21 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %20, i32* %21, align 8
  br label %57

22:                                               ; preds = %16
  %23 = icmp eq i32 %14, %1
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = icmp eq i32 %4, %11
  br i1 %25, label %48, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %11, i32* %27, align 4
  %28 = load i32, i32* %13, align 4
  %29 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %28, i32* %29, align 8
  br label %57

30:                                               ; preds = %24, %30
  %31 = phi i32 [ %46, %30 ], [ %11, %24 ]
  %32 = phi i32 [ %45, %30 ], [ %4, %24 ]
  %33 = add nsw i32 %31, %32
  %34 = icmp sgt i32 %32, %31
  %35 = select i1 %34, i32 128, i32 0
  %36 = add nsw i32 %33, %35
  %37 = sdiv i32 %36, 2
  %38 = and i32 %37, 127
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, %1
  %43 = add nsw i32 %37, 1
  %44 = and i32 %43, 127
  %45 = select i1 %42, i32 %32, i32 %44
  %46 = select i1 %42, i32 %38, i32 %31
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %30

48:                                               ; preds = %30, %24
  %49 = phi i32 [ %4, %24 ], [ %45, %30 ]
  %50 = add i32 %49, 127
  %51 = and i32 %50, 127
  %52 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %51, i32* %52, align 4
  %53 = zext i32 %51 to i64
  %54 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %55, i32* %56, align 8
  br label %57

57:                                               ; preds = %2, %9, %48, %26, %18
  %58 = phi i8 [ 1, %18 ], [ 1, %26 ], [ 1, %48 ], [ 0, %9 ], [ 0, %2 ]
  ret i8 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache12populateNearEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %210

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, -15
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %22, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, 15
  %21 = icmp slt i32 %20, %1
  br i1 %21, label %22, label %62

22:                                               ; preds = %14, %6
  %23 = icmp sgt i32 %1, 20
  br i1 %23, label %24, label %54

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %26 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %27 = tail call i32 @_ZN6icu_6922RuleBasedBreakIterator18handleSafePreviousEi(%"class.icu_69::RuleBasedBreakIterator"* %26, i32 %1) #8
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %54

29:                                               ; preds = %24
  %30 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %31 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %30, i64 0, i32 3
  store i32 %27, i32* %31, align 8
  %32 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %33 = tail call i32 @_ZN6icu_6922RuleBasedBreakIterator10handleNextEv(%"class.icu_69::RuleBasedBreakIterator"* %32) #8
  %34 = add nuw nsw i32 %27, 4
  %35 = icmp sgt i32 %33, %34
  br i1 %35, label %48, label %36

36:                                               ; preds = %29
  %37 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %38 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %37, i64 0, i32 1
  %39 = sext i32 %33 to i64
  tail call void @utext_setNativeIndex_69(%struct.UText* %38, i64 %39) #8
  %40 = sext i32 %27 to i64
  %41 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %42 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %41, i64 0, i32 1
  %43 = tail call i64 @utext_getPreviousNativeIndex_69(%struct.UText* %42) #8
  %44 = icmp eq i64 %43, %40
  br i1 %44, label %45, label %48

45:                                               ; preds = %36
  %46 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %47 = tail call i32 @_ZN6icu_6922RuleBasedBreakIterator10handleNextEv(%"class.icu_69::RuleBasedBreakIterator"* %46) #8
  br label %48

48:                                               ; preds = %29, %36, %45
  %49 = phi i32 [ %47, %45 ], [ %33, %36 ], [ %33, %29 ]
  %50 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %51 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %50, i64 0, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = trunc i32 %52 to i16
  br label %54

54:                                               ; preds = %24, %48, %22
  %55 = phi i32 [ 0, %22 ], [ %49, %48 ], [ 0, %24 ]
  %56 = phi i16 [ 0, %22 ], [ %53, %48 ], [ 0, %24 ]
  store i32 0, i32* %7, align 8
  %57 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %55, i32* %58, align 8
  %59 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 0
  store i32 %55, i32* %60, align 8
  %61 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 0
  store i16 %56, i16* %61, align 8
  br label %62

62:                                               ; preds = %54, %14
  %63 = phi i32 [ %55, %54 ], [ %11, %14 ]
  %64 = phi i32 [ %55, %54 ], [ %19, %14 ]
  %65 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %66 = icmp slt i32 %64, %1
  br i1 %66, label %67, label %123

67:                                               ; preds = %62, %70
  %68 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populateFollowingEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0)
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %67
  %71 = load i32, i32* %65, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, %1
  br i1 %75, label %67, label %77

76:                                               ; preds = %67
  tail call void @abort() #9
  unreachable

77:                                               ; preds = %70
  %78 = sext i32 %71 to i64
  %79 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %78
  %80 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %71, i32* %80, align 4
  %81 = load i32, i32* %79, align 4
  %82 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %81, i32* %82, align 8
  %83 = icmp sgt i32 %81, %1
  br i1 %83, label %84, label %210

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  br label %86

86:                                               ; preds = %84, %120
  %87 = phi i32 [ %81, %84 ], [ %121, %120 ]
  %88 = load i32, i32* %2, align 4
  %89 = icmp slt i32 %88, 1
  br i1 %89, label %90, label %120

90:                                               ; preds = %86
  %91 = load i32, i32* %80, align 4
  %92 = load i32, i32* %7, align 8
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  %95 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populatePrecedingER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i32* dereferenceable(4) %2) #8
  %96 = load i32, i32* %80, align 4
  br label %103

97:                                               ; preds = %90
  %98 = add i32 %91, 127
  %99 = and i32 %98, 127
  store i32 %99, i32* %80, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %100
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %82, align 8
  br label %103

103:                                              ; preds = %97, %94
  %104 = phi i32 [ %99, %97 ], [ %96, %94 ]
  %105 = icmp eq i32 %104, %91
  %106 = zext i1 %105 to i8
  %107 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %85, align 8
  %108 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %107, i64 0, i32 12
  store i8 %106, i8* %108, align 8
  %109 = load i32, i32* %82, align 8
  %110 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %85, align 8
  %111 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %110, i64 0, i32 3
  store i32 %109, i32* %111, align 8
  %112 = load i32, i32* %80, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %85, align 8
  %118 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %117, i64 0, i32 4
  store i32 %116, i32* %118, align 4
  %119 = load i32, i32* %82, align 8
  br label %120

120:                                              ; preds = %86, %103
  %121 = phi i32 [ %87, %86 ], [ %119, %103 ]
  %122 = icmp sgt i32 %121, %1
  br i1 %122, label %86, label %210

123:                                              ; preds = %62
  %124 = icmp sgt i32 %63, %1
  br i1 %124, label %125, label %210

125:                                              ; preds = %123, %125
  %126 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populatePrecedingER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i32* dereferenceable(4) %2)
  %127 = load i32, i32* %7, align 8
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = icmp sgt i32 %130, %1
  br i1 %131, label %125, label %132

132:                                              ; preds = %125
  %133 = sext i32 %127 to i64
  %134 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %133
  %135 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %127, i32* %135, align 4
  %136 = load i32, i32* %134, align 4
  %137 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %136, i32* %137, align 8
  %138 = icmp slt i32 %136, %1
  br i1 %138, label %139, label %174

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  br label %141

141:                                              ; preds = %172, %139
  %142 = phi i32 [ %173, %172 ], [ %127, %139 ]
  %143 = load i32, i32* %65, align 4
  %144 = icmp eq i32 %142, %143
  br i1 %144, label %145, label %154

145:                                              ; preds = %141
  %146 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populateFollowingEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0) #8
  %147 = icmp eq i8 %146, 0
  %148 = zext i1 %147 to i8
  %149 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %140, align 8
  %150 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %149, i64 0, i32 12
  store i8 %148, i8* %150, align 8
  %151 = load i32, i32* %137, align 8
  %152 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %140, align 8
  %153 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %152, i64 0, i32 3
  store i32 %151, i32* %153, align 8
  br label %162

154:                                              ; preds = %141
  %155 = add nsw i32 %142, 1
  %156 = and i32 %155, 127
  store i32 %156, i32* %135, align 4
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %140, align 8
  %161 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %160, i64 0, i32 3
  store i32 %159, i32* %161, align 8
  store i32 %159, i32* %137, align 8
  br label %162

162:                                              ; preds = %145, %154
  %163 = load i32, i32* %135, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %164
  %166 = load i16, i16* %165, align 2
  %167 = zext i16 %166 to i32
  %168 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %140, align 8
  %169 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %168, i64 0, i32 4
  store i32 %167, i32* %169, align 4
  %170 = load i32, i32* %137, align 8
  %171 = icmp slt i32 %170, %1
  br i1 %171, label %172, label %174

172:                                              ; preds = %162
  %173 = load i32, i32* %135, align 4
  br label %141

174:                                              ; preds = %162, %132
  %175 = phi i32 [ %136, %132 ], [ %170, %162 ]
  %176 = icmp sgt i32 %175, %1
  %177 = load i32, i32* %2, align 4
  %178 = icmp slt i32 %177, 1
  %179 = and i1 %176, %178
  br i1 %179, label %180, label %210

180:                                              ; preds = %174
  %181 = load i32, i32* %135, align 4
  %182 = load i32, i32* %7, align 8
  %183 = icmp eq i32 %181, %182
  br i1 %183, label %184, label %187

184:                                              ; preds = %180
  %185 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populatePrecedingER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i32* dereferenceable(4) %2) #8
  %186 = load i32, i32* %135, align 4
  br label %193

187:                                              ; preds = %180
  %188 = add i32 %181, 127
  %189 = and i32 %188, 127
  store i32 %189, i32* %135, align 4
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %190
  %192 = load i32, i32* %191, align 4
  store i32 %192, i32* %137, align 8
  br label %193

193:                                              ; preds = %187, %184
  %194 = phi i32 [ %189, %187 ], [ %186, %184 ]
  %195 = icmp eq i32 %194, %181
  %196 = zext i1 %195 to i8
  %197 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %198 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %197, align 8
  %199 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %198, i64 0, i32 12
  store i8 %196, i8* %199, align 8
  %200 = load i32, i32* %137, align 8
  %201 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %197, align 8
  %202 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %201, i64 0, i32 3
  store i32 %200, i32* %202, align 8
  %203 = load i32, i32* %135, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %204
  %206 = load i16, i16* %205, align 2
  %207 = zext i16 %206 to i32
  %208 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %197, align 8
  %209 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %208, i64 0, i32 4
  store i32 %207, i32* %209, align 4
  br label %210

210:                                              ; preds = %120, %77, %193, %123, %174, %3
  %211 = phi i8 [ 0, %3 ], [ 1, %174 ], [ 1, %123 ], [ 1, %193 ], [ 1, %77 ], [ 1, %120 ]
  ret i8 %211
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache9precedingEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %119

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %70, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %62, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, %1
  br i1 %23, label %62, label %24

24:                                               ; preds = %17
  %25 = icmp eq i32 %15, %1
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %12, i32* %27, align 4
  %28 = load i32, i32* %14, align 4
  store i32 %28, i32* %7, align 8
  br label %67

29:                                               ; preds = %24
  %30 = icmp eq i32 %22, %1
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = icmp eq i32 %12, %19
  br i1 %32, label %54, label %36

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %19, i32* %34, align 4
  %35 = load i32, i32* %21, align 4
  store i32 %35, i32* %7, align 8
  br label %67

36:                                               ; preds = %31, %36
  %37 = phi i32 [ %52, %36 ], [ %19, %31 ]
  %38 = phi i32 [ %51, %36 ], [ %12, %31 ]
  %39 = add nsw i32 %38, %37
  %40 = icmp sgt i32 %38, %37
  %41 = select i1 %40, i32 128, i32 0
  %42 = add nsw i32 %39, %41
  %43 = sdiv i32 %42, 2
  %44 = and i32 %43, 127
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, %1
  %49 = add nsw i32 %43, 1
  %50 = and i32 %49, 127
  %51 = select i1 %48, i32 %38, i32 %50
  %52 = select i1 %48, i32 %44, i32 %37
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %54, label %36

54:                                               ; preds = %36, %31
  %55 = phi i32 [ %12, %31 ], [ %51, %36 ]
  %56 = add i32 %55, 127
  %57 = and i32 %56, 127
  %58 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %57, i32* %58, align 4
  %59 = zext i32 %57 to i64
  %60 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %59
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %7, align 8
  br label %67

62:                                               ; preds = %17, %10
  %63 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache12populateNearEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i32 %1, i32* dereferenceable(4) %2)
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %119, label %65

65:                                               ; preds = %62
  %66 = load i32, i32* %7, align 8
  br label %67

67:                                               ; preds = %65, %54, %33, %26
  %68 = phi i32 [ %66, %65 ], [ %61, %54 ], [ %35, %33 ], [ %28, %26 ]
  %69 = icmp eq i32 %68, %1
  br i1 %69, label %70, label %105

70:                                               ; preds = %6, %67
  %71 = load i32, i32* %2, align 4
  %72 = icmp slt i32 %71, 1
  br i1 %72, label %73, label %119

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %82

79:                                               ; preds = %73
  %80 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populatePrecedingER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i32* dereferenceable(4) %2) #8
  %81 = load i32, i32* %74, align 4
  br label %88

82:                                               ; preds = %73
  %83 = add i32 %75, 127
  %84 = and i32 %83, 127
  store i32 %84, i32* %74, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %85
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %7, align 8
  br label %88

88:                                               ; preds = %82, %79
  %89 = phi i32 [ %84, %82 ], [ %81, %79 ]
  %90 = icmp eq i32 %89, %75
  %91 = zext i1 %90 to i8
  %92 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %93 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %92, align 8
  %94 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %93, i64 0, i32 12
  store i8 %91, i8* %94, align 8
  %95 = load i32, i32* %7, align 8
  %96 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %92, align 8
  %97 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %96, i64 0, i32 3
  store i32 %95, i32* %97, align 8
  %98 = load i32, i32* %74, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %99
  %101 = load i16, i16* %100, align 2
  %102 = zext i16 %101 to i32
  %103 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %92, align 8
  %104 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %103, i64 0, i32 4
  store i32 %102, i32* %104, align 4
  br label %119

105:                                              ; preds = %67
  %106 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %107 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %106, align 8
  %108 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %107, i64 0, i32 3
  store i32 %68, i32* %108, align 8
  %109 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i32
  %115 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %106, align 8
  %116 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %115, i64 0, i32 4
  store i32 %114, i32* %116, align 4
  %117 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %106, align 8
  %118 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %117, i64 0, i32 12
  store i8 0, i8* %118, align 8
  br label %119

119:                                              ; preds = %88, %70, %62, %3, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache8previousER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %39

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populatePrecedingER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i32* dereferenceable(4) %1)
  %13 = load i32, i32* %6, align 4
  br label %21

14:                                               ; preds = %5
  %15 = add i32 %7, 127
  %16 = and i32 %15, 127
  store i32 %16, i32* %6, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %19, i32* %20, align 8
  br label %21

21:                                               ; preds = %14, %11
  %22 = phi i32 [ %16, %14 ], [ %13, %11 ]
  %23 = icmp eq i32 %22, %7
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %26 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %27 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %26, i64 0, i32 12
  store i8 %24, i8* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %31 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %30, i64 0, i32 3
  store i32 %29, i32* %31, align 8
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %25, align 8
  %38 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %37, i64 0, i32 4
  store i32 %36, i32* %38, align 4
  br label %39

39:                                               ; preds = %2, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache6nextOLEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*) local_unnamed_addr #0 align 2 {
  %2 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populateFollowingEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0)
  %3 = icmp eq i8 %2, 0
  %4 = zext i1 %3 to i8
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %6 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %6, i64 0, i32 12
  store i8 %4, i8* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %5, align 8
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %10, i64 0, i32 3
  store i32 %9, i32* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %5, align 8
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %18, i64 0, i32 4
  store i32 %17, i32* %19, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populateFollowingEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %4
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %4
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i32
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %11 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %11, i64 0, i32 6
  %13 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %12, align 8
  %14 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, %6
  br i1 %16, label %17, label %21

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %13, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, %6
  br i1 %20, label %21, label %23

21:                                               ; preds = %17, %1
  %22 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %13, i64 0, i32 2
  br label %88

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %13, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %25, -1
  %27 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %13, i64 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %25, %28
  %30 = and i1 %26, %29
  br i1 %30, label %31, label %52

31:                                               ; preds = %23
  %32 = icmp sgt i32 %28, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %13, i64 0, i32 1, i32 4
  %35 = load i32*, i32** %34, align 8
  %36 = sext i32 %25 to i64
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %33, %31
  %40 = phi i32 [ %38, %33 ], [ 0, %31 ]
  %41 = icmp eq i32 %40, %6
  br i1 %41, label %42, label %52

42:                                               ; preds = %39
  %43 = add nuw nsw i32 %25, 1
  store i32 %43, i32* %24, align 8
  %44 = icmp slt i32 %43, %28
  br i1 %44, label %45, label %88

45:                                               ; preds = %42
  br i1 %32, label %46, label %68

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %13, i64 0, i32 1, i32 4
  %48 = load i32*, i32** %47, align 8
  %49 = sext i32 %43 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %49
  %51 = load i32, i32* %50, align 4
  br label %68

52:                                               ; preds = %39, %23
  store i32 0, i32* %24, align 8
  %53 = icmp sgt i32 %28, 0
  br i1 %53, label %54, label %67

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %13, i64 0, i32 1, i32 4
  %56 = sext i32 %28 to i64
  %57 = load i32*, i32** %55, align 8
  br label %61

58:                                               ; preds = %61
  %59 = trunc i64 %66 to i32
  store i32 %59, i32* %24, align 8
  %60 = icmp eq i64 %66, %56
  br i1 %60, label %67, label %61

61:                                               ; preds = %58, %54
  %62 = phi i64 [ 0, %54 ], [ %66, %58 ]
  %63 = getelementptr inbounds i32, i32* %57, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, %6
  %66 = add nuw nsw i64 %62, 1
  br i1 %65, label %68, label %58

67:                                               ; preds = %58, %52
  tail call void @abort() #9
  unreachable

68:                                               ; preds = %61, %45, %46
  %69 = phi i32 [ %51, %46 ], [ 0, %45 ], [ %64, %61 ]
  %70 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %13, i64 0, i32 6
  %71 = load i32, i32* %70, align 8
  %72 = load i32, i32* %2, align 4
  %73 = add nsw i32 %72, 1
  %74 = and i32 %73, 127
  %75 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %78, label %81

78:                                               ; preds = %68
  %79 = add i32 %72, 7
  %80 = and i32 %79, 127
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %68, %78
  %82 = zext i32 %74 to i64
  %83 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %82
  store i32 %69, i32* %83, align 4
  %84 = trunc i32 %71 to i16
  %85 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %82
  store i16 %84, i16* %85, align 2
  store i32 %74, i32* %2, align 4
  %86 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %74, i32* %86, align 4
  %87 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %69, i32* %87, align 8
  br label %230

88:                                               ; preds = %42, %21
  %89 = phi i32* [ %22, %21 ], [ %24, %42 ]
  store i32 -1, i32* %89, align 8
  %90 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %10, align 8
  %91 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %90, i64 0, i32 3
  store i32 %6, i32* %91, align 8
  %92 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %10, align 8
  %93 = tail call i32 @_ZN6icu_6922RuleBasedBreakIterator10handleNextEv(%"class.icu_69::RuleBasedBreakIterator"* %92) #8
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %230, label %95

95:                                               ; preds = %88
  %96 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %10, align 8
  %97 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %96, i64 0, i32 4
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %96, i64 0, i32 9
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %184, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %96, i64 0, i32 6
  %104 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %103, align 8
  tail call void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache18populateDictionaryEiiii(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %104, i32 %6, i32 %93, i32 %9, i32 %98)
  %105 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %10, align 8
  %106 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %105, i64 0, i32 6
  %107 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %106, align 8
  %108 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %107, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp sgt i32 %109, %6
  br i1 %110, label %111, label %115

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %107, i64 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = icmp sgt i32 %113, %6
  br i1 %114, label %115, label %117

115:                                              ; preds = %111, %102
  %116 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %107, i64 0, i32 2
  br label %182

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %107, i64 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = icmp sgt i32 %119, -1
  %121 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %107, i64 0, i32 1, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = icmp slt i32 %119, %122
  %124 = and i1 %120, %123
  br i1 %124, label %125, label %146

125:                                              ; preds = %117
  %126 = icmp sgt i32 %122, 0
  br i1 %126, label %127, label %133

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %107, i64 0, i32 1, i32 4
  %129 = load i32*, i32** %128, align 8
  %130 = sext i32 %119 to i64
  %131 = getelementptr inbounds i32, i32* %129, i64 %130
  %132 = load i32, i32* %131, align 4
  br label %133

133:                                              ; preds = %127, %125
  %134 = phi i32 [ %132, %127 ], [ 0, %125 ]
  %135 = icmp eq i32 %134, %6
  br i1 %135, label %136, label %146

136:                                              ; preds = %133
  %137 = add nuw nsw i32 %119, 1
  store i32 %137, i32* %118, align 8
  %138 = icmp slt i32 %137, %122
  br i1 %138, label %139, label %182

139:                                              ; preds = %136
  br i1 %126, label %140, label %162

140:                                              ; preds = %139
  %141 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %107, i64 0, i32 1, i32 4
  %142 = load i32*, i32** %141, align 8
  %143 = sext i32 %137 to i64
  %144 = getelementptr inbounds i32, i32* %142, i64 %143
  %145 = load i32, i32* %144, align 4
  br label %162

146:                                              ; preds = %133, %117
  store i32 0, i32* %118, align 8
  %147 = icmp sgt i32 %122, 0
  br i1 %147, label %148, label %161

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %107, i64 0, i32 1, i32 4
  %150 = sext i32 %122 to i64
  %151 = load i32*, i32** %149, align 8
  br label %155

152:                                              ; preds = %155
  %153 = trunc i64 %160 to i32
  store i32 %153, i32* %118, align 8
  %154 = icmp eq i64 %160, %150
  br i1 %154, label %161, label %155

155:                                              ; preds = %152, %148
  %156 = phi i64 [ 0, %148 ], [ %160, %152 ]
  %157 = getelementptr inbounds i32, i32* %151, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = icmp sgt i32 %158, %6
  %160 = add nuw nsw i64 %156, 1
  br i1 %159, label %162, label %152

161:                                              ; preds = %152, %146
  tail call void @abort() #9
  unreachable

162:                                              ; preds = %155, %139, %140
  %163 = phi i32 [ %145, %140 ], [ 0, %139 ], [ %158, %155 ]
  %164 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %107, i64 0, i32 6
  %165 = load i32, i32* %164, align 8
  %166 = load i32, i32* %2, align 4
  %167 = add nsw i32 %166, 1
  %168 = and i32 %167, 127
  %169 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %168, %170
  br i1 %171, label %172, label %175

172:                                              ; preds = %162
  %173 = add i32 %166, 7
  %174 = and i32 %173, 127
  store i32 %174, i32* %169, align 8
  br label %175

175:                                              ; preds = %162, %172
  %176 = zext i32 %168 to i64
  %177 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %176
  store i32 %163, i32* %177, align 4
  %178 = trunc i32 %165 to i16
  %179 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %176
  store i16 %178, i16* %179, align 2
  store i32 %168, i32* %2, align 4
  %180 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %168, i32* %180, align 4
  %181 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %163, i32* %181, align 8
  br label %230

182:                                              ; preds = %136, %115
  %183 = phi i32* [ %116, %115 ], [ %118, %136 ]
  store i32 -1, i32* %183, align 8
  br label %184

184:                                              ; preds = %182, %95
  %185 = load i32, i32* %2, align 4
  %186 = add nsw i32 %185, 1
  %187 = and i32 %186, 127
  %188 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %189 = load i32, i32* %188, align 8
  %190 = icmp eq i32 %187, %189
  br i1 %190, label %191, label %194

191:                                              ; preds = %184
  %192 = add i32 %185, 7
  %193 = and i32 %192, 127
  store i32 %193, i32* %188, align 8
  br label %194

194:                                              ; preds = %184, %191
  %195 = zext i32 %187 to i64
  %196 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %195
  store i32 %93, i32* %196, align 4
  %197 = trunc i32 %98 to i16
  %198 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %195
  store i16 %197, i16* %198, align 2
  store i32 %187, i32* %2, align 4
  %199 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %187, i32* %199, align 4
  %200 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %93, i32* %200, align 8
  %201 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %10, align 8
  br label %202

202:                                              ; preds = %223, %194
  %203 = phi %"class.icu_69::RuleBasedBreakIterator"* [ %201, %194 ], [ %208, %223 ]
  %204 = phi i32 [ 0, %194 ], [ %228, %223 ]
  %205 = tail call i32 @_ZN6icu_6922RuleBasedBreakIterator10handleNextEv(%"class.icu_69::RuleBasedBreakIterator"* %203) #8
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %230, label %207

207:                                              ; preds = %202
  %208 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %10, align 8
  %209 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %208, i64 0, i32 9
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %230

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %208, i64 0, i32 4
  %214 = load i32, i32* %213, align 4
  %215 = load i32, i32* %2, align 4
  %216 = add nsw i32 %215, 1
  %217 = and i32 %216, 127
  %218 = load i32, i32* %188, align 8
  %219 = icmp eq i32 %217, %218
  br i1 %219, label %220, label %223

220:                                              ; preds = %212
  %221 = add i32 %215, 7
  %222 = and i32 %221, 127
  store i32 %222, i32* %188, align 8
  br label %223

223:                                              ; preds = %212, %220
  %224 = zext i32 %217 to i64
  %225 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %224
  store i32 %205, i32* %225, align 4
  %226 = trunc i32 %214 to i16
  %227 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %224
  store i16 %226, i16* %227, align 2
  store i32 %217, i32* %2, align 4
  %228 = add nuw nsw i32 %204, 1
  %229 = icmp eq i32 %228, 6
  br i1 %229, label %230, label %202

230:                                              ; preds = %207, %202, %223, %88, %175, %81
  %231 = phi i8 [ 1, %81 ], [ 1, %175 ], [ 0, %88 ], [ 1, %223 ], [ 1, %202 ], [ 1, %207 ]
  ret i8 %231
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache17populatePrecedingER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %396

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %396, label %14

14:                                               ; preds = %7
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  store i32 0, i32* %3, align 4
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 0, i32* %4, align 4
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 1
  %18 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %18, i64 0, i32 6
  %20 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %19, align 8
  %21 = call signext i8 @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache9precedingEiPiS2_(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %20, i32 %12, i32* nonnull %3, i32* nonnull %4)
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %14
  %24 = load i32, i32* %3, align 4
  %25 = load i32, i32* %4, align 4
  %26 = load i32, i32* %8, align 8
  %27 = add i32 %26, 127
  %28 = and i32 %27, 127
  %29 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = add i32 %26, 126
  %34 = and i32 %33, 127
  store i32 %34, i32* %29, align 4
  br label %35

35:                                               ; preds = %23, %32
  %36 = zext i32 %28 to i64
  %37 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %36
  store i32 %24, i32* %37, align 4
  %38 = trunc i32 %25 to i16
  %39 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %36
  store i16 %38, i16* %39, align 2
  store i32 %28, i32* %8, align 8
  %40 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %28, i32* %40, align 4
  %41 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %24, i32* %41, align 8
  br label %394

42:                                               ; preds = %14, %75
  %43 = phi i32 [ %77, %75 ], [ %12, %14 ]
  %44 = add nsw i32 %43, -30
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %75, label %46

46:                                               ; preds = %42
  %47 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %48 = tail call i32 @_ZN6icu_6922RuleBasedBreakIterator18handleSafePreviousEi(%"class.icu_69::RuleBasedBreakIterator"* %47, i32 %44) #8
  %49 = add i32 %48, 1
  %50 = icmp ult i32 %49, 2
  br i1 %50, label %75, label %51

51:                                               ; preds = %46
  %52 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %53 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %52, i64 0, i32 3
  store i32 %48, i32* %53, align 8
  %54 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %55 = tail call i32 @_ZN6icu_6922RuleBasedBreakIterator10handleNextEv(%"class.icu_69::RuleBasedBreakIterator"* %54) #8
  %56 = add nsw i32 %48, 4
  %57 = icmp sgt i32 %55, %56
  br i1 %57, label %70, label %58

58:                                               ; preds = %51
  %59 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %60 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %59, i64 0, i32 1
  %61 = sext i32 %55 to i64
  tail call void @utext_setNativeIndex_69(%struct.UText* %60, i64 %61) #8
  %62 = sext i32 %48 to i64
  %63 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %64 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %63, i64 0, i32 1
  %65 = tail call i64 @utext_getPreviousNativeIndex_69(%struct.UText* %64) #8
  %66 = icmp eq i64 %65, %62
  br i1 %66, label %67, label %70

67:                                               ; preds = %58
  %68 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %69 = tail call i32 @_ZN6icu_6922RuleBasedBreakIterator10handleNextEv(%"class.icu_69::RuleBasedBreakIterator"* %68) #8
  br label %70

70:                                               ; preds = %51, %58, %67
  %71 = phi i32 [ %55, %51 ], [ %55, %58 ], [ %69, %67 ]
  %72 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %73 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %72, i64 0, i32 4
  %74 = load i32, i32* %73, align 4
  br label %75

75:                                               ; preds = %46, %42, %70
  %76 = phi i32 [ %71, %70 ], [ 0, %42 ], [ 0, %46 ]
  %77 = phi i32 [ %48, %70 ], [ 0, %42 ], [ %48, %46 ]
  %78 = phi i32 [ %74, %70 ], [ 0, %42 ], [ 0, %46 ]
  %79 = icmp slt i32 %76, %12
  br i1 %79, label %80, label %42

80:                                               ; preds = %75
  store i32 %76, i32* %3, align 4
  store i32 %78, i32* %4, align 4
  %81 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8
  tail call void @_ZN6icu_699UVector3217removeAllElementsEv(%"class.icu_69::UVector32"* %81) #8
  %82 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, 1
  %85 = icmp sgt i32 %83, -2
  br i1 %85, label %86, label %90

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = icmp sgt i32 %88, %83
  br i1 %89, label %94, label %90

90:                                               ; preds = %86, %80
  %91 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %81, i32 %84, i32* dereferenceable(4) %1) #8
  %92 = icmp eq i8 %91, 0
  %93 = load i32, i32* %82, align 8
  br i1 %92, label %102, label %94

94:                                               ; preds = %90, %86
  %95 = phi i32 [ %83, %86 ], [ %93, %90 ]
  %96 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8, i32 4
  %97 = load i32*, i32** %96, align 8
  %98 = sext i32 %95 to i64
  %99 = getelementptr inbounds i32, i32* %97, i64 %98
  store i32 %76, i32* %99, align 4
  %100 = load i32, i32* %82, align 8
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %82, align 8
  br label %102

102:                                              ; preds = %90, %94
  %103 = phi i32 [ %101, %94 ], [ %93, %90 ]
  %104 = add nsw i32 %103, 1
  %105 = icmp sgt i32 %103, -2
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp sgt i32 %108, %103
  br i1 %109, label %115, label %110

110:                                              ; preds = %106, %102
  %111 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %81, i32 %104, i32* dereferenceable(4) %1) #8
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %110
  %114 = load i32, i32* %82, align 8
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %103, %106 ]
  %117 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8, i32 4
  %118 = load i32*, i32** %117, align 8
  %119 = sext i32 %116 to i64
  %120 = getelementptr inbounds i32, i32* %118, i64 %119
  store i32 %78, i32* %120, align 4
  %121 = load i32, i32* %82, align 8
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %82, align 8
  br label %123

123:                                              ; preds = %110, %115
  %124 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8, i32 2
  %125 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 8, i32 4
  br label %126

126:                                              ; preds = %306, %123
  %127 = phi i32 [ %307, %306 ], [ %76, %123 ]
  %128 = phi i32 [ %308, %306 ], [ %78, %123 ]
  %129 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %130 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %129, i64 0, i32 3
  store i32 %127, i32* %130, align 8
  %131 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %132 = tail call i32 @_ZN6icu_6922RuleBasedBreakIterator10handleNextEv(%"class.icu_69::RuleBasedBreakIterator"* %131) #8
  %133 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %134 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %133, i64 0, i32 4
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %132, -1
  br i1 %136, label %310, label %137

137:                                              ; preds = %126
  %138 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %133, i64 0, i32 9
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %265, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %133, i64 0, i32 6
  %143 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %142, align 8
  tail call void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache18populateDictionaryEiiii(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %143, i32 %127, i32 %132, i32 %128, i32 %135)
  %144 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %145 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %144, i64 0, i32 6
  %146 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %145, align 8
  %147 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %146, i64 0, i32 4
  %148 = load i32, i32* %147, align 8
  %149 = icmp sgt i32 %148, %127
  br i1 %149, label %150, label %159

150:                                              ; preds = %141, %252
  %151 = phi i32 [ %213, %252 ], [ %135, %141 ]
  %152 = phi i32 [ %211, %252 ], [ %132, %141 ]
  %153 = phi %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* [ %255, %252 ], [ %146, %141 ]
  %154 = phi i8 [ 1, %252 ], [ 0, %141 ]
  %155 = phi i32 [ %211, %252 ], [ %127, %141 ]
  %156 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %153, i64 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = icmp sgt i32 %157, %155
  br i1 %158, label %159, label %165

159:                                              ; preds = %252, %150, %141
  %160 = phi i32 [ %132, %141 ], [ %152, %150 ], [ %211, %252 ]
  %161 = phi i32 [ %135, %141 ], [ %151, %150 ], [ %213, %252 ]
  %162 = phi i8 [ 0, %141 ], [ %154, %150 ], [ 1, %252 ]
  %163 = phi %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* [ %146, %141 ], [ %153, %150 ], [ %255, %252 ]
  %164 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %163, i64 0, i32 2
  br label %259

165:                                              ; preds = %150
  %166 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %153, i64 0, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = icmp sgt i32 %167, -1
  %169 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %153, i64 0, i32 1, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp slt i32 %167, %170
  %172 = and i1 %168, %171
  br i1 %172, label %173, label %194

173:                                              ; preds = %165
  %174 = icmp sgt i32 %170, 0
  br i1 %174, label %175, label %181

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %153, i64 0, i32 1, i32 4
  %177 = load i32*, i32** %176, align 8
  %178 = sext i32 %167 to i64
  %179 = getelementptr inbounds i32, i32* %177, i64 %178
  %180 = load i32, i32* %179, align 4
  br label %181

181:                                              ; preds = %175, %173
  %182 = phi i32 [ %180, %175 ], [ 0, %173 ]
  %183 = icmp eq i32 %182, %155
  br i1 %183, label %184, label %194

184:                                              ; preds = %181
  %185 = add nuw nsw i32 %167, 1
  store i32 %185, i32* %166, align 8
  %186 = icmp slt i32 %185, %170
  br i1 %186, label %187, label %259

187:                                              ; preds = %184
  br i1 %174, label %188, label %210

188:                                              ; preds = %187
  %189 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %153, i64 0, i32 1, i32 4
  %190 = load i32*, i32** %189, align 8
  %191 = sext i32 %185 to i64
  %192 = getelementptr inbounds i32, i32* %190, i64 %191
  %193 = load i32, i32* %192, align 4
  br label %210

194:                                              ; preds = %181, %165
  store i32 0, i32* %166, align 8
  %195 = icmp sgt i32 %170, 0
  br i1 %195, label %196, label %209

196:                                              ; preds = %194
  %197 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %153, i64 0, i32 1, i32 4
  %198 = sext i32 %170 to i64
  %199 = load i32*, i32** %197, align 8
  br label %203

200:                                              ; preds = %203
  %201 = trunc i64 %208 to i32
  store i32 %201, i32* %166, align 8
  %202 = icmp eq i64 %208, %198
  br i1 %202, label %209, label %203

203:                                              ; preds = %200, %196
  %204 = phi i64 [ 0, %196 ], [ %208, %200 ]
  %205 = getelementptr inbounds i32, i32* %199, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = icmp sgt i32 %206, %155
  %208 = add nuw nsw i64 %204, 1
  br i1 %207, label %210, label %200

209:                                              ; preds = %194, %200
  store i32 %132, i32* %3, align 4
  tail call void @abort() #9
  unreachable

210:                                              ; preds = %203, %187, %188
  %211 = phi i32 [ %193, %188 ], [ 0, %187 ], [ %206, %203 ]
  %212 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %153, i64 0, i32 6
  %213 = load i32, i32* %212, align 8
  %214 = icmp slt i32 %211, %12
  br i1 %214, label %215, label %306

215:                                              ; preds = %210
  %216 = load i32, i32* %82, align 8
  %217 = add nsw i32 %216, 1
  %218 = icmp sgt i32 %216, -2
  br i1 %218, label %219, label %222

219:                                              ; preds = %215
  %220 = load i32, i32* %124, align 4
  %221 = icmp sgt i32 %220, %216
  br i1 %221, label %226, label %222

222:                                              ; preds = %219, %215
  %223 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %81, i32 %217, i32* dereferenceable(4) %1) #8
  %224 = icmp eq i8 %223, 0
  %225 = load i32, i32* %82, align 8
  br i1 %224, label %233, label %226

226:                                              ; preds = %222, %219
  %227 = phi i32 [ %216, %219 ], [ %225, %222 ]
  %228 = load i32*, i32** %125, align 8
  %229 = sext i32 %227 to i64
  %230 = getelementptr inbounds i32, i32* %228, i64 %229
  store i32 %211, i32* %230, align 4
  %231 = load i32, i32* %82, align 8
  %232 = add nsw i32 %231, 1
  store i32 %232, i32* %82, align 8
  br label %233

233:                                              ; preds = %222, %226
  %234 = phi i32 [ %232, %226 ], [ %225, %222 ]
  %235 = add nsw i32 %234, 1
  %236 = icmp sgt i32 %234, -2
  br i1 %236, label %237, label %240

237:                                              ; preds = %233
  %238 = load i32, i32* %124, align 4
  %239 = icmp sgt i32 %238, %234
  br i1 %239, label %245, label %240

240:                                              ; preds = %237, %233
  %241 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %81, i32 %235, i32* dereferenceable(4) %1) #8
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %252, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %82, align 8
  br label %245

245:                                              ; preds = %243, %237
  %246 = phi i32 [ %244, %243 ], [ %234, %237 ]
  %247 = load i32*, i32** %125, align 8
  %248 = sext i32 %246 to i64
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  store i32 %213, i32* %249, align 4
  %250 = load i32, i32* %82, align 8
  %251 = add nsw i32 %250, 1
  store i32 %251, i32* %82, align 8
  br label %252

252:                                              ; preds = %240, %245
  %253 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %17, align 8
  %254 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %253, i64 0, i32 6
  %255 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %254, align 8
  %256 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::DictionaryCache", %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %255, i64 0, i32 4
  %257 = load i32, i32* %256, align 8
  %258 = icmp sgt i32 %257, %211
  br i1 %258, label %150, label %159

259:                                              ; preds = %184, %159
  %260 = phi i32* [ %164, %159 ], [ %166, %184 ]
  %261 = phi i32 [ %160, %159 ], [ %152, %184 ]
  %262 = phi i32 [ %161, %159 ], [ %151, %184 ]
  %263 = phi i8 [ %162, %159 ], [ %154, %184 ]
  store i32 -1, i32* %260, align 8
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %265, label %306

265:                                              ; preds = %137, %259
  %266 = phi i32 [ %132, %137 ], [ %261, %259 ]
  %267 = phi i32 [ %135, %137 ], [ %262, %259 ]
  %268 = icmp slt i32 %266, %12
  br i1 %268, label %269, label %306

269:                                              ; preds = %265
  %270 = load i32, i32* %82, align 8
  %271 = add nsw i32 %270, 1
  %272 = icmp sgt i32 %270, -2
  br i1 %272, label %273, label %276

273:                                              ; preds = %269
  %274 = load i32, i32* %124, align 4
  %275 = icmp sgt i32 %274, %270
  br i1 %275, label %280, label %276

276:                                              ; preds = %273, %269
  %277 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %81, i32 %271, i32* dereferenceable(4) %1) #8
  %278 = icmp eq i8 %277, 0
  %279 = load i32, i32* %82, align 8
  br i1 %278, label %287, label %280

280:                                              ; preds = %276, %273
  %281 = phi i32 [ %270, %273 ], [ %279, %276 ]
  %282 = load i32*, i32** %125, align 8
  %283 = sext i32 %281 to i64
  %284 = getelementptr inbounds i32, i32* %282, i64 %283
  store i32 %266, i32* %284, align 4
  %285 = load i32, i32* %82, align 8
  %286 = add nsw i32 %285, 1
  store i32 %286, i32* %82, align 8
  br label %287

287:                                              ; preds = %276, %280
  %288 = phi i32 [ %286, %280 ], [ %279, %276 ]
  %289 = add nsw i32 %288, 1
  %290 = icmp sgt i32 %288, -2
  br i1 %290, label %291, label %294

291:                                              ; preds = %287
  %292 = load i32, i32* %124, align 4
  %293 = icmp sgt i32 %292, %288
  br i1 %293, label %299, label %294

294:                                              ; preds = %291, %287
  %295 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %81, i32 %289, i32* dereferenceable(4) %1) #8
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %306, label %297

297:                                              ; preds = %294
  %298 = load i32, i32* %82, align 8
  br label %299

299:                                              ; preds = %297, %291
  %300 = phi i32 [ %298, %297 ], [ %288, %291 ]
  %301 = load i32*, i32** %125, align 8
  %302 = sext i32 %300 to i64
  %303 = getelementptr inbounds i32, i32* %301, i64 %302
  store i32 %267, i32* %303, align 4
  %304 = load i32, i32* %82, align 8
  %305 = add nsw i32 %304, 1
  store i32 %305, i32* %82, align 8
  br label %306

306:                                              ; preds = %210, %299, %294, %259, %265
  %307 = phi i32 [ %266, %299 ], [ %266, %294 ], [ %261, %259 ], [ %266, %265 ], [ %211, %210 ]
  %308 = phi i32 [ %267, %299 ], [ %267, %294 ], [ %262, %259 ], [ %267, %265 ], [ %213, %210 ]
  %309 = icmp slt i32 %307, %12
  br i1 %309, label %126, label %310

310:                                              ; preds = %126, %306
  %311 = phi i32 [ %132, %126 ], [ %307, %306 ]
  %312 = phi i32 [ %135, %126 ], [ %308, %306 ]
  store i32 %311, i32* %3, align 4
  store i32 %312, i32* %4, align 4
  %313 = load i32, i32* %82, align 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %394, label %315

315:                                              ; preds = %310
  %316 = icmp sgt i32 %313, 0
  br i1 %316, label %318, label %317

317:                                              ; preds = %315
  store i32 0, i32* %4, align 4
  br label %331

318:                                              ; preds = %315
  %319 = add nsw i32 %313, -1
  store i32 %319, i32* %82, align 8
  %320 = load i32*, i32** %125, align 8
  %321 = sext i32 %319 to i64
  %322 = getelementptr inbounds i32, i32* %320, i64 %321
  %323 = load i32, i32* %322, align 4
  store i32 %323, i32* %4, align 4
  %324 = icmp sgt i32 %319, 0
  br i1 %324, label %325, label %331

325:                                              ; preds = %318
  %326 = add nsw i32 %313, -2
  store i32 %326, i32* %82, align 8
  %327 = load i32*, i32** %125, align 8
  %328 = sext i32 %326 to i64
  %329 = getelementptr inbounds i32, i32* %327, i64 %328
  %330 = load i32, i32* %329, align 4
  br label %331

331:                                              ; preds = %317, %318, %325
  %332 = phi i32 [ %323, %325 ], [ %323, %318 ], [ 0, %317 ]
  %333 = phi i32 [ %330, %325 ], [ 0, %318 ], [ 0, %317 ]
  store i32 %333, i32* %3, align 4
  %334 = load i32, i32* %8, align 8
  %335 = add i32 %334, 127
  %336 = and i32 %335, 127
  %337 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %338 = load i32, i32* %337, align 4
  %339 = icmp eq i32 %336, %338
  br i1 %339, label %340, label %343

340:                                              ; preds = %331
  %341 = add i32 %334, 126
  %342 = and i32 %341, 127
  store i32 %342, i32* %337, align 4
  br label %343

343:                                              ; preds = %340, %331
  %344 = zext i32 %336 to i64
  %345 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %344
  store i32 %333, i32* %345, align 4
  %346 = trunc i32 %332 to i16
  %347 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %344
  store i16 %346, i16* %347, align 2
  store i32 %336, i32* %8, align 8
  %348 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %336, i32* %348, align 4
  %349 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %333, i32* %349, align 8
  %350 = load i32, i32* %82, align 8
  %351 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  %352 = icmp eq i32 %350, 0
  br i1 %352, label %394, label %353

353:                                              ; preds = %343
  %354 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  br label %355

355:                                              ; preds = %353, %385
  %356 = phi i32 [ %350, %353 ], [ %390, %385 ]
  %357 = icmp sgt i32 %356, 0
  br i1 %357, label %358, label %371

358:                                              ; preds = %355
  %359 = add nsw i32 %356, -1
  store i32 %359, i32* %82, align 8
  %360 = load i32*, i32** %125, align 8
  %361 = sext i32 %359 to i64
  %362 = getelementptr inbounds i32, i32* %360, i64 %361
  %363 = load i32, i32* %362, align 4
  %364 = icmp sgt i32 %359, 0
  br i1 %364, label %365, label %371

365:                                              ; preds = %358
  %366 = add nsw i32 %356, -2
  store i32 %366, i32* %82, align 8
  %367 = load i32*, i32** %125, align 8
  %368 = sext i32 %366 to i64
  %369 = getelementptr inbounds i32, i32* %367, i64 %368
  %370 = load i32, i32* %369, align 4
  br label %371

371:                                              ; preds = %355, %358, %365
  %372 = phi i32 [ %363, %365 ], [ %363, %358 ], [ 0, %355 ]
  %373 = phi i32 [ %370, %365 ], [ 0, %358 ], [ 0, %355 ]
  %374 = load i32, i32* %8, align 8
  %375 = add i32 %374, 127
  %376 = and i32 %375, 127
  %377 = load i32, i32* %354, align 4
  %378 = icmp eq i32 %376, %377
  br i1 %378, label %379, label %385

379:                                              ; preds = %371
  %380 = load i32, i32* %351, align 4
  %381 = icmp eq i32 %380, %376
  br i1 %381, label %392, label %382

382:                                              ; preds = %379
  %383 = add i32 %374, 126
  %384 = and i32 %383, 127
  store i32 %384, i32* %354, align 4
  br label %385

385:                                              ; preds = %371, %382
  %386 = zext i32 %376 to i64
  %387 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %386
  store i32 %373, i32* %387, align 4
  %388 = trunc i32 %372 to i16
  %389 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %386
  store i16 %388, i16* %389, align 2
  store i32 %376, i32* %8, align 8
  %390 = load i32, i32* %82, align 8
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %393, label %355

392:                                              ; preds = %379
  store i32 %372, i32* %4, align 4
  store i32 %373, i32* %3, align 4
  br label %394

393:                                              ; preds = %385
  store i32 %372, i32* %4, align 4
  store i32 %373, i32* %3, align 4
  br label %394

394:                                              ; preds = %310, %343, %392, %393, %35
  %395 = phi i8 [ 1, %35 ], [ 1, %393 ], [ 1, %392 ], [ 1, %343 ], [ 0, %310 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  br label %396

396:                                              ; preds = %394, %7, %2
  %397 = phi i8 [ 0, %2 ], [ %395, %394 ], [ 0, %7 ]
  ret i8 %397
}

declare i32 @_ZN6icu_6922RuleBasedBreakIterator18handleSafePreviousEi(%"class.icu_69::RuleBasedBreakIterator"*, i32) local_unnamed_addr #1

declare i32 @_ZN6icu_6922RuleBasedBreakIterator10handleNextEv(%"class.icu_69::RuleBasedBreakIterator"*) local_unnamed_addr #1

declare i64 @utext_getPreviousNativeIndex_69(%struct.UText*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache12addFollowingEiiNS1_20UpdatePositionValuesE(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* nocapture, i32, i32, i32) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  %8 = and i32 %7, 127
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %4
  %13 = add i32 %6, 7
  %14 = and i32 %13, 127
  store i32 %14, i32* %9, align 8
  br label %15

15:                                               ; preds = %12, %4
  %16 = zext i32 %8 to i64
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %16
  store i32 %1, i32* %17, align 4
  %18 = trunc i32 %2 to i16
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %16
  store i16 %18, i16* %19, align 2
  store i32 %8, i32* %5, align 4
  %20 = icmp eq i32 %3, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %8, i32* %22, align 4
  %23 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %1, i32* %23, align 8
  br label %24

24:                                               ; preds = %15, %21
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache12addPrecedingEiiNS1_20UpdatePositionValuesE(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* nocapture, i32, i32, i32) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 127
  %8 = and i32 %7, 127
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %21

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %8
  %16 = icmp eq i32 %3, 0
  %17 = and i1 %16, %15
  br i1 %17, label %30, label %18

18:                                               ; preds = %12
  %19 = add i32 %6, 126
  %20 = and i32 %19, 127
  store i32 %20, i32* %9, align 4
  br label %21

21:                                               ; preds = %18, %4
  %22 = zext i32 %8 to i64
  %23 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 6, i64 %22
  store i32 %1, i32* %23, align 4
  %24 = trunc i32 %2 to i16
  %25 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 7, i64 %22
  store i16 %24, i16* %25, align 2
  store i32 %8, i32* %5, align 8
  %26 = icmp eq i32 %3, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 5
  store i32 %8, i32* %28, align 4
  %29 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %0, i64 0, i32 4
  store i32 %1, i32* %29, align 8
  br label %30

30:                                               ; preds = %21, %27, %12
  %31 = phi i1 [ false, %12 ], [ true, %27 ], [ true, %21 ]
  ret i1 %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache9dumpCacheEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* nocapture) local_unnamed_addr #7 align 2 {
  ret void
}

declare signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
