; ModuleID = '../../third_party/blink/renderer/core/css/parser/sizes_attribute_parser.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/sizes_attribute_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::Vector.23" = type { %"class.WTF::VectorBuffer.24" }
%"class.WTF::VectorBuffer.24" = type { %"class.WTF::VectorBufferBase.25" }
%"class.WTF::VectorBufferBase.25" = type { %"struct.blink::SizesMathValue"*, i32, i32 }
%"struct.blink::SizesMathValue" = type { double, i8, i32 }
%"class.blink::MediaValues" = type { i32 (...)** }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.blink::SizesAttributeParser" = type <{ %class.scoped_refptr, %"class.blink::MediaValues"*, %"class.blink::ExecutionContext"*, float, i8, i8, [2 x i8] }>
%class.scoped_refptr = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted", %"class.WTF::Vector" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.2", %"class.WTF::String" }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExecutionContext" = type opaque
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10", [768 x i8] }
%"class.WTF::VectorBufferBase.10" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.13", %"class.WTF::Vector.18", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr.0 }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15", [32 x i8] }
%"class.WTF::VectorBufferBase.15" = type { i32*, i32, i32 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member", i8, [7 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::MediaValues"* }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.WTF::Vector.30" = type opaque
%"class.blink::SizesMathFunctionParser" = type { %"class.WTF::Vector.23", %"class.blink::MediaValues"*, i8, float }

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

@__const._ZN5blink20SizesAttributeParser23CalculateLengthInPixelsENS_19CSSParserTokenRangeERf.calc_parser = private unnamed_addr constant { %"class.WTF::Vector.23", %"class.blink::MediaValues"*, i8, [3 x i8], float } { %"class.WTF::Vector.23" { %"class.WTF::VectorBuffer.24" { %"class.WTF::VectorBufferBase.25" { %"struct.blink::SizesMathValue"* inttoptr (i64 -6148914691236517206 to %"struct.blink::SizesMathValue"*), i32 -1431655766, i32 -1431655766 } } }, %"class.blink::MediaValues"* inttoptr (i64 -6148914691236517206 to %"class.blink::MediaValues"*), i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000 }, align 8
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8

@_ZN5blink20SizesAttributeParserC1EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::SizesAttributeParser"*, %"class.blink::MediaValues"*, %"class.WTF::String"*, %"class.blink::ExecutionContext"*), void (%"class.blink::SizesAttributeParser"*, %"class.blink::MediaValues"*, %"class.WTF::String"*, %"class.blink::ExecutionContext"*)* @_ZN5blink20SizesAttributeParserC2EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SizesAttributeParserC2EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.blink::SizesAttributeParser"* nocapture, %"class.blink::MediaValues"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.8", align 8
  %6 = alloca %"class.blink::CSSTokenizer", align 8
  %7 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 0, i32 0
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 1
  store %"class.blink::MediaValues"* %1, %"class.blink::MediaValues"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 2
  store %"class.blink::ExecutionContext"* %3, %"class.blink::ExecutionContext"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %10, align 8
  %11 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 4
  store i8 0, i8* %11, align 4
  %12 = bitcast %"class.WTF::Vector.8"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %12) #6
  %13 = bitcast %"class.blink::CSSTokenizer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %13) #6
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %2, i32 0) #6
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.8"* nonnull sret %5, %"class.blink::CSSTokenizer"* nonnull %6) #6
  %14 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %5, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %15, i64 %18
  %20 = call zeroext i1 @_ZN5blink20SizesAttributeParser5ParseENS_19CSSParserTokenRangeE(%"class.blink::SizesAttributeParser"* %0, %"class.blink::CSSParserToken"* %15, %"class.blink::CSSParserToken"* %19)
  %21 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 5
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 1
  %23 = load i32, i32* %16, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !2

25:                                               ; preds = %4
  store i32 0, i32* %16, align 4
  br label %26

26:                                               ; preds = %25, %4
  %27 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %28 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %5, i64 0, i32 0, i32 1, i64 0
  %29 = bitcast i8* %28 to %"class.blink::CSSParserToken"*
  %30 = icmp eq %"class.blink::CSSParserToken"* %27, %29
  br i1 %30, label %33, label %31, !prof !3

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.9"* nonnull %32, %"class.blink::CSSParserToken"* %27) #6
  br label %33

33:                                               ; preds = %26, %31
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %14, align 8
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %12) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20SizesAttributeParser5ParseENS_19CSSParserTokenRangeE(%"class.blink::SizesAttributeParser"* nocapture, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::MediaQueryEvaluator", align 8
  %5 = alloca %"class.blink::CSSParserTokenRange", align 8
  %6 = alloca float, align 4
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %8, align 8
  %9 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %10 = bitcast float* %6 to i8*
  %11 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::MediaQueryEvaluator"* %4 to i8*
  %13 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 1
  %14 = bitcast float* %6 to i32*
  %15 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 3
  %16 = bitcast float* %15 to i32*
  %17 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 4
  %18 = icmp eq %"class.blink::CSSParserToken"* %1, %2
  br i1 %18, label %126, label %19

19:                                               ; preds = %3, %122
  %20 = phi %"class.blink::CSSParserToken"* [ %123, %122 ], [ %1, %3 ]
  %21 = phi %"class.blink::CSSParserToken"* [ %124, %122 ], [ %2, %3 ]
  %22 = icmp ult %"class.blink::CSSParserToken"* %20, %21
  %23 = select i1 %22, %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"* %9
  %24 = icmp ult %"class.blink::CSSParserToken"* %20, %21
  %25 = select i1 %24, %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"* %9
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 63
  %29 = icmp eq i32 %28, 22
  br i1 %29, label %59, label %37

30:                                               ; preds = %56
  %31 = icmp ult %"class.blink::CSSParserToken"* %57, %40
  %32 = select i1 %31, %"class.blink::CSSParserToken"* %57, %"class.blink::CSSParserToken"* %9
  %33 = bitcast %"class.blink::CSSParserToken"* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 63
  %36 = icmp eq i32 %35, 22
  br i1 %36, label %59, label %37

37:                                               ; preds = %19, %30
  %38 = phi %"class.blink::CSSParserToken"* [ %32, %30 ], [ %25, %19 ]
  call void @_ZN5blink19CSSParserTokenRange21ConsumeComponentValueEv(%"class.blink::CSSParserTokenRange"* nonnull %5) #6
  %39 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %40 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %41 = icmp ult %"class.blink::CSSParserToken"* %39, %40
  %42 = select i1 %41, %"class.blink::CSSParserToken"* %39, %"class.blink::CSSParserToken"* %9
  %43 = bitcast %"class.blink::CSSParserToken"* %42 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 63
  %46 = icmp eq i32 %45, 17
  br i1 %46, label %47, label %56

47:                                               ; preds = %37, %47
  %48 = phi %"class.blink::CSSParserToken"* [ %49, %47 ], [ %39, %37 ]
  %49 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %48, i64 1
  store %"class.blink::CSSParserToken"* %49, %"class.blink::CSSParserToken"** %7, align 8
  %50 = icmp ult %"class.blink::CSSParserToken"* %49, %40
  %51 = select i1 %50, %"class.blink::CSSParserToken"* %49, %"class.blink::CSSParserToken"* %9
  %52 = bitcast %"class.blink::CSSParserToken"* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 63
  %55 = icmp eq i32 %54, 17
  br i1 %55, label %47, label %56

56:                                               ; preds = %47, %37
  %57 = phi %"class.blink::CSSParserToken"* [ %39, %37 ], [ %49, %47 ]
  %58 = icmp eq %"class.blink::CSSParserToken"* %57, %40
  br i1 %58, label %64, label %30

59:                                               ; preds = %30, %19
  %60 = phi %"class.blink::CSSParserToken"* [ %20, %19 ], [ %57, %30 ]
  %61 = phi %"class.blink::CSSParserToken"* [ %23, %19 ], [ %38, %30 ]
  %62 = phi %"class.blink::CSSParserToken"* [ %23, %19 ], [ %42, %30 ]
  %63 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %60, i64 1
  store %"class.blink::CSSParserToken"* %63, %"class.blink::CSSParserToken"** %7, align 8
  br label %64

64:                                               ; preds = %56, %59
  %65 = phi %"class.blink::CSSParserToken"* [ %62, %59 ], [ %42, %56 ]
  %66 = phi %"class.blink::CSSParserToken"* [ %61, %59 ], [ %38, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #6
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %67 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZNK5blink19CSSParserTokenRange12MakeSubRangeEPKNS_14CSSParserTokenES3_(%"class.blink::CSSParserTokenRange"* nonnull %5, %"class.blink::CSSParserToken"* %66, %"class.blink::CSSParserToken"* %65) #6
  %68 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %67, 0
  %69 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %67, 1
  %70 = call zeroext i1 @_ZN5blink20SizesAttributeParser23CalculateLengthInPixelsENS_19CSSParserTokenRangeERf(%"class.blink::SizesAttributeParser"* %0, %"class.blink::CSSParserToken"* %68, %"class.blink::CSSParserToken"* %69, float* nonnull dereferenceable(4) %6)
  br i1 %70, label %71, label %119

71:                                               ; preds = %64
  %72 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZNK5blink19CSSParserTokenRange12MakeSubRangeEPKNS_14CSSParserTokenES3_(%"class.blink::CSSParserTokenRange"* nonnull %5, %"class.blink::CSSParserToken"* %23, %"class.blink::CSSParserToken"* %66) #6
  %73 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %72, 0
  %74 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %72, 1
  %75 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %11, align 8
  %76 = call %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser19ParseMediaConditionENS_19CSSParserTokenRangeEPKNS_16ExecutionContextE(%"class.blink::CSSParserToken"* %73, %"class.blink::CSSParserToken"* %74, %"class.blink::ExecutionContext"* %75) #6
  %77 = icmp eq %"class.blink::MediaQuerySet"* %76, null
  br i1 %77, label %119, label %78

78:                                               ; preds = %71
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #6
  %79 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %13, align 8
  call void @_ZN5blink19MediaQueryEvaluatorC1ERKNS_11MediaValuesE(%"class.blink::MediaQueryEvaluator"* nonnull %4, %"class.blink::MediaValues"* dereferenceable(8) %79) #6
  %80 = call zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"* nonnull %4, %"class.blink::MediaQuerySet"* nonnull dereferenceable(24) %76, %"class.WTF::Vector.30"* null, %"class.WTF::Vector.30"* null) #6
  call void @_ZN5blink19MediaQueryEvaluatorD1Ev(%"class.blink::MediaQueryEvaluator"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = load i32, i32* %14, align 4
  store i32 %82, i32* %16, align 8
  store i8 1, i8* %17, align 4
  br label %83

83:                                               ; preds = %78, %81
  %84 = phi i32 [ 2, %78 ], [ 1, %81 ]
  %85 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %76, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #6
  %86 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %120

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %76, i64 0, i32 1
  %91 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %91, align 8
  %93 = icmp eq %"class.std::__1::unique_ptr"* %92, null
  br i1 %93, label %117, label %94, !prof !3

94:                                               ; preds = %89
  %95 = bitcast %"class.std::__1::unique_ptr"* %92 to i8*
  %96 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %76, i64 0, i32 1, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %115, label %99, !prof !2

99:                                               ; preds = %94
  %100 = zext i32 %97 to i64
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 %100
  br label %102

102:                                              ; preds = %109, %99
  %103 = phi %"class.std::__1::unique_ptr"* [ %110, %109 ], [ %92, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %104, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %104, align 8
  %106 = icmp eq %"class.blink::MediaQuery"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %105) #6
  %108 = bitcast %"class.blink::MediaQuery"* %105 to i8*
  call void @free(i8* %108) #6
  br label %109

109:                                              ; preds = %107, %102
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 1
  %111 = icmp eq %"class.std::__1::unique_ptr"* %110, %101
  br i1 %111, label %112, label %102

112:                                              ; preds = %109
  store i32 0, i32* %96, align 4
  %113 = bitcast %"class.WTF::Vector"* %90 to i8**
  %114 = load i8*, i8** %113, align 8
  br label %115

115:                                              ; preds = %112, %94
  %116 = phi i8* [ %114, %112 ], [ %95, %94 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %116) #6
  br label %117

117:                                              ; preds = %89, %115
  %118 = bitcast %"class.blink::MediaQuerySet"* %76 to i8*
  call void @free(i8* %118) #6
  br label %120

119:                                              ; preds = %64, %71
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #6
  br label %122

120:                                              ; preds = %117, %83
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #6
  %121 = icmp eq i32 %84, 2
  br i1 %121, label %122, label %126

122:                                              ; preds = %119, %120
  %123 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %124 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %125 = icmp eq %"class.blink::CSSParserToken"* %123, %124
  br i1 %125, label %126, label %19

126:                                              ; preds = %120, %122, %3
  %127 = phi i1 [ false, %3 ], [ true, %120 ], [ false, %122 ]
  ret i1 %127
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.8"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #6
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.18"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #6
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !2

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.14"* %53, i32* %48) #6
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #6
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink20SizesAttributeParser6lengthEv(%"class.blink::SizesAttributeParser"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 3
  %11 = load float, float* %10, align 8
  br label %38

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 1
  %14 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %13, align 8
  %15 = bitcast %"class.blink::MediaValues"* %14 to double (%"class.blink::MediaValues"*)***
  %16 = load double (%"class.blink::MediaValues"*)**, double (%"class.blink::MediaValues"*)*** %15, align 8
  %17 = getelementptr inbounds double (%"class.blink::MediaValues"*)*, double (%"class.blink::MediaValues"*)** %16, i64 6
  %18 = load double (%"class.blink::MediaValues"*)*, double (%"class.blink::MediaValues"*)** %17, align 8
  %19 = tail call double %18(%"class.blink::MediaValues"* %14) #6
  %20 = fcmp ult double %19, 0x47EFFFFFE0000000
  br i1 %20, label %21, label %38

21:                                               ; preds = %12
  %22 = fcmp ole double %19, 0xC7EFFFFFE0000000
  %23 = select i1 %22, double 0xC7EFFFFFE0000000, double %19
  %24 = fptrunc double %23 to float
  br label %38

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 1
  %27 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %26, align 8
  %28 = bitcast %"class.blink::MediaValues"* %27 to double (%"class.blink::MediaValues"*)***
  %29 = load double (%"class.blink::MediaValues"*)**, double (%"class.blink::MediaValues"*)*** %28, align 8
  %30 = getelementptr inbounds double (%"class.blink::MediaValues"*)*, double (%"class.blink::MediaValues"*)** %29, i64 6
  %31 = load double (%"class.blink::MediaValues"*)*, double (%"class.blink::MediaValues"*)** %30, align 8
  %32 = tail call double %31(%"class.blink::MediaValues"* %27) #6
  %33 = fcmp ult double %32, 0x47EFFFFFE0000000
  br i1 %33, label %34, label %38

34:                                               ; preds = %25
  %35 = fcmp ole double %32, 0xC7EFFFFFE0000000
  %36 = select i1 %35, double 0xC7EFFFFFE0000000, double %32
  %37 = fptrunc double %36 to float
  br label %38

38:                                               ; preds = %34, %25, %21, %12, %9
  %39 = phi float [ %11, %9 ], [ %24, %21 ], [ 0x47EFFFFFE0000000, %12 ], [ %37, %34 ], [ 0x47EFFFFFE0000000, %25 ]
  ret float %39
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink20SizesAttributeParser13EffectiveSizeEv(%"class.blink::SizesAttributeParser"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 3
  %7 = load float, float* %6, align 8
  br label %21

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 1
  %10 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %9, align 8
  %11 = bitcast %"class.blink::MediaValues"* %10 to double (%"class.blink::MediaValues"*)***
  %12 = load double (%"class.blink::MediaValues"*)**, double (%"class.blink::MediaValues"*)*** %11, align 8
  %13 = getelementptr inbounds double (%"class.blink::MediaValues"*)*, double (%"class.blink::MediaValues"*)** %12, i64 6
  %14 = load double (%"class.blink::MediaValues"*)*, double (%"class.blink::MediaValues"*)** %13, align 8
  %15 = tail call double %14(%"class.blink::MediaValues"* %10) #6
  %16 = fcmp ult double %15, 0x47EFFFFFE0000000
  br i1 %16, label %17, label %21

17:                                               ; preds = %8
  %18 = fcmp ole double %15, 0xC7EFFFFFE0000000
  %19 = select i1 %18, double 0xC7EFFFFFE0000000, double %15
  %20 = fptrunc double %19 to float
  br label %21

21:                                               ; preds = %17, %8, %5
  %22 = phi float [ %7, %5 ], [ %20, %17 ], [ 0x47EFFFFFE0000000, %8 ]
  ret float %22
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink20SizesAttributeParser25EffectiveSizeDefaultValueEv(%"class.blink::SizesAttributeParser"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 1
  %3 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %2, align 8
  %4 = bitcast %"class.blink::MediaValues"* %3 to double (%"class.blink::MediaValues"*)***
  %5 = load double (%"class.blink::MediaValues"*)**, double (%"class.blink::MediaValues"*)*** %4, align 8
  %6 = getelementptr inbounds double (%"class.blink::MediaValues"*)*, double (%"class.blink::MediaValues"*)** %5, i64 6
  %7 = load double (%"class.blink::MediaValues"*)*, double (%"class.blink::MediaValues"*)** %6, align 8
  %8 = tail call double %7(%"class.blink::MediaValues"* %3) #6
  %9 = fcmp ult double %8, 0x47EFFFFFE0000000
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = fcmp ole double %8, 0xC7EFFFFFE0000000
  %12 = select i1 %11, double 0xC7EFFFFFE0000000, double %8
  %13 = fptrunc double %12 to float
  br label %14

14:                                               ; preds = %1, %10
  %15 = phi float [ %13, %10 ], [ 0x47EFFFFFE0000000, %1 ]
  ret float %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20SizesAttributeParser23CalculateLengthInPixelsENS_19CSSParserTokenRangeERf(%"class.blink::SizesAttributeParser"* nocapture readonly, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, float* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca double, align 8
  %6 = alloca %"class.blink::SizesMathFunctionParser", align 8
  %7 = icmp ult %"class.blink::CSSParserToken"* %1, %2
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %9 = select i1 %7, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %8
  %10 = bitcast %"class.blink::CSSParserToken"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 63
  switch i32 %12, label %74 [
    i32 9, label %13
    i32 1, label %48
    i32 7, label %70
  ]

13:                                               ; preds = %4
  %14 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %15 = load i32, i32* %10, align 8
  %16 = lshr i32 %15, 11
  %17 = and i32 %16, 127
  %18 = add nsw i32 %17, -3
  %19 = icmp ult i32 %18, 16
  %20 = icmp eq i32 %17, 32
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %45

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 1
  %24 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %23, align 8
  %25 = tail call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %9) #6
  %26 = load i32, i32* %10, align 8
  %27 = lshr i32 %26, 11
  %28 = and i32 %27, 127
  %29 = bitcast %"class.blink::MediaValues"* %24 to i1 (%"class.blink::MediaValues"*, double, i32, double*)***
  %30 = load i1 (%"class.blink::MediaValues"*, double, i32, double*)**, i1 (%"class.blink::MediaValues"*, double, i32, double*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::MediaValues"*, double, i32, double*)*, i1 (%"class.blink::MediaValues"*, double, i32, double*)** %30, i64 5
  %32 = load i1 (%"class.blink::MediaValues"*, double, i32, double*)*, i1 (%"class.blink::MediaValues"*, double, i32, double*)** %31, align 8
  %33 = call zeroext i1 %32(%"class.blink::MediaValues"* %24, double %25, i32 %28, double* nonnull dereferenceable(8) %5) #6
  %34 = load double, double* %5, align 8
  %35 = fcmp oge double %34, 0.000000e+00
  %36 = and i1 %33, %35
  br i1 %36, label %37, label %47

37:                                               ; preds = %22
  %38 = fcmp ult double %34, 0x47EFFFFFE0000000
  br i1 %38, label %39, label %43

39:                                               ; preds = %37
  %40 = fcmp ole double %34, 0xC7EFFFFFE0000000
  %41 = select i1 %40, double 0xC7EFFFFFE0000000, double %34
  %42 = fptrunc double %41 to float
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi float [ %42, %39 ], [ 0x47EFFFFFE0000000, %37 ]
  store float %44, float* %3, align 4
  br label %45

45:                                               ; preds = %43, %13
  %46 = phi i1 [ false, %13 ], [ true, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  br label %74

47:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  br label %74

48:                                               ; preds = %4
  %49 = bitcast %"class.blink::SizesMathFunctionParser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* align 8 bitcast ({ %"class.WTF::Vector.23", %"class.blink::MediaValues"*, i8, [3 x i8], float }* @__const._ZN5blink20SizesAttributeParser23CalculateLengthInPixelsENS_19CSSParserTokenRangeERf.calc_parser to i8*), i64 32, i1 false)
  %50 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 1
  %51 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %50, align 8
  call void @_ZN5blink23SizesMathFunctionParserC1ENS_19CSSParserTokenRangeEPNS_11MediaValuesE(%"class.blink::SizesMathFunctionParser"* nonnull %6, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %2, %"class.blink::MediaValues"* %51) #6
  %52 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %6, i64 0, i32 2
  %53 = load i8, i8* %52, align 8, !range !4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %48
  %56 = call float @_ZNK5blink23SizesMathFunctionParser6ResultEv(%"class.blink::SizesMathFunctionParser"* nonnull %6) #6
  store float %56, float* %3, align 4
  br label %57

57:                                               ; preds = %48, %55
  %58 = phi i1 [ true, %55 ], [ false, %48 ]
  %59 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %59, align 8
  %61 = icmp eq %"struct.blink::SizesMathValue"* %60, null
  %62 = bitcast %"struct.blink::SizesMathValue"* %60 to i8*
  br i1 %61, label %69, label %63, !prof !3

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !2

67:                                               ; preds = %63
  store i32 0, i32* %64, align 4
  br label %68

68:                                               ; preds = %67, %63
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %62) #6
  store %"struct.blink::SizesMathValue"* null, %"struct.blink::SizesMathValue"** %59, align 8
  br label %69

69:                                               ; preds = %57, %68
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #6
  br label %74

70:                                               ; preds = %4
  %71 = tail call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %9) #6
  %72 = fcmp une double %71, 0.000000e+00
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  store float 0.000000e+00, float* %3, align 4
  br label %74

74:                                               ; preds = %70, %4, %47, %45, %73, %69
  %75 = phi i1 [ %58, %69 ], [ true, %73 ], [ %46, %45 ], [ false, %47 ], [ false, %4 ], [ false, %70 ]
  ret i1 %75
}

declare double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink23SizesMathFunctionParserC1ENS_19CSSParserTokenRangeEPNS_11MediaValuesE(%"class.blink::SizesMathFunctionParser"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::MediaValues"*) unnamed_addr #2

declare float @_ZNK5blink23SizesMathFunctionParser6ResultEv(%"class.blink::SizesMathFunctionParser"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20SizesAttributeParser21MediaConditionMatchesERKNS_13MediaQuerySetE(%"class.blink::SizesAttributeParser"* nocapture readonly, %"class.blink::MediaQuerySet"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::MediaQueryEvaluator", align 8
  %4 = bitcast %"class.blink::MediaQueryEvaluator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::MediaQueryEvaluator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %5, align 8
  call void @_ZN5blink19MediaQueryEvaluatorC1ERKNS_11MediaValuesE(%"class.blink::MediaQueryEvaluator"* nonnull %3, %"class.blink::MediaValues"* dereferenceable(8) %7) #6
  %8 = call zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"* nonnull %3, %"class.blink::MediaQuerySet"* dereferenceable(24) %1, %"class.WTF::Vector.30"* null, %"class.WTF::Vector.30"* null) #6
  call void @_ZN5blink19MediaQueryEvaluatorD1Ev(%"class.blink::MediaQueryEvaluator"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6
  ret i1 %8
}

declare void @_ZN5blink19MediaQueryEvaluatorC1ERKNS_11MediaValuesE(%"class.blink::MediaQueryEvaluator"*, %"class.blink::MediaValues"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"*, %"class.blink::MediaQuerySet"* dereferenceable(24), %"class.WTF::Vector.30"*, %"class.WTF::Vector.30"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink19MediaQueryEvaluatorD1Ev(%"class.blink::MediaQueryEvaluator"*) unnamed_addr #4

declare void @_ZN5blink19CSSParserTokenRange21ConsumeComponentValueEv(%"class.blink::CSSParserTokenRange"*) local_unnamed_addr #2

declare { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZNK5blink19CSSParserTokenRange12MakeSubRangeEPKNS_14CSSParserTokenES3_(%"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser19ParseMediaConditionENS_19CSSParserTokenRangeEPKNS_16ExecutionContextE(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.9"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #6
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.14"*, i32*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #6
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
