; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/script_fetch_options.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/script_fetch_options.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.base::TimeDelta" = type { i64 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.192 }
%union.anon.192 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.2 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.2 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.196" }
%"class.WTF::HashTable.196" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.199 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.200", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.209, i8, %"class.url::Origin" }
%"class.base::RefCounted.200" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.201" }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"class.std::__1::unique_ptr.203"*, %"class.std::__1::unique_ptr.203"*, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.std::__1::unique_ptr.203"* }
%class.scoped_refptr.209 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.210" }
%"struct.std::__1::atomic.210" = type { %"struct.std::__1::__atomic_base.211" }
%"struct.std::__1::__atomic_base.211" = type { %"struct.std::__1::__atomic_base.212" }
%"struct.std::__1::__atomic_base.212" = type { %"struct.std::__1::__cxx_atomic_impl.213" }
%"struct.std::__1::__cxx_atomic_impl.213" = type { %"struct.std::__1::__cxx_atomic_base_impl.214" }
%"struct.std::__1::__cxx_atomic_base_impl.214" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %class.scoped_refptr.2*, i32, i32 }
%"class.WTF::Vector.230" = type { %"class.WTF::VectorBuffer.231" }
%"class.WTF::VectorBuffer.231" = type { %"class.WTF::VectorBufferBase.232" }
%"class.WTF::VectorBufferBase.232" = type { %"class.WTF::String"*, i32, i32 }
%union.anon.244 = type { %"class.base::TimeDelta" }
%"class.WTF::String" = type { %class.scoped_refptr }
%union.anon.239 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%union.anon.249 = type { %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.255 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.267", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.267" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.268" }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { i32*, i32*, %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.256, %"class.mojo::PendingRemote.257" }
%class.scoped_refptr.256 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.257" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.3 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.4", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.4" = type { %"class.base::RefCounted.5" }
%"class.base::RefCounted.5" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.6", i32, [4 x i8], %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.181", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.122", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i64 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.116", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i64 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { float }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.125", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { %"struct.std::__1::pair.149"*, i32, i32 }
%"struct.std::__1::pair.149" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.162" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.185" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.180 }
%class.scoped_refptr.180 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.258 = type { %"class.base::RefCountedData.259"* }
%"class.base::RefCountedData.259" = type opaque
%class.scoped_refptr.260 = type { %"class.base::RefCountedData.261"* }
%"class.base::RefCountedData.261" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.2, %class.scoped_refptr.2, %class.scoped_refptr.2, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.199, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.215", %"class.absl::optional.220", %"class.absl::optional.235", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.245", %"class.absl::optional.235", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.235", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.245", %"class.absl::optional.250", i8, %class.scoped_refptr.255 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.absl::optional.215" = type { %"class.absl::optional_internal::optional_data.216" }
%"class.absl::optional_internal::optional_data.216" = type { %"class.absl::optional_internal::optional_data_base.217" }
%"class.absl::optional_internal::optional_data_base.217" = type { %"class.absl::optional_internal::optional_data_dtor_base.218" }
%"class.absl::optional_internal::optional_data_dtor_base.218" = type { i8, %union.anon.219 }
%union.anon.219 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.220" = type { %"class.absl::optional_internal::optional_data.221" }
%"class.absl::optional_internal::optional_data.221" = type { %"class.absl::optional_internal::optional_data_base.222" }
%"class.absl::optional_internal::optional_data_base.222" = type { %"class.absl::optional_internal::optional_data_dtor_base.223" }
%"class.absl::optional_internal::optional_data_dtor_base.223" = type { i8, %union.anon.224 }
%union.anon.224 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.240", %"class.absl::optional.240" }
%"class.absl::optional.240" = type { %"class.absl::optional_internal::optional_data.241" }
%"class.absl::optional_internal::optional_data.241" = type { %"class.absl::optional_internal::optional_data_base.242" }
%"class.absl::optional_internal::optional_data_base.242" = type { %"class.absl::optional_internal::optional_data_dtor_base.243" }
%"class.absl::optional_internal::optional_data_dtor_base.243" = type { i8, %union.anon.244 }
%"class.absl::optional.235" = type { %"class.absl::optional_internal::optional_data.236" }
%"class.absl::optional_internal::optional_data.236" = type { %"class.absl::optional_internal::optional_data_base.237" }
%"class.absl::optional_internal::optional_data_base.237" = type { %"class.absl::optional_internal::optional_data_dtor_base.238" }
%"class.absl::optional_internal::optional_data_dtor_base.238" = type { i8, %union.anon.239 }
%"class.absl::optional.245" = type { %"class.absl::optional_internal::optional_data.246" }
%"class.absl::optional_internal::optional_data.246" = type { %"class.absl::optional_internal::optional_data_base.247" }
%"class.absl::optional_internal::optional_data_base.247" = type { %"class.absl::optional_internal::optional_data_dtor_base.248" }
%"class.absl::optional_internal::optional_data_dtor_base.248" = type { i8, %union.anon.249 }
%"class.absl::optional.250" = type { %"class.absl::optional_internal::optional_data.251" }
%"class.absl::optional_internal::optional_data.251" = type { %"class.absl::optional_internal::optional_data_base.252" }
%"class.absl::optional_internal::optional_data_base.252" = type { %"class.absl::optional_internal::optional_data_dtor_base.253" }
%"class.absl::optional_internal::optional_data_dtor_base.253" = type { i8, %union.anon.254 }
%union.anon.254 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet", i8, i8, %class.scoped_refptr.3, %class.scoped_refptr.258, %class.scoped_refptr.260 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEaSERKSD_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

@.str = private unnamed_addr constant [7 x i8] c"script\00", align 1
@__const._ZNK5blink18ScriptFetchOptions21CreateFetchParametersERKNS_4KURLEPKNS_14SecurityOriginE13scoped_refptrIKNS_15DOMWrapperWorldEENS_25CrossOriginAttributeValueERKN3WTF12TextEncodingENS_15FetchParameters11DeferOptionE.params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.2, %class.scoped_refptr.2, %class.scoped_refptr.2, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.199, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.244 } } } }, { { { { i8, [7 x i8], %union.anon.244 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.239 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.255 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet", i8, i8, [6 x i8], %class.scoped_refptr.3, %class.scoped_refptr.258, %class.scoped_refptr.260 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.2, %class.scoped_refptr.2, %class.scoped_refptr.2, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.199, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.244 } } } }, { { { { i8, [7 x i8], %union.anon.244 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.239 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.255 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.2, %class.scoped_refptr.2, %class.scoped_refptr.2, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.199, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.244 } } } }, { { { { i8, [7 x i8], %union.anon.244 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.239 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.255 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.190" { %"struct.std::__1::__compressed_pair_elem.191" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.192 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.190" { %"struct.std::__1::__compressed_pair_elem.191" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.192 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.2 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.2 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.2 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap" { %"class.WTF::HashTable.196" <{ %"struct.WTF::KeyValuePair"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.199 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector.225" { %"class.WTF::VectorBuffer.226" { %"class.WTF::VectorBufferBase.227" { %class.scoped_refptr.2* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.2*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.230" { %"class.WTF::VectorBuffer.231" { %"class.WTF::VectorBufferBase.232" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } } { { { { i8, [7 x i8], %union.anon.239 } } } { { { i8, [7 x i8], %union.anon.239 } } { { i8, [7 x i8], %union.anon.239 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.239 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.244 } } } }, { { { { i8, [7 x i8], %union.anon.244 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.244 } } } } { { { { i8, [7 x i8], %union.anon.244 } } } { { { i8, [7 x i8], %union.anon.244 } } { { i8, [7 x i8], %union.anon.244 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.244 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.244 } } } } { { { { i8, [7 x i8], %union.anon.244 } } } { { { i8, [7 x i8], %union.anon.244 } } { { i8, [7 x i8], %union.anon.244 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.244 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.249 } } } } { { { { i8, [7 x i8], %union.anon.249 } } } { { { i8, [7 x i8], %union.anon.249 } } { { i8, [7 x i8], %union.anon.249 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.249 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } } { { { { i8, [7 x i8], %union.anon.239 } } } { { { i8, [7 x i8], %union.anon.239 } } { { i8, [7 x i8], %union.anon.239 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.239 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.239 } } } } { { { { i8, [7 x i8], %union.anon.239 } } } { { { i8, [7 x i8], %union.anon.239 } } { { i8, [7 x i8], %union.anon.239 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.239 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon.249 } } } } { { { { i8, [7 x i8], %union.anon.249 } } } { { { i8, [7 x i8], %union.anon.249 } } { { i8, [7 x i8], %union.anon.249 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.249 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.255 { %"class.base::RefCountedData"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.256 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.257" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet", i8, i8, [6 x i8], %class.scoped_refptr.3, %class.scoped_refptr.258, %class.scoped_refptr.260 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet" { %"class.WTF::HashTable" <{ %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.3 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.258 { %"class.base::RefCountedData.259"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.259"*) }, %class.scoped_refptr.260 { %"class.base::RefCountedData.261"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.261"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, blink::IntegrityAlgorithm>]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18ScriptFetchOptions21CreateFetchParametersERKNS_4KURLEPKNS_14SecurityOriginE13scoped_refptrIKNS_15DOMWrapperWorldEENS_25CrossOriginAttributeValueERKN3WTF12TextEncodingENS_15FetchParameters11DeferOptionE(%"class.blink::FetchParameters"* noalias sret, %"class.blink::ScriptFetchOptions"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::SecurityOrigin"*, %"class.blink::DOMWrapperWorld"*, i32, %"class.WTF::TextEncoding"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %10 = alloca %"class.blink::ResourceRequest", align 8
  %11 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = alloca %"class.blink::ResourceRequest", align 8
  %14 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %10, %"class.blink::KURL"* dereferenceable(112) %2) #7
  %15 = bitcast %"struct.blink::ResourceLoaderOptions"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %15) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 112, i1 false)
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %11, %"class.blink::DOMWrapperWorld"* %4) #7
  %16 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6) #7
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %12 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %20 = bitcast %"struct.blink::ResourceLoaderOptions"* %11 to i64*
  %21 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #7
  br label %37

37:                                               ; preds = %8, %33, %36
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #7
  br label %53

53:                                               ; preds = %37, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  %54 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %11, i64 0, i32 5, i32 0
  %55 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 9, i32 0
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %54, align 2
  %57 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.2, %class.scoped_refptr.2, %class.scoped_refptr.2, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.199, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.244 } } } }, { { { { i8, [7 x i8], %union.anon.244 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.239 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.255 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet", i8, i8, [6 x i8], %class.scoped_refptr.3, %class.scoped_refptr.258, %class.scoped_refptr.260 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.2, %class.scoped_refptr.2, %class.scoped_refptr.2, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.199, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.225", %"class.WTF::Vector.230", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.244 } } } }, { { { { i8, [7 x i8], %union.anon.244 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], %union.anon.239 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.239 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.249 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.255 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet", i8, i8, [6 x i8], %class.scoped_refptr.3, %class.scoped_refptr.258, %class.scoped_refptr.260 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZNK5blink18ScriptFetchOptions21CreateFetchParametersERKNS_4KURLEPKNS_14SecurityOriginE13scoped_refptrIKNS_15DOMWrapperWorldEENS_25CrossOriginAttributeValueERKN3WTF12TextEncodingENS_15FetchParameters11DeferOptionE.params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %13, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %10) #7
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* %0, %"class.blink::ResourceRequest"* nonnull %13, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %11) #7
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %13) #7
  %58 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 15
  store i32 23, i32* %58, align 8
  %59 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 16
  store i32 13, i32* %59, align 4
  %60 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 8
  %61 = load i8, i8* %60, align 8
  %62 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 11
  store i8 %61, i8* %62, align 2
  %63 = icmp eq i32 %5, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %53
  call void @_ZN5blink15FetchParameters27SetCrossOriginAccessControlEPKNS_14SecurityOriginENS_25CrossOriginAttributeValueE(%"class.blink::FetchParameters"* %0, %"class.blink::SecurityOrigin"* %3, i32 %5) #7
  br label %65

65:                                               ; preds = %53, %64
  %66 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 2, i32 6
  %67 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %87, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #7
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !2

84:                                               ; preds = %75
  call void @llvm.trap() #7
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4
  br label %87

87:                                               ; preds = %85, %70, %65
  %88 = ptrtoint %"class.WTF::StringImpl"* %68 to i64
  %89 = bitcast %"class.WTF::String"* %66 to i64*
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  store i64 %88, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #7
  br label %106

106:                                              ; preds = %87, %102, %105
  %107 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 2, i32 7, i32 0
  %108 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 1, i32 0
  %109 = call dereferenceable(24) %"class.WTF::HashTable"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEaSERKSD_(%"class.WTF::HashTable"* %107, %"class.WTF::HashTable"* dereferenceable(24) %108) #7
  %110 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 21
  %111 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 2, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %131, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #7
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !2

128:                                              ; preds = %119
  call void @llvm.trap() #7
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %129, %114, %106
  %132 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  %133 = bitcast %"class.WTF::String"* %110 to i64*
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  store i64 %132, i64* %133, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #7
  br label %150

150:                                              ; preds = %149, %146, %131
  %151 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 3
  %152 = load i8, i8* %151, align 1
  %153 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 2, i32 8
  store i8 %152, i8* %153, align 8
  %154 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 7
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 18
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 6
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 23
  store i32 %158, i32* %159, align 8
  %160 = bitcast %"class.blink::TextResourceDecoderOptions"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %160) #7
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %9, i32 0, %"class.WTF::TextEncoding"* dereferenceable(8) %6) #7
  %161 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1
  %162 = bitcast %"class.blink::TextResourceDecoderOptions"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* nonnull align 8 %160, i64 32, i1 false) #7
  %163 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1, i32 7
  %164 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %9, i64 0, i32 7
  %165 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %163, %"class.blink::KURL"* dereferenceable(112) %164) #7
  %166 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1, i32 8, i64 0
  %167 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %9, i64 0, i32 8, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 3, i1 false) #7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %164) #7
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %160) #7
  %168 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 4
  store i32 %7, i32* %168, align 4
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #7
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %14) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #2

declare void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #3

declare void @_ZN5blink15FetchParameters27SetCrossOriginAccessControlEPKNS_14SecurityOriginENS_25CrossOriginAttributeValueE(%"class.blink::FetchParameters"*, %"class.blink::SecurityOrigin"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #3

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEaSERKSD_(%"class.WTF::HashTable"*, %"class.WTF::HashTable"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable", align 8
  %4 = bitcast %"class.WTF::HashTable"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 3
  %9 = bitcast %"class.WTF::HashTable"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable"* nonnull %3, %"class.WTF::HashTable"* dereferenceable(24) %1)
  %10 = bitcast %"class.WTF::HashTable"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  store atomic i64 %13, i64* %10 monotonic, align 8
  store atomic i64 %11, i64* %12 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %6, align 8
  store i32 %16, i32* %14, align 4
  store i32 %15, i32* %6, align 8
  %17 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %7, align 4
  store i32 %19, i32* %17, align 4
  store i32 %18, i32* %7, align 4
  %20 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2147483647
  %23 = load i32, i32* %8, align 8
  %24 = and i32 %23, 2147483647
  %25 = and i32 %21, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %20, align 8
  %27 = and i32 %23, -2147483648
  %28 = or i32 %27, %22
  store i32 %28, i32* %8, align 8
  %29 = inttoptr i64 %13 to %"struct.std::__1::pair"*
  %30 = icmp eq i64 %13, 0
  br i1 %30, label %61, label %31, !prof !3

31:                                               ; preds = %2
  %32 = icmp eq i32 %15, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %31
  %34 = zext i32 %15 to i64
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi i64 [ 0, %33 ], [ %57, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 %36
  %38 = bitcast %"struct.std::__1::pair"* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast i8* %39 to %"class.WTF::StringImpl"*
  %41 = ptrtoint i8* %39 to i64
  switch i64 %41, label %42 [
    i64 -1, label %56
    i64 0, label %56
  ]

42:                                               ; preds = %35
  %43 = getelementptr inbounds i8, i8* %39, i64 8
  %44 = bitcast i8* %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = bitcast i8* %39 to i32*
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %42
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %42
  %53 = phi i32 [ %51, %50 ], [ %49, %42 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #7
  br label %56

56:                                               ; preds = %55, %52, %35, %35
  %57 = add nuw nsw i64 %36, 1
  %58 = icmp eq i64 %57, %34
  br i1 %58, label %59, label %35

59:                                               ; preds = %56, %31
  %60 = inttoptr i64 %13 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #7
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %5, align 8
  br label %61

61:                                               ; preds = %2, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret %"class.WTF::HashTable"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable"*, %"class.WTF::HashTable"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 2
  %4 = bitcast %"class.WTF::HashTable"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  tail call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %0, i32 %5)
  %8 = load i32, i32* %3, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %14
  br i1 %9, label %35, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %16, %29
  %19 = phi %"struct.std::__1::pair"* [ %30, %29 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  %26 = and i1 %22, %25
  %27 = icmp eq %"class.WTF::StringImpl"* %21, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %28 = or i1 %27, %26
  br i1 %28, label %29, label %32

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 1
  %31 = icmp eq %"struct.std::__1::pair"* %30, %15
  br i1 %31, label %35, label %18

32:                                               ; preds = %18, %16
  %33 = phi %"struct.std::__1::pair"* [ %11, %16 ], [ %19, %18 ]
  %34 = icmp eq %"struct.std::__1::pair"* %33, %15
  br i1 %34, label %35, label %36

35:                                               ; preds = %29, %36, %55, %52, %2, %7, %32
  ret void

36:                                               ; preds = %32, %55
  %37 = phi %"struct.std::__1::pair"* [ %42, %55 ], [ %33, %32 ]
  %38 = tail call { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* dereferenceable(16) %37, %"struct.std::__1::pair"* dereferenceable(16) %37) #7
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %40 = icmp eq %"struct.std::__1::pair"* %39, %15
  br i1 %40, label %35, label %41

41:                                               ; preds = %36, %52
  %42 = phi %"struct.std::__1::pair"* [ %53, %52 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  %49 = and i1 %45, %48
  %50 = icmp eq %"class.WTF::StringImpl"* %44, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %51 = or i1 %50, %49
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 1
  %54 = icmp eq %"struct.std::__1::pair"* %53, %15
  br i1 %54, label %35, label %41

55:                                               ; preds = %41
  %56 = icmp eq %"struct.std::__1::pair"* %42, %15
  br i1 %56, label %35, label %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %71

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #7
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #7
  %30 = bitcast i8* %29 to %"struct.std::__1::pair"*
  %31 = add nsw i64 %27, -1
  %32 = and i64 %27, 3
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %57, label %34

34:                                               ; preds = %26
  %35 = sub nsw i64 %27, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %54, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %55, %36 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %37
  %40 = bitcast %"struct.std::__1::pair"* %39 to i64*
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %37, i32 1
  store i8 0, i8* %41, align 8
  %42 = or i64 %37, 1
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %42
  %44 = bitcast %"struct.std::__1::pair"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %42, i32 1
  store i8 0, i8* %45, align 8
  %46 = or i64 %37, 2
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %46
  %48 = bitcast %"struct.std::__1::pair"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %46, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %37, 3
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %50
  %52 = bitcast %"struct.std::__1::pair"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = add nuw nsw i64 %37, 4
  %55 = add i64 %38, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %36

57:                                               ; preds = %36, %26
  %58 = phi i64 [ 0, %26 ], [ %54, %36 ]
  %59 = icmp eq i64 %32, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %57, %60
  %61 = phi i64 [ %66, %60 ], [ %58, %57 ]
  %62 = phi i64 [ %67, %60 ], [ %32, %57 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %61
  %64 = bitcast %"struct.std::__1::pair"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %61, i32 1
  store i8 0, i8* %65, align 8
  %66 = add nuw nsw i64 %61, 1
  %67 = add i64 %62, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %60, !llvm.loop !4

69:                                               ; preds = %60, %57
  %70 = call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* %30, i32 %17, %"struct.std::__1::pair"* null) #7
  br label %71

71:                                               ; preds = %69, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"*, i32, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %23 = ptrtoint %"struct.std::__1::pair"* %22 to i64
  br label %71

24:                                               ; preds = %119
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %120, %24 ]
  %33 = phi %"struct.std::__1::pair"* [ null, %16 ], [ %123, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %121, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.std::__1::pair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 %42
  %44 = bitcast %"struct.std::__1::pair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #7
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #7
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %"struct.std::__1::pair"* %33

71:                                               ; preds = %21, %119
  %72 = phi i64 [ %120, %119 ], [ %23, %21 ]
  %73 = phi i32 [ %121, %119 ], [ %13, %21 ]
  %74 = phi %"struct.std::__1::pair"* [ %122, %119 ], [ %22, %21 ]
  %75 = phi %"struct.std::__1::pair"* [ %123, %119 ], [ null, %21 ]
  %76 = phi i32 [ %124, %119 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 %77, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  %85 = and i1 %81, %84
  %86 = icmp eq %"class.WTF::StringImpl"* %80, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %87 = or i1 %86, %85
  br i1 %87, label %119, label %88

88:                                               ; preds = %71
  %89 = call { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable"* nonnull %5, %"struct.std::__1::pair"* dereferenceable(16) %78) #7
  %90 = extractvalue { %"struct.std::__1::pair"*, i8 } %89, 0
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #7
  br label %107

107:                                              ; preds = %88, %103, %106
  %108 = bitcast %"struct.std::__1::pair"* %78 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair"* %90 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 1
  %112 = load i8, i8* %82, align 8
  store i8 %112, i8* %111, align 8
  %113 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 %77
  %115 = icmp eq %"struct.std::__1::pair"* %114, %3
  %116 = select i1 %115, %"struct.std::__1::pair"* %90, %"struct.std::__1::pair"* %75
  %117 = load i32, i32* %12, align 8
  %118 = ptrtoint %"struct.std::__1::pair"* %113 to i64
  br label %119

119:                                              ; preds = %71, %107
  %120 = phi i64 [ %72, %71 ], [ %118, %107 ]
  %121 = phi i32 [ %73, %71 ], [ %117, %107 ]
  %122 = phi %"struct.std::__1::pair"* [ %74, %71 ], [ %113, %107 ]
  %123 = phi %"struct.std::__1::pair"* [ %75, %71 ], [ %116, %107 ]
  %124 = add i32 %76, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #7
  br label %17

17:                                               ; preds = %2, %15
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 15
  %23 = xor i32 %22, -1
  %24 = add nsw i32 %23, %21
  %25 = lshr i32 %24, 10
  %26 = xor i32 %25, %24
  %27 = mul nsw i32 %26, 9
  %28 = lshr i32 %27, 6
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 11
  %31 = xor i32 %30, -1
  %32 = add i32 %29, %31
  %33 = lshr i32 %32, 16
  %34 = xor i32 %33, %32
  %35 = zext i32 %18 to i64
  %36 = mul i64 %35, 5146158508761418231
  %37 = zext i32 %34 to i64
  %38 = mul i64 %37, -682818954288075998
  %39 = add i64 %38, %36
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = and i32 %7, %41
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %43
  %45 = ptrtoint %"struct.std::__1::pair"* %44 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %43, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  %52 = and i1 %48, %51
  br i1 %52, label %70, label %53

53:                                               ; preds = %17
  %54 = xor i32 %41, -1
  %55 = lshr i64 %39, 55
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, %54
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %76

68:                                               ; preds = %94
  %69 = ptrtoint %"struct.std::__1::pair"* %100 to i64
  br label %70

70:                                               ; preds = %68, %17
  %71 = phi i64 [ %45, %17 ], [ %69, %68 ]
  %72 = phi %"struct.std::__1::pair"* [ null, %17 ], [ %95, %68 ]
  %73 = icmp eq %"struct.std::__1::pair"* %72, null
  %74 = ptrtoint %"struct.std::__1::pair"* %72 to i64
  %75 = select i1 %73, i64 %71, i64 %74
  br label %109

76:                                               ; preds = %53, %94
  %77 = phi %"struct.std::__1::pair"* [ null, %53 ], [ %95, %94 ]
  %78 = phi i8* [ %49, %53 ], [ %105, %94 ]
  %79 = phi %"class.WTF::StringImpl"* [ %47, %53 ], [ %103, %94 ]
  %80 = phi i64 [ %45, %53 ], [ %101, %94 ]
  %81 = phi %"struct.std::__1::pair"* [ %44, %53 ], [ %100, %94 ]
  %82 = phi i64 [ %43, %53 ], [ %99, %94 ]
  %83 = phi i64 [ 0, %53 ], [ %97, %94 ]
  %84 = bitcast %"struct.std::__1::pair"* %81 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, inttoptr (i64 -1 to i8*)
  br i1 %86, label %94, label %87

87:                                               ; preds = %76
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %89 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"* %88) #7
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  %91 = load i8, i8* %78, align 8
  %92 = load i8, i8* %19, align 8
  %93 = icmp eq i8 %91, %92
  br i1 %93, label %109, label %94

94:                                               ; preds = %76, %87, %90
  %95 = phi %"struct.std::__1::pair"* [ %77, %87 ], [ %77, %90 ], [ %81, %76 ]
  %96 = icmp eq i64 %83, 0
  %97 = select i1 %96, i64 %67, i64 %83
  %98 = add i64 %97, %82
  %99 = and i64 %98, %8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %99
  %101 = ptrtoint %"struct.std::__1::pair"* %100 to i64
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %99, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 0
  %108 = and i1 %104, %107
  br i1 %108, label %68, label %76

109:                                              ; preds = %90, %70
  %110 = phi i64 [ %75, %70 ], [ %80, %90 ]
  %111 = phi i8 [ 0, %70 ], [ 1, %90 ]
  %112 = inttoptr i64 %110 to %"struct.std::__1::pair"*
  %113 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %112, 0
  %114 = insertvalue { %"struct.std::__1::pair"*, i8 } %113, i8 %111, 1
  ret { %"struct.std::__1::pair"*, i8 } %114
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"* dereferenceable(16), %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* null)
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.std::__1::pair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #7
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 15
  %30 = xor i32 %29, -1
  %31 = add nsw i32 %30, %28
  %32 = lshr i32 %31, 10
  %33 = xor i32 %32, %31
  %34 = mul nsw i32 %33, 9
  %35 = lshr i32 %34, 6
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 11
  %38 = xor i32 %37, -1
  %39 = add i32 %36, %38
  %40 = lshr i32 %39, 16
  %41 = xor i32 %40, %39
  %42 = zext i32 %25 to i64
  %43 = mul i64 %42, 5146158508761418231
  %44 = zext i32 %41 to i64
  %45 = mul i64 %44, -682818954288075998
  %46 = add i64 %45, %43
  %47 = lshr i64 %46, 32
  %48 = trunc i64 %47 to i32
  %49 = and i32 %14, %48
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %50
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %50, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  %58 = and i1 %54, %57
  br i1 %58, label %116, label %59

59:                                               ; preds = %24
  %60 = xor i32 %48, -1
  %61 = lshr i64 %46, 55
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, %60
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %59, %91
  %75 = phi i8* [ %55, %59 ], [ %101, %91 ]
  %76 = phi %"class.WTF::StringImpl"* [ %53, %59 ], [ %99, %91 ]
  %77 = phi %"struct.std::__1::pair"* [ %51, %59 ], [ %97, %91 ]
  %78 = phi %"struct.std::__1::pair"* [ null, %59 ], [ %92, %91 ]
  %79 = phi i64 [ %50, %59 ], [ %96, %91 ]
  %80 = phi i64 [ 0, %59 ], [ %94, %91 ]
  %81 = bitcast %"struct.std::__1::pair"* %77 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, inttoptr (i64 -1 to i8*)
  br i1 %83, label %91, label %84

84:                                               ; preds = %74
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %86 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"* %85) #7
  br i1 %86, label %87, label %91

87:                                               ; preds = %84
  %88 = load i8, i8* %75, align 8
  %89 = load i8, i8* %26, align 8
  %90 = icmp eq i8 %88, %89
  br i1 %90, label %172, label %91

91:                                               ; preds = %74, %84, %87
  %92 = phi %"struct.std::__1::pair"* [ %78, %87 ], [ %77, %74 ], [ %78, %84 ]
  %93 = icmp eq i64 %80, 0
  %94 = select i1 %93, i64 %73, i64 %80
  %95 = add i64 %94, %79
  %96 = and i64 %95, %15
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %96
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %96, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  %104 = and i1 %100, %103
  br i1 %104, label %105, label %74

105:                                              ; preds = %91
  %106 = icmp eq %"struct.std::__1::pair"* %92, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %105
  %108 = bitcast %"struct.std::__1::pair"* %92 to i64*
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 0, i32 1
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 2147483647
  %113 = and i32 %112, 2147483647
  %114 = and i32 %111, -2147483648
  %115 = or i32 %113, %114
  store i32 %115, i32* %110, align 8
  br label %116

116:                                              ; preds = %24, %105, %107
  %117 = phi %"struct.std::__1::pair"* [ %92, %107 ], [ %97, %105 ], [ %51, %24 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %138, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #7
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %126
  tail call void @llvm.trap() #7
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %138

138:                                              ; preds = %136, %121, %116
  %139 = ptrtoint %"class.WTF::StringImpl"* %119 to i64
  %140 = bitcast %"struct.std::__1::pair"* %117 to i64*
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  store i64 %139, i64* %140, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #7
  br label %157

157:                                              ; preds = %138, %153, %156
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %159 = load i8, i8* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 1
  store i8 %159, i8* %160, align 8
  %161 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = add i32 %165, %163
  %167 = shl i32 %166, 1
  %168 = load i32, i32* %12, align 8
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %157
  %171 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* %117)
  br label %172

172:                                              ; preds = %87, %157, %170
  %173 = phi i8 [ 1, %157 ], [ 1, %170 ], [ 0, %87 ]
  %174 = phi %"struct.std::__1::pair"* [ %117, %157 ], [ %171, %170 ], [ %77, %87 ]
  %175 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %174, 0
  %176 = insertvalue { %"struct.std::__1::pair"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::pair"*, i8 } %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #7
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #7
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #7
  %36 = bitcast i8* %35 to %"struct.std::__1::pair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %45
  %48 = bitcast %"struct.std::__1::pair"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %45, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %50
  %52 = bitcast %"struct.std::__1::pair"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %54
  %56 = bitcast %"struct.std::__1::pair"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %54, i32 1
  store i8 0, i8* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %58
  %60 = bitcast %"struct.std::__1::pair"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %58, i32 1
  store i8 0, i8* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %69
  %72 = bitcast %"struct.std::__1::pair"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %69, i32 1
  store i8 0, i8* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !6

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* %36, i32 %32, %"struct.std::__1::pair"* %1) #7
  ret %"struct.std::__1::pair"* %78
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
