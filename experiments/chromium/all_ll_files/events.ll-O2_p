; ModuleID = 'gen/extensions/common/api/events.cc'
source_filename = "gen/extensions/common/api/events.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::api::events::Rule" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.std::__1::vector.14", %"class.std::__1::vector.14", %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.base::Value"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.33" }
%"union.absl::variant_internal::DestructibleUnionImpl.33" = type { %"union.absl::variant_internal::DestructibleUnionImpl.34" }
%"union.absl::variant_internal::DestructibleUnionImpl.34" = type { %"union.absl::variant_internal::DestructibleUnionImpl.35" }
%"union.absl::variant_internal::DestructibleUnionImpl.35" = type { %"union.absl::variant_internal::DestructibleUnionImpl.36" }
%"union.absl::variant_internal::DestructibleUnionImpl.36" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::unique_ptr.16"* }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i32* }
%"struct.extensions::api::events::Event::AddRules::Params" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.extensions::api::events::Rule"* }
%"struct.extensions::api::events::Event::GetRules::Params" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::unique_ptr.4" }
%"struct.extensions::api::events::Event::RemoveRules::Params" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::unique_ptr.4" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.extensions::api::events::Event::GetRules::Params"* }
%"struct.std::__1::default_delete.89" = type { i8 }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.extensions::api::events::Event::RemoveRules::Params"* }
%"struct.std::__1::default_delete.95" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEE = comdat any

$_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__110unique_ptrIN4base5ValueENS2_14default_deleteIS5_EEEEEEbRKNS4_9ListValueEPNS2_6vectorIT_NS2_9allocatorISD_EEEE = comdat any

$_ZN20json_schema_compiler4util21PopulateArrayFromListIN10extensions3api6events4RuleEEEbRKN4base9ListValueEPNSt3__16vectorIT_NSA_9allocatorISC_EEEE = comdat any

$_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v = comdat any

$_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEE = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4base5ValueENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNKSt3__114default_deleteIN10extensions3api6events5Event8GetRules6ParamsEEclEPS6_ = comdat any

$_ZNKSt3__114default_deleteIN10extensions3api6events5Event11RemoveRules6ParamsEEclEPS6_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"tags\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"conditions\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"actions\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"priority\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1

@_ZN10extensions3api6events4RuleC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::events::Rule"*), void (%"struct.extensions::api::events::Rule"*)* @_ZN10extensions3api6events4RuleC2Ev
@_ZN10extensions3api6events4RuleD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::events::Rule"*), void (%"struct.extensions::api::events::Rule"*)* @_ZN10extensions3api6events4RuleD2Ev
@_ZN10extensions3api6events4RuleC1EOS2_ = hidden unnamed_addr alias void (%"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"*), void (%"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"*)* @_ZN10extensions3api6events4RuleC2EOS2_
@_ZN10extensions3api6events5Event8AddRules6ParamsC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::events::Event::AddRules::Params"*), void (%"struct.extensions::api::events::Event::AddRules::Params"*)* @_ZN10extensions3api6events5Event8AddRules6ParamsC2Ev
@_ZN10extensions3api6events5Event8AddRules6ParamsD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::events::Event::AddRules::Params"*), void (%"struct.extensions::api::events::Event::AddRules::Params"*)* @_ZN10extensions3api6events5Event8AddRules6ParamsD2Ev
@_ZN10extensions3api6events5Event8GetRules6ParamsC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::events::Event::GetRules::Params"*), void (%"struct.extensions::api::events::Event::GetRules::Params"*)* @_ZN10extensions3api6events5Event8GetRules6ParamsC2Ev
@_ZN10extensions3api6events5Event8GetRules6ParamsD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::events::Event::GetRules::Params"*), void (%"struct.extensions::api::events::Event::GetRules::Params"*)* @_ZN10extensions3api6events5Event8GetRules6ParamsD2Ev
@_ZN10extensions3api6events5Event11RemoveRules6ParamsC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::events::Event::RemoveRules::Params"*), void (%"struct.extensions::api::events::Event::RemoveRules::Params"*)* @_ZN10extensions3api6events5Event11RemoveRules6ParamsC2Ev
@_ZN10extensions3api6events5Event11RemoveRules6ParamsD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::events::Event::RemoveRules::Params"*), void (%"struct.extensions::api::events::Event::RemoveRules::Params"*)* @_ZN10extensions3api6events5Event11RemoveRules6ParamsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events4RuleC2Ev(%"struct.extensions::api::events::Rule"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.extensions::api::events::Rule"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events4RuleD2Ev(%"struct.extensions::api::events::Rule"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  store i32* null, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.16"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::unique_ptr.16"* %10 to i8*
  %14 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr.16"* %15, %10
  br i1 %16, label %30, label %17

17:                                               ; preds = %12, %25
  %18 = phi %"class.std::__1::unique_ptr.16"* [ %19, %25 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %18, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.base::Value"*, %"class.base::Value"** %20, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %20, align 8
  %22 = icmp eq %"class.base::Value"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %21) #11
  %24 = bitcast %"class.base::Value"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %23, %17
  %26 = icmp eq %"class.std::__1::unique_ptr.16"* %19, %10
  br i1 %26, label %27, label %17

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.14"* %8 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %12
  %31 = phi i8* [ %29, %27 ], [ %13, %12 ]
  store %"class.std::__1::unique_ptr.16"* %10, %"class.std::__1::unique_ptr.16"** %14, align 8
  tail call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %7, %30
  %33 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %34, align 8
  %36 = icmp eq %"class.std::__1::unique_ptr.16"* %35, null
  br i1 %36, label %57, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.std::__1::unique_ptr.16"* %35 to i8*
  %39 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2, i32 0, i32 1
  %40 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.16"* %40, %35
  br i1 %41, label %55, label %42

42:                                               ; preds = %37, %50
  %43 = phi %"class.std::__1::unique_ptr.16"* [ %44, %50 ], [ %40, %37 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %43, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.base::Value"*, %"class.base::Value"** %45, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %45, align 8
  %47 = icmp eq %"class.base::Value"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %46) #11
  %49 = bitcast %"class.base::Value"* %46 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %48, %42
  %51 = icmp eq %"class.std::__1::unique_ptr.16"* %44, %35
  br i1 %51, label %52, label %42

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector.14"* %33 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %37
  %56 = phi i8* [ %54, %52 ], [ %38, %37 ]
  store %"class.std::__1::unique_ptr.16"* %35, %"class.std::__1::unique_ptr.16"** %39, align 8
  tail call void @_ZdlPv(i8* %56) #10
  br label %57

57:                                               ; preds = %32, %55
  %58 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %58, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %58, align 8
  %60 = icmp eq %"class.std::__1::vector"* %59, null
  br i1 %60, label %89, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %59, i64 0, i32 0, i32 0
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %62, align 8
  %64 = icmp eq %"class.std::__1::basic_string"* %63, null
  br i1 %64, label %87, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %59, i64 0, i32 0, i32 1
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %67, align 8
  %69 = icmp eq %"class.std::__1::basic_string"* %68, %63
  br i1 %69, label %85, label %70

70:                                               ; preds = %65, %80
  %71 = phi %"class.std::__1::basic_string"* [ %72, %80 ], [ %68, %65 ]
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 -1
  %73 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  tail call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %77, %70
  %81 = icmp eq %"class.std::__1::basic_string"* %72, %63
  br i1 %81, label %82, label %70

82:                                               ; preds = %80
  %83 = bitcast %"class.std::__1::vector"* %59 to i8**
  %84 = load i8*, i8** %83, align 8
  br label %85

85:                                               ; preds = %82, %65
  %86 = phi i8* [ %84, %82 ], [ %66, %65 ]
  store %"class.std::__1::basic_string"* %63, %"class.std::__1::basic_string"** %67, align 8
  tail call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %85, %61
  %88 = bitcast %"class.std::__1::vector"* %59 to i8*
  tail call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %57, %87
  %90 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %90, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %90, align 8
  %92 = icmp eq %"class.std::__1::basic_string"* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  tail call void @_ZdlPv(i8* %100) #10
  br label %101

101:                                              ; preds = %98, %93
  %102 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %89, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events4RuleC2EOS2_(%"struct.extensions::api::events::Rule"* nocapture, %"struct.extensions::api::events::Rule"* nocapture dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.extensions::api::events::Rule"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %3, align 8
  %6 = bitcast %"struct.extensions::api::events::Rule"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr.4"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %9, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.4"* %7 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2
  %15 = bitcast %"class.std::__1::vector.14"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #11
  %16 = bitcast %"class.std::__1::vector.14"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.14"* %13 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2, i32 0, i32 1
  %20 = bitcast %"class.std::__1::unique_ptr.16"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2, i32 0, i32 1
  %23 = bitcast %"class.std::__1::unique_ptr.16"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr.16"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.16"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %"class.std::__1::vector.14"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #11
  %30 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3
  %32 = bitcast %"class.std::__1::vector.14"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #11
  %33 = bitcast %"class.std::__1::vector.14"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.14"* %30 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3, i32 0, i32 1
  %37 = bitcast %"class.std::__1::unique_ptr.16"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3, i32 0, i32 1
  %40 = bitcast %"class.std::__1::unique_ptr.16"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr.16"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.16"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.std::__1::vector.14"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 4
  %48 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 4
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr.27"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  store i32* null, i32** %49, align 8
  %52 = bitcast %"class.std::__1::unique_ptr.27"* %47 to i64*
  store i64 %51, i64* %52, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.extensions::api::events::Rule"* @_ZN10extensions3api6events4RuleaSEOS2_(%"struct.extensions::api::events::Rule"* returned, %"struct.extensions::api::events::Rule"* nocapture dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.extensions::api::events::Rule"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %3, align 8
  %6 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = bitcast %"struct.extensions::api::events::Rule"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %"class.std::__1::basic_string"* %7, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %15, %10
  %19 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %2, %18
  %21 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr.4"* %22 to i64*
  %25 = load i64, i64* %24, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %23, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %21, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.4"* %21 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.std::__1::vector"* %27, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = icmp eq %"class.std::__1::basic_string"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 1
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %37, %32
  br i1 %38, label %54, label %39

39:                                               ; preds = %34, %49
  %40 = phi %"class.std::__1::basic_string"* [ %41, %49 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 -1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #10
  br label %49

49:                                               ; preds = %46, %39
  %50 = icmp eq %"class.std::__1::basic_string"* %41, %32
  br i1 %50, label %51, label %39

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::vector"* %27 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %53, %51 ], [ %35, %34 ]
  store %"class.std::__1::basic_string"* %32, %"class.std::__1::basic_string"** %36, align 8
  tail call void @_ZdlPv(i8* %55) #10
  br label %56

56:                                               ; preds = %54, %30
  %57 = bitcast %"class.std::__1::vector"* %27 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2
  %61 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %59, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.16"* %62, null
  br i1 %63, label %85, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.std::__1::unique_ptr.16"* %62 to i8*
  %66 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2, i32 0, i32 1
  %67 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %66, align 8
  %68 = icmp eq %"class.std::__1::unique_ptr.16"* %67, %62
  br i1 %68, label %82, label %69

69:                                               ; preds = %64, %77
  %70 = phi %"class.std::__1::unique_ptr.16"* [ %71, %77 ], [ %67, %64 ]
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %70, i64 -1
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.base::Value"*, %"class.base::Value"** %72, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %72, align 8
  %74 = icmp eq %"class.base::Value"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %69
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %73) #11
  %76 = bitcast %"class.base::Value"* %73 to i8*
  tail call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %75, %69
  %78 = icmp eq %"class.std::__1::unique_ptr.16"* %71, %62
  br i1 %78, label %79, label %69

79:                                               ; preds = %77
  %80 = bitcast %"class.std::__1::vector.14"* %59 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %64
  %83 = phi i8* [ %81, %79 ], [ %65, %64 ]
  store %"class.std::__1::unique_ptr.16"* %62, %"class.std::__1::unique_ptr.16"** %66, align 8
  tail call void @_ZdlPv(i8* %83) #10
  %84 = bitcast %"class.std::__1::vector.14"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #11
  br label %85

85:                                               ; preds = %58, %82
  %86 = bitcast %"class.std::__1::vector.14"* %60 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector.14"* %59 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2, i32 0, i32 1
  %90 = bitcast %"class.std::__1::unique_ptr.16"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2, i32 0, i32 1
  %93 = bitcast %"class.std::__1::unique_ptr.16"** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr.16"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.16"** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast %"class.std::__1::vector.14"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #11
  %100 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3
  %101 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3
  %102 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %100, i64 0, i32 0, i32 0
  %103 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %102, align 8
  %104 = icmp eq %"class.std::__1::unique_ptr.16"* %103, null
  br i1 %104, label %126, label %105

105:                                              ; preds = %85
  %106 = bitcast %"class.std::__1::unique_ptr.16"* %103 to i8*
  %107 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3, i32 0, i32 1
  %108 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %107, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr.16"* %108, %103
  br i1 %109, label %123, label %110

110:                                              ; preds = %105, %118
  %111 = phi %"class.std::__1::unique_ptr.16"* [ %112, %118 ], [ %108, %105 ]
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %111, i64 -1
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.base::Value"*, %"class.base::Value"** %113, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %113, align 8
  %115 = icmp eq %"class.base::Value"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %110
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %114) #11
  %117 = bitcast %"class.base::Value"* %114 to i8*
  tail call void @_ZdlPv(i8* %117) #10
  br label %118

118:                                              ; preds = %116, %110
  %119 = icmp eq %"class.std::__1::unique_ptr.16"* %112, %103
  br i1 %119, label %120, label %110

120:                                              ; preds = %118
  %121 = bitcast %"class.std::__1::vector.14"* %100 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %105
  %124 = phi i8* [ %122, %120 ], [ %106, %105 ]
  store %"class.std::__1::unique_ptr.16"* %103, %"class.std::__1::unique_ptr.16"** %107, align 8
  tail call void @_ZdlPv(i8* %124) #10
  %125 = bitcast %"class.std::__1::vector.14"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 24, i1 false) #11
  br label %126

126:                                              ; preds = %85, %123
  %127 = bitcast %"class.std::__1::vector.14"* %101 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector.14"* %100 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3, i32 0, i32 1
  %131 = bitcast %"class.std::__1::unique_ptr.16"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3, i32 0, i32 1
  %134 = bitcast %"class.std::__1::unique_ptr.16"** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.16"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.16"** %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = bitcast %"class.std::__1::vector.14"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #11
  %141 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 4
  %142 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 4
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = bitcast %"class.std::__1::unique_ptr.27"* %142 to i64*
  %145 = load i64, i64* %144, align 8
  store i32* null, i32** %143, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %141, i64 0, i32 0, i32 0, i32 0
  %147 = load i32*, i32** %146, align 8
  %148 = bitcast %"class.std::__1::unique_ptr.27"* %141 to i64*
  store i64 %145, i64* %148, align 8
  %149 = icmp eq i32* %147, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %126
  %151 = bitcast i32* %147 to i8*
  tail call void @_ZdlPv(i8* %151) #10
  br label %152

152:                                              ; preds = %126, %150
  ret %"struct.extensions::api::events::Rule"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions3api6events4Rule8PopulateERKN4base5ValueEPS2_(%"class.base::Value"* dereferenceable(32), %"struct.extensions::api::events::Rule"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value"*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::Value"*, align 8
  %6 = alloca %"class.base::ListValue"*, align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::ListValue"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.base::ListValue"*, align 8
  %11 = alloca %"class.base::Value"*, align 8
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 6
  br i1 %16, label %17, label %155

17:                                               ; preds = %2
  %18 = bitcast %"class.base::Value"* %0 to %"class.base::DictionaryValue"*
  %19 = bitcast %"class.base::Value"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  store %"class.base::Value"* null, %"class.base::Value"** %3, align 8
  %20 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2, %"class.base::Value"** nonnull %3) #11
  br i1 %20, label %21, label %82

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #11
  %25 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %26 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %25, %"class.std::__1::basic_string"* nonnull %4) #11
  br i1 %26, label %49, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %28, align 8
  %30 = icmp eq %"class.std::__1::basic_string"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #10
  br label %39

39:                                               ; preds = %36, %31
  %40 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %27, %39
  %42 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %47) #10
  br label %48

48:                                               ; preds = %41, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br label %153

49:                                               ; preds = %21
  %50 = call i8* @_Znwm(i64 24) #10
  %51 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %22, i64 24, i1 false) #11
  br label %60

56:                                               ; preds = %49
  %57 = bitcast i8* %50 to %"class.std::__1::basic_string"*
  %58 = load i8*, i8** %23, align 8
  %59 = load i64, i64* %24, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %57, i8* %58, i64 %59) #11
  br label %60

60:                                               ; preds = %55, %56
  %61 = ptrtoint i8* %50 to i64
  %62 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %62, align 8
  %64 = bitcast %"struct.extensions::api::events::Rule"* %1 to i64*
  store i64 %61, i64* %64, align 8
  %65 = icmp eq %"class.std::__1::basic_string"* %63, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %60
  %67 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #10
  br label %74

74:                                               ; preds = %71, %66
  %75 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @_ZdlPv(i8* %75) #10
  br label %76

76:                                               ; preds = %74, %60
  %77 = load i8, i8* %52, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %76, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br label %82

82:                                               ; preds = %81, %17
  %83 = bitcast %"class.base::Value"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  store %"class.base::Value"* null, %"class.base::Value"** %5, align 8
  %84 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4, %"class.base::Value"** nonnull %5) #11
  br i1 %84, label %85, label %93

85:                                               ; preds = %82
  %86 = bitcast %"class.base::ListValue"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #11
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %6, align 8
  %87 = load %"class.base::Value"*, %"class.base::Value"** %5, align 8
  %88 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %87, %"class.base::ListValue"** nonnull %6) #11
  br i1 %88, label %89, label %148

89:                                               ; preds = %85
  %90 = load %"class.base::ListValue"*, %"class.base::ListValue"** %6, align 8
  %91 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 1
  %92 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEE(%"class.base::ListValue"* dereferenceable(32) %90, %"class.std::__1::unique_ptr.4"* %91)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #11
  br i1 %92, label %93, label %151

93:                                               ; preds = %89, %82
  %94 = bitcast %"class.base::Value"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #11
  store %"class.base::Value"* null, %"class.base::Value"** %7, align 8
  %95 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i64 10, %"class.base::Value"** nonnull %7) #11
  br i1 %95, label %96, label %148

96:                                               ; preds = %93
  %97 = bitcast %"class.base::ListValue"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %8, align 8
  %98 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %99 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %98, %"class.base::ListValue"** nonnull %8) #11
  br i1 %99, label %100, label %147

100:                                              ; preds = %96
  %101 = load %"class.base::ListValue"*, %"class.base::ListValue"** %8, align 8
  %102 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2
  %103 = call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__110unique_ptrIN4base5ValueENS2_14default_deleteIS5_EEEEEEbRKNS4_9ListValueEPNS2_6vectorIT_NS2_9allocatorISD_EEEE(%"class.base::ListValue"* dereferenceable(32) %101, %"class.std::__1::vector.14"* %102)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  br i1 %103, label %104, label %148

104:                                              ; preds = %100
  %105 = bitcast %"class.base::Value"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  store %"class.base::Value"* null, %"class.base::Value"** %9, align 8
  %106 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7, %"class.base::Value"** nonnull %9) #11
  br i1 %106, label %107, label %145

107:                                              ; preds = %104
  %108 = bitcast %"class.base::ListValue"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #11
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %10, align 8
  %109 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %110 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %109, %"class.base::ListValue"** nonnull %10) #11
  br i1 %110, label %111, label %144

111:                                              ; preds = %107
  %112 = load %"class.base::ListValue"*, %"class.base::ListValue"** %10, align 8
  %113 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3
  %114 = call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__110unique_ptrIN4base5ValueENS2_14default_deleteIS5_EEEEEEbRKNS4_9ListValueEPNS2_6vectorIT_NS2_9allocatorISD_EEEE(%"class.base::ListValue"* dereferenceable(32) %112, %"class.std::__1::vector.14"* %113)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #11
  br i1 %114, label %115, label %145

115:                                              ; preds = %111
  %116 = bitcast %"class.base::Value"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  store %"class.base::Value"* null, %"class.base::Value"** %11, align 8
  %117 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 8, %"class.base::Value"** nonnull %11) #11
  br i1 %117, label %118, label %142

118:                                              ; preds = %115
  %119 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #11
  store i32 -1431655766, i32* %12, align 4
  %120 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %121 = call zeroext i1 @_ZNK4base5Value12GetAsIntegerEPi(%"class.base::Value"* %120, i32* nonnull %12) #11
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %124 = load i32*, i32** %123, align 8
  store i32* null, i32** %123, align 8
  %125 = icmp eq i32* %124, null
  br i1 %125, label %140, label %126

126:                                              ; preds = %122
  %127 = bitcast i32* %124 to i8*
  call void @_ZdlPv(i8* %127) #10
  br label %140

128:                                              ; preds = %118
  %129 = call i8* @_Znwm(i64 4) #10
  %130 = bitcast i8* %129 to i32*
  %131 = load i32, i32* %12, align 4
  store i32 %131, i32* %130, align 4
  %132 = ptrtoint i8* %129 to i64
  %133 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 4
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %133, i64 0, i32 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = bitcast %"class.std::__1::unique_ptr.27"* %133 to i64*
  store i64 %132, i64* %136, align 8
  %137 = icmp eq i32* %135, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %128
  %139 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %128, %138, %126, %122
  %141 = phi i1 [ false, %122 ], [ false, %126 ], [ true, %138 ], [ true, %128 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #11
  br label %142

142:                                              ; preds = %140, %115
  %143 = phi i1 [ true, %115 ], [ %141, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  br label %145

144:                                              ; preds = %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #11
  br label %145

145:                                              ; preds = %144, %104, %111, %142
  %146 = phi i1 [ %143, %142 ], [ false, %111 ], [ false, %104 ], [ false, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  br label %148

147:                                              ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  br label %148

148:                                              ; preds = %85, %145, %100, %93, %147
  %149 = phi i8* [ %94, %147 ], [ %94, %93 ], [ %94, %100 ], [ %94, %145 ], [ %86, %85 ]
  %150 = phi i1 [ false, %147 ], [ false, %93 ], [ false, %100 ], [ %146, %145 ], [ false, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #11
  br label %151

151:                                              ; preds = %148, %89
  %152 = phi i1 [ false, %89 ], [ %150, %148 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  br label %153

153:                                              ; preds = %48, %151
  %154 = phi i1 [ %152, %151 ], [ false, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %155

155:                                              ; preds = %2, %153
  %156 = phi i1 [ %154, %153 ], [ false, %2 ]
  ret i1 %156
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"**) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"*, %"class.base::ListValue"**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::unique_ptr.4"*) local_unnamed_addr #0 comdat {
  %3 = tail call i8* @_Znwm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %6 = bitcast %"class.std::__1::unique_ptr.4"* %1 to i8**
  store i8* %3, i8** %6, align 8
  %7 = icmp eq %"class.std::__1::vector"* %5, null
  %8 = bitcast i8* %3 to %"class.std::__1::vector"*
  br i1 %7, label %38, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = icmp eq %"class.std::__1::basic_string"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %16, %11
  br i1 %17, label %33, label %18

18:                                               ; preds = %13, %28
  %19 = phi %"class.std::__1::basic_string"* [ %20, %28 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 -1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %25, %18
  %29 = icmp eq %"class.std::__1::basic_string"* %20, %11
  br i1 %29, label %30, label %18

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %5 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %13
  %34 = phi i8* [ %32, %30 ], [ %14, %13 ]
  store %"class.std::__1::basic_string"* %11, %"class.std::__1::basic_string"** %15, align 8
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %33, %9
  %36 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @_ZdlPv(i8* %36) #10
  %37 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  br label %38

38:                                               ; preds = %2, %35
  %39 = phi %"class.std::__1::vector"* [ %8, %2 ], [ %37, %35 ]
  %40 = tail call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEE(%"class.base::ListValue"* dereferenceable(32) %0, %"class.std::__1::vector"* %39)
  br i1 %40, label %72, label %41

41:                                               ; preds = %38
  %42 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %4, align 8
  %43 = icmp eq %"class.std::__1::vector"* %42, null
  br i1 %43, label %72, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %45, align 8
  %47 = icmp eq %"class.std::__1::basic_string"* %46, null
  br i1 %47, label %70, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 1
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %50, align 8
  %52 = icmp eq %"class.std::__1::basic_string"* %51, %46
  br i1 %52, label %68, label %53

53:                                               ; preds = %48, %63
  %54 = phi %"class.std::__1::basic_string"* [ %55, %63 ], [ %51, %48 ]
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 -1
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %60, %53
  %64 = icmp eq %"class.std::__1::basic_string"* %55, %46
  br i1 %64, label %65, label %53

65:                                               ; preds = %63
  %66 = bitcast %"class.std::__1::vector"* %42 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %48
  %69 = phi i8* [ %67, %65 ], [ %49, %48 ]
  store %"class.std::__1::basic_string"* %46, %"class.std::__1::basic_string"** %50, align 8
  tail call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %68, %44
  %71 = bitcast %"class.std::__1::vector"* %42 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %70, %41, %38
  %73 = phi i1 [ true, %38 ], [ false, %41 ], [ false, %70 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__110unique_ptrIN4base5ValueENS2_14default_deleteIS5_EEEEEEbRKNS4_9ListValueEPNS2_6vectorIT_NS2_9allocatorISD_EEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::vector.14"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::unique_ptr.16", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.16"* %9, %7
  br i1 %10, label %21, label %11

11:                                               ; preds = %2, %19
  %12 = phi %"class.std::__1::unique_ptr.16"* [ %13, %19 ], [ %9, %2 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::Value"*, %"class.base::Value"** %14, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %14, align 8
  %16 = icmp eq %"class.base::Value"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %15) #11
  %18 = bitcast %"class.base::Value"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr.16"* %13, %7
  br i1 %20, label %21, label %11

21:                                               ; preds = %19, %2
  store %"class.std::__1::unique_ptr.16"* %7, %"class.std::__1::unique_ptr.16"** %8, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr.16"* %3 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0
  %26 = tail call %"class.std::__1::vector.54"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %25) #11
  %27 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %29 = icmp eq %"class.std::__1::vector.54"* %26, null
  %30 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  br i1 %29, label %40, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %26, i64 0, i32 0, i32 0
  %33 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %26, i64 0, i32 0, i32 1
  %35 = bitcast %"class.base::Value"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = ptrtoint %"class.base::Value"* %33 to i64
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 5
  br label %40

40:                                               ; preds = %21, %31
  %41 = phi %"class.base::Value"* [ %33, %31 ], [ null, %21 ]
  %42 = phi i64 [ %39, %31 ], [ 0, %21 ]
  %43 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %41, i64 %42
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::Value"* %41, %"class.base::Value"* %41, %"class.base::Value"* %43) #11
  %44 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %46 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  br i1 %29, label %57, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %26, i64 0, i32 0, i32 0
  %49 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %26, i64 0, i32 0, i32 1
  %51 = bitcast %"class.base::Value"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = ptrtoint %"class.base::Value"* %49 to i64
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 5
  %56 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %49, i64 %55
  br label %57

57:                                               ; preds = %40, %47
  %58 = phi %"class.base::Value"* [ %49, %47 ], [ null, %40 ]
  %59 = phi %"class.base::Value"* [ %56, %47 ], [ null, %40 ]
  %60 = phi i64 [ %55, %47 ], [ 0, %40 ]
  %61 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %58, i64 %60
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %58, %"class.base::Value"* %59, %"class.base::Value"* %61) #11
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #11
  %62 = load %"class.base::Value"*, %"class.base::Value"** %28, align 8
  %63 = load %"class.base::Value"*, %"class.base::Value"** %45, align 8
  %64 = icmp eq %"class.base::Value"* %62, %63
  br i1 %64, label %86, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.16"** %8 to i64*
  br label %68

68:                                               ; preds = %65, %81
  %69 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  %70 = call zeroext i1 @_ZN20json_schema_compiler4util12PopulateItemERKN4base5ValueEPNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEE(%"class.base::Value"* dereferenceable(32) %69, %"class.std::__1::unique_ptr.16"* nonnull %3) #11
  br i1 %70, label %71, label %86

71:                                               ; preds = %68
  %72 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %8, align 8
  %73 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %66, align 8
  %74 = icmp ult %"class.std::__1::unique_ptr.16"* %72, %73
  br i1 %74, label %75, label %80

75:                                               ; preds = %71
  %76 = load i64, i64* %24, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %23, align 8
  %77 = bitcast %"class.std::__1::unique_ptr.16"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %72, i64 1
  %79 = ptrtoint %"class.std::__1::unique_ptr.16"* %78 to i64
  store i64 %79, i64* %67, align 8
  br label %81

80:                                               ; preds = %71
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4base5ValueENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.14"* %1, %"class.std::__1::unique_ptr.16"* nonnull dereferenceable(8) %3) #11
  br label %81

81:                                               ; preds = %75, %80
  %82 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #11
  %83 = load %"class.base::Value"*, %"class.base::Value"** %28, align 8
  %84 = load %"class.base::Value"*, %"class.base::Value"** %45, align 8
  %85 = icmp eq %"class.base::Value"* %83, %84
  br i1 %85, label %86, label %68

86:                                               ; preds = %81, %68, %57
  %87 = phi i1 [ true, %57 ], [ true, %81 ], [ false, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  %88 = load %"class.base::Value"*, %"class.base::Value"** %23, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %23, align 8
  %89 = icmp eq %"class.base::Value"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %86
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %88) #11
  %91 = bitcast %"class.base::Value"* %88 to i8*
  call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  ret i1 %87
}

declare zeroext i1 @_ZNK4base5Value12GetAsIntegerEPi(%"class.base::Value"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::api::events::Rule"* @_ZN10extensions3api6events4Rule9FromValueERKN4base5ValueE(%"class.base::Value"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 72) #10
  %3 = bitcast i8* %2 to %"struct.extensions::api::events::Rule"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 72, i1 false) #11
  %4 = ptrtoint i8* %2 to i64
  %5 = tail call zeroext i1 @_ZN10extensions3api6events4Rule8PopulateERKN4base5ValueEPS2_(%"class.base::Value"* dereferenceable(32) %0, %"struct.extensions::api::events::Rule"* nonnull %3)
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN10extensions3api6events4RuleD2Ev(%"struct.extensions::api::events::Rule"* nonnull %3) #11
  tail call void @_ZdlPv(i8* nonnull %2) #10
  br label %7

7:                                                ; preds = %1, %6
  %8 = phi i64 [ 0, %6 ], [ %4, %1 ]
  %9 = inttoptr i64 %8 to %"struct.extensions::api::events::Rule"*
  ret %"struct.extensions::api::events::Rule"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::DictionaryValue"* @_ZNK10extensions3api6events4Rule7ToValueEv(%"struct.extensions::api::events::Rule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #10
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #11
  %4 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 32) #10
  %9 = bitcast i8* %8 to %"class.base::Value"*
  %10 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  tail call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %9, i8* %17, i64 %21) #11
  %22 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2, %"class.base::Value"* nonnull %9) #11
  br label %23

23:                                               ; preds = %1, %7
  %24 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8
  %26 = icmp eq %"class.std::__1::vector"* %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %23
  %28 = tail call i8* @_Znwm(i64 32) #10
  %29 = bitcast i8* %28 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %29) #11
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 1
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = icmp eq %"class.std::__1::basic_string"* %31, %33
  br i1 %34, label %39, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"class.std::__1::basic_string"* [ %37, %35 ], [ %31, %27 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %36, %"class.base::ListValue"* nonnull %29) #11
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 1
  %38 = icmp eq %"class.std::__1::basic_string"* %37, %33
  br i1 %38, label %39, label %35

39:                                               ; preds = %35, %27
  %40 = bitcast i8* %28 to %"class.base::Value"*
  %41 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4, %"class.base::Value"* nonnull %40) #11
  br label %42

42:                                               ; preds = %23, %39
  %43 = tail call i8* @_Znwm(i64 32) #10
  %44 = bitcast i8* %43 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %44) #11
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %44) #11
  %45 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %45, align 8
  %47 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 2, i32 0, i32 1
  %48 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %47, align 8
  %49 = icmp eq %"class.std::__1::unique_ptr.16"* %46, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %42, %50
  %51 = phi %"class.std::__1::unique_ptr.16"* [ %52, %50 ], [ %46, %42 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEEPNS3_9ListValueE(%"class.std::__1::unique_ptr.16"* dereferenceable(8) %51, %"class.base::ListValue"* nonnull %44) #11
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %51, i64 1
  %53 = icmp eq %"class.std::__1::unique_ptr.16"* %52, %48
  br i1 %53, label %54, label %50

54:                                               ; preds = %50, %42
  %55 = bitcast i8* %43 to %"class.base::Value"*
  %56 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i64 10, %"class.base::Value"* nonnull %55) #11
  %57 = tail call i8* @_Znwm(i64 32) #10
  %58 = bitcast i8* %57 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %58) #11
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %58) #11
  %59 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %59, align 8
  %61 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 3, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.16"* %60, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %54, %64
  %65 = phi %"class.std::__1::unique_ptr.16"* [ %66, %64 ], [ %60, %54 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEEPNS3_9ListValueE(%"class.std::__1::unique_ptr.16"* dereferenceable(8) %65, %"class.base::ListValue"* nonnull %58) #11
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %65, i64 1
  %67 = icmp eq %"class.std::__1::unique_ptr.16"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %54
  %69 = bitcast i8* %57 to %"class.base::Value"*
  %70 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7, %"class.base::Value"* nonnull %69) #11
  %71 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = icmp eq i32* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %68
  %75 = tail call i8* @_Znwm(i64 32) #10
  %76 = bitcast i8* %75 to %"class.base::Value"*
  %77 = load i32, i32* %72, align 4
  tail call void @_ZN4base5ValueC1Ei(%"class.base::Value"* nonnull %76, i32 %77) #11
  %78 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 8, %"class.base::Value"* nonnull %76) #11
  br label %79

79:                                               ; preds = %74, %68
  ret %"class.base::DictionaryValue"* %3
}

declare %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events5Event8AddRules6ParamsC2Ev(%"struct.extensions::api::events::Event::AddRules::Params"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.extensions::api::events::Event::AddRules::Params"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  %3 = getelementptr inbounds %"struct.extensions::api::events::Event::AddRules::Params", %"struct.extensions::api::events::Event::AddRules::Params"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::vector.73"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events5Event8AddRules6ParamsD2Ev(%"struct.extensions::api::events::Event::AddRules::Params"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::events::Event::AddRules::Params", %"struct.extensions::api::events::Event::AddRules::Params"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %3, align 8
  %5 = icmp eq %"struct.extensions::api::events::Rule"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.extensions::api::events::Rule"* %4 to i8*
  %8 = getelementptr inbounds %"struct.extensions::api::events::Event::AddRules::Params", %"struct.extensions::api::events::Event::AddRules::Params"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %8, align 8
  %10 = icmp eq %"struct.extensions::api::events::Rule"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.extensions::api::events::Rule"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %12, i64 -1
  tail call void @_ZN10extensions3api6events4RuleD2Ev(%"struct.extensions::api::events::Rule"* %13) #11
  %14 = icmp eq %"struct.extensions::api::events::Rule"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.73"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.extensions::api::events::Rule"* %4, %"struct.extensions::api::events::Rule"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %1, %18
  %21 = bitcast %"struct.extensions::api::events::Event::AddRules::Params"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.extensions::api::events::Event::AddRules::Params", %"struct.extensions::api::events::Event::AddRules::Params"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %20, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::api::events::Event::AddRules::Params"* @_ZN10extensions3api6events5Event8AddRules6Params6CreateERKN4base9ListValueE(%"class.base::ListValue"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Value"*, align 8
  %3 = alloca %"class.base::Value"*, align 8
  %4 = alloca %"class.base::Value"*, align 8
  %5 = alloca %"class.base::ListValue"*, align 8
  %6 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 7
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %1
  %10 = tail call dereferenceable(24) %"class.std::__1::vector.54"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #12
  unreachable

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::ListValue"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp eq i64 %16, 96
  br i1 %17, label %18, label %105

18:                                               ; preds = %11
  %19 = tail call i8* @_Znwm(i64 56) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds i8, i8* %19, i64 32
  %21 = bitcast i8* %20 to %"class.std::__1::vector.73"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #11
  %22 = ptrtoint i8* %19 to i64
  %23 = bitcast %"class.base::Value"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  store %"class.base::Value"* null, %"class.base::Value"** %2, align 8
  %24 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 0, %"class.base::Value"** nonnull %2) #11
  br i1 %24, label %25, label %71

25:                                               ; preds = %18
  %26 = load %"class.base::Value"*, %"class.base::Value"** %2, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %71, label %31

31:                                               ; preds = %25
  %32 = bitcast i8* %19 to %"class.std::__1::basic_string"*
  %33 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %26, %"class.std::__1::basic_string"* nonnull %32) #11
  br i1 %33, label %34, label %71

34:                                               ; preds = %31
  %35 = bitcast %"class.base::Value"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  store %"class.base::Value"* null, %"class.base::Value"** %3, align 8
  %36 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 1, %"class.base::Value"** nonnull %3) #11
  br i1 %36, label %37, label %65

37:                                               ; preds = %34
  %38 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %39 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %65, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds i8, i8* %19, i64 24
  %45 = bitcast i8* %44 to i32*
  %46 = call zeroext i1 @_ZNK4base5Value12GetAsIntegerEPi(%"class.base::Value"* %38, i32* %45) #11
  br i1 %46, label %47, label %65

47:                                               ; preds = %43
  %48 = bitcast %"class.base::Value"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  store %"class.base::Value"* null, %"class.base::Value"** %4, align 8
  %49 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 2, %"class.base::Value"** nonnull %4) #11
  br i1 %49, label %50, label %66

50:                                               ; preds = %47
  %51 = load %"class.base::Value"*, %"class.base::Value"** %4, align 8
  %52 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %66, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.base::ListValue"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #11
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %5, align 8
  %58 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %51, %"class.base::ListValue"** nonnull %5) #11
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #11
  br label %66

60:                                               ; preds = %56
  %61 = load %"class.base::ListValue"*, %"class.base::ListValue"** %5, align 8
  %62 = call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListIN10extensions3api6events4RuleEEEbRKN4base9ListValueEPNSt3__16vectorIT_NSA_9allocatorISC_EEEE(%"class.base::ListValue"* dereferenceable(32) %61, %"class.std::__1::vector.73"* %21)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #11
  %63 = select i1 %62, i64 %22, i64 0
  %64 = select i1 %62, i64 0, i64 %22
  br label %66

65:                                               ; preds = %43, %37, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br label %71

66:                                               ; preds = %60, %59, %50, %47
  %67 = phi i64 [ 0, %59 ], [ 0, %50 ], [ 0, %47 ], [ %63, %60 ]
  %68 = phi i64 [ %22, %59 ], [ %22, %50 ], [ %22, %47 ], [ %64, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  %69 = inttoptr i64 %68 to %"struct.extensions::api::events::Event::AddRules::Params"*
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %105, label %73

71:                                               ; preds = %18, %25, %31, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  %72 = bitcast i8* %19 to %"struct.extensions::api::events::Event::AddRules::Params"*
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi %"struct.extensions::api::events::Event::AddRules::Params"* [ %69, %66 ], [ %72, %71 ]
  %75 = phi i64 [ %68, %66 ], [ %22, %71 ]
  %76 = phi i64 [ %67, %66 ], [ 0, %71 ]
  %77 = getelementptr inbounds %"struct.extensions::api::events::Event::AddRules::Params", %"struct.extensions::api::events::Event::AddRules::Params"* %74, i64 0, i32 2
  %78 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %77, i64 0, i32 0, i32 0
  %79 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %78, align 8
  %80 = icmp eq %"struct.extensions::api::events::Rule"* %79, null
  br i1 %80, label %95, label %81

81:                                               ; preds = %73
  %82 = bitcast %"struct.extensions::api::events::Rule"* %79 to i8*
  %83 = getelementptr inbounds %"struct.extensions::api::events::Event::AddRules::Params", %"struct.extensions::api::events::Event::AddRules::Params"* %74, i64 0, i32 2, i32 0, i32 1
  %84 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %83, align 8
  %85 = icmp eq %"struct.extensions::api::events::Rule"* %84, %79
  br i1 %85, label %93, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.extensions::api::events::Rule"* [ %88, %86 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %87, i64 -1
  call void @_ZN10extensions3api6events4RuleD2Ev(%"struct.extensions::api::events::Rule"* %88) #11
  %89 = icmp eq %"struct.extensions::api::events::Rule"* %88, %79
  br i1 %89, label %90, label %86

90:                                               ; preds = %86
  %91 = bitcast %"class.std::__1::vector.73"* %77 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %81
  %94 = phi i8* [ %92, %90 ], [ %82, %81 ]
  store %"struct.extensions::api::events::Rule"* %79, %"struct.extensions::api::events::Rule"** %83, align 8
  call void @_ZdlPv(i8* %94) #10
  br label %95

95:                                               ; preds = %93, %73
  %96 = inttoptr i64 %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.extensions::api::events::Event::AddRules::Params", %"struct.extensions::api::events::Event::AddRules::Params"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %100, %95
  %104 = inttoptr i64 %75 to i8*
  call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %103, %66, %11
  %106 = phi i64 [ 0, %11 ], [ %67, %66 ], [ %76, %103 ]
  %107 = inttoptr i64 %106 to %"struct.extensions::api::events::Event::AddRules::Params"*
  ret %"struct.extensions::api::events::Event::AddRules::Params"* %107
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"*, i64, %"class.base::Value"**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListIN10extensions3api6events4RuleEEEbRKN4base9ListValueEPNSt3__16vectorIT_NSA_9allocatorISC_EEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::vector.73"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.base::DictionaryValue"*, align 8
  %4 = alloca %"struct.extensions::api::events::Rule", align 8
  %5 = alloca %"struct.extensions::api::events::Rule", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %1, i64 0, i32 0, i32 0
  %9 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %1, i64 0, i32 0, i32 1
  %11 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %10, align 8
  %12 = icmp eq %"struct.extensions::api::events::Rule"* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %2, %13
  %14 = phi %"struct.extensions::api::events::Rule"* [ %15, %13 ], [ %11, %2 ]
  %15 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %14, i64 -1
  tail call void @_ZN10extensions3api6events4RuleD2Ev(%"struct.extensions::api::events::Rule"* %15) #11
  %16 = icmp eq %"struct.extensions::api::events::Rule"* %15, %9
  br i1 %16, label %17, label %13

17:                                               ; preds = %13, %2
  store %"struct.extensions::api::events::Rule"* %9, %"struct.extensions::api::events::Rule"** %10, align 8
  %18 = bitcast %"struct.extensions::api::events::Rule"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 72, i1 false) #11
  %19 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0
  %20 = tail call %"class.std::__1::vector.54"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %19) #11
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %23 = icmp eq %"class.std::__1::vector.54"* %20, null
  %24 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  br i1 %23, label %34, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %20, i64 0, i32 0, i32 0
  %27 = load %"class.base::Value"*, %"class.base::Value"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %20, i64 0, i32 0, i32 1
  %29 = bitcast %"class.base::Value"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = ptrtoint %"class.base::Value"* %27 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 5
  br label %34

34:                                               ; preds = %17, %25
  %35 = phi %"class.base::Value"* [ %27, %25 ], [ null, %17 ]
  %36 = phi i64 [ %33, %25 ], [ 0, %17 ]
  %37 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %35, i64 %36
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::Value"* %35, %"class.base::Value"* %35, %"class.base::Value"* %37) #11
  %38 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  br i1 %23, label %51, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %20, i64 0, i32 0, i32 0
  %43 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %20, i64 0, i32 0, i32 1
  %45 = bitcast %"class.base::Value"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = ptrtoint %"class.base::Value"* %43 to i64
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 5
  %50 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %43, i64 %49
  br label %51

51:                                               ; preds = %34, %41
  %52 = phi %"class.base::Value"* [ %43, %41 ], [ null, %34 ]
  %53 = phi %"class.base::Value"* [ %50, %41 ], [ null, %34 ]
  %54 = phi i64 [ %49, %41 ], [ 0, %34 ]
  %55 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %52, i64 %54
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::Value"* %52, %"class.base::Value"* %53, %"class.base::Value"* %55) #11
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #11
  %56 = load %"class.base::Value"*, %"class.base::Value"** %22, align 8
  %57 = load %"class.base::Value"*, %"class.base::Value"** %39, align 8
  %58 = icmp eq %"class.base::Value"* %56, %57
  br i1 %58, label %137, label %59

59:                                               ; preds = %51
  %60 = bitcast %"class.base::DictionaryValue"** %3 to i8*
  %61 = bitcast %"struct.extensions::api::events::Rule"* %4 to i8*
  %62 = bitcast %"class.base::DictionaryValue"** %3 to %"class.base::Value"**
  %63 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"struct.extensions::api::events::Rule"* %5 to i64*
  %66 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %5, i64 0, i32 1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::unique_ptr.4"* %66 to i64*
  %69 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %5, i64 0, i32 2
  %70 = bitcast %"class.std::__1::vector.14"* %69 to i64*
  %71 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %5, i64 0, i32 2, i32 0, i32 1
  %72 = bitcast %"class.std::__1::unique_ptr.16"** %71 to i64*
  %73 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %5, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %74 = bitcast %"class.std::__1::unique_ptr.16"** %73 to i64*
  %75 = bitcast %"class.std::__1::vector.14"* %69 to i8*
  %76 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %5, i64 0, i32 3
  %77 = bitcast %"class.std::__1::vector.14"* %76 to i64*
  %78 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %5, i64 0, i32 3, i32 0, i32 1
  %79 = bitcast %"class.std::__1::unique_ptr.16"** %78 to i64*
  %80 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %5, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr.16"** %80 to i64*
  %82 = bitcast %"class.std::__1::vector.14"* %76 to i8*
  %83 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %5, i64 0, i32 4
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr.27"* %83 to i64*
  %86 = bitcast %"struct.extensions::api::events::Rule"** %10 to i64*
  br label %87

87:                                               ; preds = %59, %131
  %88 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %3, align 8
  %89 = call zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"* %88, %"class.base::DictionaryValue"** nonnull %3) #11
  br i1 %89, label %90, label %136

90:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %61) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 72, i1 false) #11
  %91 = load %"class.base::Value"*, %"class.base::Value"** %62, align 8
  %92 = call zeroext i1 @_ZN10extensions3api6events4Rule8PopulateERKN4base5ValueEPS2_(%"class.base::Value"* dereferenceable(32) %91, %"struct.extensions::api::events::Rule"* nonnull %4) #11
  br i1 %92, label %93, label %98

93:                                               ; preds = %90
  %94 = call dereferenceable(72) %"struct.extensions::api::events::Rule"* @_ZN10extensions3api6events4RuleaSEOS2_(%"struct.extensions::api::events::Rule"* nonnull %5, %"struct.extensions::api::events::Rule"* nonnull dereferenceable(72) %4) #11
  call void @_ZN10extensions3api6events4RuleD2Ev(%"struct.extensions::api::events::Rule"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %61) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  %95 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %10, align 8
  %96 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %63, align 8
  %97 = icmp ult %"struct.extensions::api::events::Rule"* %95, %96
  br i1 %97, label %99, label %130

98:                                               ; preds = %90
  call void @_ZN10extensions3api6events4RuleD2Ev(%"struct.extensions::api::events::Rule"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %61) #11
  br label %136

99:                                               ; preds = %93
  %100 = load i64, i64* %65, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %64, align 8
  %101 = bitcast %"struct.extensions::api::events::Rule"* %95 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %95, i64 0, i32 1
  %103 = load i64, i64* %68, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %67, align 8
  %104 = bitcast %"class.std::__1::unique_ptr.4"* %102 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %95, i64 0, i32 2
  %106 = bitcast %"class.std::__1::vector.14"* %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #11
  %107 = load i64, i64* %70, align 8
  %108 = bitcast %"class.std::__1::vector.14"* %105 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i64, i64* %72, align 8
  %110 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %95, i64 0, i32 2, i32 0, i32 1
  %111 = bitcast %"class.std::__1::unique_ptr.16"** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load i64, i64* %74, align 8
  %113 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %95, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %114 = bitcast %"class.std::__1::unique_ptr.16"** %113 to i64*
  store i64 %112, i64* %114, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #11
  %115 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %95, i64 0, i32 3
  %116 = bitcast %"class.std::__1::vector.14"* %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #11
  %117 = load i64, i64* %77, align 8
  %118 = bitcast %"class.std::__1::vector.14"* %115 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load i64, i64* %79, align 8
  %120 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %95, i64 0, i32 3, i32 0, i32 1
  %121 = bitcast %"class.std::__1::unique_ptr.16"** %120 to i64*
  store i64 %119, i64* %121, align 8
  %122 = load i64, i64* %81, align 8
  %123 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %95, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.16"** %123 to i64*
  store i64 %122, i64* %124, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #11
  %125 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %95, i64 0, i32 4
  %126 = load i64, i64* %85, align 8
  store i32* null, i32** %84, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.27"* %125 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %95, i64 1
  %129 = ptrtoint %"struct.extensions::api::events::Rule"* %128 to i64
  store i64 %129, i64* %86, align 8
  br label %131

130:                                              ; preds = %93
  call void @_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.73"* %1, %"struct.extensions::api::events::Rule"* nonnull dereferenceable(72) %5) #11
  br label %131

131:                                              ; preds = %99, %130
  %132 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #11
  %133 = load %"class.base::Value"*, %"class.base::Value"** %22, align 8
  %134 = load %"class.base::Value"*, %"class.base::Value"** %39, align 8
  %135 = icmp eq %"class.base::Value"* %133, %134
  br i1 %135, label %137, label %87

136:                                              ; preds = %87, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  br label %137

137:                                              ; preds = %131, %51, %136
  %138 = phi i1 [ false, %136 ], [ true, %51 ], [ true, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN10extensions3api6events4RuleD2Ev(%"struct.extensions::api::events::Rule"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #11
  ret i1 %138
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events5Event8AddRules7Results6CreateERKNSt3__16vectorINS1_4RuleENS5_9allocatorIS7_EEEE(%"class.std::__1::vector.54"* noalias sret, %"class.std::__1::vector.73"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::Value", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  tail call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.54"* %0, i64 1)
  %7 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  %8 = tail call i8* @_Znwm(i64 32) #10
  %9 = bitcast i8* %8 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %9) #11
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %1, i64 0, i32 0, i32 1
  %13 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %12, align 8
  %14 = icmp eq %"struct.extensions::api::events::Rule"* %11, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %2, %15
  %16 = phi %"struct.extensions::api::events::Rule"* [ %19, %15 ], [ %11, %2 ]
  %17 = tail call %"class.base::DictionaryValue"* @_ZNK10extensions3api6events4Rule7ToValueEv(%"struct.extensions::api::events::Rule"* %16) #11
  %18 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %17, i64 0, i32 0
  tail call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %9, %"class.base::Value"* %18) #11
  %19 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %16, i64 1
  %20 = icmp eq %"struct.extensions::api::events::Rule"* %19, %13
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %2
  %22 = bitcast i8* %8 to %"class.base::Value"*
  call void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* nonnull sret %3, %"class.base::Value"* nonnull %22) #11
  %23 = load %"class.base::Value"*, %"class.base::Value"** %4, align 8
  %24 = load %"class.base::Value"*, %"class.base::Value"** %5, align 8
  %25 = icmp ult %"class.base::Value"* %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %23, %"class.base::Value"* nonnull dereferenceable(32) %3) #11
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %23, i64 1
  %28 = ptrtoint %"class.base::Value"* %27 to i64
  %29 = bitcast %"class.base::Value"** %4 to i64*
  store i64 %28, i64* %29, align 8
  br label %31

30:                                               ; preds = %21
  call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.54"* %0, %"class.base::Value"* nonnull dereferenceable(32) %3) #11
  br label %31

31:                                               ; preds = %26, %30
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.54"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.base::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.base::Value"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.base::Value"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"class.base::Value"*
  %24 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %23, i64 %20
  %25 = ptrtoint %"class.base::Value"* %24 to i64
  %26 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %23, i64 %1
  %27 = ptrtoint %"class.base::Value"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.base::Value"*
  %29 = icmp eq %"class.base::Value"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.base::Value"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.base::Value"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %31, i64 -1
  %34 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %32, i64 -1
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %33, %"class.base::Value"* dereferenceable(32) %34) #11
  %35 = icmp eq %"class.base::Value"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.base::Value"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.base::Value"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.base::Value"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.base::Value"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.base::Value"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.base::Value"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %48, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %49) #11
  %50 = icmp eq %"class.base::Value"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

declare void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events5Event8GetRules6ParamsC2Ev(%"struct.extensions::api::events::Event::GetRules::Params"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.extensions::api::events::Event::GetRules::Params"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  %3 = getelementptr inbounds %"struct.extensions::api::events::Event::GetRules::Params", %"struct.extensions::api::events::Event::GetRules::Params"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::unique_ptr.4"* %3 to i64*
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events5Event8GetRules6ParamsD2Ev(%"struct.extensions::api::events::Event::GetRules::Params"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::events::Event::GetRules::Params", %"struct.extensions::api::events::Event::GetRules::Params"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %2, align 8
  %4 = icmp eq %"class.std::__1::vector"* %3, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, %7
  br i1 %13, label %29, label %14

14:                                               ; preds = %9, %24
  %15 = phi %"class.std::__1::basic_string"* [ %16, %24 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %21, %14
  %25 = icmp eq %"class.std::__1::basic_string"* %16, %7
  br i1 %25, label %26, label %14

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %3 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %9
  %30 = phi i8* [ %28, %26 ], [ %10, %9 ]
  store %"class.std::__1::basic_string"* %7, %"class.std::__1::basic_string"** %11, align 8
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %29, %5
  %32 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %1, %31
  %34 = bitcast %"struct.extensions::api::events::Event::GetRules::Params"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.extensions::api::events::Event::GetRules::Params", %"struct.extensions::api::events::Event::GetRules::Params"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %33, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::api::events::Event::GetRules::Params"* @_ZN10extensions3api6events5Event8GetRules6Params6CreateERKN4base9ListValueE(%"class.base::ListValue"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.85", align 8
  %3 = alloca %"class.base::Value"*, align 8
  %4 = alloca %"class.base::Value"*, align 8
  %5 = alloca %"class.base::Value"*, align 8
  %6 = alloca %"class.base::ListValue"*, align 8
  %7 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 7
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %1
  %11 = tail call dereferenceable(24) %"class.std::__1::vector.54"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #12
  unreachable

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::ListValue"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 5
  %19 = and i64 %18, -2
  %20 = icmp eq i64 %19, 2
  br i1 %20, label %21, label %84

21:                                               ; preds = %12
  %22 = bitcast %"class.std::__1::unique_ptr.85"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %2, i64 0, i32 0, i32 0, i32 0
  %24 = tail call i8* @_Znwm(i64 40) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #11
  %25 = getelementptr inbounds i8, i8* %24, i64 32
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = ptrtoint i8* %24 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.85"* %2 to i64*
  store i64 %27, i64* %28, align 8
  %29 = bitcast %"class.base::Value"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.base::Value"* null, %"class.base::Value"** %3, align 8
  %30 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 0, %"class.base::Value"** nonnull %3) #11
  br i1 %30, label %31, label %77

31:                                               ; preds = %21
  %32 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %33 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %77, label %37

37:                                               ; preds = %31
  %38 = bitcast i8* %24 to %"class.std::__1::basic_string"*
  %39 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %32, %"class.std::__1::basic_string"* nonnull %38) #11
  br i1 %39, label %40, label %77

40:                                               ; preds = %37
  %41 = bitcast %"class.base::Value"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  store %"class.base::Value"* null, %"class.base::Value"** %4, align 8
  %42 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 1, %"class.base::Value"** nonnull %4) #11
  br i1 %42, label %43, label %75

43:                                               ; preds = %40
  %44 = load %"class.base::Value"*, %"class.base::Value"** %4, align 8
  %45 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %75, label %49

49:                                               ; preds = %43
  %50 = load %"struct.extensions::api::events::Event::GetRules::Params"*, %"struct.extensions::api::events::Event::GetRules::Params"** %23, align 8
  %51 = getelementptr inbounds %"struct.extensions::api::events::Event::GetRules::Params", %"struct.extensions::api::events::Event::GetRules::Params"* %50, i64 0, i32 1
  %52 = call zeroext i1 @_ZNK4base5Value12GetAsIntegerEPi(%"class.base::Value"* %44, i32* %51) #11
  br i1 %52, label %53, label %75

53:                                               ; preds = %49
  %54 = bitcast %"class.base::Value"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.base::Value"* null, %"class.base::Value"** %5, align 8
  %55 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 2, %"class.base::Value"** nonnull %5) #11
  br i1 %55, label %56, label %71

56:                                               ; preds = %53
  %57 = load %"class.base::Value"*, %"class.base::Value"** %5, align 8
  %58 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i8
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %56
  %63 = bitcast %"class.base::ListValue"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %6, align 8
  %64 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %57, %"class.base::ListValue"** nonnull %6) #11
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br label %73

66:                                               ; preds = %62
  %67 = load %"class.base::ListValue"*, %"class.base::ListValue"** %6, align 8
  %68 = load %"struct.extensions::api::events::Event::GetRules::Params"*, %"struct.extensions::api::events::Event::GetRules::Params"** %23, align 8
  %69 = getelementptr inbounds %"struct.extensions::api::events::Event::GetRules::Params", %"struct.extensions::api::events::Event::GetRules::Params"* %68, i64 0, i32 2
  %70 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEE(%"class.base::ListValue"* dereferenceable(32) %67, %"class.std::__1::unique_ptr.4"* %69)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br i1 %70, label %71, label %73

71:                                               ; preds = %66, %56, %53
  %72 = load i64, i64* %28, align 8
  store %"struct.extensions::api::events::Event::GetRules::Params"* null, %"struct.extensions::api::events::Event::GetRules::Params"** %23, align 8
  br label %73

73:                                               ; preds = %66, %65, %71
  %74 = phi i64 [ %72, %71 ], [ 0, %65 ], [ 0, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  br label %75

75:                                               ; preds = %40, %43, %49, %73
  %76 = phi i64 [ %74, %73 ], [ 0, %49 ], [ 0, %43 ], [ 0, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  br label %77

77:                                               ; preds = %21, %31, %37, %75
  %78 = phi i64 [ %76, %75 ], [ 0, %37 ], [ 0, %31 ], [ 0, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  %79 = load %"struct.extensions::api::events::Event::GetRules::Params"*, %"struct.extensions::api::events::Event::GetRules::Params"** %23, align 8
  store %"struct.extensions::api::events::Event::GetRules::Params"* null, %"struct.extensions::api::events::Event::GetRules::Params"** %23, align 8
  %80 = icmp eq %"struct.extensions::api::events::Event::GetRules::Params"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.std::__1::unique_ptr.85"* %2 to %"struct.std::__1::default_delete.89"*
  call void @_ZNKSt3__114default_deleteIN10extensions3api6events5Event8GetRules6ParamsEEclEPS6_(%"struct.std::__1::default_delete.89"* nonnull %82, %"struct.extensions::api::events::Event::GetRules::Params"* nonnull %79) #11
  br label %83

83:                                               ; preds = %77, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %84

84:                                               ; preds = %12, %83
  %85 = phi i64 [ %78, %83 ], [ 0, %12 ]
  %86 = inttoptr i64 %85 to %"struct.extensions::api::events::Event::GetRules::Params"*
  ret %"struct.extensions::api::events::Event::GetRules::Params"* %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events5Event8GetRules7Results6CreateERKNSt3__16vectorINS1_4RuleENS5_9allocatorIS7_EEEE(%"class.std::__1::vector.54"* noalias sret, %"class.std::__1::vector.73"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::Value", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  tail call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.54"* %0, i64 1)
  %7 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  %8 = tail call i8* @_Znwm(i64 32) #10
  %9 = bitcast i8* %8 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %9) #11
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %1, i64 0, i32 0, i32 1
  %13 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %12, align 8
  %14 = icmp eq %"struct.extensions::api::events::Rule"* %11, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %2, %15
  %16 = phi %"struct.extensions::api::events::Rule"* [ %19, %15 ], [ %11, %2 ]
  %17 = tail call %"class.base::DictionaryValue"* @_ZNK10extensions3api6events4Rule7ToValueEv(%"struct.extensions::api::events::Rule"* %16) #11
  %18 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %17, i64 0, i32 0
  tail call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %9, %"class.base::Value"* %18) #11
  %19 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %16, i64 1
  %20 = icmp eq %"struct.extensions::api::events::Rule"* %19, %13
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %2
  %22 = bitcast i8* %8 to %"class.base::Value"*
  call void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* nonnull sret %3, %"class.base::Value"* nonnull %22) #11
  %23 = load %"class.base::Value"*, %"class.base::Value"** %4, align 8
  %24 = load %"class.base::Value"*, %"class.base::Value"** %5, align 8
  %25 = icmp ult %"class.base::Value"* %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %23, %"class.base::Value"* nonnull dereferenceable(32) %3) #11
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %23, i64 1
  %28 = ptrtoint %"class.base::Value"* %27 to i64
  %29 = bitcast %"class.base::Value"** %4 to i64*
  store i64 %28, i64* %29, align 8
  br label %31

30:                                               ; preds = %21
  call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.54"* %0, %"class.base::Value"* nonnull dereferenceable(32) %3) #11
  br label %31

31:                                               ; preds = %26, %30
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events5Event11RemoveRules6ParamsC2Ev(%"struct.extensions::api::events::Event::RemoveRules::Params"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.extensions::api::events::Event::RemoveRules::Params"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  %3 = getelementptr inbounds %"struct.extensions::api::events::Event::RemoveRules::Params", %"struct.extensions::api::events::Event::RemoveRules::Params"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::unique_ptr.4"* %3 to i64*
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events5Event11RemoveRules6ParamsD2Ev(%"struct.extensions::api::events::Event::RemoveRules::Params"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::events::Event::RemoveRules::Params", %"struct.extensions::api::events::Event::RemoveRules::Params"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %2, align 8
  %4 = icmp eq %"class.std::__1::vector"* %3, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, %7
  br i1 %13, label %29, label %14

14:                                               ; preds = %9, %24
  %15 = phi %"class.std::__1::basic_string"* [ %16, %24 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %21, %14
  %25 = icmp eq %"class.std::__1::basic_string"* %16, %7
  br i1 %25, label %26, label %14

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %3 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %9
  %30 = phi i8* [ %28, %26 ], [ %10, %9 ]
  store %"class.std::__1::basic_string"* %7, %"class.std::__1::basic_string"** %11, align 8
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %29, %5
  %32 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %1, %31
  %34 = bitcast %"struct.extensions::api::events::Event::RemoveRules::Params"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.extensions::api::events::Event::RemoveRules::Params", %"struct.extensions::api::events::Event::RemoveRules::Params"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %33, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::api::events::Event::RemoveRules::Params"* @_ZN10extensions3api6events5Event11RemoveRules6Params6CreateERKN4base9ListValueE(%"class.base::ListValue"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.91", align 8
  %3 = alloca %"class.base::Value"*, align 8
  %4 = alloca %"class.base::Value"*, align 8
  %5 = alloca %"class.base::Value"*, align 8
  %6 = alloca %"class.base::ListValue"*, align 8
  %7 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 7
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %1
  %11 = tail call dereferenceable(24) %"class.std::__1::vector.54"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #12
  unreachable

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::ListValue"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 5
  %19 = and i64 %18, -2
  %20 = icmp eq i64 %19, 2
  br i1 %20, label %21, label %84

21:                                               ; preds = %12
  %22 = bitcast %"class.std::__1::unique_ptr.91"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91"* %2, i64 0, i32 0, i32 0, i32 0
  %24 = tail call i8* @_Znwm(i64 40) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #11
  %25 = getelementptr inbounds i8, i8* %24, i64 32
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = ptrtoint i8* %24 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.91"* %2 to i64*
  store i64 %27, i64* %28, align 8
  %29 = bitcast %"class.base::Value"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.base::Value"* null, %"class.base::Value"** %3, align 8
  %30 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 0, %"class.base::Value"** nonnull %3) #11
  br i1 %30, label %31, label %77

31:                                               ; preds = %21
  %32 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %33 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %77, label %37

37:                                               ; preds = %31
  %38 = bitcast i8* %24 to %"class.std::__1::basic_string"*
  %39 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %32, %"class.std::__1::basic_string"* nonnull %38) #11
  br i1 %39, label %40, label %77

40:                                               ; preds = %37
  %41 = bitcast %"class.base::Value"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  store %"class.base::Value"* null, %"class.base::Value"** %4, align 8
  %42 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 1, %"class.base::Value"** nonnull %4) #11
  br i1 %42, label %43, label %75

43:                                               ; preds = %40
  %44 = load %"class.base::Value"*, %"class.base::Value"** %4, align 8
  %45 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %75, label %49

49:                                               ; preds = %43
  %50 = load %"struct.extensions::api::events::Event::RemoveRules::Params"*, %"struct.extensions::api::events::Event::RemoveRules::Params"** %23, align 8
  %51 = getelementptr inbounds %"struct.extensions::api::events::Event::RemoveRules::Params", %"struct.extensions::api::events::Event::RemoveRules::Params"* %50, i64 0, i32 1
  %52 = call zeroext i1 @_ZNK4base5Value12GetAsIntegerEPi(%"class.base::Value"* %44, i32* %51) #11
  br i1 %52, label %53, label %75

53:                                               ; preds = %49
  %54 = bitcast %"class.base::Value"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.base::Value"* null, %"class.base::Value"** %5, align 8
  %55 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 2, %"class.base::Value"** nonnull %5) #11
  br i1 %55, label %56, label %71

56:                                               ; preds = %53
  %57 = load %"class.base::Value"*, %"class.base::Value"** %5, align 8
  %58 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i8
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %56
  %63 = bitcast %"class.base::ListValue"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %6, align 8
  %64 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %57, %"class.base::ListValue"** nonnull %6) #11
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br label %73

66:                                               ; preds = %62
  %67 = load %"class.base::ListValue"*, %"class.base::ListValue"** %6, align 8
  %68 = load %"struct.extensions::api::events::Event::RemoveRules::Params"*, %"struct.extensions::api::events::Event::RemoveRules::Params"** %23, align 8
  %69 = getelementptr inbounds %"struct.extensions::api::events::Event::RemoveRules::Params", %"struct.extensions::api::events::Event::RemoveRules::Params"* %68, i64 0, i32 2
  %70 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEE(%"class.base::ListValue"* dereferenceable(32) %67, %"class.std::__1::unique_ptr.4"* %69)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br i1 %70, label %71, label %73

71:                                               ; preds = %66, %56, %53
  %72 = load i64, i64* %28, align 8
  store %"struct.extensions::api::events::Event::RemoveRules::Params"* null, %"struct.extensions::api::events::Event::RemoveRules::Params"** %23, align 8
  br label %73

73:                                               ; preds = %66, %65, %71
  %74 = phi i64 [ %72, %71 ], [ 0, %65 ], [ 0, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  br label %75

75:                                               ; preds = %40, %43, %49, %73
  %76 = phi i64 [ %74, %73 ], [ 0, %49 ], [ 0, %43 ], [ 0, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  br label %77

77:                                               ; preds = %21, %31, %37, %75
  %78 = phi i64 [ %76, %75 ], [ 0, %37 ], [ 0, %31 ], [ 0, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  %79 = load %"struct.extensions::api::events::Event::RemoveRules::Params"*, %"struct.extensions::api::events::Event::RemoveRules::Params"** %23, align 8
  store %"struct.extensions::api::events::Event::RemoveRules::Params"* null, %"struct.extensions::api::events::Event::RemoveRules::Params"** %23, align 8
  %80 = icmp eq %"struct.extensions::api::events::Event::RemoveRules::Params"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.std::__1::unique_ptr.91"* %2 to %"struct.std::__1::default_delete.95"*
  call void @_ZNKSt3__114default_deleteIN10extensions3api6events5Event11RemoveRules6ParamsEEclEPS6_(%"struct.std::__1::default_delete.95"* nonnull %82, %"struct.extensions::api::events::Event::RemoveRules::Params"* nonnull %79) #11
  br label %83

83:                                               ; preds = %77, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %84

84:                                               ; preds = %12, %83
  %85 = phi i64 [ %78, %83 ], [ 0, %12 ]
  %86 = inttoptr i64 %85 to %"struct.extensions::api::events::Event::RemoveRules::Params"*
  ret %"struct.extensions::api::events::Event::RemoveRules::Params"* %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api6events5Event11RemoveRules7Results6CreateEv(%"class.std::__1::vector.54"* noalias nocapture sret) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::vector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.54"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() local_unnamed_addr #5 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #12
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::vector"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %7
  br i1 %10, label %23, label %11

11:                                               ; preds = %2, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %2 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %7
  br i1 %22, label %23, label %11

23:                                               ; preds = %21, %2
  store %"class.std::__1::basic_string"* %7, %"class.std::__1::basic_string"** %8, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #11
  %26 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0
  %27 = tail call %"class.std::__1::vector.54"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %26) #11
  %28 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %30 = icmp eq %"class.std::__1::vector.54"* %27, null
  %31 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  br i1 %30, label %41, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %27, i64 0, i32 0, i32 0
  %34 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %27, i64 0, i32 0, i32 1
  %36 = bitcast %"class.base::Value"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = ptrtoint %"class.base::Value"* %34 to i64
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 5
  br label %41

41:                                               ; preds = %23, %32
  %42 = phi %"class.base::Value"* [ %34, %32 ], [ null, %23 ]
  %43 = phi i64 [ %40, %32 ], [ 0, %23 ]
  %44 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %42, i64 %43
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::Value"* %42, %"class.base::Value"* %42, %"class.base::Value"* %44) #11
  %45 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %47 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  br i1 %30, label %58, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %27, i64 0, i32 0, i32 0
  %50 = load %"class.base::Value"*, %"class.base::Value"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %27, i64 0, i32 0, i32 1
  %52 = bitcast %"class.base::Value"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = ptrtoint %"class.base::Value"* %50 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 5
  %57 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %50, i64 %56
  br label %58

58:                                               ; preds = %41, %48
  %59 = phi %"class.base::Value"* [ %50, %48 ], [ null, %41 ]
  %60 = phi %"class.base::Value"* [ %57, %48 ], [ null, %41 ]
  %61 = phi i64 [ %56, %48 ], [ 0, %41 ]
  %62 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 %61
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %59, %"class.base::Value"* %60, %"class.base::Value"* %62) #11
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #11
  %63 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %64 = load %"class.base::Value"*, %"class.base::Value"** %46, align 8
  %65 = icmp eq %"class.base::Value"* %63, %64
  br i1 %65, label %86, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  br label %69

69:                                               ; preds = %66, %81
  %70 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  %71 = call zeroext i1 @_ZN20json_schema_compiler4util12PopulateItemERKN4base5ValueEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::Value"* dereferenceable(32) %70, %"class.std::__1::basic_string"* nonnull %3) #11
  br i1 %71, label %72, label %86

72:                                               ; preds = %69
  %73 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %74 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %67, align 8
  %75 = icmp ult %"class.std::__1::basic_string"* %73, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* nonnull align 8 %24, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #11
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %79 = ptrtoint %"class.std::__1::basic_string"* %78 to i64
  store i64 %79, i64* %68, align 8
  br label %81

80:                                               ; preds = %72
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  br label %81

81:                                               ; preds = %76, %80
  %82 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #11
  %83 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %84 = load %"class.base::Value"*, %"class.base::Value"** %46, align 8
  %85 = icmp eq %"class.base::Value"* %83, %84
  br i1 %85, label %86, label %69

86:                                               ; preds = %81, %69, %58
  %87 = phi i1 [ true, %58 ], [ true, %81 ], [ false, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  %88 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  %93 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %93) #10
  br label %94

94:                                               ; preds = %86, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  ret i1 %87
}

declare %"class.std::__1::vector.54"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

declare zeroext i1 @_ZN20json_schema_compiler4util12PopulateItemERKN4base5ValueEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %29, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* %48, i8* %50) #11
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #11
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %20, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* %41, i8* %43) #11
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #11
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #10
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare zeroext i1 @_ZN20json_schema_compiler4util12PopulateItemERKN4base5ValueEPNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEE(%"class.base::Value"* dereferenceable(32), %"class.std::__1::unique_ptr.16"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4base5ValueENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.14"*, %"class.std::__1::unique_ptr.16"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.16"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.16"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.16"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.16"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.16"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.16"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.16"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.16"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.16"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.16"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::Value"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.16"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.16"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.16"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.16"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !3

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.16"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.16"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.16"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.16"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.16"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.16"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.16"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.16"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.16"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.16"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.16"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.16"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.16"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.16"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.16"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.16"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.16"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.16"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.16"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.16"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.16"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.16"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.16"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.16"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.16"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.16"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.16"*
  %138 = icmp eq %"class.std::__1::unique_ptr.16"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.16"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.base::Value"*, %"class.base::Value"** %142, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %142, align 8
  %144 = icmp eq %"class.base::Value"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %143) #11
  %146 = bitcast %"class.base::Value"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #10
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.16"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #2

declare void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) unnamed_addr #2

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #2

declare void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"*) local_unnamed_addr #2

declare void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.base::ListValue"*) local_unnamed_addr #2

declare void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEEPNS3_9ListValueE(%"class.std::__1::unique_ptr.16"* dereferenceable(8), %"class.base::ListValue"*) local_unnamed_addr #2

declare void @_ZN4base5ValueC1Ei(%"class.base::Value"*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.73"*, %"struct.extensions::api::events::Rule"* dereferenceable(72)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.extensions::api::events::Rule"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.73"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.73"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.extensions::api::events::Rule"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.extensions::api::events::Rule"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.extensions::api::events::Rule"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %32
  %36 = ptrtoint %"struct.extensions::api::events::Rule"* %35 to i64
  %37 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"struct.extensions::api::events::Rule"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %37, align 8
  %40 = bitcast %"struct.extensions::api::events::Rule"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9, i32 1
  %42 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::unique_ptr.4"* %42 to i64*
  %45 = load i64, i64* %44, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %43, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.4"* %41 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9, i32 2
  %48 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2
  %49 = bitcast %"class.std::__1::vector.14"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  %50 = bitcast %"class.std::__1::vector.14"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.14"* %47 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2, i32 0, i32 1
  %54 = bitcast %"class.std::__1::unique_ptr.16"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9, i32 2, i32 0, i32 1
  %57 = bitcast %"class.std::__1::unique_ptr.16"** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr.16"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9, i32 2, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.std::__1::unique_ptr.16"** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"class.std::__1::vector.14"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #11
  %64 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9, i32 3
  %65 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3
  %66 = bitcast %"class.std::__1::vector.14"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #11
  %67 = bitcast %"class.std::__1::vector.14"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::vector.14"* %64 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3, i32 0, i32 1
  %71 = bitcast %"class.std::__1::unique_ptr.16"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9, i32 3, i32 0, i32 1
  %74 = bitcast %"class.std::__1::unique_ptr.16"** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.16"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9, i32 3, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast %"class.std::__1::unique_ptr.16"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = bitcast %"class.std::__1::vector.14"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #11
  %81 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9, i32 4
  %82 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1, i64 0, i32 4
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.std::__1::unique_ptr.27"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  store i32* null, i32** %83, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.27"* %81 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %34, i64 1
  %88 = ptrtoint %"struct.extensions::api::events::Rule"* %87 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 0
  %90 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %89, align 8
  %91 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %3, align 8
  %92 = icmp eq %"struct.extensions::api::events::Rule"* %91, %90
  br i1 %92, label %93, label %95

93:                                               ; preds = %31
  %94 = ptrtoint %"struct.extensions::api::events::Rule"* %90 to i64
  br label %154

95:                                               ; preds = %31, %95
  %96 = phi %"struct.extensions::api::events::Rule"* [ %98, %95 ], [ %34, %31 ]
  %97 = phi %"struct.extensions::api::events::Rule"* [ %99, %95 ], [ %91, %31 ]
  %98 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %96, i64 -1
  %99 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %97, i64 -1
  %100 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = bitcast %"struct.extensions::api::events::Rule"* %99 to i64*
  %102 = load i64, i64* %101, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %100, align 8
  %103 = bitcast %"struct.extensions::api::events::Rule"* %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %96, i64 -1, i32 1
  %105 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %97, i64 -1, i32 1
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr.4"* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.4"* %104 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %96, i64 -1, i32 2
  %111 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %97, i64 -1, i32 2
  %112 = bitcast %"class.std::__1::vector.14"* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #11
  %113 = bitcast %"class.std::__1::vector.14"* %111 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.14"* %110 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %97, i64 -1, i32 2, i32 0, i32 1
  %117 = bitcast %"class.std::__1::unique_ptr.16"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %96, i64 -1, i32 2, i32 0, i32 1
  %120 = bitcast %"class.std::__1::unique_ptr.16"** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %97, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.16"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %96, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %125 = bitcast %"class.std::__1::unique_ptr.16"** %124 to i64*
  store i64 %123, i64* %125, align 8
  %126 = bitcast %"class.std::__1::vector.14"* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #11
  %127 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %96, i64 -1, i32 3
  %128 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %97, i64 -1, i32 3
  %129 = bitcast %"class.std::__1::vector.14"* %127 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #11
  %130 = bitcast %"class.std::__1::vector.14"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.std::__1::vector.14"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %97, i64 -1, i32 3, i32 0, i32 1
  %134 = bitcast %"class.std::__1::unique_ptr.16"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %96, i64 -1, i32 3, i32 0, i32 1
  %137 = bitcast %"class.std::__1::unique_ptr.16"** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %97, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.16"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %96, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.16"** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast %"class.std::__1::vector.14"* %128 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #11
  %144 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %96, i64 -1, i32 4
  %145 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %97, i64 -1, i32 4
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = bitcast %"class.std::__1::unique_ptr.27"* %145 to i64*
  %148 = load i64, i64* %147, align 8
  store i32* null, i32** %146, align 8
  %149 = bitcast %"class.std::__1::unique_ptr.27"* %144 to i64*
  store i64 %148, i64* %149, align 8
  %150 = icmp eq %"struct.extensions::api::events::Rule"* %99, %90
  br i1 %150, label %151, label %95

151:                                              ; preds = %95
  %152 = load i64, i64* %6, align 8
  %153 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %3, align 8
  br label %154

154:                                              ; preds = %93, %151
  %155 = phi %"struct.extensions::api::events::Rule"* [ %90, %93 ], [ %153, %151 ]
  %156 = phi %"struct.extensions::api::events::Rule"* [ %34, %93 ], [ %98, %151 ]
  %157 = phi i64 [ %94, %93 ], [ %152, %151 ]
  %158 = ptrtoint %"struct.extensions::api::events::Rule"* %156 to i64
  store i64 %158, i64* %6, align 8
  store i64 %88, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %159 = inttoptr i64 %157 to %"struct.extensions::api::events::Rule"*
  %160 = icmp eq %"struct.extensions::api::events::Rule"* %155, %159
  br i1 %160, label %165, label %161

161:                                              ; preds = %154, %161
  %162 = phi %"struct.extensions::api::events::Rule"* [ %163, %161 ], [ %155, %154 ]
  %163 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %162, i64 -1
  tail call void @_ZN10extensions3api6events4RuleD2Ev(%"struct.extensions::api::events::Rule"* %163) #11
  %164 = icmp eq %"struct.extensions::api::events::Rule"* %163, %159
  br i1 %164, label %165, label %161

165:                                              ; preds = %161, %154
  %166 = icmp eq i64 %157, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = inttoptr i64 %157 to i8*
  tail call void @_ZdlPv(i8* %168) #10
  br label %169

169:                                              ; preds = %165, %167
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #4

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.54"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.base::Value"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::Value"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %35
  %39 = ptrtoint %"class.base::Value"* %38 to i64
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %37, %"class.base::Value"* dereferenceable(32) %1) #11
  %40 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %37, i64 1
  %41 = ptrtoint %"class.base::Value"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %44 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %45 = icmp eq %"class.base::Value"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::Value"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::Value"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::Value"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %50, i64 -1
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %51, %"class.base::Value"* dereferenceable(32) %52) #11
  %53 = icmp eq %"class.base::Value"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::Value"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::Value"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::Value"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::Value"*
  %63 = icmp eq %"class.base::Value"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::Value"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %65, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %66) #11
  %67 = icmp eq %"class.base::Value"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN10extensions3api6events5Event8GetRules6ParamsEEclEPS6_(%"struct.std::__1::default_delete.89"*, %"struct.extensions::api::events::Event::GetRules::Params"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.extensions::api::events::Event::GetRules::Params"* %1, null
  br i1 %3, label %46, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.extensions::api::events::Event::GetRules::Params", %"struct.extensions::api::events::Event::GetRules::Params"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %5, align 8
  %7 = icmp eq %"class.std::__1::vector"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, null
  br i1 %11, label %34, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = icmp eq %"class.std::__1::basic_string"* %15, %10
  br i1 %16, label %32, label %17

17:                                               ; preds = %12, %27
  %18 = phi %"class.std::__1::basic_string"* [ %19, %27 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 -1
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %24, %17
  %28 = icmp eq %"class.std::__1::basic_string"* %19, %10
  br i1 %28, label %29, label %17

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector"* %6 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %12
  %33 = phi i8* [ %31, %29 ], [ %13, %12 ]
  store %"class.std::__1::basic_string"* %10, %"class.std::__1::basic_string"** %14, align 8
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %32, %8
  %35 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %34, %4
  %37 = bitcast %"struct.extensions::api::events::Event::GetRules::Params"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.extensions::api::events::Event::GetRules::Params", %"struct.extensions::api::events::Event::GetRules::Params"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %36, %41
  %45 = bitcast %"struct.extensions::api::events::Event::GetRules::Params"* %1 to i8*
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %44, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN10extensions3api6events5Event11RemoveRules6ParamsEEclEPS6_(%"struct.std::__1::default_delete.95"*, %"struct.extensions::api::events::Event::RemoveRules::Params"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.extensions::api::events::Event::RemoveRules::Params"* %1, null
  br i1 %3, label %46, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.extensions::api::events::Event::RemoveRules::Params", %"struct.extensions::api::events::Event::RemoveRules::Params"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %5, align 8
  %7 = icmp eq %"class.std::__1::vector"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, null
  br i1 %11, label %34, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = icmp eq %"class.std::__1::basic_string"* %15, %10
  br i1 %16, label %32, label %17

17:                                               ; preds = %12, %27
  %18 = phi %"class.std::__1::basic_string"* [ %19, %27 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 -1
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %24, %17
  %28 = icmp eq %"class.std::__1::basic_string"* %19, %10
  br i1 %28, label %29, label %17

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector"* %6 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %12
  %33 = phi i8* [ %31, %29 ], [ %13, %12 ]
  store %"class.std::__1::basic_string"* %10, %"class.std::__1::basic_string"** %14, align 8
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %32, %8
  %35 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %34, %4
  %37 = bitcast %"struct.extensions::api::events::Event::RemoveRules::Params"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.extensions::api::events::Event::RemoveRules::Params", %"struct.extensions::api::events::Event::RemoveRules::Params"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %36, %41
  %45 = bitcast %"struct.extensions::api::events::Event::RemoveRules::Params"* %1 to i8*
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %44, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
