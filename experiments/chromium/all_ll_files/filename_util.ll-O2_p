; ModuleID = '../../native_client/src/trusted/service_runtime/filename_util.cc'
source_filename = "../../native_client/src/trusted/service_runtime/filename_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.2 = private unnamed_addr constant [65 x i8] c"../../native_client/src/trusted/service_runtime/filename_util.cc\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"abs_path[0] == '/'\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"*pos != '/'\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c".\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z17AppendPartsToPathRKNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEEPS6_(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  br label %12

11:                                               ; preds = %12, %2
  ret void

12:                                               ; preds = %9, %12
  %13 = phi i64 [ 0, %9 ], [ %30, %12 ]
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #7
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 %13
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %26 = zext i8 %19 to i64
  %27 = select i1 %20, i8* %22, i8* %25
  %28 = select i1 %20, i64 %24, i64 %26
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %27, i64 %28) #7
  %30 = add i64 %13, 1
  %31 = load i64, i64* %4, align 8
  %32 = load i64, i64* %6, align 8
  %33 = sub i64 %31, %32
  %34 = sdiv exact i64 %33, 24
  %35 = icmp eq i64 %30, %34
  br i1 %35, label %11, label %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z24CanonicalizeAbsolutePathRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPS5_PNS_6vectorIS5_NS3_IS5_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 47
  br i1 %16, label %18, label %17

17:                                               ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.2, i64 0, i64 0), i32 27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %18

18:                                               ; preds = %3, %17
  %19 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %26, align 8
  br label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %28, align 1
  store i8 0, i8* %20, align 1
  br label %29

29:                                               ; preds = %23, %27
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = icmp eq %"class.std::__1::basic_string"* %33, %31
  br i1 %34, label %47, label %35

35:                                               ; preds = %29, %45
  %36 = phi %"class.std::__1::basic_string"* [ %37, %45 ], [ %33, %29 ]
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 -1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %42, %35
  %46 = icmp eq %"class.std::__1::basic_string"* %37, %31
  br i1 %46, label %47, label %35

47:                                               ; preds = %45, %29
  store %"class.std::__1::basic_string"* %31, %"class.std::__1::basic_string"** %32, align 8
  %48 = load i8, i8* %8, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i8*, i8** %11, align 8
  %51 = select i1 %49, i8* %50, i8* %13
  br label %52

52:                                               ; preds = %52, %47
  %53 = phi i8* [ %51, %47 ], [ %56, %52 ]
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 47
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  br i1 %55, label %52, label %57

57:                                               ; preds = %52
  %58 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #7
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #7
  %62 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = bitcast %"class.std::__1::basic_string"** %60 to i64*
  %69 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::vector"* %4 to i64*
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = bitcast %"class.std::__1::basic_string"** %32 to i64*
  %77 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %78

78:                                               ; preds = %346, %57
  %79 = phi i8* [ %53, %57 ], [ %223, %346 ]
  %80 = phi i64 [ 0, %57 ], [ %340, %346 ]
  %81 = phi i8 [ 0, %57 ], [ %341, %346 ]
  %82 = ptrtoint i8* %79 to i64
  %83 = load i8, i8* %79, align 1
  switch i8 %83, label %85 [
    i8 0, label %347
    i8 47, label %84
  ]

84:                                               ; preds = %78
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.2, i64 0, i64 0), i32 46, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %85

85:                                               ; preds = %78, %84
  br label %86

86:                                               ; preds = %85, %89
  %87 = phi i8* [ %90, %89 ], [ %79, %85 ]
  %88 = load i8, i8* %87, align 1
  switch i8 %88, label %89 [
    i8 47, label %91
    i8 0, label %91
  ]

89:                                               ; preds = %86
  %90 = getelementptr inbounds i8, i8* %87, i64 1
  br label %86

91:                                               ; preds = %86, %86
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #7
  %92 = ptrtoint i8* %87 to i64
  %93 = sub i64 %92, %82
  %94 = icmp ugt i64 %93, -17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 24, i1 false)
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %96) #9
  unreachable

97:                                               ; preds = %91
  %98 = icmp ult i64 %93, 23
  br i1 %98, label %99, label %101

99:                                               ; preds = %97
  %100 = trunc i64 %93 to i8
  store i8 %100, i8* %67, align 1
  br label %106

101:                                              ; preds = %97
  %102 = add nuw i64 %93, 16
  %103 = and i64 %102, -16
  %104 = call i8* @_Znwm(i64 %103) #8
  store i8* %104, i8** %63, align 8
  %105 = or i64 %103, -9223372036854775808
  store i64 %105, i64* %65, align 8
  store i64 %93, i64* %64, align 8
  br label %106

106:                                              ; preds = %101, %99
  %107 = phi i8* [ %62, %99 ], [ %104, %101 ]
  %108 = icmp eq i8* %79, %87
  br i1 %108, label %213, label %109

109:                                              ; preds = %106
  %110 = sub i64 0, %82
  %111 = getelementptr i8, i8* %87, i64 %110
  %112 = ptrtoint i8* %111 to i64
  %113 = icmp ult i8* %111, inttoptr (i64 32 to i8*)
  br i1 %113, label %203, label %114

114:                                              ; preds = %109
  %115 = sub i64 0, %82
  %116 = getelementptr i8, i8* %107, i64 %115
  %117 = ptrtoint i8* %116 to i64
  %118 = getelementptr i8, i8* %87, i64 %117
  %119 = icmp ult i8* %107, %87
  %120 = icmp ult i8* %79, %118
  %121 = and i1 %119, %120
  br i1 %121, label %203, label %122

122:                                              ; preds = %114
  %123 = and i64 %112, -32
  %124 = getelementptr i8, i8* %79, i64 %123
  %125 = getelementptr i8, i8* %107, i64 %123
  %126 = add i64 %123, -32
  %127 = lshr exact i64 %126, 5
  %128 = add nuw nsw i64 %127, 1
  %129 = and i64 %128, 3
  %130 = icmp ult i64 %126, 96
  br i1 %130, label %182, label %131

131:                                              ; preds = %122
  %132 = sub nsw i64 %128, %129
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %179, %133 ]
  %135 = phi i64 [ %132, %131 ], [ %180, %133 ]
  %136 = getelementptr i8, i8* %79, i64 %134
  %137 = getelementptr i8, i8* %107, i64 %134
  %138 = bitcast i8* %136 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1, !alias.scope !2
  %140 = getelementptr i8, i8* %136, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  %142 = load <16 x i8>, <16 x i8>* %141, align 1, !alias.scope !2
  %143 = bitcast i8* %137 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %143, align 1, !alias.scope !5, !noalias !2
  %144 = getelementptr i8, i8* %137, i64 16
  %145 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %142, <16 x i8>* %145, align 1, !alias.scope !5, !noalias !2
  %146 = or i64 %134, 32
  %147 = getelementptr i8, i8* %79, i64 %146
  %148 = getelementptr i8, i8* %107, i64 %146
  %149 = bitcast i8* %147 to <16 x i8>*
  %150 = load <16 x i8>, <16 x i8>* %149, align 1, !alias.scope !2
  %151 = getelementptr i8, i8* %147, i64 16
  %152 = bitcast i8* %151 to <16 x i8>*
  %153 = load <16 x i8>, <16 x i8>* %152, align 1, !alias.scope !2
  %154 = bitcast i8* %148 to <16 x i8>*
  store <16 x i8> %150, <16 x i8>* %154, align 1, !alias.scope !5, !noalias !2
  %155 = getelementptr i8, i8* %148, i64 16
  %156 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> %153, <16 x i8>* %156, align 1, !alias.scope !5, !noalias !2
  %157 = or i64 %134, 64
  %158 = getelementptr i8, i8* %79, i64 %157
  %159 = getelementptr i8, i8* %107, i64 %157
  %160 = bitcast i8* %158 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 1, !alias.scope !2
  %162 = getelementptr i8, i8* %158, i64 16
  %163 = bitcast i8* %162 to <16 x i8>*
  %164 = load <16 x i8>, <16 x i8>* %163, align 1, !alias.scope !2
  %165 = bitcast i8* %159 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %165, align 1, !alias.scope !5, !noalias !2
  %166 = getelementptr i8, i8* %159, i64 16
  %167 = bitcast i8* %166 to <16 x i8>*
  store <16 x i8> %164, <16 x i8>* %167, align 1, !alias.scope !5, !noalias !2
  %168 = or i64 %134, 96
  %169 = getelementptr i8, i8* %79, i64 %168
  %170 = getelementptr i8, i8* %107, i64 %168
  %171 = bitcast i8* %169 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1, !alias.scope !2
  %173 = getelementptr i8, i8* %169, i64 16
  %174 = bitcast i8* %173 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1, !alias.scope !2
  %176 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %172, <16 x i8>* %176, align 1, !alias.scope !5, !noalias !2
  %177 = getelementptr i8, i8* %170, i64 16
  %178 = bitcast i8* %177 to <16 x i8>*
  store <16 x i8> %175, <16 x i8>* %178, align 1, !alias.scope !5, !noalias !2
  %179 = add i64 %134, 128
  %180 = add i64 %135, -4
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %133, !llvm.loop !7

182:                                              ; preds = %133, %122
  %183 = phi i64 [ 0, %122 ], [ %179, %133 ]
  %184 = icmp eq i64 %129, 0
  br i1 %184, label %201, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %198, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %199, %185 ], [ %129, %182 ]
  %188 = getelementptr i8, i8* %79, i64 %186
  %189 = getelementptr i8, i8* %107, i64 %186
  %190 = bitcast i8* %188 to <16 x i8>*
  %191 = load <16 x i8>, <16 x i8>* %190, align 1, !alias.scope !2
  %192 = getelementptr i8, i8* %188, i64 16
  %193 = bitcast i8* %192 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !2
  %195 = bitcast i8* %189 to <16 x i8>*
  store <16 x i8> %191, <16 x i8>* %195, align 1, !alias.scope !5, !noalias !2
  %196 = getelementptr i8, i8* %189, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %197, align 1, !alias.scope !5, !noalias !2
  %198 = add i64 %186, 32
  %199 = add i64 %187, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %185, !llvm.loop !9

201:                                              ; preds = %185, %182
  %202 = icmp eq i64 %123, %112
  br i1 %202, label %213, label %203

203:                                              ; preds = %201, %114, %109
  %204 = phi i8* [ %79, %114 ], [ %79, %109 ], [ %124, %201 ]
  %205 = phi i8* [ %107, %114 ], [ %107, %109 ], [ %125, %201 ]
  br label %206

206:                                              ; preds = %203, %206
  %207 = phi i8* [ %210, %206 ], [ %204, %203 ]
  %208 = phi i8* [ %211, %206 ], [ %205, %203 ]
  %209 = load i8, i8* %207, align 1
  store i8 %209, i8* %208, align 1
  %210 = getelementptr inbounds i8, i8* %207, i64 1
  %211 = getelementptr inbounds i8, i8* %208, i64 1
  %212 = icmp eq i8* %210, %87
  br i1 %212, label %213, label %206, !llvm.loop !11

213:                                              ; preds = %206, %201, %106
  %214 = phi i8* [ %107, %106 ], [ %125, %201 ], [ %211, %206 ]
  store i8 0, i8* %214, align 1
  %215 = load i8, i8* %87, align 1
  %216 = icmp eq i8 %215, 47
  br i1 %216, label %217, label %222

217:                                              ; preds = %213, %217
  %218 = phi i8* [ %219, %217 ], [ %87, %213 ]
  %219 = getelementptr inbounds i8, i8* %218, i64 1
  %220 = load i8, i8* %219, align 1
  %221 = icmp eq i8 %220, 47
  br i1 %221, label %217, label %222, !llvm.loop !12

222:                                              ; preds = %217, %213
  %223 = phi i8* [ %87, %213 ], [ %219, %217 ]
  %224 = phi i8 [ 0, %213 ], [ 1, %217 ]
  %225 = load i8, i8* %67, align 1
  %226 = icmp slt i8 %225, 0
  %227 = load i64, i64* %64, align 8
  %228 = zext i8 %225 to i64
  %229 = select i1 %226, i64 %227, i64 %228
  %230 = icmp eq i64 %229, 2
  br i1 %230, label %231, label %306

231:                                              ; preds = %222
  %232 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 2) #7
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %238, label %234

234:                                              ; preds = %231
  %235 = load i8, i8* %67, align 1
  %236 = load i64, i64* %64, align 8
  %237 = zext i8 %235 to i64
  br label %306

238:                                              ; preds = %231
  %239 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %240 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  %241 = icmp eq %"class.std::__1::basic_string"* %239, %240
  br i1 %241, label %339, label %242

242:                                              ; preds = %238
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #7
  br label %243

243:                                              ; preds = %242, %243
  %244 = phi i64 [ %261, %243 ], [ 0, %242 ]
  %245 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #7
  %246 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %246, i64 %244
  %248 = bitcast %"class.std::__1::basic_string"* %247 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  %252 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %247, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %246, i64 %244, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"class.std::__1::basic_string"* %247 to i8*
  %257 = zext i8 %250 to i64
  %258 = select i1 %251, i8* %253, i8* %256
  %259 = select i1 %251, i64 %255, i64 %257
  %260 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %258, i64 %259) #7
  %261 = add i64 %244, 1
  %262 = load i64, i64* %68, align 8
  %263 = load i64, i64* %72, align 8
  %264 = sub i64 %262, %263
  %265 = sdiv exact i64 %264, 24
  %266 = icmp eq i64 %261, %265
  br i1 %266, label %267, label %243

267:                                              ; preds = %243
  %268 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #7
  %269 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %270 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %73, align 8
  %271 = icmp eq %"class.std::__1::basic_string"* %269, %270
  br i1 %271, label %283, label %272

272:                                              ; preds = %267
  %273 = load i8, i8* %75, align 1
  %274 = icmp slt i8 %273, 0
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = bitcast %"class.std::__1::basic_string"* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* nonnull align 8 %69, i64 24, i1 false) #7
  br label %280

277:                                              ; preds = %272
  %278 = load i8*, i8** %70, align 8
  %279 = load i64, i64* %71, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %269, i8* %278, i64 %279) #7
  br label %280

280:                                              ; preds = %277, %275
  %281 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %269, i64 1
  %282 = ptrtoint %"class.std::__1::basic_string"* %281 to i64
  store i64 %282, i64* %76, align 8
  br label %284

283:                                              ; preds = %267
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  br label %284

284:                                              ; preds = %280, %283
  %285 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %285, i64 -1
  %287 = bitcast %"class.std::__1::basic_string"* %286 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %288 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %287, i64 0, i32 1, i32 0
  %289 = load i8, i8* %288, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %284
  %292 = zext i8 %289 to i64
  br label %298

293:                                              ; preds = %284
  %294 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %285, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %286, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load i8*, i8** %296, align 8
  call void @_ZdlPv(i8* %297) #8
  br label %298

298:                                              ; preds = %291, %293
  %299 = phi i64 [ %292, %291 ], [ %295, %293 ]
  %300 = sub i64 %80, %299
  store %"class.std::__1::basic_string"* %286, %"class.std::__1::basic_string"** %60, align 8
  %301 = load i8, i8* %75, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %298
  %304 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %304) #8
  br label %305

305:                                              ; preds = %298, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #7
  br label %339

306:                                              ; preds = %234, %222
  %307 = phi i64 [ %237, %234 ], [ %228, %222 ]
  %308 = phi i64 [ %236, %234 ], [ %227, %222 ]
  %309 = phi i8 [ %235, %234 ], [ %225, %222 ]
  %310 = icmp slt i8 %309, 0
  %311 = select i1 %310, i64 %308, i64 %307
  %312 = icmp eq i64 %311, 1
  br i1 %312, label %313, label %320

313:                                              ; preds = %306
  %314 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #7
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %339, label %316

316:                                              ; preds = %313
  %317 = load i8, i8* %67, align 1
  %318 = load i64, i64* %64, align 8
  %319 = zext i8 %317 to i64
  br label %320

320:                                              ; preds = %316, %306
  %321 = phi i64 [ %319, %316 ], [ %307, %306 ]
  %322 = phi i64 [ %318, %316 ], [ %308, %306 ]
  %323 = phi i8 [ %317, %316 ], [ %309, %306 ]
  %324 = icmp slt i8 %323, 0
  %325 = select i1 %324, i64 %322, i64 %321
  %326 = add i64 %325, %80
  %327 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  %328 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %61, align 8
  %329 = icmp eq %"class.std::__1::basic_string"* %327, %328
  br i1 %329, label %338, label %330

330:                                              ; preds = %320
  br i1 %324, label %333, label %331

331:                                              ; preds = %330
  %332 = bitcast %"class.std::__1::basic_string"* %327 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %332, i8* nonnull align 8 %62, i64 24, i1 false) #7
  br label %335

333:                                              ; preds = %330
  %334 = load i8*, i8** %63, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %327, i8* %334, i64 %322) #7
  br label %335

335:                                              ; preds = %333, %331
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %327, i64 1
  %337 = ptrtoint %"class.std::__1::basic_string"* %336 to i64
  store i64 %337, i64* %68, align 8
  br label %339

338:                                              ; preds = %320
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #7
  br label %339

339:                                              ; preds = %313, %338, %335, %238, %305
  %340 = phi i64 [ %80, %238 ], [ %300, %305 ], [ %80, %313 ], [ %326, %335 ], [ %326, %338 ]
  %341 = phi i8 [ %224, %238 ], [ %224, %305 ], [ 1, %313 ], [ %224, %335 ], [ %224, %338 ]
  %342 = load i8, i8* %67, align 1
  %343 = icmp slt i8 %342, 0
  br i1 %343, label %344, label %346

344:                                              ; preds = %339
  %345 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %345) #8
  br label %346

346:                                              ; preds = %339, %344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #7
  br label %78

347:                                              ; preds = %78
  %348 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %349 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  %350 = icmp eq %"class.std::__1::basic_string"* %348, %349
  br i1 %350, label %389, label %351

351:                                              ; preds = %347
  %352 = ptrtoint %"class.std::__1::basic_string"* %348 to i64
  %353 = ptrtoint %"class.std::__1::basic_string"* %349 to i64
  %354 = sub i64 %353, %352
  %355 = sdiv exact i64 %354, 24
  %356 = and i8 %81, 1
  %357 = icmp eq i8 %356, 0
  %358 = zext i8 %356 to i64
  %359 = add i64 %80, %358
  %360 = add i64 %359, %355
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %1, i64 %360) #7
  %361 = load i64, i64* %68, align 8
  %362 = load i64, i64* %72, align 8
  %363 = icmp eq i64 %361, %362
  br i1 %363, label %388, label %364

364:                                              ; preds = %351, %364
  %365 = phi i64 [ %382, %364 ], [ 0, %351 ]
  %366 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #7
  %367 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %368 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %367, i64 %365
  %369 = bitcast %"class.std::__1::basic_string"* %368 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %370 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %369, i64 0, i32 1, i32 0
  %371 = load i8, i8* %370, align 1
  %372 = icmp slt i8 %371, 0
  %373 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %368, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load i8*, i8** %373, align 8
  %375 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %367, i64 %365, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %376 = load i64, i64* %375, align 8
  %377 = bitcast %"class.std::__1::basic_string"* %368 to i8*
  %378 = zext i8 %371 to i64
  %379 = select i1 %372, i8* %374, i8* %377
  %380 = select i1 %372, i64 %376, i64 %378
  %381 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %379, i64 %380) #7
  %382 = add i64 %365, 1
  %383 = load i64, i64* %68, align 8
  %384 = load i64, i64* %72, align 8
  %385 = sub i64 %383, %384
  %386 = sdiv exact i64 %385, 24
  %387 = icmp eq i64 %382, %386
  br i1 %387, label %388, label %364

388:                                              ; preds = %364, %351
  br i1 %357, label %391, label %389

389:                                              ; preds = %347, %388
  %390 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #7
  br label %391

391:                                              ; preds = %389, %388
  %392 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %393 = icmp eq %"class.std::__1::basic_string"* %392, null
  br i1 %393, label %415, label %394

394:                                              ; preds = %391
  %395 = bitcast %"class.std::__1::basic_string"* %392 to i8*
  %396 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  %397 = icmp eq %"class.std::__1::basic_string"* %396, %392
  br i1 %397, label %413, label %398

398:                                              ; preds = %394, %408
  %399 = phi %"class.std::__1::basic_string"* [ %400, %408 ], [ %396, %394 ]
  %400 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %399, i64 -1
  %401 = bitcast %"class.std::__1::basic_string"* %400 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %402 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %401, i64 0, i32 1, i32 0
  %403 = load i8, i8* %402, align 1
  %404 = icmp slt i8 %403, 0
  br i1 %404, label %405, label %408

405:                                              ; preds = %398
  %406 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %400, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %407 = load i8*, i8** %406, align 8
  call void @_ZdlPv(i8* %407) #8
  br label %408

408:                                              ; preds = %405, %398
  %409 = icmp eq %"class.std::__1::basic_string"* %400, %392
  br i1 %409, label %410, label %398

410:                                              ; preds = %408
  %411 = bitcast %"class.std::__1::vector"* %4 to i8**
  %412 = load i8*, i8** %411, align 8
  br label %413

413:                                              ; preds = %410, %394
  %414 = phi i8* [ %412, %410 ], [ %395, %394 ]
  store %"class.std::__1::basic_string"* %392, %"class.std::__1::basic_string"** %60, align 8
  call void @_ZdlPv(i8* %414) #8
  br label %415

415:                                              ; preds = %391, %413
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #7
  ret void
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #8
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #7
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #7
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #7
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #8
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #8
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !10}
