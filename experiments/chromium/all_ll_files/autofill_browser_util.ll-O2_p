; ModuleID = '../../components/autofill/core/browser/autofill_browser_util.cc'
source_filename = "../../components/autofill/core/browser/autofill_browser_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::AutofillClient" = type { %"class.autofill::RiskDataLoader" }
%"class.autofill::RiskDataLoader" = type { i32 (...)** }
%"struct.autofill::FormData" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %class.GURL, %class.GURL, %class.GURL, i8, [7 x i8], %"class.url::Origin", i8, [7 x i8], %"class.autofill::internal::TokenType", %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::vector.20", %"class.std::__1::vector.27", i32, [4 x i8], %"class.std::__1::vector.34", %"class.std::__1::vector.50", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::pair"* }
%class.GURL = type { %"class.std::__1::basic_string.6", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.autofill::FormRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias.19" }
%"class.base::StrongAlias.19" = type { i32 }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.absl::variant"*, %"class.absl::variant"*, %"class.std::__1::__compressed_pair.22" }
%"class.absl::variant" = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.absl::variant"* }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { i32*, i32*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i32* }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::__compressed_pair.45" }
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string.6", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.38", %"class.std::__1::vector.38", i32, %"class.gfx::RectF", %"class.std::__1::vector.38", %"class.std::__1::vector.38" }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType.36" }
%"class.util::IdType.36" = type { %"class.base::StrongAlias.37" }
%"class.base::StrongAlias.37" = type { i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.autofill::FormFieldData"* }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.autofill::FieldRendererId"* }

@.str = private unnamed_addr constant [5 x i8] c"http\00", align 1
@_ZN3url17kJavaScriptSchemeE = external constant [0 x i8], align 1
@_ZN3url11kBlobSchemeE = external constant [0 x i8], align 1
@_ZN3url17kFileSystemSchemeE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill23IsFormOrClientNonSecureEPKNS_14AutofillClientERKNS_8FormDataE(%"class.autofill::AutofillClient"*, %"struct.autofill::FormData"* dereferenceable(688)) local_unnamed_addr #0 {
  %3 = bitcast %"class.autofill::AutofillClient"* %0 to i1 (%"class.autofill::AutofillClient"*)***
  %4 = load i1 (%"class.autofill::AutofillClient"*)**, i1 (%"class.autofill::AutofillClient"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.autofill::AutofillClient"*)*, i1 (%"class.autofill::AutofillClient"*)** %4, i64 58
  %6 = load i1 (%"class.autofill::AutofillClient"*)*, i1 (%"class.autofill::AutofillClient"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.autofill::AutofillClient"* %0) #3
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.autofill::FormData", %"struct.autofill::FormData"* %1, i64 0, i32 6, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.autofill::FormData", %"struct.autofill::FormData"* %1, i64 0, i32 6
  %14 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #3
  br label %15

15:                                               ; preds = %8, %12, %2
  %16 = phi i1 [ true, %2 ], [ false, %8 ], [ %14, %12 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill18IsFormMixedContentEPKNS_14AutofillClientERKNS_8FormDataE(%"class.autofill::AutofillClient"*, %"struct.autofill::FormData"* dereferenceable(688)) local_unnamed_addr #0 {
  %3 = bitcast %"class.autofill::AutofillClient"* %0 to i1 (%"class.autofill::AutofillClient"*)***
  %4 = load i1 (%"class.autofill::AutofillClient"*)**, i1 (%"class.autofill::AutofillClient"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.autofill::AutofillClient"*)*, i1 (%"class.autofill::AutofillClient"*)** %4, i64 58
  %6 = load i1 (%"class.autofill::AutofillClient"*)*, i1 (%"class.autofill::AutofillClient"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.autofill::AutofillClient"* %0) #3
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.autofill::FormData", %"struct.autofill::FormData"* %1, i64 0, i32 6
  %10 = getelementptr inbounds %"struct.autofill::FormData", %"struct.autofill::FormData"* %1, i64 0, i32 6, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %8
  %14 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kJavaScriptSchemeE, i64 0, i64 0)) #3
  %15 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kJavaScriptSchemeE, i64 0, i64 0), i64 %14) #3
  br i1 %15, label %25, label %16

16:                                               ; preds = %13
  %17 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0)) #3
  %18 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0), i64 %17) #3
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #3
  %21 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i64 %20) #3
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = tail call zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* dereferenceable(120) %9) #3
  %24 = xor i1 %23, true
  br label %25

25:                                               ; preds = %8, %22, %19, %16, %13, %2
  %26 = phi i1 [ false, %2 ], [ false, %8 ], [ %24, %22 ], [ false, %13 ], [ false, %16 ], [ false, %19 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill30ShouldAllowCreditCardFallbacksEPKNS_14AutofillClientERKNS_8FormDataE(%"class.autofill::AutofillClient"*, %"struct.autofill::FormData"* dereferenceable(688)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.autofill::FormData", %"struct.autofill::FormData"* %1, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = bitcast %"class.autofill::AutofillClient"* %0 to i1 (%"class.autofill::AutofillClient"*)***
  %7 = load i1 (%"class.autofill::AutofillClient"*)**, i1 (%"class.autofill::AutofillClient"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.autofill::AutofillClient"*)*, i1 (%"class.autofill::AutofillClient"*)** %7, i64 58
  %9 = load i1 (%"class.autofill::AutofillClient"*)*, i1 (%"class.autofill::AutofillClient"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.autofill::AutofillClient"* %0) #3
  %11 = xor i1 %10, true
  %12 = or i1 %5, %11
  %13 = and i1 %5, %10
  br i1 %12, label %22, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.autofill::FormData", %"struct.autofill::FormData"* %1, i64 0, i32 6, i32 1
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.autofill::FormData", %"struct.autofill::FormData"* %1, i64 0, i32 6
  %20 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #3
  %21 = xor i1 %20, true
  br label %22

22:                                               ; preds = %2, %18, %14
  %23 = phi i1 [ %13, %2 ], [ true, %14 ], [ %21, %18 ]
  ret i1 %23
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

declare zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
