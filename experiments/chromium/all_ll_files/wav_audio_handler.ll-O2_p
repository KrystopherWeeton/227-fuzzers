; ModuleID = '../../media/audio/wav_audio_handler.cc'
source_filename = "../../media/audio/wav_audio_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.media::WavAudioHandler" = type { i32 (...)**, %"class.base::BasicStringPiece", i16, i32, i16, i16, i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::BigEndianReader" = type { i8*, i8* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.1", i8, i64, i32, %"class.std::__1::vector", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { float* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { float** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN5media15WavAudioHandlerE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::WavAudioHandler"*)* @_ZN5media15WavAudioHandlerD2Ev to i8*), i8* bitcast (void (%"class.media::WavAudioHandler"*)* @_ZN5media15WavAudioHandlerD0Ev to i8*)] }, align 8
@_ZN5media12_GLOBAL__N_18kChunkIdE = internal constant [5 x i8] c"RIFF\00", align 1
@_ZN5media12_GLOBAL__N_17kFormatE = internal constant [5 x i8] c"WAVE\00", align 1
@_ZN5media12_GLOBAL__N_114kFmtSubchunkIdE = internal constant [5 x i8] c"fmt \00", align 1
@_ZN5media12_GLOBAL__N_115kDataSubchunkIdE = internal constant [5 x i8] c"data\00", align 1
@.str = private unnamed_addr constant [39 x i8] c"../../media/audio/wav_audio_handler.cc\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"Invalid: No \22\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"\22 header found!\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"Format is invalid. \00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"num_channels: \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"sample_rate: \00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"bits_per_sample: \00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"valid_bits_per_sample: \00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"is_extensible: \00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"Data size \00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c" is too short.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5media15WavAudioHandlerC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtjtNS0_11AudioFormatE = hidden unnamed_addr alias void (%"class.media::WavAudioHandler"*, i8*, i64, i16, i32, i16, i16), void (%"class.media::WavAudioHandler"*, i8*, i64, i16, i32, i16, i16)* @_ZN5media15WavAudioHandlerC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtjtNS0_11AudioFormatE
@_ZN5media15WavAudioHandlerD1Ev = hidden unnamed_addr alias void (%"class.media::WavAudioHandler"*), void (%"class.media::WavAudioHandler"*)* @_ZN5media15WavAudioHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media15WavAudioHandlerC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtjtNS0_11AudioFormatE(%"class.media::WavAudioHandler"* nocapture, i8*, i64, i16 zeroext, i32, i16 zeroext, i16 zeroext) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media15WavAudioHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 1, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 1, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 2
  store i16 %3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 3
  store i32 %4, i32* %12, align 4
  %13 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 4
  store i16 %5, i16* %13, align 8
  %14 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 5
  store i16 %6, i16* %14, align 2
  %15 = shl i64 %2, 3
  %16 = zext i16 %3 to i64
  %17 = udiv i64 %15, %16
  %18 = zext i16 %5 to i64
  %19 = udiv i64 %17, %18
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 6
  store i32 %20, i32* %21, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media15WavAudioHandlerD2Ev(%"class.media::WavAudioHandler"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15WavAudioHandlerD0Ev(%"class.media::WavAudioHandler"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.media::WavAudioHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::WavAudioHandler"* @_ZN5media15WavAudioHandler6CreateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.base::BigEndianReader", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.logging::LogMessage", align 8
  %13 = bitcast %"class.base::BigEndianReader"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #12
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %5, i8* %0, i64 %1) #12
  %15 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #12
  %17 = call zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"* nonnull %5, %"class.base::BasicStringPiece"* nonnull %6, i64 4) #12
  br i1 %17, label %18, label %207

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 4
  br i1 %21, label %22, label %207

22:                                               ; preds = %18
  %23 = load i8*, i8** %16, align 8
  %24 = call i32 @bcmp(i8* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5media12_GLOBAL__N_18kChunkIdE, i64 0, i64 0), i64 4) #12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %207

26:                                               ; preds = %22
  %27 = call zeroext i1 @_ZN4base15BigEndianReader4SkipEm(%"class.base::BigEndianReader"* nonnull %5, i64 4) #12
  br i1 %27, label %28, label %207

28:                                               ; preds = %26
  %29 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #12
  %31 = call zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"* nonnull %5, %"class.base::BasicStringPiece"* nonnull %7, i64 4) #12
  br i1 %31, label %32, label %208

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 4
  br i1 %35, label %36, label %208

36:                                               ; preds = %32
  %37 = load i8*, i8** %30, align 8
  %38 = call i32 @bcmp(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5media12_GLOBAL__N_17kFormatE, i64 0, i64 0), i64 4) #12
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %208

40:                                               ; preds = %36
  %41 = bitcast i8** %14 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::BigEndianReader"* %5 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = icmp ugt i64 %45, 7
  br i1 %46, label %47, label %164

47:                                               ; preds = %40
  %48 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  %49 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %51 = bitcast i32* %9 to i8*
  %52 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  br label %55

55:                                               ; preds = %137, %47
  %56 = phi i8 [ -86, %47 ], [ %138, %137 ]
  %57 = phi i16 [ -21846, %47 ], [ %139, %137 ]
  %58 = phi i16 [ -21846, %47 ], [ %140, %137 ]
  %59 = phi i32 [ -1431655766, %47 ], [ %141, %137 ]
  %60 = phi i16 [ -21846, %47 ], [ %142, %137 ]
  %61 = phi i16 [ -21846, %47 ], [ %143, %137 ]
  %62 = phi i8* [ null, %47 ], [ %144, %137 ]
  %63 = phi i64 [ 0, %47 ], [ %145, %137 ]
  %64 = phi i8 [ 0, %47 ], [ %146, %137 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #12
  store i32 -1431655766, i32* %9, align 4
  %65 = call zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"* nonnull %5, %"class.base::BasicStringPiece"* nonnull %8, i64 4) #12
  br i1 %65, label %66, label %151

66:                                               ; preds = %55
  %67 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU32EPj(%"class.base::BigEndianReader"* nonnull %5, i32* nonnull %9) #12
  br i1 %67, label %68, label %151

68:                                               ; preds = %66
  %69 = load i32, i32* %9, align 4
  %70 = call i32 @llvm.bswap.i32(i32 %69) #12
  store i32 %70, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 16, i1 false) #12
  %71 = zext i32 %70 to i64
  %72 = call zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"* nonnull %5, %"class.base::BasicStringPiece"* nonnull %10, i64 %71) #12
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = load i64, i64* %41, align 8
  %75 = load i64, i64* %43, align 8
  %76 = sub i64 %74, %75
  %77 = call zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"* nonnull %5, %"class.base::BasicStringPiece"* nonnull %10, i64 %76) #12
  br i1 %77, label %79, label %78

78:                                               ; preds = %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #12
  br label %151

79:                                               ; preds = %73, %68
  %80 = load i8*, i8** %49, align 8
  %81 = load i64, i64* %50, align 8
  %82 = icmp eq i64 %81, 4
  br i1 %82, label %83, label %137

83:                                               ; preds = %79
  %84 = call i32 @bcmp(i8* %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5media12_GLOBAL__N_114kFmtSubchunkIdE, i64 0, i64 0), i64 4) #12
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %131

86:                                               ; preds = %83
  %87 = load i8*, i8** %53, align 8
  %88 = load i64, i64* %54, align 8
  %89 = icmp ult i64 %88, 16
  br i1 %89, label %90, label %99

90:                                               ; preds = %86
  %91 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %91, label %92, label %130

92:                                               ; preds = %90
  %93 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %93) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 94, i32 2) #12
  %94 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %95 = bitcast %"class.std::__1::basic_ostringstream"* %94 to %"class.std::__1::basic_ostream"*
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %95, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i64 10) #12
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %96, i64 %88) #12
  %98 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %97, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i64 14) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %93) #12
  br label %130

99:                                               ; preds = %86
  %100 = bitcast i8* %87 to i16*
  %101 = load i16, i16* %100, align 1
  %102 = getelementptr inbounds i8, i8* %87, i64 2
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 1
  %105 = getelementptr inbounds i8, i8* %87, i64 4
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %106, align 1
  %108 = getelementptr inbounds i8, i8* %87, i64 14
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 1
  %111 = icmp eq i16 %101, -2
  br i1 %111, label %112, label %137

112:                                              ; preds = %99
  %113 = icmp ult i64 %88, 40
  br i1 %113, label %114, label %123

114:                                              ; preds = %112
  %115 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %115, label %116, label %130

116:                                              ; preds = %114
  %117 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %117) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 108, i32 2) #12
  %118 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %119 = bitcast %"class.std::__1::basic_ostringstream"* %118 to %"class.std::__1::basic_ostream"*
  %120 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %119, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i64 10) #12
  %121 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %120, i64 %88) #12
  %122 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %121, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i64 14) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %117) #12
  br label %130

123:                                              ; preds = %112
  %124 = getelementptr inbounds i8, i8* %87, i64 24
  %125 = bitcast i8* %124 to i16*
  %126 = load i16, i16* %125, align 1
  %127 = getelementptr inbounds i8, i8* %87, i64 18
  %128 = bitcast i8* %127 to i16*
  %129 = load i16, i16* %128, align 1
  br label %137

130:                                              ; preds = %116, %114, %92, %90
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #12
  br label %208

131:                                              ; preds = %83
  %132 = call i32 @bcmp(i8* %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5media12_GLOBAL__N_115kDataSubchunkIdE, i64 0, i64 0), i64 4) #12
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %131
  %135 = load i8*, i8** %53, align 8
  %136 = load i64, i64* %54, align 8
  br label %137

137:                                              ; preds = %99, %134, %131, %123, %79
  %138 = phi i8 [ 1, %123 ], [ %56, %134 ], [ %56, %131 ], [ %56, %79 ], [ 0, %99 ]
  %139 = phi i16 [ %129, %123 ], [ %57, %134 ], [ %57, %131 ], [ %57, %79 ], [ %57, %99 ]
  %140 = phi i16 [ %110, %123 ], [ %58, %134 ], [ %58, %131 ], [ %58, %79 ], [ %110, %99 ]
  %141 = phi i32 [ %107, %123 ], [ %59, %134 ], [ %59, %131 ], [ %59, %79 ], [ %107, %99 ]
  %142 = phi i16 [ %104, %123 ], [ %60, %134 ], [ %60, %131 ], [ %60, %79 ], [ %104, %99 ]
  %143 = phi i16 [ %126, %123 ], [ %61, %134 ], [ %61, %131 ], [ %61, %79 ], [ %101, %99 ]
  %144 = phi i8* [ %62, %123 ], [ %135, %134 ], [ %62, %131 ], [ %62, %79 ], [ %62, %99 ]
  %145 = phi i64 [ %63, %123 ], [ %136, %134 ], [ %63, %131 ], [ %63, %79 ], [ %63, %99 ]
  %146 = phi i8 [ 1, %123 ], [ %64, %134 ], [ %64, %131 ], [ %64, %79 ], [ 1, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #12
  %147 = load i64, i64* %41, align 8
  %148 = load i64, i64* %43, align 8
  %149 = sub i64 %147, %148
  %150 = icmp ugt i64 %149, 7
  br i1 %150, label %55, label %152

151:                                              ; preds = %55, %66, %78
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #12
  br label %152

152:                                              ; preds = %137, %151
  %153 = phi i8 [ %56, %151 ], [ %138, %137 ]
  %154 = phi i16 [ %57, %151 ], [ %139, %137 ]
  %155 = phi i16 [ %58, %151 ], [ %140, %137 ]
  %156 = phi i32 [ %59, %151 ], [ %141, %137 ]
  %157 = phi i16 [ %60, %151 ], [ %142, %137 ]
  %158 = phi i16 [ %61, %151 ], [ %143, %137 ]
  %159 = phi i8* [ %62, %151 ], [ %144, %137 ]
  %160 = phi i64 [ %63, %151 ], [ %145, %137 ]
  %161 = phi i8 [ %64, %151 ], [ %146, %137 ]
  %162 = and i8 %161, 1
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %173

164:                                              ; preds = %152, %40
  %165 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %165, label %166, label %208

166:                                              ; preds = %164
  %167 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %167) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 184, i32 2) #12
  %168 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %169 = bitcast %"class.std::__1::basic_ostringstream"* %168 to %"class.std::__1::basic_ostream"*
  %170 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %169, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 13) #12
  %171 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %170, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5media12_GLOBAL__N_114kFmtSubchunkIdE, i64 0, i64 0), i64 4) #12
  %172 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %171, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %167) #12
  br label %208

173:                                              ; preds = %152
  %174 = add i16 %157, -1
  %175 = icmp ugt i16 %174, 31
  %176 = icmp eq i32 %156, 0
  %177 = or i1 %176, %175
  br i1 %177, label %185, label %178

178:                                              ; preds = %173
  switch i16 %158, label %185 [
    i16 1, label %179
    i16 3, label %180
  ]

179:                                              ; preds = %178
  switch i16 %155, label %185 [
    i16 8, label %181
    i16 16, label %181
    i16 32, label %181
  ]

180:                                              ; preds = %178
  switch i16 %155, label %185 [
    i16 32, label %181
    i16 64, label %181
  ]

181:                                              ; preds = %180, %180, %179, %179, %179
  %182 = icmp eq i8 %153, 0
  %183 = icmp eq i16 %154, %155
  %184 = or i1 %182, %183
  br i1 %184, label %209, label %185

185:                                              ; preds = %181, %173, %180, %179, %178
  %186 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %186, label %187, label %208

187:                                              ; preds = %185
  %188 = bitcast %"class.logging::LogMessage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %188) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 187, i32 2) #12
  %189 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %12, i64 0, i32 2
  %190 = bitcast %"class.std::__1::basic_ostringstream"* %189 to %"class.std::__1::basic_ostream"*
  %191 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %190, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i64 19) #12
  %192 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %191, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #12
  %193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %192, i16 zeroext %157) #12
  %194 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #12
  %195 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %194, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i64 13) #12
  %196 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %195, i32 %156) #12
  %197 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #12
  %198 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %197, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i64 17) #12
  %199 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %198, i16 zeroext %155) #12
  %200 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %199, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #12
  %201 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %200, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 23) #12
  %202 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %201, i16 zeroext %154) #12
  %203 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %202, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #12
  %204 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %203, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 15) #12
  %205 = icmp ne i8 %153, 0
  %206 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb(%"class.std::__1::basic_ostream"* %204, i1 zeroext %205) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %188) #12
  br label %208

207:                                              ; preds = %2, %22, %26, %18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  br label %233

208:                                              ; preds = %28, %36, %130, %164, %166, %185, %187, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  br label %233

209:                                              ; preds = %181
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  %210 = call i8* @_Znwm(i64 40) #11
  %211 = bitcast i8* %210 to %"class.media::WavAudioHandler"*
  %212 = bitcast i8* %210 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media15WavAudioHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %212, align 8
  %213 = getelementptr inbounds i8, i8* %210, i64 8
  %214 = bitcast i8* %213 to i8**
  store i8* %159, i8** %214, align 8
  %215 = getelementptr inbounds i8, i8* %210, i64 16
  %216 = bitcast i8* %215 to i64*
  store i64 %160, i64* %216, align 8
  %217 = getelementptr inbounds i8, i8* %210, i64 24
  %218 = bitcast i8* %217 to i16*
  store i16 %157, i16* %218, align 8
  %219 = getelementptr inbounds i8, i8* %210, i64 28
  %220 = bitcast i8* %219 to i32*
  store i32 %156, i32* %220, align 4
  %221 = getelementptr inbounds i8, i8* %210, i64 32
  %222 = bitcast i8* %221 to i16*
  store i16 %155, i16* %222, align 8
  %223 = getelementptr inbounds i8, i8* %210, i64 34
  %224 = bitcast i8* %223 to i16*
  store i16 %158, i16* %224, align 2
  %225 = shl i64 %160, 3
  %226 = zext i16 %157 to i64
  %227 = udiv i64 %225, %226
  %228 = zext i16 %155 to i64
  %229 = udiv i64 %227, %228
  %230 = trunc i64 %229 to i32
  %231 = getelementptr inbounds i8, i8* %210, i64 36
  %232 = bitcast i8* %231 to i32*
  store i32 %230, i32* %232, align 4
  br label %233

233:                                              ; preds = %207, %208, %209
  %234 = phi %"class.media::WavAudioHandler"* [ %211, %209 ], [ null, %208 ], [ null, %207 ]
  ret %"class.media::WavAudioHandler"* %234
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media15WavAudioHandler5AtEndEm(%"class.media::WavAudioHandler"* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 1, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ule i64 %4, %1
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5media15WavAudioHandler6CopyToEPNS_8AudioBusEmPm(%"class.media::WavAudioHandler"* nocapture readonly, %"class.media::AudioBus"*, i64, i64* nocapture) local_unnamed_addr #2 align 2 {
  %5 = icmp eq %"class.media::AudioBus"* %1, null
  br i1 %5, label %704, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5
  %8 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast float*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 2
  %17 = load i16, i16* %16, align 8
  %18 = zext i16 %17 to i32
  %19 = icmp eq i32 %15, %18
  br i1 %19, label %20, label %704

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 1, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, %2
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZN5media8AudioBus4ZeroEv(%"class.media::AudioBus"* nonnull %1) #12
  br label %704

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 4
  %27 = load i16, i16* %26, align 8
  %28 = zext i16 %27 to i32
  %29 = mul nuw nsw i32 %28, %15
  %30 = lshr i32 %29, 3
  %31 = sub i64 %22, %2
  %32 = zext i32 %30 to i64
  %33 = udiv i64 %31, %32
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 6
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %36, %34
  %38 = select i1 %37, i32 %34, i32 %36
  %39 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 1, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %2
  %42 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 5
  %43 = load i16, i16* %42, align 2
  switch i16 %43, label %698 [
    i16 1, label %44
    i16 3, label %448
  ]

44:                                               ; preds = %25
  switch i16 %27, label %447 [
    i16 8, label %45
    i16 16, label %172
    i16 32, label %292
  ]

45:                                               ; preds = %44
  tail call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %38, i32 %36) #12
  %46 = load i64, i64* %9, align 8
  %47 = load i64, i64* %11, align 8
  %48 = sub i64 %46, %47
  %49 = lshr exact i64 %48, 3
  %50 = trunc i64 %49 to i32
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %169

52:                                               ; preds = %45
  %53 = inttoptr i64 %47 to float**
  %54 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  %55 = icmp sgt i32 %38, 0
  %56 = shl i64 %48, 29
  %57 = ashr exact i64 %56, 32
  %58 = sext i32 %38 to i64
  %59 = and i64 %49, 4294967295
  %60 = add i64 %58, %2
  %61 = icmp ugt i32 %38, 7
  %62 = icmp eq i64 %56, 4294967296
  %63 = and i1 %61, %62
  %64 = and i64 %58, -8
  %65 = mul nsw i64 %64, %57
  %66 = icmp eq i64 %64, %58
  %67 = and i64 %58, 1
  %68 = icmp eq i64 %67, 0
  %69 = sub nsw i64 0, %58
  br label %70

70:                                               ; preds = %141, %52
  %71 = phi float** [ %53, %52 ], [ %142, %141 ]
  %72 = phi i64 [ 0, %52 ], [ %139, %141 ]
  %73 = add i64 %72, %2
  %74 = getelementptr i8, i8* %40, i64 %73
  %75 = getelementptr inbounds float*, float** %71, i64 %72
  %76 = load float*, float** %75, align 8
  %77 = bitcast float* %76 to i8*
  br i1 %55, label %78, label %138

78:                                               ; preds = %70
  br i1 %63, label %79, label %87

79:                                               ; preds = %78
  %80 = getelementptr float, float* %76, i64 %58
  %81 = bitcast float* %80 to i8*
  %82 = add i64 %60, %72
  %83 = getelementptr i8, i8* %40, i64 %82
  %84 = icmp ugt i8* %83, %77
  %85 = icmp ult i8* %74, %81
  %86 = and i1 %84, %85
  br i1 %86, label %87, label %107

87:                                               ; preds = %78, %137, %79
  %88 = phi i64 [ 0, %79 ], [ 0, %78 ], [ %64, %137 ]
  %89 = phi i64 [ %72, %79 ], [ %72, %78 ], [ %108, %137 ]
  %90 = xor i64 %88, -1
  br i1 %68, label %103, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds i8, i8* %41, i64 %89
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %94, -128
  %96 = sitofp i32 %95 to float
  %97 = icmp slt i32 %95, 0
  %98 = select i1 %97, float 7.812500e-03, float 0x3F80204080000000
  %99 = fmul float %98, %96
  %100 = getelementptr inbounds float, float* %76, i64 %88
  store float %99, float* %100, align 4
  %101 = or i64 %88, 1
  %102 = add i64 %89, %57
  br label %103

103:                                              ; preds = %91, %87
  %104 = phi i64 [ %101, %91 ], [ %88, %87 ]
  %105 = phi i64 [ %102, %91 ], [ %89, %87 ]
  %106 = icmp eq i64 %90, %69
  br i1 %106, label %138, label %143

107:                                              ; preds = %79
  %108 = add i64 %72, %65
  br label %109

109:                                              ; preds = %109, %107
  %110 = phi i64 [ 0, %107 ], [ %135, %109 ]
  %111 = mul i64 %110, %57
  %112 = add i64 %72, %111
  %113 = getelementptr inbounds i8, i8* %41, i64 %112
  %114 = bitcast i8* %113 to <4 x i8>*
  %115 = load <4 x i8>, <4 x i8>* %114, align 1, !alias.scope !2
  %116 = getelementptr inbounds i8, i8* %113, i64 4
  %117 = bitcast i8* %116 to <4 x i8>*
  %118 = load <4 x i8>, <4 x i8>* %117, align 1, !alias.scope !2
  %119 = zext <4 x i8> %115 to <4 x i32>
  %120 = zext <4 x i8> %118 to <4 x i32>
  %121 = add nsw <4 x i32> %119, <i32 -128, i32 -128, i32 -128, i32 -128>
  %122 = add nsw <4 x i32> %120, <i32 -128, i32 -128, i32 -128, i32 -128>
  %123 = sitofp <4 x i32> %121 to <4 x float>
  %124 = sitofp <4 x i32> %122 to <4 x float>
  %125 = icmp slt <4 x i32> %121, zeroinitializer
  %126 = icmp slt <4 x i32> %122, zeroinitializer
  %127 = select <4 x i1> %125, <4 x float> <float 7.812500e-03, float 7.812500e-03, float 7.812500e-03, float 7.812500e-03>, <4 x float> <float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000>
  %128 = select <4 x i1> %126, <4 x float> <float 7.812500e-03, float 7.812500e-03, float 7.812500e-03, float 7.812500e-03>, <4 x float> <float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000>
  %129 = fmul <4 x float> %127, %123
  %130 = fmul <4 x float> %128, %124
  %131 = getelementptr inbounds float, float* %76, i64 %110
  %132 = bitcast float* %131 to <4 x float>*
  store <4 x float> %129, <4 x float>* %132, align 4, !alias.scope !5, !noalias !2
  %133 = getelementptr inbounds float, float* %131, i64 4
  %134 = bitcast float* %133 to <4 x float>*
  store <4 x float> %130, <4 x float>* %134, align 4, !alias.scope !5, !noalias !2
  %135 = add i64 %110, 8
  %136 = icmp eq i64 %135, %64
  br i1 %136, label %137, label %109, !llvm.loop !7

137:                                              ; preds = %109
  br i1 %66, label %138, label %87

138:                                              ; preds = %103, %143, %137, %70
  %139 = add nuw nsw i64 %72, 1
  %140 = icmp eq i64 %139, %59
  br i1 %140, label %169, label %141

141:                                              ; preds = %138
  %142 = load float**, float*** %54, align 8
  br label %70

143:                                              ; preds = %103, %143
  %144 = phi i64 [ %166, %143 ], [ %104, %103 ]
  %145 = phi i64 [ %167, %143 ], [ %105, %103 ]
  %146 = getelementptr inbounds i8, i8* %41, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = add nsw i32 %148, -128
  %150 = sitofp i32 %149 to float
  %151 = icmp slt i32 %149, 0
  %152 = select i1 %151, float 7.812500e-03, float 0x3F80204080000000
  %153 = fmul float %152, %150
  %154 = getelementptr inbounds float, float* %76, i64 %144
  store float %153, float* %154, align 4
  %155 = add nuw nsw i64 %144, 1
  %156 = add i64 %145, %57
  %157 = getelementptr inbounds i8, i8* %41, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = add nsw i32 %159, -128
  %161 = sitofp i32 %160 to float
  %162 = icmp slt i32 %160, 0
  %163 = select i1 %162, float 7.812500e-03, float 0x3F80204080000000
  %164 = fmul float %163, %161
  %165 = getelementptr inbounds float, float* %76, i64 %155
  store float %164, float* %165, align 4
  %166 = add nuw nsw i64 %144, 2
  %167 = add i64 %156, %57
  %168 = icmp eq i64 %166, %58
  br i1 %168, label %138, label %143, !llvm.loop !9

169:                                              ; preds = %138, %45
  %170 = load i32, i32* %35, align 8
  %171 = sub nsw i32 %170, %38
  tail call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* nonnull %1, i32 %38, i32 %171) #12
  br label %699

172:                                              ; preds = %44
  %173 = bitcast i8* %41 to i16*
  tail call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %38, i32 %36) #12
  %174 = load i64, i64* %9, align 8
  %175 = load i64, i64* %11, align 8
  %176 = sub i64 %174, %175
  %177 = lshr exact i64 %176, 3
  %178 = trunc i64 %177 to i32
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %180, label %289

180:                                              ; preds = %172
  %181 = inttoptr i64 %175 to float**
  %182 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  %183 = icmp sgt i32 %38, 0
  %184 = shl i64 %176, 29
  %185 = ashr exact i64 %184, 32
  %186 = sext i32 %38 to i64
  %187 = and i64 %177, 4294967295
  %188 = shl nsw i64 %186, 1
  %189 = add i64 %188, %2
  %190 = icmp ugt i32 %38, 7
  %191 = icmp eq i64 %184, 4294967296
  %192 = and i1 %190, %191
  %193 = and i64 %186, -8
  %194 = mul nsw i64 %193, %185
  %195 = icmp eq i64 %193, %186
  %196 = and i64 %186, 1
  %197 = icmp eq i64 %196, 0
  %198 = sub nsw i64 0, %186
  br label %199

199:                                              ; preds = %265, %180
  %200 = phi float** [ %181, %180 ], [ %266, %265 ]
  %201 = phi i64 [ 0, %180 ], [ %263, %265 ]
  %202 = shl nuw i64 %201, 1
  %203 = add i64 %202, %2
  %204 = getelementptr i8, i8* %40, i64 %203
  %205 = getelementptr inbounds float*, float** %200, i64 %201
  %206 = load float*, float** %205, align 8
  %207 = bitcast float* %206 to i8*
  br i1 %183, label %208, label %262

208:                                              ; preds = %199
  br i1 %192, label %209, label %217

209:                                              ; preds = %208
  %210 = getelementptr float, float* %206, i64 %186
  %211 = bitcast float* %210 to i8*
  %212 = add i64 %189, %202
  %213 = getelementptr i8, i8* %40, i64 %212
  %214 = icmp ugt i8* %213, %207
  %215 = icmp ult i8* %204, %211
  %216 = and i1 %214, %215
  br i1 %216, label %217, label %235

217:                                              ; preds = %208, %261, %209
  %218 = phi i64 [ 0, %209 ], [ 0, %208 ], [ %193, %261 ]
  %219 = phi i64 [ %201, %209 ], [ %201, %208 ], [ %236, %261 ]
  %220 = xor i64 %218, -1
  br i1 %197, label %231, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds i16, i16* %173, i64 %219
  %223 = load i16, i16* %222, align 2
  %224 = sitofp i16 %223 to float
  %225 = icmp slt i16 %223, 0
  %226 = select i1 %225, float 0x3F00000000000000, float 0x3F00002000000000
  %227 = fmul float %226, %224
  %228 = getelementptr inbounds float, float* %206, i64 %218
  store float %227, float* %228, align 4
  %229 = or i64 %218, 1
  %230 = add i64 %219, %185
  br label %231

231:                                              ; preds = %221, %217
  %232 = phi i64 [ %229, %221 ], [ %218, %217 ]
  %233 = phi i64 [ %230, %221 ], [ %219, %217 ]
  %234 = icmp eq i64 %220, %198
  br i1 %234, label %262, label %267

235:                                              ; preds = %209
  %236 = add i64 %201, %194
  br label %237

237:                                              ; preds = %237, %235
  %238 = phi i64 [ 0, %235 ], [ %259, %237 ]
  %239 = mul i64 %238, %185
  %240 = add i64 %201, %239
  %241 = getelementptr inbounds i16, i16* %173, i64 %240
  %242 = bitcast i16* %241 to <4 x i16>*
  %243 = load <4 x i16>, <4 x i16>* %242, align 2, !alias.scope !10
  %244 = getelementptr inbounds i16, i16* %241, i64 4
  %245 = bitcast i16* %244 to <4 x i16>*
  %246 = load <4 x i16>, <4 x i16>* %245, align 2, !alias.scope !10
  %247 = sitofp <4 x i16> %243 to <4 x float>
  %248 = sitofp <4 x i16> %246 to <4 x float>
  %249 = icmp slt <4 x i16> %243, zeroinitializer
  %250 = icmp slt <4 x i16> %246, zeroinitializer
  %251 = select <4 x i1> %249, <4 x float> <float 0x3F00000000000000, float 0x3F00000000000000, float 0x3F00000000000000, float 0x3F00000000000000>, <4 x float> <float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000>
  %252 = select <4 x i1> %250, <4 x float> <float 0x3F00000000000000, float 0x3F00000000000000, float 0x3F00000000000000, float 0x3F00000000000000>, <4 x float> <float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000>
  %253 = fmul <4 x float> %251, %247
  %254 = fmul <4 x float> %252, %248
  %255 = getelementptr inbounds float, float* %206, i64 %238
  %256 = bitcast float* %255 to <4 x float>*
  store <4 x float> %253, <4 x float>* %256, align 4, !alias.scope !13, !noalias !10
  %257 = getelementptr inbounds float, float* %255, i64 4
  %258 = bitcast float* %257 to <4 x float>*
  store <4 x float> %254, <4 x float>* %258, align 4, !alias.scope !13, !noalias !10
  %259 = add i64 %238, 8
  %260 = icmp eq i64 %259, %193
  br i1 %260, label %261, label %237, !llvm.loop !15

261:                                              ; preds = %237
  br i1 %195, label %262, label %217

262:                                              ; preds = %231, %267, %261, %199
  %263 = add nuw nsw i64 %201, 1
  %264 = icmp eq i64 %263, %187
  br i1 %264, label %289, label %265

265:                                              ; preds = %262
  %266 = load float**, float*** %182, align 8
  br label %199

267:                                              ; preds = %231, %267
  %268 = phi i64 [ %286, %267 ], [ %232, %231 ]
  %269 = phi i64 [ %287, %267 ], [ %233, %231 ]
  %270 = getelementptr inbounds i16, i16* %173, i64 %269
  %271 = load i16, i16* %270, align 2
  %272 = sitofp i16 %271 to float
  %273 = icmp slt i16 %271, 0
  %274 = select i1 %273, float 0x3F00000000000000, float 0x3F00002000000000
  %275 = fmul float %274, %272
  %276 = getelementptr inbounds float, float* %206, i64 %268
  store float %275, float* %276, align 4
  %277 = add nuw nsw i64 %268, 1
  %278 = add i64 %269, %185
  %279 = getelementptr inbounds i16, i16* %173, i64 %278
  %280 = load i16, i16* %279, align 2
  %281 = sitofp i16 %280 to float
  %282 = icmp slt i16 %280, 0
  %283 = select i1 %282, float 0x3F00000000000000, float 0x3F00002000000000
  %284 = fmul float %283, %281
  %285 = getelementptr inbounds float, float* %206, i64 %277
  store float %284, float* %285, align 4
  %286 = add nuw nsw i64 %268, 2
  %287 = add i64 %278, %185
  %288 = icmp eq i64 %286, %186
  br i1 %288, label %262, label %267, !llvm.loop !16

289:                                              ; preds = %262, %172
  %290 = load i32, i32* %35, align 8
  %291 = sub nsw i32 %290, %38
  tail call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* nonnull %1, i32 %38, i32 %291) #12
  br label %699

292:                                              ; preds = %44
  %293 = bitcast i8* %41 to i32*
  tail call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %38, i32 %36) #12
  %294 = load i64, i64* %9, align 8
  %295 = load i64, i64* %11, align 8
  %296 = sub i64 %294, %295
  %297 = lshr exact i64 %296, 3
  %298 = trunc i64 %297 to i32
  %299 = icmp sgt i32 %298, 0
  br i1 %299, label %300, label %444

300:                                              ; preds = %292
  %301 = inttoptr i64 %295 to float**
  %302 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  %303 = icmp sgt i32 %38, 0
  %304 = shl i64 %296, 29
  %305 = ashr exact i64 %304, 32
  %306 = sext i32 %38 to i64
  %307 = and i64 %297, 4294967295
  %308 = shl nsw i64 %306, 2
  %309 = add i64 %308, %2
  %310 = icmp ugt i32 %38, 7
  %311 = icmp eq i64 %304, 4294967296
  %312 = and i1 %310, %311
  %313 = and i64 %306, -8
  %314 = mul nsw i64 %313, %305
  %315 = add nsw i64 %313, -8
  %316 = lshr exact i64 %315, 3
  %317 = add nuw nsw i64 %316, 1
  %318 = and i64 %317, 1
  %319 = icmp eq i64 %315, 0
  %320 = sub nuw nsw i64 %317, %318
  %321 = icmp eq i64 %318, 0
  %322 = icmp eq i64 %313, %306
  %323 = and i64 %306, 1
  %324 = icmp eq i64 %323, 0
  %325 = sub nsw i64 0, %306
  br label %326

326:                                              ; preds = %424, %300
  %327 = phi float** [ %301, %300 ], [ %425, %424 ]
  %328 = phi i64 [ 0, %300 ], [ %422, %424 ]
  %329 = shl i64 %328, 2
  %330 = add i64 %329, %2
  %331 = getelementptr i8, i8* %40, i64 %330
  %332 = getelementptr inbounds float*, float** %327, i64 %328
  %333 = load float*, float** %332, align 8
  %334 = bitcast float* %333 to i8*
  br i1 %303, label %335, label %421

335:                                              ; preds = %326
  br i1 %312, label %336, label %344

336:                                              ; preds = %335
  %337 = getelementptr float, float* %333, i64 %306
  %338 = bitcast float* %337 to i8*
  %339 = add i64 %309, %329
  %340 = getelementptr i8, i8* %40, i64 %339
  %341 = icmp ugt i8* %340, %334
  %342 = icmp ult i8* %331, %338
  %343 = and i1 %341, %342
  br i1 %343, label %344, label %360

344:                                              ; preds = %335, %420, %336
  %345 = phi i64 [ 0, %336 ], [ 0, %335 ], [ %313, %420 ]
  %346 = phi i64 [ %328, %336 ], [ %328, %335 ], [ %361, %420 ]
  %347 = xor i64 %345, -1
  br i1 %324, label %356, label %348

348:                                              ; preds = %344
  %349 = getelementptr inbounds i32, i32* %293, i64 %346
  %350 = load i32, i32* %349, align 4
  %351 = sitofp i32 %350 to float
  %352 = fmul float %351, 0x3E00000000000000
  %353 = getelementptr inbounds float, float* %333, i64 %345
  store float %352, float* %353, align 4
  %354 = or i64 %345, 1
  %355 = add i64 %346, %305
  br label %356

356:                                              ; preds = %348, %344
  %357 = phi i64 [ %354, %348 ], [ %345, %344 ]
  %358 = phi i64 [ %355, %348 ], [ %346, %344 ]
  %359 = icmp eq i64 %347, %325
  br i1 %359, label %421, label %426

360:                                              ; preds = %336
  %361 = add i64 %328, %314
  br i1 %319, label %401, label %362

362:                                              ; preds = %360, %362
  %363 = phi i64 [ %398, %362 ], [ 0, %360 ]
  %364 = phi i64 [ %399, %362 ], [ %320, %360 ]
  %365 = mul i64 %363, %305
  %366 = add i64 %328, %365
  %367 = getelementptr inbounds i32, i32* %293, i64 %366
  %368 = bitcast i32* %367 to <4 x i32>*
  %369 = load <4 x i32>, <4 x i32>* %368, align 4, !alias.scope !17
  %370 = getelementptr inbounds i32, i32* %367, i64 4
  %371 = bitcast i32* %370 to <4 x i32>*
  %372 = load <4 x i32>, <4 x i32>* %371, align 4, !alias.scope !17
  %373 = sitofp <4 x i32> %369 to <4 x float>
  %374 = sitofp <4 x i32> %372 to <4 x float>
  %375 = fmul <4 x float> %373, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %376 = fmul <4 x float> %374, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %377 = getelementptr inbounds float, float* %333, i64 %363
  %378 = bitcast float* %377 to <4 x float>*
  store <4 x float> %375, <4 x float>* %378, align 4, !alias.scope !20, !noalias !17
  %379 = getelementptr inbounds float, float* %377, i64 4
  %380 = bitcast float* %379 to <4 x float>*
  store <4 x float> %376, <4 x float>* %380, align 4, !alias.scope !20, !noalias !17
  %381 = or i64 %363, 8
  %382 = mul i64 %381, %305
  %383 = add i64 %328, %382
  %384 = getelementptr inbounds i32, i32* %293, i64 %383
  %385 = bitcast i32* %384 to <4 x i32>*
  %386 = load <4 x i32>, <4 x i32>* %385, align 4, !alias.scope !17
  %387 = getelementptr inbounds i32, i32* %384, i64 4
  %388 = bitcast i32* %387 to <4 x i32>*
  %389 = load <4 x i32>, <4 x i32>* %388, align 4, !alias.scope !17
  %390 = sitofp <4 x i32> %386 to <4 x float>
  %391 = sitofp <4 x i32> %389 to <4 x float>
  %392 = fmul <4 x float> %390, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %393 = fmul <4 x float> %391, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %394 = getelementptr inbounds float, float* %333, i64 %381
  %395 = bitcast float* %394 to <4 x float>*
  store <4 x float> %392, <4 x float>* %395, align 4, !alias.scope !20, !noalias !17
  %396 = getelementptr inbounds float, float* %394, i64 4
  %397 = bitcast float* %396 to <4 x float>*
  store <4 x float> %393, <4 x float>* %397, align 4, !alias.scope !20, !noalias !17
  %398 = add i64 %363, 16
  %399 = add i64 %364, -2
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %401, label %362, !llvm.loop !22

401:                                              ; preds = %362, %360
  %402 = phi i64 [ 0, %360 ], [ %398, %362 ]
  br i1 %321, label %420, label %403

403:                                              ; preds = %401
  %404 = mul i64 %402, %305
  %405 = add i64 %328, %404
  %406 = getelementptr inbounds i32, i32* %293, i64 %405
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4, !alias.scope !17
  %409 = getelementptr inbounds i32, i32* %406, i64 4
  %410 = bitcast i32* %409 to <4 x i32>*
  %411 = load <4 x i32>, <4 x i32>* %410, align 4, !alias.scope !17
  %412 = sitofp <4 x i32> %408 to <4 x float>
  %413 = sitofp <4 x i32> %411 to <4 x float>
  %414 = fmul <4 x float> %412, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %415 = fmul <4 x float> %413, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %416 = getelementptr inbounds float, float* %333, i64 %402
  %417 = bitcast float* %416 to <4 x float>*
  store <4 x float> %414, <4 x float>* %417, align 4, !alias.scope !20, !noalias !17
  %418 = getelementptr inbounds float, float* %416, i64 4
  %419 = bitcast float* %418 to <4 x float>*
  store <4 x float> %415, <4 x float>* %419, align 4, !alias.scope !20, !noalias !17
  br label %420

420:                                              ; preds = %401, %403
  br i1 %322, label %421, label %344

421:                                              ; preds = %356, %426, %420, %326
  %422 = add nuw nsw i64 %328, 1
  %423 = icmp eq i64 %422, %307
  br i1 %423, label %444, label %424

424:                                              ; preds = %421
  %425 = load float**, float*** %302, align 8
  br label %326

426:                                              ; preds = %356, %426
  %427 = phi i64 [ %441, %426 ], [ %357, %356 ]
  %428 = phi i64 [ %442, %426 ], [ %358, %356 ]
  %429 = getelementptr inbounds i32, i32* %293, i64 %428
  %430 = load i32, i32* %429, align 4
  %431 = sitofp i32 %430 to float
  %432 = fmul float %431, 0x3E00000000000000
  %433 = getelementptr inbounds float, float* %333, i64 %427
  store float %432, float* %433, align 4
  %434 = add nuw nsw i64 %427, 1
  %435 = add i64 %428, %305
  %436 = getelementptr inbounds i32, i32* %293, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = sitofp i32 %437 to float
  %439 = fmul float %438, 0x3E00000000000000
  %440 = getelementptr inbounds float, float* %333, i64 %434
  store float %439, float* %440, align 4
  %441 = add nuw nsw i64 %427, 2
  %442 = add i64 %435, %305
  %443 = icmp eq i64 %441, %306
  br i1 %443, label %421, label %426, !llvm.loop !23

444:                                              ; preds = %421, %292
  %445 = load i32, i32* %35, align 8
  %446 = sub nsw i32 %445, %38
  tail call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* nonnull %1, i32 %38, i32 %446) #12
  br label %699

447:                                              ; preds = %44
  tail call void @_ZN5media8AudioBus10ZeroFramesEi(%"class.media::AudioBus"* nonnull %1, i32 %38) #12
  br label %699

448:                                              ; preds = %25
  switch i16 %27, label %697 [
    i16 32, label %449
    i16 64, label %534
  ]

449:                                              ; preds = %448
  %450 = bitcast i8* %41 to float*
  tail call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %38, i32 %36) #12
  %451 = load i64, i64* %9, align 8
  %452 = load i64, i64* %11, align 8
  %453 = sub i64 %451, %452
  %454 = lshr exact i64 %453, 3
  %455 = trunc i64 %454 to i32
  %456 = icmp sgt i32 %455, 0
  br i1 %456, label %457, label %531

457:                                              ; preds = %449
  %458 = inttoptr i64 %452 to float**
  %459 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  %460 = icmp sgt i32 %38, 0
  %461 = shl i64 %453, 29
  %462 = ashr exact i64 %461, 32
  %463 = sext i32 %38 to i64
  %464 = and i64 %454, 4294967295
  %465 = add nsw i64 %463, -1
  %466 = and i64 %463, 3
  %467 = icmp ult i64 %465, 3
  %468 = sub nsw i64 %463, %466
  %469 = icmp eq i64 %466, 0
  br label %470

470:                                              ; preds = %495, %457
  %471 = phi float** [ %458, %457 ], [ %496, %495 ]
  %472 = phi i64 [ 0, %457 ], [ %493, %495 ]
  %473 = getelementptr inbounds float*, float** %471, i64 %472
  %474 = load float*, float** %473, align 8
  br i1 %460, label %475, label %492

475:                                              ; preds = %470
  br i1 %467, label %476, label %497

476:                                              ; preds = %497, %475
  %477 = phi i64 [ 0, %475 ], [ %527, %497 ]
  %478 = phi i64 [ %472, %475 ], [ %528, %497 ]
  br i1 %469, label %492, label %479

479:                                              ; preds = %476, %479
  %480 = phi i64 [ %488, %479 ], [ %477, %476 ]
  %481 = phi i64 [ %489, %479 ], [ %478, %476 ]
  %482 = phi i64 [ %490, %479 ], [ %466, %476 ]
  %483 = getelementptr inbounds float, float* %450, i64 %481
  %484 = bitcast float* %483 to i32*
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds float, float* %474, i64 %480
  %487 = bitcast float* %486 to i32*
  store i32 %485, i32* %487, align 4
  %488 = add nuw nsw i64 %480, 1
  %489 = add i64 %481, %462
  %490 = add i64 %482, -1
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %492, label %479, !llvm.loop !24

492:                                              ; preds = %476, %479, %470
  %493 = add nuw nsw i64 %472, 1
  %494 = icmp eq i64 %493, %464
  br i1 %494, label %531, label %495

495:                                              ; preds = %492
  %496 = load float**, float*** %459, align 8
  br label %470

497:                                              ; preds = %475, %497
  %498 = phi i64 [ %527, %497 ], [ 0, %475 ]
  %499 = phi i64 [ %528, %497 ], [ %472, %475 ]
  %500 = phi i64 [ %529, %497 ], [ %468, %475 ]
  %501 = getelementptr inbounds float, float* %450, i64 %499
  %502 = bitcast float* %501 to i32*
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds float, float* %474, i64 %498
  %505 = bitcast float* %504 to i32*
  store i32 %503, i32* %505, align 4
  %506 = or i64 %498, 1
  %507 = add i64 %499, %462
  %508 = getelementptr inbounds float, float* %450, i64 %507
  %509 = bitcast float* %508 to i32*
  %510 = load i32, i32* %509, align 4
  %511 = getelementptr inbounds float, float* %474, i64 %506
  %512 = bitcast float* %511 to i32*
  store i32 %510, i32* %512, align 4
  %513 = or i64 %498, 2
  %514 = add i64 %507, %462
  %515 = getelementptr inbounds float, float* %450, i64 %514
  %516 = bitcast float* %515 to i32*
  %517 = load i32, i32* %516, align 4
  %518 = getelementptr inbounds float, float* %474, i64 %513
  %519 = bitcast float* %518 to i32*
  store i32 %517, i32* %519, align 4
  %520 = or i64 %498, 3
  %521 = add i64 %514, %462
  %522 = getelementptr inbounds float, float* %450, i64 %521
  %523 = bitcast float* %522 to i32*
  %524 = load i32, i32* %523, align 4
  %525 = getelementptr inbounds float, float* %474, i64 %520
  %526 = bitcast float* %525 to i32*
  store i32 %524, i32* %526, align 4
  %527 = add nuw nsw i64 %498, 4
  %528 = add i64 %521, %462
  %529 = add i64 %500, -4
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %476, label %497

531:                                              ; preds = %492, %449
  %532 = load i32, i32* %35, align 8
  %533 = sub nsw i32 %532, %38
  tail call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* nonnull %1, i32 %38, i32 %533) #12
  br label %699

534:                                              ; preds = %448
  %535 = bitcast i8* %41 to double*
  tail call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %38, i32 %36) #12
  %536 = load i64, i64* %9, align 8
  %537 = load i64, i64* %11, align 8
  %538 = sub i64 %536, %537
  %539 = lshr exact i64 %538, 3
  %540 = trunc i64 %539 to i32
  %541 = icmp sgt i32 %540, 0
  br i1 %541, label %542, label %694

542:                                              ; preds = %534
  %543 = inttoptr i64 %537 to float**
  %544 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  %545 = icmp sgt i32 %38, 0
  %546 = shl i64 %538, 29
  %547 = ashr exact i64 %546, 32
  %548 = sext i32 %38 to i64
  %549 = and i64 %539, 4294967295
  %550 = shl nsw i64 %548, 3
  %551 = add i64 %550, %2
  %552 = icmp ugt i32 %38, 3
  %553 = icmp eq i64 %546, 4294967296
  %554 = and i1 %552, %553
  %555 = and i64 %548, -4
  %556 = mul nsw i64 %555, %547
  %557 = add nsw i64 %555, -4
  %558 = lshr exact i64 %557, 2
  %559 = add nuw nsw i64 %558, 1
  %560 = and i64 %559, 1
  %561 = icmp eq i64 %557, 0
  %562 = sub nuw nsw i64 %559, %560
  %563 = icmp eq i64 %560, 0
  %564 = icmp eq i64 %555, %548
  %565 = and i64 %548, 3
  %566 = icmp eq i64 %565, 0
  br label %567

567:                                              ; preds = %664, %542
  %568 = phi float** [ %543, %542 ], [ %665, %664 ]
  %569 = phi i64 [ 0, %542 ], [ %662, %664 ]
  %570 = shl i64 %569, 3
  %571 = add i64 %570, %2
  %572 = getelementptr i8, i8* %40, i64 %571
  %573 = getelementptr inbounds float*, float** %568, i64 %569
  %574 = load float*, float** %573, align 8
  %575 = bitcast float* %574 to i8*
  br i1 %545, label %576, label %661

576:                                              ; preds = %567
  br i1 %554, label %577, label %585

577:                                              ; preds = %576
  %578 = getelementptr float, float* %574, i64 %548
  %579 = bitcast float* %578 to i8*
  %580 = add i64 %551, %570
  %581 = getelementptr i8, i8* %40, i64 %580
  %582 = icmp ugt i8* %581, %575
  %583 = icmp ult i8* %572, %579
  %584 = and i1 %582, %583
  br i1 %584, label %585, label %606

585:                                              ; preds = %576, %660, %577
  %586 = phi i64 [ 0, %577 ], [ 0, %576 ], [ %555, %660 ]
  %587 = phi i64 [ %569, %577 ], [ %569, %576 ], [ %607, %660 ]
  %588 = xor i64 %586, -1
  %589 = add nsw i64 %588, %548
  br i1 %566, label %602, label %590

590:                                              ; preds = %585, %590
  %591 = phi i64 [ %598, %590 ], [ %586, %585 ]
  %592 = phi i64 [ %599, %590 ], [ %587, %585 ]
  %593 = phi i64 [ %600, %590 ], [ %565, %585 ]
  %594 = getelementptr inbounds double, double* %535, i64 %592
  %595 = load double, double* %594, align 8
  %596 = fptrunc double %595 to float
  %597 = getelementptr inbounds float, float* %574, i64 %591
  store float %596, float* %597, align 4
  %598 = add nuw nsw i64 %591, 1
  %599 = add i64 %592, %547
  %600 = add i64 %593, -1
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %602, label %590, !llvm.loop !26

602:                                              ; preds = %590, %585
  %603 = phi i64 [ %586, %585 ], [ %598, %590 ]
  %604 = phi i64 [ %587, %585 ], [ %599, %590 ]
  %605 = icmp ult i64 %589, 3
  br i1 %605, label %661, label %666

606:                                              ; preds = %577
  %607 = add i64 %569, %556
  br i1 %561, label %643, label %608

608:                                              ; preds = %606, %608
  %609 = phi i64 [ %640, %608 ], [ 0, %606 ]
  %610 = phi i64 [ %641, %608 ], [ %562, %606 ]
  %611 = mul i64 %609, %547
  %612 = add i64 %569, %611
  %613 = getelementptr inbounds double, double* %535, i64 %612
  %614 = bitcast double* %613 to <2 x double>*
  %615 = load <2 x double>, <2 x double>* %614, align 8, !alias.scope !27
  %616 = getelementptr inbounds double, double* %613, i64 2
  %617 = bitcast double* %616 to <2 x double>*
  %618 = load <2 x double>, <2 x double>* %617, align 8, !alias.scope !27
  %619 = fptrunc <2 x double> %615 to <2 x float>
  %620 = fptrunc <2 x double> %618 to <2 x float>
  %621 = getelementptr inbounds float, float* %574, i64 %609
  %622 = bitcast float* %621 to <2 x float>*
  store <2 x float> %619, <2 x float>* %622, align 4, !alias.scope !30, !noalias !27
  %623 = getelementptr inbounds float, float* %621, i64 2
  %624 = bitcast float* %623 to <2 x float>*
  store <2 x float> %620, <2 x float>* %624, align 4, !alias.scope !30, !noalias !27
  %625 = or i64 %609, 4
  %626 = mul i64 %625, %547
  %627 = add i64 %569, %626
  %628 = getelementptr inbounds double, double* %535, i64 %627
  %629 = bitcast double* %628 to <2 x double>*
  %630 = load <2 x double>, <2 x double>* %629, align 8, !alias.scope !27
  %631 = getelementptr inbounds double, double* %628, i64 2
  %632 = bitcast double* %631 to <2 x double>*
  %633 = load <2 x double>, <2 x double>* %632, align 8, !alias.scope !27
  %634 = fptrunc <2 x double> %630 to <2 x float>
  %635 = fptrunc <2 x double> %633 to <2 x float>
  %636 = getelementptr inbounds float, float* %574, i64 %625
  %637 = bitcast float* %636 to <2 x float>*
  store <2 x float> %634, <2 x float>* %637, align 4, !alias.scope !30, !noalias !27
  %638 = getelementptr inbounds float, float* %636, i64 2
  %639 = bitcast float* %638 to <2 x float>*
  store <2 x float> %635, <2 x float>* %639, align 4, !alias.scope !30, !noalias !27
  %640 = add i64 %609, 8
  %641 = add i64 %610, -2
  %642 = icmp eq i64 %641, 0
  br i1 %642, label %643, label %608, !llvm.loop !32

643:                                              ; preds = %608, %606
  %644 = phi i64 [ 0, %606 ], [ %640, %608 ]
  br i1 %563, label %660, label %645

645:                                              ; preds = %643
  %646 = mul i64 %644, %547
  %647 = add i64 %569, %646
  %648 = getelementptr inbounds double, double* %535, i64 %647
  %649 = bitcast double* %648 to <2 x double>*
  %650 = load <2 x double>, <2 x double>* %649, align 8, !alias.scope !27
  %651 = getelementptr inbounds double, double* %648, i64 2
  %652 = bitcast double* %651 to <2 x double>*
  %653 = load <2 x double>, <2 x double>* %652, align 8, !alias.scope !27
  %654 = fptrunc <2 x double> %650 to <2 x float>
  %655 = fptrunc <2 x double> %653 to <2 x float>
  %656 = getelementptr inbounds float, float* %574, i64 %644
  %657 = bitcast float* %656 to <2 x float>*
  store <2 x float> %654, <2 x float>* %657, align 4, !alias.scope !30, !noalias !27
  %658 = getelementptr inbounds float, float* %656, i64 2
  %659 = bitcast float* %658 to <2 x float>*
  store <2 x float> %655, <2 x float>* %659, align 4, !alias.scope !30, !noalias !27
  br label %660

660:                                              ; preds = %643, %645
  br i1 %564, label %661, label %585

661:                                              ; preds = %602, %666, %660, %567
  %662 = add nuw nsw i64 %569, 1
  %663 = icmp eq i64 %662, %549
  br i1 %663, label %694, label %664

664:                                              ; preds = %661
  %665 = load float**, float*** %544, align 8
  br label %567

666:                                              ; preds = %602, %666
  %667 = phi i64 [ %691, %666 ], [ %603, %602 ]
  %668 = phi i64 [ %692, %666 ], [ %604, %602 ]
  %669 = getelementptr inbounds double, double* %535, i64 %668
  %670 = load double, double* %669, align 8
  %671 = fptrunc double %670 to float
  %672 = getelementptr inbounds float, float* %574, i64 %667
  store float %671, float* %672, align 4
  %673 = add nuw nsw i64 %667, 1
  %674 = add i64 %668, %547
  %675 = getelementptr inbounds double, double* %535, i64 %674
  %676 = load double, double* %675, align 8
  %677 = fptrunc double %676 to float
  %678 = getelementptr inbounds float, float* %574, i64 %673
  store float %677, float* %678, align 4
  %679 = add nuw nsw i64 %667, 2
  %680 = add i64 %674, %547
  %681 = getelementptr inbounds double, double* %535, i64 %680
  %682 = load double, double* %681, align 8
  %683 = fptrunc double %682 to float
  %684 = getelementptr inbounds float, float* %574, i64 %679
  store float %683, float* %684, align 4
  %685 = add nuw nsw i64 %667, 3
  %686 = add i64 %680, %547
  %687 = getelementptr inbounds double, double* %535, i64 %686
  %688 = load double, double* %687, align 8
  %689 = fptrunc double %688 to float
  %690 = getelementptr inbounds float, float* %574, i64 %685
  store float %689, float* %690, align 4
  %691 = add nuw nsw i64 %667, 4
  %692 = add i64 %686, %547
  %693 = icmp eq i64 %691, %548
  br i1 %693, label %661, label %666, !llvm.loop !33

694:                                              ; preds = %661, %534
  %695 = load i32, i32* %35, align 8
  %696 = sub nsw i32 %695, %38
  tail call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* nonnull %1, i32 %38, i32 %696) #12
  br label %699

697:                                              ; preds = %448
  tail call void @_ZN5media8AudioBus10ZeroFramesEi(%"class.media::AudioBus"* nonnull %1, i32 %38) #12
  br label %699

698:                                              ; preds = %25
  tail call void @_ZN5media8AudioBus10ZeroFramesEi(%"class.media::AudioBus"* nonnull %1, i32 %38) #12
  br label %699

699:                                              ; preds = %531, %694, %697, %169, %289, %444, %447, %698
  %700 = mul nsw i32 %38, %30
  %701 = sext i32 %700 to i64
  store i64 %701, i64* %3, align 8
  %702 = load i32, i32* %35, align 8
  %703 = sub nsw i32 %702, %38
  tail call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* nonnull %1, i32 %38, i32 %703) #12
  br label %704

704:                                              ; preds = %6, %4, %699, %24
  %705 = phi i1 [ true, %24 ], [ true, %699 ], [ false, %4 ], [ false, %6 ]
  ret i1 %705
}

declare void @_ZN5media8AudioBus4ZeroEv(%"class.media::AudioBus"*) local_unnamed_addr #7

declare void @_ZN5media8AudioBus10ZeroFramesEi(%"class.media::AudioBus"*, i32) local_unnamed_addr #7

declare void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"*, i32, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5media15WavAudioHandler11GetDurationEv(%"class.media::WavAudioHandler"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  %4 = uitofp i32 %3 to double
  %5 = getelementptr inbounds %"class.media::WavAudioHandler", %"class.media::WavAudioHandler"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = uitofp i32 %6 to double
  %8 = fdiv double %4, %7
  %9 = fmul double %8, 1.000000e+06
  %10 = fcmp ult double %9, 0xC3E0000000000000
  %11 = fcmp ugt double %9, 0x43DFFFFFFFFFFFFF
  %12 = fcmp ogt double %9, 0xC3E0000000000000
  %13 = select i1 %12, double %9, double 0xC3E0000000000000
  %14 = fptosi double %13 to i64
  %15 = select i1 %10, i64 0, i64 9223372036854775807
  %16 = select i1 %11, i64 %15, i64 %14
  ret i64 %16
}

declare void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"*, i8*, i64) unnamed_addr #7

declare zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"*, %"class.base::BasicStringPiece"*, i64) local_unnamed_addr #7

declare zeroext i1 @_ZN4base15BigEndianReader4SkipEm(%"class.base::BigEndianReader"*, i64) local_unnamed_addr #7

declare zeroext i1 @_ZN4base15BigEndianReader7ReadU32EPj(%"class.base::BigEndianReader"*, i32*) local_unnamed_addr #7

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #7

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #8

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"*, i16 zeroext) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb(%"class.std::__1::basic_ostream"*, i1 zeroext) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #9

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !34
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #7

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #7

declare void @_ZN5media8AudioBus13CheckOverflowEiii(i32, i32, i32) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !8}
!16 = distinct !{!16, !8}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !8}
!23 = distinct !{!23, !8}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.disable"}
!26 = distinct !{!26, !25}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !8}
!33 = distinct !{!33, !8}
!34 = !{i8 0, i8 2}
