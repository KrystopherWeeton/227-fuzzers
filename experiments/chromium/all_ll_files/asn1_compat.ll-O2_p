; ModuleID = '../../third_party/boringssl/src/crypto/bytestring/asn1_compat.c'
source_filename = "../../third_party/boringssl/src/crypto/bytestring/asn1_compat.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBB_finish_i2d(%struct.cbb_st*, i8**) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #3
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #3
  store i64 -6148914691236517206, i64* %4, align 8
  %7 = call i32 @CBB_finish(%struct.cbb_st* %0, i8** nonnull %3, i64* nonnull %4) #3
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  call void @CBB_cleanup(%struct.cbb_st* %0) #3
  br label %38

10:                                               ; preds = %2
  %11 = load i64, i64* %4, align 8
  %12 = icmp ugt i64 %11, 2147483647
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %14) #3
  br label %38

15:                                               ; preds = %10
  %16 = icmp eq i8** %1, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %15
  %18 = load i8*, i8** %1, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = bitcast i8** %3 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast i8** %1 to i64*
  store i64 %22, i64* %23, align 8
  store i8* null, i8** %3, align 8
  br label %34

24:                                               ; preds = %17
  %25 = icmp eq i64 %11, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = load i8*, i8** %3, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %27, i64 %11, i1 false) #3
  %28 = load i64, i64* %4, align 8
  %29 = load i8*, i8** %1, align 8
  br label %30

30:                                               ; preds = %24, %26
  %31 = phi i8* [ %18, %24 ], [ %29, %26 ]
  %32 = phi i64 [ 0, %24 ], [ %28, %26 ]
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %1, align 8
  br label %34

34:                                               ; preds = %15, %20, %30
  %35 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %35) #3
  %36 = load i64, i64* %4, align 8
  %37 = trunc i64 %36 to i32
  br label %38

38:                                               ; preds = %34, %13, %9
  %39 = phi i32 [ -1, %13 ], [ %37, %34 ], [ -1, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #3
  ret i32 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
