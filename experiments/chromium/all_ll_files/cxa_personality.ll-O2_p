; ModuleID = '../../buildtools/third_party/libc++abi/trunk/src/cxa_personality.cpp'
source_filename = "../../buildtools/third_party/libc++abi/trunk/src/cxa_personality.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._Unwind_Exception = type { i64, void (i32, %struct._Unwind_Exception*)*, i64, i64 }
%struct._Unwind_Context = type opaque
%"struct.__cxxabiv1::__cxa_exception" = type { i8*, i64, %"class.std::type_info"*, void (i8*)*, void ()*, void ()*, %"struct.__cxxabiv1::__cxa_exception"*, i32, i32, i8*, i8*, i8*, i8*, %struct._Unwind_Exception }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.__cxxabiv1::__shim_type_info" = type { %"class.std::type_info" }
%"class.std::bad_exception" = type { %"class.std::exception" }
%"class.std::exception" = type { i32 (...)** }
%"struct.__cxxabiv1::__cxa_eh_globals" = type { %"struct.__cxxabiv1::__cxa_exception"*, i32 }

$__clang_call_terminate = comdat any

@_ZTISt13bad_exception = external constant i8*
@_ZTVSt13bad_exception = external unnamed_addr constant { [5 x i8*] }, align 8
@switch.table.__cxa_call_unexpected.2 = private unnamed_addr constant [13 x i64] [i64 3, i64 3, i64 1, i64 2, i64 3, i64 3, i64 3, i64 3, i64 3, i64 3, i64 1, i64 2, i64 3], align 8

; Function Attrs: ssp uwtable
define hidden i32 @__gxx_personality_v0(i32, i32, i64, %struct._Unwind_Exception*, %struct._Unwind_Context*) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = icmp ne i32 %0, 1
  %13 = icmp eq %struct._Unwind_Exception* %3, null
  %14 = or i1 %12, %13
  %15 = icmp eq %struct._Unwind_Context* %4, null
  %16 = or i1 %14, %15
  br i1 %16, label %356, label %17

17:                                               ; preds = %5
  %18 = and i64 %2, -256
  %19 = icmp eq i64 %18, 4849336966747728640
  %20 = icmp ne i32 %1, 6
  %21 = xor i1 %19, true
  %22 = or i1 %20, %21
  br i1 %22, label %32, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 -3
  %25 = bitcast %struct._Unwind_Exception* %24 to %"struct.__cxxabiv1::__cxa_exception"*
  %26 = getelementptr inbounds %"struct.__cxxabiv1::__cxa_exception", %"struct.__cxxabiv1::__cxa_exception"* %25, i64 0, i32 8
  %27 = load i32, i32* %26, align 4, !tbaa !2
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 -1, i32 2
  %30 = load i64, i64* %29, align 16, !tbaa !10
  %31 = ptrtoint %struct._Unwind_Exception* %3 to i64
  tail call void @_Unwind_SetGR(%struct._Unwind_Context* nonnull %4, i32 0, i64 %31)
  tail call void @_Unwind_SetGR(%struct._Unwind_Context* nonnull %4, i32 1, i64 %28)
  tail call void @_Unwind_SetIP(%struct._Unwind_Context* nonnull %4, i64 %30)
  br label %356

32:                                               ; preds = %17
  %33 = and i32 %1, 1
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = and i32 %1, 14
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %44, label %356

38:                                               ; preds = %32
  %39 = and i32 %1, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %356, label %41

41:                                               ; preds = %38
  %42 = and i32 %1, 12
  %43 = icmp eq i32 %42, 12
  br i1 %43, label %352, label %44

44:                                               ; preds = %41, %35
  %45 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = tail call i8* @_Unwind_GetLanguageSpecificData(%struct._Unwind_Context* nonnull %4)
  store i8* %46, i8** %9, align 8, !tbaa !11
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  br label %356

49:                                               ; preds = %44
  %50 = ptrtoint i8* %46 to i64
  %51 = tail call i64 @_Unwind_GetIP(%struct._Unwind_Context* nonnull %4)
  %52 = tail call i64 @_Unwind_GetRegionStart(%struct._Unwind_Context* nonnull %4)
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = getelementptr inbounds i8, i8* %46, i64 1
  store i8* %55, i8** %9, align 8, !tbaa !11
  %56 = load i8, i8* %46, align 1, !tbaa !12
  %57 = call fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nonnull %9, i8 zeroext %56)
  %58 = icmp eq i64 %57, 0
  %59 = select i1 %58, i64 %52, i64 %57
  %60 = load i8*, i8** %9, align 8, !tbaa !11
  %61 = getelementptr inbounds i8, i8* %60, i64 1
  store i8* %61, i8** %9, align 8, !tbaa !11
  %62 = load i8, i8* %60, align 1, !tbaa !12
  %63 = icmp eq i8 %62, -1
  br i1 %63, label %78, label %64

64:                                               ; preds = %49, %64
  %65 = phi i64 [ %73, %64 ], [ 0, %49 ]
  %66 = phi i64 [ %74, %64 ], [ 0, %49 ]
  %67 = phi i8* [ %68, %64 ], [ %61, %49 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 1
  %69 = load i8, i8* %67, align 1, !tbaa !12
  %70 = and i8 %69, 127
  %71 = zext i8 %70 to i64
  %72 = shl i64 %71, %66
  %73 = or i64 %72, %65
  %74 = add i64 %66, 7
  %75 = icmp slt i8 %69, 0
  br i1 %75, label %64, label %76

76:                                               ; preds = %64
  store i8* %68, i8** %9, align 8, !tbaa !11
  %77 = getelementptr inbounds i8, i8* %68, i64 %73
  br label %78

78:                                               ; preds = %76, %49
  %79 = phi i8* [ %68, %76 ], [ %61, %49 ]
  %80 = phi i8* [ %77, %76 ], [ null, %49 ]
  %81 = getelementptr inbounds i8, i8* %79, i64 1
  store i8* %81, i8** %9, align 8, !tbaa !11
  %82 = load i8, i8* %79, align 1, !tbaa !12
  br label %83

83:                                               ; preds = %83, %78
  %84 = phi i64 [ 0, %78 ], [ %92, %83 ]
  %85 = phi i64 [ 0, %78 ], [ %93, %83 ]
  %86 = phi i8* [ %81, %78 ], [ %87, %83 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  %88 = load i8, i8* %86, align 1, !tbaa !12
  %89 = and i8 %88, 127
  %90 = zext i8 %89 to i64
  %91 = shl i64 %90, %85
  %92 = or i64 %91, %84
  %93 = add i64 %85, 7
  %94 = icmp slt i8 %88, 0
  br i1 %94, label %83, label %95

95:                                               ; preds = %83
  store i8* %87, i8** %9, align 8, !tbaa !11
  %96 = and i64 %92, 4294967295
  %97 = getelementptr inbounds i8, i8* %87, i64 %96
  %98 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #10
  store i8* %87, i8** %10, align 8, !tbaa !11
  br label %99

99:                                               ; preds = %331, %95
  %100 = phi i8* [ %111, %331 ], [ %87, %95 ]
  %101 = icmp ult i8* %100, %97
  br i1 %101, label %102, label %334

102:                                              ; preds = %99
  %103 = call fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nonnull %10, i8 zeroext %82)
  %104 = call fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nonnull %10, i8 zeroext %82)
  %105 = call fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nonnull %10, i8 zeroext %82)
  %106 = load i8*, i8** %10, align 8, !tbaa !11
  br label %107

107:                                              ; preds = %107, %102
  %108 = phi i64 [ 0, %102 ], [ %116, %107 ]
  %109 = phi i64 [ 0, %102 ], [ %117, %107 ]
  %110 = phi i8* [ %106, %102 ], [ %111, %107 ]
  %111 = getelementptr inbounds i8, i8* %110, i64 1
  %112 = load i8, i8* %110, align 1, !tbaa !12
  %113 = and i8 %112, 127
  %114 = zext i8 %113 to i64
  %115 = shl i64 %114, %109
  %116 = or i64 %115, %108
  %117 = add i64 %109, 7
  %118 = icmp slt i8 %112, 0
  br i1 %118, label %107, label %119

119:                                              ; preds = %107
  store i8* %111, i8** %10, align 8, !tbaa !11
  %120 = icmp ule i64 %103, %54
  %121 = add i64 %104, %103
  %122 = icmp ult i64 %54, %121
  %123 = and i1 %120, %122
  br i1 %123, label %124, label %331

124:                                              ; preds = %119
  %125 = icmp eq i64 %105, 0
  br i1 %125, label %335, label %126

126:                                              ; preds = %124
  %127 = add i64 %105, %59
  %128 = icmp eq i64 %116, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  br i1 %34, label %335, label %130

130:                                              ; preds = %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  br label %352

131:                                              ; preds = %126
  %132 = add i64 %116, -1
  %133 = getelementptr inbounds i8, i8* %97, i64 %132
  %134 = and i32 %1, 8
  %135 = icmp ne i32 %134, 0
  %136 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 1
  %137 = bitcast %struct._Unwind_Exception* %136 to i8*
  %138 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 -3, i32 1
  %139 = bitcast void (i32, %struct._Unwind_Exception*)** %138 to i8**
  %140 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 -3, i32 2
  %141 = bitcast i64* %140 to %"class.__cxxabiv1::__shim_type_info"**
  %142 = icmp eq i8* %80, null
  %143 = bitcast i8** %8 to i8*
  %144 = bitcast i8** %7 to i8*
  %145 = and i8 %62, 15
  %146 = bitcast i8** %6 to i8*
  %147 = bitcast i8** %11 to i8*
  %148 = icmp ult i8 %145, 13
  %149 = zext i8 %145 to i16
  %150 = lshr i16 7197, %149
  %151 = and i16 %150, 1
  %152 = icmp eq i16 %151, 0
  %153 = zext i8 %145 to i64
  %154 = getelementptr inbounds [13 x i64], [13 x i64]* @switch.table.__cxa_call_unexpected.2, i64 0, i64 %153
  %155 = icmp ult i8 %145, 13
  %156 = zext i8 %145 to i16
  %157 = lshr i16 7197, %156
  %158 = and i16 %157, 1
  %159 = icmp eq i16 %158, 0
  %160 = zext i8 %145 to i64
  %161 = getelementptr inbounds [13 x i64], [13 x i64]* @switch.table.__cxa_call_unexpected.2, i64 0, i64 %160
  br label %162

162:                                              ; preds = %329, %131
  %163 = phi i8* [ %133, %131 ], [ %330, %329 ]
  %164 = phi i8 [ 0, %131 ], [ %301, %329 ]
  br label %165

165:                                              ; preds = %165, %162
  %166 = phi i64 [ 0, %162 ], [ %174, %165 ]
  %167 = phi i64 [ 0, %162 ], [ %175, %165 ]
  %168 = phi i8* [ %163, %162 ], [ %169, %165 ]
  %169 = getelementptr inbounds i8, i8* %168, i64 1
  %170 = load i8, i8* %168, align 1, !tbaa !12
  %171 = and i8 %170, 127
  %172 = zext i8 %171 to i64
  %173 = shl i64 %172, %167
  %174 = or i64 %173, %166
  %175 = add i64 %167, 7
  %176 = icmp slt i8 %170, 0
  br i1 %176, label %165, label %177

177:                                              ; preds = %165
  %178 = and i8 %170, 64
  %179 = icmp ne i8 %178, 0
  %180 = icmp ult i64 %175, 64
  %181 = and i1 %180, %179
  %182 = shl i64 -1, %175
  %183 = select i1 %181, i64 %182, i64 0
  %184 = or i64 %174, %183
  %185 = icmp sgt i64 %184, 0
  br i1 %185, label %186, label %233

186:                                              ; preds = %177
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146)
  store i8* %80, i8** %6, align 8, !tbaa !11
  br i1 %142, label %187, label %188

187:                                              ; preds = %186
  call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext %19, %struct._Unwind_Exception* %3) #10
  unreachable

188:                                              ; preds = %186
  %189 = xor i1 %155, true
  %190 = or i1 %189, %159
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext %19, %struct._Unwind_Exception* %3) #10
  unreachable

192:                                              ; preds = %188
  %193 = load i64, i64* %161, align 8
  %194 = shl i64 %184, %193
  %195 = sub i64 0, %194
  %196 = getelementptr inbounds i8, i8* %80, i64 %195
  store i8* %196, i8** %6, align 8, !tbaa !11
  %197 = call fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nonnull %6, i8 zeroext %62) #10
  %198 = inttoptr i64 %197 to %"class.__cxxabiv1::__shim_type_info"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146)
  %199 = icmp eq i64 %197, 0
  br i1 %199, label %200, label %209

200:                                              ; preds = %192
  %201 = ptrtoint i8* %163 to i64
  %202 = call i64 @_ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception(%struct._Unwind_Exception* %3)
  %203 = icmp eq i64 %202, 4849336966747728641
  br i1 %203, label %204, label %206

204:                                              ; preds = %200
  %205 = load i8*, i8** %139, align 8, !tbaa !13
  br label %206

206:                                              ; preds = %204, %200
  %207 = phi i8* [ %205, %204 ], [ %137, %200 ]
  %208 = ptrtoint i8* %207 to i64
  br label %336

209:                                              ; preds = %192
  br i1 %19, label %210, label %300

210:                                              ; preds = %209
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %211 = call i64 @_ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception(%struct._Unwind_Exception* %3)
  %212 = icmp eq i64 %211, 4849336966747728641
  br i1 %212, label %213, label %215

213:                                              ; preds = %210
  %214 = load i8*, i8** %139, align 8, !tbaa !13
  br label %215

215:                                              ; preds = %213, %210
  %216 = phi i8* [ %214, %213 ], [ %137, %210 ]
  store i8* %216, i8** %11, align 8, !tbaa !11
  %217 = load %"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"** %141, align 16, !tbaa !15
  %218 = icmp eq i8* %216, null
  %219 = icmp eq %"class.__cxxabiv1::__shim_type_info"* %217, null
  %220 = or i1 %218, %219
  br i1 %220, label %221, label %222

221:                                              ; preds = %215
  call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext true, %struct._Unwind_Exception* %3)
  unreachable

222:                                              ; preds = %215
  %223 = inttoptr i64 %197 to i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)***
  %224 = load i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)**, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*** %223, align 8, !tbaa !16
  %225 = getelementptr inbounds i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)** %224, i64 4
  %226 = load i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)** %225, align 8
  %227 = call zeroext i1 %226(%"class.__cxxabiv1::__shim_type_info"* nonnull %198, %"class.__cxxabiv1::__shim_type_info"* nonnull %217, i8** nonnull dereferenceable(8) %11)
  br i1 %227, label %229, label %228

228:                                              ; preds = %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #10
  br label %300

229:                                              ; preds = %222
  %230 = ptrtoint i8* %163 to i64
  %231 = bitcast i8** %11 to i64*
  %232 = load i64, i64* %231, align 8, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #10
  br label %336

233:                                              ; preds = %177
  %234 = icmp eq i64 %184, 0
  %235 = or i1 %135, %234
  %236 = select i1 %234, i8 1, i8 %164
  br i1 %235, label %300, label %237

237:                                              ; preds = %233
  br i1 %19, label %238, label %291

238:                                              ; preds = %237
  %239 = call i64 @_ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception(%struct._Unwind_Exception* %3)
  %240 = icmp eq i64 %239, 4849336966747728641
  br i1 %240, label %241, label %243

241:                                              ; preds = %238
  %242 = load i8*, i8** %139, align 8, !tbaa !13
  br label %243

243:                                              ; preds = %241, %238
  %244 = phi i8* [ %242, %241 ], [ %137, %238 ]
  %245 = load %"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"** %141, align 16, !tbaa !15
  %246 = icmp eq i8* %244, null
  %247 = icmp eq %"class.__cxxabiv1::__shim_type_info"* %245, null
  %248 = or i1 %246, %247
  br i1 %248, label %249, label %250

249:                                              ; preds = %243
  call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext true, %struct._Unwind_Exception* %3)
  unreachable

250:                                              ; preds = %243
  br i1 %142, label %251, label %252

251:                                              ; preds = %250
  call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext false, %struct._Unwind_Exception* %3)
  unreachable

252:                                              ; preds = %250
  %253 = xor i64 %184, -1
  %254 = getelementptr inbounds i8, i8* %80, i64 %253
  br label %255

255:                                              ; preds = %267, %252
  %256 = phi i64 [ 0, %252 ], [ %268, %267 ]
  %257 = phi i64 [ 0, %252 ], [ %269, %267 ]
  %258 = phi i8* [ %254, %252 ], [ %259, %267 ]
  %259 = getelementptr inbounds i8, i8* %258, i64 1
  %260 = load i8, i8* %258, align 1, !tbaa !12
  %261 = and i8 %260, 127
  %262 = zext i8 %261 to i64
  %263 = shl i64 %262, %257
  %264 = or i64 %263, %256
  %265 = add i64 %257, 7
  %266 = icmp slt i8 %260, 0
  br i1 %266, label %267, label %270

267:                                              ; preds = %255, %276
  %268 = phi i64 [ %264, %255 ], [ 0, %276 ]
  %269 = phi i64 [ %265, %255 ], [ 0, %276 ]
  br label %255

270:                                              ; preds = %255
  %271 = icmp eq i64 %264, 0
  br i1 %271, label %288, label %272

272:                                              ; preds = %270
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144)
  store i8* %80, i8** %7, align 8, !tbaa !11
  %273 = xor i1 %148, true
  %274 = or i1 %273, %152
  br i1 %274, label %275, label %276

275:                                              ; preds = %272
  call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext true, %struct._Unwind_Exception* %3) #10
  unreachable

276:                                              ; preds = %272
  %277 = load i64, i64* %154, align 8
  %278 = shl i64 %264, %277
  %279 = sub i64 0, %278
  %280 = getelementptr inbounds i8, i8* %80, i64 %279
  store i8* %280, i8** %7, align 8, !tbaa !11
  %281 = call fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nonnull %7, i8 zeroext %62) #10
  %282 = inttoptr i64 %281 to %"class.__cxxabiv1::__shim_type_info"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #10
  store i8* %244, i8** %8, align 8, !tbaa !11
  %283 = inttoptr i64 %281 to i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)***
  %284 = load i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)**, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*** %283, align 8, !tbaa !16
  %285 = getelementptr inbounds i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)** %284, i64 4
  %286 = load i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)** %285, align 8
  %287 = call zeroext i1 %286(%"class.__cxxabiv1::__shim_type_info"* %282, %"class.__cxxabiv1::__shim_type_info"* %245, i8** nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #10
  br i1 %287, label %300, label %267

288:                                              ; preds = %270
  %289 = ptrtoint i8* %163 to i64
  %290 = ptrtoint i8* %244 to i64
  br label %336

291:                                              ; preds = %237
  %292 = ptrtoint i8* %163 to i64
  %293 = call i64 @_ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception(%struct._Unwind_Exception* %3)
  %294 = icmp eq i64 %293, 4849336966747728641
  br i1 %294, label %295, label %297

295:                                              ; preds = %291
  %296 = load i8*, i8** %139, align 8, !tbaa !13
  br label %297

297:                                              ; preds = %295, %291
  %298 = phi i8* [ %296, %295 ], [ %137, %291 ]
  %299 = ptrtoint i8* %298 to i64
  br label %336

300:                                              ; preds = %276, %233, %228, %209
  %301 = phi i8 [ %236, %233 ], [ %164, %228 ], [ %164, %209 ], [ %164, %276 ]
  br label %302

302:                                              ; preds = %302, %300
  %303 = phi i64 [ 0, %300 ], [ %311, %302 ]
  %304 = phi i64 [ 0, %300 ], [ %312, %302 ]
  %305 = phi i8* [ %169, %300 ], [ %306, %302 ]
  %306 = getelementptr inbounds i8, i8* %305, i64 1
  %307 = load i8, i8* %305, align 1, !tbaa !12
  %308 = and i8 %307, 127
  %309 = zext i8 %308 to i64
  %310 = shl i64 %309, %304
  %311 = or i64 %310, %303
  %312 = add i64 %304, 7
  %313 = icmp slt i8 %307, 0
  br i1 %313, label %302, label %314

314:                                              ; preds = %302
  %315 = and i8 %307, 64
  %316 = icmp ne i8 %315, 0
  %317 = icmp ult i64 %312, 64
  %318 = and i1 %317, %316
  %319 = shl i64 -1, %312
  %320 = select i1 %318, i64 %319, i64 0
  %321 = or i64 %311, %320
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %329

323:                                              ; preds = %314
  %324 = and i8 %301, 1
  %325 = icmp ne i8 %324, 0
  %326 = and i32 %1, 2
  %327 = icmp ne i32 %326, 0
  %328 = and i1 %327, %325
  br i1 %328, label %336, label %335

329:                                              ; preds = %314
  %330 = getelementptr inbounds i8, i8* %169, i64 %321
  br label %162

331:                                              ; preds = %119
  %332 = icmp ult i64 %54, %103
  br i1 %332, label %333, label %99

333:                                              ; preds = %331
  tail call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext %19, %struct._Unwind_Exception* %3)
  unreachable

334:                                              ; preds = %99
  tail call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext %19, %struct._Unwind_Exception* %3)
  unreachable

335:                                              ; preds = %129, %323, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  br label %356

336:                                              ; preds = %323, %206, %229, %288, %297
  %337 = phi i64 [ %292, %297 ], [ %289, %288 ], [ %230, %229 ], [ %201, %206 ], [ 0, %323 ]
  %338 = phi i64 [ %299, %297 ], [ %290, %288 ], [ %232, %229 ], [ %208, %206 ], [ 0, %323 ]
  %339 = phi i64 [ %184, %297 ], [ %184, %288 ], [ %184, %229 ], [ %184, %206 ], [ 0, %323 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %340 = icmp eq i32 %33, 0
  br i1 %340, label %352, label %341

341:                                              ; preds = %336
  br i1 %19, label %342, label %356

342:                                              ; preds = %341
  %343 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 -3
  %344 = bitcast %struct._Unwind_Exception* %343 to %"struct.__cxxabiv1::__cxa_exception"*
  %345 = trunc i64 %339 to i32
  %346 = getelementptr inbounds %"struct.__cxxabiv1::__cxa_exception", %"struct.__cxxabiv1::__cxa_exception"* %344, i64 0, i32 8
  store i32 %345, i32* %346, align 4, !tbaa !2
  %347 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 -1, i32 0
  store i64 %337, i64* %347, align 16, !tbaa !18
  %348 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 -1, i32 1
  %349 = bitcast void (i32, %struct._Unwind_Exception*)** %348 to i64*
  store i64 %50, i64* %349, align 8, !tbaa !19
  %350 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 -1, i32 2
  store i64 %127, i64* %350, align 16, !tbaa !10
  %351 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %3, i64 -1, i32 3
  store i64 %338, i64* %351, align 8, !tbaa !20
  br label %356

352:                                              ; preds = %41, %130, %336
  %353 = phi i64 [ %127, %336 ], [ %127, %130 ], [ 0, %41 ]
  %354 = phi i64 [ %339, %336 ], [ 0, %130 ], [ 0, %41 ]
  %355 = ptrtoint %struct._Unwind_Exception* %3 to i64
  call void @_Unwind_SetGR(%struct._Unwind_Context* %4, i32 0, i64 %355)
  call void @_Unwind_SetGR(%struct._Unwind_Context* %4, i32 1, i64 %354)
  call void @_Unwind_SetIP(%struct._Unwind_Context* %4, i64 %353)
  br label %356

356:                                              ; preds = %38, %35, %23, %352, %342, %341, %335, %48, %5
  %357 = phi i32 [ 3, %5 ], [ 7, %23 ], [ 7, %352 ], [ 6, %342 ], [ 6, %341 ], [ 8, %335 ], [ 8, %48 ], [ 3, %35 ], [ 3, %38 ]
  ret i32 %357
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn ssp uwtable
define hidden void @__cxa_call_unexpected(i8*) local_unnamed_addr #2 personality i8* bitcast (i32 (i32, i32, i64, %struct._Unwind_Exception*, %struct._Unwind_Context*)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.std::bad_exception", align 8
  %8 = bitcast i8* %0 to %struct._Unwind_Exception*
  %9 = icmp eq i8* %0, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  tail call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext false, %struct._Unwind_Exception* null)
  unreachable

11:                                               ; preds = %1
  %12 = tail call i8* @__cxa_begin_catch(i8* nonnull %0) #10
  %13 = tail call zeroext i1 @_ZN10__cxxabiv121__isOurExceptionClassEPK17_Unwind_Exception(%struct._Unwind_Exception* nonnull %8)
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  br i1 %13, label %15, label %34

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %0, i64 -96
  %17 = bitcast i8* %16 to %"struct.__cxxabiv1::__cxa_exception"*
  %18 = getelementptr inbounds i8, i8* %0, i64 -56
  %19 = bitcast i8* %18 to void ()**
  %20 = load void ()*, void ()** %19, align 8, !tbaa !21
  %21 = getelementptr inbounds i8, i8* %0, i64 -64
  %22 = bitcast i8* %21 to void ()**
  %23 = load void ()*, void ()** %22, align 16, !tbaa !22
  %24 = getelementptr inbounds i8, i8* %0, i64 -36
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4, !tbaa !2
  %27 = getelementptr inbounds i8, i8* %0, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !19
  %30 = bitcast i8** %6 to i64*
  store i64 %29, i64* %30, align 8, !tbaa !11
  %31 = xor i32 %26, -1
  %32 = sext i32 %31 to i64
  %33 = inttoptr i64 %29 to i8*
  br label %37

34:                                               ; preds = %11
  %35 = tail call void ()* @_ZSt13get_terminatev() #10
  %36 = tail call void ()* @_ZSt14get_unexpectedv() #10
  br label %37

37:                                               ; preds = %34, %15
  %38 = phi i8* [ %33, %15 ], [ inttoptr (i64 -6148914691236517206 to i8*), %34 ]
  %39 = phi void ()* [ %20, %15 ], [ %35, %34 ]
  %40 = phi %"struct.__cxxabiv1::__cxa_exception"* [ %17, %15 ], [ null, %34 ]
  %41 = phi i64 [ %32, %15 ], [ 6148914691236517205, %34 ]
  %42 = phi void ()* [ %23, %15 ], [ %36, %34 ]
  invoke void @_ZSt12__unexpectedPFvvE(void ()* %42) #11
          to label %43 unwind label %44

43:                                               ; preds = %37
  unreachable

44:                                               ; preds = %37
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = tail call i8* @__cxa_begin_catch(i8* %46) #10
  br i1 %13, label %48, label %243

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8, i8* %38, i64 1
  store i8* %49, i8** %6, align 8, !tbaa !11
  %50 = load i8, i8* %38, align 1, !tbaa !12
  %51 = call fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nonnull %6, i8 zeroext %50)
  %52 = load i8*, i8** %6, align 8, !tbaa !11
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  store i8* %53, i8** %6, align 8, !tbaa !11
  %54 = load i8, i8* %52, align 1, !tbaa !12
  %55 = icmp eq i8 %54, -1
  br i1 %55, label %56, label %57

56:                                               ; preds = %48
  tail call void @_ZSt11__terminatePFvvE(void ()* %39) #12
  unreachable

57:                                               ; preds = %48, %57
  %58 = phi i64 [ %66, %57 ], [ 0, %48 ]
  %59 = phi i64 [ %67, %57 ], [ 0, %48 ]
  %60 = phi i8* [ %61, %57 ], [ %53, %48 ]
  %61 = getelementptr inbounds i8, i8* %60, i64 1
  %62 = load i8, i8* %60, align 1, !tbaa !12
  %63 = and i8 %62, 127
  %64 = zext i8 %63 to i64
  %65 = shl i64 %64, %59
  %66 = or i64 %65, %58
  %67 = add i64 %59, 7
  %68 = icmp slt i8 %62, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57
  store i8* %61, i8** %6, align 8, !tbaa !11
  %70 = getelementptr inbounds i8, i8* %61, i64 %66
  %71 = invoke %"struct.__cxxabiv1::__cxa_eh_globals"* @__cxa_get_globals_fast()
          to label %72 unwind label %77

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"struct.__cxxabiv1::__cxa_eh_globals", %"struct.__cxxabiv1::__cxa_eh_globals"* %71, i64 0, i32 0
  %74 = load %"struct.__cxxabiv1::__cxa_exception"*, %"struct.__cxxabiv1::__cxa_exception"** %73, align 8, !tbaa !23
  %75 = icmp eq %"struct.__cxxabiv1::__cxa_exception"* %74, null
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  tail call void @_ZSt11__terminatePFvvE(void ()* %39) #12
  unreachable

77:                                               ; preds = %69
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  %80 = extractvalue { i8*, i32 } %78, 1
  br label %240

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"struct.__cxxabiv1::__cxa_exception", %"struct.__cxxabiv1::__cxa_exception"* %74, i64 0, i32 13
  %83 = invoke zeroext i1 @_ZN10__cxxabiv121__isOurExceptionClassEPK17_Unwind_Exception(%struct._Unwind_Exception* %82)
          to label %84 unwind label %163

84:                                               ; preds = %81
  %85 = xor i1 %83, true
  %86 = icmp eq %"struct.__cxxabiv1::__cxa_exception"* %74, %40
  %87 = or i1 %86, %85
  br i1 %87, label %175, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.__cxxabiv1::__cxa_exception", %"struct.__cxxabiv1::__cxa_exception"* %74, i64 0, i32 2
  %90 = bitcast %"class.std::type_info"** %89 to %"class.__cxxabiv1::__shim_type_info"**
  %91 = load %"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"** %90, align 16, !tbaa !15
  %92 = invoke i64 @_ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception(%struct._Unwind_Exception* %82)
          to label %93 unwind label %169

93:                                               ; preds = %88
  %94 = icmp eq i64 %92, 4849336966747728641
  br i1 %94, label %95, label %99

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"struct.__cxxabiv1::__cxa_exception", %"struct.__cxxabiv1::__cxa_exception"* %74, i64 0, i32 1
  %97 = bitcast i64* %96 to i8**
  %98 = load i8*, i8** %97, align 8, !tbaa !13
  br label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"struct.__cxxabiv1::__cxa_exception", %"struct.__cxxabiv1::__cxa_exception"* %74, i64 1
  %101 = bitcast %"struct.__cxxabiv1::__cxa_exception"* %100 to i8*
  br label %102

102:                                              ; preds = %99, %95
  %103 = phi i8* [ %98, %95 ], [ %101, %99 ]
  %104 = icmp eq i8* %70, null
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext false, %struct._Unwind_Exception* nonnull %8)
  unreachable

106:                                              ; preds = %102
  %107 = getelementptr inbounds i8, i8* %70, i64 %41
  %108 = bitcast i8** %5 to i8*
  %109 = bitcast i8** %4 to i8*
  %110 = and i8 %54, 15
  %111 = icmp ult i8 %110, 13
  %112 = zext i8 %110 to i16
  %113 = lshr i16 7197, %112
  %114 = and i16 %113, 1
  %115 = icmp eq i16 %114, 0
  %116 = zext i8 %110 to i64
  %117 = getelementptr inbounds [13 x i64], [13 x i64]* @switch.table.__cxa_call_unexpected.2, i64 0, i64 %116
  br label %118

118:                                              ; preds = %130, %106
  %119 = phi i64 [ 0, %106 ], [ %131, %130 ]
  %120 = phi i64 [ 0, %106 ], [ %132, %130 ]
  %121 = phi i8* [ %107, %106 ], [ %122, %130 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 1
  %123 = load i8, i8* %121, align 1, !tbaa !12
  %124 = and i8 %123, 127
  %125 = zext i8 %124 to i64
  %126 = shl i64 %125, %120
  %127 = or i64 %126, %119
  %128 = add i64 %120, 7
  %129 = icmp slt i8 %123, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %118, %151
  %131 = phi i64 [ %127, %118 ], [ 0, %151 ]
  %132 = phi i64 [ %128, %118 ], [ 0, %151 ]
  br label %118

133:                                              ; preds = %118
  %134 = icmp eq i64 %127, 0
  br i1 %134, label %175, label %135

135:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109)
  store i8* %70, i8** %4, align 8, !tbaa !11
  %136 = xor i1 %111, true
  %137 = or i1 %136, %115
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext true, %struct._Unwind_Exception* nonnull %8) #10
  unreachable

139:                                              ; preds = %135
  %140 = load i64, i64* %117, align 8
  %141 = shl i64 %127, %140
  %142 = sub i64 0, %141
  %143 = getelementptr inbounds i8, i8* %70, i64 %142
  store i8* %143, i8** %4, align 8, !tbaa !11
  %144 = call fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nonnull %4, i8 zeroext %54) #10
  %145 = inttoptr i64 %144 to %"class.__cxxabiv1::__shim_type_info"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #10
  store i8* %103, i8** %5, align 8, !tbaa !11
  %146 = inttoptr i64 %144 to i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)***
  %147 = load i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)**, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*** %146, align 8, !tbaa !16
  %148 = getelementptr inbounds i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)** %147, i64 4
  %149 = load i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)** %148, align 8
  %150 = invoke zeroext i1 %149(%"class.__cxxabiv1::__shim_type_info"* %145, %"class.__cxxabiv1::__shim_type_info"* %91, i8** nonnull dereferenceable(8) %5)
          to label %151 unwind label %167

151:                                              ; preds = %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  br i1 %150, label %152, label %130

152:                                              ; preds = %151
  %153 = getelementptr inbounds %"struct.__cxxabiv1::__cxa_exception", %"struct.__cxxabiv1::__cxa_exception"* %74, i64 0, i32 7
  %154 = load i32, i32* %153, align 8, !tbaa !25
  %155 = sub nsw i32 0, %154
  store i32 %155, i32* %153, align 8, !tbaa !25
  %156 = getelementptr inbounds %"struct.__cxxabiv1::__cxa_eh_globals", %"struct.__cxxabiv1::__cxa_eh_globals"* %71, i64 0, i32 1
  %157 = load i32, i32* %156, align 8, !tbaa !26
  %158 = add i32 %157, 1
  store i32 %158, i32* %156, align 8, !tbaa !26
  invoke void @__cxa_end_catch()
          to label %159 unwind label %169

159:                                              ; preds = %152
  invoke void @__cxa_end_catch()
          to label %160 unwind label %169

160:                                              ; preds = %159
  %161 = bitcast %struct._Unwind_Exception* %82 to i8*
  %162 = call i8* @__cxa_begin_catch(i8* %161) #10
  invoke void @__cxa_rethrow() #11
          to label %250 unwind label %169

163:                                              ; preds = %81
  %164 = landingpad { i8*, i32 }
          cleanup
  %165 = extractvalue { i8*, i32 } %164, 0
  %166 = extractvalue { i8*, i32 } %164, 1
  br label %240

167:                                              ; preds = %139
  %168 = landingpad { i8*, i32 }
          cleanup
  br label %171

169:                                              ; preds = %88, %152, %159, %160
  %170 = landingpad { i8*, i32 }
          cleanup
  br label %171

171:                                              ; preds = %169, %167
  %172 = phi { i8*, i32 } [ %168, %167 ], [ %170, %169 ]
  %173 = extractvalue { i8*, i32 } %172, 0
  %174 = extractvalue { i8*, i32 } %172, 1
  br label %240

175:                                              ; preds = %133, %84
  %176 = bitcast %"class.std::bad_exception"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #10
  %177 = getelementptr inbounds %"class.std::bad_exception", %"class.std::bad_exception"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt13bad_exception, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %177, align 8, !tbaa !16
  %178 = icmp eq i8* %70, null
  br i1 %178, label %179, label %180

179:                                              ; preds = %175
  call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext false, %struct._Unwind_Exception* nonnull %8)
  unreachable

180:                                              ; preds = %175
  %181 = getelementptr inbounds i8, i8* %70, i64 %41
  %182 = bitcast i8** %3 to i8*
  %183 = bitcast i8** %2 to i8*
  %184 = and i8 %54, 15
  %185 = bitcast i8** %3 to %"class.std::bad_exception"**
  %186 = icmp ult i8 %184, 13
  %187 = zext i8 %184 to i16
  %188 = lshr i16 7197, %187
  %189 = and i16 %188, 1
  %190 = icmp eq i16 %189, 0
  %191 = zext i8 %184 to i64
  %192 = getelementptr inbounds [13 x i64], [13 x i64]* @switch.table.__cxa_call_unexpected.2, i64 0, i64 %191
  br label %193

193:                                              ; preds = %205, %180
  %194 = phi i64 [ 0, %180 ], [ %206, %205 ]
  %195 = phi i64 [ 0, %180 ], [ %207, %205 ]
  %196 = phi i8* [ %181, %180 ], [ %197, %205 ]
  %197 = getelementptr inbounds i8, i8* %196, i64 1
  %198 = load i8, i8* %196, align 1, !tbaa !12
  %199 = and i8 %198, 127
  %200 = zext i8 %199 to i64
  %201 = shl i64 %200, %195
  %202 = or i64 %201, %194
  %203 = add i64 %195, 7
  %204 = icmp slt i8 %198, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %193, %226
  %206 = phi i64 [ %202, %193 ], [ 0, %226 ]
  %207 = phi i64 [ %203, %193 ], [ 0, %226 ]
  br label %193

208:                                              ; preds = %193
  %209 = icmp eq i64 %202, 0
  br i1 %209, label %239, label %210

210:                                              ; preds = %208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183)
  store i8* %70, i8** %2, align 8, !tbaa !11
  %211 = xor i1 %186, true
  %212 = or i1 %211, %190
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext true, %struct._Unwind_Exception* nonnull %8) #10
  unreachable

214:                                              ; preds = %210
  %215 = load i64, i64* %192, align 8
  %216 = shl i64 %202, %215
  %217 = sub i64 0, %216
  %218 = getelementptr inbounds i8, i8* %70, i64 %217
  store i8* %218, i8** %2, align 8, !tbaa !11
  %219 = call fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nonnull %2, i8 zeroext %54) #10
  %220 = inttoptr i64 %219 to %"class.__cxxabiv1::__shim_type_info"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #10
  store %"class.std::bad_exception"* %7, %"class.std::bad_exception"** %185, align 8, !tbaa !11
  %221 = inttoptr i64 %219 to i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)***
  %222 = load i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)**, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*** %221, align 8, !tbaa !16
  %223 = getelementptr inbounds i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)** %222, i64 4
  %224 = load i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)*, i1 (%"class.__cxxabiv1::__shim_type_info"*, %"class.__cxxabiv1::__shim_type_info"*, i8**)** %223, align 8
  %225 = invoke zeroext i1 %224(%"class.__cxxabiv1::__shim_type_info"* %220, %"class.__cxxabiv1::__shim_type_info"* bitcast (i8** @_ZTISt13bad_exception to %"class.__cxxabiv1::__shim_type_info"*), i8** nonnull dereferenceable(8) %3)
          to label %226 unwind label %231

226:                                              ; preds = %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #10
  br i1 %225, label %227, label %205

227:                                              ; preds = %226
  invoke void @__cxa_end_catch()
          to label %228 unwind label %233

228:                                              ; preds = %227
  %229 = call i8* @__cxa_allocate_exception(i64 8) #10
  %230 = bitcast i8* %229 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt13bad_exception, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %230, align 8, !tbaa !16
  invoke void @__cxa_throw(i8* %229, i8* bitcast (i8** @_ZTISt13bad_exception to i8*), i8* bitcast (void (%"class.std::bad_exception"*)* @_ZNSt13bad_exceptionD1Ev to i8*)) #11
          to label %250 unwind label %233

231:                                              ; preds = %214
  %232 = landingpad { i8*, i32 }
          cleanup
  br label %235

233:                                              ; preds = %227, %228
  %234 = landingpad { i8*, i32 }
          cleanup
  br label %235

235:                                              ; preds = %233, %231
  %236 = phi { i8*, i32 } [ %232, %231 ], [ %234, %233 ]
  %237 = extractvalue { i8*, i32 } %236, 0
  %238 = extractvalue { i8*, i32 } %236, 1
  call void @_ZNSt13bad_exceptionD1Ev(%"class.std::bad_exception"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #10
  br label %240

239:                                              ; preds = %208
  call void @_ZNSt13bad_exceptionD1Ev(%"class.std::bad_exception"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #10
  br label %243

240:                                              ; preds = %77, %171, %235, %163
  %241 = phi i8* [ %79, %77 ], [ %165, %163 ], [ %237, %235 ], [ %173, %171 ]
  %242 = phi i32 [ %80, %77 ], [ %166, %163 ], [ %238, %235 ], [ %174, %171 ]
  invoke void @__cxa_end_catch()
          to label %244 unwind label %247

243:                                              ; preds = %239, %44
  call void @__cxa_end_catch()
  call void @_ZSt11__terminatePFvvE(void ()* %39) #12
  unreachable

244:                                              ; preds = %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %245 = insertvalue { i8*, i32 } undef, i8* %241, 0
  %246 = insertvalue { i8*, i32 } %245, i32 %242, 1
  resume { i8*, i32 } %246

247:                                              ; preds = %240
  %248 = landingpad { i8*, i32 }
          catch i8* null
  %249 = extractvalue { i8*, i32 } %248, 0
  call void @__clang_call_terminate(i8* %249) #12
  unreachable

250:                                              ; preds = %228, %160
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @_ZN10__cxxabiv1L14call_terminateEbP17_Unwind_Exception(i1 zeroext, %struct._Unwind_Exception*) unnamed_addr #3 {
  %3 = bitcast %struct._Unwind_Exception* %1 to i8*
  %4 = tail call i8* @__cxa_begin_catch(i8* %3) #10
  br i1 %0, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._Unwind_Exception, %struct._Unwind_Exception* %1, i64 -2, i32 1
  %7 = bitcast void (i32, %struct._Unwind_Exception*)** %6 to void ()**
  %8 = load void ()*, void ()** %7, align 8, !tbaa !21
  tail call void @_ZSt11__terminatePFvvE(void ()* %8) #12
  unreachable

9:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #12
  unreachable
}

; Function Attrs: nounwind
declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN10__cxxabiv121__isOurExceptionClassEPK17_Unwind_Exception(%struct._Unwind_Exception*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void ()* @_ZSt13get_terminatev() local_unnamed_addr #4

; Function Attrs: nounwind
declare void ()* @_ZSt14get_unexpectedv() local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZSt12__unexpectedPFvvE(void ()*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN10__cxxabiv1L18readEncodedPointerEPPKhh(i8** nocapture, i8 zeroext) unnamed_addr #7 {
  %3 = zext i8 %1 to i32
  %4 = icmp eq i8 %1, -1
  br i1 %4, label %106, label %5

5:                                                ; preds = %2
  %6 = bitcast i8** %0 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !11
  %8 = and i32 %3, 15
  switch i32 %8, label %84 [
    i32 0, label %9
    i32 1, label %14
    i32 9, label %28
    i32 2, label %50
    i32 3, label %56
    i32 4, label %62
    i32 10, label %67
    i32 11, label %73
    i32 12, label %79
  ]

9:                                                ; preds = %5
  %10 = inttoptr i64 %7 to i8*
  %11 = inttoptr i64 %7 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  br label %85

14:                                               ; preds = %5
  %15 = inttoptr i64 %7 to i8*
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %25, %16 ]
  %18 = phi i64 [ 0, %14 ], [ %26, %16 ]
  %19 = phi i8* [ %15, %14 ], [ %20, %16 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  %21 = load i8, i8* %19, align 1, !tbaa !12
  %22 = and i8 %21, 127
  %23 = zext i8 %22 to i64
  %24 = shl i64 %23, %18
  %25 = or i64 %24, %17
  %26 = add i64 %18, 7
  %27 = icmp slt i8 %21, 0
  br i1 %27, label %16, label %85

28:                                               ; preds = %5
  %29 = inttoptr i64 %7 to i8*
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %39, %30 ]
  %32 = phi i64 [ 0, %28 ], [ %40, %30 ]
  %33 = phi i8* [ %29, %28 ], [ %34, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  %35 = load i8, i8* %33, align 1, !tbaa !12
  %36 = and i8 %35, 127
  %37 = zext i8 %36 to i64
  %38 = shl i64 %37, %32
  %39 = or i64 %38, %31
  %40 = add i64 %32, 7
  %41 = icmp slt i8 %35, 0
  br i1 %41, label %30, label %42

42:                                               ; preds = %30
  %43 = and i8 %35, 64
  %44 = icmp ne i8 %43, 0
  %45 = icmp ult i64 %40, 64
  %46 = and i1 %45, %44
  %47 = shl i64 -1, %40
  %48 = select i1 %46, i64 %47, i64 0
  %49 = or i64 %39, %48
  br label %85

50:                                               ; preds = %5
  %51 = inttoptr i64 %7 to i8*
  %52 = inttoptr i64 %7 to i16*
  %53 = load i16, i16* %52, align 1
  %54 = getelementptr inbounds i8, i8* %51, i64 2
  %55 = zext i16 %53 to i64
  br label %85

56:                                               ; preds = %5
  %57 = inttoptr i64 %7 to i8*
  %58 = inttoptr i64 %7 to i32*
  %59 = load i32, i32* %58, align 1
  %60 = getelementptr inbounds i8, i8* %57, i64 4
  %61 = zext i32 %59 to i64
  br label %85

62:                                               ; preds = %5
  %63 = inttoptr i64 %7 to i8*
  %64 = inttoptr i64 %7 to i64*
  %65 = load i64, i64* %64, align 1
  %66 = getelementptr inbounds i8, i8* %63, i64 8
  br label %85

67:                                               ; preds = %5
  %68 = inttoptr i64 %7 to i8*
  %69 = inttoptr i64 %7 to i16*
  %70 = load i16, i16* %69, align 1
  %71 = getelementptr inbounds i8, i8* %68, i64 2
  %72 = sext i16 %70 to i64
  br label %85

73:                                               ; preds = %5
  %74 = inttoptr i64 %7 to i8*
  %75 = inttoptr i64 %7 to i32*
  %76 = load i32, i32* %75, align 1
  %77 = getelementptr inbounds i8, i8* %74, i64 4
  %78 = sext i32 %76 to i64
  br label %85

79:                                               ; preds = %5
  %80 = inttoptr i64 %7 to i8*
  %81 = inttoptr i64 %7 to i64*
  %82 = load i64, i64* %81, align 1
  %83 = getelementptr inbounds i8, i8* %80, i64 8
  br label %85

84:                                               ; preds = %5
  tail call void @abort() #12
  unreachable

85:                                               ; preds = %16, %79, %73, %67, %62, %56, %50, %42, %9
  %86 = phi i8* [ %83, %79 ], [ %77, %73 ], [ %71, %67 ], [ %66, %62 ], [ %60, %56 ], [ %54, %50 ], [ %34, %42 ], [ %13, %9 ], [ %20, %16 ]
  %87 = phi i64 [ %82, %79 ], [ %78, %73 ], [ %72, %67 ], [ %65, %62 ], [ %61, %56 ], [ %55, %50 ], [ %49, %42 ], [ %12, %9 ], [ %25, %16 ]
  %88 = ptrtoint i8* %86 to i64
  %89 = lshr i32 %3, 4
  %90 = and i32 %89, 7
  switch i32 %90, label %95 [
    i32 0, label %96
    i32 1, label %91
  ]

91:                                               ; preds = %85
  %92 = icmp eq i64 %87, 0
  br i1 %92, label %104, label %93

93:                                               ; preds = %91
  %94 = add i64 %87, %7
  br label %96

95:                                               ; preds = %85
  tail call void @abort() #12
  unreachable

96:                                               ; preds = %93, %85
  %97 = phi i64 [ %94, %93 ], [ %87, %85 ]
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %96
  %100 = icmp slt i8 %1, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %99
  %102 = inttoptr i64 %97 to i64*
  %103 = load i64, i64* %102, align 8, !tbaa !27
  br label %104

104:                                              ; preds = %91, %96, %101, %99
  %105 = phi i64 [ %103, %101 ], [ %97, %99 ], [ 0, %96 ], [ 0, %91 ]
  store i64 %88, i64* %6, align 8, !tbaa !11
  br label %106

106:                                              ; preds = %2, %104
  %107 = phi i64 [ %105, %104 ], [ 0, %2 ]
  ret i64 %107
}

; Function Attrs: noreturn nounwind
declare void @_ZSt11__terminatePFvvE(void ()*) local_unnamed_addr #8

declare %"struct.__cxxabiv1::__cxa_eh_globals"* @__cxa_get_globals_fast() local_unnamed_addr #5

declare i64 @_ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception(%struct._Unwind_Exception*) local_unnamed_addr #5

declare void @__cxa_end_catch() local_unnamed_addr #5

declare void @__cxa_rethrow() local_unnamed_addr

declare i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: nounwind
declare void @_ZNSt13bad_exceptionD1Ev(%"class.std::bad_exception"*) unnamed_addr #4

declare void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #9 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #10
  tail call void @_ZSt9terminatev() #12
  unreachable
}

declare void @_ZSt9terminatev() local_unnamed_addr

declare void @_Unwind_SetGR(%struct._Unwind_Context*, i32, i64) local_unnamed_addr #5

declare void @_Unwind_SetIP(%struct._Unwind_Context*, i64) local_unnamed_addr #5

declare i8* @_Unwind_GetLanguageSpecificData(%struct._Unwind_Context*) local_unnamed_addr #5

declare i64 @_Unwind_GetIP(%struct._Unwind_Context*) local_unnamed_addr #5

declare i64 @_Unwind_GetRegionStart(%struct._Unwind_Context*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

attributes #0 = { ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !8, i64 60}
!3 = !{!"_ZTSN10__cxxabiv115__cxa_exceptionE", !4, i64 0, !7, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !8, i64 56, !8, i64 60, !4, i64 64, !4, i64 72, !4, i64 80, !4, i64 88, !9, i64 96}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!"long", !5, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = !{!"_ZTS17_Unwind_Exception", !7, i64 0, !4, i64 8, !7, i64 16, !7, i64 24}
!10 = !{!3, !4, i64 80}
!11 = !{!4, !4, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !4, i64 8}
!14 = !{!"_ZTSN10__cxxabiv125__cxa_dependent_exceptionE", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !8, i64 56, !8, i64 60, !4, i64 64, !4, i64 72, !4, i64 80, !4, i64 88, !9, i64 96}
!15 = !{!3, !4, i64 16}
!16 = !{!17, !17, i64 0}
!17 = !{!"vtable pointer", !6, i64 0}
!18 = !{!3, !4, i64 64}
!19 = !{!3, !4, i64 72}
!20 = !{!3, !4, i64 88}
!21 = !{!3, !4, i64 40}
!22 = !{!3, !4, i64 32}
!23 = !{!24, !4, i64 0}
!24 = !{!"_ZTSN10__cxxabiv116__cxa_eh_globalsE", !4, i64 0, !8, i64 8}
!25 = !{!3, !8, i64 56}
!26 = !{!24, !8, i64 8}
!27 = !{!7, !7, i64 0}
