; ModuleID = '../../third_party/blink/renderer/core/layout/layout_multi_column_set.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_multi_column_set.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LayoutMultiColumnSet" = type { %"class.blink::LayoutBlockFlow", %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32 }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1756", %"class.std::__1::unique_ptr.1766" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1712, %"class.WTF::Vector.1713", %"class.std::__1::unique_ptr.1718", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1739, %"class.blink::Persistent.1740" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2062 }
%class.scoped_refptr.2062 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2063", %"class.WTF::Vector.630", %"class.WTF::Vector.2065", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2063" = type { %"class.base::RefCounted.2064" }
%"class.base::RefCounted.2064" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2065" = type { %"class.WTF::VectorBuffer.2066" }
%"class.WTF::VectorBuffer.2066" = type { %"class.WTF::VectorBufferBase.2067" }
%"class.WTF::VectorBufferBase.2067" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2068 }
%union.anon.2068 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2048" }
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2050" }
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2076 }
%class.scoped_refptr.2076 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2086" }
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2083" }
%"class.blink::MemberBase.2083" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2085" }
%"class.blink::MemberBase.2085" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2077", %"class.WTF::Vector.2077" }
%"class.WTF::Vector.2077" = type { %"class.WTF::VectorBuffer.2078" }
%"class.WTF::VectorBuffer.2078" = type { %"class.WTF::VectorBufferBase.2079" }
%"class.WTF::VectorBufferBase.2079" = type { %class.scoped_refptr.2076*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2052" }
%"class.WTF::Vector.2052" = type { %"class.WTF::VectorBuffer.2053" }
%"class.WTF::VectorBuffer.2053" = type { %"class.WTF::VectorBufferBase.2054" }
%"class.WTF::VectorBufferBase.2054" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2057", %"class.absl::optional.2057", %"class.absl::optional.2057" }
%"class.absl::optional.2057" = type { %"class.absl::optional_internal::optional_data.2058" }
%"class.absl::optional_internal::optional_data.2058" = type { %"class.absl::optional_internal::optional_data_base.2059" }
%"class.absl::optional_internal::optional_data_base.2059" = type { %"class.absl::optional_internal::optional_data_dtor_base.2060" }
%"class.absl::optional_internal::optional_data_dtor_base.2060" = type { i8, %union.anon.2061 }
%union.anon.2061 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2072" }
%"class.WTF::VectorBuffer.2072" = type { %"class.WTF::VectorBufferBase.2073", [32 x i8] }
%"class.WTF::VectorBufferBase.2073" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1623", %"class.blink::Persistent.1629", %"class.std::__1::unique_ptr.1670", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1686" }
%"class.std::__1::unique_ptr.1623" = type { %"class.std::__1::__compressed_pair.1624" }
%"class.std::__1::__compressed_pair.1624" = type { %"struct.std::__1::__compressed_pair_elem.1625" }
%"struct.std::__1::__compressed_pair_elem.1625" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1629" = type { %"class.blink::PersistentBase.1630" }
%"class.blink::PersistentBase.1630" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1647", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1665" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1633", %"class.blink::Member.1635", %"class.blink::Member.1637", %"class.blink::Member.1639", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1641", %"class.blink::Member.1643", %"class.blink::Member.1643", i8, [7 x i8] }>
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1645", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1710", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1710" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1711", { i64, i64 } }
%"class.blink::WeakMember.1711" = type { %"class.blink::MemberBase.1644" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1645", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1647" = type { %"class.std::__1::__compressed_pair.1648" }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.1649" }
%"struct.std::__1::__compressed_pair_elem.1649" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1650", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1655" }
%"class.WTF::HashMap.1650" = type { %"class.WTF::HashTable.1651" }
%"class.WTF::HashTable.1651" = type <{ %"struct.WTF::KeyValuePair.1654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1654" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1655" = type { %"class.WTF::VectorBuffer.1656" }
%"class.WTF::VectorBuffer.1656" = type { %"class.WTF::VectorBufferBase.1657" }
%"class.WTF::VectorBufferBase.1657" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1663" }
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1663" }
%"class.absl::optional.1665" = type { %"class.absl::optional_internal::optional_data.1666" }
%"class.absl::optional_internal::optional_data.1666" = type { %"class.absl::optional_internal::optional_data_base.1667" }
%"class.absl::optional_internal::optional_data_base.1667" = type { %"class.absl::optional_internal::optional_data_dtor_base.1668" }
%"class.absl::optional_internal::optional_data_dtor_base.1668" = type { i8, %union.anon.1669 }
%union.anon.1669 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.1670" = type { %"class.std::__1::__compressed_pair.1671" }
%"class.std::__1::__compressed_pair.1671" = type { %"struct.std::__1::__compressed_pair_elem.1672" }
%"struct.std::__1::__compressed_pair_elem.1672" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.1673", %"class.WTF::Vector.1673", %"class.WTF::HashMap.1678", %"class.WTF::Vector.1673", i8, [7 x i8] }>
%"class.WTF::HashMap.1678" = type { %"class.WTF::HashTable.1679" }
%"class.WTF::HashTable.1679" = type <{ %"struct.WTF::KeyValuePair.1682"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1682" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.1673" }
%"class.WTF::Vector.1673" = type { %"class.WTF::VectorBuffer.1674" }
%"class.WTF::VectorBuffer.1674" = type { %"class.WTF::VectorBufferBase.1675" }
%"class.WTF::VectorBufferBase.1675" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1689", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.1695", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.1701", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.1689" = type { %"class.std::__1::__compressed_pair.1690" }
%"class.std::__1::__compressed_pair.1690" = type { %"struct.std::__1::__compressed_pair_elem.1691" }
%"struct.std::__1::__compressed_pair_elem.1691" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.1695" = type { %"class.std::__1::__compressed_pair.1696" }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.1697" }
%"struct.std::__1::__compressed_pair_elem.1697" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.1701" = type { %"class.blink::PersistentBase.1702" }
%"class.blink::PersistentBase.1702" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1712 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1713" = type { %"class.WTF::VectorBuffer.1714" }
%"class.WTF::VectorBuffer.1714" = type { %"class.WTF::VectorBufferBase.1715", [8 x i8] }
%"class.WTF::VectorBufferBase.1715" = type { %class.scoped_refptr.1712*, i32, i32 }
%"class.std::__1::unique_ptr.1718" = type { %"class.std::__1::__compressed_pair.1719" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.1720" }
%"struct.std::__1::__compressed_pair_elem.1720" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1721", %"class.absl::optional.1726", %"class.absl::optional.1731" }
%"class.absl::optional.1721" = type { %"class.absl::optional_internal::optional_data.1722" }
%"class.absl::optional_internal::optional_data.1722" = type { %"class.absl::optional_internal::optional_data_base.1723" }
%"class.absl::optional_internal::optional_data_base.1723" = type { %"class.absl::optional_internal::optional_data_dtor_base.1724" }
%"class.absl::optional_internal::optional_data_dtor_base.1724" = type { i8, %union.anon.1725 }
%union.anon.1725 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1726" = type { %"class.absl::optional_internal::optional_data.1727" }
%"class.absl::optional_internal::optional_data.1727" = type { %"class.absl::optional_internal::optional_data_base.1728" }
%"class.absl::optional_internal::optional_data_base.1728" = type { %"class.absl::optional_internal::optional_data_dtor_base.1729" }
%"class.absl::optional_internal::optional_data_dtor_base.1729" = type { i8, [3 x i8], %union.anon.1730 }
%union.anon.1730 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1731" = type { %"class.absl::optional_internal::optional_data.1732" }
%"class.absl::optional_internal::optional_data.1732" = type { %"class.absl::optional_internal::optional_data_base.1733" }
%"class.absl::optional_internal::optional_data_base.1733" = type { %"class.absl::optional_internal::optional_data_dtor_base.1734" }
%"class.absl::optional_internal::optional_data_dtor_base.1734" = type { i8, %union.anon.1735 }
%union.anon.1735 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1739 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1740" = type { %"class.blink::PersistentBase.1741" }
%"class.blink::PersistentBase.1741" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1744", %"struct.blink::PhysicalRect", %"class.blink::Member.1754" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"class.WTF::HashSet.1747"* }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1756" = type { %"class.blink::PersistentBase.1757" }
%"class.blink::PersistentBase.1757" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1760", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type <{ %"class.blink::LayoutFlowThread.base", [7 x i8], %"class.blink::FragmentationContext", %"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutFlowThread.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet", %"class.WTF::PODIntervalTree.1812", i8 }>
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1802", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1802" = type { %"class.WTF::HashTable.1803" }
%"class.WTF::HashTable.1803" = type <{ %"struct.WTF::KeyValuePair.1806"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1806" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1807", i32, i32 }
%"class.WTF::Vector.1807" = type { %"class.WTF::VectorBuffer.1808" }
%"class.WTF::VectorBuffer.1808" = type { %"class.WTF::VectorBufferBase.1809" }
%"class.WTF::VectorBufferBase.1809" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::PODIntervalTree.1812" = type { %"class.WTF::PODRedBlackTree.base.1816", [7 x i8] }
%"class.WTF::PODRedBlackTree.base.1816" = type <{ i32 (...)**, %class.scoped_refptr.1814, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i8 }>
%class.scoped_refptr.1814 = type { %"class.WTF::PODFreeListArena.1815"* }
%"class.WTF::PODFreeListArena.1815" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node" = type opaque
%"class.blink::FragmentationContext" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1760" = type { %"class.std::__1::__compressed_pair.1761" }
%"class.std::__1::__compressed_pair.1761" = type { %"struct.std::__1::__compressed_pair_elem.1762" }
%"struct.std::__1::__compressed_pair_elem.1762" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1769", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1769" = type { %"class.WTF::HashTable.1772", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1772" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1775", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1778, %"class.std::__1::unique_ptr.1779", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1778 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1817", i16, %class.scoped_refptr.1778 }
%"class.WTF::ThreadSafeRefCounted.1817" = type { %"class.base::RefCountedThreadSafe.1818" }
%"class.base::RefCountedThreadSafe.1818" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1779" = type { %"class.std::__1::__compressed_pair.1780" }
%"class.std::__1::__compressed_pair.1780" = type { %"struct.std::__1::__compressed_pair_elem.1781" }
%"struct.std::__1::__compressed_pair_elem.1781" = type { %"class.WTF::Vector.1782"* }
%"class.WTF::Vector.1782" = type { %"class.WTF::VectorBuffer.1783" }
%"class.WTF::VectorBuffer.1783" = type { %"class.WTF::VectorBufferBase.1784" }
%"class.WTF::VectorBufferBase.1784" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1793, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1793 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::MultiColumnFragmentainerGroupList" = type { %"class.blink::LayoutMultiColumnSet"*, %"class.WTF::Vector.1797" }
%"class.WTF::Vector.1797" = type { %"class.WTF::VectorBuffer.1798" }
%"class.WTF::VectorBuffer.1798" = type { %"class.WTF::VectorBufferBase.1799", [32 x i8] }
%"class.WTF::VectorBufferBase.1799" = type { %"class.blink::MultiColumnFragmentainerGroup"*, i32, i32 }
%"class.blink::MultiColumnFragmentainerGroup" = type <{ %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutFlowThread" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet", %"class.WTF::PODIntervalTree.1812", i8, [7 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"struct.blink::PaintInfo" = type opaque
%"class.blink::MultiColumnSetPainter" = type { %"class.blink::LayoutMultiColumnSet"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1822", %"class.blink::Member.1827", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1829", i8, i32, %"class.blink::Color", %"class.absl::optional.1832", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1837", %"class.blink::Member.1839", %"class.blink::Member.1839", %"class.std::__1::unique_ptr.1842", i32, [4 x i8], %"class.WTF::HashSet.1845", %"class.blink::Member.1852", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1854", %"class.blink::HeapHashSet.1861", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1867", i8, %"class.blink::Member.1873", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1888", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1902", i8, %"class.std::__1::unique_ptr.1908", %"class.std::__1::unique_ptr.1984", %"class.WTF::Vector.1990", i32, %class.scoped_refptr.1995, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1996", %"class.blink::Member.1998", %"class.blink::Member.2000", %"class.blink::HeapHashSet.2002", %"class.blink::HeapHashSet.2009", %"class.std::__1::unique_ptr.2016", %"class.std::__1::unique_ptr.2023", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1822" = type { %"class.WTF::HashTable.1823" }
%"class.WTF::HashTable.1823" = type <{ %class.scoped_refptr.1826*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1826 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1827" = type { %"class.blink::MemberBase.1828" }
%"class.blink::MemberBase.1828" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1829" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1830", { i64, i64 } }
%"class.blink::WeakMember.1830" = type { %"class.blink::MemberBase.1831" }
%"class.blink::MemberBase.1831" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1832" = type { %"class.absl::optional_internal::optional_data.1833" }
%"class.absl::optional_internal::optional_data.1833" = type { %"class.absl::optional_internal::optional_data_base.1834" }
%"class.absl::optional_internal::optional_data_base.1834" = type { %"class.absl::optional_internal::optional_data_dtor_base.1835" }
%"class.absl::optional_internal::optional_data_dtor_base.1835" = type { i8, %union.anon.1836 }
%union.anon.1836 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1837" = type { %"class.blink::MemberBase.1838" }
%"class.blink::MemberBase.1838" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::HeapHashSet.1841"* }
%"class.blink::HeapHashSet.1841" = type opaque
%"class.std::__1::unique_ptr.1842" = type { %"class.std::__1::__compressed_pair.1843" }
%"class.std::__1::__compressed_pair.1843" = type { %"struct.std::__1::__compressed_pair_elem.1844" }
%"struct.std::__1::__compressed_pair_elem.1844" = type { %"class.WTF::HashSet.1845"* }
%"class.WTF::HashSet.1845" = type { %"class.WTF::HashTable.1846" }
%"class.WTF::HashTable.1846" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1854" = type { %"class.WTF::HashSet.1857" }
%"class.WTF::HashSet.1857" = type { %"class.WTF::HashTable.1858" }
%"class.WTF::HashTable.1858" = type <{ %"class.blink::Member.1860"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1860" = type opaque
%"class.blink::HeapHashSet.1861" = type { %"class.WTF::HashSet.1864" }
%"class.WTF::HashSet.1864" = type { %"class.WTF::HashTable.1865" }
%"class.WTF::HashTable.1865" = type <{ %"class.blink::Member.1643"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1867" = type { %"class.std::__1::__compressed_pair.1868" }
%"class.std::__1::__compressed_pair.1868" = type { %"struct.std::__1::__compressed_pair_elem.1869" }
%"struct.std::__1::__compressed_pair_elem.1869" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1873" = type { %"class.blink::MemberBase.1874" }
%"class.blink::MemberBase.1874" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet.1877" }
%"class.WTF::LinkedHashSet.1877" = type { %"class.WTF::HashMap.1878", %"class.WTF::VectorBackedLinkedList.1882" }
%"class.WTF::HashMap.1878" = type { %"class.WTF::HashTable.1879" }
%"class.WTF::HashTable.1879" = type <{ %"struct.WTF::KeyValuePair.1881"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1881" = type opaque
%"class.WTF::VectorBackedLinkedList.1882" = type { %"class.WTF::Vector.1883", i32, i32 }
%"class.WTF::Vector.1883" = type { %"class.WTF::VectorBuffer.1884" }
%"class.WTF::VectorBuffer.1884" = type { %"class.WTF::VectorBufferBase.1885" }
%"class.WTF::VectorBufferBase.1885" = type { %"class.WTF::VectorBackedLinkedListNode.1886"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1886" = type opaque
%"class.blink::HeapLinkedHashSet.1888" = type { %"class.WTF::LinkedHashSet.1891" }
%"class.WTF::LinkedHashSet.1891" = type { %"class.WTF::HashMap.1892", %"class.WTF::VectorBackedLinkedList.1896" }
%"class.WTF::HashMap.1892" = type { %"class.WTF::HashTable.1893" }
%"class.WTF::HashTable.1893" = type <{ %"struct.WTF::KeyValuePair.1895"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1895" = type opaque
%"class.WTF::VectorBackedLinkedList.1896" = type { %"class.WTF::Vector.1897", i32, i32 }
%"class.WTF::Vector.1897" = type { %"class.WTF::VectorBuffer.1898" }
%"class.WTF::VectorBuffer.1898" = type { %"class.WTF::VectorBufferBase.1899" }
%"class.WTF::VectorBufferBase.1899" = type { %"class.WTF::VectorBackedLinkedListNode.1900"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1900" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1902" = type { %"class.std::__1::__compressed_pair.1903" }
%"class.std::__1::__compressed_pair.1903" = type { %"struct.std::__1::__compressed_pair_elem.1904" }
%"struct.std::__1::__compressed_pair_elem.1904" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1908" = type { %"class.std::__1::__compressed_pair.1909" }
%"class.std::__1::__compressed_pair.1909" = type { %"struct.std::__1::__compressed_pair_elem.1910" }
%"struct.std::__1::__compressed_pair_elem.1910" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1911, %class.scoped_refptr.1911, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1961", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1966", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1911 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1912", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1919" }
%"class.WTF::RefCounted.1912" = type { %"class.base::RefCounted.1913" }
%"class.base::RefCounted.1913" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1914", i32, [4 x i8] }>
%"class.WTF::Vector.1914" = type { %"class.WTF::VectorBuffer.1915" }
%"class.WTF::VectorBuffer.1915" = type { %"class.WTF::VectorBufferBase.1916" }
%"class.WTF::VectorBufferBase.1916" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1919" = type { %"class.WTF::VectorBuffer.1920" }
%"class.WTF::VectorBuffer.1920" = type { %"class.WTF::VectorBufferBase.1921" }
%"class.WTF::VectorBufferBase.1921" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1922", %"class.std::__1::unique_ptr.1933", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1922" = type { %"class.std::__1::__compressed_pair.1923" }
%"class.std::__1::__compressed_pair.1923" = type { %"struct.std::__1::__compressed_pair_elem.1924" }
%"struct.std::__1::__compressed_pair_elem.1924" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1925", %"class.WTF::Vector.1655", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1925" = type { %"class.WTF::VectorBuffer.1926" }
%"class.WTF::VectorBuffer.1926" = type { %"class.WTF::VectorBufferBase.1927" }
%"class.WTF::VectorBufferBase.1927" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.1933" = type { %"class.std::__1::__compressed_pair.1934" }
%"class.std::__1::__compressed_pair.1934" = type { %"struct.std::__1::__compressed_pair_elem.1935" }
%"struct.std::__1::__compressed_pair_elem.1935" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1936", %"class.absl::optional.1936" }
%"class.absl::optional.1936" = type { %"class.absl::optional_internal::optional_data.1937" }
%"class.absl::optional_internal::optional_data.1937" = type { %"class.absl::optional_internal::optional_data_base.1938" }
%"class.absl::optional_internal::optional_data_base.1938" = type { %"class.absl::optional_internal::optional_data_dtor_base.1939" }
%"class.absl::optional_internal::optional_data_dtor_base.1939" = type { i8, [3 x i8], %union.anon.1940 }
%union.anon.1940 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1919"*, %"class.absl::optional.1946", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1946" = type { %"class.absl::optional_internal::optional_data.1947" }
%"class.absl::optional_internal::optional_data.1947" = type { %"class.absl::optional_internal::optional_data_base.1948" }
%"class.absl::optional_internal::optional_data_base.1948" = type { %"class.absl::optional_internal::optional_data_dtor_base.1949" }
%"class.absl::optional_internal::optional_data_dtor_base.1949" = type { i8, %union.anon.1950 }
%union.anon.1950 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1951", %"class.WTF::Vector.1956" }
%"class.WTF::Vector.1951" = type { %"class.WTF::VectorBuffer.1952" }
%"class.WTF::VectorBuffer.1952" = type { %"class.WTF::VectorBufferBase.1953", [128 x i8] }
%"class.WTF::VectorBufferBase.1953" = type { i32*, i32, i32 }
%"class.WTF::Vector.1956" = type { %"class.WTF::VectorBuffer.1957" }
%"class.WTF::VectorBuffer.1957" = type { %"class.WTF::VectorBufferBase.1958", [128 x i8] }
%"class.WTF::VectorBufferBase.1958" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1961" = type { %"class.WTF::VectorBuffer.1962" }
%"class.WTF::VectorBuffer.1962" = type { %"class.WTF::VectorBufferBase.1963" }
%"class.WTF::VectorBufferBase.1963" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1966" = type { %"class.WTF::HashTable.1967" }
%"class.WTF::HashTable.1967" = type <{ %"struct.WTF::KeyValuePair.1970"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1970" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1971", %"class.WTF::Vector.1976" }
%"class.WTF::HashMap.1971" = type { %"class.WTF::HashTable.1972" }
%"class.WTF::HashTable.1972" = type <{ %"struct.WTF::KeyValuePair.1975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1975" = type opaque
%"class.WTF::Vector.1976" = type { %"class.WTF::VectorBuffer.1977" }
%"class.WTF::VectorBuffer.1977" = type { %"class.WTF::VectorBufferBase.1978" }
%"class.WTF::VectorBufferBase.1978" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1984" = type { %"class.std::__1::__compressed_pair.1985" }
%"class.std::__1::__compressed_pair.1985" = type { %"struct.std::__1::__compressed_pair_elem.1986" }
%"struct.std::__1::__compressed_pair_elem.1986" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1990" = type { %"class.WTF::VectorBuffer.1991" }
%"class.WTF::VectorBuffer.1991" = type { %"class.WTF::VectorBufferBase.1992" }
%"class.WTF::VectorBufferBase.1992" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1995 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1996" = type { %"class.blink::MemberBase.1997" }
%"class.blink::MemberBase.1997" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1998" = type { %"class.blink::MemberBase.1999" }
%"class.blink::MemberBase.1999" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2000" = type { %"class.blink::MemberBase.2001" }
%"class.blink::MemberBase.2001" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2002" = type { %"class.WTF::HashSet.2005" }
%"class.WTF::HashSet.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"class.blink::WeakMember.2008"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2008" = type opaque
%"class.blink::HeapHashSet.2009" = type { %"class.WTF::HashSet.2012" }
%"class.WTF::HashSet.2012" = type { %"class.WTF::HashTable.2013" }
%"class.WTF::HashTable.2013" = type <{ %"class.blink::WeakMember.2015"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2015" = type opaque
%"class.std::__1::unique_ptr.2016" = type { %"class.std::__1::__compressed_pair.2017" }
%"class.std::__1::__compressed_pair.2017" = type { %"struct.std::__1::__compressed_pair_elem.2018" }
%"struct.std::__1::__compressed_pair_elem.2018" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2019" }
%"class.base::time_internal::TimeBase.2019" = type { i64 }
%"class.std::__1::unique_ptr.2023" = type { %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2025" }
%"struct.std::__1::__compressed_pair_elem.2025" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2026", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2026" = type { %"class.absl::optional_internal::optional_data.2027" }
%"class.absl::optional_internal::optional_data.2027" = type { %"class.absl::optional_internal::optional_data_base.2028" }
%"class.absl::optional_internal::optional_data_base.2028" = type { %"class.absl::optional_internal::optional_data_dtor_base.2029" }
%"class.absl::optional_internal::optional_data_dtor_base.2029" = type { i8, %union.anon.2030 }
%union.anon.2030 = type { %"class.base::Time" }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2095", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2096", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2095" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2096" = type { %"class.absl::optional_internal::optional_data.2097" }
%"class.absl::optional_internal::optional_data.2097" = type { %"class.absl::optional_internal::optional_data_base.2098" }
%"class.absl::optional_internal::optional_data_base.2098" = type { %"class.absl::optional_internal::optional_data_dtor_base.2099" }
%"class.absl::optional_internal::optional_data_dtor_base.2099" = type { i8, %union.anon.2100 }
%union.anon.2100 = type { %"class.blink::FloatSize" }
%"class.WTF::Vector.2034" = type { %"class.WTF::VectorBuffer.2035" }
%"class.WTF::VectorBuffer.2035" = type { %"class.WTF::VectorBufferBase.2036" }
%"class.WTF::VectorBufferBase.2036" = type { %"class.blink::LayoutRect"*, i32, i32 }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type opaque
%"class.blink::LayoutNGTableSectionInterface" = type opaque
%"class.blink::LayoutNGTableRowInterface" = type opaque
%"class.blink::LayoutNGTableCellInterface" = type opaque
%"class.blink::LayoutNGGridInterface" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1643", i8, %"class.blink::Member.2039", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2039" = type { %"class.blink::MemberBase.2040" }
%"class.blink::MemberBase.2040" = type { %"class.blink::HeapLinkedHashSet.2041"* }
%"class.blink::HeapLinkedHashSet.2041" = type opaque
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.WTF::Vector.2042" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.1689", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.WTF::Vector.2043" = type { %"class.WTF::VectorBuffer.2044" }
%"class.WTF::VectorBuffer.2044" = type { %"class.WTF::VectorBufferBase.2045" }
%"class.WTF::VectorBufferBase.2045" = type { %"struct.blink::PhysicalRect"*, i32, i32 }
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"struct.blink::NGInlineNodeData" = type opaque
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZN5blink20LayoutMultiColumnSetD2Ev = comdat any

$_ZN5blink20LayoutMultiColumnSetD0Ev = comdat any

$_ZNK5blink20LayoutMultiColumnSet7GetNameEv = comdat any

$_ZN5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink20LayoutMultiColumnSet15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink11LayoutBlock13IsLayoutBlockEv = comdat any

$_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink20LayoutMultiColumnSet8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink20LayoutMultiColumnSet21IsSelfCollapsingBlockEv = comdat any

$_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv = comdat any

$_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink11LayoutBlock15CurrentFragmentEv = comdat any

$_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ = comdat any

$_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv = comdat any

$_ZThn8_N5blink20LayoutMultiColumnSetD1Ev = comdat any

$_ZThn8_N5blink20LayoutMultiColumnSetD0Ev = comdat any

$_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink29MultiColumnFragmentainerGroupEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink10LayoutRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutRectEEEmm = comdat any

@_ZTVN5blink20LayoutMultiColumnSetE = hidden unnamed_addr constant { [223 x i8*], [7 x i8*] } { [223 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink20LayoutMultiColumnSetD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink20LayoutMultiColumnSetD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i8*, i32)* @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutMultiColumnSet"*)* @_ZNK5blink20LayoutMultiColumnSet7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutMultiColumnSet"*)* @_ZNK5blink20LayoutMultiColumnSet15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink20LayoutMultiColumnSet12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutMultiColumnSet"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink20LayoutMultiColumnSet16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2042"*, i32)* @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2043"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink15LayoutBlockFlow15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i8)* @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutMultiColumnSet"*, i32)* @_ZNK5blink20LayoutMultiColumnSet8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink20LayoutMultiColumnSet14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink20LayoutMultiColumnSet16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink20LayoutMultiColumnSet21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutMultiColumnSet"*)* @_ZNK5blink20LayoutMultiColumnSet33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)* @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i32, i1, i32, i32)* @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2042"*, i32)* @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2042"*)* @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutMultiColumnSet"*)* @_ZNK5blink20LayoutMultiColumnSet21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink20LayoutMultiColumnSet20ComputeLogicalHeightENS_10LayoutUnitES1_RNS_9LayoutBox27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*, i32)* @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutMultiColumnSet"*)* @_ZNK5blink20LayoutMultiColumnSet29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15CurrentFragmentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i1)* @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i1, i32)* @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i32)* @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink20LayoutMultiColumnSet11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*, i1)* @_ZN5blink20LayoutMultiColumnSet21ComputeVisualOverflowEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, i1)* @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink20LayoutMultiColumnSet29AddLayoutOverflowFromChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE to i8*), i8* bitcast (%"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*, i1)* @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*)* @_ZThn8_N5blink20LayoutMultiColumnSetD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnSet"*)* @_ZThn8_N5blink20LayoutMultiColumnSetD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29MultiColumnFragmentainerGroupEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MultiColumnFragmentainerGroup]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"LayoutMultiColumnSet\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutRectEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutRect]\00", align 1

@_ZN5blink20LayoutMultiColumnSetC1EPNS_16LayoutFlowThreadE = hidden unnamed_addr alias void (%"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutFlowThread"*), void (%"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutFlowThread"*)* @_ZN5blink20LayoutMultiColumnSetC2EPNS_16LayoutFlowThreadE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSetC2EPNS_16LayoutFlowThreadE(%"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutFlowThread"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlockFlow"* %3, %"class.blink::ContainerNode"* null) #9
  %4 = bitcast %"class.blink::LayoutMultiColumnSet"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1
  tail call void @_ZN5blink33MultiColumnFragmentainerGroupListC1ERNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroupList"* %5, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360) %0) #9
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  store %"class.blink::LayoutFlowThread"* %1, %"class.blink::LayoutFlowThread"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 6
  store i32 0, i32* %8, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 9, i1 false)
  ret void
}

declare void @_ZN5blink15LayoutBlockFlowC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlockFlow"*, %"class.blink::ContainerNode"*) unnamed_addr #1

declare void @_ZN5blink33MultiColumnFragmentainerGroupListC1ERNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroupList"*, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSet"* @_ZN5blink20LayoutMultiColumnSet15CreateAnonymousERNS_16LayoutFlowThreadERKNS_13ComputedStyleE(%"class.blink::LayoutFlowThread"* dereferenceable(368), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi %"class.blink::LayoutObject"* [ %11, %8 ], [ %7, %6 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %2
  %16 = phi %"class.blink::Node"* [ %4, %2 ], [ %13, %8 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 360) #9
  %22 = bitcast i8* %21 to %"class.blink::LayoutMultiColumnSet"*
  %23 = bitcast i8* %21 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlockFlow"* %23, %"class.blink::ContainerNode"* null) #9
  %24 = bitcast i8* %21 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %24, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 280
  %26 = bitcast i8* %25 to %"class.blink::MultiColumnFragmentainerGroupList"*
  tail call void @_ZN5blink33MultiColumnFragmentainerGroupListC1ERNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroupList"* %26, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360) %22) #9
  %27 = getelementptr inbounds i8, i8* %21, i64 336
  %28 = bitcast i8* %27 to %"class.blink::LayoutFlowThread"**
  store %"class.blink::LayoutFlowThread"* %0, %"class.blink::LayoutFlowThread"** %28, align 8
  %29 = getelementptr inbounds i8, i8* %21, i64 344
  %30 = getelementptr inbounds i8, i8* %21, i64 356
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 9, i1 false) #9
  %32 = bitcast i8* %21 to %"class.blink::LayoutObject"*
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds i8, i8* %21, i64 40
  %35 = bitcast i8* %34 to %"class.blink::Node"**
  store %"class.blink::Node"* %33, %"class.blink::Node"** %35, align 8
  %36 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %20) #9
  %37 = tail call %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver31CreateAnonymousStyleWithDisplayERKNS_13ComputedStyleENS_8EDisplayE(%"class.blink::StyleResolver"* %36, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 1) #9
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %32, %"class.blink::ComputedStyle"* %37, i32 1) #9
  ret %"class.blink::LayoutMultiColumnSet"* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @_ZN5blink12LayoutObjectnwEm(i64) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver31CreateAnonymousStyleWithDisplayERKNS_13ComputedStyleENS_8EDisplayE(%"class.blink::StyleResolver"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %35, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %11 = icmp eq i32 %2, 1
  br label %12

12:                                               ; preds = %9, %29
  %13 = phi i32 [ 0, %9 ], [ %30, %29 ]
  %14 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %10, i32 %13) #9
  %15 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %14, i64 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %11, label %17, label %23

17:                                               ; preds = %12
  %18 = icmp sgt i32 %16, %1
  br i1 %18, label %29, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %14, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, %1
  br i1 %22, label %35, label %29

23:                                               ; preds = %12
  %24 = icmp slt i32 %16, %1
  br i1 %24, label %25, label %29

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %14, i64 0, i32 3, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %27, %1
  br i1 %28, label %29, label %35

29:                                               ; preds = %17, %25, %23, %19
  %30 = add nuw i32 %13, 1
  %31 = load i32, i32* %6, align 4
  %32 = icmp ult i32 %30, %31
  br i1 %32, label %12, label %33

33:                                               ; preds = %29
  %34 = add i32 %31, -1
  br label %35

35:                                               ; preds = %25, %19, %5, %33, %3
  %36 = phi i32 [ 0, %3 ], [ %34, %33 ], [ -1, %5 ], [ %13, %19 ], [ %13, %25 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK5blink20LayoutMultiColumnSet31FragmentainerGroupAtVisualPointERKNS_11LayoutPointE(%"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = select i1 %7, i32 %11, i32 %9
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  br i1 %15, label %37, label %20

17:                                               ; preds = %20
  %18 = load i32, i32* %13, align 4
  %19 = icmp ult i32 %34, %18
  br i1 %19, label %20, label %35

20:                                               ; preds = %2, %17
  %21 = phi i32 [ %34, %17 ], [ 0, %2 ]
  %22 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %16, i32 %21) #9
  %23 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %22, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %22, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %26) #9
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !2
  %33 = icmp sgt i32 %32, %12
  %34 = add nuw i32 %21, 1
  br i1 %33, label %40, label %17

35:                                               ; preds = %17
  %36 = add i32 %18, -1
  br label %37

37:                                               ; preds = %35, %2
  %38 = phi i32 [ %36, %35 ], [ -1, %2 ]
  %39 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %16, i32 %38) #9
  br label %40

40:                                               ; preds = %20, %37
  %41 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %39, %37 ], [ %22, %20 ]
  ret %"class.blink::MultiColumnFragmentainerGroup"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  %9 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %5, i32 %8) #9
  %10 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %9, i64 0, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  store i32 64, i32* %3, align 4
  %13 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %9, i64 0, i32 4
  %14 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 64
  %17 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %18 = select i1 %16, %"class.blink::LayoutUnit"* %13, %"class.blink::LayoutUnit"* %17
  %19 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  %21 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %22 = bitcast %"class.blink::LayoutFlowThread"** %21 to %"class.blink::LayoutMultiColumnFlowThread"**
  %23 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %23, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp ugt i32 %25, 33554430
  %27 = shl i32 %25, 6
  %28 = select i1 %26, i32 2147483647, i32 %27
  %29 = sext i32 %20 to i64
  %30 = sext i32 %28 to i64
  %31 = mul nsw i64 %30, %29
  %32 = sdiv i64 %31, 64
  %33 = ashr i64 %32, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %32 to i32
  %36 = ashr i32 %35, 31
  %37 = icmp eq i32 %36, %34
  br i1 %37, label %42, label %38

38:                                               ; preds = %2
  %39 = xor i32 %28, %20
  %40 = lshr i32 %39, 31
  %41 = add nuw i32 %40, 2147483647
  br label %42

42:                                               ; preds = %2, %38
  %43 = phi i32 [ %35, %2 ], [ %41, %38 ]
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %43) #9
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  %50 = icmp sgt i32 %49, %1
  br i1 %50, label %187, label %51

51:                                               ; preds = %42
  %52 = tail call %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* %23, i32 1) #9
  %53 = icmp eq %"class.blink::FragmentationContext"* %52, null
  br i1 %53, label %187, label %54

54:                                               ; preds = %51
  %55 = tail call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet28NeedsNewFragmentainerGroupAtENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %0, i32 %1, i32 1)
  br i1 %55, label %56, label %187

56:                                               ; preds = %54
  %57 = bitcast %"class.blink::FragmentationContext"* %52 to i1 (%"class.blink::FragmentationContext"*)***
  %58 = load i1 (%"class.blink::FragmentationContext"*)**, i1 (%"class.blink::FragmentationContext"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::FragmentationContext"*)*, i1 (%"class.blink::FragmentationContext"*)** %58, i64 2
  %60 = load i1 (%"class.blink::FragmentationContext"*)*, i1 (%"class.blink::FragmentationContext"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::FragmentationContext"* nonnull %52) #9
  br i1 %61, label %62, label %187

62:                                               ; preds = %56
  %63 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup42BlockOffsetInEnclosingFragmentationContextEv(%"class.blink::MultiColumnFragmentainerGroup"* %9) #9
  %64 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %9, i64 0, i32 4, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 0
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %65) #9
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !2
  %72 = bitcast %"class.blink::FragmentationContext"* %52 to i32 (%"class.blink::FragmentationContext"*, i32)***
  %73 = load i32 (%"class.blink::FragmentationContext"*, i32)**, i32 (%"class.blink::FragmentationContext"*, i32)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.blink::FragmentationContext"*, i32)*, i32 (%"class.blink::FragmentationContext"*, i32)** %73, i64 3
  %75 = load i32 (%"class.blink::FragmentationContext"*, i32)*, i32 (%"class.blink::FragmentationContext"*, i32)** %74, align 8
  %76 = tail call i32 %75(%"class.blink::FragmentationContext"* nonnull %52, i32 %71) #9
  %77 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %22, align 8
  %78 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %79 = bitcast %"class.blink::LayoutObject"** %78 to %"class.blink::LayoutBox"**
  %80 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %80, i64 0, i32 0, i32 0, i32 5, i32 0
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8
  %86 = and i160 %85, 15211807202738752817960438464512
  %87 = icmp eq i160 %86, 0
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %80, i64 0, i32 2, i32 0, i32 1, i32 0
  %89 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %80, i64 0, i32 2, i32 0, i32 0, i32 0
  %90 = select i1 %87, i32* %88, i32* %89
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %93 = bitcast %"class.blink::LayoutObject"** %92 to %"class.blink::LayoutBlock"**
  %94 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %80, i64 0, i32 0
  %96 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %94, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %97 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %96, align 8
  %98 = icmp eq %"class.blink::ComputedStyle"* %97, null
  %99 = select i1 %98, %"class.blink::ComputedStyle"* %82, %"class.blink::ComputedStyle"* %97
  %100 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %99, i64 0, i32 0, i32 9
  %101 = bitcast [20 x i8]* %100 to i160*
  %102 = load i160, i160* %101, align 8, !noalias !3
  %103 = lshr i160 %102, 102
  %104 = trunc i160 %103 to i8
  %105 = and i8 %104, 3
  %106 = bitcast %"class.blink::LayoutBox"* %80 to i8*
  switch i8 %105, label %107 [
    i8 0, label %116
    i8 1, label %108
  ]

107:                                              ; preds = %62
  br label %108

108:                                              ; preds = %107, %62
  %109 = phi { i64, i64 } [ { i64 1033, i64 0 }, %107 ], [ { i64 1041, i64 0 }, %62 ]
  %110 = extractvalue { i64, i64 } %109, 0
  %111 = extractvalue { i64, i64 } %109, 1
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = bitcast i8* %112 to %"class.blink::LayoutBoxModelObject"*
  %114 = and i64 %110, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %126, label %116

116:                                              ; preds = %108, %62
  %117 = phi %"class.blink::LayoutBoxModelObject"* [ %113, %108 ], [ %95, %62 ]
  %118 = phi i8* [ %112, %108 ], [ %106, %62 ]
  %119 = phi i64 [ %110, %108 ], [ 1017, %62 ]
  %120 = bitcast i8* %118 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = add i64 %119, -1
  %123 = getelementptr i8, i8* %121, i64 %122
  %124 = bitcast i8* %123 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %125 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %124, align 8
  br label %128

126:                                              ; preds = %108
  %127 = inttoptr i64 %110 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %128

128:                                              ; preds = %126, %116
  %129 = phi %"class.blink::LayoutBoxModelObject"* [ %117, %116 ], [ %113, %126 ]
  %130 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %125, %116 ], [ %127, %126 ]
  %131 = tail call i32 %130(%"class.blink::LayoutBoxModelObject"* %129) #9
  %132 = icmp sgt i32 %131, -1
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %91, i32 %131) #9
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !2
  %138 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %139 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %139, i64 0, i32 0, i32 9
  %141 = bitcast [20 x i8]* %140 to i160*
  %142 = load i160, i160* %141, align 8
  %143 = and i160 %142, 15211807202738752817960438464512
  %144 = icmp eq i160 %143, 0
  %145 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %146 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %147 = select i1 %144, i32* %145, i32* %146
  %148 = load i32, i32* %147, align 4
  %149 = icmp sgt i32 %137, -1
  %150 = select i1 %149, i32 -2147483648, i32 2147483647
  %151 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %148, i32 %137) #9
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 %150, i32 %153, !prof !2
  %155 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %9, i64 0, i32 1, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp slt i32 %156, 0
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %154, i32 %156) #9
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !2
  %163 = load i32, i32* %64, align 4
  %164 = icmp slt i32 %163, 0
  %165 = select i1 %164, i32 -2147483648, i32 2147483647
  %166 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %162, i32 %163) #9
  %167 = extractvalue { i32, i1 } %166, 1
  %168 = extractvalue { i32, i1 } %166, 0
  %169 = select i1 %167, i32 %165, i32 %168, !prof !2
  %170 = icmp slt i32 %76, 0
  %171 = select i1 %170, i32 -2147483648, i32 2147483647
  %172 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %169, i32 %76) #9
  %173 = extractvalue { i32, i1 } %172, 1
  %174 = extractvalue { i32, i1 } %172, 0
  %175 = select i1 %173, i32 %171, i32 %174, !prof !2
  %176 = tail call i32 @_ZNK5blink27LayoutMultiColumnFlowThread22MaxColumnLogicalHeightEv(%"class.blink::LayoutMultiColumnFlowThread"* %23) #9
  %177 = icmp slt i32 %176, %175
  %178 = select i1 %177, i32 %176, i32 %175
  %179 = icmp sgt i32 %169, -1
  %180 = select i1 %179, i32 -2147483648, i32 2147483647
  %181 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %178, i32 %169) #9
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !2
  %185 = icmp sgt i32 %184, 0
  %186 = select i1 %185, i32 %184, i32 0
  br label %220

187:                                              ; preds = %42, %54, %56, %51
  %188 = icmp slt i32 %1, 1
  br i1 %188, label %208, label %189

189:                                              ; preds = %187
  %190 = load i32, i32* %6, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %208, label %192

192:                                              ; preds = %189, %202
  %193 = phi i32 [ %203, %202 ], [ 0, %189 ]
  %194 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %5, i32 %193) #9
  %195 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %194, i64 0, i32 2, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = icmp sgt i32 %196, %1
  br i1 %197, label %202, label %198

198:                                              ; preds = %192
  %199 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %194, i64 0, i32 3, i32 0
  %200 = load i32, i32* %199, align 8
  %201 = icmp sgt i32 %200, %1
  br i1 %201, label %208, label %202

202:                                              ; preds = %198, %192
  %203 = add nuw i32 %193, 1
  %204 = load i32, i32* %6, align 4
  %205 = icmp ult i32 %203, %204
  br i1 %205, label %192, label %206

206:                                              ; preds = %202
  %207 = add i32 %204, -1
  br label %208

208:                                              ; preds = %198, %187, %189, %206
  %209 = phi i32 [ 0, %187 ], [ %207, %206 ], [ -1, %189 ], [ %193, %198 ]
  %210 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %5, i32 %209) #9
  %211 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %211)
  store i32 64, i32* %4, align 4
  %212 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %210, i64 0, i32 4
  %213 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %212, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = icmp sgt i32 %214, 64
  %216 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %217 = select i1 %215, %"class.blink::LayoutUnit"* %212, %"class.blink::LayoutUnit"* %216
  %218 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %217, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %211)
  br label %220

220:                                              ; preds = %128, %208
  %221 = phi i32 [ %219, %208 ], [ %186, %128 ]
  ret i32 %221
}

declare %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20LayoutMultiColumnSet28NeedsNewFragmentainerGroupAtENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  %9 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %5, i32 %8) #9
  %10 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %9, i64 0, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  store i32 64, i32* %4, align 4
  %13 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %9, i64 0, i32 4
  %14 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 64
  %17 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %18 = select i1 %16, %"class.blink::LayoutUnit"* %13, %"class.blink::LayoutUnit"* %17
  %19 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  %21 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %22 = bitcast %"class.blink::LayoutFlowThread"** %21 to %"class.blink::LayoutMultiColumnFlowThread"**
  %23 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %23, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp ugt i32 %25, 33554430
  %27 = shl i32 %25, 6
  %28 = select i1 %26, i32 2147483647, i32 %27
  %29 = sext i32 %20 to i64
  %30 = sext i32 %28 to i64
  %31 = mul nsw i64 %30, %29
  %32 = sdiv i64 %31, 64
  %33 = ashr i64 %32, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %32 to i32
  %36 = ashr i32 %35, 31
  %37 = icmp eq i32 %36, %34
  br i1 %37, label %42, label %38

38:                                               ; preds = %3
  %39 = xor i32 %28, %20
  %40 = lshr i32 %39, 31
  %41 = add nuw i32 %40, 2147483647
  br label %42

42:                                               ; preds = %3, %38
  %43 = phi i32 [ %35, %3 ], [ %41, %38 ]
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %43) #9
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  %50 = icmp eq i32 %2, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = icmp slt i32 %49, %1
  br i1 %52, label %55, label %165

53:                                               ; preds = %42
  %54 = icmp sgt i32 %49, %1
  br i1 %54, label %165, label %55

55:                                               ; preds = %51, %53
  %56 = tail call %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* %23, i32 1) #9
  %57 = icmp eq %"class.blink::FragmentationContext"* %56, null
  %58 = add i32 %1, -2147483647
  %59 = icmp ult i32 %58, 2
  %60 = or i1 %59, %57
  br i1 %60, label %165, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %9, i64 0, i32 1, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %9, i64 0, i32 4, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 0
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %65) #9
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !2
  %72 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %22, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %74 = bitcast %"class.blink::LayoutObject"** %73 to %"class.blink::LayoutBox"**
  %75 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %75, i64 0, i32 0, i32 0, i32 5, i32 0
  %77 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %77, i64 0, i32 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8
  %81 = and i160 %80, 15211807202738752817960438464512
  %82 = icmp eq i160 %81, 0
  %83 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %75, i64 0, i32 2, i32 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %75, i64 0, i32 2, i32 0, i32 0, i32 0
  %85 = select i1 %82, i32* %83, i32* %84
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %88 = bitcast %"class.blink::LayoutObject"** %87 to %"class.blink::LayoutBlock"**
  %89 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %75, i64 0, i32 0
  %91 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %89, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %92 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %91, align 8
  %93 = icmp eq %"class.blink::ComputedStyle"* %92, null
  %94 = select i1 %93, %"class.blink::ComputedStyle"* %77, %"class.blink::ComputedStyle"* %92
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8, !noalias !6
  %98 = lshr i160 %97, 102
  %99 = trunc i160 %98 to i8
  %100 = and i8 %99, 3
  %101 = bitcast %"class.blink::LayoutBox"* %75 to i8*
  switch i8 %100, label %102 [
    i8 0, label %111
    i8 1, label %103
  ]

102:                                              ; preds = %61
  br label %103

103:                                              ; preds = %102, %61
  %104 = phi { i64, i64 } [ { i64 1033, i64 0 }, %102 ], [ { i64 1041, i64 0 }, %61 ]
  %105 = extractvalue { i64, i64 } %104, 0
  %106 = extractvalue { i64, i64 } %104, 1
  %107 = getelementptr inbounds i8, i8* %101, i64 %106
  %108 = bitcast i8* %107 to %"class.blink::LayoutBoxModelObject"*
  %109 = and i64 %105, 1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %121, label %111

111:                                              ; preds = %103, %61
  %112 = phi %"class.blink::LayoutBoxModelObject"* [ %108, %103 ], [ %90, %61 ]
  %113 = phi i8* [ %107, %103 ], [ %101, %61 ]
  %114 = phi i64 [ %105, %103 ], [ 1017, %61 ]
  %115 = bitcast i8* %113 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = add i64 %114, -1
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %120 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %119, align 8
  br label %123

121:                                              ; preds = %103
  %122 = inttoptr i64 %105 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %123

123:                                              ; preds = %111, %121
  %124 = phi %"class.blink::LayoutBoxModelObject"* [ %112, %111 ], [ %108, %121 ]
  %125 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %120, %111 ], [ %122, %121 ]
  %126 = tail call i32 %125(%"class.blink::LayoutBoxModelObject"* %124) #9
  %127 = icmp sgt i32 %126, -1
  %128 = select i1 %127, i32 -2147483648, i32 2147483647
  %129 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %86, i32 %126) #9
  %130 = extractvalue { i32, i1 } %129, 1
  %131 = extractvalue { i32, i1 } %129, 0
  %132 = select i1 %130, i32 %128, i32 %131, !prof !2
  %133 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = and i160 %137, 15211807202738752817960438464512
  %139 = icmp eq i160 %138, 0
  %140 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %141 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %142 = select i1 %139, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = icmp sgt i32 %132, -1
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %143, i32 %132) #9
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !2
  %150 = icmp slt i32 %149, 0
  %151 = select i1 %150, i32 -2147483648, i32 2147483647
  %152 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 %149) #9
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 %151, i32 %154, !prof !2
  %156 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %22, align 8
  %157 = tail call i32 @_ZNK5blink27LayoutMultiColumnFlowThread22MaxColumnLogicalHeightEv(%"class.blink::LayoutMultiColumnFlowThread"* %156) #9
  %158 = icmp sgt i32 %155, -1
  %159 = select i1 %158, i32 -2147483648, i32 2147483647
  %160 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %157, i32 %155) #9
  %161 = extractvalue { i32, i1 } %160, 1
  %162 = extractvalue { i32, i1 } %160, 0
  %163 = select i1 %161, i32 %159, i32 %162, !prof !2
  %164 = icmp sgt i32 %163, 0
  br label %165

165:                                              ; preds = %51, %55, %53, %123
  %166 = phi i1 [ %164, %123 ], [ false, %51 ], [ false, %53 ], [ false, %55 ]
  ret i1 %166
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZNK5blink29MultiColumnFragmentainerGroup42BlockOffsetInEnclosingFragmentationContextEv(%"class.blink::MultiColumnFragmentainerGroup"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutFlowThread"** %2 to %"class.blink::LayoutMultiColumnFlowThread"**
  %4 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %6 = bitcast %"class.blink::LayoutObject"** %5 to %"class.blink::LayoutBox"**
  %7 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %7, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %7, i64 0, i32 2, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = select i1 %14, i32* %15, i32* %16
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %20 = bitcast %"class.blink::LayoutObject"** %19 to %"class.blink::LayoutBlock"**
  %21 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %7, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %21, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = icmp eq %"class.blink::ComputedStyle"* %24, null
  %26 = select i1 %25, %"class.blink::ComputedStyle"* %9, %"class.blink::ComputedStyle"* %24
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8, !noalias !9
  %30 = lshr i160 %29, 102
  %31 = trunc i160 %30 to i8
  %32 = and i8 %31, 3
  %33 = bitcast %"class.blink::LayoutBox"* %7 to i8*
  switch i8 %32, label %34 [
    i8 0, label %43
    i8 1, label %35
  ]

34:                                               ; preds = %1
  br label %35

35:                                               ; preds = %34, %1
  %36 = phi { i64, i64 } [ { i64 1033, i64 0 }, %34 ], [ { i64 1041, i64 0 }, %1 ]
  %37 = extractvalue { i64, i64 } %36, 0
  %38 = extractvalue { i64, i64 } %36, 1
  %39 = getelementptr inbounds i8, i8* %33, i64 %38
  %40 = bitcast i8* %39 to %"class.blink::LayoutBoxModelObject"*
  %41 = and i64 %37, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %35, %1
  %44 = phi %"class.blink::LayoutBoxModelObject"* [ %40, %35 ], [ %22, %1 ]
  %45 = phi i8* [ %39, %35 ], [ %33, %1 ]
  %46 = phi i64 [ %37, %35 ], [ 1017, %1 ]
  %47 = bitcast i8* %45 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = add i64 %46, -1
  %50 = getelementptr i8, i8* %48, i64 %49
  %51 = bitcast i8* %50 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %52 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, align 8
  br label %55

53:                                               ; preds = %35
  %54 = inttoptr i64 %37 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %55

55:                                               ; preds = %43, %53
  %56 = phi %"class.blink::LayoutBoxModelObject"* [ %44, %43 ], [ %40, %53 ]
  %57 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %52, %43 ], [ %54, %53 ]
  %58 = tail call i32 %57(%"class.blink::LayoutBoxModelObject"* %56) #9
  %59 = icmp sgt i32 %58, -1
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %18, i32 %58) #9
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !2
  %65 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %66 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8
  %70 = and i160 %69, 15211807202738752817960438464512
  %71 = icmp eq i160 %70, 0
  %72 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %73 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %74 = select i1 %71, i32* %72, i32* %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %64, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %75, i32 %64) #9
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  ret i32 %81
}

declare i32 @_ZNK5blink27LayoutMultiColumnFlowThread22MaxColumnLogicalHeightEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = icmp slt i32 %1, 1
  br i1 %5, label %36, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %12 = icmp eq i32 %2, 1
  br label %13

13:                                               ; preds = %30, %10
  %14 = phi i32 [ 0, %10 ], [ %31, %30 ]
  %15 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %11, i32 %14) #9
  %16 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %15, i64 0, i32 2, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %12, label %18, label %24

18:                                               ; preds = %13
  %19 = icmp sgt i32 %17, %1
  br i1 %19, label %30, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %15, i64 0, i32 3, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %22, %1
  br i1 %23, label %36, label %30

24:                                               ; preds = %13
  %25 = icmp slt i32 %17, %1
  br i1 %25, label %26, label %30

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %15, i64 0, i32 3, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %28, %1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26, %24, %20, %18
  %31 = add nuw i32 %14, 1
  %32 = load i32, i32* %7, align 4
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %13, label %34

34:                                               ; preds = %30
  %35 = add i32 %32, -1
  br label %36

36:                                               ; preds = %20, %26, %3, %6, %34
  %37 = phi i32 [ 0, %3 ], [ %35, %34 ], [ -1, %6 ], [ %14, %26 ], [ %14, %20 ]
  %38 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %39 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %38, i32 %37) #9
  %40 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40)
  store i32 64, i32* %4, align 4
  %41 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %39, i64 0, i32 4
  %42 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, 64
  %45 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %46 = select i1 %44, %"class.blink::LayoutUnit"* %41, %"class.blink::LayoutUnit"* %45
  %47 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40)
  %49 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %39, i32 %1) #9
  %50 = icmp slt i32 %48, 0
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %48) #9
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !2
  %56 = icmp sgt i32 %1, -1
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %55, i32 %1) #9
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  %62 = icmp eq i32 %2, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %36
  %64 = srem i32 %61, %48
  ret i32 %64

65:                                               ; preds = %36
  %66 = icmp eq i32 %61, 0
  %67 = select i1 %66, i32 %48, i32 %61
  ret i32 %67
}

declare i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20LayoutMultiColumnSet24IsPageLogicalHeightKnownEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %3 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %2, i32 0) #9
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 4, !range !12
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20LayoutMultiColumnSet29NewFragmentainerGroupsAllowedEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %3 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %2, i32 0) #9
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 4, !range !12
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 8, !range !12
  %10 = icmp eq i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet35NextLogicalTopForUnbreakableContentENS_10LayoutUnitES1_(%"class.blink::LayoutMultiColumnSet"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::LayoutFlowThread"** %5 to %"class.blink::LayoutMultiColumnFlowThread"**
  %7 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %6, align 8
  %8 = tail call %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* %7, i32 1) #9
  %9 = icmp eq %"class.blink::FragmentationContext"* %8, null
  br i1 %9, label %56, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %12 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %11, i32 0) #9
  %13 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %12, i64 0, i32 2, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  store i32 64, i32* %4, align 4
  %16 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %12, i64 0, i32 4
  %17 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 64
  %20 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %21 = select i1 %19, %"class.blink::LayoutUnit"* %16, %"class.blink::LayoutUnit"* %20
  %22 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  %24 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %6, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %24, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp ugt i32 %26, 33554430
  %28 = shl i32 %26, 6
  %29 = select i1 %27, i32 2147483647, i32 %28
  %30 = sext i32 %23 to i64
  %31 = sext i32 %29 to i64
  %32 = mul nsw i64 %31, %30
  %33 = sdiv i64 %32, 64
  %34 = ashr i64 %33, 32
  %35 = trunc i64 %34 to i32
  %36 = trunc i64 %33 to i32
  %37 = ashr i32 %36, 31
  %38 = icmp eq i32 %37, %35
  br i1 %38, label %43, label %39

39:                                               ; preds = %10
  %40 = xor i32 %29, %23
  %41 = lshr i32 %40, 31
  %42 = add nuw i32 %41, 2147483647
  br label %43

43:                                               ; preds = %10, %39
  %44 = phi i32 [ %36, %10 ], [ %42, %39 ]
  %45 = icmp slt i32 %44, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %44) #9
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  %51 = icmp sgt i32 %50, %1
  br i1 %51, label %52, label %56

52:                                               ; preds = %43
  %53 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"* %0, i32 %50)
  %54 = icmp slt i32 %53, %2
  %55 = select i1 %54, i32 %1, i32 %50
  br label %56

56:                                               ; preds = %43, %52, %3
  %57 = phi i32 [ %1, %3 ], [ %55, %52 ], [ %1, %43 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1, %12
  %6 = phi %"class.blink::LayoutObject"* [ %14, %12 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6, i32 20) #9
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 9
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %18, label %5

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutMultiColumnSet"*
  br label %18

18:                                               ; preds = %12, %1, %16
  %19 = phi %"class.blink::LayoutMultiColumnSet"* [ %17, %16 ], [ null, %1 ], [ null, %12 ]
  ret %"class.blink::LayoutMultiColumnSet"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet29PreviousSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1, %12
  %6 = phi %"class.blink::LayoutObject"* [ %14, %12 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6, i32 20) #9
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 8
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %18, label %5

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutMultiColumnSet"*
  br label %18

18:                                               ; preds = %12, %1, %16
  %19 = phi %"class.blink::LayoutMultiColumnSet"* [ %17, %16 ], [ null, %1 ], [ null, %12 ]
  ret %"class.blink::LayoutMultiColumnSet"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN5blink20LayoutMultiColumnSet27AppendNewFragmentainerGroupEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.blink::MultiColumnFragmentainerGroup", align 8
  %4 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %3, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %3, i64 0, i32 2, i32 0
  %7 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @_ZN5blink29MultiColumnFragmentainerGroupC1ERKNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroup"* nonnull %3, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360) %0) #9
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -1
  %12 = call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %8, i32 %11) #9
  %13 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %12, i64 0, i32 2, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  store i32 64, i32* %2, align 4
  %16 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %12, i64 0, i32 4
  %17 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 64
  %20 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %21 = select i1 %19, %"class.blink::LayoutUnit"* %16, %"class.blink::LayoutUnit"* %20
  %22 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  %24 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::LayoutFlowThread"** %24 to %"class.blink::LayoutMultiColumnFlowThread"**
  %26 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %26, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp ugt i32 %28, 33554430
  %30 = shl i32 %28, 6
  %31 = select i1 %29, i32 2147483647, i32 %30
  %32 = sext i32 %23 to i64
  %33 = sext i32 %31 to i64
  %34 = mul nsw i64 %33, %32
  %35 = sdiv i64 %34, 64
  %36 = ashr i64 %35, 32
  %37 = trunc i64 %36 to i32
  %38 = trunc i64 %35 to i32
  %39 = ashr i32 %38, 31
  %40 = icmp eq i32 %39, %37
  br i1 %40, label %45, label %41

41:                                               ; preds = %1
  %42 = xor i32 %31, %23
  %43 = lshr i32 %42, 31
  %44 = add nuw i32 %43, 2147483647
  br label %45

45:                                               ; preds = %1, %41
  %46 = phi i32 [ %38, %1 ], [ %44, %41 ]
  %47 = icmp slt i32 %46, 0
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %46) #9
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !2
  %53 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %12, i64 0, i32 3, i32 0
  store i32 %52, i32* %53, align 8
  store i32 %52, i32* %6, align 4
  %54 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %12, i64 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %18, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 %18) #9
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  store i32 %61, i32* %5, align 8
  call void @_ZN5blink29MultiColumnFragmentainerGroup17ResetColumnHeightEv(%"class.blink::MultiColumnFragmentainerGroup"* nonnull %3) #9
  %62 = load i32, i32* %9, align 4
  %63 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %74, label %66, !prof !2

66:                                               ; preds = %45
  %67 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %8, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %67, align 8
  %69 = zext i32 %62 to i64
  %70 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %68, i64 %69
  %71 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 8 %4, i64 32, i1 false) #9
  %72 = load i32, i32* %9, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %9, align 4
  br label %76

74:                                               ; preds = %45
  call void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1797"* %8, %"class.blink::MultiColumnFragmentainerGroup"* nonnull dereferenceable(32) %3) #9
  %75 = load i32, i32* %9, align 4
  br label %76

76:                                               ; preds = %66, %74
  %77 = phi i32 [ %73, %66 ], [ %75, %74 ]
  %78 = add i32 %77, -1
  %79 = call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %8, i32 %78) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #9
  ret %"class.blink::MultiColumnFragmentainerGroup"* %79
}

declare void @_ZN5blink29MultiColumnFragmentainerGroupC1ERKNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360)) unnamed_addr #1

declare void @_ZN5blink29MultiColumnFragmentainerGroup17ResetColumnHeightEv(%"class.blink::MultiColumnFragmentainerGroup"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet22LogicalTopInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %3 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %2, i32 0) #9
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %3, i64 0, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet25LogicalBottomInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %2, i32 %5) #9
  %7 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %6, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20LayoutMultiColumnSet12HeightIsAutoEv(%"class.blink::LayoutMultiColumnSet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutFlowThread"** %2 to %"class.blink::LayoutMultiColumnFlowThread"**
  %4 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %6 = bitcast %"class.blink::LayoutObject"** %5 to %"class.blink::LayoutBlockFlow"**
  %7 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %10 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %16, i64 0, i32 45
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 268435456
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %37

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %23 = bitcast %"class.blink::LayoutObject"** %22 to %"class.blink::LayoutBox"**
  %24 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutBox"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %24, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::LayoutBox"* %24 to i1 (%"class.blink::LayoutObject"*, i32)***
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %27, i32 21) #9
  br i1 %32, label %37, label %33

33:                                               ; preds = %26, %21
  %34 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %4, i64 0, i32 5, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br label %37

37:                                               ; preds = %1, %26, %33
  %38 = phi i1 [ %36, %33 ], [ true, %1 ], [ true, %26 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20LayoutMultiColumnSet29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnSet"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp slt i32 %1, 1
  br i1 %5, label %36, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %12 = icmp eq i32 %2, 1
  br label %13

13:                                               ; preds = %30, %10
  %14 = phi i32 [ 0, %10 ], [ %31, %30 ]
  %15 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %11, i32 %14) #9
  %16 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %15, i64 0, i32 2, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %12, label %18, label %24

18:                                               ; preds = %13
  %19 = icmp sgt i32 %17, %1
  br i1 %19, label %30, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %15, i64 0, i32 3, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %22, %1
  br i1 %23, label %36, label %30

24:                                               ; preds = %13
  %25 = icmp slt i32 %17, %1
  br i1 %25, label %26, label %30

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %15, i64 0, i32 3, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %28, %1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26, %24, %20, %18
  %31 = add nuw i32 %14, 1
  %32 = load i32, i32* %7, align 4
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %13, label %34

34:                                               ; preds = %30
  %35 = add i32 %32, -1
  br label %36

36:                                               ; preds = %20, %26, %4, %6, %34
  %37 = phi i32 [ 0, %4 ], [ %35, %34 ], [ -1, %6 ], [ %14, %26 ], [ %14, %20 ]
  %38 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %39 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %38, i32 %37) #9
  %40 = tail call i64 @_ZNK5blink29MultiColumnFragmentainerGroup29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::MultiColumnFragmentainerGroup"* %39, i32 %1, i32 %2, i32 %3) #9
  ret i64 %40
}

declare i64 @_ZNK5blink29MultiColumnFragmentainerGroup29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::MultiColumnFragmentainerGroup"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20LayoutMultiColumnSet28VisualPointToFlowThreadPointERKNS_11LayoutPointE(%"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::LayoutPoint"*
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = trunc i96 %7 to i32
  %9 = icmp slt i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = select i1 %9, i32 %13, i32 %11
  %15 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  br i1 %17, label %39, label %22

19:                                               ; preds = %22
  %20 = load i32, i32* %15, align 4
  %21 = icmp ult i32 %36, %20
  br i1 %21, label %22, label %37

22:                                               ; preds = %2, %19
  %23 = phi i32 [ %36, %19 ], [ 0, %2 ]
  %24 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %18, i32 %23) #9
  %25 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 0, i32 4, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  %31 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %28) #9
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %30, i32 %33, !prof !2
  %35 = icmp sgt i32 %34, %14
  %36 = add nuw i32 %23, 1
  br i1 %35, label %42, label %19

37:                                               ; preds = %19
  %38 = add i32 %20, -1
  br label %39

39:                                               ; preds = %37, %2
  %40 = phi i32 [ %38, %37 ], [ -1, %2 ]
  %41 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %18, i32 %40) #9
  br label %42

42:                                               ; preds = %22, %39
  %43 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %41, %39 ], [ %24, %22 ]
  %44 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  %45 = tail call i64 @_ZNK5blink29MultiColumnFragmentainerGroup19OffsetFromColumnSetEv(%"class.blink::MultiColumnFragmentainerGroup"* %43) #9
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %45, 32
  %48 = trunc i64 %47 to i32
  %49 = load i32, i32* %10, align 4
  %50 = icmp sgt i32 %46, -1
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %49, i32 %46) #9
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !2
  %56 = load i32, i32* %12, align 4
  %57 = icmp sgt i32 %48, -1
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %56, i32 %48) #9
  %60 = extractvalue { i32, i1 } %59, 1
  %61 = extractvalue { i32, i1 } %59, 0
  %62 = select i1 %60, i32 %58, i32 %61, !prof !2
  %63 = zext i32 %62 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %55 to i64
  %66 = or i64 %64, %65
  store i64 %66, i64* %3, align 8
  %67 = call i64 @_ZNK5blink29MultiColumnFragmentainerGroup28VisualPointToFlowThreadPointERKNS_11LayoutPointENS0_18SnapToColumnPolicyE(%"class.blink::MultiColumnFragmentainerGroup"* %43, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %4, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  ret i64 %67
}

declare i64 @_ZNK5blink29MultiColumnFragmentainerGroup28VisualPointToFlowThreadPointERKNS_11LayoutPointENS0_18SnapToColumnPolicyE(%"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::LayoutPoint"* dereferenceable(8), i32) local_unnamed_addr #1

declare i64 @_ZNK5blink29MultiColumnFragmentainerGroup19OffsetFromColumnSetEv(%"class.blink::MultiColumnFragmentainerGroup"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet23PageLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  br label %10

10:                                               ; preds = %20, %8
  %11 = phi i32 [ 0, %8 ], [ %21, %20 ]
  %12 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %9, i32 %11) #9
  %13 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %12, i64 0, i32 2, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  br i1 %15, label %20, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %12, i64 0, i32 3, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, %1
  br i1 %19, label %26, label %20

20:                                               ; preds = %16, %10
  %21 = add nuw i32 %11, 1
  %22 = load i32, i32* %5, align 4
  %23 = icmp ult i32 %21, %22
  br i1 %23, label %10, label %24

24:                                               ; preds = %20
  %25 = add i32 %22, -1
  br label %26

26:                                               ; preds = %16, %2, %4, %24
  %27 = phi i32 [ 0, %2 ], [ %25, %24 ], [ -1, %4 ], [ %11, %16 ]
  %28 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %29 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %28, i32 %27) #9
  %30 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %29, i32 %1) #9
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20LayoutMultiColumnSet23RecalculateColumnHeightEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %11 = select i1 %8, i32* %9, i32* %10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 4, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %12
  br i1 %15, label %27, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %18 = bitcast %"class.blink::LayoutFlowThread"** %17 to %"class.blink::LayoutMultiColumnFlowThread"**
  %19 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %18, align 8
  %20 = tail call %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* %19, i32 1) #9
  %21 = icmp eq %"class.blink::FragmentationContext"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1
  tail call void @_ZN5blink33MultiColumnFragmentainerGroupList17DeleteExtraGroupsEv(%"class.blink::MultiColumnFragmentainerGroupList"* %23) #9
  %24 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %25 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %24, i32 0) #9
  tail call void @_ZN5blink29MultiColumnFragmentainerGroup17ResetColumnHeightEv(%"class.blink::MultiColumnFragmentainerGroup"* %25) #9
  %26 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %26, align 8
  br label %42

27:                                               ; preds = %1, %16
  %28 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %40, %35 ], [ %29, %27 ]
  %37 = phi i1 [ %39, %35 ], [ false, %27 ]
  %38 = tail call zeroext i1 @_ZN5blink29MultiColumnFragmentainerGroup23RecalculateColumnHeightERNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroup"* %36, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360) %0) #9
  %39 = or i1 %37, %38
  %40 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %36, i64 1
  %41 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %40, %33
  br i1 %41, label %42, label %35

42:                                               ; preds = %35, %27, %22
  %43 = phi i8 [ 0, %22 ], [ 1, %27 ], [ 1, %35 ]
  %44 = phi i1 [ true, %22 ], [ false, %27 ], [ %39, %35 ]
  %45 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 5
  store i8 %43, i8* %45, align 8
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet17ResetColumnHeightEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1
  tail call void @_ZN5blink33MultiColumnFragmentainerGroupList17DeleteExtraGroupsEv(%"class.blink::MultiColumnFragmentainerGroupList"* %2) #9
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %4 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %3, i32 0) #9
  tail call void @_ZN5blink29MultiColumnFragmentainerGroup17ResetColumnHeightEv(%"class.blink::MultiColumnFragmentainerGroup"* %4) #9
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 5
  store i8 0, i8* %6, align 8
  ret void
}

declare zeroext i1 @_ZN5blink29MultiColumnFragmentainerGroup23RecalculateColumnHeightERNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360)) local_unnamed_addr #1

declare void @_ZN5blink33MultiColumnFragmentainerGroupList17DeleteExtraGroupsEv(%"class.blink::MultiColumnFragmentainerGroupList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet9BeginFlowENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %4 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %3, i32 0) #9
  %5 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %4, i64 0, i32 2, i32 0
  store i32 %1, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet7EndFlowENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, -1
  %7 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %3, i32 %6) #9
  %8 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %7, i64 0, i32 3, i32 0
  store i32 %1, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"* %4, i32 %1, %"class.blink::ComputedStyle"* %2) #9
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 2251799813685248
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = or i96 %7, 2251799813685248
  store i96 %11, i96* %6, align 4
  br label %12

12:                                               ; preds = %3, %10
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet12UpdateLayoutEv(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZN5blink20LayoutMultiColumnSet23RecalculateColumnHeightEv(%"class.blink::LayoutMultiColumnSet"* %0)
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::LayoutFlowThread"** %5 to %"class.blink::LayoutMultiColumnFlowThread"**
  %7 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %7, i64 0, i32 8
  store i8 1, i8* %8, align 8
  br label %9

9:                                                ; preds = %4, %1
  %10 = bitcast %"class.blink::LayoutMultiColumnSet"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock12UpdateLayoutEv(%"class.blink::LayoutBlock"* %10) #9
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %12 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %11, i32 0) #9
  %13 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %12) #9
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %9
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 3) #9
  store i32 %13, i32* %14, align 4
  br label %18

18:                                               ; preds = %9, %17
  ret void
}

declare void @_ZN5blink11LayoutBlock12UpdateLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet17ActualColumnCountEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %3 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %2, i32 0) #9
  %4 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %3) #9
  ret i32 %4
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK5blink20LayoutMultiColumnSet29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutMultiColumnSet"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20LayoutMultiColumnSet20ComputeLogicalHeightENS_10LayoutUnitES1_RNS_9LayoutBox27LogicalExtentComputedValuesE(%"class.blink::LayoutMultiColumnSet"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %6 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %5, i32 0) #9
  %7 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %6, i64 0, i32 6
  %8 = load i8, i8* %7, align 4, !range !12
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %63, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %63, label %16

16:                                               ; preds = %10
  %17 = zext i32 %14 to i64
  %18 = shl nuw nsw i64 %17, 5
  %19 = add nsw i64 %18, -32
  %20 = lshr exact i64 %19, 5
  %21 = add nuw nsw i64 %20, 1
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %49, label %24

24:                                               ; preds = %16
  %25 = sub nuw nsw i64 %21, %22
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %12, %24 ], [ %46, %26 ]
  %28 = phi i32 [ 0, %24 ], [ %45, %26 ]
  %29 = phi i64 [ %25, %24 ], [ %47, %26 ]
  %30 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %27, i64 0, i32 4, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 0
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %31) #9
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !2
  %38 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %27, i64 1, i32 4, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %39) #9
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  %46 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %27, i64 2
  %47 = add i64 %29, -2
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %26

49:                                               ; preds = %26, %16
  %50 = phi i32 [ undef, %16 ], [ %45, %26 ]
  %51 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %12, %16 ], [ %46, %26 ]
  %52 = phi i32 [ 0, %16 ], [ %45, %26 ]
  %53 = icmp eq i64 %22, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %51, i64 0, i32 4, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %56) #9
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = icmp slt i32 %56, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = extractvalue { i32, i1 } %57, 0
  %62 = select i1 %58, i32 %60, i32 %61, !prof !2
  br label %63

63:                                               ; preds = %54, %49, %10, %4
  %64 = phi i32 [ 0, %4 ], [ 0, %10 ], [ %50, %49 ], [ %62, %54 ]
  %65 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 0, i32 0
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 1, i32 0
  store i32 %2, i32* %66, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20LayoutMultiColumnSet16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutMultiColumnSet"*, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::LayoutPoint"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 5070602400912917605986812821504
  %15 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %24, !prof !2

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::LayoutMultiColumnSet"* %1 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %20, i64 106
  %22 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutObject"* %18, i32 %16, i32 0, %"class.blink::LayoutBox"* null) #9
  br label %24

24:                                               ; preds = %3, %17
  %25 = phi i32 [ %23, %17 ], [ %16, %3 ]
  %26 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = trunc i96 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = select i1 %32, i32 %27, i32 %25
  %34 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 1, i32 1
  br i1 %36, label %58, label %41

38:                                               ; preds = %41
  %39 = load i32, i32* %34, align 4
  %40 = icmp ult i32 %55, %39
  br i1 %40, label %41, label %56

41:                                               ; preds = %24, %38
  %42 = phi i32 [ %55, %38 ], [ 0, %24 ]
  %43 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %37, i32 %42) #9
  %44 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %43, i64 0, i32 1, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %43, i64 0, i32 4, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %47) #9
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !2
  %54 = icmp sgt i32 %53, %33
  %55 = add nuw i32 %42, 1
  br i1 %54, label %61, label %38

56:                                               ; preds = %38
  %57 = add i32 %39, -1
  br label %58

58:                                               ; preds = %56, %24
  %59 = phi i32 [ %57, %56 ], [ -1, %24 ]
  %60 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %37, i32 %59) #9
  br label %61

61:                                               ; preds = %41, %58
  %62 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %60, %58 ], [ %43, %41 ]
  %63 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  %64 = tail call i64 @_ZNK5blink29MultiColumnFragmentainerGroup19OffsetFromColumnSetEv(%"class.blink::MultiColumnFragmentainerGroup"* %62) #9
  %65 = trunc i64 %64 to i32
  %66 = lshr i64 %64, 32
  %67 = trunc i64 %66 to i32
  %68 = icmp slt i32 %65, 0
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 %65) #9
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !2
  %74 = icmp slt i32 %67, 0
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %67) #9
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 %75, i32 %78, !prof !2
  %80 = zext i32 %79 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %73 to i64
  %83 = or i64 %81, %82
  store i64 %83, i64* %4, align 8
  %84 = call i64 @_ZNK5blink29MultiColumnFragmentainerGroup28VisualPointToFlowThreadPointERKNS_11LayoutPointENS0_18SnapToColumnPolicyE(%"class.blink::MultiColumnFragmentainerGroup"* %62, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %5, i32 1) #9
  %85 = trunc i64 %84 to i32
  %86 = and i64 %84, -4294967296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  %87 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 2
  %88 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %88, i64 0, i32 0
  %90 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #9
  %91 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %92 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %92, i64 0, i32 0, i32 9
  %94 = bitcast [20 x i8]* %93 to i160*
  %95 = load i160, i160* %94, align 8
  %96 = and i160 %95, 15211807202738752817960438464512
  %97 = icmp eq i160 %96, 5070602400912917605986812821504
  br i1 %97, label %98, label %105, !prof !2

98:                                               ; preds = %61
  %99 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.blink::LayoutFlowThread"* %88 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %101 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %100, align 8
  %102 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %101, i64 106
  %103 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %102, align 8
  %104 = call i32 %103(%"class.blink::LayoutObject"* %99, i32 %85, i32 0, %"class.blink::LayoutBox"* null) #9
  br label %105

105:                                              ; preds = %61, %98
  %106 = phi i32 [ %104, %98 ], [ %85, %61 ]
  %107 = zext i32 %106 to i64
  %108 = or i64 %86, %107
  store i64 %108, i64* %6, align 8
  %109 = bitcast %"class.blink::LayoutFlowThread"* %88 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)***
  %110 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)** %110, i64 64
  %112 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)** %111, align 8
  call void %112(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlockFlow"* %89, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20LayoutMultiColumnSet9ColumnGapEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutBlockFlow"**
  %4 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %12, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 4, !range !12
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %12, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %18) #9
  %20 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %17, i32 %19) #9
  br label %35

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %23, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %25, i64 0, i32 1, i32 0, i32 5
  %27 = load float, float* %26, align 4
  %28 = fadd float %27, 5.000000e-01
  %29 = fptosi float %28 to i32
  %30 = icmp sgt i32 %29, 33554431
  br i1 %30, label %35, label %31

31:                                               ; preds = %21
  %32 = icmp slt i32 %29, -33554432
  %33 = shl i32 %29, 6
  %34 = select i1 %32, i32 -2147483648, i32 %33
  ret i32 %34

35:                                               ; preds = %21, %16
  %36 = phi i32 [ %20, %16 ], [ 2147483647, %21 ]
  ret i32 %36
}

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

declare i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20LayoutMultiColumnSet11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutMultiColumnSet"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::MultiColumnSetPainter", align 8
  %5 = bitcast %"class.blink::MultiColumnSetPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::MultiColumnSetPainter", %"class.blink::MultiColumnSetPainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutMultiColumnSet"* %0, %"class.blink::LayoutMultiColumnSet"** %6, align 8
  call void @_ZN5blink21MultiColumnSetPainter11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::MultiColumnSetPainter"* nonnull %4, %"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

declare void @_ZN5blink21MultiColumnSetPainter11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::MultiColumnSetPainter"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink20LayoutMultiColumnSet20FragmentsBoundingBoxERKNS_10LayoutRectE(%"class.blink::LayoutMultiColumnSet"* nocapture readonly, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.blink::LayoutRect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.blink::LayoutRect"*
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %8 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #9
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %2
  %17 = bitcast { i64, i64 }* %5 to i8*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  br label %29

20:                                               ; preds = %29
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = load i64, i64* %7, align 8
  br label %24

24:                                               ; preds = %20, %2
  %25 = phi i64 [ %23, %20 ], [ 0, %2 ]
  %26 = phi i64 [ %22, %20 ], [ 0, %2 ]
  %27 = insertvalue { i64, i64 } undef, i64 %26, 0
  %28 = insertvalue { i64, i64 } %27, i64 %25, 1
  ret { i64, i64 } %28

29:                                               ; preds = %16, %29
  %30 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %10, %16 ], [ %34, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %31 = call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup20FragmentsBoundingBoxERKNS_10LayoutRectE(%"class.blink::MultiColumnFragmentainerGroup"* %30, %"class.blink::LayoutRect"* dereferenceable(16) %1) #9
  %32 = extractvalue { i64, i64 } %31, 0
  store i64 %32, i64* %18, align 8
  %33 = extractvalue { i64, i64 } %31, 1
  store i64 %33, i64* %19, align 8
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* nonnull %4, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  %34 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %30, i64 1
  %35 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %34, %14
  br i1 %35, label %20, label %29
}

declare void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup20FragmentsBoundingBoxERKNS_10LayoutRectE(%"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet21ComputeVisualOverflowEb(%"class.blink::LayoutMultiColumnSet"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #9
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = extractvalue { i64, i64 } %5, 1
  tail call void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"* %4) #9
  tail call void @_ZN5blink20LayoutMultiColumnSet29AddVisualOverflowFromChildrenEv(%"class.blink::LayoutMultiColumnSet"* %0)
  tail call void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"* %4) #9
  br i1 %1, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow27CreatesNewFormattingContextEv(%"class.blink::LayoutBlockFlow"* %9) #9
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %12) #9
  br i1 %13, label %14, label %16

14:                                               ; preds = %11, %8, %2
  %15 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsEv(%"class.blink::LayoutBlockFlow"* %15) #9
  br label %16

16:                                               ; preds = %14, %11
  %17 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #9
  %18 = extractvalue { i64, i64 } %17, 0
  %19 = extractvalue { i64, i64 } %17, 1
  %20 = trunc i64 %18 to i32
  %21 = lshr i64 %18, 32
  %22 = trunc i64 %21 to i32
  %23 = trunc i64 %6 to i32
  %24 = lshr i64 %6, 32
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %20, %23
  %27 = icmp eq i32 %22, %25
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %39

29:                                               ; preds = %16
  %30 = trunc i64 %19 to i32
  %31 = trunc i64 %7 to i32
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = lshr i64 %7, 32
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %19, 32
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %37, %35
  br i1 %38, label %57, label %39

39:                                               ; preds = %33, %16, %29
  tail call void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"* %3) #9
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #9
  %40 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39, %43
  %44 = phi %"class.blink::LayoutObject"* [ %46, %43 ], [ %3, %39 ]
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 7
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 6, i32 0, i32 0
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = icmp eq %"class.blink::Node"* %48, null
  br i1 %49, label %43, label %50

50:                                               ; preds = %43, %39
  %51 = phi %"class.blink::Node"* [ %41, %39 ], [ %48, %43 ]
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %55) #9
  tail call void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"* %56, i32 1) #9
  br label %57

57:                                               ; preds = %33, %50
  ret void
}

declare void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet29AddVisualOverflowFromChildrenEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutRect", align 4
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.blink::LayoutRect"*
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !12
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 16777216
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %28

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 67108876
  %21 = icmp eq i32 %20, 67108864
  br i1 %21, label %22, label %28, !prof !13

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  %24 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %23) #9
  %25 = icmp eq %"class.blink::DisplayLockContext"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %24) #9
  br i1 %27, label %28, label %77

28:                                               ; preds = %26, %7, %13, %17, %1, %22
  %29 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %30 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %29, i32 0) #9
  %31 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %30, i64 0, i32 6
  %32 = load i8, i8* %31, align 4, !range !12
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %77, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::LayoutRect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 0, i64 16, i1 false) #9
  %36 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %37, i64 %40
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %34
  %44 = bitcast { i64, i64 }* %3 to i8*
  %45 = bitcast { i64, i64 }* %3 to i32*
  %46 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %49 = bitcast { i64, i64 }* %3 to i8*
  br label %52

50:                                               ; preds = %52, %34
  %51 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %51, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #9
  br label %77

52:                                               ; preds = %43, %52
  %53 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %37, %43 ], [ %75, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  %54 = call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup17CalculateOverflowEv(%"class.blink::MultiColumnFragmentainerGroup"* %53) #9
  %55 = extractvalue { i64, i64 } %54, 0
  store i64 %55, i64* %48, align 8
  %56 = extractvalue { i64, i64 } %54, 1
  store i64 %56, i64* %47, align 8
  %57 = call i64 @_ZNK5blink29MultiColumnFragmentainerGroup19OffsetFromColumnSetEv(%"class.blink::MultiColumnFragmentainerGroup"* %53) #9
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = trunc i64 %59 to i32
  %61 = load i32, i32* %45, align 8
  %62 = icmp slt i32 %58, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %61, i32 %58) #9
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !2
  store i32 %67, i32* %45, align 8
  %68 = load i32, i32* %46, align 4
  %69 = icmp slt i32 %60, 0
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %60) #9
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !2
  store i32 %74, i32* %46, align 4
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* nonnull %2, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  %75 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %53, i64 1
  %76 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %75, %41
  br i1 %76, label %50, label %52

77:                                               ; preds = %26, %28, %50
  ret void
}

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow27CreatesNewFormattingContextEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup17CalculateOverflowEv(%"class.blink::MultiColumnFragmentainerGroup"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutRect", align 4
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.blink::LayoutRect"*
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !12
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 16777216
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %28

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 67108876
  %21 = icmp eq i32 %20, 67108864
  br i1 %21, label %22, label %28, !prof !13

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  %24 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %23) #9
  %25 = icmp eq %"class.blink::DisplayLockContext"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %24) #9
  br i1 %27, label %28, label %77

28:                                               ; preds = %26, %7, %13, %17, %1, %22
  %29 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %30 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %29, i32 0) #9
  %31 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %30, i64 0, i32 6
  %32 = load i8, i8* %31, align 4, !range !12
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %77, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::LayoutRect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 0, i64 16, i1 false) #9
  %36 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %37, i64 %40
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %34
  %44 = bitcast { i64, i64 }* %3 to i8*
  %45 = bitcast { i64, i64 }* %3 to i32*
  %46 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %49 = bitcast { i64, i64 }* %3 to i8*
  br label %52

50:                                               ; preds = %52, %34
  %51 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %51, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #9
  br label %77

52:                                               ; preds = %43, %52
  %53 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %37, %43 ], [ %75, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  %54 = call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup17CalculateOverflowEv(%"class.blink::MultiColumnFragmentainerGroup"* %53) #9
  %55 = extractvalue { i64, i64 } %54, 0
  store i64 %55, i64* %48, align 8
  %56 = extractvalue { i64, i64 } %54, 1
  store i64 %56, i64* %47, align 8
  %57 = call i64 @_ZNK5blink29MultiColumnFragmentainerGroup19OffsetFromColumnSetEv(%"class.blink::MultiColumnFragmentainerGroup"* %53) #9
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = trunc i64 %59 to i32
  %61 = load i32, i32* %45, align 8
  %62 = icmp slt i32 %58, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %61, i32 %58) #9
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !2
  store i32 %67, i32* %45, align 8
  %68 = load i32, i32* %46, align 4
  %69 = icmp slt i32 %60, 0
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %60) #9
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !2
  store i32 %74, i32* %46, align 4
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* nonnull %2, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  %75 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %53, i64 1
  %76 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %75, %41
  br i1 %76, label %50, label %52

77:                                               ; preds = %26, %28, %50
  ret void
}

declare void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet16InsertedIntoTreeEv(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"* %2) #9
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi %"class.blink::LayoutObject"* [ %11, %8 ], [ %7, %6 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %1
  %16 = phi %"class.blink::Node"* [ %4, %1 ], [ %13, %8 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 5, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 19
  br i1 %23, label %33, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %26 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutFlowThread"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::LayoutFlowThread"* %26 to void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)***
  %30 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)**, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)** %30, i64 226
  %32 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)** %31, align 8
  tail call void %32(%"class.blink::LayoutFlowThread"* nonnull %26, %"class.blink::LayoutMultiColumnSet"* %0) #9
  br label %33

33:                                               ; preds = %15, %24, %28
  ret void
}

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet18AttachToFlowThreadEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %6, %5 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %3, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 5, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 19
  br i1 %22, label %32, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %25 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutFlowThread"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::LayoutFlowThread"* %25 to void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)***
  %29 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)**, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)** %29, i64 226
  %31 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)** %30, align 8
  tail call void %31(%"class.blink::LayoutFlowThread"* nonnull %25, %"class.blink::LayoutMultiColumnSet"* %0) #9
  br label %32

32:                                               ; preds = %23, %14, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet21WillBeRemovedFromTreeEv(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"* %2) #9
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %4 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutFlowThread"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::LayoutFlowThread"* %4 to void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)***
  %8 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)**, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)** %8, i64 227
  %10 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)** %9, align 8
  tail call void %10(%"class.blink::LayoutFlowThread"* nonnull %4, %"class.blink::LayoutMultiColumnSet"* %0) #9
  store %"class.blink::LayoutFlowThread"* null, %"class.blink::LayoutFlowThread"** %3, align 8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet20DetachFromFlowThreadEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %3 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutFlowThread"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LayoutFlowThread"* %3 to void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)***
  %7 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)**, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)** %7, i64 227
  %9 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)** %8, align 8
  tail call void %9(%"class.blink::LayoutFlowThread"* nonnull %3, %"class.blink::LayoutMultiColumnSet"* %0) #9
  store %"class.blink::LayoutFlowThread"* null, %"class.blink::LayoutFlowThread"** %2, align 8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink20LayoutMultiColumnSet21FlowThreadPortionRectEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %3 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %2, i32 0) #9
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %3, i64 0, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %7 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  %15 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %17 = select i1 %14, i32* %15, i32* %16
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, -1
  %22 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %2, i32 %21) #9
  %23 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %22, i64 0, i32 3, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %2, i32 0) #9
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %25, i64 0, i32 2, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, -1
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %24, i32 %27) #9
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !2
  %34 = icmp sgt i32 %33, 0
  %35 = select i1 %34, i32 %33, i32 0
  %36 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = trunc i96 %38 to i32
  %40 = icmp slt i32 %39, 0
  %41 = zext i32 %5 to i64
  br i1 %40, label %47, label %42

42:                                               ; preds = %1
  %43 = zext i32 %18 to i64
  %44 = shl nuw i64 %43, 32
  %45 = zext i32 %35 to i64
  %46 = or i64 %44, %45
  br label %53

47:                                               ; preds = %1
  %48 = zext i32 %35 to i64
  %49 = shl nuw nsw i64 %48, 32
  %50 = zext i32 %18 to i64
  %51 = or i64 %49, %50
  %52 = shl nuw i64 %41, 32
  br label %53

53:                                               ; preds = %47, %42
  %54 = phi i64 [ %52, %47 ], [ %41, %42 ]
  %55 = phi i64 [ %51, %47 ], [ %46, %42 ]
  %56 = insertvalue { i64, i64 } undef, i64 %54, 0
  %57 = insertvalue { i64, i64 } %56, i64 %55, 1
  ret { i64, i64 } %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20LayoutMultiColumnSet23ComputeColumnRuleBoundsERKNS_11LayoutPointERN3WTF6VectorINS_10LayoutRectELj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8), %"class.WTF::Vector.2034"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutRect", align 4
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %6 = bitcast %"class.blink::LayoutObject"** %5 to %"class.blink::LayoutBlockFlow"**
  %7 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %15, i64 0, i32 36
  %17 = tail call i32 @_ZNK5blink13ComputedStyle15GetCurrentColorEv(%"class.blink::ComputedStyle"* %9) #9
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = lshr i160 %20, 114
  %22 = trunc i160 %21 to i32
  %23 = and i32 %22, 1
  %24 = tail call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* %16, i32 %17, i32 %23, i1 zeroext false) #9
  %25 = icmp ugt i32 %24, 16777215
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %10, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %30, i64 0, i32 45
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 7168
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %30, i64 0, i32 39, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sdiv i32 %37, 64
  %39 = shl nsw i32 %38, 6
  %40 = and i32 %39, 4194240
  br label %41

41:                                               ; preds = %3, %35
  %42 = phi i32 [ %40, %35 ], [ 0, %3 ]
  %43 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %6, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %51, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 4, !range !12
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %41
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %51, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %57 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %57) #9
  %59 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %56, i32 %58) #9
  br label %74

60:                                               ; preds = %41
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %62, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %64, i64 0, i32 1, i32 0, i32 5
  %66 = load float, float* %65, align 4
  %67 = fadd float %66, 5.000000e-01
  %68 = fptosi float %67 to i32
  %69 = icmp sgt i32 %68, 33554431
  br i1 %69, label %74, label %70

70:                                               ; preds = %60
  %71 = icmp slt i32 %68, -33554432
  %72 = shl i32 %68, 6
  %73 = select i1 %71, i32 -2147483648, i32 %72
  br label %74

74:                                               ; preds = %55, %60, %70
  %75 = phi i32 [ %73, %70 ], [ %59, %55 ], [ 2147483647, %60 ]
  %76 = icmp ne i32 %33, 0
  %77 = and i1 %25, %76
  br i1 %77, label %78, label %411

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %80 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %79, i32 0) #9
  %81 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %80) #9
  %82 = icmp ult i32 %81, 2
  br i1 %82, label %411, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = and i160 %88, 41538374868278621028243970633760768
  %90 = icmp eq i160 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  %93 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %92)
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8
  br label %98

98:                                               ; preds = %83, %91
  %99 = phi i160 [ %97, %91 ], [ %88, %83 ]
  %100 = phi i32 [ %93, %91 ], [ 0, %83 ]
  %101 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = and i160 %99, 15211807202738752817960438464512
  %103 = icmp eq i160 %102, 0
  %104 = bitcast %"class.blink::LayoutMultiColumnSet"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %105 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %104, align 8
  br i1 %103, label %106, label %117

106:                                              ; preds = %98
  %107 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %105, i64 124
  %108 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %107, align 8
  %109 = tail call i32 %108(%"class.blink::LayoutBoxModelObject"* %101) #9
  %110 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %104, align 8
  %111 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %110, i64 120
  %112 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %111, align 8
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %101) #9
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %109, i32 %113) #9
  br label %128

117:                                              ; preds = %98
  %118 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %105, i64 122
  %119 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %118, align 8
  %120 = tail call i32 %119(%"class.blink::LayoutBoxModelObject"* %101) #9
  %121 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %104, align 8
  %122 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %121, i64 118
  %123 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %122, align 8
  %124 = tail call i32 %123(%"class.blink::LayoutBoxModelObject"* %101) #9
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %120, i32 %124) #9
  br label %128

128:                                              ; preds = %106, %117
  %129 = phi { i32, i1 } [ %116, %106 ], [ %127, %117 ]
  %130 = phi i32 [ %115, %106 ], [ %126, %117 ]
  %131 = extractvalue { i32, i1 } %129, 1
  %132 = extractvalue { i32, i1 } %129, 0
  %133 = select i1 %131, i32 %130, i32 %132
  br i1 %90, label %137, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  %136 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %135)
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ 0, %128 ]
  %139 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 2
  %140 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %142 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %142, i64 0, i32 0, i32 9
  %144 = bitcast [20 x i8]* %143 to i160*
  %145 = load i160, i160* %144, align 8
  %146 = and i160 %145, 15211807202738752817960438464512
  %147 = icmp eq i160 %146, 0
  %148 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %140, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %149 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %140, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %150 = select i1 %147, i32* %148, i32* %149
  %151 = load i32, i32* %150, align 4
  %152 = sdiv i32 %75, 2
  %153 = sext i32 %152 to i64
  %154 = call i1 @llvm.is.constant.i64(i64 %153) #9
  %155 = icmp slt i32 %75, -1
  %156 = select i1 %155, i32 -2147483648, i32 2147483647
  %157 = add nsw i64 %153, 2147483648
  %158 = icmp ult i64 %157, 4294967296
  %159 = icmp slt i32 %75, 0
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %75) #9
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163
  %165 = icmp sgt i32 %164, -1
  %166 = select i1 %165, i32 -2147483648, i32 2147483647
  %167 = icmp slt i32 %164, 0
  %168 = select i1 %167, i32 -2147483648, i32 2147483647
  %169 = add i32 %81, -1
  %170 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %171 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %170 to i96*
  %172 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %175 = lshr exact i32 %42, 1
  %176 = icmp slt i32 %133, 0
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  %178 = bitcast %"class.blink::LayoutRect"* %4 to i8*
  %179 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 1, i32 0
  %181 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1, i32 0, i32 0
  %182 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1, i32 1, i32 0
  %183 = getelementptr inbounds %"class.WTF::Vector.2034", %"class.WTF::Vector.2034"* %2, i64 0, i32 0, i32 0, i32 2
  %184 = getelementptr inbounds %"class.WTF::Vector.2034", %"class.WTF::Vector.2034"* %2, i64 0, i32 0, i32 0, i32 1
  %185 = getelementptr inbounds %"class.WTF::Vector.2034", %"class.WTF::Vector.2034"* %2, i64 0, i32 0, i32 0, i32 0
  %186 = or i1 %154, %158
  %187 = select i1 %186, i32 %152, i32 %156
  %188 = icmp slt i32 %187, 0
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %187) #9
  %191 = extractvalue { i32, i1 } %190, 1
  %192 = extractvalue { i32, i1 } %190, 0
  %193 = select i1 %191, i32 %189, i32 %192
  %194 = icmp sgt i32 %193, -1
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = or i1 %154, %158
  %197 = select i1 %196, i32 %152, i32 %156
  %198 = icmp slt i32 %197, 0
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %197) #9
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202
  %204 = icmp slt i32 %203, 0
  %205 = select i1 %204, i32 -2147483648, i32 2147483647
  br label %206

206:                                              ; preds = %408, %137
  %207 = phi i32 [ 0, %137 ], [ %409, %408 ]
  %208 = phi i32 [ %100, %137 ], [ %228, %408 ]
  %209 = phi i32 [ %138, %137 ], [ %228, %408 ]
  br i1 %90, label %210, label %216

210:                                              ; preds = %206
  %211 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %209, i32 %203) #9
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %205, i32 %213, !prof !2
  %215 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %208, i32 %164) #9
  br label %222

216:                                              ; preds = %206
  %217 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %209, i32 %193) #9
  %218 = extractvalue { i32, i1 } %217, 1
  %219 = extractvalue { i32, i1 } %217, 0
  %220 = select i1 %218, i32 %195, i32 %219, !prof !2
  %221 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %208, i32 %164) #9
  br label %222

222:                                              ; preds = %216, %210
  %223 = phi { i32, i1 } [ %221, %216 ], [ %215, %210 ]
  %224 = phi i32 [ %166, %216 ], [ %168, %210 ]
  %225 = phi i32 [ %220, %216 ], [ %214, %210 ]
  %226 = extractvalue { i32, i1 } %223, 1
  %227 = extractvalue { i32, i1 } %223, 0
  %228 = select i1 %226, i32 %224, i32 %227
  %229 = icmp ult i32 %207, %169
  br i1 %229, label %230, label %408

230:                                              ; preds = %222
  %231 = load i96, i96* %171, align 4
  %232 = trunc i96 %231 to i32
  %233 = icmp slt i32 %232, 0
  %234 = load i32, i32* %172, align 4
  br i1 %233, label %235, label %305

235:                                              ; preds = %230
  %236 = icmp slt i32 %225, 0
  %237 = select i1 %236, i32 -2147483648, i32 2147483647
  %238 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %234, i32 %225) #9
  %239 = extractvalue { i32, i1 } %238, 1
  %240 = extractvalue { i32, i1 } %238, 0
  %241 = select i1 %239, i32 %237, i32 %240, !prof !2
  %242 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %241, i32 %175) #9
  %243 = extractvalue { i32, i1 } %242, 1
  %244 = extractvalue { i32, i1 } %242, 0
  %245 = select i1 %243, i32 -2147483648, i32 %244, !prof !2
  %246 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %245, i32 %133) #9
  %247 = extractvalue { i32, i1 } %246, 1
  %248 = extractvalue { i32, i1 } %246, 0
  %249 = select i1 %247, i32 %177, i32 %248, !prof !2
  %250 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %249, i32 %42) #9
  %251 = extractvalue { i32, i1 } %250, 1
  %252 = extractvalue { i32, i1 } %250, 0
  %253 = select i1 %251, i32 2147483647, i32 %252, !prof !2
  %254 = load i32, i32* %174, align 4
  %255 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %256 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %255, i64 0, i32 0, i32 7, i32 0, i32 0
  %257 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %257, i64 0, i32 27
  %259 = load i16, i16* %258, align 8
  %260 = icmp ult i16 %259, 8192
  br i1 %260, label %266, label %261

261:                                              ; preds = %235
  %262 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %257, i64 0, i32 26, i32 0
  %263 = load i32, i32* %262, align 4
  %264 = icmp slt i32 %263, 0
  %265 = select i1 %264, i32 -2147483648, i32 2147483647
  br label %266

266:                                              ; preds = %261, %235
  %267 = phi i32 [ 0, %235 ], [ %263, %261 ]
  %268 = phi i32 [ 2147483647, %235 ], [ %265, %261 ]
  %269 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %254, i32 %267) #9
  %270 = extractvalue { i32, i1 } %269, 1
  %271 = extractvalue { i32, i1 } %269, 0
  %272 = select i1 %270, i32 %268, i32 %271, !prof !2
  %273 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %257, i64 0, i32 16
  %274 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %101, %"class.blink::Length"* dereferenceable(8) %273) #9
  %275 = icmp slt i32 %274, 0
  %276 = select i1 %275, i32 -2147483648, i32 2147483647
  %277 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %272, i32 %274) #9
  %278 = extractvalue { i32, i1 } %277, 1
  %279 = extractvalue { i32, i1 } %277, 0
  %280 = select i1 %278, i32 %276, i32 %279, !prof !2
  %281 = call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %173) #9
  %282 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %104, align 8
  %283 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %282, i64 118
  %284 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %283, align 8
  %285 = call i32 %284(%"class.blink::LayoutBoxModelObject"* %101) #9
  %286 = icmp sgt i32 %285, -1
  %287 = select i1 %286, i32 -2147483648, i32 2147483647
  %288 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %281, i32 %285) #9
  %289 = extractvalue { i32, i1 } %288, 1
  %290 = extractvalue { i32, i1 } %288, 0
  %291 = select i1 %289, i32 %287, i32 %290, !prof !2
  %292 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %104, align 8
  %293 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %292, i64 119
  %294 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %293, align 8
  %295 = call i32 %294(%"class.blink::LayoutBoxModelObject"* %101) #9
  %296 = icmp sgt i32 %295, -1
  %297 = select i1 %296, i32 -2147483648, i32 2147483647
  %298 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %291, i32 %295) #9
  %299 = extractvalue { i32, i1 } %298, 1
  %300 = extractvalue { i32, i1 } %298, 0
  %301 = select i1 %299, i32 %297, i32 %300, !prof !2
  %302 = icmp sgt i32 %301, 0
  %303 = select i1 %302, i32 %301, i32 0
  %304 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %280, i32 %303) #9
  br label %376

305:                                              ; preds = %230
  %306 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %307 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %306, i64 0, i32 0, i32 7, i32 0, i32 0
  %308 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %307, align 8
  %309 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %308, i64 0, i32 27
  %310 = load i16, i16* %309, align 8
  %311 = and i16 %310, 224
  %312 = icmp eq i16 %311, 0
  br i1 %312, label %318, label %313

313:                                              ; preds = %305
  %314 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %308, i64 0, i32 24, i32 0
  %315 = load i32, i32* %314, align 4
  %316 = icmp slt i32 %315, 0
  %317 = select i1 %316, i32 -2147483648, i32 2147483647
  br label %318

318:                                              ; preds = %313, %305
  %319 = phi i32 [ 0, %305 ], [ %315, %313 ]
  %320 = phi i32 [ 2147483647, %305 ], [ %317, %313 ]
  %321 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %234, i32 %319) #9
  %322 = extractvalue { i32, i1 } %321, 1
  %323 = extractvalue { i32, i1 } %321, 0
  %324 = select i1 %322, i32 %320, i32 %323, !prof !2
  %325 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %308, i64 0, i32 14
  %326 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %101, %"class.blink::Length"* dereferenceable(8) %325) #9
  %327 = icmp slt i32 %326, 0
  %328 = select i1 %327, i32 -2147483648, i32 2147483647
  %329 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %324, i32 %326) #9
  %330 = extractvalue { i32, i1 } %329, 1
  %331 = extractvalue { i32, i1 } %329, 0
  %332 = select i1 %330, i32 %328, i32 %331, !prof !2
  %333 = call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %173) #9
  %334 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %104, align 8
  %335 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %334, i64 120
  %336 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %335, align 8
  %337 = call i32 %336(%"class.blink::LayoutBoxModelObject"* %101) #9
  %338 = icmp sgt i32 %337, -1
  %339 = select i1 %338, i32 -2147483648, i32 2147483647
  %340 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %333, i32 %337) #9
  %341 = extractvalue { i32, i1 } %340, 1
  %342 = extractvalue { i32, i1 } %340, 0
  %343 = select i1 %341, i32 %339, i32 %342, !prof !2
  %344 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %104, align 8
  %345 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %344, i64 121
  %346 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %345, align 8
  %347 = call i32 %346(%"class.blink::LayoutBoxModelObject"* %101) #9
  %348 = icmp sgt i32 %347, -1
  %349 = select i1 %348, i32 -2147483648, i32 2147483647
  %350 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %343, i32 %347) #9
  %351 = extractvalue { i32, i1 } %350, 1
  %352 = extractvalue { i32, i1 } %350, 0
  %353 = select i1 %351, i32 %349, i32 %352, !prof !2
  %354 = icmp sgt i32 %353, 0
  %355 = select i1 %354, i32 %353, i32 0
  %356 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %332, i32 %355) #9
  %357 = extractvalue { i32, i1 } %356, 1
  %358 = extractvalue { i32, i1 } %356, 0
  %359 = select i1 %357, i32 2147483647, i32 %358, !prof !2
  %360 = load i32, i32* %174, align 4
  %361 = icmp slt i32 %225, 0
  %362 = select i1 %361, i32 -2147483648, i32 2147483647
  %363 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %360, i32 %225) #9
  %364 = extractvalue { i32, i1 } %363, 1
  %365 = extractvalue { i32, i1 } %363, 0
  %366 = select i1 %364, i32 %362, i32 %365, !prof !2
  %367 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %366, i32 %175) #9
  %368 = extractvalue { i32, i1 } %367, 1
  %369 = extractvalue { i32, i1 } %367, 0
  %370 = select i1 %368, i32 -2147483648, i32 %369, !prof !2
  %371 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %370, i32 %133) #9
  %372 = extractvalue { i32, i1 } %371, 1
  %373 = extractvalue { i32, i1 } %371, 0
  %374 = select i1 %372, i32 %177, i32 %373, !prof !2
  %375 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %374, i32 %42) #9
  br label %376

376:                                              ; preds = %318, %266
  %377 = phi { i32, i1 } [ %375, %318 ], [ %304, %266 ]
  %378 = phi i32 [ %374, %318 ], [ %280, %266 ]
  %379 = phi i32 [ %359, %318 ], [ %253, %266 ]
  %380 = phi i32 [ %332, %318 ], [ %249, %266 ]
  %381 = extractvalue { i32, i1 } %377, 1
  %382 = extractvalue { i32, i1 } %377, 0
  %383 = select i1 %381, i32 2147483647, i32 %382
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178) #9
  %384 = icmp sgt i32 %380, -1
  %385 = select i1 %384, i32 -2147483648, i32 2147483647
  %386 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %379, i32 %380) #9
  %387 = extractvalue { i32, i1 } %386, 1
  %388 = extractvalue { i32, i1 } %386, 0
  %389 = select i1 %387, i32 %385, i32 %388, !prof !2
  %390 = icmp sgt i32 %378, -1
  %391 = select i1 %390, i32 -2147483648, i32 2147483647
  %392 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %383, i32 %378) #9
  %393 = extractvalue { i32, i1 } %392, 1
  %394 = extractvalue { i32, i1 } %392, 0
  %395 = select i1 %393, i32 %391, i32 %394, !prof !2
  store i32 %380, i32* %179, align 4
  store i32 %378, i32* %180, align 4
  store i32 %389, i32* %181, align 4
  store i32 %395, i32* %182, align 4
  %396 = load i32, i32* %183, align 4
  %397 = load i32, i32* %184, align 8
  %398 = icmp eq i32 %396, %397
  br i1 %398, label %406, label %399, !prof !2

399:                                              ; preds = %376
  %400 = load %"class.blink::LayoutRect"*, %"class.blink::LayoutRect"** %185, align 8
  %401 = zext i32 %396 to i64
  %402 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %400, i64 %401
  %403 = bitcast %"class.blink::LayoutRect"* %402 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %403, i8* nonnull align 4 %178, i64 16, i1 false) #9
  %404 = load i32, i32* %183, align 4
  %405 = add i32 %404, 1
  store i32 %405, i32* %183, align 4
  br label %407

406:                                              ; preds = %376
  call void @_ZN3WTF6VectorIN5blink10LayoutRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2034"* %2, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %4) #9
  br label %407

407:                                              ; preds = %399, %406
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %178) #9
  br label %408

408:                                              ; preds = %407, %222
  %409 = add nuw i32 %207, 1
  %410 = icmp eq i32 %409, %81
  br i1 %410, label %411, label %206

411:                                              ; preds = %408, %78, %74
  %412 = phi i1 [ false, %74 ], [ false, %78 ], [ true, %408 ]
  ret i1 %412
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #9
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #9
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #9
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #9
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #9
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #9
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #9
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #9
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !2
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #9
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #9
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink20LayoutMultiColumnSet33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca %"class.WTF::Vector.2034", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::LayoutPoint"*
  %6 = alloca { i64, i64 }, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = tail call { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"* %8) #9
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %11 = extractvalue { i64, i64 } %9, 0
  store i64 %11, i64* %10, align 8
  %12 = extractvalue { i64, i64 } %9, 1
  store i64 %12, i64* %7, align 8
  %13 = bitcast %"class.WTF::Vector.2034"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.WTF::Vector.2034", %"class.WTF::Vector.2034"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::Vector.2034", %"class.WTF::Vector.2034"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #9
  %16 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  store i64 0, i64* %4, align 8
  %17 = call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet23ComputeColumnRuleBoundsERKNS_11LayoutPointERN3WTF6VectorINS_10LayoutRectELj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutMultiColumnSet"* %0, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %5, %"class.WTF::Vector.2034"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br i1 %17, label %18, label %27

18:                                               ; preds = %1
  %19 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %20 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %21 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  %22 = call { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_10LayoutRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.2034"* nonnull dereferenceable(16) %3) #9
  %23 = extractvalue { i64, i64 } %22, 0
  %24 = extractvalue { i64, i64 } %22, 1
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %24, i64* %26, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %19, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %20) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  br label %27

27:                                               ; preds = %18, %1
  %28 = load %"class.blink::LayoutRect"*, %"class.blink::LayoutRect"** %14, align 8
  %29 = icmp eq %"class.blink::LayoutRect"* %28, null
  %30 = bitcast %"class.blink::LayoutRect"* %28 to i8*
  br i1 %29, label %36, label %31, !prof !14

31:                                               ; preds = %27
  %32 = load i32, i32* %15, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %31
  store i32 0, i32* %15, align 4
  br label %35

35:                                               ; preds = %34, %31
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #9
  store %"class.blink::LayoutRect"* null, %"class.blink::LayoutRect"** %14, align 8
  br label %36

36:                                               ; preds = %27, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  %37 = load i64, i64* %10, align 8
  %38 = insertvalue { i64, i64 } undef, i64 %37, 0
  %39 = load i64, i64* %7, align 8
  %40 = insertvalue { i64, i64 } %38, i64 %39, 1
  ret { i64, i64 } %40
}

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_10LayoutRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.2034"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LayoutMultiColumnSet18FinishLayoutFromNGEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1
  %3 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"* %2, i32 0) #9
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 4, !range !12
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %60, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %60, label %13

13:                                               ; preds = %7
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 5
  %16 = add nsw i64 %15, -32
  %17 = lshr exact i64 %16, 5
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %16, 0
  br i1 %20, label %46, label %21

21:                                               ; preds = %13
  %22 = sub nuw nsw i64 %18, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %9, %21 ], [ %43, %23 ]
  %25 = phi i32 [ 0, %21 ], [ %42, %23 ]
  %26 = phi i64 [ %22, %21 ], [ %44, %23 ]
  %27 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 0, i32 4, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  %31 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 %28) #9
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %30, i32 %33, !prof !2
  %35 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 1, i32 4, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %36) #9
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 2
  %44 = add i64 %26, -2
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %23

46:                                               ; preds = %23, %13
  %47 = phi i32 [ undef, %13 ], [ %42, %23 ]
  %48 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %9, %13 ], [ %43, %23 ]
  %49 = phi i32 [ 0, %13 ], [ %42, %23 ]
  %50 = icmp eq i64 %19, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %48, i64 0, i32 4, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %53) #9
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = icmp slt i32 %53, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = extractvalue { i32, i1 } %54, 0
  %59 = select i1 %55, i32 %57, i32 %58, !prof !2
  br label %60

60:                                               ; preds = %51, %46, %1, %7
  %61 = phi i32 [ 0, %1 ], [ 0, %7 ], [ %47, %46 ], [ %59, %51 ]
  %62 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8
  %68 = and i160 %67, 15211807202738752817960438464512
  %69 = icmp eq i160 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %61
  br i1 %73, label %80, label %74

74:                                               ; preds = %70
  store i32 %61, i32* %71, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %62) #9
  br label %80

75:                                               ; preds = %60
  %76 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %61
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  store i32 %61, i32* %76, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %62) #9
  br label %80

80:                                               ; preds = %70, %74, %75, %79
  %81 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlockFlow"* %81, i32 %61, i1 zeroext false) #9
  %82 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 5
  store i8 0, i8* %82, align 8
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlockFlow"*, i32, i1 zeroext) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20LayoutMultiColumnSetD2Ev(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutMultiColumnSet"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1
  tail call void @_ZN5blink33MultiColumnFragmentainerGroupListD1Ev(%"class.blink::MultiColumnFragmentainerGroupList"* %3) #9
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %4) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20LayoutMultiColumnSetD0Ev(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutMultiColumnSet"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 1
  tail call void @_ZN5blink33MultiColumnFragmentainerGroupListD1Ev(%"class.blink::MultiColumnFragmentainerGroupList"* %3) #9
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %4) #9
  %5 = bitcast %"class.blink::LayoutMultiColumnSet"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %5) #9
  ret void
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBlock"*, i8*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink20LayoutMultiColumnSet7GetNameEv(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutMultiColumnSet15CanHaveChildrenEv(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #9
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1207959552
  %6 = icmp eq i96 %5, 1207959552
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock13IsLayoutBlockEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %2) #9
  ret %"class.blink::LayoutBoxModelObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

declare %"class.blink::LayoutObject"* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1739* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  %6 = icmp eq i32 %2, 1
  tail call void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"* %5, %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, i1 zeroext %6) #9
  ret void
}

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2042"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2043"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutBlockFlow"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutMultiColumnSet8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutMultiColumnSet"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 20
  ret i1 %3
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !2

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #9
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #9
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !2
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15UpdateFromStyleEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #9
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !15

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #9
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !15

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #9
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !2

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #9
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #9
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #9
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #9
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #9
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i1 zeroext, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i32, i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2042"*, i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2042"*) unnamed_addr #1

declare i64 @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutMultiColumnSet21IsSelfCollapsingBlockEv(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !16
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1033, i64 0 }, %19 ], [ { i64 1041, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1017, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #9
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !19
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1033, i64 0 }, %61 ], [ { i64 1041, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1017, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #9
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #9
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #9
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #9
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !22
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1041, i64 0 }, %19 ], [ { i64 1033, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1025, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #9
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 3, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !25
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1041, i64 0 }, %61 ], [ { i64 1033, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1025, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #9
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #9
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #9
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #9
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow10BreakAfterEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #9
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #9
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #9
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #9
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #9
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlockFlow"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink11LayoutBlock15CurrentFragmentEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::NGPhysicalBoxFragment"* null
}

declare void @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"*, i1 zeroext, i1 zeroext, i32) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink20LayoutMultiColumnSetD1Ev(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 -1, i32 5
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 280
  %5 = bitcast i8* %4 to %"class.blink::MultiColumnFragmentainerGroupList"*
  tail call void @_ZN5blink33MultiColumnFragmentainerGroupListD1Ev(%"class.blink::MultiColumnFragmentainerGroupList"* %5) #9
  %6 = bitcast i8* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %6) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink20LayoutMultiColumnSetD0Ev(%"class.blink::LayoutMultiColumnSet"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %0, i64 -1, i32 5
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink20LayoutMultiColumnSetE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 280
  %5 = bitcast i8* %4 to %"class.blink::MultiColumnFragmentainerGroupList"*
  tail call void @_ZN5blink33MultiColumnFragmentainerGroupListD1Ev(%"class.blink::MultiColumnFragmentainerGroupList"* %5) #9
  %6 = bitcast i8* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %6) #9
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 %25
  ret %"class.blink::MultiColumnFragmentainerGroup"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1797"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 %25
  ret %"class.blink::MultiColumnFragmentainerGroup"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1797"*, %"class.blink::MultiColumnFragmentainerGroup"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %6, align 8
  %8 = icmp ugt %"class.blink::MultiColumnFragmentainerGroup"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %7, i64 %10
  %12 = icmp ugt %"class.blink::MultiColumnFragmentainerGroup"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1797"* %0, i32 %5) #9
  %14 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::MultiColumnFragmentainerGroup"* %1 to i64
  %17 = ptrtoint %"class.blink::MultiColumnFragmentainerGroup"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 5
  tail call void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1797"* %0, i32 %5) #9
  %20 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %23, i64 %26
  %28 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %27 to i8*
  %29 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 32, i1 false) #9
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1797"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !14

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %31, align 8
  %33 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink29MultiColumnFragmentainerGroupEEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29MultiColumnFragmentainerGroupEEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1797"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 5
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1797"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1797"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1797"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %68

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %5, align 8
  %7 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::MultiColumnFragmentainerGroup"*
  %10 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1797"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %136

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector.1797"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %67, label %26

26:                                               ; preds = %16
  %27 = shl nuw nsw i64 %19, 5
  %28 = add nsw i64 %27, -32
  %29 = lshr exact i64 %28, 5
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 3
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %26, %33
  %34 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %40, %33 ], [ %6, %26 ]
  %35 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %39, %33 ], [ %9, %26 ]
  %36 = phi i64 [ %41, %33 ], [ %31, %26 ]
  %37 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %35 to i8*
  %38 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 32, i1 false) #9
  %39 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %35, i64 1
  %40 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %34, i64 1
  %41 = add i64 %36, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %33, !llvm.loop !28

43:                                               ; preds = %33, %26
  %44 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %6, %26 ], [ %40, %33 ]
  %45 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %9, %26 ], [ %39, %33 ]
  %46 = icmp ult i64 %28, 96
  br i1 %46, label %67, label %47

47:                                               ; preds = %43, %47
  %48 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %65, %47 ], [ %44, %43 ]
  %49 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %64, %47 ], [ %45, %43 ]
  %50 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %49 to i8*
  %51 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 32, i1 false) #9
  %52 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %49, i64 1
  %53 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %48, i64 1
  %54 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %52 to i8*
  %55 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 32, i1 false) #9
  %56 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %49, i64 2
  %57 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %48, i64 2
  %58 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %56 to i8*
  %59 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 32, i1 false) #9
  %60 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %49, i64 3
  %61 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %48, i64 3
  %62 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %60 to i8*
  %63 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 32, i1 false) #9
  %64 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %49, i64 4
  %65 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %48, i64 4
  %66 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %65, %20
  br i1 %66, label %67, label %47

67:                                               ; preds = %43, %47, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1798"* %21, %"class.blink::MultiColumnFragmentainerGroup"* %6) #9
  br label %136

68:                                               ; preds = %2
  %69 = zext i32 %1 to i64
  %70 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink29MultiColumnFragmentainerGroupEEEmm(i64 %69) #9
  %71 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %70, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29MultiColumnFragmentainerGroupEEEPKcv, i64 0, i64 0)) #9
  %72 = lshr i64 %70, 5
  %73 = ptrtoint i8* %71 to i64
  %74 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %74, align 8
  %76 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %75, i64 %78
  %80 = icmp eq i32 %77, 0
  br i1 %80, label %125, label %81

81:                                               ; preds = %68
  %82 = bitcast i8* %71 to %"class.blink::MultiColumnFragmentainerGroup"*
  %83 = shl nuw nsw i64 %78, 5
  %84 = add nsw i64 %83, -32
  %85 = lshr exact i64 %84, 5
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %99, label %89

89:                                               ; preds = %81, %89
  %90 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %96, %89 ], [ %75, %81 ]
  %91 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %95, %89 ], [ %82, %81 ]
  %92 = phi i64 [ %97, %89 ], [ %87, %81 ]
  %93 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %91 to i8*
  %94 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 32, i1 false) #9
  %95 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %91, i64 1
  %96 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %90, i64 1
  %97 = add i64 %92, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %89, !llvm.loop !30

99:                                               ; preds = %89, %81
  %100 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %75, %81 ], [ %96, %89 ]
  %101 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %82, %81 ], [ %95, %89 ]
  %102 = icmp ult i64 %84, 96
  br i1 %102, label %123, label %103

103:                                              ; preds = %99, %103
  %104 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %121, %103 ], [ %100, %99 ]
  %105 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %120, %103 ], [ %101, %99 ]
  %106 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %105 to i8*
  %107 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 32, i1 false) #9
  %108 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %105, i64 1
  %109 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %104, i64 1
  %110 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %108 to i8*
  %111 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 32, i1 false) #9
  %112 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %105, i64 2
  %113 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %104, i64 2
  %114 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %112 to i8*
  %115 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 32, i1 false) #9
  %116 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %105, i64 3
  %117 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %104, i64 3
  %118 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %116 to i8*
  %119 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 32, i1 false) #9
  %120 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %105, i64 4
  %121 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %104, i64 4
  %122 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %121, %79
  br i1 %122, label %123, label %103

123:                                              ; preds = %103, %99
  %124 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %74, align 8
  br label %125

125:                                              ; preds = %123, %68
  %126 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %124, %123 ], [ %75, %68 ]
  %127 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 1, i64 0
  %128 = bitcast i8* %127 to %"class.blink::MultiColumnFragmentainerGroup"*
  %129 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %126, %128
  br i1 %129, label %132, label %130, !prof !14

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1798"* %131, %"class.blink::MultiColumnFragmentainerGroup"* %126) #9
  br label %132

132:                                              ; preds = %125, %130
  %133 = bitcast %"class.WTF::Vector.1797"* %0 to i64*
  store atomic i64 %73, i64* %133 monotonic, align 8
  %134 = trunc i64 %72 to i32
  %135 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %134, i32* %135, align 8
  br label %136

136:                                              ; preds = %67, %132, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink29MultiColumnFragmentainerGroupEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1798"*, %"class.blink::MultiColumnFragmentainerGroup"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #1

declare i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"*, i32, i32, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle15GetCurrentColorEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink33MultiColumnFragmentainerGroupListD1Ev(%"class.blink::MultiColumnFragmentainerGroupList"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #5

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10LayoutRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2034"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2034", %"class.WTF::Vector.2034"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2034", %"class.WTF::Vector.2034"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutRect"*, %"class.blink::LayoutRect"** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutRect"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutRect"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2034", %"class.WTF::Vector.2034"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !14

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::LayoutRect"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutRectEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutRectEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2034"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::LayoutRect"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::LayoutRect"*, %"class.blink::LayoutRect"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::LayoutRect"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::LayoutRect"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !14

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.2034"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.2034"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::LayoutRect"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::LayoutRect"* %1 to i64
  %56 = ptrtoint %"class.blink::LayoutRect"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.2034", %"class.WTF::Vector.2034"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !14

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::LayoutRect"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutRectEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutRectEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2034"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::LayoutRect"*, %"class.blink::LayoutRect"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::LayoutRect"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::LayoutRect"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !14

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.2034"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.2034"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::LayoutRect"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::LayoutRect"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::LayoutRect"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::LayoutRect"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %100, i64 %103
  %105 = bitcast %"class.blink::LayoutRect"* %104 to i8*
  %106 = bitcast %"class.blink::LayoutRect"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 16, i1 false) #9
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutRectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind readnone }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!12 = !{i8 0, i8 2}
!13 = !{!"branch_weights", i32 1, i32 4001}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{!"branch_weights", i32 4001, i32 4000000}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.unroll.disable"}
!30 = distinct !{!30, !29}
