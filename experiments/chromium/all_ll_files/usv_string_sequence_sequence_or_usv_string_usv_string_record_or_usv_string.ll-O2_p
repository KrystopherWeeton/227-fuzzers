; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/usv_string_sequence_sequence_or_usv_string_usv_string_record_or_usv_string.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/usv_string_sequence_sequence_or_usv_string_usv_string_record_or_usv_string.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString" = type { i32, %"class.WTF::String", %"class.WTF::Vector", %"class.WTF::Vector.6" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::Vector.1"*, i32, i32 }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::ConditionalDestructor.9" = type { i8 }
%"class.WTF::ConditionalDestructor.4" = type { i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.142", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.184", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.122", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i64 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.116", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i64 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { float }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.125", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.134" }
%"class.WTF::Vector.134" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"struct.std::__1::pair.152"*, i32, i32 }
%"struct.std::__1::pair.152" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.188" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.193", %"class.v8::Local", %"class.v8::Local.194", %"class.v8::Local.194", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.193" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Local.194" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.WTF::HashMap.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"struct.WTF::KeyValuePair.349"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.349" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.v8::Context" = type { i8 }
%"class.v8::Array" = type { i8 }
%"class.v8::Name" = type { i8 }
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.195" }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { i8* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.221", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.271", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.277", %"class.std::__1::unique_ptr.282", %"class.blink::Persistent.288", %"class.blink::Persistent.290", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.201", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", i32, i32 }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.221" = type { %"class.WTF::HashTable.222" }
%"class.WTF::HashTable.222" = type <{ %"struct.WTF::KeyValuePair.225"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.225" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.234", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.229", i8* }
%"class.WTF::HashMap.229" = type { %"class.WTF::HashTable.230" }
%"class.WTF::HashTable.230" = type <{ %"struct.WTF::KeyValuePair.233"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.233" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.234" = type { %"class.v8::PersistentValueMapBase.235" }
%"class.v8::PersistentValueMapBase.235" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.236", i8* }
%"class.WTF::HashMap.236" = type { %"class.WTF::HashTable.237" }
%"class.WTF::HashTable.237" = type <{ %"struct.WTF::KeyValuePair.240"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.240" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.241" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.255", %"class.WTF::Vector.261", i8, i32 }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.WTF::Vector.247"* }
%"class.WTF::Vector.247" = type { %"class.WTF::VectorBuffer.248" }
%"class.WTF::VectorBuffer.248" = type { %"class.WTF::VectorBufferBase.249" }
%"class.WTF::VectorBufferBase.249" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.261" = type { %"class.WTF::VectorBuffer.262" }
%"class.WTF::VectorBuffer.262" = type { %"class.WTF::VectorBufferBase.249", [32 x i8] }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.304, %"class.blink::Member.323", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.304 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.305", i32, i32, %"class.blink::Persistent.307" }
%"class.WTF::RefCounted.305" = type { %"class.base::RefCounted.306" }
%"class.base::RefCounted.306" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.307" = type { %"class.blink::PersistentBase.308" }
%"class.blink::PersistentBase.308" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.313" }
%"class.WTF::HashMap.313" = type { %"class.WTF::HashTable.314" }
%"class.WTF::HashTable.314" = type <{ %"struct.WTF::KeyValuePair.316"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.316" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.320" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.320" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.320" = type { %"class.v8::TracedReference.321" }
%"class.v8::TracedReference.321" = type { %"class.v8::BasicTracedReference.322" }
%"class.v8::BasicTracedReference.322" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.288" = type { %"class.blink::PersistentBase.289" }
%"class.blink::PersistentBase.289" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.290" = type { %"class.blink::PersistentBase.291" }
%"class.blink::PersistentBase.291" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.296" }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"struct.std::__1::pair.299"*, i32, i32 }
%"struct.std::__1::pair.299" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ExecutionContext" = type opaque
%"class.v8::Int32" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.360 }
%union.anon.360 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }

$_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_EaSERKS4_ = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEaSERKS6_ = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_ = comdat any

$_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN3WTF21ConditionalDestructorINS_6VectorINS1_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES3_EELb0EED2Ev = comdat any

$_ZN5blink17NativeValueTraitsINS_9IDLRecordINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEES4_EEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink4ToV8IN3WTF6StringEEEN2v85LocalINS3_5ValueEEERKNS1_6VectorINSt3__14pairIS2_T_EELj0ENS1_18PartitionAllocatorEEENS4_INS3_6ObjectEEEPNS3_7IsolateE = comdat any

$_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm = comdat any

$_ZNSt3__14pairIN3WTF6StringES2_EaSERKS3_ = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RKjEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EEEEN2v85LocalINS7_5ArrayEEERKT_NS8_INS7_6ObjectEEEPNS7_7IsolateE = comdat any

$_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZNK3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<WTF::String, 0, WTF::PartitionAllocator>]\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, WTF::String>]\00", align 1
@.str.4 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"Only objects can be converted to record<K,V> types\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"enumerable\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEjEEEEPKcv = private unnamed_addr constant [92 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, unsigned int>]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1

@_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringC1Ev = hidden unnamed_addr alias void (%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*), void (%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*)* @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringC2Ev
@_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*, %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*), void (%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*, %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*)* @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringC2ERKS0_
@_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringD1Ev = hidden unnamed_addr alias void (%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*), void (%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*)* @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringC2Ev(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.WTF::StringImpl"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString14GetAsUSVStringEv(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* readnone) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1
  ret %"class.WTF::String"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString12SetUSVStringERKN3WTF6StringE(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #9
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::String"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  store i32 1, i32* %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString13FromUSVStringERKN3WTF6StringE(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* noalias nocapture sret, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0 to i64*
  store i64 -6148914691236517206, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false) #9
  %7 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %2, %11, %26
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %29, i64* %30, align 8
  store i32 1, i32* %4, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZNK5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString30GetAsUSVStringSequenceSequenceEv(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* readnone) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 2
  ret %"class.WTF::Vector"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString28SetUSVStringSequenceSequenceERKN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_EaSERKS4_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* dereferenceable(16) %1)
  %5 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  store i32 2, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_EaSERKS4_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %237, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %60

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %12, i64 %15
  br label %17

17:                                               ; preds = %56, %10
  %18 = phi %"class.WTF::Vector.1"* [ %57, %56 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::String"*, %"class.WTF::String"** %19, align 8
  %21 = icmp eq %"class.WTF::String"* %20, null
  br i1 %21, label %56, label %22, !prof !3

22:                                               ; preds = %17
  %23 = bitcast %"class.WTF::String"* %20 to i8*
  %24 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %18, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27, !prof !2

27:                                               ; preds = %22
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 %28
  br label %30

30:                                               ; preds = %48, %27
  %31 = phi %"class.WTF::String"* [ %49, %48 ], [ %20, %27 ]
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %48

48:                                               ; preds = %47, %44, %30
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 1
  %50 = icmp eq %"class.WTF::String"* %49, %29
  br i1 %50, label %51, label %30

51:                                               ; preds = %48
  store i32 0, i32* %24, align 4
  %52 = bitcast %"class.WTF::Vector.1"* %18 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %22
  %55 = phi i8* [ %53, %51 ], [ %23, %22 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %19, align 8
  br label %56

56:                                               ; preds = %54, %17
  %57 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %18, i64 1
  %58 = icmp eq %"class.WTF::Vector.1"* %57, %14
  br i1 %58, label %59, label %17

59:                                               ; preds = %56
  store i32 %8, i32* %5, align 4
  br label %141

60:                                               ; preds = %4
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp ugt i32 %8, %62
  br i1 %63, label %64, label %139

64:                                               ; preds = %60
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %122, label %66

66:                                               ; preds = %64
  %67 = icmp eq i32 %6, 0
  br i1 %67, label %116, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %69, align 8
  %71 = zext i32 %6 to i64
  %72 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %70, i64 %71
  br label %73

73:                                               ; preds = %112, %68
  %74 = phi %"class.WTF::Vector.1"* [ %113, %112 ], [ %70, %68 ]
  %75 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::String"*, %"class.WTF::String"** %75, align 8
  %77 = icmp eq %"class.WTF::String"* %76, null
  br i1 %77, label %112, label %78, !prof !3

78:                                               ; preds = %73
  %79 = bitcast %"class.WTF::String"* %76 to i8*
  %80 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %74, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %110, label %83, !prof !2

83:                                               ; preds = %78
  %84 = zext i32 %81 to i64
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 %84
  br label %86

86:                                               ; preds = %104, %83
  %87 = phi %"class.WTF::String"* [ %105, %104 ], [ %76, %83 ]
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #9
  br label %104

104:                                              ; preds = %103, %100, %86
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 1
  %106 = icmp eq %"class.WTF::String"* %105, %85
  br i1 %106, label %107, label %86

107:                                              ; preds = %104
  store i32 0, i32* %80, align 4
  %108 = bitcast %"class.WTF::Vector.1"* %74 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %107, %78
  %111 = phi i8* [ %109, %107 ], [ %79, %78 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %75, align 8
  br label %112

112:                                              ; preds = %110, %73
  %113 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %74, i64 1
  %114 = icmp eq %"class.WTF::Vector.1"* %113, %72
  br i1 %114, label %115, label %73

115:                                              ; preds = %112
  store i32 0, i32* %5, align 4
  br label %116

116:                                              ; preds = %115, %66
  %117 = bitcast %"class.WTF::Vector"* %0 to i8**
  %118 = load i8*, i8** %117, align 8
  %119 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %119 monotonic, align 8
  store i32 0, i32* %61, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %118) #9
  %120 = load i32, i32* %7, align 4
  %121 = load i32, i32* %61, align 8
  br label %122

122:                                              ; preds = %64, %116
  %123 = phi i32 [ 0, %64 ], [ %121, %116 ]
  %124 = phi i32 [ %8, %64 ], [ %120, %116 ]
  %125 = icmp ult i32 %123, %124
  br i1 %125, label %126, label %139, !prof !3

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %127, align 8
  %129 = icmp eq %"class.WTF::Vector.1"* %128, null
  br i1 %129, label %130, label %138

130:                                              ; preds = %126
  %131 = zext i32 %124 to i64
  %132 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %131) #9
  %133 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %132, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %134 = ptrtoint i8* %133 to i64
  %135 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %134, i64* %135 monotonic, align 8
  %136 = lshr i64 %132, 4
  %137 = trunc i64 %136 to i32
  store i32 %137, i32* %61, align 8
  br label %139

138:                                              ; preds = %126
  tail call void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %124) #9
  br label %139

139:                                              ; preds = %60, %122, %130, %138
  %140 = load i32, i32* %5, align 4
  br label %141

141:                                              ; preds = %139, %59
  %142 = phi i32 [ %140, %139 ], [ %8, %59 ]
  %143 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %143, align 8
  %145 = zext i32 %142 to i64
  %146 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %144, i64 %145
  %147 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %147, align 8
  %149 = icmp eq i32 %142, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %141, %150
  %151 = phi %"class.WTF::Vector.1"* [ %155, %150 ], [ %148, %141 ]
  %152 = phi %"class.WTF::Vector.1"* [ %154, %150 ], [ %144, %141 ]
  %153 = tail call dereferenceable(16) %"class.WTF::Vector.1"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.1"* %151, %"class.WTF::Vector.1"* dereferenceable(16) %152) #9
  %154 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %152, i64 1
  %155 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %151, i64 1
  %156 = icmp eq %"class.WTF::Vector.1"* %154, %146
  br i1 %156, label %157, label %150

157:                                              ; preds = %150
  %158 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %143, align 8
  %159 = load i32, i32* %5, align 4
  %160 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %147, align 8
  br label %161

161:                                              ; preds = %157, %141
  %162 = phi %"class.WTF::Vector.1"* [ %160, %157 ], [ %148, %141 ]
  %163 = phi i32 [ %159, %157 ], [ 0, %141 ]
  %164 = phi %"class.WTF::Vector.1"* [ %158, %157 ], [ %144, %141 ]
  %165 = zext i32 %163 to i64
  %166 = load i32, i32* %7, align 4
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %164, i64 %167
  %169 = icmp eq i32 %163, %166
  br i1 %169, label %235, label %170

170:                                              ; preds = %161
  %171 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %162, i64 %165
  %172 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %164, i64 %165
  br label %173

173:                                              ; preds = %170, %229
  %174 = phi %"class.WTF::Vector.1"* [ %230, %229 ], [ %171, %170 ]
  %175 = phi %"class.WTF::Vector.1"* [ %231, %229 ], [ %172, %170 ]
  %176 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %175, i64 0, i32 0, i32 0, i32 1
  %177 = load i32, i32* %176, align 8
  %178 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %174, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %178, align 8
  %179 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %174, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %179, align 8
  %180 = icmp eq i32 %177, 0
  br i1 %180, label %190, label %181

181:                                              ; preds = %173
  %182 = zext i32 %177 to i64
  %183 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %182) #9
  %184 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %183, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %185 = ptrtoint i8* %184 to i64
  %186 = bitcast %"class.WTF::Vector.1"* %174 to i64*
  store atomic i64 %185, i64* %186 monotonic, align 8
  %187 = lshr i64 %183, 3
  %188 = trunc i64 %187 to i32
  store i32 %188, i32* %179, align 8
  %189 = bitcast i8* %184 to %"class.WTF::String"*
  br label %190

190:                                              ; preds = %181, %173
  %191 = phi %"class.WTF::String"* [ null, %173 ], [ %189, %181 ]
  %192 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %175, i64 0, i32 0, i32 0, i32 2
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %174, i64 0, i32 0, i32 0, i32 2
  store i32 %193, i32* %194, align 4
  %195 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %175, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::String"*, %"class.WTF::String"** %195, align 8
  %197 = load i32, i32* %192, align 4
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %196, i64 %198
  %200 = icmp eq i32 %197, 0
  br i1 %200, label %229, label %201

201:                                              ; preds = %190, %225
  %202 = phi %"class.WTF::String"* [ %226, %225 ], [ %191, %190 ]
  %203 = phi %"class.WTF::String"* [ %227, %225 ], [ %196, %190 ]
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %203, i64 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %202, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %206, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %207, label %225, label %208

208:                                              ; preds = %201
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i33
  %217 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #9
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !2

222:                                              ; preds = %213
  tail call void @llvm.trap() #9
  unreachable

223:                                              ; preds = %213
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %214, align 4
  br label %225

225:                                              ; preds = %223, %208, %201
  %226 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %202, i64 1
  %227 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %203, i64 1
  %228 = icmp eq %"class.WTF::String"* %227, %199
  br i1 %228, label %229, label %201

229:                                              ; preds = %225, %190
  %230 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %174, i64 1
  %231 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %175, i64 1
  %232 = icmp eq %"class.WTF::Vector.1"* %231, %168
  br i1 %232, label %233, label %173

233:                                              ; preds = %229
  %234 = load i32, i32* %7, align 4
  br label %235

235:                                              ; preds = %233, %161
  %236 = phi i32 [ %234, %233 ], [ %163, %161 ]
  store i32 %236, i32* %5, align 4
  br label %237

237:                                              ; preds = %2, %235
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString29FromUSVStringSequenceSequenceERKN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* noalias sret, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0 to i64*
  store i64 -6148914691236517206, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false) #9
  %7 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 2
  %8 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_EaSERKS4_(%"class.WTF::Vector"* %7, %"class.WTF::Vector"* dereferenceable(16) %1) #9
  store i32 2, i32* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.6"* @_ZNK5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString29GetAsUSVStringUSVStringRecordEv(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* readnone) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 3
  ret %"class.WTF::Vector.6"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString27SetUSVStringUSVStringRecordERKN3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*, %"class.WTF::Vector.6"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 3
  %4 = tail call dereferenceable(16) %"class.WTF::Vector.6"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEaSERKS6_(%"class.WTF::Vector.6"* %3, %"class.WTF::Vector.6"* dereferenceable(16) %1)
  %5 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  store i32 3, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.6"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEaSERKS6_(%"class.WTF::Vector.6"*, %"class.WTF::Vector.6"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.6"* %1, %0
  br i1 %3, label %236, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %56

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %15
  br label %17

17:                                               ; preds = %52, %10
  %18 = phi %"struct.std::__1::pair"* [ %53, %52 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 1
  %54 = icmp eq %"struct.std::__1::pair"* %53, %14
  br i1 %54, label %55, label %17

55:                                               ; preds = %52
  store i32 %8, i32* %5, align 4
  br label %150

56:                                               ; preds = %4
  %57 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp ugt i32 %8, %58
  br i1 %59, label %60, label %148

60:                                               ; preds = %56
  %61 = icmp eq i32 %58, 0
  br i1 %61, label %114, label %62

62:                                               ; preds = %60
  %63 = icmp eq i32 %6, 0
  br i1 %63, label %108, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %65, align 8
  %67 = zext i32 %6 to i64
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 %67
  br label %69

69:                                               ; preds = %104, %64
  %70 = phi %"struct.std::__1::pair"* [ %105, %104 ], [ %66, %64 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #9
  br label %87

87:                                               ; preds = %86, %83, %69
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #9
  br label %104

104:                                              ; preds = %103, %100, %87
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 1
  %106 = icmp eq %"struct.std::__1::pair"* %105, %68
  br i1 %106, label %107, label %69

107:                                              ; preds = %104
  store i32 0, i32* %5, align 4
  br label %108

108:                                              ; preds = %107, %62
  %109 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 0, i64* %111 monotonic, align 8
  store i32 0, i32* %57, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %110) #9
  %112 = load i32, i32* %7, align 4
  %113 = load i32, i32* %57, align 8
  br label %114

114:                                              ; preds = %60, %108
  %115 = phi i32 [ 0, %60 ], [ %113, %108 ]
  %116 = phi i32 [ %8, %60 ], [ %112, %108 ]
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %118, label %148, !prof !3

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %119, align 8
  %121 = icmp eq %"struct.std::__1::pair"* %120, null
  %122 = zext i32 %116 to i64
  %123 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %122) #9
  %124 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %123, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #9
  br i1 %121, label %125, label %130

125:                                              ; preds = %118
  %126 = ptrtoint i8* %124 to i64
  %127 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %126, i64* %127 monotonic, align 8
  %128 = lshr i64 %123, 4
  %129 = trunc i64 %128 to i32
  store i32 %129, i32* %57, align 8
  br label %148

130:                                              ; preds = %118
  %131 = lshr i64 %123, 4
  %132 = ptrtoint i8* %124 to i64
  %133 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %119, align 8
  %134 = icmp ne i8* %124, null
  %135 = icmp ne %"struct.std::__1::pair"* %133, null
  %136 = and i1 %134, %135
  %137 = bitcast %"struct.std::__1::pair"* %133 to i8*
  br i1 %136, label %138, label %144, !prof !3

138:                                              ; preds = %130
  %139 = load i32, i32* %5, align 4
  %140 = zext i32 %139 to i64
  %141 = shl nuw nsw i64 %140, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* nonnull align 8 %137, i64 %141, i1 false) #9
  %142 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %138, %130
  %145 = phi i8* [ %143, %138 ], [ %137, %130 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #9
  %146 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %132, i64* %146 monotonic, align 8
  %147 = trunc i64 %131 to i32
  store i32 %147, i32* %57, align 8
  br label %148

148:                                              ; preds = %56, %114, %125, %144
  %149 = load i32, i32* %5, align 4
  br label %150

150:                                              ; preds = %148, %55
  %151 = phi i32 [ %149, %148 ], [ %8, %55 ]
  %152 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %1, i64 0, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %152, align 8
  %154 = zext i32 %151 to i64
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 %154
  %156 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %156, align 8
  %158 = icmp eq i32 %151, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %150, %159
  %160 = phi %"struct.std::__1::pair"* [ %164, %159 ], [ %157, %150 ]
  %161 = phi %"struct.std::__1::pair"* [ %163, %159 ], [ %153, %150 ]
  %162 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZNSt3__14pairIN3WTF6StringES2_EaSERKS3_(%"struct.std::__1::pair"* %160, %"struct.std::__1::pair"* dereferenceable(16) %161) #9
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 1
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %160, i64 1
  %165 = icmp eq %"struct.std::__1::pair"* %163, %155
  br i1 %165, label %166, label %159

166:                                              ; preds = %159
  %167 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %152, align 8
  %168 = load i32, i32* %5, align 4
  %169 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %156, align 8
  br label %170

170:                                              ; preds = %166, %150
  %171 = phi %"struct.std::__1::pair"* [ %169, %166 ], [ %157, %150 ]
  %172 = phi i32 [ %168, %166 ], [ 0, %150 ]
  %173 = phi %"struct.std::__1::pair"* [ %167, %166 ], [ %153, %150 ]
  %174 = zext i32 %172 to i64
  %175 = load i32, i32* %7, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %173, i64 %176
  %178 = icmp eq i32 %172, %175
  br i1 %178, label %234, label %179

179:                                              ; preds = %170
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 %174
  %181 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %173, i64 %174
  br label %182

182:                                              ; preds = %179, %228
  %183 = phi %"struct.std::__1::pair"* [ %229, %228 ], [ %180, %179 ]
  %184 = phi %"struct.std::__1::pair"* [ %230, %228 ], [ %181, %179 ]
  %185 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %183, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %187, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %188, label %206, label %189

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %206

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i33
  %198 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %197, i33 1) #9
  %199 = extractvalue { i33, i1 } %198, 1
  %200 = extractvalue { i33, i1 } %198, 0
  %201 = icmp slt i33 %200, 0
  %202 = or i1 %199, %201
  br i1 %202, label %203, label %204, !prof !2

203:                                              ; preds = %194
  tail call void @llvm.trap() #9
  unreachable

204:                                              ; preds = %194
  %205 = trunc i33 %200 to i32
  store i32 %205, i32* %195, align 4
  br label %206

206:                                              ; preds = %204, %189, %182
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 0, i32 1, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %183, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %209, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %210, label %228, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %228

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i33
  %220 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %219, i33 1) #9
  %221 = extractvalue { i33, i1 } %220, 1
  %222 = extractvalue { i33, i1 } %220, 0
  %223 = icmp slt i33 %222, 0
  %224 = or i1 %221, %223
  br i1 %224, label %225, label %226, !prof !2

225:                                              ; preds = %216
  tail call void @llvm.trap() #9
  unreachable

226:                                              ; preds = %216
  %227 = trunc i33 %222 to i32
  store i32 %227, i32* %217, align 4
  br label %228

228:                                              ; preds = %226, %211, %206
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %183, i64 1
  %230 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 1
  %231 = icmp eq %"struct.std::__1::pair"* %230, %177
  br i1 %231, label %232, label %182

232:                                              ; preds = %228
  %233 = load i32, i32* %7, align 4
  br label %234

234:                                              ; preds = %232, %170
  %235 = phi i32 [ %233, %232 ], [ %172, %170 ]
  store i32 %235, i32* %5, align 4
  br label %236

236:                                              ; preds = %2, %234
  ret %"class.WTF::Vector.6"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString28FromUSVStringUSVStringRecordERKN3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* noalias sret, %"class.WTF::Vector.6"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0 to i64*
  store i64 -6148914691236517206, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false) #9
  %7 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 3
  %8 = tail call dereferenceable(16) %"class.WTF::Vector.6"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEaSERKS6_(%"class.WTF::Vector.6"* %7, %"class.WTF::Vector.6"* dereferenceable(16) %1) #9
  store i32 3, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringC2ERKS0_(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*, %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #9
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %28, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::Vector.1"* null, %"class.WTF::Vector.1"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 0, i32* %32, align 8
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %27
  %35 = zext i32 %30 to i64
  %36 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %35) #9
  %37 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %38 = ptrtoint i8* %37 to i64
  %39 = bitcast %"class.WTF::Vector"* %28 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %36, 4
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %32, align 8
  %42 = bitcast i8* %37 to %"class.WTF::Vector.1"*
  br label %43

43:                                               ; preds = %27, %34
  %44 = phi %"class.WTF::Vector.1"* [ null, %27 ], [ %42, %34 ]
  %45 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %48, align 8
  %50 = load i32, i32* %45, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %49, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %114, label %54

54:                                               ; preds = %43, %110
  %55 = phi %"class.WTF::Vector.1"* [ %111, %110 ], [ %44, %43 ]
  %56 = phi %"class.WTF::Vector.1"* [ %112, %110 ], [ %49, %43 ]
  %57 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %56, i64 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %55, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %55, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %60, align 8
  %61 = icmp eq i32 %58, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %54
  %63 = zext i32 %58 to i64
  %64 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %63) #9
  %65 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %64, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %66 = ptrtoint i8* %65 to i64
  %67 = bitcast %"class.WTF::Vector.1"* %55 to i64*
  store atomic i64 %66, i64* %67 monotonic, align 8
  %68 = lshr i64 %64, 3
  %69 = trunc i64 %68 to i32
  store i32 %69, i32* %60, align 8
  %70 = bitcast i8* %65 to %"class.WTF::String"*
  br label %71

71:                                               ; preds = %62, %54
  %72 = phi %"class.WTF::String"* [ null, %54 ], [ %70, %62 ]
  %73 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %56, i64 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %55, i64 0, i32 0, i32 0, i32 2
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %56, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %76, align 8
  %78 = load i32, i32* %73, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 %79
  %81 = icmp eq i32 %78, 0
  br i1 %81, label %110, label %82

82:                                               ; preds = %71, %106
  %83 = phi %"class.WTF::String"* [ %107, %106 ], [ %72, %71 ]
  %84 = phi %"class.WTF::String"* [ %108, %106 ], [ %77, %71 ]
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %87, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #9
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %94
  tail call void @llvm.trap() #9
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %104, %89, %82
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 1
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 1
  %109 = icmp eq %"class.WTF::String"* %108, %80
  br i1 %109, label %110, label %82

110:                                              ; preds = %106, %71
  %111 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %55, i64 1
  %112 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %56, i64 1
  %113 = icmp eq %"class.WTF::Vector.1"* %112, %52
  br i1 %113, label %114, label %54

114:                                              ; preds = %110, %43
  %115 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 3
  %116 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 3
  tail call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_(%"class.WTF::Vector.6"* %115, %"class.WTF::Vector.6"* dereferenceable(16) %116)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_(%"class.WTF::Vector.6"*, %"class.WTF::Vector.6"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %9) #9
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #9
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 4
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"struct.std::__1::pair"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"struct.std::__1::pair"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %78, label %28

28:                                               ; preds = %17, %74
  %29 = phi %"struct.std::__1::pair"* [ %75, %74 ], [ %18, %17 ]
  %30 = phi %"struct.std::__1::pair"* [ %76, %74 ], [ %23, %17 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #9
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #9
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %28
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #9
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #9
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %72, %57, %52
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 1
  %77 = icmp eq %"struct.std::__1::pair"* %76, %26
  br i1 %77, label %78, label %28

78:                                               ; preds = %74, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringD2Ev(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 3
  %3 = bitcast %"class.WTF::Vector.6"* %2 to %"class.WTF::ConditionalDestructor.9"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.9"* %3) #9
  %4 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 2
  %5 = bitcast %"class.WTF::Vector"* %4 to %"class.WTF::ConditionalDestructor.4"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINS1_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES3_EELb0EED2Ev(%"class.WTF::ConditionalDestructor.4"* %5) #9
  %6 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #9
  br label %22

22:                                               ; preds = %1, %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.9"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.9"* %0 to %"struct.std::__1::pair"**
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %57, label %5, !prof !3

5:                                                ; preds = %1
  %6 = bitcast %"struct.std::__1::pair"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.9", %"class.WTF::ConditionalDestructor.9"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.9"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !2

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"struct.std::__1::pair"* [ %50, %49 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  %51 = icmp eq %"struct.std::__1::pair"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::ConditionalDestructor.9"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %5
  %56 = phi i8* [ %54, %52 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #9
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %2, align 8
  br label %57

57:                                               ; preds = %1, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorINS1_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES3_EELb0EED2Ev(%"class.WTF::ConditionalDestructor.4"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.4"* %0 to %"class.WTF::Vector.1"**
  %3 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector.1"* %3, null
  br i1 %4, label %61, label %5, !prof !3

5:                                                ; preds = %1
  %6 = bitcast %"class.WTF::Vector.1"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.4", %"class.WTF::ConditionalDestructor.4"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.4"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %59, label %11, !prof !2

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %53
  %15 = phi %"class.WTF::Vector.1"* [ %54, %53 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %18 = icmp eq %"class.WTF::String"* %17, null
  br i1 %18, label %53, label %19, !prof !3

19:                                               ; preds = %14
  %20 = bitcast %"class.WTF::String"* %17 to i8*
  %21 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %15, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24, !prof !2

24:                                               ; preds = %19
  %25 = zext i32 %22 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 %25
  br label %27

27:                                               ; preds = %45, %24
  %28 = phi %"class.WTF::String"* [ %46, %45 ], [ %17, %24 ]
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #9
  br label %45

45:                                               ; preds = %44, %41, %27
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 1
  %47 = icmp eq %"class.WTF::String"* %46, %26
  br i1 %47, label %48, label %27

48:                                               ; preds = %45
  store i32 0, i32* %21, align 4
  %49 = bitcast %"class.WTF::Vector.1"* %15 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %19
  %52 = phi i8* [ %50, %48 ], [ %20, %19 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %16, align 8
  br label %53

53:                                               ; preds = %51, %14
  %54 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %15, i64 1
  %55 = icmp eq %"class.WTF::Vector.1"* %54, %13
  br i1 %55, label %56, label %14

56:                                               ; preds = %53
  store i32 0, i32* %8, align 4
  %57 = bitcast %"class.WTF::ConditionalDestructor.4"* %0 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %5
  %60 = phi i8* [ %58, %56 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #9
  store %"class.WTF::Vector.1"* null, %"class.WTF::Vector.1"** %2, align 8
  br label %61

61:                                               ; preds = %1, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* @_ZN5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringaSERKS0_(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* returned, %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #9
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %2
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::String"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 2
  %49 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_EaSERKS4_(%"class.WTF::Vector"* %47, %"class.WTF::Vector"* dereferenceable(16) %48)
  %50 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 3
  %51 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %1, i64 0, i32 3
  %52 = tail call dereferenceable(16) %"class.WTF::Vector.6"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEaSERKS6_(%"class.WTF::Vector.6"* %50, %"class.WTF::Vector.6"* dereferenceable(16) %51)
  ret %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString5TraceEPNS_7VisitorE(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* nocapture, %"class.blink::Visitor"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink64V8USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* dereferenceable(48), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::ScriptIterator", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = alloca %"class.WTF::Vector.6", align 8
  %9 = icmp eq %"class.v8::Value"* %1, null
  br i1 %9, label %253, label %10

10:                                               ; preds = %5
  %11 = icmp eq i32 %3, 0
  br i1 %11, label %12, label %33

12:                                               ; preds = %10
  %13 = bitcast %"class.v8::Value"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 3
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %17, label %33

17:                                               ; preds = %12
  %18 = add i64 %14, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = and i64 %14, -4294967296
  %22 = zext i32 %20 to i64
  %23 = or i64 %21, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 67
  br i1 %27, label %28, label %33

28:                                               ; preds = %17
  %29 = add i64 %14, 23
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = ashr i32 %31, 1
  switch i32 %32, label %33 [
    i32 5, label %253
    i32 3, label %253
  ]

33:                                               ; preds = %28, %17, %12, %10
  %34 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #9
  br i1 %34, label %35, label %115

35:                                               ; preds = %33
  %36 = bitcast %"class.blink::ScriptIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 56, i1 false)
  %37 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %6, %"class.v8::Isolate"* %0, %"class.v8::Object"* nonnull %37, %"class.blink::ExceptionState"* dereferenceable(72) %4) #9
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %252

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %6, i64 0, i32 1, i32 0
  %43 = load %"class.v8::Object"*, %"class.v8::Object"** %42, align 8
  %44 = icmp eq %"class.v8::Object"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %49 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %7, %"class.v8::Isolate"* %0, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %6, %"class.blink::ExceptionState"* dereferenceable(72) %4) #9
  %50 = load i32, i32* %38, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %2, i64 0, i32 2
  %54 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_EaSERKS4_(%"class.WTF::Vector"* %53, %"class.WTF::Vector"* nonnull dereferenceable(16) %7) #9
  %55 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %2, i64 0, i32 0
  store i32 2, i32* %55, align 8
  br label %56

56:                                               ; preds = %45, %52
  %57 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %47, align 8
  %58 = icmp eq %"class.WTF::Vector.1"* %57, null
  br i1 %58, label %113, label %59, !prof !3

59:                                               ; preds = %56
  %60 = bitcast %"class.WTF::Vector.1"* %57 to i8*
  %61 = load i32, i32* %48, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %111, label %63, !prof !2

63:                                               ; preds = %59
  %64 = zext i32 %61 to i64
  %65 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %57, i64 %64
  br label %66

66:                                               ; preds = %105, %63
  %67 = phi %"class.WTF::Vector.1"* [ %106, %105 ], [ %57, %63 ]
  %68 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::String"*, %"class.WTF::String"** %68, align 8
  %70 = icmp eq %"class.WTF::String"* %69, null
  br i1 %70, label %105, label %71, !prof !3

71:                                               ; preds = %66
  %72 = bitcast %"class.WTF::String"* %69 to i8*
  %73 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %67, i64 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %103, label %76, !prof !2

76:                                               ; preds = %71
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %69, i64 %77
  br label %79

79:                                               ; preds = %97, %76
  %80 = phi %"class.WTF::String"* [ %98, %97 ], [ %69, %76 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #9
  br label %97

97:                                               ; preds = %96, %93, %79
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 1
  %99 = icmp eq %"class.WTF::String"* %98, %78
  br i1 %99, label %100, label %79

100:                                              ; preds = %97
  store i32 0, i32* %73, align 4
  %101 = bitcast %"class.WTF::Vector.1"* %67 to i8**
  %102 = load i8*, i8** %101, align 8
  br label %103

103:                                              ; preds = %100, %71
  %104 = phi i8* [ %102, %100 ], [ %72, %71 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %104) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %68, align 8
  br label %105

105:                                              ; preds = %103, %66
  %106 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %67, i64 1
  %107 = icmp eq %"class.WTF::Vector.1"* %106, %65
  br i1 %107, label %108, label %66

108:                                              ; preds = %105
  store i32 0, i32* %48, align 4
  %109 = bitcast %"class.WTF::Vector"* %7 to i8**
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %108, %59
  %112 = phi i8* [ %110, %108 ], [ %60, %59 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %112) #9
  store %"class.WTF::Vector.1"* null, %"class.WTF::Vector.1"** %47, align 8
  br label %113

113:                                              ; preds = %56, %111
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %36) #9
  br label %253

114:                                              ; preds = %41
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %36) #9
  br label %115

115:                                              ; preds = %114, %33
  %116 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #9
  br i1 %116, label %117, label %129

117:                                              ; preds = %115
  %118 = bitcast %"class.WTF::Vector.6"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #9
  %119 = bitcast %"class.WTF::Vector.6"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_9IDLRecordINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEES4_EEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.6"* nonnull sret %8, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %120 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %2, i64 0, i32 3
  %125 = call dereferenceable(16) %"class.WTF::Vector.6"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEaSERKS6_(%"class.WTF::Vector.6"* %124, %"class.WTF::Vector.6"* nonnull dereferenceable(16) %8) #9
  %126 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %2, i64 0, i32 0
  store i32 3, i32* %126, align 8
  br label %127

127:                                              ; preds = %117, %123
  %128 = bitcast %"class.WTF::Vector.6"* %8 to %"class.WTF::ConditionalDestructor.9"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.9"* nonnull %128) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #9
  br label %253

129:                                              ; preds = %115
  %130 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %161, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %149

139:                                              ; preds = %132
  %140 = zext i32 %138 to i33
  %141 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #9
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !2

146:                                              ; preds = %139
  call void @llvm.trap() #9
  unreachable

147:                                              ; preds = %139
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %137, align 4
  br label %149

149:                                              ; preds = %132, %147
  %150 = phi i32 [ %148, %147 ], [ %138, %132 ]
  %151 = load atomic i32, i32* %133 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %156 = add i32 %150, -1
  store i32 %156, i32* %155, align 4
  br label %157

157:                                              ; preds = %154, %149
  %158 = phi i32 [ %156, %154 ], [ %150, %149 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #9
  br label %161

161:                                              ; preds = %129, %157, %160
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %238

165:                                              ; preds = %161
  br i1 %131, label %183, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %185

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i33
  %175 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %174, i33 1) #9
  %176 = extractvalue { i33, i1 } %175, 1
  %177 = extractvalue { i33, i1 } %175, 0
  %178 = icmp slt i33 %177, 0
  %179 = or i1 %176, %178
  br i1 %179, label %180, label %181, !prof !2

180:                                              ; preds = %171
  call void @llvm.trap() #9
  unreachable

181:                                              ; preds = %171
  %182 = trunc i33 %177 to i32
  store i32 %182, i32* %172, align 4
  br label %185

183:                                              ; preds = %165
  %184 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %2, i64 0, i32 1
  br label %202

185:                                              ; preds = %166, %181
  %186 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %2, i64 0, i32 1
  %187 = load atomic i32, i32* %167 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %202

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = zext i32 %192 to i33
  %194 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %193, i33 1) #9
  %195 = extractvalue { i33, i1 } %194, 1
  %196 = extractvalue { i33, i1 } %194, 0
  %197 = icmp slt i33 %196, 0
  %198 = or i1 %195, %197
  br i1 %198, label %199, label %200, !prof !2

199:                                              ; preds = %190
  call void @llvm.trap() #9
  unreachable

200:                                              ; preds = %190
  %201 = trunc i33 %196 to i32
  store i32 %201, i32* %191, align 4
  br label %202

202:                                              ; preds = %183, %200, %185
  %203 = phi i1 [ false, %200 ], [ false, %185 ], [ true, %183 ]
  %204 = phi %"class.WTF::String"* [ %186, %200 ], [ %186, %185 ], [ %184, %183 ]
  %205 = ptrtoint %"class.WTF::StringImpl"* %130 to i64
  %206 = bitcast %"class.WTF::String"* %204 to i64*
  %207 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %2, i64 0, i32 1, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  store i64 %205, i64* %206, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %202
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #9
  br label %223

223:                                              ; preds = %202, %219, %222
  %224 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %2, i64 0, i32 0
  store i32 1, i32* %224, align 8
  br i1 %203, label %238, label %225

225:                                              ; preds = %223
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #9
  br label %238

238:                                              ; preds = %161, %223, %234, %237
  br i1 %131, label %253, label %239

239:                                              ; preds = %238
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #9
  br label %253

252:                                              ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %36) #9
  br label %253

253:                                              ; preds = %251, %248, %238, %28, %28, %252, %113, %5, %127
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_9IDLRecordINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEES4_EEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.6"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.WTF::Vector.6", align 8
  %7 = alloca %"class.WTF::HashMap.345", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca i32, align 4
  %10 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %11 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0)) #9
  %13 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  br label %383

14:                                               ; preds = %4
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %16 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %17 = call %"class.v8::Array"* @_ZN2v86Object19GetOwnPropertyNamesENS_5LocalINS_7ContextEEENS_14PropertyFilterENS_17KeyConversionModeE(%"class.v8::Object"* %15, %"class.v8::Context"* %10, i32 0, i32 0) #9
  %18 = icmp eq %"class.v8::Array"* %17, null
  br i1 %18, label %19, label %26

19:                                               ; preds = %14
  %20 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %21 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %22 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %22, i64 5
  %24 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %23, align 8
  call void %24(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %20) #9
  %25 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #9
  br label %382

26:                                               ; preds = %14
  %27 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %17) #9
  %28 = icmp ugt i32 %27, 134086656
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  %30 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #9
  br label %382

31:                                               ; preds = %26
  %32 = bitcast %"class.WTF::Vector.6"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9
  %33 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #9
  %36 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %17) #9
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %31
  %39 = zext i32 %36 to i64
  %40 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %39) #9
  %41 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %40, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #9
  %42 = ptrtoint i8* %41 to i64
  %43 = bitcast %"class.WTF::Vector.6"* %6 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = lshr i64 %40, 4
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* %34, align 8
  br label %46

46:                                               ; preds = %31, %38
  %47 = bitcast %"class.WTF::HashMap.345"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.WTF::HashMap.345", %"class.WTF::HashMap.345"* %7, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::HashMap.345", %"class.WTF::HashMap.345"* %7, i64 0, i32 0, i32 1
  %50 = bitcast %"class.WTF::HashMap.345"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 20, i1 false) #9
  %51 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %17) #9
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %46
  %54 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  br label %337

55:                                               ; preds = %46
  %56 = bitcast %"class.v8::Array"* %17 to %"class.v8::Object"*
  %57 = bitcast %"class.WTF::String"* %8 to i8*
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %60 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  %61 = getelementptr inbounds %"class.WTF::HashMap.345", %"class.WTF::HashMap.345"* %7, i64 0, i32 0
  %62 = bitcast i32* %9 to i8*
  %63 = bitcast %"class.WTF::String"* %8 to i64*
  %64 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  br label %65

65:                                               ; preds = %55, %333
  %66 = phi i32 [ 0, %55 ], [ %334, %333 ]
  %67 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* nonnull %56, %"class.v8::Context"* %10, i32 %66) #9
  %68 = icmp eq %"class.v8::Value"* %67, null
  br i1 %68, label %69, label %74

69:                                               ; preds = %65
  %70 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %71 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %64, align 8
  %72 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %71, i64 5
  %73 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %72, align 8
  call void %73(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %70) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #9
  br label %346

74:                                               ; preds = %65
  %75 = bitcast %"class.v8::Value"* %67 to %"class.v8::Name"*
  %76 = call %"class.v8::Value"* @_ZN2v86Object24GetOwnPropertyDescriptorENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %15, %"class.v8::Context"* %10, %"class.v8::Name"* nonnull %75) #9
  %77 = icmp eq %"class.v8::Value"* %76, null
  br i1 %77, label %78, label %83

78:                                               ; preds = %74
  %79 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %80 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %64, align 8
  %81 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %80, i64 5
  %82 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %81, align 8
  call void %82(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %79) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #9
  br label %346

83:                                               ; preds = %74
  %84 = bitcast %"class.v8::Value"* %76 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, 3
  %87 = icmp eq i64 %86, 1
  br i1 %87, label %88, label %105

88:                                               ; preds = %83
  %89 = add i64 %85, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = and i64 %85, -4294967296
  %93 = zext i32 %91 to i64
  %94 = or i64 %92, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load i16, i16* %96, align 2
  %98 = icmp eq i16 %97, 67
  br i1 %98, label %99, label %105

99:                                               ; preds = %88
  %100 = add i64 %85, 23
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, -2
  %104 = icmp eq i32 %103, 10
  br i1 %104, label %333, label %105

105:                                              ; preds = %88, %83, %99
  %106 = bitcast %"class.v8::Value"* %76 to %"class.v8::Object"*
  %107 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %1, i8* nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i32 1, i32 10) #9
  %108 = icmp eq %"class.v8::String"* %107, null
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %105
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %110

110:                                              ; preds = %105, %109
  %111 = bitcast %"class.v8::String"* %107 to %"class.v8::Value"*
  %112 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %106, %"class.v8::Context"* %10, %"class.v8::Value"* %111) #9
  %113 = icmp eq %"class.v8::Value"* %112, null
  br i1 %113, label %114, label %115, !prof !2

114:                                              ; preds = %110
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %115

115:                                              ; preds = %110, %114
  %116 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %112, %"class.v8::Isolate"* %1) #9
  br i1 %116, label %117, label %333

117:                                              ; preds = %115
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %58, align 8
  %118 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %67, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %58, align 8
  %119 = load i32, i32* %59, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %122, label %121

121:                                              ; preds = %117
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #9
  br label %314

122:                                              ; preds = %117
  %123 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %15, %"class.v8::Context"* %10, %"class.v8::Value"* nonnull %67) #9
  %124 = icmp eq %"class.v8::Value"* %123, null
  br i1 %124, label %125, label %130

125:                                              ; preds = %122
  %126 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %127 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %64, align 8
  %128 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %127, i64 5
  %129 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %128, align 8
  call void %129(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %126) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #9
  br label %311

130:                                              ; preds = %122
  %131 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %123, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %132 = ptrtoint %"class.WTF::StringImpl"* %131 to i64
  %133 = load i32, i32* %59, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %296

135:                                              ; preds = %130
  %136 = load %"struct.WTF::KeyValuePair.349"*, %"struct.WTF::KeyValuePair.349"** %48, align 8
  %137 = icmp eq %"struct.WTF::KeyValuePair.349"* %136, null
  br i1 %137, label %275, label %138

138:                                              ; preds = %135
  %139 = load i32, i32* %49, align 8
  %140 = add i32 %139, -1
  %141 = zext i32 %140 to i64
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = lshr i32 %144, 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %138
  %148 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %142) #9
  br label %149

149:                                              ; preds = %147, %138
  %150 = phi i32 [ %148, %147 ], [ %145, %138 ]
  %151 = and i32 %150, %140
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %136, i64 %152
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %275, label %157

157:                                              ; preds = %149
  %158 = xor i32 %150, -1
  %159 = lshr i32 %150, 23
  %160 = add i32 %159, %158
  %161 = shl i32 %160, 12
  %162 = xor i32 %161, %160
  %163 = lshr i32 %162, 7
  %164 = xor i32 %163, %162
  %165 = shl i32 %164, 2
  %166 = xor i32 %165, %164
  %167 = lshr i32 %166, 20
  %168 = xor i32 %167, %166
  %169 = or i32 %168, 1
  %170 = zext i32 %169 to i64
  br label %171

171:                                              ; preds = %182, %157
  %172 = phi %"struct.WTF::KeyValuePair.349"* [ %153, %157 ], [ %187, %182 ]
  %173 = phi i64 [ %152, %157 ], [ %186, %182 ]
  %174 = phi i64 [ 0, %157 ], [ %184, %182 ]
  %175 = bitcast %"struct.WTF::KeyValuePair.349"* %172 to i8**
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, inttoptr (i64 -1 to i8*)
  br i1 %177, label %182, label %178

178:                                              ; preds = %171
  %179 = bitcast i8* %176 to %"class.WTF::StringImpl"*
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %181 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"* %180) #9
  br i1 %181, label %191, label %182

182:                                              ; preds = %178, %171
  %183 = icmp eq i64 %174, 0
  %184 = select i1 %183, i64 %170, i64 %174
  %185 = add i64 %184, %173
  %186 = and i64 %185, %141
  %187 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %136, i64 %186
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %187, i64 0, i32 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %275, label %171

191:                                              ; preds = %178
  %192 = icmp eq %"struct.WTF::KeyValuePair.349"* %172, null
  br i1 %192, label %275, label %193

193:                                              ; preds = %191
  %194 = load %"struct.WTF::KeyValuePair.349"*, %"struct.WTF::KeyValuePair.349"** %48, align 8
  %195 = icmp eq %"struct.WTF::KeyValuePair.349"* %194, null
  br i1 %195, label %254, label %196

196:                                              ; preds = %193
  %197 = load i32, i32* %49, align 8
  %198 = add i32 %197, -1
  %199 = zext i32 %198 to i64
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = lshr i32 %202, 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %196
  %206 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %200) #9
  br label %207

207:                                              ; preds = %205, %196
  %208 = phi i32 [ %206, %205 ], [ %203, %196 ]
  %209 = and i32 %208, %198
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %194, i64 %210
  %212 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %254, label %215

215:                                              ; preds = %207
  %216 = xor i32 %208, -1
  %217 = lshr i32 %208, 23
  %218 = add i32 %217, %216
  %219 = shl i32 %218, 12
  %220 = xor i32 %219, %218
  %221 = lshr i32 %220, 7
  %222 = xor i32 %221, %220
  %223 = shl i32 %222, 2
  %224 = xor i32 %223, %222
  %225 = lshr i32 %224, 20
  %226 = xor i32 %225, %224
  %227 = or i32 %226, 1
  %228 = zext i32 %227 to i64
  br label %229

229:                                              ; preds = %240, %215
  %230 = phi %"struct.WTF::KeyValuePair.349"* [ %211, %215 ], [ %245, %240 ]
  %231 = phi i64 [ %210, %215 ], [ %244, %240 ]
  %232 = phi i64 [ 0, %215 ], [ %242, %240 ]
  %233 = bitcast %"struct.WTF::KeyValuePair.349"* %230 to i8**
  %234 = load i8*, i8** %233, align 8
  %235 = icmp eq i8* %234, inttoptr (i64 -1 to i8*)
  br i1 %235, label %240, label %236

236:                                              ; preds = %229
  %237 = bitcast i8* %234 to %"class.WTF::StringImpl"*
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %239 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %237, %"class.WTF::StringImpl"* %238) #9
  br i1 %239, label %249, label %240

240:                                              ; preds = %236, %229
  %241 = icmp eq i64 %232, 0
  %242 = select i1 %241, i64 %228, i64 %232
  %243 = add i64 %242, %231
  %244 = and i64 %243, %199
  %245 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %194, i64 %244
  %246 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %254, label %229

249:                                              ; preds = %236
  %250 = icmp eq %"struct.WTF::KeyValuePair.349"* %230, null
  br i1 %250, label %254, label %251

251:                                              ; preds = %249
  %252 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %230, i64 0, i32 1
  %253 = load i32, i32* %252, align 4
  br label %254

254:                                              ; preds = %240, %207, %193, %249, %251
  %255 = phi i32 [ %253, %251 ], [ 0, %249 ], [ 0, %193 ], [ 0, %207 ], [ 0, %240 ]
  %256 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* nonnull %6, i32 %255) #9
  %257 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %256, i64 0, i32 1
  %258 = bitcast %"class.WTF::String"* %257 to i64*
  %259 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %257, i64 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  store i64 %132, i64* %258, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %311, label %262

262:                                              ; preds = %254
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %311

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #9
  br label %311

275:                                              ; preds = %182, %191, %149, %135
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #9
  %276 = load i32, i32* %35, align 4
  store i32 %276, i32* %9, align 4
  %277 = call { %"struct.WTF::KeyValuePair.349"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RKjEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.346"* nonnull %61, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %9) #9
  %278 = extractvalue { %"struct.WTF::KeyValuePair.349"*, i8 } %277, 1
  %279 = and i8 %278, 1
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %281, label %285

281:                                              ; preds = %275
  %282 = extractvalue { %"struct.WTF::KeyValuePair.349"*, i8 } %277, 0
  %283 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %282, i64 0, i32 1
  %284 = load i32, i32* %9, align 4
  store i32 %284, i32* %283, align 4
  br label %285

285:                                              ; preds = %275, %281
  %286 = load i64, i64* %63, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8
  %287 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %33, align 8
  %288 = load i32, i32* %35, align 4
  %289 = zext i32 %288 to i64
  %290 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %287, i64 %289
  %291 = bitcast %"struct.std::__1::pair"* %290 to i64*
  store i64 %286, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %287, i64 %289, i32 1
  %293 = bitcast %"class.WTF::String"* %292 to i64*
  store i64 %132, i64* %293, align 8
  %294 = load i32, i32* %35, align 4
  %295 = add i32 %294, 1
  store i32 %295, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #9
  br label %311

296:                                              ; preds = %130
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #9
  %297 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %297, label %311, label %298

298:                                              ; preds = %296
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  br i1 %302, label %305, label %307

305:                                              ; preds = %298
  %306 = add i32 %304, -1
  store i32 %306, i32* %303, align 4
  br label %307

307:                                              ; preds = %305, %298
  %308 = phi i32 [ %306, %305 ], [ %304, %298 ]
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %307
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #9
  br label %311

311:                                              ; preds = %310, %307, %296, %125, %285, %254, %271, %274
  %312 = phi i32 [ 0, %274 ], [ 0, %271 ], [ 0, %254 ], [ 0, %285 ], [ 1, %310 ], [ 1, %307 ], [ 1, %296 ], [ 1, %125 ]
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  br label %314

314:                                              ; preds = %311, %121
  %315 = phi %"class.WTF::StringImpl"* [ %313, %311 ], [ %118, %121 ]
  %316 = phi i32 [ %312, %311 ], [ 1, %121 ]
  %317 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %317, label %331, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %318
  %326 = add i32 %324, -1
  store i32 %326, i32* %323, align 4
  br label %327

327:                                              ; preds = %325, %318
  %328 = phi i32 [ %326, %325 ], [ %324, %318 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #9
  br label %331

331:                                              ; preds = %330, %327, %314
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  %332 = icmp eq i32 %316, 0
  br i1 %332, label %333, label %346

333:                                              ; preds = %331, %115, %99
  %334 = add nuw i32 %66, 1
  %335 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %17) #9
  %336 = icmp ult i32 %334, %335
  br i1 %336, label %65, label %337

337:                                              ; preds = %333, %53
  %338 = phi i8* [ %54, %53 ], [ %60, %333 ]
  %339 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %340 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %341 = bitcast %"class.WTF::Vector.6"* %6 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %338, i8 0, i64 16, i1 false) #9
  %342 = load i64, i64* %341, align 8
  %343 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 0, i64* %341 monotonic, align 8
  store atomic i64 %342, i64* %343 monotonic, align 8
  %344 = load i32, i32* %34, align 8
  store i32 %344, i32* %339, align 8
  store i32 0, i32* %34, align 8
  %345 = load i32, i32* %35, align 4
  store i32 %345, i32* %340, align 4
  store i32 0, i32* %35, align 4
  br label %346

346:                                              ; preds = %331, %78, %69, %337
  %347 = load %"struct.WTF::KeyValuePair.349"*, %"struct.WTF::KeyValuePair.349"** %48, align 8
  %348 = icmp eq %"struct.WTF::KeyValuePair.349"* %347, null
  br i1 %348, label %380, label %349, !prof !3

349:                                              ; preds = %346
  %350 = load i32, i32* %49, align 8
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %378, label %352

352:                                              ; preds = %349
  %353 = zext i32 %350 to i64
  br label %354

354:                                              ; preds = %375, %352
  %355 = phi i64 [ 0, %352 ], [ %376, %375 ]
  %356 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %347, i64 %355
  %357 = bitcast %"struct.WTF::KeyValuePair.349"* %356 to i8**
  %358 = load i8*, i8** %357, align 8
  %359 = bitcast i8* %358 to %"class.WTF::StringImpl"*
  %360 = ptrtoint i8* %358 to i64
  switch i64 %360, label %361 [
    i64 -1, label %375
    i64 0, label %375
  ]

361:                                              ; preds = %354
  %362 = getelementptr inbounds i8, i8* %358, i64 8
  %363 = bitcast i8* %362 to i32*
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = bitcast i8* %358 to i32*
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %361
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %361
  %372 = phi i32 [ %370, %369 ], [ %368, %361 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #9
  br label %375

375:                                              ; preds = %374, %371, %354, %354
  %376 = add nuw nsw i64 %355, 1
  %377 = icmp eq i64 %376, %353
  br i1 %377, label %378, label %354

378:                                              ; preds = %375, %349
  %379 = bitcast %"struct.WTF::KeyValuePair.349"* %347 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %379) #9
  store %"struct.WTF::KeyValuePair.349"* null, %"struct.WTF::KeyValuePair.349"** %48, align 8
  br label %380

380:                                              ; preds = %346, %378
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #9
  %381 = bitcast %"class.WTF::Vector.6"* %6 to %"class.WTF::ConditionalDestructor.9"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.9"* nonnull %381) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9
  br label %382

382:                                              ; preds = %380, %29, %19
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #9
  br label %383

383:                                              ; preds = %382, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.195"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #9
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #9
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #9
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #9
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #9
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #9
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #9
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #9
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #9
  br label %58

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !2

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #9
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %31, %35, %38, %53
  %56 = phi %"class.WTF::StringImpl"* [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = call %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"* %56) #9
  br label %58

58:                                               ; preds = %55, %22
  %59 = phi %"class.WTF::StringImpl"* [ %57, %55 ], [ null, %22 ]
  %60 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  store i8* null, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %58
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %61) #9
  br label %64

64:                                               ; preds = %63, %58
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #9
  br label %80

80:                                               ; preds = %64, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #9
  ret %"class.WTF::StringImpl"* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink4ToV8ERKNS_62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* dereferenceable(48), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %39 [
    i32 0, label %7
    i32 1, label %11
    i32 2, label %32
    i32 3, label %36
  ]

7:                                                ; preds = %3
  %8 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %9 = add i64 %8, 176
  %10 = inttoptr i64 %9 to %"class.v8::Value"*
  br label %39

11:                                               ; preds = %3
  %12 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %18, i64* %19, align 8
  br label %27

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  br label %27

27:                                               ; preds = %16, %20
  %28 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %31 = bitcast %"class.v8::String"* %30 to %"class.v8::Value"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  br label %39

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 2
  %34 = tail call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EEEEN2v85LocalINS7_5ArrayEEERKT_NS8_INS7_6ObjectEEEPNS7_7IsolateE(%"class.WTF::Vector"* dereferenceable(16) %33, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2) #9
  %35 = bitcast %"class.v8::Array"* %34 to %"class.v8::Value"*
  br label %39

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 3
  %38 = tail call %"class.v8::Value"* @_ZN5blink4ToV8IN3WTF6StringEEEN2v85LocalINS3_5ValueEEERKNS1_6VectorINSt3__14pairIS2_T_EELj0ENS1_18PartitionAllocatorEEENS4_INS3_6ObjectEEEPNS3_7IsolateE(%"class.WTF::Vector.6"* dereferenceable(16) %37, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  br label %39

39:                                               ; preds = %3, %36, %32, %27, %7
  %40 = phi %"class.v8::Value"* [ %38, %36 ], [ %35, %32 ], [ %31, %27 ], [ %10, %7 ], [ null, %3 ]
  ret %"class.v8::Value"* %40
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #9
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #9
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #9
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #9
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink4ToV8IN3WTF6StringEEEN2v85LocalINS3_5ValueEEERKNS1_6VectorINSt3__14pairIS2_T_EELj0ENS1_18PartitionAllocatorEEENS4_INS3_6ObjectEEEPNS3_7IsolateE(%"class.WTF::Vector.6"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #9
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %5) #9
  %6 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #9
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %5) #9
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #9
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %79, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.WTF::StringView"* %4 to i8*
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %15 = bitcast i8** %14 to %"class.WTF::StringImpl"**
  %16 = bitcast %"class.WTF::StringView"* %4 to i64*
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %18 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %19 = add i64 %18, 160
  br label %23

20:                                               ; preds = %69
  %21 = load i32, i32* %8, align 4
  %22 = icmp ult i32 %78, %21
  br i1 %22, label %23, label %79

23:                                               ; preds = %11, %20
  %24 = phi i32 [ 0, %11 ], [ %78, %20 ]
  %25 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %0, i32 %24) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  store i8* null, i8** %14, align 8
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %30, i64* %16, align 8
  br label %35

31:                                               ; preds = %23
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %13, align 8
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %15, align 8
  br label %35

35:                                               ; preds = %29, %31
  %36 = phi i32 [ %33, %31 ], [ 0, %29 ]
  store i32 %36, i32* %17, align 8
  %37 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  %38 = ptrtoint %"class.v8::String"* %37 to i64
  %39 = icmp eq %"class.v8::String"* %37, null
  %40 = select i1 %39, i64 %19, i64 %38
  %41 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %0, i32 %24) #9
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %35
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %52

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  %51 = bitcast %"class.WTF::StringImpl"* %50 to i8*
  br label %52

52:                                               ; preds = %45, %47
  %53 = phi i8* [ null, %45 ], [ %51, %47 ]
  %54 = phi %"class.WTF::StringImpl"* [ %46, %45 ], [ %43, %47 ]
  %55 = phi i32 [ 0, %45 ], [ %49, %47 ]
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %52
  %61 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %2, i8* %53, i32 1, i32 %55) #9
  %62 = icmp eq %"class.v8::String"* %61, null
  br i1 %62, label %63, label %69, !prof !2

63:                                               ; preds = %60
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %69

64:                                               ; preds = %52
  %65 = bitcast i8* %53 to i16*
  %66 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %2, i16* %65, i32 1, i32 %55) #9
  %67 = icmp eq %"class.v8::String"* %66, null
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %64
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %69

69:                                               ; preds = %60, %63, %64, %68
  %70 = phi %"class.v8::String"* [ %61, %60 ], [ null, %63 ], [ %66, %64 ], [ null, %68 ]
  %71 = bitcast %"class.v8::String"* %70 to %"class.v8::Name"*
  %72 = inttoptr i64 %40 to %"class.v8::Value"*
  %73 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %6, %"class.v8::Context"* %7, %"class.v8::Name"* %71, %"class.v8::Value"* %72) #9
  %74 = trunc i16 %73 to i8
  %75 = icmp eq i8 %74, 0
  %76 = icmp ult i16 %73, 256
  %77 = or i1 %76, %75
  %78 = add nuw i32 %24, 1
  br i1 %77, label %81, label %20, !prof !4

79:                                               ; preds = %20, %3
  %80 = bitcast %"class.v8::Object"* %6 to %"class.v8::Value"*
  br label %81

81:                                               ; preds = %69, %79
  %82 = phi %"class.v8::Value"* [ %80, %79 ], [ null, %69 ]
  ret %"class.v8::Value"* %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0 to i64*
  store i64 -6148914691236517206, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString", %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.WTF::StringImpl"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 40, i1 false) #9
  tail call void @_ZN5blink64V8USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_62USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVStringENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::USVStringSequenceSequenceOrUSVStringUSVStringRecordOrUSVString"* dereferenceable(48) %0, i32 1, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #3

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #3

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #3

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %70

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %68, label %14

14:                                               ; preds = %4, %64
  %15 = phi %"class.WTF::Vector.1"* [ %66, %64 ], [ %6, %4 ]
  %16 = phi %"class.WTF::Vector.1"* [ %65, %64 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::Vector.1"* %16 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %16, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.1"* %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #9
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.1"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %18, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %18, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %15, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %19, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %15, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::String"*, %"class.WTF::String"** %29, align 8
  %31 = icmp eq %"class.WTF::String"* %30, null
  br i1 %31, label %64, label %32, !prof !3

32:                                               ; preds = %14
  %33 = bitcast %"class.WTF::String"* %30 to i8*
  %34 = icmp eq i32 %27, 0
  br i1 %34, label %62, label %35, !prof !2

35:                                               ; preds = %32
  %36 = zext i32 %27 to i64
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 %36
  br label %38

38:                                               ; preds = %56, %35
  %39 = phi %"class.WTF::String"* [ %57, %56 ], [ %30, %35 ]
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #9
  br label %56

56:                                               ; preds = %55, %52, %38
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 1
  %58 = icmp eq %"class.WTF::String"* %57, %37
  br i1 %58, label %59, label %38

59:                                               ; preds = %56
  store i32 0, i32* %26, align 4
  %60 = bitcast %"class.WTF::Vector.1"* %15 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %32
  %63 = phi i8* [ %61, %59 ], [ %33, %32 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %63) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %29, align 8
  br label %64

64:                                               ; preds = %62, %14
  %65 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %16, i64 1
  %66 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %15, i64 1
  %67 = icmp eq %"class.WTF::Vector.1"* %66, %10
  br i1 %67, label %68, label %14

68:                                               ; preds = %64, %4
  %69 = bitcast %"class.WTF::Vector.1"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #9
  br label %149

70:                                               ; preds = %2
  %71 = zext i32 %1 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %74 = lshr i64 %72, 4
  %75 = ptrtoint i8* %73 to i64
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %77, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %70
  %84 = bitcast %"class.WTF::Vector.1"* %77 to i8*
  br label %144

85:                                               ; preds = %70
  %86 = bitcast i8* %73 to %"class.WTF::Vector.1"*
  br label %87

87:                                               ; preds = %85, %137
  %88 = phi %"class.WTF::Vector.1"* [ %139, %137 ], [ %77, %85 ]
  %89 = phi %"class.WTF::Vector.1"* [ %138, %137 ], [ %86, %85 ]
  %90 = bitcast %"class.WTF::Vector.1"* %89 to i8*
  %91 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %89, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %89, i64 0, i32 0, i32 0, i32 2
  %93 = bitcast %"class.WTF::Vector.1"* %88 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #9
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.WTF::Vector.1"* %89 to i64*
  store atomic i64 0, i64* %93 monotonic, align 8
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %88, i64 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %91, align 4
  %98 = load i32, i32* %96, align 4
  store i32 %98, i32* %91, align 4
  store i32 %97, i32* %96, align 4
  %99 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %88, i64 0, i32 0, i32 0, i32 2
  %100 = load i32, i32* %92, align 4
  %101 = load i32, i32* %99, align 4
  store i32 %101, i32* %92, align 4
  store i32 %100, i32* %99, align 4
  %102 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %88, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::String"*, %"class.WTF::String"** %102, align 8
  %104 = icmp eq %"class.WTF::String"* %103, null
  br i1 %104, label %137, label %105, !prof !3

105:                                              ; preds = %87
  %106 = bitcast %"class.WTF::String"* %103 to i8*
  %107 = icmp eq i32 %100, 0
  br i1 %107, label %135, label %108, !prof !2

108:                                              ; preds = %105
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 %109
  br label %111

111:                                              ; preds = %129, %108
  %112 = phi %"class.WTF::String"* [ %130, %129 ], [ %103, %108 ]
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #9
  br label %129

129:                                              ; preds = %128, %125, %111
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 1
  %131 = icmp eq %"class.WTF::String"* %130, %110
  br i1 %131, label %132, label %111

132:                                              ; preds = %129
  store i32 0, i32* %99, align 4
  %133 = bitcast %"class.WTF::Vector.1"* %88 to i8**
  %134 = load i8*, i8** %133, align 8
  br label %135

135:                                              ; preds = %132, %105
  %136 = phi i8* [ %134, %132 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %136) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %102, align 8
  br label %137

137:                                              ; preds = %135, %87
  %138 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %89, i64 1
  %139 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %88, i64 1
  %140 = icmp eq %"class.WTF::Vector.1"* %139, %81
  br i1 %140, label %141, label %87

141:                                              ; preds = %137
  %142 = bitcast %"class.WTF::Vector"* %0 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %83, %141
  %145 = phi i8* [ %143, %141 ], [ %84, %83 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #9
  %146 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %75, i64* %146 monotonic, align 8
  %147 = trunc i64 %74 to i32
  %148 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %147, i32* %148, align 8
  br label %149

149:                                              ; preds = %144, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.1"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.1"*, %"class.WTF::Vector.1"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.1"* %1, %0
  br i1 %3, label %219, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #9
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #9
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !3

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #9
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !3

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #9
  %108 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #9
  %112 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #9
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %136
  tail call void @llvm.trap() #9
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #9
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #9
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  tail call void @llvm.trap() #9
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.1"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZNSt3__14pairIN3WTF6StringES2_EaSERKS3_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #9
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #9
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #9
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #9
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.std::__1::pair"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.WTF::Vector.1", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %13, label %14, label %124

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::Vector.1"* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = bitcast %"class.WTF::Vector.1"* %6 to i64*
  %19 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.WTF::Vector.1"* %6 to i8**
  br label %23

23:                                               ; preds = %14, %122
  %24 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %25 = icmp eq %"class.v8::Value"* %24, null
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %23
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %27

27:                                               ; preds = %23, %26
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* nonnull sret %6, %"class.v8::Isolate"* %1, %"class.v8::Value"* %24, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %28 = load i32, i32* %17, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %67, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #9
  %32 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %33 = icmp eq %"class.WTF::String"* %32, null
  br i1 %33, label %66, label %34, !prof !3

34:                                               ; preds = %30
  %35 = bitcast %"class.WTF::String"* %32 to i8*
  %36 = load i32, i32* %20, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %64, label %38, !prof !2

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 %39
  br label %41

41:                                               ; preds = %59, %38
  %42 = phi %"class.WTF::String"* [ %60, %59 ], [ %32, %38 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #9
  br label %59

59:                                               ; preds = %58, %55, %41
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 1
  %61 = icmp eq %"class.WTF::String"* %60, %40
  br i1 %61, label %62, label %41

62:                                               ; preds = %59
  store i32 0, i32* %20, align 4
  %63 = load i8*, i8** %22, align 8
  br label %64

64:                                               ; preds = %62, %34
  %65 = phi i8* [ %63, %62 ], [ %35, %34 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %65) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %21, align 8
  br label %66

66:                                               ; preds = %30, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  br label %139

67:                                               ; preds = %27
  %68 = load i32, i32* %12, align 4
  %69 = load i32, i32* %11, align 8
  %70 = icmp eq i32 %68, %69
  br i1 %70, label %86, label %71, !prof !2

71:                                               ; preds = %67
  %72 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %10, align 8
  %73 = zext i32 %68 to i64
  %74 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %72, i64 %73
  %75 = bitcast %"class.WTF::Vector.1"* %74 to i8*
  %76 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %72, i64 %73, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %72, i64 %73, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #9
  %78 = load i64, i64* %18, align 8
  %79 = bitcast %"class.WTF::Vector.1"* %74 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = load i32, i32* %76, align 4
  %81 = load i32, i32* %19, align 8
  store i32 %81, i32* %76, align 4
  store i32 %80, i32* %19, align 8
  %82 = load i32, i32* %77, align 4
  %83 = load i32, i32* %20, align 4
  store i32 %83, i32* %77, align 4
  store i32 %82, i32* %20, align 4
  %84 = load i32, i32* %12, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %87

86:                                               ; preds = %67
  call void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector"* nonnull %5, %"class.WTF::Vector.1"* nonnull dereferenceable(16) %6) #9
  br label %87

87:                                               ; preds = %71, %86
  %88 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %89 = icmp eq %"class.WTF::String"* %88, null
  br i1 %89, label %122, label %90, !prof !3

90:                                               ; preds = %87
  %91 = bitcast %"class.WTF::String"* %88 to i8*
  %92 = load i32, i32* %20, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %120, label %94, !prof !2

94:                                               ; preds = %90
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::String"* [ %116, %115 ], [ %88, %94 ]
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #9
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 1
  %117 = icmp eq %"class.WTF::String"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %20, align 4
  %119 = load i8*, i8** %22, align 8
  br label %120

120:                                              ; preds = %118, %90
  %121 = phi i8* [ %119, %118 ], [ %91, %90 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %121) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %21, align 8
  br label %122

122:                                              ; preds = %87, %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  %123 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %123, label %23, label %124

124:                                              ; preds = %122, %4
  %125 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 16, i1 false) #9
  br label %139

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %132 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %133 = bitcast %"class.WTF::Vector"* %5 to i64*
  %134 = bitcast %"class.WTF::Vector"* %0 to i64*
  store i64 0, i64* %134, align 8
  %135 = load i64, i64* %133, align 8
  %136 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %133 monotonic, align 8
  store atomic i64 %135, i64* %136 monotonic, align 8
  %137 = load i32, i32* %11, align 8
  store i32 %137, i32* %131, align 8
  store i32 0, i32* %11, align 8
  %138 = load i32, i32* %12, align 4
  store i32 %138, i32* %132, align 4
  store i32 0, i32* %12, align 4
  br label %139

139:                                              ; preds = %66, %130, %128
  %140 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %10, align 8
  %141 = icmp eq %"class.WTF::Vector.1"* %140, null
  br i1 %141, label %196, label %142, !prof !3

142:                                              ; preds = %139
  %143 = bitcast %"class.WTF::Vector.1"* %140 to i8*
  %144 = load i32, i32* %12, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %194, label %146, !prof !2

146:                                              ; preds = %142
  %147 = zext i32 %144 to i64
  %148 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %140, i64 %147
  br label %149

149:                                              ; preds = %188, %146
  %150 = phi %"class.WTF::Vector.1"* [ %189, %188 ], [ %140, %146 ]
  %151 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::String"*, %"class.WTF::String"** %151, align 8
  %153 = icmp eq %"class.WTF::String"* %152, null
  br i1 %153, label %188, label %154, !prof !3

154:                                              ; preds = %149
  %155 = bitcast %"class.WTF::String"* %152 to i8*
  %156 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %150, i64 0, i32 0, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %186, label %159, !prof !2

159:                                              ; preds = %154
  %160 = zext i32 %157 to i64
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 %160
  br label %162

162:                                              ; preds = %180, %159
  %163 = phi %"class.WTF::String"* [ %181, %180 ], [ %152, %159 ]
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #9
  br label %180

180:                                              ; preds = %179, %176, %162
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 1
  %182 = icmp eq %"class.WTF::String"* %181, %161
  br i1 %182, label %183, label %162

183:                                              ; preds = %180
  store i32 0, i32* %156, align 4
  %184 = bitcast %"class.WTF::Vector.1"* %150 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %183, %154
  %187 = phi i8* [ %185, %183 ], [ %155, %154 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %187) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %151, align 8
  br label %188

188:                                              ; preds = %186, %149
  %189 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %150, i64 1
  %190 = icmp eq %"class.WTF::Vector.1"* %189, %148
  br i1 %190, label %191, label %149

191:                                              ; preds = %188
  store i32 0, i32* %12, align 4
  %192 = bitcast %"class.WTF::Vector"* %5 to i8**
  %193 = load i8*, i8** %192, align 8
  br label %194

194:                                              ; preds = %191, %142
  %195 = phi i8* [ %193, %191 ], [ %143, %142 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %195) #9
  store %"class.WTF::Vector.1"* null, %"class.WTF::Vector.1"** %10, align 8
  br label %196

196:                                              ; preds = %139, %194
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i64 0, i64 0)) #9
  %26 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #9
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 268173312
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %145

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #9
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %9) #9
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #9
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  %35 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  br label %99

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %38 = bitcast %"class.WTF::String"* %7 to i8*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %41 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  br label %42

42:                                               ; preds = %36, %90
  %43 = phi i32 [ 0, %36 ], [ %91, %90 ]
  %44 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %37, %"class.v8::Context"* %29, i32 %43) #9
  %45 = icmp eq %"class.v8::Value"* %44, null
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #9
  %48 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %49 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, i64 5
  %51 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %50, align 8
  call void %51(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %47) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  br label %108

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %44, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %39, align 8
  %54 = load i32, i32* %40, align 8
  %55 = icmp eq i32 %54, 0
  %56 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  br i1 %55, label %58, label %57

57:                                               ; preds = %52
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  br label %71

58:                                               ; preds = %52
  %59 = load i32, i32* %17, align 4
  %60 = load i32, i32* %16, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %69, label %62, !prof !2

62:                                               ; preds = %58
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %64 = zext i32 %59 to i64
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %64
  %66 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %56, i64* %66, align 8
  %67 = load i32, i32* %17, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  br label %90

69:                                               ; preds = %58
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.1"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  br label %71

71:                                               ; preds = %69, %57
  %72 = phi %"class.WTF::StringImpl"* [ %70, %69 ], [ %53, %57 ]
  %73 = phi i32 [ 0, %69 ], [ 1, %57 ]
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #9
  br label %88

88:                                               ; preds = %87, %84, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  %89 = icmp eq i32 %73, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %62, %88
  %91 = add nuw i32 %43, 1
  %92 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %42, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = load i32, i32* %16, align 8
  %98 = load i32, i32* %17, align 4
  br label %99

99:                                               ; preds = %33, %94
  %100 = phi i8* [ %35, %33 ], [ %41, %94 ]
  %101 = phi i64* [ %34, %33 ], [ %95, %94 ]
  %102 = phi i32 [ 0, %33 ], [ %98, %94 ]
  %103 = phi i32 [ %27, %33 ], [ %97, %94 ]
  %104 = phi i64 [ %28, %33 ], [ %96, %94 ]
  %105 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #9
  %107 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  store atomic i64 %104, i64* %107 monotonic, align 8
  store i32 %103, i32* %105, align 8
  store i32 0, i32* %16, align 8
  store i32 %102, i32* %106, align 4
  store i32 0, i32* %17, align 4
  br label %108

108:                                              ; preds = %88, %46, %99
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #9
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %110 = icmp eq %"class.WTF::String"* %109, null
  br i1 %110, label %144, label %111, !prof !3

111:                                              ; preds = %108
  %112 = bitcast %"class.WTF::String"* %109 to i8*
  %113 = load i32, i32* %17, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %142, label %115, !prof !2

115:                                              ; preds = %111
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 %116
  br label %118

118:                                              ; preds = %136, %115
  %119 = phi %"class.WTF::String"* [ %137, %136 ], [ %109, %115 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #9
  br label %136

136:                                              ; preds = %135, %132, %118
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %138 = icmp eq %"class.WTF::String"* %137, %117
  br i1 %138, label %139, label %118

139:                                              ; preds = %136
  store i32 0, i32* %17, align 4
  %140 = bitcast %"class.WTF::Vector.1"* %5 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %111
  %143 = phi i8* [ %141, %139 ], [ %112, %111 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %143) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %144

144:                                              ; preds = %108, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %145

145:                                              ; preds = %144, %11
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = bitcast %"class.WTF::Vector.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %13, label %14, label %74

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::String"* %6 to i8*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %19

19:                                               ; preds = %14, %72
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %24 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %17, align 8
  %25 = load i32, i32* %18, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  br i1 %26, label %45, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #9
  %30 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %89

45:                                               ; preds = %23
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %11, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %56, label %49, !prof !2

49:                                               ; preds = %45
  %50 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 %51
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 %27, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %54 = load i32, i32* %12, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %12, align 4
  br label %72

56:                                               ; preds = %45
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.1"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %72

72:                                               ; preds = %49, %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  %73 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %73, label %19, label %74

74:                                               ; preds = %72, %4
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #9
  br label %89

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  %84 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store i64 0, i64* %84, align 8
  %85 = load i64, i64* %83, align 8
  %86 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load i32, i32* %11, align 8
  store i32 %87, i32* %81, align 8
  store i32 0, i32* %11, align 8
  %88 = load i32, i32* %12, align 4
  store i32 %88, i32* %82, align 4
  store i32 0, i32* %12, align 4
  br label %89

89:                                               ; preds = %44, %80, %78
  %90 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %91 = icmp eq %"class.WTF::String"* %90, null
  br i1 %91, label %125, label %92, !prof !3

92:                                               ; preds = %89
  %93 = bitcast %"class.WTF::String"* %90 to i8*
  %94 = load i32, i32* %12, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %123, label %96, !prof !2

96:                                               ; preds = %92
  %97 = zext i32 %94 to i64
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 %97
  br label %99

99:                                               ; preds = %117, %96
  %100 = phi %"class.WTF::String"* [ %118, %117 ], [ %90, %96 ]
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #9
  br label %117

117:                                              ; preds = %116, %113, %99
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 1
  %119 = icmp eq %"class.WTF::String"* %118, %98
  br i1 %119, label %120, label %99

120:                                              ; preds = %117
  store i32 0, i32* %12, align 4
  %121 = bitcast %"class.WTF::Vector.1"* %5 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %92
  %124 = phi i8* [ %122, %120 ], [ %93, %92 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %124) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %125

125:                                              ; preds = %89, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #3

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #3

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.1"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::Vector.1"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %6, align 8
  %8 = icmp ugt %"class.WTF::Vector.1"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::Vector.1"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::Vector.1"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.WTF::Vector.1"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #9
  %36 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.WTF::Vector.1"* %1 to i64
  %39 = ptrtoint %"class.WTF::Vector.1"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.WTF::Vector.1"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %55) #9
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.WTF::Vector.1"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #9
  %64 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.WTF::Vector.1"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.WTF::Vector.1"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.WTF::Vector.1"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %69, i64 %72
  %74 = bitcast %"class.WTF::Vector.1"* %73 to i8*
  %75 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %69, i64 %72, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %69, i64 %72, i32 0, i32 0, i32 2
  %77 = bitcast %"class.WTF::Vector.1"* %70 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #9
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.WTF::Vector.1"* %73 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %70, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %75, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %75, align 4
  store i32 %81, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %70, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %76, align 4
  %85 = load i32, i32* %83, align 4
  store i32 %85, i32* %76, align 4
  store i32 %84, i32* %83, align 4
  %86 = load i32, i32* %3, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %3, align 4
  ret void
}

declare %"class.v8::Array"* @_ZN2v86Object19GetOwnPropertyNamesENS_5LocalINS_7ContextEEENS_14PropertyFilterENS_17KeyConversionModeE(%"class.v8::Object"*, %"class.v8::Context"*, i32, i32) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v86Object24GetOwnPropertyDescriptorENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #3

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25
  ret %"struct.std::__1::pair"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.349"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RKjEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.346"*, %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.349"*, %"struct.WTF::KeyValuePair.349"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.349"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.349"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.346"* %0, %"struct.WTF::KeyValuePair.349"* null)
  %9 = load %"struct.WTF::KeyValuePair.349"*, %"struct.WTF::KeyValuePair.349"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.349"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #9
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.349"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.349"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.349"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #9
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.349"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.349"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.349"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #9
  %72 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.349"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.349"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #9
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %79, i64 0, i32 1
  %120 = load i32, i32* %2, align 4
  store i32 %120, i32* %119, align 4
  %121 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.349"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.346"* %0, %"struct.WTF::KeyValuePair.349"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.349"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.349"*, i8 } undef, %"struct.WTF::KeyValuePair.349"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.349"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.349"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.349"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.346"*, %"struct.WTF::KeyValuePair.349"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEjEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.349"*
  %37 = call %"struct.WTF::KeyValuePair.349"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.346"* %0, %"struct.WTF::KeyValuePair.349"* %36, i32 %32, %"struct.WTF::KeyValuePair.349"* %1) #9
  ret %"struct.WTF::KeyValuePair.349"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.349"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.346"*, %"struct.WTF::KeyValuePair.349"*, i32, %"struct.WTF::KeyValuePair.349"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.346", align 8
  %6 = bitcast %"class.WTF::HashTable.346"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.346"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.349"* %1, %"struct.WTF::KeyValuePair.349"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.349"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.346"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.346"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.349"*, %"struct.WTF::KeyValuePair.349"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.349"* %22 to i64
  br label %71

24:                                               ; preds = %114
  %25 = bitcast %"class.WTF::HashTable.346"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.346"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %115, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.349"* [ null, %16 ], [ %118, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %116, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.349"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.349"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #9
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.349"* %33

71:                                               ; preds = %21, %114
  %72 = phi i64 [ %115, %114 ], [ %23, %21 ]
  %73 = phi i32 [ %116, %114 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.349"* [ %117, %114 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.349"* [ %118, %114 ], [ null, %21 ]
  %76 = phi i32 [ %119, %114 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.349"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %114
    i64 0, label %114
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.349"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.346"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #9
  %85 = extractvalue { %"struct.WTF::KeyValuePair.349"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.349"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %74, i64 %77, i32 1
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %105, align 8
  %108 = load %"struct.WTF::KeyValuePair.349"*, %"struct.WTF::KeyValuePair.349"** %15, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %108, i64 %77
  %110 = icmp eq %"struct.WTF::KeyValuePair.349"* %109, %3
  %111 = select i1 %110, %"struct.WTF::KeyValuePair.349"* %85, %"struct.WTF::KeyValuePair.349"* %75
  %112 = load i32, i32* %12, align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair.349"* %108 to i64
  br label %114

114:                                              ; preds = %71, %71, %102
  %115 = phi i64 [ %72, %71 ], [ %113, %102 ], [ %72, %71 ]
  %116 = phi i32 [ %73, %71 ], [ %112, %102 ], [ %73, %71 ]
  %117 = phi %"struct.WTF::KeyValuePair.349"* [ %74, %71 ], [ %108, %102 ], [ %74, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.349"* [ %75, %71 ], [ %111, %102 ], [ %75, %71 ]
  %119 = add i32 %76, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.349"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.346"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.349"*, %"struct.WTF::KeyValuePair.349"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.346", %"class.WTF::HashTable.346"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #9
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.349"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.349"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.349"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.349"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.349"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.349"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.349"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.349"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #9
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.349"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.349"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.349", %"struct.WTF::KeyValuePair.349"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.349"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.349"*, i8 } undef, %"struct.WTF::KeyValuePair.349"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.349"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.349"*, i8 } %77
}

declare %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !3

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #9
  br i1 %22, label %23, label %80, !prof !3

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #9
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #9
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #9
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #9
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #3

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #3

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EEEEN2v85LocalINS7_5ArrayEEERKT_NS8_INS7_6ObjectEEEPNS7_7IsolateE(%"class.WTF::Vector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #9
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.360* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #9
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !6
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !3

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #9
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #9
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #9
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #9
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %25
  call void @llvm.trap() #9
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #9
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #9
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #9
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 160
  br label %45

45:                                               ; preds = %41, %58
  %46 = phi i32 [ 0, %41 ], [ %59, %58 ]
  %47 = phi %"class.WTF::Vector.1"* [ %36, %41 ], [ %60, %58 ]
  %48 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector.1"* dereferenceable(16) %47, %"class.v8::Object"* %42, %"class.v8::Isolate"* %2) #9
  %49 = ptrtoint %"class.v8::Array"* %48 to i64
  %50 = icmp eq %"class.v8::Array"* %48, null
  %51 = select i1 %50, i64 %44, i64 %49
  %52 = inttoptr i64 %51 to %"class.v8::Value"*
  %53 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %46, %"class.v8::Value"* %52) #9
  %54 = trunc i16 %53 to i8
  %55 = icmp eq i8 %54, 0
  %56 = icmp ult i16 %53, 256
  %57 = or i1 %56, %55
  br i1 %57, label %62, label %58, !prof !4

58:                                               ; preds = %45
  %59 = add i32 %46, 1
  %60 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %47, i64 1
  %61 = icmp eq %"class.WTF::Vector.1"* %60, %39
  br i1 %61, label %62, label %45

62:                                               ; preds = %58, %45, %31
  %63 = phi i64 [ %33, %31 ], [ 0, %45 ], [ %33, %58 ]
  %64 = load i8, i8* %5, align 8, !range !6
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %68 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %67, align 8
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %70 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %69) #9
  %71 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %68, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %70, %"class.blink::RuntimeCallTimer"** %71, align 8
  store i8 0, i8* %5, align 8
  br label %72

72:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #9
  %73 = inttoptr i64 %63 to %"class.v8::Array"*
  ret %"class.v8::Array"* %73
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #3

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #3

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #3

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #3

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #3

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #3

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector.1"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #9
  %7 = bitcast %"class.absl::optional"* %5 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.360* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #9
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !6
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %26, label %12, !prof !3

12:                                               ; preds = %3
  %13 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #9
  %14 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 3
  %15 = bitcast %"class.base::TickClock"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %13, %"class.blink::RuntimeCallStats"** %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %21 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = bitcast %"class.base::TickClock"** %20 to i64*
  store i64 %16, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 2, i64 5
  %24 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 0
  %25 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %24, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallCounter"* %23, %"class.blink::RuntimeCallTimer"* %25) #9
  store %"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallTimer"** %24, align 8
  store i8 1, i8* %6, align 8
  br label %26

26:                                               ; preds = %3, %12
  %27 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #9
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %27) #9
  %28 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %26
  call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %26
  %33 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %29) #9
  %34 = ptrtoint %"class.v8::Array"* %33 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %27) #9
  %35 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #9
  %36 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %36, align 8
  %38 = load i32, i32* %28, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %80, label %42

42:                                               ; preds = %32
  %43 = bitcast %"class.WTF::StringView"* %4 to i8*
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  %47 = bitcast %"class.WTF::StringView"* %4 to i64*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %49 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %50 = add i64 %49, 160
  %51 = bitcast %"class.v8::Array"* %33 to %"class.v8::Object"*
  br label %52

52:                                               ; preds = %42, %76
  %53 = phi i32 [ 0, %42 ], [ %77, %76 ]
  %54 = phi %"class.WTF::String"* [ %37, %42 ], [ %78, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #9
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  store i8* null, i8** %45, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %59, i64* %47, align 8
  br label %64

60:                                               ; preds = %52
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %44, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 1
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %46, align 8
  br label %64

64:                                               ; preds = %58, %60
  %65 = phi i32 [ %62, %60 ], [ 0, %58 ]
  store i32 %65, i32* %48, align 8
  %66 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #9
  %67 = ptrtoint %"class.v8::String"* %66 to i64
  %68 = icmp eq %"class.v8::String"* %66, null
  %69 = select i1 %68, i64 %50, i64 %67
  %70 = inttoptr i64 %69 to %"class.v8::Value"*
  %71 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %51, %"class.v8::Context"* %35, i32 %53, %"class.v8::Value"* %70) #9
  %72 = trunc i16 %71 to i8
  %73 = icmp eq i8 %72, 0
  %74 = icmp ult i16 %71, 256
  %75 = or i1 %74, %73
  br i1 %75, label %80, label %76, !prof !4

76:                                               ; preds = %64
  %77 = add i32 %53, 1
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %40
  br i1 %79, label %80, label %52

80:                                               ; preds = %76, %64, %32
  %81 = phi i64 [ %34, %32 ], [ 0, %64 ], [ %34, %76 ]
  %82 = load i8, i8* %6, align 8, !range !6
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %85, align 8
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %88 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %87) #9
  %89 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %86, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %88, %"class.blink::RuntimeCallTimer"** %89, align 8
  store i8 0, i8* %6, align 8
  br label %90

90:                                               ; preds = %80, %84
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #9
  %91 = inttoptr i64 %81 to %"class.v8::Array"*
  ret %"class.v8::Array"* %91
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #3

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25
  ret %"struct.std::__1::pair"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 2002, i32 2000}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{i8 0, i8 2}
