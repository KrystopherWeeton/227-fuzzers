; ModuleID = '../../third_party/blink/renderer/core/inspector/locale_controller.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/locale_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::LocaleController>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::LocaleController>::InstanceStorage" = type { [16 x i8] }
%"class.blink::LocaleController" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.v8::Isolate" = type { i8 }
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.4, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.207, %"class.std::__1::unique_ptr.213", %"class.WTF::HashMap.238", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent.430", %"class.blink::CrossThreadPersistent.639", %class.scoped_refptr.641, %"class.blink::TaskHandle", %"class.WTF::HashSet.643", %"class.WTF::HashSet.647" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%class.scoped_refptr.4 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.7" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.10", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.51", %"class.crdtp::detail::PtrMaybe.71", %"class.crdtp::detail::PtrMaybe.81", %"class.crdtp::detail::PtrMaybe.91", %"class.crdtp::detail::PtrMaybe.112", %"class.crdtp::detail::PtrMaybe.122", %"class.crdtp::detail::PtrMaybe.132", %"class.crdtp::detail::PtrMaybe.142", %"class.crdtp::detail::PtrMaybe.171", %"class.crdtp::detail::PtrMaybe.181", %"class.crdtp::detail::PtrMaybe.191" }
%"class.crdtp::ProtocolObject.10" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.16", %"class.crdtp::detail::PtrMaybe.19", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.38" }
%"class.crdtp::ProtocolObject.16" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.23", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.23" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.38" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.42", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.42" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.51" = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.55", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.38", %"class.crdtp::detail::PtrMaybe.58" }
%"class.crdtp::ProtocolObject.55" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.58" = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.62", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.62" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.71" = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.75", %"class.std::__1::unique_ptr.39", %"class.crdtp::detail::PtrMaybe.58", %"class.crdtp::detail::PtrMaybe.58", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.75" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.81" = type { %"class.std::__1::unique_ptr.82" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.85", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.59" }
%"class.crdtp::ProtocolObject.85" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.91" = type { %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.95", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.58", %"class.crdtp::detail::PtrMaybe.98", %"class.crdtp::detail::ValueMaybe.108" }
%"class.crdtp::ProtocolObject.95" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.98" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.102", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.102" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.108" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.112" = type { %"class.std::__1::unique_ptr.113" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.116", %"class.std::__1::unique_ptr.99", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.116" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.122" = type { %"class.std::__1::unique_ptr.123" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.126", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.108", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.126" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.132" = type { %"class.std::__1::unique_ptr.133" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.136", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.136" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.142" = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.146", %"class.std::__1::unique_ptr.149", i8, %"class.std::__1::unique_ptr.39", %"class.crdtp::detail::PtrMaybe.98", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.158" }
%"class.crdtp::ProtocolObject.146" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.152", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.152" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.158" = type { %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.162", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.162" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.171" = type { %"class.std::__1::unique_ptr.172" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.175", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.58", %"class.crdtp::detail::PtrMaybe.38", %"class.crdtp::detail::ValueMaybe.108", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.175" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.181" = type { %"class.std::__1::unique_ptr.182" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.185", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.185" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.191" = type { %"class.std::__1::unique_ptr.192" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.195", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.98" }
%"class.crdtp::ProtocolObject.195" = type { %"class.crdtp::Serializable" }
%"class.blink::WorkerReportingProxy" = type opaque
%class.scoped_refptr.207 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.208" }
%"struct.std::__1::atomic.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__cxx_atomic_impl.211" }
%"struct.std::__1::__cxx_atomic_impl.211" = type { %"struct.std::__1::__cxx_atomic_base_impl.212" }
%"struct.std::__1::__cxx_atomic_base_impl.212" = type { i32 }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.225, %class.scoped_refptr.225, %class.scoped_refptr.225, %"class.std::__1::map", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.234" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.218 }
%class.scoped_refptr.218 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.219", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.219" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.220" }
%"struct.std::__1::atomic.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__cxx_atomic_impl.223" }
%"struct.std::__1::__cxx_atomic_impl.223" = type { %"struct.std::__1::__cxx_atomic_base_impl.224" }
%"struct.std::__1::__cxx_atomic_base_impl.224" = type { i8 }
%class.scoped_refptr.225 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.226", %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { i64 }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.234" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.238" = type { %"class.WTF::HashTable.239" }
%"class.WTF::HashTable.239" = type <{ %"struct.WTF::KeyValuePair.242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.242" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.243" }
%"struct.std::__1::atomic.243" = type { %"struct.std::__1::__atomic_base.244" }
%"struct.std::__1::__atomic_base.244" = type { %"struct.std::__1::__cxx_atomic_impl.245" }
%"struct.std::__1::__cxx_atomic_impl.245" = type { %"struct.std::__1::__cxx_atomic_base_impl.246" }
%"struct.std::__1::__cxx_atomic_base_impl.246" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.247", i32, [4 x i8], %"class.std::__1::unique_ptr.384", %"class.std::__1::unique_ptr.384", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.390", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.395", %"class.std::__1::unique_ptr.401", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.413", %"class.std::__1::unique_ptr.419", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.426", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.340", %"class.std::__1::unique_ptr.365", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.283" = type { %"struct.std::__1::__atomic_base.284" }
%"struct.std::__1::__atomic_base.284" = type { %"struct.std::__1::__atomic_base.285" }
%"struct.std::__1::__atomic_base.285" = type { %"struct.std::__1::__cxx_atomic_impl.286" }
%"struct.std::__1::__cxx_atomic_impl.286" = type { %"struct.std::__1::__cxx_atomic_base_impl.287" }
%"struct.std::__1::__cxx_atomic_base_impl.287" = type { i64 }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::Worklist.294"* }
%"class.blink::Worklist.294" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::Worklist.301"* }
%"class.blink::Worklist.301" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::Worklist.308"* }
%"class.blink::Worklist.308" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::Worklist.315"* }
%"class.blink::Worklist.315" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::Worklist.322"* }
%"class.blink::Worklist.322" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::Worklist.329"* }
%"class.blink::Worklist.329" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::Worklist.336"* }
%"class.blink::Worklist.336" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.343", %"class.std::__1::__compressed_pair.351", %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.358", [4 x i8] }>
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345", %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { float }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.368", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.377" }
%"class.WTF::VectorBuffer.377" = type { %"class.WTF::VectorBufferBase.378" }
%"class.WTF::VectorBufferBase.378" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.390" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394" }
%"class.WTF::VectorBufferBase.394" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.407" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.294"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.301"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.308"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.315"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.322"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.988", i64 }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.990" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.425 }
%class.scoped_refptr.425 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.426" = type { %"struct.std::__1::__atomic_base.427" }
%"struct.std::__1::__atomic_base.427" = type { %"struct.std::__1::__cxx_atomic_impl.428" }
%"struct.std::__1::__cxx_atomic_impl.428" = type { %"struct.std::__1::__cxx_atomic_base_impl.429" }
%"struct.std::__1::__cxx_atomic_base_impl.429" = type { i8 }
%"class.blink::CrossThreadPersistent.430" = type { %"class.blink::PersistentBase.431" }
%"class.blink::PersistentBase.431" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent.595", %"class.std::__1::unique_ptr.612", %"class.blink::Member.618", %"class.blink::HeapHashSet.620", %class.scoped_refptr.627, %"class.blink::Member.629", %"class.blink::Member.631", i32, %"class.WTF::Vector.547", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.635" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.443" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.436" }
%"class.WTF::Vector.436" = type { %"class.WTF::VectorBuffer.437" }
%"class.WTF::VectorBuffer.437" = type { %"class.WTF::VectorBufferBase.438", [32 x i8] }
%"class.WTF::VectorBufferBase.438" = type { %"struct.std::__1::pair.439"*, i32, i32 }
%"struct.std::__1::pair.439" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.440"* }
%"class.blink::HeapVector.440" = type opaque
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.WTF::Vector.446"* }
%"class.WTF::Vector.446" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.514", i32, i8, [3 x i8], %"class.blink::HeapVector.516", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.524", %"class.blink::Member.526", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.535", %"class.blink::Member.541", %"class.blink::Member.543", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.452" }
%"class.WTF::HashMap.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"struct.WTF::KeyValuePair.455"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.455" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.460" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.458" }
%"class.WTF::HashTable.458" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.460" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.461" }
%"class.blink::HeapHashMap.461" = type { %"class.WTF::HashMap.464" }
%"class.WTF::HashMap.464" = type { %"class.WTF::HashTable.465" }
%"class.WTF::HashTable.465" = type <{ %"struct.WTF::KeyValuePair.467"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.467" = type { i8*, %"class.blink::Member.468" }
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.470" }
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.472, %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.502", %"class.blink::Member.508", i32, [4 x i8], %"class.WTF::HashSet.510", i32, i32 }
%class.scoped_refptr.472 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.474 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.473 }
%union.anon.473 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.474 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.478", %"class.std::__1::map.489", %"class.std::__1::map.498"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.478" = type { %"class.std::__1::__tree.479" }
%"class.std::__1::__tree.479" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.480", %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::map.489" = type { %"class.std::__1::__tree.490" }
%"class.std::__1::__tree.490" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.491", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::map.498" = type opaque
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.514", i32, i8, [3 x i8], %"class.blink::HeapVector.516", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.524", %"class.blink::Member.526", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.535", %"class.blink::Member.541", %"class.blink::Member.543", i8, [7 x i8] }>
%"class.WTF::HashSet.510" = type { %"class.WTF::HashTable.511" }
%"class.WTF::HashTable.511" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.516" = type { %"class.WTF::Vector.519" }
%"class.WTF::Vector.519" = type { %"class.WTF::VectorBuffer.520" }
%"class.WTF::VectorBuffer.520" = type { %"class.WTF::VectorBufferBase.521" }
%"class.WTF::VectorBufferBase.521" = type { %"class.blink::Member.522"*, i32, i32 }
%"class.blink::Member.522" = type opaque
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.528", i32, i32 }
%"class.blink::HeapHashMap.528" = type { %"class.WTF::HashMap.531" }
%"class.WTF::HashMap.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ %"struct.WTF::KeyValuePair.534"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.534" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.526", i8, [7 x i8], %"class.WTF::Vector.547", %"class.blink::HeapVector.587", i8, [7 x i8], %"class.WTF::HashSet.510", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.587" = type { %"class.WTF::Vector.590" }
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.592" }
%"class.WTF::VectorBufferBase.592" = type { %"class.blink::Member.593"*, i32, i32 }
%"class.blink::Member.593" = type opaque
%"class.blink::CrossThreadPersistent.595" = type { %"class.blink::PersistentBase.596" }
%"class.blink::PersistentBase.596" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.599" }
%"class.blink::Supplementable.599" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.600" }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type { i8*, %"class.blink::Member.607" }
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::Supplement.609"* }
%"class.blink::Supplement.609" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.610" }
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::WorkerClients"* }
%"class.std::__1::unique_ptr.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::Member.658", %class.scoped_refptr.207, %class.scoped_refptr.207, %"class.blink::Member.660", %"class.blink::Member.662", %"class.blink::Member.668", %"class.blink::Member.672", %"class.blink::Member.724", %"class.blink::HeapHashMap.726", %"class.blink::HeapHashSet.733", %"class.blink::HeapHashSet.733", %"class.blink::HeapHashMap.938", %"class.blink::HeapVector.945", %"class.blink::Member.953", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.956", %"class.WTF::Vector.963", %"class.blink::HeapHashSet.969", %"class.blink::HeapHashSet.969", %"class.std::__1::unique_ptr.975", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.984", i8, i8, %"class.base::WeakPtrFactory.986" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.666" }
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.676", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.678", %"class.WTF::HashSet.683", i8, [3 x i8], i32, %"class.blink::HeapHashMap.687", %"class.std::__1::map.694", %"class.std::__1::map.705", %"class.std::__1::unique_ptr.714", %"class.blink::Member.662", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.721", %"class.mojo::InlinedStructPtr.723", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.678" = type { %"class.WTF::HashTable.679" }
%"class.WTF::HashTable.679" = type <{ %"struct.WTF::KeyValuePair.682"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.682" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.683" = type { %"class.WTF::HashTable.684" }
%"class.WTF::HashTable.684" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.std::__1::map.694" = type { %"class.std::__1::__tree.695" }
%"class.std::__1::__tree.695" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.696", %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::map.705" = type { %"class.std::__1::__tree.706" }
%"class.std::__1::__tree.706" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.707", %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.723" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.726" = type { %"class.WTF::HashMap.729" }
%"class.WTF::HashMap.729" = type { %"class.WTF::HashTable.730" }
%"class.WTF::HashTable.730" = type <{ %"struct.WTF::KeyValuePair.732"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.732" = type opaque
%"class.blink::HeapHashSet.733" = type { %"class.WTF::HashSet.736" }
%"class.WTF::HashSet.736" = type { %"class.WTF::HashTable.737" }
%"class.WTF::HashTable.737" = type <{ %"class.blink::WeakMember.739"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.743", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.769", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.882", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.913", %"class.blink::ResourceResponse", %class.scoped_refptr.915, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.743" = type { %"class.absl::optional_internal::optional_data.744" }
%"class.absl::optional_internal::optional_data.744" = type { %"class.absl::optional_internal::optional_data_base.745" }
%"class.absl::optional_internal::optional_data_base.745" = type { %"class.absl::optional_internal::optional_data_dtor_base.746" }
%"class.absl::optional_internal::optional_data_dtor_base.746" = type { i8, %union.anon.747 }
%union.anon.747 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.754", i8, %"class.absl::optional.759", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.748" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.blink::KURL"* }
%"class.absl::optional.754" = type { %"class.absl::optional_internal::optional_data.755" }
%"class.absl::optional_internal::optional_data.755" = type { %"class.absl::optional_internal::optional_data_base.756" }
%"class.absl::optional_internal::optional_data_base.756" = type { %"class.absl::optional_internal::optional_data_dtor_base.757" }
%"class.absl::optional_internal::optional_data_dtor_base.757" = type { i8, [7 x i8], %union.anon.758 }
%union.anon.758 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.759" = type { %"class.absl::optional_internal::optional_data.760" }
%"class.absl::optional_internal::optional_data.760" = type { %"class.absl::optional_internal::optional_data_base.761" }
%"class.absl::optional_internal::optional_data_base.761" = type { %"class.absl::optional_internal::optional_data_dtor_base.762" }
%"class.absl::optional_internal::optional_data_dtor_base.762" = type { i8, %union.anon.763 }
%union.anon.763 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.764", %"class.WTF::Vector.570" }
%"class.WTF::Vector.764" = type { %"class.WTF::VectorBuffer.765" }
%"class.WTF::VectorBuffer.765" = type { %"class.WTF::VectorBufferBase.766" }
%"class.WTF::VectorBufferBase.766" = type { i32*, i32, i32 }
%"class.WTF::Vector.570" = type { %"class.WTF::VectorBuffer.571" }
%"class.WTF::VectorBuffer.571" = type { %"class.WTF::VectorBufferBase.572" }
%"class.WTF::VectorBufferBase.572" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.769" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase.771" }
%"class.WTF::VectorBufferBase.771" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.875" }
%"class.WTF::HashMap.875" = type { %"class.WTF::HashTable.876" }
%"class.WTF::HashTable.876" = type <{ %"struct.WTF::KeyValuePair.878"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.878" = type <{ %"class.blink::WeakMember.879", i32, [4 x i8] }>
%"class.blink::WeakMember.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.987", [7 x i8], %"class.blink::Member.951", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.987" = type { i8 }
%"class.blink::Member.951" = type { %"class.blink::MemberBase.740" }
%"class.blink::HeapHashSet.882" = type { %"class.WTF::HashSet.885" }
%"class.WTF::HashSet.885" = type { %"class.WTF::HashTable.886" }
%"class.WTF::HashTable.886" = type <{ %"class.blink::WeakMember.888"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.888" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.889", i8, i8, %class.scoped_refptr.894, %class.scoped_refptr.909, %class.scoped_refptr.911 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.889" = type { %"class.WTF::HashTable.890" }
%"class.WTF::HashTable.890" = type <{ %"struct.std::__1::pair.893"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.893" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.894 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.895", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.895" = type { %"class.base::RefCounted.896" }
%"class.base::RefCounted.896" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.897" }
%"class.blink::PersistentBase.897" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.900" }
%"class.blink::HeapHashMap.900" = type { %"class.WTF::HashMap.903" }
%"class.WTF::HashMap.903" = type { %"class.WTF::HashTable.904" }
%"class.WTF::HashTable.904" = type <{ %"struct.WTF::KeyValuePair.906"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.906" = type { %"class.blink::WeakMember.907", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.909 = type { %"class.base::RefCountedData.910"* }
%"class.base::RefCountedData.910" = type opaque
%class.scoped_refptr.911 = type { %"class.base::RefCountedData.912"* }
%"class.base::RefCountedData.912" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.838" }
%"class.base::time_internal::TimeBase.838" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.474, %class.scoped_refptr.474, %class.scoped_refptr.474, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.777, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.794", %"class.absl::optional.799", %"class.absl::optional.809", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.819", %"class.absl::optional.809", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.809", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.819", %"class.absl::optional.824", i8, %class.scoped_refptr.829 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.772" }
%"class.WTF::HashMap.772" = type { %"class.WTF::HashTable.773" }
%"class.WTF::HashTable.773" = type <{ %"struct.WTF::KeyValuePair.776"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.776" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.777 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.778", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.792, i8, %"class.url::Origin" }
%"class.base::RefCounted.778" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.779" }
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.std::__1::unique_ptr.781"*, %"class.std::__1::unique_ptr.781"*, %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.std::__1::unique_ptr.781"* }
%class.scoped_refptr.792 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.793", [4 x i8] }>
%"class.base::RefCountedThreadSafe.793" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.799" = type { %"class.absl::optional_internal::optional_data.800" }
%"class.absl::optional_internal::optional_data.800" = type { %"class.absl::optional_internal::optional_data_base.801" }
%"class.absl::optional_internal::optional_data_base.801" = type { %"class.absl::optional_internal::optional_data_dtor_base.802" }
%"class.absl::optional_internal::optional_data_dtor_base.802" = type { i8, %union.anon.803 }
%union.anon.803 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.804", %"class.WTF::Vector.570", %"class.WTF::String" }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %class.scoped_refptr.474*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.814", %"class.absl::optional.814" }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.base::TimeDelta" }
%"class.absl::optional.809" = type { %"class.absl::optional_internal::optional_data.810" }
%"class.absl::optional_internal::optional_data.810" = type { %"class.absl::optional_internal::optional_data_base.811" }
%"class.absl::optional_internal::optional_data_base.811" = type { %"class.absl::optional_internal::optional_data_dtor_base.812" }
%"class.absl::optional_internal::optional_data_dtor_base.812" = type { i8, %union.anon.813 }
%union.anon.813 = type { %"class.WTF::String" }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.824" = type { %"class.absl::optional_internal::optional_data.825" }
%"class.absl::optional_internal::optional_data.825" = type { %"class.absl::optional_internal::optional_data_base.826" }
%"class.absl::optional_internal::optional_data_base.826" = type { %"class.absl::optional_internal::optional_data_dtor_base.827" }
%"class.absl::optional_internal::optional_data_dtor_base.827" = type { i8, %union.anon.828 }
%union.anon.828 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.829 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.830", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.830" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.831" }
%"class.std::__1::vector.831" = type { %"class.std::__1::__vector_base.832" }
%"class.std::__1::__vector_base.832" = type { i32*, i32*, %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { i32* }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.839", %class.scoped_refptr.854, %class.scoped_refptr.855, %"struct.blink::CacheControlHeader", %"class.absl::optional.814", %"class.absl::optional.856", %"class.absl::optional.856", %"class.absl::optional.856", i64, %"class.blink::KURL", %"class.WTF::Vector.861", %"class.WTF::String", %"class.WTF::Vector.570", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.819", %"class.WTF::Vector.570", %"class.blink::KURL", %"class.absl::optional.866" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.839" = type { %"class.absl::optional_internal::optional_data.840" }
%"class.absl::optional_internal::optional_data.840" = type { %"class.absl::optional_internal::optional_data_base.841" }
%"class.absl::optional_internal::optional_data_base.841" = type { %"class.absl::optional_internal::optional_data_dtor_base.842" }
%"class.absl::optional_internal::optional_data_dtor_base.842" = type { i8, %union.anon.843 }
%union.anon.843 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.570", %"class.WTF::String", i64, i64, %"class.WTF::Vector.844", %"class.WTF::Vector.849" }
%"class.WTF::Vector.844" = type { %"class.WTF::VectorBuffer.845" }
%"class.WTF::VectorBuffer.845" = type { %"class.WTF::VectorBufferBase.846" }
%"class.WTF::VectorBufferBase.846" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.849" = type { %"class.WTF::VectorBuffer.850" }
%"class.WTF::VectorBuffer.850" = type { %"class.WTF::VectorBufferBase.851" }
%"class.WTF::VectorBufferBase.851" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.854 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.855 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.856" = type { %"class.absl::optional_internal::optional_data.857" }
%"class.absl::optional_internal::optional_data.857" = type { %"class.absl::optional_internal::optional_data_base.858" }
%"class.absl::optional_internal::optional_data_base.858" = type { %"class.absl::optional_internal::optional_data_dtor_base.859" }
%"class.absl::optional_internal::optional_data_dtor_base.859" = type { i8, %union.anon.860 }
%union.anon.860 = type { %"class.base::Time" }
%"class.WTF::Vector.861" = type { %"class.WTF::VectorBuffer.862" }
%"class.WTF::VectorBuffer.862" = type { %"class.WTF::VectorBufferBase.863" }
%"class.WTF::VectorBufferBase.863" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.866" = type { %"class.absl::optional_internal::optional_data.867" }
%"class.absl::optional_internal::optional_data.867" = type { %"class.absl::optional_internal::optional_data_base.868" }
%"class.absl::optional_internal::optional_data_base.868" = type { %"class.absl::optional_internal::optional_data_dtor_base.869" }
%"class.absl::optional_internal::optional_data_dtor_base.869" = type { i8, %union.anon.870 }
%union.anon.870 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.915 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.916", i64, %"class.WTF::Vector.918", %"class.WTF::Vector.923" }
%"class.WTF::RefCounted.916" = type { %"class.base::RefCounted.917" }
%"class.base::RefCounted.917" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.918" = type { %"class.WTF::VectorBuffer.919" }
%"class.WTF::VectorBuffer.919" = type { %"class.WTF::VectorBufferBase.920" }
%"class.WTF::VectorBufferBase.920" = type { i8*, i32, i32 }
%"class.WTF::Vector.923" = type { %"class.WTF::VectorBuffer.924" }
%"class.WTF::VectorBuffer.924" = type { %"class.WTF::VectorBufferBase.925" }
%"class.WTF::VectorBufferBase.925" = type { %"class.std::__1::unique_ptr.926"*, i32, i32 }
%"class.std::__1::unique_ptr.926" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.929" }
%"class.std::__1::__tree.929" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.930", %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.blink::HeapHashMap.938" = type { %"class.WTF::HashMap.941" }
%"class.WTF::HashMap.941" = type { %"class.WTF::HashTable.942" }
%"class.WTF::HashTable.942" = type <{ %"struct.WTF::KeyValuePair.944"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.944" = type opaque
%"class.blink::HeapVector.945" = type { %"class.WTF::Vector.948" }
%"class.WTF::Vector.948" = type { %"class.WTF::VectorBuffer.949" }
%"class.WTF::VectorBuffer.949" = type { %"class.WTF::VectorBufferBase.950" }
%"class.WTF::VectorBufferBase.950" = type { %"class.blink::Member.951"*, i32, i32 }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.626", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.207, %"class.base::WeakPtrFactory.955" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.955" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.626" = type { %"class.blink::MemberBase.619" }
%"class.blink::HeapHashMap.956" = type { %"class.WTF::HashMap.959" }
%"class.WTF::HashMap.959" = type { %"class.WTF::HashTable.960" }
%"class.WTF::HashTable.960" = type <{ %"struct.WTF::KeyValuePair.962"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.962" = type opaque
%"class.WTF::Vector.963" = type { %"class.WTF::VectorBuffer.964" }
%"class.WTF::VectorBuffer.964" = type { %"class.WTF::VectorBufferBase.965" }
%"class.WTF::VectorBufferBase.965" = type { %class.scoped_refptr.966*, i32, i32 }
%class.scoped_refptr.966 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.969" = type { %"class.WTF::HashSet.972" }
%"class.WTF::HashSet.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"class.blink::Member.913"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.WTF::HashSet.978"* }
%"class.WTF::HashSet.978" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.717 }
%class.scoped_refptr.717 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.982" }
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.986" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.620" = type { %"class.WTF::HashSet.623" }
%"class.WTF::HashSet.623" = type { %"class.WTF::HashTable.624" }
%"class.WTF::HashTable.624" = type <{ %"class.blink::WeakMember.626"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.627 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.628", [4 x i8] }>
%"class.base::RefCounted.628" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.WTF::Vector.547" = type { %"class.WTF::VectorBuffer.548" }
%"class.WTF::VectorBuffer.548" = type { %"class.WTF::VectorBufferBase.549" }
%"class.WTF::VectorBufferBase.549" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.550" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.553", %"class.WTF::HashMap.560", %"class.WTF::HashMap.565", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.570", i32, %"class.mojo::StructPtr.575", %"class.WTF::Vector.570" }
%"class.mojo::StructPtr.553" = type { %"class.std::__1::unique_ptr.554" }
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.564"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.564" = type opaque
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.569"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.569" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.575" = type { %"class.std::__1::unique_ptr.576" }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.570", i8, i8, [6 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.633", i32, [4 x i8] }>
%"class.std::__1::bitset.633" = type { %"class.std::__1::__bitset.634" }
%"class.std::__1::__bitset.634" = type { [25 x i64] }
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistent.639" = type { %"class.blink::PersistentBase.640" }
%"class.blink::PersistentBase.640" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.641 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.642 }
%class.scoped_refptr.642 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::HashSet.643" = type { %"class.WTF::HashTable.644" }
%"class.WTF::HashTable.644" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.647" = type { %"class.WTF::HashTable.648" }
%"class.WTF::HashTable.648" = type <{ %"class.std::__1::unique_ptr.651"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.651" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.995 }
%class.scoped_refptr.995 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.996", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.996" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>

$_ZN5blink12WorkerThread22CallOnAllWorkerThreadsIPFvPS0_EJEEEjT_NS_8TaskTypeEDpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [20 x i8] c"Invalid locale name\00", align 1
@_ZZN5blink16LocaleController8instanceEvE10s_instance = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink16LocaleController8instanceEvE10s_instance = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"CallOnAllWorkerThreads\00", align 1
@.str.2 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/core/workers/worker_thread.h\00", align 1

@_ZN5blink16LocaleControllerC1Ev = hidden unnamed_addr alias void (%"class.blink::LocaleController"*), void (%"class.blink::LocaleController"*)* @_ZN5blink16LocaleControllerC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16LocaleControllerC2Ev(%"class.blink::LocaleController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LocaleController", %"class.blink::LocaleController"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #11
  %4 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %3, i64 0, i32 7
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i64 @strlen(i8* nonnull %5) #12
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi i64 [ %8, %7 ], [ 0, %1 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %2, i8* %5, i64 %10) #11
  %11 = getelementptr inbounds %"class.blink::LocaleController", %"class.blink::LocaleController"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  ret void
}

declare dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16LocaleController17SetLocaleOverrideERKN3WTF6StringE(%"class.blink::LocaleController"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.icu_69::Locale", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.blink::LocaleController", %"class.blink::LocaleController"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* %10) #11
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  br label %87

14:                                               ; preds = %2
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %14, %17
  %22 = getelementptr inbounds %"class.blink::LocaleController", %"class.blink::LocaleController"* %0, i64 0, i32 0
  tail call fastcc void @_ZN5blink12_GLOBAL__N_112UpdateLocaleERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %22)
  br label %47

23:                                               ; preds = %17
  %24 = bitcast %"class.icu_69::Locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %24) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 224, i1 false)
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %1) #11
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = select i1 %29, i8* %31, i8* %25
  call void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"* nonnull %4, i8* %32, i8* null, i8* null, i8* null) #11
  %33 = load i8, i8* %27, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %23
  %36 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %23, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  %38 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %4, i64 0, i32 1, i64 0
  %39 = icmp eq i8* %38, null
  %40 = load i8, i8* %38, align 8
  %41 = icmp eq i8 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19) #11
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %24) #11
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  br label %87

46:                                               ; preds = %37
  call fastcc void @_ZN5blink12_GLOBAL__N_112UpdateLocaleERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1)
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %24) #11
  br label %47

47:                                               ; preds = %46, %21
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #11
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %55
  call void @llvm.trap() #11
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %47
  %68 = ptrtoint %"class.WTF::StringImpl"* %48 to i64
  %69 = bitcast %"class.WTF::String"* %6 to i64*
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %68, i64* %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #11
  br label %85

85:                                               ; preds = %67, %81, %84
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  br label %87

87:                                               ; preds = %43, %85, %12
  %88 = phi %"class.WTF::StringImpl"* [ %45, %43 ], [ null, %85 ], [ null, %12 ]
  ret %"class.WTF::StringImpl"* %88
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_112UpdateLocaleERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %2 = alloca %"class.blink::WebString", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.blink::WebString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %5, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %2, %"class.WTF::String"* dereferenceable(8) %0) #11
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @_ZNK5blink9WebString5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.blink::WebString"* nonnull %2) #11
  call void @_ZN4base4i18n19SetICUDefaultLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  %15 = call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #11
  call void @_ZN2v87Isolate37LocaleConfigurationChangeNotificationEv(%"class.v8::Isolate"* %15) #11
  call void @_ZN2v87Isolate39DateTimeConfigurationChangeNotificationENS0_17TimeZoneDetectionE(%"class.v8::Isolate"* %15, i32 0) #11
  %16 = call i32 @_ZN5blink12WorkerThread22CallOnAllWorkerThreadsIPFvPS0_EJEEEjT_NS_8TaskTypeEDpOT0_(void (%"class.blink::WorkerThread"*)* nonnull @_ZN5blink12_GLOBAL__N_132NotifyLocaleChangeOnWorkerThreadEPNS_12WorkerThreadE, i8 zeroext 23)
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"*, i8*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16LocaleController19has_locale_overrideEv(%"class.blink::LocaleController"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LocaleController", %"class.blink::LocaleController"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::LocaleController"* @_ZN5blink16LocaleController8instanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink16LocaleController8instanceEvE10s_instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %15, !prof !3

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink16LocaleController8instanceEvE10s_instance) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %3
  %7 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #11
  %8 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %7, i64 0, i32 7
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = tail call i64 @strlen(i8* nonnull %9) #12
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %6 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16LocaleController8instanceEvE10s_instance to %"class.WTF::String"*), i8* %9, i64 %14) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink16LocaleController8instanceEvE10s_instance, i64 0, i32 0, i32 0, i64 8) to %"class.WTF::StringImpl"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink16LocaleController8instanceEvE10s_instance) #11
  br label %15

15:                                               ; preds = %3, %13, %0
  ret %"class.blink::LocaleController"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16LocaleController8instanceEvE10s_instance to %"class.blink::LocaleController"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN4base4i18n19SetICUDefaultLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK5blink9WebString5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.blink::WebString"*) local_unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink12WorkerThread22CallOnAllWorkerThreadsIPFvPS0_EJEEEjT_NS_8TaskTypeEDpOT0_(void (%"class.blink::WorkerThread"*)*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = ptrtoint void (%"class.blink::WorkerThread"*)* %0 to i64
  %10 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink12WorkerThread14ThreadSetMutexEv() #11
  %11 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %10, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %11) #11
  %12 = tail call dereferenceable(24) %"class.WTF::HashSet.643"* @_ZN5blink12WorkerThread13WorkerThreadsEv() #11
  %13 = getelementptr inbounds %"class.WTF::HashSet.643", %"class.WTF::HashSet.643"* %12, i64 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashSet.643", %"class.WTF::HashSet.643"* %12, i64 0, i32 0, i32 0
  %17 = load %"class.blink::WorkerThread"**, %"class.blink::WorkerThread"*** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashSet.643", %"class.WTF::HashSet.643"* %12, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %17, i64 %20
  br i1 %15, label %51, label %22

22:                                               ; preds = %2
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %28
  %25 = phi %"class.blink::WorkerThread"** [ %29, %28 ], [ %17, %22 ]
  %26 = bitcast %"class.blink::WorkerThread"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %31 [
    i64 -1, label %28
    i64 0, label %28
  ]

28:                                               ; preds = %24, %24
  %29 = getelementptr inbounds %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %25, i64 1
  %30 = icmp eq %"class.blink::WorkerThread"** %29, %21
  br i1 %30, label %51, label %24

31:                                               ; preds = %24, %22
  %32 = phi %"class.blink::WorkerThread"** [ %17, %22 ], [ %25, %24 ]
  %33 = icmp eq %"class.blink::WorkerThread"** %32, %21
  br i1 %33, label %51, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.base::Location"* %7 to i8*
  %36 = bitcast %"class.base::OnceCallback"* %4 to i8*
  %37 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i64*
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %43 = bitcast %"class.base::OnceCallback"* %5 to i8*
  %44 = bitcast %"class.WTF::CrossThreadOnceFunction"* %6 to i8*
  %45 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  br label %53

51:                                               ; preds = %28, %81, %92, %89, %2, %31
  %52 = phi i32 [ 0, %31 ], [ 0, %2 ], [ %82, %89 ], [ %82, %92 ], [ %82, %81 ], [ 0, %28 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %11) #11
  ret i32 %52

53:                                               ; preds = %34, %92
  %54 = phi i32 [ 0, %34 ], [ %82, %92 ]
  %55 = phi %"class.blink::WorkerThread"** [ %32, %34 ], [ %86, %92 ]
  %56 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %55, align 8
  %57 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"* %56, i8 zeroext %1) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2, i64 0, i64 0), i32 213) #11
  %58 = ptrtoint %"class.blink::WorkerThread"* %56 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %59 = call i8* @_Znwm(i64 48) #13, !noalias !4
  %60 = bitcast i8* %59 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %60, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !4
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to i64*
  store i64 %9, i64* %62, align 8, !noalias !4
  %63 = getelementptr inbounds i8, i8* %59, i64 40
  %64 = bitcast i8* %63 to i64*
  store i64 %58, i64* %64, align 8, !noalias !4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11, !noalias !11
  %65 = ptrtoint i8* %59 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8, !noalias !12
  store i64 %65, i64* %40, align 8, !alias.scope !12
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8, !noalias !12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #11, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11, !noalias !11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #11, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %66 = bitcast %"class.base::SingleThreadTaskRunner"* %57 to %"class.base::TaskRunner"*
  %67 = load i64, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %45, align 8
  store i64 %67, i64* %47, align 8, !alias.scope !15
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8, !noalias !15
  %68 = bitcast %"class.base::SingleThreadTaskRunner"* %57 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %69 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %68, align 8
  %70 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %69, align 8
  %71 = call zeroext i1 %70(%"class.base::TaskRunner"* %66, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %5, i64 0) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #11
  %72 = icmp eq %"class.base::SingleThreadTaskRunner"* %57, null
  br i1 %72, label %81, label %73

73:                                               ; preds = %53
  %74 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %57, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %74, i64 -2
  %80 = bitcast %"class.base::RefCountedThreadSafe"* %79 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %80) #11
  br label %81

81:                                               ; preds = %53, %73, %78
  %82 = add i32 %54, 1
  %83 = getelementptr inbounds %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %55, i64 1
  %84 = icmp eq %"class.blink::WorkerThread"** %83, %21
  br i1 %84, label %51, label %85

85:                                               ; preds = %81, %89
  %86 = phi %"class.blink::WorkerThread"** [ %90, %89 ], [ %83, %81 ]
  %87 = bitcast %"class.blink::WorkerThread"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  switch i64 %88, label %92 [
    i64 -1, label %89
    i64 0, label %89
  ]

89:                                               ; preds = %85, %85
  %90 = getelementptr inbounds %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %86, i64 1
  %91 = icmp eq %"class.blink::WorkerThread"** %90, %21
  br i1 %91, label %51, label %85

92:                                               ; preds = %85
  %93 = icmp eq %"class.blink::WorkerThread"** %86, %21
  br i1 %93, label %51, label %53
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_132NotifyLocaleChangeOnWorkerThreadEPNS_12WorkerThreadE(%"class.blink::WorkerThread"*) #0 {
  %2 = tail call %"class.blink::WorkerOrWorkletGlobalScope"* @_ZN5blink12WorkerThread11GlobalScopeEv(%"class.blink::WorkerThread"* %0) #11
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %2, i64 0, i32 1, i32 5
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  tail call void @_ZN2v87Isolate37LocaleConfigurationChangeNotificationEv(%"class.v8::Isolate"* %4) #11
  tail call void @_ZN2v87Isolate39DateTimeConfigurationChangeNotificationENS0_17TimeZoneDetectionE(%"class.v8::Isolate"* %4, i32 0) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

declare void @_ZN2v87Isolate37LocaleConfigurationChangeNotificationEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v87Isolate39DateTimeConfigurationChangeNotificationENS0_17TimeZoneDetectionE(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink12WorkerThread14ThreadSetMutexEv() local_unnamed_addr #1

declare dereferenceable(24) %"class.WTF::HashSet.643"* @_ZN5blink12WorkerThread13WorkerThreadsEv() local_unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.blink::WorkerThread"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.blink::WorkerThread"**
  %6 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %5, align 8
  %7 = load void (%"class.blink::WorkerThread"*)*, void (%"class.blink::WorkerThread"*)** %3, align 8
  tail call void %7(%"class.blink::WorkerThread"* %6) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare %"class.blink::WorkerOrWorkletGlobalScope"* @_ZN5blink12WorkerThread11GlobalScopeEv(%"class.blink::WorkerThread"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5, !7, !9}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackERPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackERPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIRPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIRPFvPN5blink12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!9 = distinct !{!9, !10, !"_ZN3WTF19CrossThreadBindOnceIRPFvPN5blink12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF19CrossThreadBindOnceIRPFvPN5blink12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_"}
!11 = !{!9}
!12 = !{!13, !9}
!13 = distinct !{!13, !14, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
