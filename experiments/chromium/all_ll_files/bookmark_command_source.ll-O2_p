; ModuleID = '../../chrome/browser/ui/commander/bookmark_command_source.cc'
source_filename = "../../chrome/browser/ui/commander/bookmark_command_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.commander::BookmarkCommandSource" = type { %"class.commander::CommandSource" }
%"class.commander::CommandSource" = type { i32 (...)** }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"*, %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.commander::CommandItem"* }
%"struct.commander::CommandItem" = type { i32 (...)**, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.absl::variant", double, %"class.std::__1::vector.261" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.257" }
%"union.absl::variant_internal::DestructibleUnionImpl.257" = type { %"struct.std::__1::pair.258" }
%"struct.std::__1::pair.258" = type { %"class.std::__1::basic_string", %"class.base::RepeatingCallback.259" }
%"class.base::RepeatingCallback.259" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.132 }
%class.scoped_refptr.132 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.133", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.133" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.263" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.gfx::Range"* }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.std::__1::unique_ptr.253"* }
%class.Browser = type { %class.TabStripModelObserver, %"class.content::WebContentsDelegate", %class.ChromeWebModalDialogManagerDelegate, %class.BookmarkTabHelperObserver, %"class.zoom::ZoomObserver", %"class.content::PageNavigator", %class.ThemeServiceObserver, %"class.translate::ContentTranslateDriver::TranslationObserver", %"class.ui::SelectFileDialog::Listener", %class.PrefChangeRegistrar, %"struct.Browser::CreateParams", i32, %class.Profile*, %"class.std::__1::unique_ptr.75", %class.BrowserWindow*, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::basic_string.66", i8, i8, %class.SessionID, %"class.std::__1::unique_ptr.138", %"class.std::__1::map.144", i32, %"class.gfx::Rect", i32, %"class.std::__1::basic_string.66", i8, i8, %"class.base::TimeTicks", %class.UnloadController, %"class.std::__1::unique_ptr.165", %class.scoped_refptr.171, %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", i32, %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", i8, %"class.std::__1::basic_string.66", %class.SigninViewController, %"class.std::__1::unique_ptr.238", %"class.base::OnceCallback", %"class.std::__1::unique_ptr.244", %"class.base::ElapsedTimer", %"class.base::WeakPtrFactory.250", %"class.base::WeakPtrFactory.250" }
%class.TabStripModelObserver = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.content::WebContentsDelegate" = type { i32 (...)**, %"class.std::__1::set.9" }
%"class.std::__1::set.9" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%class.ChromeWebModalDialogManagerDelegate = type { %"class.web_modal::WebContentsModalDialogManagerDelegate" }
%"class.web_modal::WebContentsModalDialogManagerDelegate" = type { i32 (...)** }
%class.BookmarkTabHelperObserver = type { i32 (...)** }
%"class.zoom::ZoomObserver" = type { i32 (...)** }
%"class.content::PageNavigator" = type { i32 (...)** }
%class.ThemeServiceObserver = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i8 }
%"class.translate::ContentTranslateDriver::TranslationObserver" = type { %"class.base::CheckedObserver" }
%"class.ui::SelectFileDialog::Listener" = type { i32 (...)** }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.25" }
%"class.std::__1::__tree.25" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%class.PrefService = type opaque
%"struct.Browser::CreateParams" = type <{ i32, [4 x i8], %class.Profile*, i8, [3 x i8], %"class.gfx::Rect", [4 x i8], %"class.std::__1::basic_string.66", i8, [3 x i8], i32, i8, i8, i8, i8, [4 x i8], %class.BrowserWindow*, %"class.std::__1::basic_string.66", i8, i8, [6 x i8], %"class.std::__1::basic_string.66", i8, [7 x i8] }>
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.48", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.60" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.34", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.34" = type { %"class.std::__1::__tree.35" }
%"class.std::__1::__tree.35" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.55" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.ScopedProfileKeepAlive* }
%class.ScopedProfileKeepAlive = type opaque
%class.BrowserWindow = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.TabStripModelDelegate* }
%class.TabStripModelDelegate = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.TabStripModel* }
%class.TabStripModel = type { %class.TabGroupController, %"class.std::__1::vector.90", %"class.std::__1::unique_ptr.98", %class.TabStripModelDelegate*, i8, [7 x i8], %"class.base::ObserverList.104", %class.Profile*, i8, %"class.std::__1::unique_ptr.115", %"class.ui::ListSelectionModel", i8, %class.TabSwitchEventLatencyRecorder, %"class.base::RepeatingTimer", %"class.base::TimeTicks", i64, i64, %"class.base::WeakPtrFactory.134" }
%class.TabGroupController = type { i32 (...)** }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"class.std::__1::unique_ptr.92"*, %"class.std::__1::unique_ptr.92"*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.TabStripModel::WebContentsData"* }
%"class.TabStripModel::WebContentsData" = type opaque
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::unique_ptr.92"* }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %class.TabGroupModel* }
%class.TabGroupModel = type opaque
%"class.base::ObserverList.104" = type <{ %"class.std::__1::vector.105", %"class.base::LinkedList.112", i64, i32, [4 x i8] }>
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.107" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.112" = type { %"class.base::LinkNode.113" }
%"class.base::LinkNode.113" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.TabStripModelOrderController* }
%class.TabStripModelOrderController = type { %class.TabStripModelObserver, %class.TabStripModel* }
%"class.ui::ListSelectionModel" = type { %"class.base::internal::flat_tree", i32, i32 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.121" }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { i32*, i32*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { i32* }
%class.TabSwitchEventLatencyRecorder = type { %"class.base::TimeTicks", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.128 }
%union.anon.128 = type { i32 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.129, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.131" }
%class.scoped_refptr.129 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.130" }>
%"class.base::RefCountedThreadSafe.130" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.131" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.134" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.SessionID = type { i32 }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %class.LocationBarModel* }
%class.LocationBarModel = type opaque
%"class.std::__1::map.144" = type { %"class.std::__1::__tree.145" }
%"class.std::__1::__tree.145" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.UnloadController = type { %"class.WebContentsCollection::Observer", %class.TabStripModelObserver, %class.Browser*, %class.WebContentsCollection, %"class.std::__1::set.9", %"class.std::__1::set.9", i8, %"class.base::RepeatingCallback.163", %"class.base::WeakPtrFactory.164" }
%"class.WebContentsCollection::Observer" = type { i32 (...)** }
%class.WebContentsCollection = type { %"class.WebContentsCollection::Observer"*, %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.155" }
%"class.base::internal::flat_tree.155" = type { %"class.std::__1::vector.156" }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.158" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::pair"* }
%"class.base::RepeatingCallback.163" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.164" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %class.FindBarController* }
%class.FindBarController = type opaque
%class.scoped_refptr.171 = type { %"class.ui::SelectFileDialog"* }
%"class.ui::SelectFileDialog" = type { %"class.ui::BaseShellDialog", %"class.base::RefCountedThreadSafe.172", %"class.ui::SelectFileDialog::Listener"*, %"class.std::__1::unique_ptr.173" }
%"class.ui::BaseShellDialog" = type { i32 (...)** }
%"class.base::RefCountedThreadSafe.172" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.ui::SelectFilePolicy"* }
%"class.ui::SelectFilePolicy" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %class.BrowserContentSettingBubbleModelDelegate* }
%class.BrowserContentSettingBubbleModelDelegate = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %class.BrowserLocationBarModelDelegate* }
%class.BrowserLocationBarModelDelegate = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %class.BrowserLiveTabContext* }
%class.BrowserLiveTabContext = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %class.BrowserSyncedWindowDelegate* }
%class.BrowserSyncedWindowDelegate = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %class.BrowserInstantController* }
%class.BrowserInstantController = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.web_app::AppBrowserController"* }
%"class.web_app::AppBrowserController" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %class.ExclusiveAccessManager* }
%class.ExclusiveAccessManager = type opaque
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.extensions::BrowserExtensionWindowController"* }
%"class.extensions::BrowserExtensionWindowController" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.chrome::BrowserCommandController"* }
%"class.chrome::BrowserCommandController" = type opaque
%"class.std::__1::basic_string.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.69 }
%union.anon.69 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SigninViewController = type { %"class.SigninViewControllerDelegate::Observer", %class.Browser*, %class.SigninViewControllerDelegate*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.237" }
%"class.SigninViewControllerDelegate::Observer" = type { %"class.base::CheckedObserver" }
%class.SigninViewControllerDelegate = type { i32 (...)**, %"class.base::ObserverList.233" }
%"class.base::ObserverList.233" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.234", i64, i32, [4 x i8] }>
%"class.base::LinkedList.234" = type { %"class.base::LinkNode.235" }
%"class.base::LinkNode.235" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ScopedObservation" = type { %"class.SigninViewControllerDelegate::Observer"*, %class.SigninViewControllerDelegate* }
%"class.base::WeakPtrFactory.237" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %class.ScopedKeepAlive* }
%class.ScopedKeepAlive = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.extensions::ExtensionBrowserWindowHelper"* }
%"class.extensions::ExtensionBrowserWindowHelper" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::WeakPtrFactory.250" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409" = type { %"class.absl::variant"*, %"struct.std::__1::pair.258"* }
%"class.commander::FuzzyFinder" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.121", %"class.std::__1::vector.121", %"class.std::__1::vector.365", %"class.std::__1::vector.370" }
%"class.std::__1::vector.365" = type { i64*, i64, %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.370" = type { %"class.std::__1::__vector_base.371" }
%"class.std::__1::__vector_base.371" = type { i64*, i64*, %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { i64* }
%"class.bookmarks::BookmarkModel" = type { %"class.bookmarks::BookmarkUndoProvider", %class.KeyedService, %"class.std::__1::unique_ptr.276", i8, %"class.std::__1::unique_ptr.282", %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, i64, %"class.base::ObserverList.310", %"class.base::CancelableTaskTracker", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.336", %class.scoped_refptr.342, i32, %"class.std::__1::unique_ptr.343", %"class.std::__1::set.349", %"class.bookmarks::BookmarkUndoDelegate"*, %"class.std::__1::unique_ptr.357", %class.scoped_refptr.363, %"class.base::WeakPtrFactory.364" }
%"class.bookmarks::BookmarkUndoProvider" = type { i32 (...)** }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.bookmarks::BookmarkClient"* }
%"class.bookmarks::BookmarkClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.bookmarks::BookmarkNode"* }
%"class.bookmarks::BookmarkNode" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.292", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.300", i8, [7 x i8] }>
%"class.ui::TreeNode" = type { %"class.ui::TreeModelNode", %"class.std::__1::basic_string", %"class.bookmarks::BookmarkNode"*, %"class.std::__1::vector.285" }
%"class.ui::TreeModelNode" = type { i32 (...)** }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"class.std::__1::unique_ptr.282"*, %"class.std::__1::unique_ptr.282"*, %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.std::__1::unique_ptr.282"* }
%"class.bookmarks::TitledUrlNode" = type { i32 (...)** }
%"class.base::GUID" = type { %"class.std::__1::basic_string.66" }
%class.GURL = type { %"class.std::__1::basic_string.66", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.292" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.298" }
%"class.base::time_internal::TimeBase.298" = type { i64 }
%"class.gfx::Image" = type { %class.scoped_refptr.299 }
%class.scoped_refptr.299 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %class.GURL* }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.std::__1::map.303"* }
%"class.std::__1::map.303" = type opaque
%"class.bookmarks::BookmarkPermanentNode" = type { %"class.bookmarks::BookmarkNode.base", i8, [6 x i8] }
%"class.bookmarks::BookmarkNode.base" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.292", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.300", i8 }>
%"class.base::ObserverList.310" = type <{ %"class.std::__1::vector.105", %"class.base::LinkedList.311", i64, i32, [4 x i8] }>
%"class.base::LinkedList.311" = type { %"class.base::LinkNode.312" }
%"class.base::LinkNode.312" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr.328", %"class.base::WeakPtrFactory.329" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.314 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.314 = type { [4 x %"struct.std::__1::pair.315"] }
%"struct.std::__1::pair.315" = type { i64, %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::WeakPtr.328" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.329" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.bookmarks::BookmarkStorage"* }
%"class.bookmarks::BookmarkStorage" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.bookmarks::TitledUrlIndex"* }
%"class.bookmarks::TitledUrlIndex" = type opaque
%class.scoped_refptr.342 = type { %"class.bookmarks::UrlIndex"* }
%"class.bookmarks::UrlIndex" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.bookmarks::BookmarkExpandedStateTracker"* }
%"class.bookmarks::BookmarkExpandedStateTracker" = type opaque
%"class.std::__1::set.349" = type { %"class.std::__1::__tree.350" }
%"class.std::__1::__tree.350" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.351", %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.bookmarks::BookmarkUndoDelegate" = type opaque
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.bookmarks::BookmarkUndoDelegate"* }
%class.scoped_refptr.363 = type { %"class.bookmarks::ModelLoader"* }
%"class.bookmarks::ModelLoader" = type opaque
%"class.base::WeakPtrFactory.364" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor" = type { %"class.absl::variant"*, %"class.base::OnceCallback.256"* }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.379" = type { %"class.std::__1::__vector_base.380" }
%"class.std::__1::__vector_base.380" = type { %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"*, %"class.std::__1::__compressed_pair.381" }
%"struct.bookmarks::UrlAndTitle" = type { %class.GURL, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.bookmarks::UrlAndTitle"* }
%"class.absl::optional.386" = type { %"class.absl::optional_internal::optional_data.387" }
%"class.absl::optional_internal::optional_data.387" = type { %"class.absl::optional_internal::optional_data_base.388" }
%"class.absl::optional_internal::optional_data_base.388" = type { %"class.absl::optional_internal::optional_data_dtor_base.389" }
%"class.absl::optional_internal::optional_data_dtor_base.389" = type { i8, %union.anon.390 }
%union.anon.390 = type { %"class.tab_groups::TabGroupId" }
%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type <{ %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.392", %"class.std::__1::__tuple_leaf.393", %"class.std::__1::__tuple_leaf.394", [3 x i8] }>
%"class.std::__1::__tuple_leaf" = type { %"class.base::internal::UnretainedWrapper" }
%"class.base::internal::UnretainedWrapper" = type { %class.Browser* }
%"class.std::__1::__tuple_leaf.392" = type { %class.GURL }
%"class.std::__1::__tuple_leaf.393" = type { i32 }
%"class.std::__1::__tuple_leaf.394" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES5_ibNS8_9nullopt_tEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS2_EES4_ibNS7_9nullopt_tEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESA_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m = comdat any

$_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorINS3_10unique_ptrIN9commander11CommandItemENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEEP7BrowserRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENSB_IDsEEEEEJNS0_17UnretainedWrapperISE_EEEEEFSD_SM_EE3RunEPNS0_13BindStateBaseESM_ = comdat any

$_ZN4base8internal9BindStateIPFNSt3__16vectorINS2_10unique_ptrIN9commander11CommandItemENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEEP7BrowserRKNS2_12basic_stringIDsNS2_11char_traitsIDsEENSA_IDsEEEEEJNS0_17UnretainedWrapperISD_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESX_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m = comdat any

@_ZTVN9commander21BookmarkCommandSourceE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.commander::BookmarkCommandSource"*)* @_ZN9commander21BookmarkCommandSourceD2Ev to i8*), i8* bitcast (void (%"class.commander::BookmarkCommandSource"*)* @_ZN9commander21BookmarkCommandSourceD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector.251"*, %"class.commander::BookmarkCommandSource"*, %"class.std::__1::basic_string"*, %class.Browser*)* @_ZNK9commander21BookmarkCommandSource11GetCommandsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEP7Browser to i8*)] }, align 8

@_ZN9commander21BookmarkCommandSourceC1Ev = hidden unnamed_addr alias void (%"class.commander::BookmarkCommandSource"*), void (%"class.commander::BookmarkCommandSource"*)* @_ZN9commander21BookmarkCommandSourceC2Ev
@_ZN9commander21BookmarkCommandSourceD1Ev = hidden unnamed_addr alias void (%"class.commander::BookmarkCommandSource"*), void (%"class.commander::BookmarkCommandSource"*)* @_ZN9commander21BookmarkCommandSourceD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9commander21BookmarkCommandSourceC2Ev(%"class.commander::BookmarkCommandSource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.commander::BookmarkCommandSource", %"class.commander::BookmarkCommandSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9commander21BookmarkCommandSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9commander21BookmarkCommandSourceD2Ev(%"class.commander::BookmarkCommandSource"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander21BookmarkCommandSourceD0Ev(%"class.commander::BookmarkCommandSource"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.commander::BookmarkCommandSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9commander21BookmarkCommandSource11GetCommandsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEP7Browser(%"class.std::__1::vector.251"* noalias sret, %"class.commander::BookmarkCommandSource"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24), %class.Browser*) unnamed_addr #2 align 2 {
  %5 = alloca %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409", align 8
  %6 = alloca %"class.std::__1::vector.251", align 16
  %7 = alloca %"class.commander::FuzzyFinder", align 8
  %8 = alloca %"class.std::__1::vector.261", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::unique_ptr.253", align 8
  %11 = alloca %"struct.std::__1::pair.258", align 8
  %12 = alloca %"class.base::RepeatingCallback.259", align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.251"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #12
  %17 = getelementptr inbounds %class.Browser, %class.Browser* %3, i64 0, i32 12
  %18 = load %class.Profile*, %class.Profile** %17, align 8
  %19 = getelementptr inbounds %class.Profile, %class.Profile* %18, i64 0, i32 0
  %20 = tail call %"class.bookmarks::BookmarkModel"* @_ZN20BookmarkModelFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %19) #12
  %21 = icmp eq %"class.bookmarks::BookmarkModel"* %20, null
  br i1 %21, label %349, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.bookmarks::BookmarkModel", %"class.bookmarks::BookmarkModel"* %20, i64 0, i32 3
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %349, label %26

26:                                               ; preds = %22
  %27 = tail call zeroext i1 @_ZN9bookmarks13BookmarkModel12HasBookmarksEv(%"class.bookmarks::BookmarkModel"* nonnull %20) #12
  br i1 %27, label %28, label %349

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = icmp ugt i64 %36, 3
  br i1 %37, label %38, label %72

38:                                               ; preds = %28
  %39 = bitcast %"class.std::__1::vector.251"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  call void @_ZN9commander12_GLOBAL__N_120GetMatchingBookmarksEP7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::vector.251"* nonnull sret %6, %class.Browser* %3, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %40 = load %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"** %13, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.253"* %40, null
  br i1 %41, label %64, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.std::__1::unique_ptr.253"* %40 to i8*
  %44 = load %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"** %14, align 8
  %45 = icmp eq %"class.std::__1::unique_ptr.253"* %44, %40
  br i1 %45, label %62, label %46

46:                                               ; preds = %42, %57
  %47 = phi %"class.std::__1::unique_ptr.253"* [ %48, %57 ], [ %44, %42 ]
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %47, i64 -1
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %49, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %49, align 8
  %51 = icmp eq %"struct.commander::CommandItem"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  %53 = bitcast %"struct.commander::CommandItem"* %50 to void (%"struct.commander::CommandItem"*)***
  %54 = load void (%"struct.commander::CommandItem"*)**, void (%"struct.commander::CommandItem"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %54, i64 1
  %56 = load void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %55, align 8
  call void %56(%"struct.commander::CommandItem"* nonnull %50) #12
  br label %57

57:                                               ; preds = %52, %46
  %58 = icmp eq %"class.std::__1::unique_ptr.253"* %48, %40
  br i1 %58, label %59, label %46

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.251"* %0 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %42
  %63 = phi i8* [ %61, %59 ], [ %43, %42 ]
  store %"class.std::__1::unique_ptr.253"* %40, %"class.std::__1::unique_ptr.253"** %14, align 8
  call void @_ZdlPv(i8* %63) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #12
  br label %64

64:                                               ; preds = %62, %38
  %65 = bitcast %"class.std::__1::vector.251"* %6 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 16
  %67 = bitcast %"class.std::__1::vector.251"* %0 to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.std::__1::unique_ptr.253"** %68 to i64*
  %70 = load i64, i64* %69, align 16
  %71 = bitcast %"class.std::__1::unique_ptr.253"** %15 to i64*
  store i64 %70, i64* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  br label %72

72:                                               ; preds = %28, %64
  %73 = bitcast %"class.commander::FuzzyFinder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %73) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 120, i1 false)
  call void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %2) #12
  %74 = bitcast %"class.std::__1::vector.261"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #12
  %75 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %8, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #12
  %77 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #12
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = call i8* @_Znwm(i64 48) #11
  %81 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  store i8* %80, i8** %81, align 8
  %82 = bitcast i64* %79 to <2 x i64>*
  store <2 x i64> <i64 16, i64 -9223372036854775784>, <2 x i64>* %82, align 8
  %83 = bitcast i8* %80 to <8 x i16>*
  store <8 x i16> <i16 79, i16 112, i16 101, i16 110, i16 32, i16 98, i16 111, i16 111>, <8 x i16>* %83, align 2
  %84 = getelementptr inbounds i8, i8* %80, i64 16
  %85 = bitcast i8* %84 to <8 x i16>*
  store <8 x i16> <i16 107, i16 109, i16 97, i16 114, i16 107, i16 46, i16 46, i16 46>, <8 x i16>* %85, align 2
  %86 = getelementptr inbounds i8, i8* %80, i64 32
  %87 = bitcast i8* %86 to i16*
  store i16 0, i16* %87, align 2
  %88 = call double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.261"* nonnull %8) #12
  %89 = fcmp ogt double %88, 0.000000e+00
  br i1 %89, label %92, label %90

90:                                               ; preds = %72
  %91 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %333

92:                                               ; preds = %72
  %93 = bitcast %"class.std::__1::unique_ptr.253"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %10, i64 0, i32 0, i32 0, i32 0
  %95 = call i8* @_Znwm(i64 136) #11
  %96 = bitcast i8* %95 to %"struct.commander::CommandItem"*
  call void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"* nonnull %96, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, double %88, %"class.std::__1::vector.261"* nonnull dereferenceable(24) %8) #12
  %97 = bitcast %"class.std::__1::unique_ptr.253"* %10 to i8**
  store i8* %95, i8** %97, align 8
  %98 = bitcast %"struct.std::__1::pair.258"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %98) #12
  %99 = bitcast %"class.base::RepeatingCallback.259"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  %100 = ptrtoint %class.Browser* %3 to i64
  %101 = call i8* @_Znwm(i64 48) #11, !noalias !3
  %102 = bitcast i8* %101 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %102, void ()* bitcast (void (%"class.std::__1::vector.251"*, %"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorINS3_10unique_ptrIN9commander11CommandItemENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEEP7BrowserRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENSB_IDsEEEEEJNS0_17UnretainedWrapperISE_EEEEEFSD_SM_EE3RunEPNS0_13BindStateBaseESM_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFNSt3__16vectorINS2_10unique_ptrIN9commander11CommandItemENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEEP7BrowserRKNS2_12basic_stringIDsNS2_11char_traitsIDsEENSA_IDsEEEEEJNS0_17UnretainedWrapperISD_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !3
  %103 = getelementptr inbounds i8, i8* %101, i64 32
  %104 = bitcast i8* %103 to i64*
  store i64 ptrtoint (void (%"class.std::__1::vector.251"*, %class.Browser*, %"class.std::__1::basic_string"*)* @_ZN9commander12_GLOBAL__N_120GetMatchingBookmarksEP7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i64), i64* %104, align 8, !noalias !3
  %105 = getelementptr inbounds i8, i8* %101, i64 40
  %106 = bitcast i8* %105 to i64*
  store i64 %100, i64* %106, align 8, !noalias !3
  %107 = bitcast %"class.base::RepeatingCallback.259"* %12 to i8**
  store i8* %101, i8** %107, align 8, !alias.scope !3
  %108 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1, !noalias !8
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %92
  %113 = ptrtoint i8* %101 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %98, i8* nonnull align 8 %77, i64 24, i1 false) #12
  br label %291

114:                                              ; preds = %92
  %115 = load i16*, i16** %78, align 8, !noalias !8
  %116 = load i64, i64* %79, align 8, !noalias !8
  %117 = icmp ult i64 %116, 11
  br i1 %117, label %118, label %123

118:                                              ; preds = %114
  %119 = bitcast %"struct.std::__1::pair.258"* %11 to i16*
  %120 = trunc i64 %116 to i8
  %121 = bitcast %"struct.std::__1::pair.258"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %121, i64 0, i32 1, i32 1
  store i8 %120, i8* %122, align 1, !alias.scope !8
  br label %140

123:                                              ; preds = %114
  %124 = icmp ugt i64 %116, 9223372036854775791
  br i1 %124, label %125, label %127

125:                                              ; preds = %123
  %126 = bitcast %"struct.std::__1::pair.258"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %126) #13
  unreachable

127:                                              ; preds = %123
  %128 = add nuw nsw i64 %116, 8
  %129 = and i64 %128, -8
  %130 = icmp slt i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  call void @abort() #13
  unreachable

132:                                              ; preds = %127
  %133 = shl i64 %129, 1
  %134 = call i8* @_Znwm(i64 %133) #11
  %135 = bitcast i8* %134 to i16*
  %136 = bitcast %"struct.std::__1::pair.258"* %11 to i8**
  store i8* %134, i8** %136, align 8, !alias.scope !8
  %137 = or i64 %129, -9223372036854775808
  %138 = getelementptr inbounds %"struct.std::__1::pair.258", %"struct.std::__1::pair.258"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %137, i64* %138, align 8, !alias.scope !8
  %139 = getelementptr inbounds %"struct.std::__1::pair.258", %"struct.std::__1::pair.258"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %116, i64* %139, align 8, !alias.scope !8
  br label %140

140:                                              ; preds = %132, %118
  %141 = phi i16* [ %119, %118 ], [ %135, %132 ]
  %142 = add nuw nsw i64 %116, 1
  %143 = add i64 %116, 1
  %144 = icmp ult i64 %143, 16
  br i1 %144, label %234, label %145

145:                                              ; preds = %140
  %146 = add i64 %116, 1
  %147 = getelementptr i16, i16* %141, i64 %146
  %148 = getelementptr i16, i16* %115, i64 %146
  %149 = icmp ult i16* %141, %148
  %150 = icmp ult i16* %115, %147
  %151 = and i1 %149, %150
  br i1 %151, label %234, label %152

152:                                              ; preds = %145
  %153 = and i64 %143, -16
  %154 = sub i64 %142, %153
  %155 = getelementptr i16, i16* %115, i64 %153
  %156 = getelementptr i16, i16* %141, i64 %153
  %157 = add i64 %153, -16
  %158 = lshr exact i64 %157, 4
  %159 = add nuw nsw i64 %158, 1
  %160 = and i64 %159, 3
  %161 = icmp ult i64 %157, 48
  br i1 %161, label %213, label %162

162:                                              ; preds = %152
  %163 = sub nsw i64 %159, %160
  br label %164

164:                                              ; preds = %164, %162
  %165 = phi i64 [ 0, %162 ], [ %210, %164 ]
  %166 = phi i64 [ %163, %162 ], [ %211, %164 ]
  %167 = getelementptr i16, i16* %115, i64 %165
  %168 = getelementptr i16, i16* %141, i64 %165
  %169 = bitcast i16* %167 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !11
  %171 = getelementptr i16, i16* %167, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !11
  %174 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %174, align 2, !alias.scope !14, !noalias !11
  %175 = getelementptr i16, i16* %168, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %176, align 2, !alias.scope !14, !noalias !11
  %177 = or i64 %165, 16
  %178 = getelementptr i16, i16* %115, i64 %177
  %179 = getelementptr i16, i16* %141, i64 %177
  %180 = bitcast i16* %178 to <8 x i16>*
  %181 = load <8 x i16>, <8 x i16>* %180, align 2, !alias.scope !11
  %182 = getelementptr i16, i16* %178, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !11
  %185 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %181, <8 x i16>* %185, align 2, !alias.scope !14, !noalias !11
  %186 = getelementptr i16, i16* %179, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %187, align 2, !alias.scope !14, !noalias !11
  %188 = or i64 %165, 32
  %189 = getelementptr i16, i16* %115, i64 %188
  %190 = getelementptr i16, i16* %141, i64 %188
  %191 = bitcast i16* %189 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !11
  %193 = getelementptr i16, i16* %189, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !11
  %196 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %196, align 2, !alias.scope !14, !noalias !11
  %197 = getelementptr i16, i16* %190, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %198, align 2, !alias.scope !14, !noalias !11
  %199 = or i64 %165, 48
  %200 = getelementptr i16, i16* %115, i64 %199
  %201 = getelementptr i16, i16* %141, i64 %199
  %202 = bitcast i16* %200 to <8 x i16>*
  %203 = load <8 x i16>, <8 x i16>* %202, align 2, !alias.scope !11
  %204 = getelementptr i16, i16* %200, i64 8
  %205 = bitcast i16* %204 to <8 x i16>*
  %206 = load <8 x i16>, <8 x i16>* %205, align 2, !alias.scope !11
  %207 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %207, align 2, !alias.scope !14, !noalias !11
  %208 = getelementptr i16, i16* %201, i64 8
  %209 = bitcast i16* %208 to <8 x i16>*
  store <8 x i16> %206, <8 x i16>* %209, align 2, !alias.scope !14, !noalias !11
  %210 = add i64 %165, 64
  %211 = add i64 %166, -4
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %164, !llvm.loop !16

213:                                              ; preds = %164, %152
  %214 = phi i64 [ 0, %152 ], [ %210, %164 ]
  %215 = icmp eq i64 %160, 0
  br i1 %215, label %232, label %216

216:                                              ; preds = %213, %216
  %217 = phi i64 [ %229, %216 ], [ %214, %213 ]
  %218 = phi i64 [ %230, %216 ], [ %160, %213 ]
  %219 = getelementptr i16, i16* %115, i64 %217
  %220 = getelementptr i16, i16* %141, i64 %217
  %221 = bitcast i16* %219 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !11
  %223 = getelementptr i16, i16* %219, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  %225 = load <8 x i16>, <8 x i16>* %224, align 2, !alias.scope !11
  %226 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %226, align 2, !alias.scope !14, !noalias !11
  %227 = getelementptr i16, i16* %220, i64 8
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %225, <8 x i16>* %228, align 2, !alias.scope !14, !noalias !11
  %229 = add i64 %217, 16
  %230 = add i64 %218, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %216, !llvm.loop !18

232:                                              ; preds = %216, %213
  %233 = icmp eq i64 %143, %153
  br i1 %233, label %287, label %234

234:                                              ; preds = %232, %145, %140
  %235 = phi i64 [ %142, %145 ], [ %142, %140 ], [ %154, %232 ]
  %236 = phi i16* [ %115, %145 ], [ %115, %140 ], [ %155, %232 ]
  %237 = phi i16* [ %141, %145 ], [ %141, %140 ], [ %156, %232 ]
  %238 = add i64 %235, -1
  %239 = and i64 %235, 7
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %252, label %241

241:                                              ; preds = %234, %241
  %242 = phi i64 [ %247, %241 ], [ %235, %234 ]
  %243 = phi i16* [ %249, %241 ], [ %236, %234 ]
  %244 = phi i16* [ %248, %241 ], [ %237, %234 ]
  %245 = phi i64 [ %250, %241 ], [ %239, %234 ]
  %246 = load i16, i16* %243, align 2
  store i16 %246, i16* %244, align 2
  %247 = add i64 %242, -1
  %248 = getelementptr inbounds i16, i16* %244, i64 1
  %249 = getelementptr inbounds i16, i16* %243, i64 1
  %250 = add i64 %245, -1
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %252, label %241, !llvm.loop !20

252:                                              ; preds = %241, %234
  %253 = phi i64 [ %235, %234 ], [ %247, %241 ]
  %254 = phi i16* [ %236, %234 ], [ %249, %241 ]
  %255 = phi i16* [ %237, %234 ], [ %248, %241 ]
  %256 = icmp ult i64 %238, 7
  br i1 %256, label %287, label %257

257:                                              ; preds = %252, %257
  %258 = phi i64 [ %283, %257 ], [ %253, %252 ]
  %259 = phi i16* [ %285, %257 ], [ %254, %252 ]
  %260 = phi i16* [ %284, %257 ], [ %255, %252 ]
  %261 = load i16, i16* %259, align 2
  store i16 %261, i16* %260, align 2
  %262 = getelementptr inbounds i16, i16* %260, i64 1
  %263 = getelementptr inbounds i16, i16* %259, i64 1
  %264 = load i16, i16* %263, align 2
  store i16 %264, i16* %262, align 2
  %265 = getelementptr inbounds i16, i16* %260, i64 2
  %266 = getelementptr inbounds i16, i16* %259, i64 2
  %267 = load i16, i16* %266, align 2
  store i16 %267, i16* %265, align 2
  %268 = getelementptr inbounds i16, i16* %260, i64 3
  %269 = getelementptr inbounds i16, i16* %259, i64 3
  %270 = load i16, i16* %269, align 2
  store i16 %270, i16* %268, align 2
  %271 = getelementptr inbounds i16, i16* %260, i64 4
  %272 = getelementptr inbounds i16, i16* %259, i64 4
  %273 = load i16, i16* %272, align 2
  store i16 %273, i16* %271, align 2
  %274 = getelementptr inbounds i16, i16* %260, i64 5
  %275 = getelementptr inbounds i16, i16* %259, i64 5
  %276 = load i16, i16* %275, align 2
  store i16 %276, i16* %274, align 2
  %277 = getelementptr inbounds i16, i16* %260, i64 6
  %278 = getelementptr inbounds i16, i16* %259, i64 6
  %279 = load i16, i16* %278, align 2
  store i16 %279, i16* %277, align 2
  %280 = getelementptr inbounds i16, i16* %260, i64 7
  %281 = getelementptr inbounds i16, i16* %259, i64 7
  %282 = load i16, i16* %281, align 2
  store i16 %282, i16* %280, align 2
  %283 = add i64 %258, -8
  %284 = getelementptr inbounds i16, i16* %260, i64 8
  %285 = getelementptr inbounds i16, i16* %259, i64 8
  %286 = icmp eq i64 %283, 0
  br i1 %286, label %287, label %257, !llvm.loop !21

287:                                              ; preds = %252, %257, %232
  %288 = bitcast %"class.base::RepeatingCallback.259"* %12 to i64*
  %289 = load i64, i64* %288, align 8, !noalias !8
  %290 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %94, align 8
  br label %291

291:                                              ; preds = %287, %112
  %292 = phi %"struct.commander::CommandItem"* [ %290, %287 ], [ %96, %112 ]
  %293 = phi i64 [ %289, %287 ], [ %113, %112 ]
  %294 = getelementptr inbounds %"struct.std::__1::pair.258", %"struct.std::__1::pair.258"* %11, i64 0, i32 1
  %295 = getelementptr inbounds %"class.base::RepeatingCallback.259", %"class.base::RepeatingCallback.259"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %296 = bitcast %"class.base::RepeatingCallback.259"* %294 to i64*
  store i64 %293, i64* %296, align 8, !alias.scope !8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %295, align 8, !noalias !8
  %297 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %292, i64 0, i32 4
  %298 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %298) #12
  %299 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* %5, i64 0, i32 0
  store %"class.absl::variant"* %297, %"class.absl::variant"** %299, align 8
  %300 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* %5, i64 0, i32 1
  store %"struct.std::__1::pair.258"* %11, %"struct.std::__1::pair.258"** %300, align 8
  %301 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %292, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %302 = load i64, i64* %301, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESX_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m(%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* nonnull dereferenceable(16) %5, i64 %302) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %298) #12
  %303 = getelementptr inbounds %"struct.std::__1::pair.258", %"struct.std::__1::pair.258"* %11, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %303) #12
  %304 = bitcast %"struct.std::__1::pair.258"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %305 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %304, i64 0, i32 1, i32 1
  %306 = load i8, i8* %305, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %291
  %309 = bitcast %"struct.std::__1::pair.258"* %11 to i8**
  %310 = load i8*, i8** %309, align 8
  call void @_ZdlPv(i8* %310) #11
  br label %311

311:                                              ; preds = %291, %308
  %312 = getelementptr inbounds %"class.base::RepeatingCallback.259", %"class.base::RepeatingCallback.259"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %312) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %98) #12
  %313 = load %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"** %14, align 8
  %314 = load %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"** %15, align 8
  %315 = icmp ult %"class.std::__1::unique_ptr.253"* %313, %314
  br i1 %315, label %316, label %323

316:                                              ; preds = %311
  %317 = bitcast %"class.std::__1::unique_ptr.253"* %10 to i64*
  %318 = load i64, i64* %317, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %94, align 8
  %319 = bitcast %"class.std::__1::unique_ptr.253"* %313 to i64*
  store i64 %318, i64* %319, align 8
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %313, i64 1
  %321 = ptrtoint %"class.std::__1::unique_ptr.253"* %320 to i64
  %322 = bitcast %"class.std::__1::unique_ptr.253"** %14 to i64*
  store i64 %321, i64* %322, align 8
  br label %324

323:                                              ; preds = %311
  call void @_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.251"* %0, %"class.std::__1::unique_ptr.253"* nonnull dereferenceable(8) %10) #12
  br label %324

324:                                              ; preds = %316, %323
  %325 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %94, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %94, align 8
  %326 = icmp eq %"struct.commander::CommandItem"* %325, null
  br i1 %326, label %332, label %327

327:                                              ; preds = %324
  %328 = bitcast %"struct.commander::CommandItem"* %325 to void (%"struct.commander::CommandItem"*)***
  %329 = load void (%"struct.commander::CommandItem"*)**, void (%"struct.commander::CommandItem"*)*** %328, align 8
  %330 = getelementptr inbounds void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %329, i64 1
  %331 = load void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %330, align 8
  call void %331(%"struct.commander::CommandItem"* nonnull %325) #12
  br label %332

332:                                              ; preds = %324, %327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #12
  br label %333

333:                                              ; preds = %90, %332
  %334 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %91, %90 ], [ %108, %332 ]
  %335 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %334, i64 0, i32 1, i32 1
  %336 = load i8, i8* %335, align 1
  %337 = icmp slt i8 %336, 0
  br i1 %337, label %338, label %341

338:                                              ; preds = %333
  %339 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %340 = load i8*, i8** %339, align 8
  call void @_ZdlPv(i8* %340) #11
  br label %341

341:                                              ; preds = %333, %338
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #12
  %342 = load %"class.gfx::Range"*, %"class.gfx::Range"** %75, align 8
  %343 = icmp eq %"class.gfx::Range"* %342, null
  br i1 %343, label %348, label %344

344:                                              ; preds = %341
  %345 = ptrtoint %"class.gfx::Range"* %342 to i64
  %346 = bitcast %"class.gfx::Range"** %76 to i64*
  store i64 %345, i64* %346, align 8
  %347 = bitcast %"class.gfx::Range"* %342 to i8*
  call void @_ZdlPv(i8* %347) #11
  br label %348

348:                                              ; preds = %341, %344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #12
  call void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %73) #12
  br label %349

349:                                              ; preds = %22, %348, %4, %26
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.bookmarks::BookmarkModel"* @_ZN20BookmarkModelFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #5

declare zeroext i1 @_ZN9bookmarks13BookmarkModel12HasBookmarksEv(%"class.bookmarks::BookmarkModel"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN9commander12_GLOBAL__N_120GetMatchingBookmarksEP7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::vector.251"* noalias sret, %class.Browser*, %"class.std::__1::basic_string"* dereferenceable(24)) #2 {
  %4 = alloca %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", align 8
  %5 = alloca %"class.base::OnceCallback.256", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.std::__1::vector.379", align 8
  %8 = alloca %"class.commander::FuzzyFinder", align 8
  %9 = alloca %"class.std::__1::vector.261", align 8
  %10 = alloca %"class.std::__1::unique_ptr.253", align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector.251"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  %14 = getelementptr inbounds %class.Browser, %class.Browser* %1, i64 0, i32 12
  %15 = load %class.Profile*, %class.Profile** %14, align 8
  %16 = getelementptr inbounds %class.Profile, %class.Profile* %15, i64 0, i32 0
  %17 = tail call %"class.bookmarks::BookmarkModel"* @_ZN20BookmarkModelFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %16) #12
  %18 = bitcast %"class.std::__1::vector.379"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.379", %"class.std::__1::vector.379"* %7, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.379", %"class.std::__1::vector.379"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #12
  call void @_ZN9bookmarks13BookmarkModel12GetBookmarksEPNSt3__16vectorINS_11UrlAndTitleENS1_9allocatorIS3_EEEE(%"class.bookmarks::BookmarkModel"* %17, %"class.std::__1::vector.379"* nonnull %7) #12
  %21 = bitcast %"class.commander::FuzzyFinder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 120, i1 false)
  call void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %2) #12
  %22 = bitcast %"class.std::__1::vector.261"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %9, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #12
  %25 = load %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"** %19, align 8
  %26 = load %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"** %20, align 8
  %27 = icmp eq %"struct.bookmarks::UrlAndTitle"* %25, %26
  br i1 %27, label %49, label %28

28:                                               ; preds = %3
  %29 = bitcast %"class.std::__1::unique_ptr.253"* %10 to i8*
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %10, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback.256"* %5 to i8*
  %32 = ptrtoint %class.Browser* %1 to i64
  %33 = bitcast %class.GURL* %6 to i8*
  %34 = bitcast %"class.base::OnceCallback.256"* %5 to i8**
  %35 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %4 to i8*
  %36 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %4 to i8**
  %37 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %4, i64 0, i32 1
  %38 = getelementptr inbounds %"class.base::OnceCallback.256", %"class.base::OnceCallback.256"* %5, i64 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.253"* %10 to i8**
  %40 = bitcast %"class.std::__1::unique_ptr.253"* %10 to i64*
  %41 = bitcast %"class.std::__1::unique_ptr.253"** %11 to i64*
  br label %76

42:                                               ; preds = %129
  %43 = load %"class.gfx::Range"*, %"class.gfx::Range"** %23, align 8
  %44 = icmp eq %"class.gfx::Range"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.gfx::Range"* %43 to i8*
  %47 = ptrtoint %"class.gfx::Range"* %43 to i64
  %48 = bitcast %"class.gfx::Range"** %24 to i64*
  store i64 %47, i64* %48, align 8
  call void @_ZdlPv(i8* %46) #11
  br label %49

49:                                               ; preds = %3, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  call void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %21) #12
  %50 = load %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"** %19, align 8
  %51 = icmp eq %"struct.bookmarks::UrlAndTitle"* %50, null
  br i1 %51, label %75, label %52

52:                                               ; preds = %49
  %53 = bitcast %"struct.bookmarks::UrlAndTitle"* %50 to i8*
  %54 = load %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"** %20, align 8
  %55 = icmp eq %"struct.bookmarks::UrlAndTitle"* %54, %50
  br i1 %55, label %73, label %56

56:                                               ; preds = %52, %67
  %57 = phi %"struct.bookmarks::UrlAndTitle"* [ %58, %67 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %57, i64 -1
  %59 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %57, i64 -1, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %56
  %65 = bitcast %"class.std::__1::basic_string"* %59 to i8**
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %64, %56
  %68 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %58, i64 0, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %68) #12
  %69 = icmp eq %"struct.bookmarks::UrlAndTitle"* %58, %50
  br i1 %69, label %70, label %56

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::vector.379"* %7 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %52
  %74 = phi i8* [ %72, %70 ], [ %53, %52 ]
  store %"struct.bookmarks::UrlAndTitle"* %50, %"struct.bookmarks::UrlAndTitle"** %20, align 8
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %49, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  ret void

76:                                               ; preds = %28, %129
  %77 = phi %"struct.bookmarks::UrlAndTitle"* [ %25, %28 ], [ %130, %129 ]
  %78 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %77, i64 0, i32 1
  %79 = call double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %78, %"class.std::__1::vector.261"* nonnull %9) #12
  %80 = fcmp ogt double %79, 0.000000e+00
  br i1 %80, label %81, label %129

81:                                               ; preds = %76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  store %"struct.commander::CommandItem"* inttoptr (i64 -6148914691236517206 to %"struct.commander::CommandItem"*), %"struct.commander::CommandItem"** %30, align 8
  %82 = call i8* @_Znwm(i64 136) #11
  %83 = bitcast i8* %82 to %"struct.commander::CommandItem"*
  call void @_ZN9commander11CommandItemC1Ev(%"struct.commander::CommandItem"* nonnull %83) #12
  %84 = getelementptr inbounds i8, i8* %82, i64 8
  %85 = bitcast i8* %84 to %"class.std::__1::basic_string"*
  %86 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %85, %"class.std::__1::basic_string"* dereferenceable(24) %78) #12
  %87 = getelementptr inbounds i8, i8* %82, i64 32
  %88 = bitcast i8* %87 to i32*
  store i32 1, i32* %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %33) #12
  %89 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %77, i64 0, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %6, %class.GURL* dereferenceable(120) %89) #12
  %90 = call i8* @_Znwm(i64 176) #11, !noalias !22
  %91 = bitcast i8* %90 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %91, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES5_ibNS8_9nullopt_tEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS2_EES4_ibNS7_9nullopt_tEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !22
  %92 = getelementptr inbounds i8, i8* %90, i64 32
  %93 = bitcast i8* %92 to i64*
  store i64 ptrtoint (void (%class.Browser*, %class.GURL*, i32, i1, %"class.absl::optional.386"*)* @_ZN6chrome8AddTabAtEP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEE to i64), i64* %93, align 8, !noalias !22
  %94 = getelementptr inbounds i8, i8* %90, i64 40
  %95 = bitcast i8* %94 to i64*
  store i64 %32, i64* %95, align 8, !noalias !22
  %96 = getelementptr inbounds i8, i8* %90, i64 48
  %97 = bitcast i8* %96 to %class.GURL*
  call void @_ZN4GURLC1EOS_(%class.GURL* %97, %class.GURL* nonnull dereferenceable(120) %6) #12, !noalias !22
  %98 = getelementptr inbounds i8, i8* %90, i64 168
  %99 = bitcast i8* %98 to i32*
  store i32 -1, i32* %99, align 4, !noalias !22
  %100 = getelementptr inbounds i8, i8* %90, i64 172
  store i8 1, i8* %100, align 1, !noalias !22
  store i8* %90, i8** %34, align 8, !alias.scope !22
  %101 = getelementptr inbounds i8, i8* %82, i64 64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #12
  store i8* %101, i8** %36, align 8
  store %"class.base::OnceCallback.256"* %5, %"class.base::OnceCallback.256"** %37, align 8
  %102 = getelementptr inbounds i8, i8* %82, i64 96
  %103 = bitcast i8* %102 to i64*
  %104 = load i64, i64* %103, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESA_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m(%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* nonnull dereferenceable(16) %4, i64 %104) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  store i8* %82, i8** %39, align 8
  %105 = getelementptr inbounds i8, i8* %82, i64 104
  %106 = bitcast i8* %105 to double*
  store double %79, double* %106, align 8
  %107 = getelementptr inbounds i8, i8* %82, i64 112
  %108 = bitcast i8* %107 to %"class.std::__1::vector.261"*
  %109 = load %"class.gfx::Range"*, %"class.gfx::Range"** %23, align 8
  %110 = load %"class.gfx::Range"*, %"class.gfx::Range"** %24, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.261"* %108, %"class.gfx::Range"* %109, %"class.gfx::Range"* %110) #12
  %111 = load %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"** %11, align 8
  %112 = load %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"** %12, align 8
  %113 = icmp ult %"class.std::__1::unique_ptr.253"* %111, %112
  br i1 %113, label %114, label %119

114:                                              ; preds = %81
  %115 = load i64, i64* %40, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %30, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.253"* %111 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %111, i64 1
  %118 = ptrtoint %"class.std::__1::unique_ptr.253"* %117 to i64
  store i64 %118, i64* %41, align 8
  br label %120

119:                                              ; preds = %81
  call void @_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.251"* %0, %"class.std::__1::unique_ptr.253"* nonnull dereferenceable(8) %10) #12
  br label %120

120:                                              ; preds = %114, %119
  %121 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %30, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %30, align 8
  %122 = icmp eq %"struct.commander::CommandItem"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = bitcast %"struct.commander::CommandItem"* %121 to void (%"struct.commander::CommandItem"*)***
  %125 = load void (%"struct.commander::CommandItem"*)**, void (%"struct.commander::CommandItem"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %125, i64 1
  %127 = load void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %126, align 8
  call void %127(%"struct.commander::CommandItem"* nonnull %121) #12
  br label %128

128:                                              ; preds = %120, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %129

129:                                              ; preds = %128, %76
  %130 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %77, i64 1
  %131 = icmp eq %"struct.bookmarks::UrlAndTitle"* %130, %26
  br i1 %131, label %42, label %76
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #5

declare double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.261"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"*) unnamed_addr #6

declare void @_ZN9bookmarks13BookmarkModel12GetBookmarksEPNSt3__16vectorINS_11UrlAndTitleENS1_9allocatorIS3_EEEE(%"class.bookmarks::BookmarkModel"*, %"class.std::__1::vector.379"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !27
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !27
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !30, !noalias !27
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !30, !noalias !27
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !27
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !27
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !30, !noalias !27
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !30, !noalias !27
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !27
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !27
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !30, !noalias !27
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !30, !noalias !27
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !27
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !27
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !30, !noalias !27
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !30, !noalias !27
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !32

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !27
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !27
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !30, !noalias !27
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !30, !noalias !27
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !33

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !34

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !35

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !36
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !36
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !39, !noalias !36
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !39, !noalias !36
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !36
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !36
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !39, !noalias !36
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !39, !noalias !36
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !36
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !36
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !39, !noalias !36
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !39, !noalias !36
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !36
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !36
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !39, !noalias !36
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !39, !noalias !36
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !41

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !36
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !36
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !39, !noalias !36
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !39, !noalias !36
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !42

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !43

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !44

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !45
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !45
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !48, !noalias !45
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !48, !noalias !45
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !45
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !45
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !48, !noalias !45
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !48, !noalias !45
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !45
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !45
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !48, !noalias !45
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !48, !noalias !45
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !45
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !45
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !48, !noalias !45
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !48, !noalias !45
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !50

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !45
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !45
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !48, !noalias !45
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !48, !noalias !45
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !51

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !52

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !53

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

declare void @_ZN6chrome8AddTabAtEP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEE(%class.Browser*, %class.GURL* dereferenceable(120), i32, i1 zeroext, %"class.absl::optional.386"*) #5

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN9commander11CommandItemC1Ev(%"struct.commander::CommandItem"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #2 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !54
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !54
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !57, !noalias !54
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !57, !noalias !54
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !54
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !54
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !57, !noalias !54
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !57, !noalias !54
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !54
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !54
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !57, !noalias !54
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !57, !noalias !54
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !54
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !54
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !57, !noalias !54
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !57, !noalias !54
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !59

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !54
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !54
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !57, !noalias !54
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !57, !noalias !54
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !60

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !61

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !62

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !63

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !64

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !65

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !67
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !67
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !70, !noalias !67
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !70, !noalias !67
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !67
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !67
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !70, !noalias !67
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !70, !noalias !67
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !67
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !67
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !70, !noalias !67
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !70, !noalias !67
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !67
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !67
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !70, !noalias !67
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !70, !noalias !67
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !72

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !67
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !67
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !70, !noalias !67
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !70, !noalias !67
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !73

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !74

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !75

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES5_ibNS8_9nullopt_tEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.absl::optional.386", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%class.Browser*, %class.GURL*, i32, i1, %"class.absl::optional.386"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.std::__1::tuple"*
  %7 = bitcast void ()** %5 to %class.Browser**
  %8 = load %class.Browser*, %class.Browser** %7, align 8
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %10 = bitcast void ()** %9 to %class.GURL*
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 16
  %12 = bitcast void ()** %11 to i32*
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 3, i32 0
  %14 = getelementptr inbounds %"class.absl::optional.386", %"class.absl::optional.386"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = load void (%class.Browser*, %class.GURL*, i32, i1, %"class.absl::optional.386"*)*, void (%class.Browser*, %class.GURL*, i32, i1, %"class.absl::optional.386"*)** %4, align 8
  %16 = load i32, i32* %12, align 4
  %17 = load i8, i8* %13, align 1, !range !2
  %18 = icmp ne i8 %17, 0
  store i8 0, i8* %14, align 8
  call void %15(%class.Browser* %8, %class.GURL* dereferenceable(120) %10, i32 %16, i1 zeroext %18, %"class.absl::optional.386"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS2_EES4_ibNS7_9nullopt_tEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESA_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m(%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* dereferenceable(16), i64) local_unnamed_addr #2 comdat align 2 {
  switch i64 %1, label %34 [
    i64 0, label %3
    i64 1, label %11
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 1
  %5 = load %"class.base::OnceCallback.256"*, %"class.base::OnceCallback.256"** %4, align 8
  %6 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0 to %"class.base::OnceCallback.256"**
  %7 = load %"class.base::OnceCallback.256"*, %"class.base::OnceCallback.256"** %6, align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.256", %"class.base::OnceCallback.256"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.base::OnceCallback.256", %"class.base::OnceCallback.256"* %5, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %8, %"class.base::internal::CallbackBase"* dereferenceable(8) %9) #12
  br label %57

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 0
  %13 = load %"class.absl::variant"*, %"class.absl::variant"** %12, align 8
  %14 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 1
  %15 = load %"class.base::OnceCallback.256"*, %"class.base::OnceCallback.256"** %14, align 8
  %16 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %29 [
    i64 0, label %18
    i64 1, label %20
  ]

18:                                               ; preds = %11
  %19 = bitcast %"class.absl::variant"* %13 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %19) #12
  br label %29

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %21) #12
  %22 = bitcast %"class.absl::variant"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.absl::variant"* %13 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %11, %18, %20, %26
  store i64 -1, i64* %16, align 8
  %30 = getelementptr inbounds %"class.base::OnceCallback.256", %"class.base::OnceCallback.256"* %15, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback.256"* %15 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.absl::variant"* %13 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  store i64 0, i64* %16, align 8
  br label %57

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 0
  %36 = load %"class.absl::variant"*, %"class.absl::variant"** %35, align 8
  %37 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 1
  %38 = load %"class.base::OnceCallback.256"*, %"class.base::OnceCallback.256"** %37, align 8
  %39 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %52 [
    i64 0, label %41
    i64 1, label %43
  ]

41:                                               ; preds = %34
  %42 = bitcast %"class.absl::variant"* %36 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %42) #12
  br label %52

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %44) #12
  %45 = bitcast %"class.absl::variant"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = bitcast %"class.absl::variant"* %36 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %34, %41, %43, %49
  store i64 -1, i64* %39, align 8
  %53 = getelementptr inbounds %"class.base::OnceCallback.256", %"class.base::OnceCallback.256"* %38, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.base::OnceCallback.256"* %38 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.absl::variant"* %36 to i64*
  store i64 %55, i64* %56, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8
  store i64 0, i64* %39, align 8
  br label %57

57:                                               ; preds = %52, %29, %3
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.261"*, %"class.gfx::Range"*, %"class.gfx::Range"*) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Range"* %2 to i64
  %5 = ptrtoint %"class.gfx::Range"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Range"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.261"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Range"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Range"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Range"* %24, %"class.gfx::Range"* %2
  %26 = ptrtoint %"class.gfx::Range"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Range"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Range"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to %"class.gfx::Range"*
  %43 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Range"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %16, i64 %28
  store %"class.gfx::Range"* %48, %"class.gfx::Range"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Range"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  %55 = bitcast %"class.std::__1::vector.261"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.261"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.261"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to %"class.gfx::Range"*
  %76 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Range"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.261"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %75, i64 %72
  store %"class.gfx::Range"* %79, %"class.gfx::Range"** %8, align 8
  %80 = bitcast %"class.gfx::Range"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.gfx::Range"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Range"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.251"*, %"class.std::__1::unique_ptr.253"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.253"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.251"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.251"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.253"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.253"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.253"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.253"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.253"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.253"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.253"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.253"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.253"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.commander::CommandItem"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.253"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.253"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.253"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.253"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !76

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.253"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.253"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.253"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.253"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.253"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.253"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.253"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.253"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.253"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.253"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.253"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.253"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.253"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.253"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.253"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.253"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.253"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.253"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.253"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.253"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.253"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.253"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.253"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.253"*, %"class.std::__1::unique_ptr.253"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.253"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.253"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.253"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.253"*
  %138 = icmp eq %"class.std::__1::unique_ptr.253"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.253"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %142, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %142, align 8
  %144 = icmp eq %"struct.commander::CommandItem"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"struct.commander::CommandItem"* %143 to void (%"struct.commander::CommandItem"*)***
  %147 = load void (%"struct.commander::CommandItem"*)**, void (%"struct.commander::CommandItem"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %147, i64 1
  %149 = load void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %148, align 8
  tail call void %149(%"struct.commander::CommandItem"* nonnull %143) #12
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.253"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"*, %"class.std::__1::basic_string"* dereferenceable(24), double, %"class.std::__1::vector.261"* dereferenceable(24)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorINS3_10unique_ptrIN9commander11CommandItemENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEEP7BrowserRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENSB_IDsEEEEEJNS0_17UnretainedWrapperISE_EEEEEFSD_SM_EE3RunEPNS0_13BindStateBaseESM_(%"class.std::__1::vector.251"* noalias sret, %"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"* dereferenceable(24)) #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.std::__1::vector.251"*, %class.Browser*, %"class.std::__1::basic_string"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %7 = bitcast void ()** %6 to %class.Browser**
  %8 = load %class.Browser*, %class.Browser** %7, align 8, !noalias !77
  %9 = load void (%"class.std::__1::vector.251"*, %class.Browser*, %"class.std::__1::basic_string"*)*, void (%"class.std::__1::vector.251"*, %class.Browser*, %"class.std::__1::basic_string"*)** %5, align 8, !noalias !80
  tail call void %9(%"class.std::__1::vector.251"* sret %0, %class.Browser* %8, %"class.std::__1::basic_string"* dereferenceable(24) %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFNSt3__16vectorINS2_10unique_ptrIN9commander11CommandItemENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEEP7BrowserRKNS2_12basic_stringIDsNS2_11char_traitsIDsEENSA_IDsEEEEEJNS0_17UnretainedWrapperISD_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESX_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m(%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* dereferenceable(16), i64) local_unnamed_addr #2 comdat align 2 {
  switch i64 %1, label %51 [
    i64 0, label %3
    i64 1, label %30
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* %0, i64 0, i32 0
  %5 = load %"class.absl::variant"*, %"class.absl::variant"** %4, align 8
  %6 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* %0, i64 0, i32 1
  %7 = load %"struct.std::__1::pair.258"*, %"struct.std::__1::pair.258"** %6, align 8
  %8 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  switch i64 %9, label %21 [
    i64 0, label %10
    i64 1, label %12
  ]

10:                                               ; preds = %3
  %11 = bitcast %"class.absl::variant"* %5 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %11) #12
  br label %21

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %13) #12
  %14 = bitcast %"class.absl::variant"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = bitcast %"class.absl::variant"* %5 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %3, %10, %12, %18
  store i64 -1, i64* %8, align 8
  %22 = bitcast %"class.absl::variant"* %5 to i8*
  %23 = bitcast %"struct.std::__1::pair.258"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #12
  %24 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::pair.258", %"struct.std::__1::pair.258"* %7, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::RepeatingCallback.259", %"class.base::RepeatingCallback.259"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::RepeatingCallback.259"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::RepeatingCallback.259"* %24 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  store i64 1, i64* %8, align 8
  br label %78

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* %0, i64 0, i32 1
  %32 = load %"struct.std::__1::pair.258"*, %"struct.std::__1::pair.258"** %31, align 8
  %33 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* %0, i64 0, i32 0
  %34 = load %"class.absl::variant"*, %"class.absl::variant"** %33, align 8
  %35 = bitcast %"class.absl::variant"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %30
  %40 = bitcast %"class.absl::variant"* %34 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %30, %39
  %43 = bitcast %"class.absl::variant"* %34 to i8*
  %44 = bitcast %"struct.std::__1::pair.258"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #12
  %45 = bitcast %"struct.std::__1::pair.258"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  store i8 0, i8* %46, align 1
  %47 = bitcast %"struct.std::__1::pair.258"* %32 to i16*
  store i16 0, i16* %47, align 2
  %48 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.258", %"struct.std::__1::pair.258"* %32, i64 0, i32 1, i32 0
  %50 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %48, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %49) #12
  br label %78

51:                                               ; preds = %2
  %52 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* %0, i64 0, i32 0
  %53 = load %"class.absl::variant"*, %"class.absl::variant"** %52, align 8
  %54 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor.409"* %0, i64 0, i32 1
  %55 = load %"struct.std::__1::pair.258"*, %"struct.std::__1::pair.258"** %54, align 8
  %56 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  switch i64 %57, label %69 [
    i64 0, label %58
    i64 1, label %60
  ]

58:                                               ; preds = %51
  %59 = bitcast %"class.absl::variant"* %53 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %59) #12
  br label %69

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %61) #12
  %62 = bitcast %"class.absl::variant"* %53 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %60
  %67 = bitcast %"class.absl::variant"* %53 to i8**
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %51, %58, %60, %66
  store i64 -1, i64* %56, align 8
  %70 = bitcast %"class.absl::variant"* %53 to i8*
  %71 = bitcast %"struct.std::__1::pair.258"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #12
  %72 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.std::__1::pair.258", %"struct.std::__1::pair.258"* %55, i64 0, i32 1
  %74 = getelementptr inbounds %"class.base::RepeatingCallback.259", %"class.base::RepeatingCallback.259"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.base::RepeatingCallback.259"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::RepeatingCallback.259"* %72 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %74, align 8
  store i64 1, i64* %56, align 8
  br label %78

78:                                               ; preds = %69, %42, %21
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFNSt3__16vectorINS3_10unique_ptrIN9commander11CommandItemENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEEP7BrowserRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENSB_IDsEEEEEJNS0_17UnretainedWrapperISE_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFNSt3__16vectorINS3_10unique_ptrIN9commander11CommandItemENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEEP7BrowserRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENSB_IDsEEEEEJNS0_17UnretainedWrapperISE_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIPFNSt3__16vectorINS1_10unique_ptrIN9commander11CommandItemENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEEP7BrowserRKNS1_12basic_stringIDsNS1_11char_traitsIDsEENS9_IDsEEEEEJNS_8internal17UnretainedWrapperISC_EEEEENS_17RepeatingCallbackINSN_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIPFNSt3__16vectorINS1_10unique_ptrIN9commander11CommandItemENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEEP7BrowserRKNS1_12basic_stringIDsNS1_11char_traitsIDsEENS9_IDsEEEEEJNS_8internal17UnretainedWrapperISC_EEEEENS_17RepeatingCallbackINSN_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__19make_pairIRNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN4base17RepeatingCallbackIFNS_6vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteISD_EEEENS4_ISG_EEEERKS6_EEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSO_IT0_E4typeEEEOSP_OSS_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__19make_pairIRNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN4base17RepeatingCallbackIFNS_6vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteISD_EEEENS4_ISG_EEEERKS6_EEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSO_IT0_E4typeEEEOSP_OSS_"}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !19}
!21 = distinct !{!21, !17}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES5_ibRKNS8_9nullopt_tEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES5_ibRKNS8_9nullopt_tEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS_8internal17UnretainedWrapperIS1_EES3_ibRKNS6_9nullopt_tEEEENS_12OnceCallbackINSD_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS_8internal17UnretainedWrapperIS1_EES3_ibRKNS6_9nullopt_tEEEENS_12OnceCallbackINSD_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !17}
!33 = distinct !{!33, !19}
!34 = distinct !{!34, !19}
!35 = distinct !{!35, !17}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !17}
!42 = distinct !{!42, !19}
!43 = distinct !{!43, !19}
!44 = distinct !{!44, !17}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !17}
!51 = distinct !{!51, !19}
!52 = distinct !{!52, !19}
!53 = distinct !{!53, !17}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !17}
!60 = distinct !{!60, !19}
!61 = distinct !{!61, !19}
!62 = distinct !{!62, !17}
!63 = distinct !{!63, !17}
!64 = distinct !{!64, !19}
!65 = distinct !{!65, !66, !17}
!66 = !{!"llvm.loop.unroll.runtime.disable"}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !17}
!73 = distinct !{!73, !19}
!74 = distinct !{!74, !19}
!75 = distinct !{!75, !17}
!76 = distinct !{!76, !19}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorINS3_10unique_ptrIN9commander11CommandItemENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEEP7BrowserRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENSB_IDsEEEEEJNS0_17UnretainedWrapperISE_EEEEEFSD_SM_EE7RunImplIRKSO_RKNS3_5tupleIJSQ_EEEJLm0EEEESD_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEESM_: argument 0"}
!79 = distinct !{!79, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorINS3_10unique_ptrIN9commander11CommandItemENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEEP7BrowserRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENSB_IDsEEEEEJNS0_17UnretainedWrapperISE_EEEEEFSD_SM_EE7RunImplIRKSO_RKNS3_5tupleIJSQ_EEEJLm0EEEESD_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEESM_"}
!80 = !{!81, !83, !78}
!81 = distinct !{!81, !82, !"_ZN4base8internal13FunctorTraitsIPFNSt3__16vectorINS2_10unique_ptrIN9commander11CommandItemENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEEP7BrowserRKNS2_12basic_stringIDsNS2_11char_traitsIDsEENSA_IDsEEEEEvE6InvokeIRKSN_JSE_SL_EEESC_OT_DpOT0_: argument 0"}
!82 = distinct !{!82, !"_ZN4base8internal13FunctorTraitsIPFNSt3__16vectorINS2_10unique_ptrIN9commander11CommandItemENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEEP7BrowserRKNS2_12basic_stringIDsNS2_11char_traitsIDsEENSA_IDsEEEEEvE6InvokeIRKSN_JSE_SL_EEESC_OT_DpOT0_"}
!83 = distinct !{!83, !84, !"_ZN4base8internal12InvokeHelperILb0ENSt3__16vectorINS2_10unique_ptrIN9commander11CommandItemENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEEE8MakeItSoIRKPFSC_P7BrowserRKNS2_12basic_stringIDsNS2_11char_traitsIDsEENSA_IDsEEEEEJSG_SN_EEESC_OT_DpOT0_: argument 0"}
!84 = distinct !{!84, !"_ZN4base8internal12InvokeHelperILb0ENSt3__16vectorINS2_10unique_ptrIN9commander11CommandItemENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEEE8MakeItSoIRKPFSC_P7BrowserRKNS2_12basic_stringIDsNS2_11char_traitsIDsEENSA_IDsEEEEEJSG_SN_EEESC_OT_DpOT0_"}
