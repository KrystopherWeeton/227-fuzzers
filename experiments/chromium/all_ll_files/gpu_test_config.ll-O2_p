; ModuleID = '../../gpu/config/gpu_test_config.cc'
source_filename = "../../gpu/config/gpu_test_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::GPUTestConfig" = type { i32 (...)**, i32, %"class.std::__1::vector", i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.gpu::GPUTestBotConfig" = type { %"class.gpu::GPUTestConfig" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.gpu::GPUInfo" = type { %"class.base::TimeDelta", i8, i8, [6 x i8], %"struct.gpu::GPUInfo::GPUDevice", %"class.std::__1::vector.6", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, %"class.std::__1::basic_string", i8, i8, i8, i8, [4 x i8], %"struct.gpu::VideoDecodeAcceleratorCapabilities", %"class.std::__1::vector.20", i8, %"class.std::__1::vector.27", i8, i8, %"class.absl::optional" }
%"class.base::TimeDelta" = type { i64 }
%"struct.gpu::GPUInfo::GPUDevice" = type <{ i32, i32, i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.gpu::GPUInfo::GPUDevice"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.gpu::VideoDecodeAcceleratorCapabilities" = type <{ %"class.std::__1::vector.13", i32, [4 x i8] }>
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.15" }
%"struct.gpu::VideoDecodeAcceleratorSupportedProfile" = type <{ i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.22" }
%"struct.gpu::VideoEncodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", i32, i32 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.36" }
%"struct.gpu::ImageDecodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { i32*, i32*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i32* }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.41 }
%union.anon.41 = type { %"class.gpu::VulkanInfo" }
%"class.gpu::VulkanInfo" = type { i32, i32, %"class.std::__1::vector.42", %"class.std::__1::vector.49", %"class.std::__1::vector.56", %"class.std::__1::vector.63" }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair.44" }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %struct.VkExtensionProperties* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { i8**, i8**, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i8** }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.58" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %struct.VkLayerProperties* }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.std::__1::__compressed_pair.72" }
%"class.gpu::VulkanPhysicalDeviceInfo" = type { %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %"class.std::__1::vector.42", %struct.VkPhysicalDeviceFeatures, i8, i8, %"class.std::__1::vector.65" }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.67" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.gpu::VulkanPhysicalDeviceInfo"* }
%"class.gpu::GPUTestExpectationsParser" = type { %"class.std::__1::vector.77", %"class.std::__1::vector.84" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.gpu::GPUTestExpectationsParser::GPUTestExpectationEntry"*, %"struct.gpu::GPUTestExpectationsParser::GPUTestExpectationEntry"*, %"class.std::__1::__compressed_pair.79" }
%"struct.gpu::GPUTestExpectationsParser::GPUTestExpectationEntry" = type { %"class.std::__1::basic_string", %"class.gpu::GPUTestConfig", i32, i64 }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.gpu::GPUTestExpectationsParser::GPUTestExpectationEntry"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::basic_string"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.84", %"class.std::__1::map", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN3gpu13GPUTestConfigE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::GPUTestConfig"*)* @_ZN3gpu13GPUTestConfigD2Ev to i8*), i8* bitcast (void (%"class.gpu::GPUTestConfig"*)* @_ZN3gpu13GPUTestConfigD0Ev to i8*), i8* bitcast (void (%"class.gpu::GPUTestConfig"*, i32)* @_ZN3gpu13GPUTestConfig12AddGPUVendorEj to i8*), i8* bitcast (i1 (%"class.gpu::GPUTestConfig"*)* @_ZNK3gpu13GPUTestConfig7IsValidEv to i8*)] }, align 8
@.str = private unnamed_addr constant [36 x i8] c"../../gpu/config/gpu_test_config.cc\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Fail to identify GPU\00", align 1
@_ZTVN3gpu16GPUTestBotConfigE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::GPUTestConfig"*)* @_ZN3gpu13GPUTestConfigD2Ev to i8*), i8* bitcast (void (%"class.gpu::GPUTestBotConfig"*)* @_ZN3gpu16GPUTestBotConfigD0Ev to i8*), i8* bitcast (void (%"class.gpu::GPUTestBotConfig"*, i32)* @_ZN3gpu16GPUTestBotConfig12AddGPUVendorEj to i8*), i8* bitcast (i1 (%"class.gpu::GPUTestBotConfig"*)* @_ZNK3gpu16GPUTestBotConfig7IsValidEv to i8*)] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3gpu13GPUTestConfigC1Ev = hidden unnamed_addr alias void (%"class.gpu::GPUTestConfig"*), void (%"class.gpu::GPUTestConfig"*)* @_ZN3gpu13GPUTestConfigC2Ev
@_ZN3gpu13GPUTestConfigC1ERKS0_ = hidden unnamed_addr alias void (%"class.gpu::GPUTestConfig"*, %"class.gpu::GPUTestConfig"*), void (%"class.gpu::GPUTestConfig"*, %"class.gpu::GPUTestConfig"*)* @_ZN3gpu13GPUTestConfigC2ERKS0_
@_ZN3gpu13GPUTestConfigD1Ev = hidden unnamed_addr alias void (%"class.gpu::GPUTestConfig"*), void (%"class.gpu::GPUTestConfig"*)* @_ZN3gpu13GPUTestConfigD2Ev
@_ZN3gpu16GPUTestBotConfigD2Ev = hidden unnamed_addr alias void (%"class.gpu::GPUTestBotConfig"*), bitcast (void (%"class.gpu::GPUTestConfig"*)* @_ZN3gpu13GPUTestConfigD2Ev to void (%"class.gpu::GPUTestBotConfig"*)*)
@_ZN3gpu16GPUTestBotConfigD1Ev = hidden unnamed_addr alias void (%"class.gpu::GPUTestBotConfig"*), bitcast (void (%"class.gpu::GPUTestConfig"*)* @_ZN3gpu13GPUTestConfigD2Ev to void (%"class.gpu::GPUTestBotConfig"*)*)

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13GPUTestConfigC2Ev(%"class.gpu::GPUTestConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13GPUTestConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13GPUTestConfigC2ERKS0_(%"class.gpu::GPUTestConfig"*, %"class.gpu::GPUTestConfig"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13GPUTestConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 2
  %9 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %2
  %19 = icmp ugt i64 %16, 4611686018427387903
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #13
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #14
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 1
  %26 = bitcast i32** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds i32, i32* %24, i64 %16
  %29 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i32* %28, i32** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = load i64, i64* %11, align 8
  %33 = bitcast i32** %25 to i64*
  %34 = ptrtoint i8* %23 to i64
  %35 = ptrtoint i32* %31 to i64
  %36 = sub i64 %32, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %22
  %39 = lshr exact i64 %36, 2
  %40 = bitcast i32* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %40, i64 %36, i1 false) #12
  %41 = getelementptr inbounds i32, i32* %24, i64 %39
  %42 = ptrtoint i32* %41 to i64
  br label %43

43:                                               ; preds = %38, %22
  %44 = phi i64 [ %42, %38 ], [ %34, %22 ]
  store i64 %44, i64* %33, align 8
  br label %45

45:                                               ; preds = %2, %43
  %46 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 3
  %47 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 3
  %48 = bitcast i32* %46 to i8*
  %49 = bitcast i32* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13GPUTestConfigD2Ev(%"class.gpu::GPUTestConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13GPUTestConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13GPUTestConfigD0Ev(%"class.gpu::GPUTestConfig"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13GPUTestConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.gpu::GPUTestConfig"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu13GPUTestConfig6set_osEi(%"class.gpu::GPUTestConfig"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13GPUTestConfig12AddGPUVendorEj(%"class.gpu::GPUTestConfig"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i32*, i32** %4, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %6, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  store i32 %1, i32* %6, align 4
  %12 = getelementptr inbounds i32, i32* %6, i64 1
  %13 = ptrtoint i32* %12 to i64
  store i64 %13, i64* %5, align 8
  br label %66

14:                                               ; preds = %2
  %15 = ptrtoint i32* %9 to i64
  %16 = load i64, i64* %7, align 8
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 2
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 4611686018427387903
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #13
  unreachable

23:                                               ; preds = %14
  %24 = bitcast i32** %8 to i64*
  %25 = icmp ult i64 %18, 2305843009213693951
  br i1 %25, label %26, label %34

26:                                               ; preds = %23
  %27 = ashr exact i64 %17, 1
  %28 = icmp ult i64 %27, %19
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %26
  %32 = icmp ugt i64 %29, 4611686018427387903
  br i1 %32, label %33, label %34

33:                                               ; preds = %31
  tail call void @abort() #13
  unreachable

34:                                               ; preds = %31, %23
  %35 = phi i64 [ %29, %31 ], [ 4611686018427387903, %23 ]
  %36 = shl i64 %35, 2
  %37 = tail call i8* @_Znwm(i64 %36) #14
  %38 = bitcast i8* %37 to i32*
  br label %39

39:                                               ; preds = %34, %26
  %40 = phi i64 [ %35, %34 ], [ 0, %26 ]
  %41 = phi i32* [ %38, %34 ], [ null, %26 ]
  %42 = getelementptr inbounds i32, i32* %41, i64 %18
  %43 = getelementptr inbounds i32, i32* %41, i64 %40
  %44 = ptrtoint i32* %43 to i64
  store i32 %1, i32* %42, align 4
  %45 = getelementptr inbounds i32, i32* %42, i64 1
  %46 = ptrtoint i32* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = load i64, i64* %5, align 8
  %50 = ptrtoint i32* %48 to i64
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 2
  %53 = sub nsw i64 0, %52
  %54 = getelementptr inbounds i32, i32* %42, i64 %53
  %55 = ptrtoint i32* %54 to i64
  %56 = icmp sgt i64 %51, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %39
  %58 = bitcast i32* %54 to i8*
  %59 = bitcast i32* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %59, i64 %51, i1 false) #12
  %60 = load i32*, i32** %47, align 8
  br label %61

61:                                               ; preds = %57, %39
  %62 = phi i32* [ %48, %39 ], [ %60, %57 ]
  store i64 %55, i64* %7, align 8
  store i64 %46, i64* %5, align 8
  store i64 %44, i64* %24, align 8
  %63 = icmp eq i32* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = bitcast i32* %62 to i8*
  tail call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %11, %61, %64
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu13GPUTestConfig17set_gpu_device_idEj(%"class.gpu::GPUTestConfig"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu13GPUTestConfig14set_build_typeEi(%"class.gpu::GPUTestConfig"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu13GPUTestConfig7set_apiEi(%"class.gpu::GPUTestConfig"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 5
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu13GPUTestConfig19set_command_decoderEi(%"class.gpu::GPUTestConfig"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu13GPUTestConfig7IsValidEv(%"class.gpu::GPUTestConfig"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %14, label %19

14:                                               ; preds = %5
  %15 = inttoptr i64 %11 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %1, %14
  br label %19

19:                                               ; preds = %14, %5, %18
  %20 = phi i1 [ true, %18 ], [ false, %5 ], [ false, %14 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu13GPUTestConfig12OverlapsWithERKS0_(%"class.gpu::GPUTestConfig"* nocapture readonly, %"class.gpu::GPUTestConfig"* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 0
  %10 = and i32 %8, %4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %82, label %13

13:                                               ; preds = %6, %2
  %14 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 2
  %15 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 2
  %22 = icmp eq i64 %20, 0
  %23 = inttoptr i64 %19 to i32*
  br i1 %22, label %50, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2
  %26 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast i32** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 2
  %33 = icmp eq i64 %31, 0
  %34 = inttoptr i64 %30 to i32*
  br i1 %33, label %50, label %35

35:                                               ; preds = %24, %47
  %36 = phi i64 [ %48, %47 ], [ 0, %24 ]
  %37 = getelementptr inbounds i32, i32* %23, i64 %36
  %38 = load i32, i32* %37, align 4
  br label %41

39:                                               ; preds = %41
  %40 = icmp ult i64 %46, %32
  br i1 %40, label %41, label %47

41:                                               ; preds = %35, %39
  %42 = phi i64 [ 0, %35 ], [ %46, %39 ]
  %43 = getelementptr inbounds i32, i32* %34, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %38, %44
  %46 = add nuw i64 %42, 1
  br i1 %45, label %50, label %39

47:                                               ; preds = %39
  %48 = add nuw i64 %36, 1
  %49 = icmp ult i64 %48, %21
  br i1 %49, label %35, label %82

50:                                               ; preds = %41, %24, %13
  %51 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  %58 = icmp eq i32 %56, %52
  %59 = or i1 %57, %58
  br i1 %59, label %60, label %82

60:                                               ; preds = %54, %50
  %61 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 4
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 4
  %66 = load i32, i32* %65, align 4
  %67 = icmp ne i32 %66, 0
  %68 = and i32 %66, %62
  %69 = icmp eq i32 %68, 0
  %70 = and i1 %67, %69
  br i1 %70, label %82, label %71

71:                                               ; preds = %64, %60
  %72 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 5
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 5
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  %79 = icmp eq i32 %77, %73
  %80 = or i1 %78, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %75, %71
  br label %82

82:                                               ; preds = %47, %75, %64, %54, %6, %81
  %83 = phi i1 [ true, %81 ], [ false, %6 ], [ false, %54 ], [ false, %64 ], [ false, %75 ], [ false, %47 ]
  ret i1 %83
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu13GPUTestConfig14ClearGPUVendorEv(%"class.gpu::GPUTestConfig"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::vector"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  store i64 %4, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GPUTestBotConfigD0Ev(%"class.gpu::GPUTestBotConfig"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13GPUTestConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.gpu::GPUTestBotConfig"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GPUTestBotConfig12AddGPUVendorEj(%"class.gpu::GPUTestBotConfig"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0
  tail call void @_ZN3gpu13GPUTestConfig12AddGPUVendorEj(%"class.gpu::GPUTestConfig"* %3, i32 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu16GPUTestBotConfig10SetGPUInfoERKNS_7GPUInfoE(%"class.gpu::GPUTestBotConfig"*, %"struct.gpu::GPUInfo"* nocapture readonly dereferenceable(696)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2
  %12 = bitcast %"class.std::__1::vector"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = load i32, i32* %3, align 8
  %17 = bitcast %"class.gpu::GPUTestBotConfig"* %0 to void (%"class.gpu::GPUTestBotConfig"*, i32)***
  %18 = load void (%"class.gpu::GPUTestBotConfig"*, i32)**, void (%"class.gpu::GPUTestBotConfig"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gpu::GPUTestBotConfig"*, i32)*, void (%"class.gpu::GPUTestBotConfig"*, i32)** %18, i64 2
  %20 = load void (%"class.gpu::GPUTestBotConfig"*, i32)*, void (%"class.gpu::GPUTestBotConfig"*, i32)** %19, align 8
  tail call void %20(%"class.gpu::GPUTestBotConfig"* %0, i32 %16) #12
  %21 = load i32, i32* %7, align 4
  %22 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 3
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 23
  %24 = load i8, i8* %23, align 2, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 6
  br i1 %25, label %28, label %27

27:                                               ; preds = %10
  store i32 1, i32* %26, align 4
  br label %29

28:                                               ; preds = %10
  store i32 2, i32* %26, align 4
  br label %29

29:                                               ; preds = %27, %28, %6, %2
  %30 = phi i1 [ false, %2 ], [ false, %6 ], [ true, %28 ], [ true, %27 ]
  ret i1 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu16GPUTestBotConfig7IsValidEv(%"class.gpu::GPUTestBotConfig"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %29 [
    i32 1, label %4
    i32 2, label %4
    i32 4, label %4
    i32 8, label %4
    i32 16, label %4
    i32 1024, label %4
    i32 2048, label %4
    i32 4096, label %4
    i32 8192, label %4
    i32 16384, label %4
    i32 32768, label %4
    i32 65536, label %4
    i32 131072, label %4
    i32 262144, label %4
    i32 524288, label %4
    i32 1048576, label %4
    i32 2097152, label %4
    i32 33554432, label %4
    i32 67108864, label %4
    i32 134217728, label %4
    i32 268435456, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %5 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = icmp eq i64 %11, 4
  br i1 %12, label %13, label %29

13:                                               ; preds = %4
  %14 = inttoptr i64 %10 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = and i32 %3, 4193280
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %17, %20
  %25 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 4
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  %28 = icmp ult i32 %27, 2
  br label %29

29:                                               ; preds = %24, %20, %13, %4, %1
  %30 = phi i1 [ false, %1 ], [ false, %4 ], [ false, %13 ], [ false, %20 ], [ %28, %24 ]
  ret i1 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu16GPUTestBotConfig7MatchesERKNS_13GPUTestConfigE(%"class.gpu::GPUTestBotConfig"* nocapture readonly, %"class.gpu::GPUTestConfig"* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, %4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %69, label %11

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 2
  %20 = icmp eq i64 %18, 0
  %21 = inttoptr i64 %17 to i32*
  br i1 %20, label %34, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = load i32, i32* %24, align 4
  br label %28

26:                                               ; preds = %28
  %27 = icmp ult i64 %33, %19
  br i1 %27, label %28, label %69

28:                                               ; preds = %22, %26
  %29 = phi i64 [ 0, %22 ], [ %33, %26 ]
  %30 = getelementptr inbounds i32, i32* %21, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, %25
  %33 = add nuw i64 %29, 1
  br i1 %32, label %34, label %26

34:                                               ; preds = %28, %11
  %35 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, %36
  br i1 %41, label %42, label %69

42:                                               ; preds = %38, %34
  %43 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 4
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, %44
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %69, label %51

51:                                               ; preds = %42, %46
  %52 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 5
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 5
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, %53
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %51, %55
  %61 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %1, i64 0, i32 6
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 6
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %62
  br i1 %67, label %68, label %69

68:                                               ; preds = %64, %60
  br label %69

69:                                               ; preds = %26, %64, %55, %46, %38, %6, %68
  %70 = phi i1 [ true, %68 ], [ false, %6 ], [ false, %38 ], [ false, %46 ], [ false, %55 ], [ false, %64 ], [ false, %26 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gpu16GPUTestBotConfig7MatchesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gpu::GPUTestBotConfig"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gpu::GPUTestExpectationsParser", align 8
  %4 = alloca %"class.gpu::GPUTestConfig", align 8
  %5 = bitcast %"class.gpu::GPUTestExpectationsParser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #12
  %6 = bitcast %"class.gpu::GPUTestExpectationsParser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN3gpu25GPUTestExpectationsParserC1Ev(%"class.gpu::GPUTestExpectationsParser"* nonnull %3) #12
  %7 = bitcast %"class.gpu::GPUTestConfig"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13GPUTestConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 2
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false) #12
  %12 = call zeroext i1 @_ZN3gpu25GPUTestExpectationsParser11ParseConfigERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_13GPUTestConfigE(%"class.gpu::GPUTestExpectationsParser"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.gpu::GPUTestConfig"* nonnull %4) #12
  br i1 %12, label %13, label %78

13:                                               ; preds = %2
  %14 = load i32, i32* %9, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, %14
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %78, label %21

21:                                               ; preds = %16, %13
  %22 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 2, i32 0, i32 1
  %23 = bitcast i32** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %10 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  %30 = inttoptr i64 %26 to i32*
  br i1 %29, label %43, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %33, align 4
  br label %37

35:                                               ; preds = %37
  %36 = icmp ult i64 %42, %28
  br i1 %36, label %37, label %78

37:                                               ; preds = %35, %31
  %38 = phi i64 [ 0, %31 ], [ %42, %35 ]
  %39 = getelementptr inbounds i32, i32* %30, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %34
  %42 = add nuw i64 %38, 1
  br i1 %41, label %43, label %35

43:                                               ; preds = %37, %21
  %44 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, %45
  br i1 %50, label %51, label %78

51:                                               ; preds = %47, %43
  %52 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 4
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, %53
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %78, label %60

60:                                               ; preds = %55, %51
  %61 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 5
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 5
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, %62
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %64, %60
  %70 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 6
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 6
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %71
  br i1 %76, label %77, label %78

77:                                               ; preds = %73, %69
  br label %78

78:                                               ; preds = %35, %77, %73, %64, %55, %47, %16, %2
  %79 = phi i1 [ false, %2 ], [ true, %77 ], [ false, %16 ], [ false, %47 ], [ false, %55 ], [ false, %64 ], [ false, %73 ], [ false, %35 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13GPUTestConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %80 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 2, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = icmp eq i32* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %78
  %84 = ptrtoint i32* %81 to i64
  %85 = getelementptr inbounds %"class.gpu::GPUTestConfig", %"class.gpu::GPUTestConfig"* %4, i64 0, i32 2, i32 0, i32 1
  %86 = bitcast i32** %85 to i64*
  store i64 %84, i64* %86, align 8
  %87 = bitcast i32* %81 to i8*
  call void @_ZdlPv(i8* %87) #14
  br label %88

88:                                               ; preds = %78, %83
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #12
  call void @_ZN3gpu25GPUTestExpectationsParserD1Ev(%"class.gpu::GPUTestExpectationsParser"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #12
  ret i1 %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3gpu25GPUTestExpectationsParserC1Ev(%"class.gpu::GPUTestExpectationsParser"*) unnamed_addr #6

declare zeroext i1 @_ZN3gpu25GPUTestExpectationsParser11ParseConfigERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_13GPUTestConfigE(%"class.gpu::GPUTestExpectationsParser"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.gpu::GPUTestConfig"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3gpu25GPUTestExpectationsParserD1Ev(%"class.gpu::GPUTestExpectationsParser"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu16GPUTestBotConfig17LoadCurrentConfigEPKNS_7GPUInfoE(%"class.gpu::GPUTestBotConfig"*, %"struct.gpu::GPUInfo"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.gpu::GPUInfo", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = icmp eq %"struct.gpu::GPUInfo"* %1, null
  br i1 %5, label %6, label %45

6:                                                ; preds = %2
  %7 = bitcast %"struct.gpu::GPUInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 696, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 696, i1 false)
  call void @_ZN3gpu7GPUInfoC1Ev(%"struct.gpu::GPUInfo"* nonnull %3) #12
  %8 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %9 = call zeroext i1 @_ZN3gpu24CollectBasicGraphicsInfoEPKN4base11CommandLineEPNS_7GPUInfoE(%"class.base::CommandLine"* %8, %"struct.gpu::GPUInfo"* nonnull %3) #12
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %11, label %12, label %43

12:                                               ; preds = %10
  %13 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %13) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 305, i32 2) #12
  %14 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %14 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 20) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %13) #12
  br label %43

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %3, i64 0, i32 4, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %3, i64 0, i32 4, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %43, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2
  %27 = bitcast %"class.std::__1::vector"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.gpu::GPUTestBotConfig"* %0 to void (%"class.gpu::GPUTestBotConfig"*, i32)***
  %32 = load void (%"class.gpu::GPUTestBotConfig"*, i32)**, void (%"class.gpu::GPUTestBotConfig"*, i32)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gpu::GPUTestBotConfig"*, i32)*, void (%"class.gpu::GPUTestBotConfig"*, i32)** %32, i64 2
  %34 = load void (%"class.gpu::GPUTestBotConfig"*, i32)*, void (%"class.gpu::GPUTestBotConfig"*, i32)** %33, align 8
  call void %34(%"class.gpu::GPUTestBotConfig"* %0, i32 %19) #12
  %35 = load i32, i32* %22, align 4
  %36 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 3
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %3, i64 0, i32 23
  %38 = load i8, i8* %37, align 2, !range !2
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 6
  br i1 %39, label %42, label %41

41:                                               ; preds = %25
  store i32 1, i32* %40, align 4
  br label %43

42:                                               ; preds = %25
  store i32 2, i32* %40, align 4
  br label %43

43:                                               ; preds = %42, %41, %21, %17, %12, %10
  %44 = phi i1 [ false, %10 ], [ false, %12 ], [ false, %17 ], [ false, %21 ], [ true, %42 ], [ true, %41 ]
  call void @_ZN3gpu7GPUInfoD1Ev(%"struct.gpu::GPUInfo"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 696, i8* nonnull %7) #12
  br label %72

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %72, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2
  %55 = bitcast %"class.std::__1::vector"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = load i32, i32* %46, align 8
  %60 = bitcast %"class.gpu::GPUTestBotConfig"* %0 to void (%"class.gpu::GPUTestBotConfig"*, i32)***
  %61 = load void (%"class.gpu::GPUTestBotConfig"*, i32)**, void (%"class.gpu::GPUTestBotConfig"*, i32)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.gpu::GPUTestBotConfig"*, i32)*, void (%"class.gpu::GPUTestBotConfig"*, i32)** %61, i64 2
  %63 = load void (%"class.gpu::GPUTestBotConfig"*, i32)*, void (%"class.gpu::GPUTestBotConfig"*, i32)** %62, align 8
  tail call void %63(%"class.gpu::GPUTestBotConfig"* %0, i32 %59) #12
  %64 = load i32, i32* %50, align 4
  %65 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 3
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 23
  %67 = load i8, i8* %66, align 2, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 6
  br i1 %68, label %71, label %70

70:                                               ; preds = %53
  store i32 1, i32* %69, align 4
  br label %72

71:                                               ; preds = %53
  store i32 2, i32* %69, align 4
  br label %72

72:                                               ; preds = %43, %45, %49, %70, %71
  %73 = phi i1 [ %44, %43 ], [ false, %45 ], [ false, %49 ], [ true, %71 ], [ true, %70 ]
  %74 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 1
  store i32 33554432, i32* %74, align 8
  %75 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %0, i64 0, i32 0, i32 4
  store i32 1, i32* %75, align 4
  ret i1 %73
}

declare void @_ZN3gpu7GPUInfoC1Ev(%"struct.gpu::GPUInfo"*) unnamed_addr #6

declare zeroext i1 @_ZN3gpu24CollectBasicGraphicsInfoEPKN4base11CommandLineEPNS_7GPUInfoE(%"class.base::CommandLine"*, %"struct.gpu::GPUInfo"*) local_unnamed_addr #6

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #6

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #6

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3gpu7GPUInfoD1Ev(%"struct.gpu::GPUInfo"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu16GPUTestBotConfig20CurrentConfigMatchesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gpu::GPUTestBotConfig", align 8
  %3 = bitcast %"class.gpu::GPUTestBotConfig"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 16, i1 false)
  %4 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu16GPUTestBotConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %8 = call zeroext i1 @_ZN3gpu16GPUTestBotConfig17LoadCurrentConfigEPKNS_7GPUInfoE(%"class.gpu::GPUTestBotConfig"* nonnull %2, %"struct.gpu::GPUInfo"* null)
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = call zeroext i1 @_ZNK3gpu16GPUTestBotConfig7MatchesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gpu::GPUTestBotConfig"* nonnull %2, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i1 [ %10, %9 ], [ false, %1 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13GPUTestConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %13 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 2, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %11, %16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #12
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu16GPUTestBotConfig20CurrentConfigMatchesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector.84"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gpu::GPUTestBotConfig", align 8
  %3 = bitcast %"class.gpu::GPUTestBotConfig"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 16, i1 false)
  %4 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu16GPUTestBotConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %8 = call zeroext i1 @_ZN3gpu16GPUTestBotConfig17LoadCurrentConfigEPKNS_7GPUInfoE(%"class.gpu::GPUTestBotConfig"* nonnull %2, %"struct.gpu::GPUInfo"* null)
  br i1 %8, label %9, label %29

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.84"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %29, label %22

16:                                               ; preds = %22
  %17 = load i64, i64* %11, align 8
  %18 = load i64, i64* %13, align 8
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp ult i64 %28, %20
  br i1 %21, label %22, label %29

22:                                               ; preds = %9, %16
  %23 = phi i64 [ %18, %16 ], [ %14, %9 ]
  %24 = phi i64 [ %28, %16 ], [ 0, %9 ]
  %25 = inttoptr i64 %23 to %"class.std::__1::basic_string"*
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %24
  %27 = call zeroext i1 @_ZNK3gpu16GPUTestBotConfig7MatchesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gpu::GPUTestBotConfig"* nonnull %2, %"class.std::__1::basic_string"* dereferenceable(24) %26)
  %28 = add nuw i64 %24, 1
  br i1 %27, label %29, label %16

29:                                               ; preds = %16, %22, %9, %1
  %30 = phi i1 [ false, %1 ], [ false, %9 ], [ false, %16 ], [ true, %22 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13GPUTestConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %31 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = ptrtoint i32* %32 to i64
  %36 = getelementptr inbounds %"class.gpu::GPUTestBotConfig", %"class.gpu::GPUTestBotConfig"* %2, i64 0, i32 0, i32 2, i32 0, i32 1
  %37 = bitcast i32** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast i32* %32 to i8*
  call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %29, %34
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #12
  ret i1 %30
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3gpu16GPUTestBotConfig19GpuBlocklistedOnBotEv() local_unnamed_addr #8 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
