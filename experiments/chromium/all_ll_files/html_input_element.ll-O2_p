; ModuleID = '../../third_party/blink/renderer/core/html/forms/html_input_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/html_input_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.423", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.423" = type { %"class.base::RefCounted.424" }
%"class.base::RefCounted.424" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.425" }
%"class.blink::PersistentBase.425" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.428" }
%"class.blink::HeapHashMap.428" = type { %"class.WTF::HashMap.431" }
%"class.WTF::HashMap.431" = type { %"class.WTF::HashTable.432" }
%"class.WTF::HashTable.432" = type <{ %"struct.WTF::KeyValuePair.434"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.434" = type { %"class.blink::WeakMember.435", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.437" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.87", i32, [4 x i8], %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.260", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.199", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i64 }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::Worklist.130"* }
%"class.blink::Worklist.130" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::Worklist.137"* }
%"class.blink::Worklist.137" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::Worklist.144"* }
%"class.blink::Worklist.144" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::Worklist.151"* }
%"class.blink::Worklist.151" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist.158"* }
%"class.blink::Worklist.158" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist.165"* }
%"class.blink::Worklist.165" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::Worklist.172"* }
%"class.blink::Worklist.172" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.179", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.193", [4 x i8] }>
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181", %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { i64 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { float }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.202", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228" }
%"class.WTF::VectorBufferBase.228" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.241" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.130"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.137"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.144"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.151"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.158"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.300" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.259 }
%class.scoped_refptr.259 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.260" = type { %"struct.std::__1::__atomic_base.261" }
%"struct.std::__1::__atomic_base.261" = type { %"struct.std::__1::__cxx_atomic_impl.262" }
%"struct.std::__1::__cxx_atomic_impl.262" = type { %"struct.std::__1::__cxx_atomic_base_impl.263" }
%"struct.std::__1::__cxx_atomic_base_impl.263" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.69" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i32 }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.48", %"class.blink::Member.54", %"class.blink::Member.56", %"class.blink::Member.294", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.46", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.305", %"class.blink::Member.307", %"class.blink::Member.0", %"class.blink::Member.309", %"class.blink::Member.309", %"class.blink::Member.298", %"class.blink::Member.331", %"class.blink::Member.333", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.335", %"class.blink::HeapVector.337" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::Document"* }
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.313" }
%"class.blink::HeapHashMap.313" = type { %"class.WTF::HashMap.316" }
%"class.WTF::HashMap.316" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"struct.WTF::KeyValuePair.319"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.319" = type { %"class.WTF::AtomicString", %"class.blink::Member.320" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.60", i32, %"class.blink::HeapVector.324" }
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.324" = type { %"class.WTF::Vector.327" }
%"class.WTF::Vector.327" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329" }
%"class.WTF::VectorBufferBase.329" = type { %"class.blink::Member.60"*, i32, i32 }
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.25" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapHashMap.27"* }
%"class.blink::HeapHashMap.27" = type opaque
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.337" = type { %"class.WTF::Vector.340" }
%"class.WTF::Vector.340" = type { %"class.WTF::VectorBuffer.341" }
%"class.WTF::VectorBuffer.341" = type { %"class.WTF::VectorBufferBase.342" }
%"class.WTF::VectorBufferBase.342" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.345", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.347, %"class.WTF::Vector.348", %"class.WTF::Vector.348", %"class.blink::Member", %"class.blink::Member.353", %"class.blink::HeapHashSet", %"class.blink::Member.307", %"class.WTF::HashSet.361", %"class.WTF::TextPosition", %"class.blink::Member.365", %"class.blink::HeapVector.367", %"class.blink::Member.374" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.347 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.348" = type { %"class.WTF::VectorBuffer.349" }
%"class.WTF::VectorBuffer.349" = type { %"class.WTF::VectorBufferBase.350" }
%"class.WTF::VectorBufferBase.350" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.355" }
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.367" = type { %"class.WTF::Vector.370" }
%"class.WTF::Vector.370" = type { %"class.WTF::VectorBuffer.371" }
%"class.WTF::VectorBuffer.371" = type { %"class.WTF::VectorBufferBase.372" }
%"class.WTF::VectorBufferBase.372" = type { %"class.blink::Member.353"*, i32, i32 }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.19", %"class.blink::Member.21", %"class.blink::Member.44", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.23", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.36", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.30" }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { %"class.blink::Member.33"*, i32, i32 }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.19", %"class.blink::Member.21", %"class.blink::Member.44", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::HeapVector.36" = type { %"class.WTF::Vector.39" }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::Member.42"*, i32, i32 }
%"class.blink::Member.42" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type { i32 (...)**, %"class.blink::Member.52" }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::HTMLInputElement"* }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type { %"class.blink::GarbageCollectedMixin", i8, %"class.blink::Member.52" }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.60", %"class.blink::Member.62", %"class.blink::Member.62", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.279", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.286" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.66", float, i8, %class.scoped_refptr.68, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.68 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.74, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.264" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.69" }
%class.scoped_refptr.74 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.75", i64, %"class.WTF::Vector.77", %"class.WTF::Vector.82" }
%"class.WTF::RefCounted.75" = type { %"class.base::RefCounted.76" }
%"class.base::RefCounted.76" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.77" = type { %"class.WTF::VectorBuffer.78" }
%"class.WTF::VectorBuffer.78" = type { %"class.WTF::VectorBufferBase.79" }
%"class.WTF::VectorBufferBase.79" = type { i8*, i32, i32 }
%"class.WTF::Vector.82" = type { %"class.WTF::VectorBuffer.83" }
%"class.WTF::VectorBuffer.83" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.272 }
%class.scoped_refptr.272 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.273", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.273" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.274" }
%"struct.std::__1::atomic.274" = type { %"struct.std::__1::__atomic_base.275" }
%"struct.std::__1::__atomic_base.275" = type { %"struct.std::__1::__atomic_base.276" }
%"struct.std::__1::__atomic_base.276" = type { %"struct.std::__1::__cxx_atomic_impl.277" }
%"struct.std::__1::__cxx_atomic_impl.277" = type { %"struct.std::__1::__cxx_atomic_base_impl.278" }
%"struct.std::__1::__cxx_atomic_base_impl.278" = type { i8 }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.285 }
%class.scoped_refptr.285 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapVector.286" = type { %"class.WTF::Vector.289" }
%"class.WTF::Vector.289" = type { %"class.WTF::VectorBuffer.290" }
%"class.WTF::VectorBuffer.290" = type { %"class.WTF::VectorBufferBase.291" }
%"class.WTF::VectorBufferBase.291" = type { %"class.blink::Member.292"*, i32, i32 }
%"class.blink::Member.292" = type opaque
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type { %"class.blink::IdTargetObserver", %"class.blink::Member.52" }
%"class.blink::IdTargetObserver" = type { i32 (...)**, %"class.blink::Member.298", %"class.WTF::AtomicString" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.384", %"class.WTF::Vector.384", i8, i32, %"class.blink::Member.391", %"class.blink::Member.393", %"class.blink::Member.395", %"class.blink::Member.397", %"class.blink::Member.399", %"class.blink::Member.401", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.409", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.415", %"class.blink::Member.417", %"class.blink::Member.343", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.419", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.324", %"class.blink::Member.60", %"class.blink::Member.444", %"class.blink::Member.60", %"class.blink::Member.60", %"class.blink::Member.60", %"class.blink::UserActionElementSet", %"class.blink::Member.453", double, double, i64, i64, %"class.blink::HeapHashSet.455", %"class.blink::HeapHashSet.462", i16, i8, %"class.blink::Member.469", %"class.blink::Member.471", %"class.blink::Member.473", %"class.blink::Member.475", %"class.blink::TextLinkColors", %"class.blink::Member.497", i8, [7 x i8], %"class.blink::HeapHashMap.499", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.60", %"class.WTF::Vector.506", %"class.blink::Member.511", %"class.blink::Member.515", i8, %"class.blink::Member.60", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.517", %"class.blink::HeapVector.519", %"class.std::__1::unique_ptr.527", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.533", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.546", %"class.WTF::Vector.548", i8, i8, %"class.std::__1::unique_ptr.553", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.324", %"class.blink::HeapVector.559", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.567", i8, i32, %"class.blink::Member.569", %"class.blink::Member.571", %"class.blink::Member.573", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.575", %"class.WTF::HashMap.577", %"class.blink::Member.582", %"class.blink::Member.584", %"class.blink::Member.586", %"class.blink::Member.588", %"class.blink::Member.307", %"class.blink::Member.307", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.590", i8, i32, %"class.blink::Member.597", %"class.blink::Member.599", i32, %"class.blink::Member.601", %"class.blink::Member.603", %"class.blink::Member.605", %"class.std::__1::unique_ptr.607", i64, %"class.std::__1::unique_ptr.613", i32, i32, %"class.blink::Member.624", %"class.blink::Member.626", %"class.blink::Member.628", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.630", %"class.WTF::Vector.632", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.637", %"class.blink::Member.644", %"class.std::__1::unique_ptr.646", %"class.blink::Member.652", i8, i8, %"class.WTF::String", %"class.blink::Member.654", i8, [7 x i8], %"class.blink::HeapHashMap.656", %"class.blink::HeapObserverSet", %"class.blink::Member.670", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.672", i32, i8, i8, %"class.blink::WeakMember.674", %"class.blink::Member.675" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.377" }
%"class.blink::HeapHashMap.377" = type { %"class.WTF::HashMap.380" }
%"class.WTF::HashMap.380" = type { %"class.WTF::HashTable.381" }
%"class.WTF::HashTable.381" = type <{ %"struct.WTF::KeyValuePair.383"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.383" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.387 }
%class.scoped_refptr.387 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.388", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.388" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.688", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.756", i32, i8, [3 x i8], %"class.blink::HeapVector.758", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.766", %"class.blink::Member.768", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.777", %"class.blink::Member.905", %"class.blink::Member.907", i8, [7 x i8] }>
%"class.blink::Supplementable.688" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.689" }
%"class.blink::HeapHashMap.689" = type { %"class.WTF::HashMap.692" }
%"class.WTF::HashMap.692" = type { %"class.WTF::HashTable.693" }
%"class.WTF::HashTable.693" = type <{ %"struct.WTF::KeyValuePair.695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.695" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.704" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.696" }
%"class.blink::HeapObserverSet.696" = type { i32, [4 x i8], %"class.blink::HeapHashSet.697" }
%"class.blink::HeapHashSet.697" = type { %"class.WTF::HashSet.700" }
%"class.WTF::HashSet.700" = type { %"class.WTF::HashTable.701" }
%"class.WTF::HashTable.701" = type <{ %"class.blink::WeakMember.703"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.703" = type opaque
%"class.blink::Supplementable.704" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.705" }
%"class.blink::HeapHashMap.705" = type { %"class.WTF::HashMap.708" }
%"class.WTF::HashMap.708" = type { %"class.WTF::HashTable.709" }
%"class.WTF::HashTable.709" = type <{ %"struct.WTF::KeyValuePair.711"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.711" = type { i8*, %"class.blink::Member.2643" }
%"class.blink::Member.2643" = type { %"class.blink::MemberBase.2644" }
%"class.blink::MemberBase.2644" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2645" }
%"class.blink::Member.2645" = type { %"class.blink::MemberBase.2646" }
%"class.blink::MemberBase.2646" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.712, %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.746", %"class.std::__1::unique_ptr.746", %"class.blink::Member.393", i32, [4 x i8], %"class.WTF::HashSet.752", i32, i32 }
%class.scoped_refptr.712 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.713", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.715 }
%"class.WTF::RefCounted.713" = type { %"class.base::RefCounted.714" }
%"class.base::RefCounted.714" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.715 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.733", %"class.std::__1::map.742"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.721 }
%union.anon.721 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.725", %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.std::__1::map.733" = type { %"class.std::__1::__tree.734" }
%"class.std::__1::__tree.734" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.735", %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.std::__1::map.742" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.752" = type { %"class.WTF::HashTable.753" }
%"class.WTF::HashTable.753" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.758" = type { %"class.WTF::Vector.761" }
%"class.WTF::Vector.761" = type { %"class.WTF::VectorBuffer.762" }
%"class.WTF::VectorBuffer.762" = type { %"class.WTF::VectorBufferBase.763" }
%"class.WTF::VectorBufferBase.763" = type { %"class.blink::Member.764"*, i32, i32 }
%"class.blink::Member.764" = type opaque
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.770", i32, i32 }
%"class.blink::HeapHashMap.770" = type { %"class.WTF::HashMap.773" }
%"class.WTF::HashMap.773" = type { %"class.WTF::HashTable.774" }
%"class.WTF::HashTable.774" = type <{ %"struct.WTF::KeyValuePair.776"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.776" = type opaque
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.780" }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.783" }
%"class.WTF::Vector.783" = type { %"class.WTF::VectorBuffer.784" }
%"class.WTF::VectorBuffer.784" = type { %"class.WTF::VectorBufferBase.785" }
%"class.WTF::VectorBufferBase.785" = type { %"class.mojo::StructPtr.786"*, i32, i32 }
%"class.mojo::StructPtr.786" = type { %"class.std::__1::unique_ptr.787" }
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.790", %"class.WTF::HashMap.797", %"class.WTF::HashMap.802", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.807", i32, %"class.mojo::StructPtr.812", %"class.WTF::Vector.807" }
%"class.mojo::StructPtr.790" = type { %"class.std::__1::unique_ptr.791" }
%"class.std::__1::unique_ptr.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.797" = type { %"class.WTF::HashTable.798" }
%"class.WTF::HashTable.798" = type <{ %"struct.WTF::KeyValuePair.801"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.801" = type opaque
%"class.WTF::HashMap.802" = type { %"class.WTF::HashTable.803" }
%"class.WTF::HashTable.803" = type <{ %"struct.WTF::KeyValuePair.806"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.806" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.812" = type { %"class.std::__1::unique_ptr.813" }
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.807", i8, i8, [6 x i8] }>
%"class.WTF::Vector.807" = type { %"class.WTF::VectorBuffer.808" }
%"class.WTF::VectorBuffer.808" = type { %"class.WTF::VectorBufferBase.809" }
%"class.WTF::VectorBufferBase.809" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.896" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.827", i32 }>
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.830", %"class.absl::optional.831", %"class.absl::optional.836", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.849", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.871", %"class.std::__1::map.882", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.891", i8, %class.scoped_refptr.841, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.892" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.830" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.831" = type { %"class.absl::optional_internal::optional_data.832" }
%"class.absl::optional_internal::optional_data.832" = type { %"class.absl::optional_internal::optional_data_base.833" }
%"class.absl::optional_internal::optional_data_base.833" = type { %"class.absl::optional_internal::optional_data_dtor_base.834" }
%"class.absl::optional_internal::optional_data_dtor_base.834" = type { i8, %union.anon.835 }
%union.anon.835 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.836" = type { %"class.absl::optional_internal::optional_data.837" }
%"class.absl::optional_internal::optional_data.837" = type { %"class.absl::optional_internal::optional_data_base.838" }
%"class.absl::optional_internal::optional_data_base.838" = type { %"class.absl::optional_internal::optional_data_dtor_base.839" }
%"class.absl::optional_internal::optional_data_dtor_base.839" = type { i8, %union.anon.840 }
%union.anon.840 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.841, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.842" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.842" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.442 }
%class.scoped_refptr.442 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.847 }
%class.scoped_refptr.847 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.909", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.841, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.909" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.848 }
%class.scoped_refptr.848 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.852", %class.scoped_refptr.853 }
%"class.base::RepeatingCallback.852" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.853 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.854", [4 x i8] }>
%"class.base::RefCountedThreadSafe.854" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.858", %"class.std::__1::unique_ptr.864", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.870" }
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.870" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.871" = type { %"class.std::__1::__tree.872" }
%"class.std::__1::__tree.872" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.873", %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.std::__1::map.882" = type { %"class.std::__1::__tree.883" }
%"class.std::__1::__tree.883" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.884", %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.base::OnceCallback.891" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.841 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.441" }>
%"class.base::RefCountedThreadSafe.441" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.892" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.403" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::KURL"* }
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.422 }
%class.scoped_refptr.422 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.307", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.446" }
%"class.blink::HeapHashMap.446" = type { %"class.WTF::HashMap.449" }
%"class.WTF::HashMap.449" = type { %"class.WTF::HashTable.450" }
%"class.WTF::HashTable.450" = type <{ %"struct.WTF::KeyValuePair.452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.452" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.455" = type { %"class.WTF::HashSet.458" }
%"class.WTF::HashSet.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"class.blink::WeakMember.461"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.461" = type opaque
%"class.blink::HeapHashSet.462" = type { %"class.WTF::HashSet.465" }
%"class.WTF::HashSet.465" = type { %"class.WTF::HashTable.466" }
%"class.WTF::HashTable.466" = type <{ %"class.blink::WeakMember.468"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.468" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.337" }
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type <{ %"class.blink::Member.307", %"class.blink::Member.479", %"class.WTF::HashMap.490", %"class.blink::Member.495", i8, [7 x i8] }>
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type <{ %"class.blink::Member.307", %"class.blink::HeapVector.483", i8, [7 x i8] }>
%"class.blink::HeapVector.483" = type { %"class.WTF::Vector.486" }
%"class.WTF::Vector.486" = type { %"class.WTF::VectorBuffer.487" }
%"class.WTF::VectorBuffer.487" = type { %"class.WTF::VectorBufferBase.32", [512 x i8] }
%"class.WTF::HashMap.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"struct.WTF::KeyValuePair.494"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.494" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::FormKeyGenerator"* }
%"class.blink::FormKeyGenerator" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.499" = type { %"class.WTF::HashMap.502" }
%"class.WTF::HashMap.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"struct.WTF::KeyValuePair.505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.505" = type opaque
%"class.WTF::Vector.506" = type { %"class.WTF::VectorBuffer.507" }
%"class.WTF::VectorBuffer.507" = type { %"class.WTF::VectorBufferBase.508" }
%"class.WTF::VectorBufferBase.508" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.519" = type { %"class.WTF::Vector.522" }
%"class.WTF::Vector.522" = type { %"class.WTF::VectorBuffer.523" }
%"class.WTF::VectorBuffer.523" = type { %"class.WTF::VectorBufferBase.524" }
%"class.WTF::VectorBufferBase.524" = type { %"class.blink::Member.525"*, i32, i32 }
%"class.blink::Member.525" = type opaque
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.533" = type { %"class.WTF::HashSet.536" }
%"class.WTF::HashSet.536" = type { %"class.WTF::HashTable.537" }
%"class.WTF::HashTable.537" = type <{ %"class.blink::WeakMember.539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.539" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.540", i32, [4 x i8] }>
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { %"struct.std::__1::pair.543"*, i32, i32 }
%"struct.std::__1::pair.543" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.559" = type { %"class.WTF::Vector.562" }
%"class.WTF::Vector.562" = type { %"class.WTF::VectorBuffer.563" }
%"class.WTF::VectorBuffer.563" = type { %"class.WTF::VectorBufferBase.564" }
%"class.WTF::VectorBufferBase.564" = type { %"class.blink::Member.565"*, i32, i32 }
%"class.blink::Member.565" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.307" }
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.577" = type { %"class.WTF::HashTable.578" }
%"class.WTF::HashTable.578" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.443", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.440, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.440 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.443" = type { %"class.blink::MemberBase.308" }
%"class.blink::HeapHashSet.590" = type { %"class.WTF::HashSet.593" }
%"class.WTF::HashSet.593" = type { %"class.WTF::HashTable.594" }
%"class.WTF::HashTable.594" = type <{ %"class.blink::Member.596"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.596" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.361", %"class.WTF::HashSet.361", %"class.WTF::HashSet.361", %"class.WTF::HashSet.361", %"class.WTF::HashSet.361", %"class.WTF::HashSet.361", i32, [4 x i8], %"class.WTF::HashMap.616", %"class.WTF::HashMap.616", %"class.WTF::HashMap.616", %"class.WTF::HashMap.616", %"class.WTF::HashMap.616", %"class.WTF::HashMap.616", %"class.WTF::HashMap.616", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.616" = type { %"class.WTF::HashTable.617" }
%"class.WTF::HashTable.617" = type <{ %"struct.WTF::KeyValuePair.620"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.620" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.632" = type { %"class.WTF::VectorBuffer.633" }
%"class.WTF::VectorBuffer.633" = type { %"class.WTF::VectorBufferBase.634" }
%"class.WTF::VectorBufferBase.634" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.637" = type { %"class.WTF::HashMap.640" }
%"class.WTF::HashMap.640" = type { %"class.WTF::HashTable.641" }
%"class.WTF::HashTable.641" = type <{ %"struct.WTF::KeyValuePair.643"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.643" = type opaque
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.656" = type { %"class.WTF::HashMap.659" }
%"class.WTF::HashMap.659" = type { %"class.WTF::HashTable.660" }
%"class.WTF::HashTable.660" = type <{ %"struct.WTF::KeyValuePair.662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.662" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.663" }
%"class.blink::HeapHashSet.663" = type { %"class.WTF::HashSet.666" }
%"class.WTF::HashSet.666" = type { %"class.WTF::HashTable.667" }
%"class.WTF::HashTable.667" = type <{ %"class.blink::WeakMember.669"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.669" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.307", %"class.blink::HeapHashSet.679", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.686", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.679" = type { %"class.WTF::HashSet.682" }
%"class.WTF::HashSet.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"class.blink::Member.685"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.685" = type opaque
%"class.blink::HeapTaskRunnerTimer.686" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.687", { i64, i64 } }
%"class.blink::WeakMember.687" = type { %"class.blink::MemberBase.673" }
%"class.blink::WeakMember.674" = type { %"class.blink::MemberBase" }
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::BaseTextInputType" = type { %"class.blink::TextFieldInputType", %"class.blink::Member.910", %"class.WTF::AtomicString" }
%"class.blink::TextFieldInputType" = type { %"class.blink::InputType", %"class.blink::InputTypeView", %"class.blink::SpinButtonElement::SpinButtonOwner" }
%"class.blink::SpinButtonElement::SpinButtonOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::ScriptRegexp"* }
%"class.blink::ScriptRegexp" = type { %"class.blink::TraceWrapperV8Reference.914", %"class.WTF::String" }
%"class.blink::TraceWrapperV8Reference.914" = type { %"class.v8::TracedReference.915" }
%"class.v8::TracedReference.915" = type { %"class.v8::BasicTracedReference.916" }
%"class.v8::BasicTracedReference.916" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.473", %"class.blink::Member.917", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2815", %"class.blink::FreeList", %"class.WTF::Vector.2820" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.2815" = type { %"class.WTF::VectorBuffer.2816" }
%"class.WTF::VectorBuffer.2816" = type { %"class.WTF::VectorBufferBase.2817" }
%"class.WTF::VectorBufferBase.2817" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.2820" = type { %"class.WTF::VectorBuffer.2821" }
%"class.WTF::VectorBuffer.2821" = type { %"class.WTF::VectorBufferBase.2822" }
%"class.WTF::VectorBufferBase.2822" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::ImageLoader::Task" = type opaque
%"class.blink::FormControlState" = type { i32, %"class.WTF::Vector.807" }
%"class.blink::HTMLFormControlElementWithState" = type { %"class.blink::HTMLFormControlElement.base", i8, [2 x i8] }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::StepRange" = type <{ %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"struct.blink::StepRange::StepDescription", i8, i8, i8, [5 x i8] }>
%"struct.blink::StepRange::StepDescription" = type { i32, i32, i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.920" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.920" = type { %"class.v8::TracedReference.921" }
%"class.v8::TracedReference.921" = type { %"class.v8::BasicTracedReference.922" }
%"class.v8::BasicTracedReference.922" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::FocusOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.mojo::StructPtr.1525" = type { %"class.std::__1::unique_ptr.1526" }
%"class.std::__1::unique_ptr.1526" = type { %"class.std::__1::__compressed_pair.1527" }
%"class.std::__1::__compressed_pair.1527" = type { %"struct.std::__1::__compressed_pair_elem.1528" }
%"struct.std::__1::__compressed_pair_elem.1528" = type { %"class.blink::mojom::blink::ScrollIntoViewParams"* }
%"class.blink::mojom::blink::ScrollIntoViewParams" = type <{ %"class.mojo::InlinedStructPtr.1529", %"class.mojo::InlinedStructPtr.1529", i32, i8, [3 x i8], i32, i8, i8, [2 x i8], %"class.gfx::RectF", %"class.gfx::RectF", i8, [3 x i8] }>
%"class.mojo::InlinedStructPtr.1529" = type { %"class.blink::mojom::blink::ScrollAlignment", i32 }
%"class.blink::mojom::blink::ScrollAlignment" = type { i32, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2739", %"class.blink::Member.2741", %"class.blink::Member.2743", %"class.blink::Member.2762", %"class.blink::Member.2764" }
%"class.blink::Member.2739" = type { %"class.blink::MemberBase.2740" }
%"class.blink::MemberBase.2740" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.925 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.925, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1368" }
%"class.blink::MemberBase.1368" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1369" }
%"class.std::__1::unique_ptr.1369" = type { %"class.std::__1::__compressed_pair.1370" }
%"class.std::__1::__compressed_pair.1370" = type { %"struct.std::__1::__compressed_pair_elem.1371" }
%"struct.std::__1::__compressed_pair_elem.1371" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1372", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1378", %"class.std::__1::unique_ptr.1501", i8, %"class.absl::optional.1507", %class.scoped_refptr.1483, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1512" }
%"class.std::__1::unique_ptr.1372" = type { %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1381, %class.scoped_refptr.1381, %class.scoped_refptr.1381, %class.scoped_refptr.1381, %class.scoped_refptr.1381, %class.scoped_refptr.1381, %class.scoped_refptr.1416, %class.scoped_refptr.1432, %class.scoped_refptr.1433, %class.scoped_refptr.1433, %class.scoped_refptr.1433, %class.scoped_refptr.1433, %class.scoped_refptr.1433, %class.scoped_refptr.1433, %class.scoped_refptr.1473, %class.scoped_refptr.1474, %class.scoped_refptr.1474, %class.scoped_refptr.1474, %class.scoped_refptr.1474, %class.scoped_refptr.1474, %class.scoped_refptr.1474, %class.scoped_refptr.1474, %class.scoped_refptr.1474, %class.scoped_refptr.1497 }
%class.scoped_refptr.1381 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1398" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1382", i8, i8, %class.scoped_refptr.1384, i32, i32 }
%"class.WTF::RefCounted.1382" = type { %"class.base::RefCounted.1383" }
%"class.base::RefCounted.1383" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1384 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1391, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1392", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1385" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1385" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1391 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1417", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1417" = type { %"class.WTF::RefCounted.1418", i8, i8, %class.scoped_refptr.1391, i32, i32 }
%"class.WTF::RefCounted.1418" = type { %"class.base::RefCounted.1419" }
%"class.base::RefCounted.1419" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1420" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1420" = type { %"class.absl::optional_internal::optional_data.1421" }
%"class.absl::optional_internal::optional_data.1421" = type { %"class.absl::optional_internal::optional_data_base.1422" }
%"class.absl::optional_internal::optional_data_base.1422" = type { %"class.absl::optional_internal::optional_data_dtor_base.1423" }
%"class.absl::optional_internal::optional_data_dtor_base.1423" = type { i8, %union.anon.1424 }
%union.anon.1424 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1425", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1425" = type { %"class.std::__1::__vector_base.1426" }
%"class.std::__1::__vector_base.1426" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1427" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1392" = type { %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1398" = type { %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1401", %"class.std::__1::unique_ptr.1407", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1401" = type { %"class.std::__1::__compressed_pair.1402" }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1407" = type { %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1416 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1432 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1433 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1434" }
%"class.blink::PaintPropertyNode.1434" = type { %"class.WTF::RefCounted.1435", i8, i8, %class.scoped_refptr.1437, i32, i32 }
%"class.WTF::RefCounted.1435" = type { %"class.base::RefCounted.1436" }
%"class.base::RefCounted.1436" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1437 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1384, %class.scoped_refptr.1438, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1460", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1438 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1475" }
%"class.blink::PaintPropertyNode.1475" = type { %"class.WTF::RefCounted.1476", i8, i8, %class.scoped_refptr.1438, i32, i32 }
%"class.WTF::RefCounted.1476" = type { %"class.base::RefCounted.1477" }
%"class.base::RefCounted.1477" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1439" }
%"class.std::__1::vector.1439" = type { %"class.std::__1::__vector_base.1440" }
%"class.std::__1::__vector_base.1440" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1455" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1441, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1448", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1441 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1442, i32, %"class.absl::optional.1443", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.69" }>
%class.sk_sp.1442 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1443" = type { %"class.absl::optional_internal::optional_data.1444" }
%"class.absl::optional_internal::optional_data.1444" = type { %"class.absl::optional_internal::optional_data_base.1445" }
%"class.absl::optional_internal::optional_data_base.1445" = type { %"class.absl::optional_internal::optional_data_dtor_base.1446" }
%"class.absl::optional_internal::optional_data_dtor_base.1446" = type { i8, %union.anon.1447 }
%union.anon.1447 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1448" = type { %"class.std::__1::__vector_base.1449" }
%"class.std::__1::__vector_base.1449" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1450" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1450" = type { %"struct.std::__1::__compressed_pair_elem.1451" }
%"struct.std::__1::__compressed_pair_elem.1451" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1455" = type { %"struct.std::__1::__compressed_pair_elem.1456" }
%"struct.std::__1::__compressed_pair_elem.1456" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1460" = type { %"class.std::__1::__compressed_pair.1461" }
%"class.std::__1::__compressed_pair.1461" = type { %"struct.std::__1::__compressed_pair_elem.1462" }
%"struct.std::__1::__compressed_pair_elem.1462" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1466" }
%"class.std::__1::vector.1466" = type { %"class.std::__1::__vector_base.1467" }
%"class.std::__1::__vector_base.1467" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1468" }
%"class.std::__1::__compressed_pair.1468" = type { %"struct.std::__1::__compressed_pair_elem.1469" }
%"struct.std::__1::__compressed_pair_elem.1469" = type { i32* }
%class.scoped_refptr.1473 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1474 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1486" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1384, %"class.absl::optional.1478", %class.scoped_refptr.1483, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1478" = type { %"class.absl::optional_internal::optional_data.1479" }
%"class.absl::optional_internal::optional_data.1479" = type { %"class.absl::optional_internal::optional_data_base.1480" }
%"class.absl::optional_internal::optional_data_base.1480" = type { %"class.absl::optional_internal::optional_data_dtor_base.1481" }
%"class.absl::optional_internal::optional_data_dtor_base.1481" = type { i8, [3 x i8], %union.anon.1482 }
%union.anon.1482 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1486" = type { %"class.std::__1::__compressed_pair.1487" }
%"class.std::__1::__compressed_pair.1487" = type { %"struct.std::__1::__compressed_pair_elem.1488" }
%"struct.std::__1::__compressed_pair_elem.1488" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1489", i32, [4 x i8] }>
%"class.WTF::Vector.1489" = type { %"class.WTF::VectorBuffer.1490" }
%"class.WTF::VectorBuffer.1490" = type { %"class.WTF::VectorBufferBase.1491" }
%"class.WTF::VectorBufferBase.1491" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1497 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1501" = type { %"class.std::__1::__compressed_pair.1502" }
%"class.std::__1::__compressed_pair.1502" = type { %"struct.std::__1::__compressed_pair_elem.1503" }
%"struct.std::__1::__compressed_pair_elem.1503" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1384, %class.scoped_refptr.1438, %class.scoped_refptr.1437 }
%"class.absl::optional.1507" = type { %"class.absl::optional_internal::optional_data.1508" }
%"class.absl::optional_internal::optional_data.1508" = type { %"class.absl::optional_internal::optional_data_base.1509" }
%"class.absl::optional_internal::optional_data_base.1509" = type { %"class.absl::optional_internal::optional_data_dtor_base.1510" }
%"class.absl::optional_internal::optional_data_dtor_base.1510" = type { i8, %union.anon.1511 }
%union.anon.1511 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1483 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1484", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1291, i32, %"struct.std::__1::atomic.274", %"struct.std::__1::atomic.274", i8, i8 }>
%class.sk_sp.1291 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1292, %class.SkTDArray.1293, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.69" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1292 = type { i8*, i32, i32 }
%class.SkTDArray.1293 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1294 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.69", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.274" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1294 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.260", [3 x i8] }
%"class.WTF::RefCounted.1484" = type { %"class.base::RefCounted.1485" }
%"class.base::RefCounted.1485" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1512" = type { %"class.std::__1::__compressed_pair.1513" }
%"class.std::__1::__compressed_pair.1513" = type { %"struct.std::__1::__compressed_pair_elem.1514" }
%"struct.std::__1::__compressed_pair_elem.1514" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.925 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1353", %"class.std::__1::unique_ptr.1355" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.990", %"class.blink::DataRef.1069", %"class.blink::DataRef.1073", %"class.blink::DataRef.1269", %"class.blink::DataRef.1336", %"class.blink::DataRef.1340", %"class.blink::DataRef.1344", %"class.blink::DataRef.1348", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.926 }
%class.scoped_refptr.926 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.927", %"class.blink::DataRef.929", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.927" = type { %"class.base::RefCounted.928" }
%"class.base::RefCounted.928" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.929" = type { %class.scoped_refptr.930 }
%class.scoped_refptr.930 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.931", %"class.blink::Font" }
%"class.WTF::RefCounted.931" = type { %"class.base::RefCounted.932" }
%"class.base::RefCounted.932" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.959 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.934, %class.scoped_refptr.942, %class.scoped_refptr.952, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.958 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.933 }
%class.scoped_refptr.933 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1523", [4 x i8] }>
%"class.WTF::RefCounted.1523" = type { %"class.base::RefCounted.1524" }
%"class.base::RefCounted.1524" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.934 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.940", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.935" }
%"class.WTF::Vector.935" = type { %"class.WTF::VectorBuffer.936" }
%"class.WTF::VectorBuffer.936" = type { %"class.WTF::VectorBufferBase.937" }
%"class.WTF::VectorBufferBase.937" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.940" = type { %"class.base::RefCounted.941" }
%"class.base::RefCounted.941" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.942 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.943", %"class.WTF::RefCounted.950", [4 x i8] }>
%"class.blink::FontSettings.943" = type { %"class.WTF::Vector.944" }
%"class.WTF::Vector.944" = type { %"class.WTF::VectorBuffer.945" }
%"class.WTF::VectorBuffer.945" = type { %"class.WTF::VectorBufferBase.946" }
%"class.WTF::VectorBufferBase.946" = type { %"class.blink::FontTagValuePair.947"*, i32, i32 }
%"class.blink::FontTagValuePair.947" = type { i32, float }
%"class.WTF::RefCounted.950" = type { %"class.base::RefCounted.951" }
%"class.base::RefCounted.951" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.952 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.953", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.955, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.953" = type { %"class.base::RefCounted.954" }
%"class.base::RefCounted.954" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.955 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.956", [4 x i8] }>
%"class.WTF::RefCounted.956" = type { %"class.base::RefCounted.957" }
%"class.base::RefCounted.957" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.958 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.959 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.960", %"class.WTF::Vector.962", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.986", i32, i16, i8, %"class.base::WeakPtr.988" }
%"class.WTF::RefCounted.960" = type { %"class.base::RefCounted.961" }
%"class.base::RefCounted.961" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.962" = type { %"class.WTF::VectorBuffer.963" }
%"class.WTF::VectorBuffer.963" = type { %"class.WTF::VectorBufferBase.964", [8 x i8] }
%"class.WTF::VectorBufferBase.964" = type { %class.scoped_refptr.965*, i32, i32 }
%class.scoped_refptr.965 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.966", [4 x i8] }>
%"class.WTF::RefCounted.966" = type { %"class.base::RefCounted.967" }
%"class.base::RefCounted.967" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.976", %class.scoped_refptr.983, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.966" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.970", %"class.absl::optional.970", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.970" = type { %"class.absl::optional_internal::optional_data.971" }
%"class.absl::optional_internal::optional_data.971" = type { %"class.absl::optional_internal::optional_data_base.972" }
%"class.absl::optional_internal::optional_data_base.972" = type { %"class.absl::optional_internal::optional_data_dtor_base.973" }
%"class.absl::optional_internal::optional_data_dtor_base.973" = type { i8, %union.anon.974 }
%union.anon.974 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.975, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.69" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.975 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.979, %class.scoped_refptr.979 }
%class.scoped_refptr.979 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.983 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.984", [4 x i8] }>
%"class.WTF::RefCounted.984" = type { %"class.base::RefCounted.985" }
%"class.base::RefCounted.985" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.986" = type { %"class.blink::PersistentBase.987" }
%"class.blink::PersistentBase.987" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr.988" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.989, i8, i8, i8, i8 }>
%union.anon.989 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.990" = type { %class.scoped_refptr.991 }
%class.scoped_refptr.991 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.992", [4 x i8], %"class.blink::DataRef.994", %"class.blink::DataRef.1035", %"class.WTF::Vector.1039", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1043, %class.scoped_refptr.1051, %"class.blink::Persistent.1059", %"class.blink::Persistent.1061", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.992" = type { %"class.base::RefCounted.993" }
%"class.base::RefCounted.993" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.994" = type { %class.scoped_refptr.995 }
%class.scoped_refptr.995 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.996", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.998, %class.scoped_refptr.1005, %"class.blink::Persistent.1022", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.996" = type { %"class.base::RefCounted.997" }
%"class.base::RefCounted.997" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.998 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.999", %"class.WTF::Vector.1000" }
%"class.base::RefCountedThreadSafe.999" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1000" = type { %"class.WTF::VectorBuffer.1001" }
%"class.WTF::VectorBuffer.1001" = type { %"class.WTF::VectorBufferBase.1002" }
%"class.WTF::VectorBufferBase.1002" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1005 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1006", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1006" = type { %"class.base::RefCounted.1007" }
%"class.base::RefCounted.1007" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1008", %"class.blink::Persistent.1013" }
%"class.WTF::HashMap.1008" = type { %"class.WTF::HashTable.1009" }
%"class.WTF::HashTable.1009" = type <{ %"struct.WTF::KeyValuePair.1012"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1012" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2657 }
%class.scoped_refptr.2657 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2658", %"class.WTF::Vector.807", %"class.WTF::Vector.2660", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2658" = type { %"class.base::RefCounted.2659" }
%"class.base::RefCounted.2659" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2660" = type { %"class.WTF::VectorBuffer.2661" }
%"class.WTF::VectorBuffer.2661" = type { %"class.WTF::VectorBufferBase.2662" }
%"class.WTF::VectorBufferBase.2662" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2663 }
%union.anon.2663 = type { double }
%"class.blink::Persistent.1013" = type { %"class.blink::PersistentBase.1014" }
%"class.blink::PersistentBase.1014" = type { %"class.blink::HeapHashMap.1015"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::HeapHashMap.1015" = type { %"class.WTF::HashMap.1018" }
%"class.WTF::HashMap.1018" = type { %"class.WTF::HashTable.1019" }
%"class.WTF::HashTable.1019" = type <{ %"struct.WTF::KeyValuePair.1021"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1021" = type opaque
%"class.blink::Persistent.1022" = type { %"class.blink::PersistentBase.1023" }
%"class.blink::PersistentBase.1023" = type { %"class.blink::HeapVector.1024"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::HeapVector.1024" = type { %"class.WTF::Vector.1027" }
%"class.WTF::Vector.1027" = type { %"class.WTF::VectorBuffer.1028" }
%"class.WTF::VectorBuffer.1028" = type { %"class.WTF::VectorBufferBase.1029" }
%"class.WTF::VectorBufferBase.1029" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1030", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1035" = type { %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1037", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1039" = type { %"class.WTF::VectorBuffer.1040" }
%"class.WTF::VectorBuffer.1040" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.1043 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1044", %"class.WTF::Vector.1046" }
%"class.WTF::RefCounted.1044" = type { %"class.base::RefCounted.1045" }
%"class.base::RefCounted.1045" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1046" = type { %"class.WTF::VectorBuffer.1047" }
%"class.WTF::VectorBuffer.1047" = type { %"class.WTF::VectorBufferBase.1048" }
%"class.WTF::VectorBufferBase.1048" = type { %"struct.std::__1::pair.919"*, i32, i32 }
%"struct.std::__1::pair.919" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1051 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1052", [4 x i8], %"class.WTF::Vector.1054" }
%"class.WTF::RefCounted.1052" = type { %"class.base::RefCounted.1053" }
%"class.base::RefCounted.1053" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1054" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1056", [28 x i8] }>
%"class.WTF::VectorBufferBase.1056" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.1059" = type { %"class.blink::PersistentBase.1060" }
%"class.blink::PersistentBase.1060" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::Persistent.1061" = type { %"class.blink::PersistentBase.1062" }
%"class.blink::PersistentBase.1062" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1065", %"class.blink::Member.1067" }
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1069" = type { %class.scoped_refptr.1070 }
%class.scoped_refptr.1070 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1071", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1071" = type { %"class.base::RefCounted.1072" }
%"class.base::RefCounted.1072" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1073" = type { %class.scoped_refptr.1074 }
%class.scoped_refptr.1074 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1075", [4 x i8], %"class.blink::DataRef.1077", %"class.blink::DataRef.1143", %"class.blink::TransformOperations", %class.scoped_refptr.1051, %"class.blink::Persistent.1263", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1075" = type { %"class.base::RefCounted.1076" }
%"class.base::RefCounted.1076" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1077" = type { %class.scoped_refptr.1078 }
%class.scoped_refptr.1078 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1079", [4 x i8], %"class.blink::DataRef.1081", %"class.blink::Persistent.1119", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1079" = type { %"class.base::RefCounted.1080" }
%"class.base::RefCounted.1080" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1081" = type { %class.scoped_refptr.1082 }
%class.scoped_refptr.1082 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1083", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1101, %class.scoped_refptr.1104, %class.scoped_refptr.1107, %class.scoped_refptr.1110, %class.scoped_refptr.1111, %class.scoped_refptr.1112, %"class.blink::Persistent.1119", %"class.blink::Persistent.1134", %"class.absl::optional.1138", %"class.absl::optional.1138", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1083" = type { %"class.base::RefCounted.1084" }
%"class.base::RefCounted.1084" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1085", %"class.std::__1::unique_ptr.1090" }
%"class.WTF::Vector.1085" = type { %"class.WTF::VectorBuffer.1086" }
%"class.WTF::VectorBuffer.1086" = type { %"class.WTF::VectorBufferBase.1087" }
%"class.WTF::VectorBufferBase.1087" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1093", %"class.WTF::Vector.1085", i32, i32 }
%"class.WTF::Vector.1093" = type { %"class.WTF::VectorBuffer.1094" }
%"class.WTF::VectorBuffer.1094" = type { %"class.WTF::VectorBufferBase.1095" }
%"class.WTF::VectorBufferBase.1095" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1101 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1102", [4 x i8] }>
%"class.WTF::RefCounted.1102" = type { %"class.base::RefCounted.1103" }
%"class.base::RefCounted.1103" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1104 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1105", [4 x i8] }>
%"class.WTF::RefCounted.1105" = type { %"class.base::RefCounted.1106" }
%"class.base::RefCounted.1106" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1107 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1108" }>
%"class.WTF::RefCounted.1108" = type { %"class.base::RefCounted.1109" }
%"class.base::RefCounted.1109" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.1110 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1111 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1112 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1113", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1113" = type { %"class.base::RefCounted.1114" }
%"class.base::RefCounted.1114" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1115" }
%"class.blink::DataRef.1115" = type { %class.scoped_refptr.1116 }
%class.scoped_refptr.1116 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1059", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1117" }
%"class.WTF::RefCounted.1117" = type { %"class.base::RefCounted.1118" }
%"class.base::RefCounted.1118" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1134" = type { %"class.blink::PersistentBase.1135" }
%"class.blink::PersistentBase.1135" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1104, %"class.blink::Member.1030", i32, [4 x i8] }>
%"class.absl::optional.1138" = type { %"class.absl::optional_internal::optional_data.1139" }
%"class.absl::optional_internal::optional_data.1139" = type { %"class.absl::optional_internal::optional_data_base.1140" }
%"class.absl::optional_internal::optional_data_base.1140" = type { %"class.absl::optional_internal::optional_data_dtor_base.1141" }
%"class.absl::optional_internal::optional_data_dtor_base.1141" = type { i8, [3 x i8], %union.anon.1142 }
%union.anon.1142 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.1119" = type { %"class.blink::PersistentBase.1120" }
%"class.blink::PersistentBase.1120" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1123" }
%"class.blink::HeapVector.1123" = type { %"class.WTF::Vector.1126" }
%"class.WTF::Vector.1126" = type { %"class.WTF::VectorBuffer.1127" }
%"class.WTF::VectorBuffer.1127" = type { %"class.WTF::VectorBufferBase.1128" }
%"class.WTF::VectorBufferBase.1128" = type { %"class.blink::Member.1129"*, i32, i32 }
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1143" = type { %class.scoped_refptr.1144 }
%class.scoped_refptr.1144 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1145", %"class.blink::DataRef.1147", %"class.blink::DataRef.1151", %"class.blink::DataRef.1160", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1179", %"class.std::__1::unique_ptr.1190", %"class.std::__1::unique_ptr.1229", %"class.std::__1::unique_ptr.1240", %"class.std::__1::unique_ptr.1251", %"class.WTF::Vector.807", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1145" = type { %"class.base::RefCounted.1146" }
%"class.base::RefCounted.1146" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1147" = type { %class.scoped_refptr.1148 }
%class.scoped_refptr.1148 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1149", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1149" = type { %"class.base::RefCounted.1150" }
%"class.base::RefCounted.1150" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1151" = type { %class.scoped_refptr.1152 }
%class.scoped_refptr.1152 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1153", [4 x i8], %"class.WTF::Vector.1155", i8, [7 x i8] }>
%"class.WTF::RefCounted.1153" = type { %"class.base::RefCounted.1154" }
%"class.base::RefCounted.1154" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { i32*, i32, i32 }
%"class.blink::DataRef.1160" = type { %class.scoped_refptr.1161 }
%class.scoped_refptr.1161 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1162", [4 x i8], %"class.WTF::HashMap.1164", %"class.WTF::HashMap.1164", %"class.WTF::HashMap.1164", %"class.WTF::HashMap.1164", %"class.WTF::HashMap.1164", %"class.WTF::HashMap.1164", %"class.WTF::HashMap.1169", %"class.WTF::HashMap.1169", %"class.WTF::HashMap.1169", %"class.WTF::HashMap.1169", %"class.WTF::HashMap.1174", %"class.WTF::Vector.1085", %"class.WTF::Vector.1085", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1162" = type { %"class.base::RefCounted.1163" }
%"class.base::RefCounted.1163" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1164" = type { %"class.WTF::HashTable.1165" }
%"class.WTF::HashTable.1165" = type <{ %"struct.WTF::KeyValuePair.1168"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1168" = type { %"class.WTF::String", %"class.WTF::Vector.2647" }
%"class.WTF::Vector.2647" = type { %"class.WTF::VectorBuffer.2648" }
%"class.WTF::VectorBuffer.2648" = type { %"class.WTF::VectorBufferBase.2649" }
%"class.WTF::VectorBufferBase.2649" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ %"struct.WTF::KeyValuePair.1173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1173" = type { i64, %"class.WTF::Vector.807" }
%"class.WTF::HashMap.1174" = type { %"class.WTF::HashTable.1175" }
%"class.WTF::HashTable.1175" = type <{ %"struct.WTF::KeyValuePair.1178"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1178" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1179" = type { %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1182" }
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2652", %"class.absl::optional.2652", %"class.absl::optional.2652" }
%"class.absl::optional.2652" = type { %"class.absl::optional_internal::optional_data.2653" }
%"class.absl::optional_internal::optional_data.2653" = type { %"class.absl::optional_internal::optional_data_base.2654" }
%"class.absl::optional_internal::optional_data_base.2654" = type { %"class.absl::optional_internal::optional_data_dtor_base.2655" }
%"class.absl::optional_internal::optional_data_dtor_base.2655" = type { i8, %union.anon.2656 }
%union.anon.2656 = type { i32 }
%"class.std::__1::unique_ptr.1190" = type { %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1039", %"class.WTF::Vector.1206", %"class.WTF::Vector.1193", %"class.WTF::Vector.1211", %"class.WTF::Vector.1216", %"class.WTF::Vector.1221" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1193", %"class.WTF::Vector.1193", %"class.WTF::Vector.1198" }
%"class.WTF::Vector.1198" = type { %"class.WTF::VectorBuffer.1199" }
%"class.WTF::VectorBuffer.1199" = type { %"class.WTF::VectorBufferBase.1200" }
%"class.WTF::VectorBufferBase.1200" = type { %class.scoped_refptr.1201*, i32, i32 }
%class.scoped_refptr.1201 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1202", i32 }
%"class.WTF::ThreadSafeRefCounted.1202" = type { %"class.base::RefCountedThreadSafe.1203" }
%"class.base::RefCountedThreadSafe.1203" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1206" = type { %"class.WTF::VectorBuffer.1207" }
%"class.WTF::VectorBuffer.1207" = type { %"class.WTF::VectorBufferBase.1208" }
%"class.WTF::VectorBufferBase.1208" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1193" = type { %"class.WTF::VectorBuffer.1194" }
%"class.WTF::VectorBuffer.1194" = type { %"class.WTF::VectorBufferBase.1195" }
%"class.WTF::VectorBufferBase.1195" = type { double*, i32, i32 }
%"class.WTF::Vector.1211" = type { %"class.WTF::VectorBuffer.1212" }
%"class.WTF::VectorBuffer.1212" = type { %"class.WTF::VectorBufferBase.1213" }
%"class.WTF::VectorBufferBase.1213" = type { i32*, i32, i32 }
%"class.WTF::Vector.1216" = type { %"class.WTF::VectorBuffer.1217" }
%"class.WTF::VectorBuffer.1217" = type { %"class.WTF::VectorBufferBase.1218" }
%"class.WTF::VectorBufferBase.1218" = type { i32*, i32, i32 }
%"class.WTF::Vector.1221" = type { %"class.WTF::VectorBuffer.1222" }
%"class.WTF::VectorBuffer.1222" = type { %"class.WTF::VectorBufferBase.1223" }
%"class.WTF::VectorBufferBase.1223" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1229" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1232" }
%"class.WTF::Vector.1232" = type { %"class.WTF::VectorBuffer.1233" }
%"class.WTF::VectorBuffer.1233" = type { %"class.WTF::VectorBufferBase.1234" }
%"class.WTF::VectorBufferBase.1234" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1240" = type { %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1243" }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.blink::Persistent.1059"*, i32, i32 }
%"class.std::__1::unique_ptr.1251" = type { %"class.std::__1::__compressed_pair.1252" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1059", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1257" }
%"class.WTF::Vector.1257" = type { %"class.WTF::VectorBuffer.1258" }
%"class.WTF::VectorBuffer.1258" = type { %"class.WTF::VectorBufferBase.1259" }
%"class.WTF::VectorBufferBase.1259" = type { %class.scoped_refptr.1260*, i32, i32 }
%class.scoped_refptr.1260 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1108", [4 x i8] }>
%"class.blink::Persistent.1263" = type { %"class.blink::PersistentBase.1264" }
%"class.blink::PersistentBase.1264" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1267" }
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1269" = type { %class.scoped_refptr.1270 }
%class.scoped_refptr.1270 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1271", [4 x i8], %"class.blink::DataRef.1273", %"class.blink::DataRef.1277", %"class.blink::DataRef.1298", %"class.blink::DataRef.1316", %"class.blink::DataRef.1328", %"class.blink::DataRef.1332", %class.scoped_refptr.1302, i32, [4 x i8] }>
%"class.WTF::RefCounted.1271" = type { %"class.base::RefCounted.1272" }
%"class.base::RefCounted.1272" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1273" = type { %class.scoped_refptr.1274 }
%class.scoped_refptr.1274 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1275", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1275" = type { %"class.base::RefCounted.1276" }
%"class.base::RefCounted.1276" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1277" = type { %class.scoped_refptr.1278 }
%class.scoped_refptr.1278 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1279", %class.scoped_refptr.1281, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1279" = type { %"class.base::RefCounted.1280" }
%"class.base::RefCounted.1280" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1281 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1282", %"class.std::__1::unique_ptr.1288", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1105" }>
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1288" = type { %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1298" = type { %class.scoped_refptr.1299 }
%class.scoped_refptr.1299 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1300", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1300" = type { %"class.base::RefCounted.1301" }
%"class.base::RefCounted.1301" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1302, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1316" = type { %class.scoped_refptr.1317 }
%class.scoped_refptr.1317 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1318", [4 x i8], %class.scoped_refptr.1320, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1318" = type { %"class.base::RefCounted.1319" }
%"class.base::RefCounted.1319" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1320 = type { %"class.base::RefCountedData.1321"* }
%"class.base::RefCountedData.1321" = type { %"class.base::RefCountedThreadSafe.1322", %"class.WTF::Vector.1323" }
%"class.base::RefCountedThreadSafe.1322" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1323" = type { %"class.WTF::VectorBuffer.1324" }
%"class.WTF::VectorBuffer.1324" = type { %"class.WTF::VectorBufferBase.1325" }
%"class.WTF::VectorBufferBase.1325" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1328" = type { %class.scoped_refptr.1329 }
%class.scoped_refptr.1329 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1330", %class.scoped_refptr.1302, %class.scoped_refptr.1302, %class.scoped_refptr.1302 }
%"class.WTF::RefCounted.1330" = type { %"class.base::RefCounted.1331" }
%"class.base::RefCounted.1331" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1332" = type { %class.scoped_refptr.1333 }
%class.scoped_refptr.1333 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1334", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1334" = type { %"class.base::RefCounted.1335" }
%"class.base::RefCounted.1335" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1302 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1303", %"class.blink::Persistent.1305", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1303" = type { %"class.base::RefCounted.1304" }
%"class.base::RefCounted.1304" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1305" = type { %"class.blink::PersistentBase.1306" }
%"class.blink::PersistentBase.1306" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.60", %"class.blink::HeapHashMap.1309" }
%"class.blink::HeapHashMap.1309" = type { %"class.WTF::HashMap.1312" }
%"class.WTF::HashMap.1312" = type { %"class.WTF::HashTable.1313" }
%"class.WTF::HashTable.1313" = type <{ %"struct.WTF::KeyValuePair.1315"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1315" = type opaque
%"class.blink::DataRef.1336" = type { %class.scoped_refptr.1337 }
%class.scoped_refptr.1337 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1338", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1338" = type { %"class.base::RefCounted.1339" }
%"class.base::RefCounted.1339" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1340" = type { %class.scoped_refptr.1341 }
%class.scoped_refptr.1341 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1342", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1342" = type { %"class.base::RefCounted.1343" }
%"class.base::RefCounted.1343" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1344" = type { %class.scoped_refptr.1345 }
%class.scoped_refptr.1345 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1346", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1346" = type { %"class.base::RefCounted.1347" }
%"class.base::RefCounted.1347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1348" = type { %class.scoped_refptr.1349 }
%class.scoped_refptr.1349 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1350", %class.scoped_refptr.1352 }
%"class.WTF::RefCounted.1350" = type { %"class.base::RefCounted.1351" }
%"class.base::RefCounted.1351" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1352 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1521", %"class.blink::StyleVariables", %class.scoped_refptr.1352 }
%"class.WTF::RefCounted.1521" = type { %"class.base::RefCounted.1522" }
%"class.base::RefCounted.1522" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1353" = type { %"class.base::RefCounted.1354" }
%"class.base::RefCounted.1354" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1355" = type { %"class.std::__1::__compressed_pair.1356" }
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1358" }
%"class.std::__1::unique_ptr.1358" = type { %"class.std::__1::__compressed_pair.1359" }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"class.WTF::Vector.1361"* }
%"class.WTF::Vector.1361" = type { %"class.WTF::VectorBuffer.2667" }
%"class.WTF::VectorBuffer.2667" = type { %"class.WTF::VectorBufferBase.2668", [32 x i8] }
%"class.WTF::VectorBufferBase.2668" = type { %class.scoped_refptr.925*, i32, i32 }
%"class.blink::Member.2741" = type { %"class.blink::MemberBase.2742" }
%"class.blink::MemberBase.2742" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2743" = type { %"class.blink::MemberBase.2744" }
%"class.blink::MemberBase.2744" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2747", %"class.blink::HeapHashSet.2756" }
%"class.blink::HeapVector.2747" = type { %"class.WTF::Vector.2750" }
%"class.WTF::Vector.2750" = type { %"class.WTF::VectorBuffer.2751" }
%"class.WTF::VectorBuffer.2751" = type { %"class.WTF::VectorBufferBase.2752" }
%"class.WTF::VectorBufferBase.2752" = type { %"class.blink::Member.2753"*, i32, i32 }
%"class.blink::Member.2753" = type { %"class.blink::MemberBase.2754" }
%"class.blink::MemberBase.2754" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2756" = type { %"class.WTF::HashSet.2759" }
%"class.WTF::HashSet.2759" = type { %"class.WTF::HashTable.2760" }
%"class.WTF::HashTable.2760" = type <{ %"class.blink::Member.2753"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2762" = type { %"class.blink::MemberBase.2763" }
%"class.blink::MemberBase.2763" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2764" = type { %"class.blink::MemberBase.2765" }
%"class.blink::MemberBase.2765" = type { %"class.blink::HeapHashSet.2766"* }
%"class.blink::HeapHashSet.2766" = type opaque
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1706", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1714", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1728", %"class.blink::FrameLoader", %"class.blink::Member.1749", %"class.blink::Member.60", %"class.blink::Member.1751", %"class.blink::Member.1753", %"class.blink::Member.1769", %"class.blink::Member.1771", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1773", %class.scoped_refptr.1993, %"class.blink::Member.1994", %"class.blink::Member.1996", %"class.blink::Member.1998", %"class.blink::Member.2000", %"class.blink::Member.2002", %"class.blink::Member.2006", %"class.blink::Member.2008", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2012", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2018", %"class.std::__1::unique_ptr.2019", %"class.absl::optional.1694", i32, [4 x i8], %"class.std::__1::unique_ptr.2025", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2033", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2038", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2043", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2046", %"class.blink::Member.2048", %"class.blink::Member.2050", %"class.blink::Member.2052", %"class.mojo::StructPtr.2055", %"class.blink::Member.2064", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2066", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1537", %"class.blink::Member.1539", %"class.blink::Member.1541", i8, i32, i8, i32, %"class.blink::Member.1674", %"class.blink::Member.1564", %"class.blink::FrameLifecycle", %"class.blink::Member.1535", %"class.blink::Member.1535", %"class.blink::Member.1535", %"class.blink::Member.1535", %"class.blink::Member.1535", %"class.blink::Member.1535", %"class.blink::Member.1676", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1687", i8, %"class.base::UnguessableToken", %"class.absl::optional.1689", %"class.absl::optional.1694", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1535", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2375", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.1535", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2389", %"class.blink::Member.2393", %"class.blink::Member.2395", %"class.blink::Member.2399", %"class.blink::Member.2401", %"class.blink::Member.2403", %"class.blink::Member.2405", %"class.blink::Member.2407", %"class.blink::HeapObserverSet.2409", %"class.blink::Member.2417", %"class.blink::Member.2419", %"class.blink::Member.2421", %"class.blink::Member.2423", %"class.blink::Member.2425", %"class.blink::Member.2427", %"class.blink::Member.2429", %"class.blink::Member.2431", %"class.blink::Member.2433", %"class.blink::Member.2435", %"class.blink::Member.2437", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2462", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2469", %"class.blink::Member.1537", %"class.blink::Member.1537", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2477", %"class.std::__1::unique_ptr.2483", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2375" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2376" }
%"class.blink::HeapHashMap.2376" = type { %"class.WTF::HashMap.2379" }
%"class.WTF::HashMap.2379" = type { %"class.WTF::HashTable.2380" }
%"class.WTF::HashTable.2380" = type <{ %"struct.WTF::KeyValuePair.2382"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2382" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2383" }
%"class.std::__1::unique_ptr.2383" = type { %"class.std::__1::__compressed_pair.2384" }
%"class.std::__1::__compressed_pair.2384" = type { %"struct.std::__1::__compressed_pair_elem.2385" }
%"struct.std::__1::__compressed_pair_elem.2385" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2389" = type { %"class.blink::MemberBase.2390" }
%"class.blink::MemberBase.2390" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1537", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2393" = type { %"class.blink::MemberBase.2394" }
%"class.blink::MemberBase.2394" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2395" = type { %"class.blink::MemberBase.2396" }
%"class.blink::MemberBase.2396" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.674", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2401" = type { %"class.blink::MemberBase.2402" }
%"class.blink::MemberBase.2402" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2403" = type { %"class.blink::MemberBase.2404" }
%"class.blink::MemberBase.2404" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2405" = type { %"class.blink::MemberBase.2406" }
%"class.blink::MemberBase.2406" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2407" = type { %"class.blink::MemberBase.2408" }
%"class.blink::MemberBase.2408" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2409" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2410" }
%"class.blink::HeapHashSet.2410" = type { %"class.WTF::HashSet.2413" }
%"class.WTF::HashSet.2413" = type { %"class.WTF::HashTable.2414" }
%"class.WTF::HashTable.2414" = type <{ %"class.blink::WeakMember.2416"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2416" = type opaque
%"class.blink::Member.2417" = type { %"class.blink::MemberBase.2418" }
%"class.blink::MemberBase.2418" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2419" = type { %"class.blink::MemberBase.2420" }
%"class.blink::MemberBase.2420" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2421" = type { %"class.blink::MemberBase.2422" }
%"class.blink::MemberBase.2422" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2423" = type { %"class.blink::MemberBase.2424" }
%"class.blink::MemberBase.2424" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2425" = type { %"class.blink::MemberBase.2426" }
%"class.blink::MemberBase.2426" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2427" = type { %"class.blink::MemberBase.2428" }
%"class.blink::MemberBase.2428" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2431" = type { %"class.blink::MemberBase.2432" }
%"class.blink::MemberBase.2432" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2433" = type { %"class.blink::MemberBase.2434" }
%"class.blink::MemberBase.2434" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2435" = type { %"class.blink::MemberBase.2436" }
%"class.blink::MemberBase.2436" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2437" = type { %"class.blink::MemberBase.2438" }
%"class.blink::MemberBase.2438" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2439" }
%"class.WTF::Deque.2439" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2442" }
%"class.WTF::VectorBuffer.2442" = type { %"class.WTF::VectorBufferBase.2443" }
%"class.WTF::VectorBufferBase.2443" = type { %"class.std::__1::unique_ptr.2444"*, i32, i32 }
%"class.std::__1::unique_ptr.2444" = type { %"class.std::__1::__compressed_pair.2445" }
%"class.std::__1::__compressed_pair.2445" = type { %"struct.std::__1::__compressed_pair_elem.2446" }
%"struct.std::__1::__compressed_pair_elem.2446" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2450", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2450" = type { %"class.std::__1::__bitset.2451" }
%"class.std::__1::__bitset.2451" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2452" }
%"class.absl::optional.2452" = type { %"class.absl::optional_internal::optional_data.2453" }
%"class.absl::optional_internal::optional_data.2453" = type { %"class.absl::optional_internal::optional_data_base.2454" }
%"class.absl::optional_internal::optional_data_base.2454" = type { %"class.absl::optional_internal::optional_data_dtor_base.2455" }
%"class.absl::optional_internal::optional_data_dtor_base.2455" = type { i8, %union.anon.2456 }
%union.anon.2456 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2457", i64, %"class.absl::optional.831", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2457" = type { %"class.absl::optional_internal::optional_data.2458" }
%"class.absl::optional_internal::optional_data.2458" = type { %"class.absl::optional_internal::optional_data_base.2459" }
%"class.absl::optional_internal::optional_data_base.2459" = type { %"class.absl::optional_internal::optional_data_dtor_base.2460" }
%"class.absl::optional_internal::optional_data_dtor_base.2460" = type { i8, %union.anon.2461 }
%union.anon.2461 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2462" = type { %"class.std::__1::unique_ptr.2463" }
%"class.std::__1::unique_ptr.2463" = type { %"class.std::__1::__compressed_pair.2464" }
%"class.std::__1::__compressed_pair.2464" = type { %"struct.std::__1::__compressed_pair_elem.2465" }
%"struct.std::__1::__compressed_pair_elem.2465" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2469" = type { %"class.WTF::HashSet.2472" }
%"class.WTF::HashSet.2472" = type { %"class.WTF::HashTable.2473" }
%"class.WTF::HashTable.2473" = type <{ %"class.blink::WeakMember.2475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2475" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2476" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2476" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2477" = type { %"class.std::__1::__compressed_pair.2478" }
%"class.std::__1::__compressed_pair.2478" = type { %"struct.std::__1::__compressed_pair_elem.2479" }
%"struct.std::__1::__compressed_pair_elem.2479" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2483" = type { %"class.std::__1::__compressed_pair.2484" }
%"class.std::__1::__compressed_pair.2484" = type { %"struct.std::__1::__compressed_pair_elem.2485" }
%"struct.std::__1::__compressed_pair_elem.2485" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1535", %"class.blink::Member.1564", %"class.blink::Member.1566", %"class.blink::Member.1568", i8, %"class.WTF::Vector.1570" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1557" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1545" }
%"class.blink::HeapVector.1545" = type { %"class.WTF::Vector.1548" }
%"class.WTF::Vector.1548" = type { %"class.WTF::VectorBuffer.1549" }
%"class.WTF::VectorBuffer.1549" = type { %"class.WTF::VectorBufferBase.1550", [32 x i8] }
%"class.WTF::VectorBufferBase.1550" = type { %"struct.std::__1::pair.1551"*, i32, i32 }
%"struct.std::__1::pair.1551" = type { %"class.WTF::AtomicString", %"class.blink::Member.1552" }
%"class.blink::Member.1552" = type { %"class.blink::MemberBase.1553" }
%"class.blink::MemberBase.1553" = type { %"class.blink::HeapVector.1554"* }
%"class.blink::HeapVector.1554" = type opaque
%"class.std::__1::unique_ptr.1557" = type { %"class.std::__1::__compressed_pair.1558" }
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.WTF::Vector.1560"* }
%"class.WTF::Vector.1560" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1570" = type { %"class.WTF::VectorBuffer.1571" }
%"class.WTF::VectorBuffer.1571" = type { %"class.WTF::VectorBufferBase.1572" }
%"class.WTF::VectorBufferBase.1572" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1666" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1573, %"class.std::__1::unique_ptr.827", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.841, i32 }>
%class.scoped_refptr.1573 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.841, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1590", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1657", i8, [7 x i8], %class.scoped_refptr.841, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.854" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.841, %"class.std::__1::unique_ptr.1574", %"class.absl::optional.1584", %"struct.std::__1::atomic.260", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1590", %"class.std::__1::unique_ptr.1595", i8, i64, %class.scoped_refptr.1629, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1630", %"class.base::WeakPtrFactory.1631" }
%"class.std::__1::unique_ptr.1574" = type { %"class.std::__1::__compressed_pair.1575" }
%"class.std::__1::__compressed_pair.1575" = type { %"struct.std::__1::__compressed_pair_elem.1576" }
%"struct.std::__1::__compressed_pair_elem.1576" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.841, i8, %"class.mojo::ScopedHandleBase.1577", %class.scoped_refptr.1578, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1579", i8*, %"class.base::WeakPtrFactory.1580" }
%"class.mojo::ScopedHandleBase.1577" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1578 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1579" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1580" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1584" = type { %"class.absl::optional_internal::optional_data.1585" }
%"class.absl::optional_internal::optional_data.1585" = type { %"class.absl::optional_internal::optional_data_base.1586" }
%"class.absl::optional_internal::optional_data_base.1586" = type { %"class.absl::optional_internal::optional_data_dtor_base.1587" }
%"class.absl::optional_internal::optional_data_dtor_base.1587" = type { i8, %union.anon.1588 }
%union.anon.1588 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1589", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1589" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1595" = type { %"class.std::__1::__compressed_pair.1596" }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1598", i8, i64, %class.scoped_refptr.1599, %class.scoped_refptr.1624 }
%"class.base::RepeatingCallback.1598" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1599 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1600", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1602", %"class.std::__1::map.1613", i8, [7 x i8] }>
%"class.base::RefCounted.1600" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1601 }
%class.scoped_refptr.1601 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1602" = type { %"class.std::__1::__tree.1603" }
%"class.std::__1::__tree.1603" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1604", %"class.std::__1::__compressed_pair.1608" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"class.std::__1::__compressed_pair.1608" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.std::__1::map.1613" = type { %"class.std::__1::__tree.1614" }
%"class.std::__1::__tree.1614" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1615", %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1615" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%class.scoped_refptr.1624 = type { %"class.base::RefCountedData.1625"* }
%"class.base::RefCountedData.1625" = type opaque
%class.scoped_refptr.1629 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1630" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1631" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [7 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1590" = type { %"class.absl::optional_internal::optional_data.1591" }
%"class.absl::optional_internal::optional_data.1591" = type { %"class.absl::optional_internal::optional_data_base.1592" }
%"class.absl::optional_internal::optional_data_base.1592" = type { %"class.absl::optional_internal::optional_data_dtor_base.1593" }
%"class.absl::optional_internal::optional_data_dtor_base.1593" = type { i8, %union.anon.1594 }
%union.anon.1594 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1642 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1642 = type { %"class.std::__1::map.1645" }
%"class.std::__1::map.1645" = type { %"class.std::__1::__tree.1646" }
%"class.std::__1::__tree.1646" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1647", %"class.std::__1::__compressed_pair.1651" }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"class.std::__1::__compressed_pair.1651" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1656"*, i64 }
%"class.std::__1::unique_ptr.1656" = type opaque
%"class.std::__1::map.1657" = type { %"class.std::__1::__tree.1658" }
%"class.std::__1::__tree.1658" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1659", %"class.std::__1::__compressed_pair.1663" }
%"class.std::__1::__compressed_pair.1659" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"class.std::__1::__compressed_pair.1663" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1666" = type { %"class.std::__1::__compressed_pair.1667" }
%"class.std::__1::__compressed_pair.1667" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"struct.std::__1::__compressed_pair_elem.1668" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::Frame"* }
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1535", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1678" }
%"class.base::internal::flat_tree.1678" = type { %"class.std::__1::vector.1679" }
%"class.std::__1::vector.1679" = type { %"class.std::__1::__vector_base.1680" }
%"class.std::__1::__vector_base.1680" = type { %"struct.std::__1::pair.1681"*, %"struct.std::__1::pair.1681"*, %"class.std::__1::__compressed_pair.1682" }
%"struct.std::__1::pair.1681" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1682" = type { %"struct.std::__1::__compressed_pair_elem.1683" }
%"struct.std::__1::__compressed_pair_elem.1683" = type { %"struct.std::__1::pair.1681"* }
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1689" = type { %"class.absl::optional_internal::optional_data.1690" }
%"class.absl::optional_internal::optional_data.1690" = type { %"class.absl::optional_internal::optional_data_base.1691" }
%"class.absl::optional_internal::optional_data_base.1691" = type { %"class.absl::optional_internal::optional_data_dtor_base.1692" }
%"class.absl::optional_internal::optional_data_dtor_base.1692" = type { i8, %union.anon.1693 }
%union.anon.1693 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1699" }
%"class.blink::HeapHashSet.1699" = type { %"class.WTF::HashSet.1702" }
%"class.WTF::HashSet.1702" = type { %"class.WTF::HashTable.1703" }
%"class.WTF::HashTable.1703" = type <{ %"class.blink::WeakMember.1705"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1705" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1706" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1707" }
%"class.blink::HeapHashMap.1707" = type { %"class.WTF::HashMap.1710" }
%"class.WTF::HashMap.1710" = type { %"class.WTF::HashTable.1711" }
%"class.WTF::HashTable.1711" = type <{ %"struct.WTF::KeyValuePair.1713"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1713" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1714" = type { %"class.std::__1::__compressed_pair.1715" }
%"class.std::__1::__compressed_pair.1715" = type { %"struct.std::__1::__compressed_pair_elem.1716" }
%"struct.std::__1::__compressed_pair_elem.1716" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1717", %"class.base::WeakPtrFactory.1722" }
%"class.WTF::HashMap.1717" = type { %"class.WTF::HashTable.1718" }
%"class.WTF::HashTable.1718" = type <{ %"struct.WTF::KeyValuePair.1721"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1721" = type opaque
%"class.base::WeakPtrFactory.1722" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1726" }
%"class.blink::Member.1726" = type { %"class.blink::MemberBase.1727" }
%"class.blink::MemberBase.1727" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2677" }
%"class.blink::WeakMember.2677" = type { %"class.blink::MemberBase.2678" }
%"class.blink::MemberBase.2678" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2679", i64, %"class.std::__1::map.2680", i8*, i64, %"class.base::WeakPtrFactory.2689" }
%"class.base::RepeatingCallback.2679" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2680" = type { %"class.std::__1::__tree.2681" }
%"class.std::__1::__tree.2681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2682", %"class.std::__1::__compressed_pair.2686" }
%"class.std::__1::__compressed_pair.2682" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"class.std::__1::__compressed_pair.2686" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.base::WeakPtrFactory.2689" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1728" = type { %"class.WTF::HashSet.1731" }
%"class.WTF::HashSet.1731" = type { %"class.WTF::HashTable.1732" }
%"class.WTF::HashTable.1732" = type <{ %"class.blink::WeakMember.1734"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1734" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1676", %"class.blink::Member.1735", %"class.blink::Member.1737", %"class.std::__1::unique_ptr.1739", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1745" }
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1739" = type { %"class.std::__1::__compressed_pair.1740" }
%"class.std::__1::__compressed_pair.1740" = type { %"struct.std::__1::__compressed_pair_elem.1741" }
%"struct.std::__1::__compressed_pair_elem.1741" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1745" = type { %"class.WTF::HashTable.1746" }
%"class.WTF::HashTable.1746" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1749" = type { %"class.blink::MemberBase.1750" }
%"class.blink::MemberBase.1750" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2145", %"class.blink::Member.1676", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2150", i8, i32, %"class.blink::Color", %"class.absl::optional.2152", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2157", %"class.blink::Member.2159", %"class.blink::Member.2159", %"class.std::__1::unique_ptr.2162", i32, [4 x i8], %"class.WTF::HashSet.2165", %"class.blink::Member.2172", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2174", %"class.blink::HeapHashSet.2181", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2189", i8, %"class.blink::Member.2195", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2207", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2221", i8, %"class.std::__1::unique_ptr.2227", %"class.std::__1::unique_ptr.2308", %"class.WTF::Vector.2314", i32, %class.scoped_refptr.2319, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2320", %"class.blink::Member.2322", %"class.blink::Member.2324", %"class.blink::HeapHashSet.2326", %"class.blink::HeapHashSet.2333", %"class.std::__1::unique_ptr.2340", %"class.std::__1::unique_ptr.2347", %"class.WTF::Vector.384" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2145" = type { %"class.WTF::HashTable.2146" }
%"class.WTF::HashTable.2146" = type <{ %class.scoped_refptr.2149*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2149 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2150" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2151", { i64, i64 } }
%"class.blink::WeakMember.2151" = type { %"class.blink::MemberBase.1750" }
%"class.absl::optional.2152" = type { %"class.absl::optional_internal::optional_data.2153" }
%"class.absl::optional_internal::optional_data.2153" = type { %"class.absl::optional_internal::optional_data_base.2154" }
%"class.absl::optional_internal::optional_data_base.2154" = type { %"class.absl::optional_internal::optional_data_dtor_base.2155" }
%"class.absl::optional_internal::optional_data_dtor_base.2155" = type { i8, %union.anon.2156 }
%union.anon.2156 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2157" = type { %"class.blink::MemberBase.2158" }
%"class.blink::MemberBase.2158" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2159" = type { %"class.blink::MemberBase.2160" }
%"class.blink::MemberBase.2160" = type { %"class.blink::HeapHashSet.2161"* }
%"class.blink::HeapHashSet.2161" = type opaque
%"class.std::__1::unique_ptr.2162" = type { %"class.std::__1::__compressed_pair.2163" }
%"class.std::__1::__compressed_pair.2163" = type { %"struct.std::__1::__compressed_pair_elem.2164" }
%"struct.std::__1::__compressed_pair_elem.2164" = type { %"class.WTF::HashSet.2165"* }
%"class.WTF::HashSet.2165" = type { %"class.WTF::HashTable.2166" }
%"class.WTF::HashTable.2166" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2172" = type { %"class.blink::MemberBase.2173" }
%"class.blink::MemberBase.2173" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2174" = type { %"class.WTF::HashSet.2177" }
%"class.WTF::HashSet.2177" = type { %"class.WTF::HashTable.2178" }
%"class.WTF::HashTable.2178" = type <{ %"class.blink::Member.2180"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2180" = type opaque
%"class.blink::HeapHashSet.2181" = type { %"class.WTF::HashSet.2184" }
%"class.WTF::HashSet.2184" = type { %"class.WTF::HashTable.2185" }
%"class.WTF::HashTable.2185" = type <{ %"class.blink::Member.2187"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2187" = type { %"class.blink::MemberBase.2188" }
%"class.blink::MemberBase.2188" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2360", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2371", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.60" }
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2362", %"class.blink::Member.2363", %"class.blink::Member.2365", %"class.blink::Member.2367", %"class.blink::Member.2369", %"class.WTF::Vector.384", i16, %class.scoped_refptr.440 }
%"class.blink::ThreadState::PrefinalizerRegistration.2362" = type { i8 }
%"class.blink::Member.2363" = type { %"class.blink::MemberBase.2364" }
%"class.blink::MemberBase.2364" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2365" = type { %"class.blink::MemberBase.2366" }
%"class.blink::MemberBase.2366" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2367" = type { %"class.blink::MemberBase.2368" }
%"class.blink::MemberBase.2368" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2369" = type { %"class.blink::MemberBase.2370" }
%"class.blink::MemberBase.2370" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2371" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2372", { i64, i64 } }
%"class.blink::WeakMember.2372" = type { %"class.blink::MemberBase.2188" }
%"class.std::__1::unique_ptr.2189" = type { %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.2191" }
%"struct.std::__1::__compressed_pair_elem.2191" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2195" = type { %"class.blink::MemberBase.2196" }
%"class.blink::MemberBase.2196" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2199", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2199" = type { %"class.WTF::HashTable.2200" }
%"class.WTF::HashTable.2200" = type <{ %"struct.WTF::KeyValuePair.2202"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2202" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2203", i32, i32 }
%"class.WTF::Vector.2203" = type { %"class.WTF::VectorBuffer.2204" }
%"class.WTF::VectorBuffer.2204" = type { %"class.WTF::VectorBufferBase.2205" }
%"class.WTF::VectorBufferBase.2205" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2207" = type { %"class.WTF::LinkedHashSet.2210" }
%"class.WTF::LinkedHashSet.2210" = type { %"class.WTF::HashMap.2211", %"class.WTF::VectorBackedLinkedList.2215" }
%"class.WTF::HashMap.2211" = type { %"class.WTF::HashTable.2212" }
%"class.WTF::HashTable.2212" = type <{ %"struct.WTF::KeyValuePair.2214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2214" = type opaque
%"class.WTF::VectorBackedLinkedList.2215" = type { %"class.WTF::Vector.2216", i32, i32 }
%"class.WTF::Vector.2216" = type { %"class.WTF::VectorBuffer.2217" }
%"class.WTF::VectorBuffer.2217" = type { %"class.WTF::VectorBufferBase.2218" }
%"class.WTF::VectorBufferBase.2218" = type { %"class.WTF::VectorBackedLinkedListNode.2219"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2219" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2221" = type { %"class.std::__1::__compressed_pair.2222" }
%"class.std::__1::__compressed_pair.2222" = type { %"struct.std::__1::__compressed_pair_elem.2223" }
%"struct.std::__1::__compressed_pair_elem.2223" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2227" = type { %"class.std::__1::__compressed_pair.2228" }
%"class.std::__1::__compressed_pair.2228" = type { %"struct.std::__1::__compressed_pair_elem.2229" }
%"struct.std::__1::__compressed_pair_elem.2229" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2230, %class.scoped_refptr.2230, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2285", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2290", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2230 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2231", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2238" }
%"class.WTF::RefCounted.2231" = type { %"class.base::RefCounted.2232" }
%"class.base::RefCounted.2232" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2233", i32, [4 x i8] }>
%"class.WTF::Vector.2233" = type { %"class.WTF::VectorBuffer.2234" }
%"class.WTF::VectorBuffer.2234" = type { %"class.WTF::VectorBufferBase.2235" }
%"class.WTF::VectorBufferBase.2235" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2238" = type { %"class.WTF::VectorBuffer.2239" }
%"class.WTF::VectorBuffer.2239" = type { %"class.WTF::VectorBufferBase.2240" }
%"class.WTF::VectorBufferBase.2240" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2241", %"class.std::__1::unique_ptr.2257", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2241" = type { %"class.std::__1::__compressed_pair.2242" }
%"class.std::__1::__compressed_pair.2242" = type { %"struct.std::__1::__compressed_pair_elem.2243" }
%"struct.std::__1::__compressed_pair_elem.2243" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2244", %"class.WTF::Vector.2249", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2244" = type { %"class.WTF::VectorBuffer.2245" }
%"class.WTF::VectorBuffer.2245" = type { %"class.WTF::VectorBufferBase.2246" }
%"class.WTF::VectorBufferBase.2246" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2249" = type { %"class.WTF::VectorBuffer.2250" }
%"class.WTF::VectorBuffer.2250" = type { %"class.WTF::VectorBufferBase.2251" }
%"class.WTF::VectorBufferBase.2251" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2257" = type { %"class.std::__1::__compressed_pair.2258" }
%"class.std::__1::__compressed_pair.2258" = type { %"struct.std::__1::__compressed_pair_elem.2259" }
%"struct.std::__1::__compressed_pair_elem.2259" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2260", %"class.absl::optional.2260" }
%"class.absl::optional.2260" = type { %"class.absl::optional_internal::optional_data.2261" }
%"class.absl::optional_internal::optional_data.2261" = type { %"class.absl::optional_internal::optional_data_base.2262" }
%"class.absl::optional_internal::optional_data_base.2262" = type { %"class.absl::optional_internal::optional_data_dtor_base.2263" }
%"class.absl::optional_internal::optional_data_dtor_base.2263" = type { i8, [3 x i8], %union.anon.2264 }
%union.anon.2264 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2238"*, %"class.absl::optional.2270", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2270" = type { %"class.absl::optional_internal::optional_data.2271" }
%"class.absl::optional_internal::optional_data.2271" = type { %"class.absl::optional_internal::optional_data_base.2272" }
%"class.absl::optional_internal::optional_data_base.2272" = type { %"class.absl::optional_internal::optional_data_dtor_base.2273" }
%"class.absl::optional_internal::optional_data_dtor_base.2273" = type { i8, %union.anon.2274 }
%union.anon.2274 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2275", %"class.WTF::Vector.2280" }
%"class.WTF::Vector.2275" = type { %"class.WTF::VectorBuffer.2276" }
%"class.WTF::VectorBuffer.2276" = type { %"class.WTF::VectorBufferBase.2277", [128 x i8] }
%"class.WTF::VectorBufferBase.2277" = type { i32*, i32, i32 }
%"class.WTF::Vector.2280" = type { %"class.WTF::VectorBuffer.2281" }
%"class.WTF::VectorBuffer.2281" = type { %"class.WTF::VectorBufferBase.2282", [128 x i8] }
%"class.WTF::VectorBufferBase.2282" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2285" = type { %"class.WTF::VectorBuffer.2286" }
%"class.WTF::VectorBuffer.2286" = type { %"class.WTF::VectorBufferBase.2287" }
%"class.WTF::VectorBufferBase.2287" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2290" = type { %"class.WTF::HashTable.2291" }
%"class.WTF::HashTable.2291" = type <{ %"struct.WTF::KeyValuePair.2294"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2294" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2295", %"class.WTF::Vector.2300" }
%"class.WTF::HashMap.2295" = type { %"class.WTF::HashTable.2296" }
%"class.WTF::HashTable.2296" = type <{ %"struct.WTF::KeyValuePair.2299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2299" = type opaque
%"class.WTF::Vector.2300" = type { %"class.WTF::VectorBuffer.2301" }
%"class.WTF::VectorBuffer.2301" = type { %"class.WTF::VectorBufferBase.2302" }
%"class.WTF::VectorBufferBase.2302" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2308" = type { %"class.std::__1::__compressed_pair.2309" }
%"class.std::__1::__compressed_pair.2309" = type { %"struct.std::__1::__compressed_pair_elem.2310" }
%"struct.std::__1::__compressed_pair_elem.2310" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2314" = type { %"class.WTF::VectorBuffer.2315" }
%"class.WTF::VectorBuffer.2315" = type { %"class.WTF::VectorBufferBase.2316" }
%"class.WTF::VectorBufferBase.2316" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2319 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2322" = type { %"class.blink::MemberBase.2323" }
%"class.blink::MemberBase.2323" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2324" = type { %"class.blink::MemberBase.2325" }
%"class.blink::MemberBase.2325" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2326" = type { %"class.WTF::HashSet.2329" }
%"class.WTF::HashSet.2329" = type { %"class.WTF::HashTable.2330" }
%"class.WTF::HashTable.2330" = type <{ %"class.blink::WeakMember.2332"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2332" = type opaque
%"class.blink::HeapHashSet.2333" = type { %"class.WTF::HashSet.2336" }
%"class.WTF::HashSet.2336" = type { %"class.WTF::HashTable.2337" }
%"class.WTF::HashTable.2337" = type <{ %"class.blink::WeakMember.2339"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2339" = type opaque
%"class.std::__1::unique_ptr.2340" = type { %"class.std::__1::__compressed_pair.2341" }
%"class.std::__1::__compressed_pair.2341" = type { %"struct.std::__1::__compressed_pair_elem.2342" }
%"struct.std::__1::__compressed_pair_elem.2342" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2343" }
%"class.base::time_internal::TimeBase.2343" = type { i64 }
%"class.std::__1::unique_ptr.2347" = type { %"class.std::__1::__compressed_pair.2348" }
%"class.std::__1::__compressed_pair.2348" = type { %"struct.std::__1::__compressed_pair_elem.2349" }
%"struct.std::__1::__compressed_pair_elem.2349" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2350", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2350" = type { %"class.absl::optional_internal::optional_data.2351" }
%"class.absl::optional_internal::optional_data.2351" = type { %"class.absl::optional_internal::optional_data_base.2352" }
%"class.absl::optional_internal::optional_data_base.2352" = type { %"class.absl::optional_internal::optional_data_dtor_base.2353" }
%"class.absl::optional_internal::optional_data_dtor_base.2353" = type { i8, %union.anon.2354 }
%union.anon.2354 = type { %"class.base::Time" }
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1753" = type { %"class.blink::MemberBase.1754" }
%"class.blink::MemberBase.1754" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1676", %"class.blink::Member.1757", %"class.blink::Member.1759", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1761", %"class.blink::Member.1767" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.443" }
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.1759" = type { %"class.blink::MemberBase.1760" }
%"class.blink::MemberBase.1760" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.1767" = type { %"class.blink::MemberBase.1768" }
%"class.blink::MemberBase.1768" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.1769" = type { %"class.blink::MemberBase.1770" }
%"class.blink::MemberBase.1770" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1771" = type { %"class.blink::MemberBase.1772" }
%"class.blink::MemberBase.1772" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1773" = type { %"class.blink::MemberBase.1774" }
%"class.blink::MemberBase.1774" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1784", %"class.blink::HeapListHashSet.1795", %"class.blink::HeapListHashSet.1806", %"class.blink::HeapListHashSet.1817", %"class.blink::HeapListHashSet.1828", %"class.blink::HeapListHashSet.1839", %"class.blink::HeapListHashSet.1850", %"class.blink::HeapListHashSet.1861", %"class.blink::HeapListHashSet.1872", %"class.blink::HeapListHashSet.1883", %"class.blink::HeapListHashSet.1894", %"class.blink::HeapListHashSet.1905", %"class.blink::HeapListHashSet.1916", %"class.blink::HeapListHashSet.1927", %"class.blink::HeapListHashSet.1938", %"class.blink::HeapListHashSet.1949", %"class.blink::HeapListHashSet.1960", %"class.blink::HeapListHashSet.1971", %"class.blink::HeapListHashSet.1982" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1780", %"class.blink::Member.1782", %"class.blink::Member.1782", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1780" = type <{ %"class.blink::Member.1782"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1782" = type { %"class.blink::MemberBase.1783" }
%"class.blink::MemberBase.1783" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1996", %"class.blink::Member.1782", %"class.blink::Member.1782" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1784" = type { %"class.WTF::ListHashSet.base.1794", [7 x i8] }
%"class.WTF::ListHashSet.base.1794" = type <{ %"class.WTF::HashTable.1789", %"class.blink::Member.1791", %"class.blink::Member.1791", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1789" = type <{ %"class.blink::Member.1791"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1791" = type { %"class.blink::MemberBase.1792" }
%"class.blink::MemberBase.1792" = type { %"class.blink::HeapListHashSetNode.1793"* }
%"class.blink::HeapListHashSetNode.1793" = type { %"class.blink::Member.2139", %"class.blink::Member.1791", %"class.blink::Member.1791" }
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1795" = type { %"class.WTF::ListHashSet.base.1805", [7 x i8] }
%"class.WTF::ListHashSet.base.1805" = type <{ %"class.WTF::HashTable.1800", %"class.blink::Member.1802", %"class.blink::Member.1802", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1800" = type <{ %"class.blink::Member.1802"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1802" = type { %"class.blink::MemberBase.1803" }
%"class.blink::MemberBase.1803" = type { %"class.blink::HeapListHashSetNode.1804"* }
%"class.blink::HeapListHashSetNode.1804" = type { %"class.blink::Member.2135", %"class.blink::Member.1802", %"class.blink::Member.1802" }
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1806" = type { %"class.WTF::ListHashSet.base.1816", [7 x i8] }
%"class.WTF::ListHashSet.base.1816" = type <{ %"class.WTF::HashTable.1811", %"class.blink::Member.1813", %"class.blink::Member.1813", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1811" = type <{ %"class.blink::Member.1813"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1813" = type { %"class.blink::MemberBase.1814" }
%"class.blink::MemberBase.1814" = type { %"class.blink::HeapListHashSetNode.1815"* }
%"class.blink::HeapListHashSetNode.1815" = type { %"class.blink::Member.2131", %"class.blink::Member.1813", %"class.blink::Member.1813" }
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1817" = type { %"class.WTF::ListHashSet.base.1827", [7 x i8] }
%"class.WTF::ListHashSet.base.1827" = type <{ %"class.WTF::HashTable.1822", %"class.blink::Member.1824", %"class.blink::Member.1824", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1822" = type <{ %"class.blink::Member.1824"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1824" = type { %"class.blink::MemberBase.1825" }
%"class.blink::MemberBase.1825" = type { %"class.blink::HeapListHashSetNode.1826"* }
%"class.blink::HeapListHashSetNode.1826" = type { %"class.blink::Member.2127", %"class.blink::Member.1824", %"class.blink::Member.1824" }
%"class.blink::Member.2127" = type { %"class.blink::MemberBase.2128" }
%"class.blink::MemberBase.2128" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1828" = type { %"class.WTF::ListHashSet.base.1838", [7 x i8] }
%"class.WTF::ListHashSet.base.1838" = type <{ %"class.WTF::HashTable.1833", %"class.blink::Member.1835", %"class.blink::Member.1835", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1833" = type <{ %"class.blink::Member.1835"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1835" = type { %"class.blink::MemberBase.1836" }
%"class.blink::MemberBase.1836" = type { %"class.blink::HeapListHashSetNode.1837"* }
%"class.blink::HeapListHashSetNode.1837" = type { %"class.blink::Member.2123", %"class.blink::Member.1835", %"class.blink::Member.1835" }
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1839" = type { %"class.WTF::ListHashSet.base.1849", [7 x i8] }
%"class.WTF::ListHashSet.base.1849" = type <{ %"class.WTF::HashTable.1844", %"class.blink::Member.1846", %"class.blink::Member.1846", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1844" = type <{ %"class.blink::Member.1846"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::HeapListHashSetNode.1848"* }
%"class.blink::HeapListHashSetNode.1848" = type { %"class.blink::Member.2119", %"class.blink::Member.1846", %"class.blink::Member.1846" }
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1850" = type { %"class.WTF::ListHashSet.base.1860", [7 x i8] }
%"class.WTF::ListHashSet.base.1860" = type <{ %"class.WTF::HashTable.1855", %"class.blink::Member.1857", %"class.blink::Member.1857", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1855" = type <{ %"class.blink::Member.1857"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::HeapListHashSetNode.1859"* }
%"class.blink::HeapListHashSetNode.1859" = type { %"class.blink::Member.2115", %"class.blink::Member.1857", %"class.blink::Member.1857" }
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1861" = type { %"class.WTF::ListHashSet.base.1871", [7 x i8] }
%"class.WTF::ListHashSet.base.1871" = type <{ %"class.WTF::HashTable.1866", %"class.blink::Member.1868", %"class.blink::Member.1868", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1866" = type <{ %"class.blink::Member.1868"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1868" = type { %"class.blink::MemberBase.1869" }
%"class.blink::MemberBase.1869" = type { %"class.blink::HeapListHashSetNode.1870"* }
%"class.blink::HeapListHashSetNode.1870" = type { %"class.blink::Member.2111", %"class.blink::Member.1868", %"class.blink::Member.1868" }
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1872" = type { %"class.WTF::ListHashSet.base.1882", [7 x i8] }
%"class.WTF::ListHashSet.base.1882" = type <{ %"class.WTF::HashTable.1877", %"class.blink::Member.1879", %"class.blink::Member.1879", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1877" = type <{ %"class.blink::Member.1879"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.1880" }
%"class.blink::MemberBase.1880" = type { %"class.blink::HeapListHashSetNode.1881"* }
%"class.blink::HeapListHashSetNode.1881" = type { %"class.blink::Member.2107", %"class.blink::Member.1879", %"class.blink::Member.1879" }
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1883" = type { %"class.WTF::ListHashSet.base.1893", [7 x i8] }
%"class.WTF::ListHashSet.base.1893" = type <{ %"class.WTF::HashTable.1888", %"class.blink::Member.1890", %"class.blink::Member.1890", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1888" = type <{ %"class.blink::Member.1890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::HeapListHashSetNode.1892"* }
%"class.blink::HeapListHashSetNode.1892" = type { %"class.blink::Member.2000", %"class.blink::Member.1890", %"class.blink::Member.1890" }
%"class.blink::HeapListHashSet.1894" = type { %"class.WTF::ListHashSet.base.1904", [7 x i8] }
%"class.WTF::ListHashSet.base.1904" = type <{ %"class.WTF::HashTable.1899", %"class.blink::Member.1901", %"class.blink::Member.1901", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1899" = type <{ %"class.blink::Member.1901"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1901" = type { %"class.blink::MemberBase.1902" }
%"class.blink::MemberBase.1902" = type { %"class.blink::HeapListHashSetNode.1903"* }
%"class.blink::HeapListHashSetNode.1903" = type { %"class.blink::Member.2101", %"class.blink::Member.1901", %"class.blink::Member.1901" }
%"class.blink::Member.2101" = type { %"class.blink::MemberBase.2102" }
%"class.blink::MemberBase.2102" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1905" = type { %"class.WTF::ListHashSet.base.1915", [7 x i8] }
%"class.WTF::ListHashSet.base.1915" = type <{ %"class.WTF::HashTable.1910", %"class.blink::Member.1912", %"class.blink::Member.1912", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1910" = type <{ %"class.blink::Member.1912"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::HeapListHashSetNode.1914"* }
%"class.blink::HeapListHashSetNode.1914" = type { %"class.blink::Member.2097", %"class.blink::Member.1912", %"class.blink::Member.1912" }
%"class.blink::Member.2097" = type { %"class.blink::MemberBase.2098" }
%"class.blink::MemberBase.2098" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1916" = type { %"class.WTF::ListHashSet.base.1926", [7 x i8] }
%"class.WTF::ListHashSet.base.1926" = type <{ %"class.WTF::HashTable.1921", %"class.blink::Member.1923", %"class.blink::Member.1923", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1921" = type <{ %"class.blink::Member.1923"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1923" = type { %"class.blink::MemberBase.1924" }
%"class.blink::MemberBase.1924" = type { %"class.blink::HeapListHashSetNode.1925"* }
%"class.blink::HeapListHashSetNode.1925" = type { %"class.blink::Member.2093", %"class.blink::Member.1923", %"class.blink::Member.1923" }
%"class.blink::Member.2093" = type { %"class.blink::MemberBase.2094" }
%"class.blink::MemberBase.2094" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1927" = type { %"class.WTF::ListHashSet.base.1937", [7 x i8] }
%"class.WTF::ListHashSet.base.1937" = type <{ %"class.WTF::HashTable.1932", %"class.blink::Member.1934", %"class.blink::Member.1934", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1932" = type <{ %"class.blink::Member.1934"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1934" = type { %"class.blink::MemberBase.1935" }
%"class.blink::MemberBase.1935" = type { %"class.blink::HeapListHashSetNode.1936"* }
%"class.blink::HeapListHashSetNode.1936" = type { %"class.blink::Member.2089", %"class.blink::Member.1934", %"class.blink::Member.1934" }
%"class.blink::Member.2089" = type { %"class.blink::MemberBase.2090" }
%"class.blink::MemberBase.2090" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1938" = type { %"class.WTF::ListHashSet.base.1948", [7 x i8] }
%"class.WTF::ListHashSet.base.1948" = type <{ %"class.WTF::HashTable.1943", %"class.blink::Member.1945", %"class.blink::Member.1945", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1943" = type <{ %"class.blink::Member.1945"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1945" = type { %"class.blink::MemberBase.1946" }
%"class.blink::MemberBase.1946" = type { %"class.blink::HeapListHashSetNode.1947"* }
%"class.blink::HeapListHashSetNode.1947" = type { %"class.blink::Member.2085", %"class.blink::Member.1945", %"class.blink::Member.1945" }
%"class.blink::Member.2085" = type { %"class.blink::MemberBase.2086" }
%"class.blink::MemberBase.2086" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1949" = type { %"class.WTF::ListHashSet.base.1959", [7 x i8] }
%"class.WTF::ListHashSet.base.1959" = type <{ %"class.WTF::HashTable.1954", %"class.blink::Member.1956", %"class.blink::Member.1956", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1954" = type <{ %"class.blink::Member.1956"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::HeapListHashSetNode.1958"* }
%"class.blink::HeapListHashSetNode.1958" = type { %"class.blink::Member.2081", %"class.blink::Member.1956", %"class.blink::Member.1956" }
%"class.blink::Member.2081" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1960" = type { %"class.WTF::ListHashSet.base.1970", [7 x i8] }
%"class.WTF::ListHashSet.base.1970" = type <{ %"class.WTF::HashTable.1965", %"class.blink::Member.1967", %"class.blink::Member.1967", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1965" = type <{ %"class.blink::Member.1967"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::HeapListHashSetNode.1969"* }
%"class.blink::HeapListHashSetNode.1969" = type { %"class.blink::Member.2077", %"class.blink::Member.1967", %"class.blink::Member.1967" }
%"class.blink::Member.2077" = type { %"class.blink::MemberBase.2078" }
%"class.blink::MemberBase.2078" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1971" = type { %"class.WTF::ListHashSet.base.1981", [7 x i8] }
%"class.WTF::ListHashSet.base.1981" = type <{ %"class.WTF::HashTable.1976", %"class.blink::Member.1978", %"class.blink::Member.1978", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1976" = type <{ %"class.blink::Member.1978"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::HeapListHashSetNode.1980"* }
%"class.blink::HeapListHashSetNode.1980" = type { %"class.blink::Member.2002", %"class.blink::Member.1978", %"class.blink::Member.1978" }
%"class.blink::HeapListHashSet.1982" = type { %"class.WTF::ListHashSet.base.1992", [7 x i8] }
%"class.WTF::ListHashSet.base.1992" = type <{ %"class.WTF::HashTable.1987", %"class.blink::Member.1989", %"class.blink::Member.1989", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1987" = type <{ %"class.blink::Member.1989"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::HeapListHashSetNode.1991"* }
%"class.blink::HeapListHashSetNode.1991" = type { %"class.blink::Member.1994", %"class.blink::Member.1989", %"class.blink::Member.1989" }
%class.scoped_refptr.1993 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1994" = type { %"class.blink::MemberBase.1995" }
%"class.blink::MemberBase.1995" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1996" = type { %"class.blink::MemberBase.1997" }
%"class.blink::MemberBase.1997" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1998" = type { %"class.blink::MemberBase.1999" }
%"class.blink::MemberBase.1999" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2000" = type { %"class.blink::MemberBase.2001" }
%"class.blink::MemberBase.2001" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2002" = type { %"class.blink::MemberBase.2003" }
%"class.blink::MemberBase.2003" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2006" = type { %"class.blink::MemberBase.2007" }
%"class.blink::MemberBase.2007" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2008" = type { %"class.blink::MemberBase.2009" }
%"class.blink::MemberBase.2009" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2010" }
%"class.blink::Member.2010" = type { %"class.blink::MemberBase.2011" }
%"class.blink::MemberBase.2011" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2692" }
%"class.mojo::Remote.2692" = type { %"class.mojo::internal::InterfacePtrState.2693" }
%"class.mojo::internal::InterfacePtrState.2693" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2694" }
%"class.std::__1::unique_ptr.2694" = type { %"class.std::__1::__compressed_pair.2695" }
%"class.std::__1::__compressed_pair.2695" = type { %"struct.std::__1::__compressed_pair_elem.2696" }
%"struct.std::__1::__compressed_pair_elem.2696" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2012" = type { %"class.std::__1::__compressed_pair.2013" }
%"class.std::__1::__compressed_pair.2013" = type { %"struct.std::__1::__compressed_pair_elem.2014" }
%"struct.std::__1::__compressed_pair_elem.2014" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2018" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2019" = type { %"class.std::__1::__compressed_pair.2020" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.2021" }
%"struct.std::__1::__compressed_pair_elem.2021" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1694" = type { %"class.absl::optional_internal::optional_data.1695" }
%"class.absl::optional_internal::optional_data.1695" = type { %"class.absl::optional_internal::optional_data_base.1696" }
%"class.absl::optional_internal::optional_data_base.1696" = type { %"class.absl::optional_internal::optional_data_dtor_base.1697" }
%"class.absl::optional_internal::optional_data_dtor_base.1697" = type { i8, %union.anon.1698 }
%union.anon.1698 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2025" = type { %"class.std::__1::__compressed_pair.2026" }
%"class.std::__1::__compressed_pair.2026" = type { %"struct.std::__1::__compressed_pair_elem.2027" }
%"struct.std::__1::__compressed_pair_elem.2027" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2031" }
%"class.blink::Member.2031" = type { %"class.blink::MemberBase.2032" }
%"class.blink::MemberBase.2032" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2702" }
%"class.mojo::AssociatedRemote.2702" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2703" }
%"class.mojo::internal::AssociatedInterfacePtrState.2703" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2704" }
%"class.std::__1::unique_ptr.2704" = type { %"class.std::__1::__compressed_pair.2705" }
%"class.std::__1::__compressed_pair.2705" = type { %"struct.std::__1::__compressed_pair_elem.2706" }
%"struct.std::__1::__compressed_pair_elem.2706" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2033" = type { %"class.blink::Member.2034" }
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2712" }
%"class.mojo::AssociatedRemote.2712" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2713" }
%"class.mojo::internal::AssociatedInterfacePtrState.2713" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2714" }
%"class.std::__1::unique_ptr.2714" = type { %"class.std::__1::__compressed_pair.2715" }
%"class.std::__1::__compressed_pair.2715" = type { %"struct.std::__1::__compressed_pair_elem.2716" }
%"struct.std::__1::__compressed_pair_elem.2716" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2036" }
%"class.blink::Member.2036" = type { %"class.blink::MemberBase.2037" }
%"class.blink::MemberBase.2037" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2722", %"class.blink::Member.1676", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2722" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2723" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.827" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2723" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2038" = type { %"class.blink::Member.2039" }
%"class.blink::Member.2039" = type { %"class.blink::MemberBase.2040" }
%"class.blink::MemberBase.2040" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2726", %"class.blink::Member.1676", %"class.mojo::AssociatedReceiver.2727" }
%"class.blink::ThreadState::PrefinalizerRegistration.2726" = type { i8 }
%"class.mojo::AssociatedReceiver.2727" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2728" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2728" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2041" }
%"class.blink::Member.2041" = type { %"class.blink::MemberBase.2042" }
%"class.blink::MemberBase.2042" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2731", %"class.blink::Member.1676", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2731" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1573, %"class.std::__1::unique_ptr.827", %"class.base::WeakPtrFactory.2732" }
%"class.base::WeakPtrFactory.2732" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2043" = type { %"class.blink::Member.2044" }
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2735", %"class.blink::Member.1676", %"class.mojo::AssociatedReceiver.2736" }
%"class.blink::ThreadState::PrefinalizerRegistration.2735" = type { i8 }
%"class.mojo::AssociatedReceiver.2736" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2737" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2737" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::HeapHashMap.2054"* }
%"class.blink::HeapHashMap.2054" = type opaque
%"class.mojo::StructPtr.2055" = type { %"class.std::__1::unique_ptr.2056" }
%"class.std::__1::unique_ptr.2056" = type { %"class.std::__1::__compressed_pair.2057" }
%"class.std::__1::__compressed_pair.2057" = type { %"struct.std::__1::__compressed_pair_elem.2058" }
%"struct.std::__1::__compressed_pair_elem.2058" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2059", %"class.mojo::InlinedStructPtr.2060" }
%"class.mojo::InlinedStructPtr.2059" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2060" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2064" = type { %"class.blink::MemberBase.2065" }
%"class.blink::MemberBase.2065" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2066" = type { %"class.absl::optional_internal::optional_data.2067" }
%"class.absl::optional_internal::optional_data.2067" = type { %"class.absl::optional_internal::optional_data_base.2068" }
%"class.absl::optional_internal::optional_data_base.2068" = type { %"class.absl::optional_internal::optional_data_dtor_base.2069" }
%"class.absl::optional_internal::optional_data_dtor_base.2069" = type { i8, %union.anon.2070 }
%union.anon.2070 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::SpellChecker" = type { %"class.blink::Member.391", %"class.blink::Member.2491", %"class.blink::Member.2493" }
%"class.blink::Member.2491" = type { %"class.blink::MemberBase.2492" }
%"class.blink::MemberBase.2492" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2493" = type { %"class.blink::MemberBase.2494" }
%"class.blink::MemberBase.2494" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2767" }
%"class.WTF::Vector.2767" = type { %"class.WTF::VectorBuffer.2768" }
%"class.WTF::VectorBuffer.2768" = type { %"class.WTF::VectorBufferBase.2769", [64 x i8] }
%"class.WTF::VectorBufferBase.2769" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2500", i8* }
%"class.WTF::StringAppend.2500" = type { i8*, %"class.WTF::AtomicString" }
%"class.WTF::StringTypeAdapter.2846" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::JSEventHandlerForContentAttribute" = type { %"class.blink::JSEventHandler.base", i8, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition", %"class.v8::Isolate"* }
%"class.blink::JSEventHandler.base" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.2508", i32 }>
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2503" }
%"class.absl::optional.2503" = type { %"class.absl::optional_internal::optional_data.2504" }
%"class.absl::optional_internal::optional_data.2504" = type { %"class.absl::optional_internal::optional_data_base.2505" }
%"class.absl::optional_internal::optional_data_base.2505" = type { %"class.absl::optional_internal::optional_data_dtor_base.2506" }
%"class.absl::optional_internal::optional_data_dtor_base.2506" = type { i8, %union.anon.2507 }
%union.anon.2507 = type { i64 }
%"class.blink::Member.2508" = type { %"class.blink::MemberBase.2509" }
%"class.blink::MemberBase.2509" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.2512", %"class.blink::Member.2512" }
%"class.blink::Member.2512" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2516, %"class.blink::Member.2517", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2521" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2516 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2519" }
%"class.blink::Persistent.2519" = type { %"class.blink::PersistentBase.2520" }
%"class.blink::PersistentBase.2520" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.437" }
%"class.util::TokenType.2521" = type { %"class.base::StrongAlias.2522" }
%"class.base::StrongAlias.2522" = type { %"class.base::UnguessableToken" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::FormData" = type opaque
%"class.blink::ScopedEventQueue" = type <{ %"class.blink::Persistent.2803", i32, [4 x i8] }>
%"class.blink::Persistent.2803" = type { %"class.blink::PersistentBase.2804" }
%"class.blink::PersistentBase.2804" = type { %"class.blink::HeapVector.2805"*, %"class.blink::PersistentNodePtr.437" }
%"class.blink::HeapVector.2805" = type opaque
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.920", %class.scoped_refptr.422 }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.v8::Date" = type { i8 }
%"class.blink::EventDispatchHandlingState" = type { i32 (...)** }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2525", %"class.blink::Member.2525", %"class.blink::Member.2527", %"class.blink::Member.2529", %"class.base::TimeTicks" }
%"class.blink::Member.2525" = type { %"class.blink::MemberBase.2526" }
%"class.blink::MemberBase.2526" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2527" = type { %"class.blink::MemberBase.2528" }
%"class.blink::MemberBase.2528" = type { %"class.blink::Event"* }
%"class.blink::Member.2529" = type { %"class.blink::MemberBase.2530" }
%"class.blink::MemberBase.2530" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::MouseEvent" = type <{ %"class.blink::UIEventWithKeyState.base", [4 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i8, [7 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i32, i16, i16, %"class.blink::Member.2525", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.1541", i32, %"class.blink::Member.2531" }
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2532" }
%"class.blink::MemberBase.2532" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::DoublePoint" = type { double, double }
%"class.blink::ClickHandlingState" = type { %"class.blink::EventDispatchHandlingState", i8, i8, %"class.blink::Member.52" }
%"class.blink::Persistent.2539" = type { %"class.blink::PersistentBase.2540" }
%"class.blink::PersistentBase.2540" = type { %"class.blink::HTMLInputElement"*, %"class.blink::PersistentNodePtr.2541" }
%"class.blink::PersistentNodePtr.2541" = type { %"class.blink::PersistentNode"* }
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.2533", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.std::__1::unique_ptr.2533" = type { %"class.std::__1::__compressed_pair.2534" }
%"class.std::__1::__compressed_pair.2534" = type { %"struct.std::__1::__compressed_pair_elem.2535" }
%"struct.std::__1::__compressed_pair_elem.2535" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.441", [4 x i8] }>
%"class.blink::BeforeTextInsertedEvent" = type { %"class.blink::Event", %"class.WTF::String" }
%"class.blink::FileList" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector.2542" }
%"class.blink::HeapVector.2542" = type { %"class.WTF::Vector.2545" }
%"class.WTF::Vector.2545" = type { %"class.WTF::VectorBuffer.2546" }
%"class.WTF::VectorBuffer.2546" = type { %"class.WTF::VectorBufferBase.2547" }
%"class.WTF::VectorBufferBase.2547" = type { %"class.blink::Member.2548"*, i32, i32 }
%"class.blink::Member.2548" = type { %"class.blink::MemberBase.2671" }
%"class.blink::MemberBase.2671" = type { %"class.blink::File"* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional.2503", %"class.absl::optional.2350", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.2672 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.2672 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.2673", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.2673" = type { %"class.base::RefCountedThreadSafe.2674" }
%"class.base::RefCountedThreadSafe.2674" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.blink::DragData" = type opaque
%"class.blink::ColorChooserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HTMLDataListElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLDataListOptionsCollection" = type { %"class.blink::HTMLCollection" }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.2550", %"class.blink::CollectionItemsCache" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.305", i16 }>
%"class.blink::Member.2550" = type { %"class.blink::MemberBase.2551" }
%"class.blink::MemberBase.2551" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.2554", %"class.blink::HeapHashMap.2554" }
%"class.blink::HeapHashMap.2554" = type { %"class.WTF::HashMap.2557" }
%"class.WTF::HashMap.2557" = type { %"class.WTF::HashTable.2558" }
%"class.WTF::HashTable.2558" = type <{ %"struct.WTF::KeyValuePair.2560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2560" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.2561" }
%"class.blink::Member.2561" = type { %"class.blink::MemberBase.2562" }
%"class.blink::MemberBase.2562" = type { %"class.blink::HeapVector.324"* }
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector.324" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.60", i32, i32 }
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.2563", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.2563" = type { %"class.blink::MemberBase.2564" }
%"class.blink::MemberBase.2564" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::HeapVector.2565" = type { %"class.WTF::Vector.2568" }
%"class.WTF::Vector.2568" = type { %"class.WTF::VectorBuffer.2569" }
%"class.WTF::VectorBuffer.2569" = type { %"class.WTF::VectorBufferBase.2570" }
%"class.WTF::VectorBufferBase.2570" = type { %"class.blink::Member.2571"*, i32, i32 }
%"class.blink::Member.2571" = type { %"class.blink::MemberBase.2738" }
%"class.blink::MemberBase.2738" = type { %"class.blink::HTMLOptionElement"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.2573, %"class.WTF::Vector.2574", %"class.std::__1::unique_ptr.2579", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.2600, %"class.blink::Persistent.2601" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2573 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.2574" = type { %"class.WTF::VectorBuffer.2575" }
%"class.WTF::VectorBuffer.2575" = type { %"class.WTF::VectorBufferBase.2576", [8 x i8] }
%"class.WTF::VectorBufferBase.2576" = type { %class.scoped_refptr.2573*, i32, i32 }
%"class.std::__1::unique_ptr.2579" = type { %"class.std::__1::__compressed_pair.2580" }
%"class.std::__1::__compressed_pair.2580" = type { %"struct.std::__1::__compressed_pair_elem.2581" }
%"struct.std::__1::__compressed_pair_elem.2581" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.2582", %"class.absl::optional.2587", %"class.absl::optional.2592" }
%"class.absl::optional.2582" = type { %"class.absl::optional_internal::optional_data.2583" }
%"class.absl::optional_internal::optional_data.2583" = type { %"class.absl::optional_internal::optional_data_base.2584" }
%"class.absl::optional_internal::optional_data_base.2584" = type { %"class.absl::optional_internal::optional_data_dtor_base.2585" }
%"class.absl::optional_internal::optional_data_dtor_base.2585" = type { i8, %union.anon.2586 }
%union.anon.2586 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.2587" = type { %"class.absl::optional_internal::optional_data.2588" }
%"class.absl::optional_internal::optional_data.2588" = type { %"class.absl::optional_internal::optional_data_base.2589" }
%"class.absl::optional_internal::optional_data_base.2589" = type { %"class.absl::optional_internal::optional_data_dtor_base.2590" }
%"class.absl::optional_internal::optional_data_dtor_base.2590" = type { i8, [3 x i8], %union.anon.2591 }
%union.anon.2591 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.2592" = type { %"class.absl::optional_internal::optional_data.2593" }
%"class.absl::optional_internal::optional_data.2593" = type { %"class.absl::optional_internal::optional_data_base.2594" }
%"class.absl::optional_internal::optional_data_base.2594" = type { %"class.absl::optional_internal::optional_data_dtor_base.2595" }
%"class.absl::optional_internal::optional_data_dtor_base.2595" = type { i8, %union.anon.2596 }
%union.anon.2596 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.2600 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.2601" = type { %"class.blink::PersistentBase.2602" }
%"class.blink::PersistentBase.2602" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.437" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.2605", %"struct.blink::PhysicalRect", %"class.blink::Member.2615" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.2605" = type { %"class.std::__1::__compressed_pair.2606" }
%"class.std::__1::__compressed_pair.2606" = type { %"struct.std::__1::__compressed_pair_elem.2607" }
%"struct.std::__1::__compressed_pair_elem.2607" = type { %"class.WTF::HashSet.2608"* }
%"class.WTF::HashSet.2608" = type { %"class.WTF::HashTable.2609" }
%"class.WTF::HashTable.2609" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2615" = type { %"class.blink::MemberBase.2616" }
%"class.blink::MemberBase.2616" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"struct.blink::DateTimeChooserParameters" = type <{ %"class.WTF::AtomicString", %"class.blink::IntRect", %"class.WTF::AtomicString", double, %"class.WTF::Vector.2617", double, double, double, double, i8, i8, i8, i8, i8, i8, [2 x i8], i32, [4 x i8] }>
%"class.WTF::Vector.2617" = type { %"class.WTF::VectorBuffer.2618" }
%"class.WTF::VectorBuffer.2618" = type { %"class.WTF::VectorBufferBase.2619" }
%"class.WTF::VectorBufferBase.2619" = type { %"class.mojo::StructPtr.2620"*, i32, i32 }
%"class.mojo::StructPtr.2620" = type { %"class.std::__1::unique_ptr.2621" }
%"class.std::__1::unique_ptr.2621" = type { %"class.std::__1::__compressed_pair.2622" }
%"class.std::__1::__compressed_pair.2622" = type { %"struct.std::__1::__compressed_pair_elem.2623" }
%"struct.std::__1::__compressed_pair_elem.2623" = type { %"class.blink::mojom::blink::DateTimeSuggestion"* }
%"class.blink::mojom::blink::DateTimeSuggestion" = type { double, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%"class.blink::AXObject" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.2630", %"class.WTF::String"* }
%"class.blink::HeapVector.2630" = type { %"class.WTF::Vector.2633" }
%"class.WTF::Vector.2633" = type { %"class.WTF::VectorBuffer.2634" }
%"class.WTF::VectorBuffer.2634" = type { %"class.WTF::VectorBufferBase.2635" }
%"class.WTF::VectorBufferBase.2635" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2640", i8, [7 x i8] }>
%"class.blink::Member.2640" = type { %"class.blink::MemberBase.2641" }
%"class.blink::MemberBase.2641" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.WTF::HashMap.2642" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%class.anon.2777 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2791" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2791" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2778", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2778" = type { %"class.std::__1::__vector_base.2779" }
%"class.std::__1::__vector_base.2779" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2786" }
%"class.std::__1::__compressed_pair.2786" = type { %"struct.std::__1::__compressed_pair_elem.2787" }
%"struct.std::__1::__compressed_pair_elem.2787" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2780", i64, i64 }
%"class.std::__1::unique_ptr.2780" = type { %"class.std::__1::__compressed_pair.2781" }
%"class.std::__1::__compressed_pair.2781" = type { %"struct.std::__1::__compressed_pair_elem.2782" }
%"struct.std::__1::__compressed_pair_elem.2782" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.WTF::StringTypeAdapter.2847" = type { %"class.WTF::StringTypeAdapter.2848" }
%"class.WTF::StringTypeAdapter.2848" = type { %"class.WTF::StringView" }

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv = comdat any

$_ZNK5blink16HTMLInputElement28CanTriggerImplicitSubmissionEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink16HTMLInputElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink16HTMLInputElement13IsTextControlEv = comdat any

$_ZNK5blink16HTMLInputElement21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv = comdat any

$_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv = comdat any

$_ZNK5blink16HTMLInputElement21GetFormElementPiiTypeEv = comdat any

$_ZN5blink16HTMLInputElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE = comdat any

$_ZNK5blink16HTMLInputElement20IsPlaceholderVisibleEv = comdat any

$_ZNK5blink16HTMLInputElement12IsEmptyValueEv = comdat any

$_ZN5blink18TextControlElement16HandleFocusEventEPNS_7ElementENS_5mojom9FocusTypeE = comdat any

$_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZN5blink13ListedElement27DisabledStateMightBeChangedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_16HTMLInputElementEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_16HTMLInputElementEE26DispatchHasPendingActivityEv = comdat any

$_ZN5blink27ListAttributeTargetObserverD0Ev = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_9InputTypeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_9InputTypeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_9InputTypeEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_27ListAttributeTargetObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15HTMLImageLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16HTMLInputElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink16HTMLInputElementEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink16HTMLInputElementEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17HTMLOptionElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16IdTargetObserverEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16IdTargetObserverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16IdTargetObserverEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEEEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink16HTMLInputElementE = hidden unnamed_addr constant { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] } { [225 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)* @_ZNK5blink16HTMLInputElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, i1, i32)* @_ZN5blink18TextControlElement10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink16HTMLInputElement16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, i1)* @_ZN5blink16HTMLInputElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLInputElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink16HTMLInputElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink16HTMLInputElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::HTMLInputElement"*, %"class.blink::Event"*)* @_ZN5blink16HTMLInputElement23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink16HTMLInputElement24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::Event"*)* @_ZN5blink16HTMLInputElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::Document"*)* @_ZN5blink16HTMLInputElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink16HTMLInputElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2642"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink16HTMLInputElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink16HTMLInputElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink16HTMLInputElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink16HTMLInputElement21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::Element"*, i32)* @_ZN5blink16HTMLInputElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::HTMLInputElement"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink16HTMLInputElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink16HTMLInputElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, i32)* @_ZN5blink16HTMLInputElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*, %"class.blink::Attribute"*)* @_ZNK5blink16HTMLInputElement14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink16HTMLInputElement32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink18TextControlElement18DispatchFocusEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink18TextControlElement17DispatchBlurEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink16HTMLInputElement20DispatchFocusInEventERKN3WTF12AtomicStringEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::HTMLInputElement"*, %"class.blink::StyleRecalcContext"*)* @_ZN5blink16HTMLInputElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement15FormControlTypeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement28CanTriggerImplicitSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement21ResultForDialogSubmitEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement17IsActivatedSubmitEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, i1)* @_ZN5blink16HTMLInputElement18SetActivatedSubmitEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement21GetFormElementPiiTypeEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, i32)* @_ZN5blink16HTMLInputElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement13DidChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement9ResetImplEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement18ShouldAutocompleteEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement20IsPlaceholderVisibleEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, i1)* @_ZN5blink16HTMLInputElement24SetPlaceholderVisibilityEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement19SupportsPlaceholderEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink16HTMLInputElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink16HTMLInputElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement5valueEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)* @_ZN5blink16HTMLInputElement8setValueERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*)* @_ZN5blink16HTMLInputElement19SetInnerEditorValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*)* @_ZN5blink16HTMLInputElement17SetSuggestedValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement21UpdatePlaceholderTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement19GetPlaceholderValueEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement17SubtreeHasChangedEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement12IsEmptyValueEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)* @_ZN5blink18TextControlElement16HandleFocusEventEPNS_7ElementENS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement15HandleBlurEventEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement12ValueMissingEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement20ValidationSubMessageEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement7GetNameEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement21EnsureFallbackContentEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement20EnsurePrimaryContentEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::FormControlState"*)* @_ZN5blink16HTMLInputElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::FormData"*)* @_ZN5blink16HTMLInputElement16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZNK5blink16HTMLInputElement18RecalcWillValidateEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [34 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink16HTMLInputElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZThn104_N5blink16HTMLInputElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZThn104_N5blink16HTMLInputElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18IsElementInternalsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement7GetNameEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::FormData"*)* @_ZThn104_N5blink16HTMLInputElement16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11CustomErrorEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement12ValueMissingEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement20ValidationSubMessageEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.WTF::String"*)* @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement16ValidationAnchorEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZThn104_N5blink16HTMLInputElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::FormControlState"*)* @_ZThn104_N5blink16HTMLInputElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZThn104_N5blink16HTMLInputElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZThn104_N5blink16HTMLInputElement13DidChangeFormEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLInputElement"*)* @_ZThn104_NK5blink16HTMLInputElement18RecalcWillValidateEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*)], [7 x i8*] [i8* inttoptr (i64 -248 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)* @_ZThn248_NK5blink16HTMLInputElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZThn248_N5blink16HTMLInputElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLInputElement"*)* @_ZThn248_N5blink16HTMLInputElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_16HTMLInputElementEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_16HTMLInputElementEE26DispatchHasPendingActivityEv to i8*)] }, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names11kDOMFocusInE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kValueAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16input_type_names9kPasswordE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kAlignAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [28 x i8] c"The input element's type ('\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"') does not support selection.\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@_ZN5blink16input_type_names7kNumberE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [26 x i8] c"') is not a number input.\00", align 1
@_ZN5blink10html_names11kVspaceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHspaceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kBorderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16input_type_names6kImageE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAutocompleteAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kCheckedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kMaxlengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kMinlengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kSizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26layout_invalidation_reason17kAttributeChangedE = external constant [0 x i8], align 1
@_ZN5blink10html_names8kAltAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kUsemapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAccesskeyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kOnsearchAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kSearchE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kIncrementalAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kMinAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kMaxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kMultipleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kStepAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kPatternAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kReadonlyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kListAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kWebkitdirectoryAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kFormactionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.5 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@_ZN5blink10html_names10kTitleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.6 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink19style_change_reason13kControlValueE = external constant [0 x i8], align 1
@_ZN5blink16input_type_names5kFileE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.7 = private unnamed_addr constant [99 x i8] c"This input element accepts a filename, which may only be programmatically set to the empty string.\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"value provided\00", align 1
@_ZN5blink16event_type_names10kTextInputE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names6kClickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names8kKeydownE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names9kKeypressE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names12kDOMActivateE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names6kKeyupE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names7kSearchE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.9 = private unnamed_addr constant [20 x i8] c"DefaultEventHandler\00", align 1
@.str.10 = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/core/html/forms/html_input_element.cc\00", align 1
@_ZN5blink16event_type_names10kMousedownE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kAcceptAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.11 = private unnamed_addr constant [51 x i8] c"The value provided is 0, which is an invalid size.\00", align 1
@_ZN5blink16input_type_names6kRadioE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kEmailE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink27ListAttributeTargetObserverE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::IdTargetObserver"*)* @_ZN5blink16IdTargetObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::ListAttributeTargetObserver"*)* @_ZN5blink27ListAttributeTargetObserverD0Ev to i8*), i8* bitcast (void (%"class.blink::ListAttributeTargetObserver"*, %"class.blink::Visitor"*)* @_ZNK5blink27ListAttributeTargetObserver5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ListAttributeTargetObserver"*)* @_ZN5blink27ListAttributeTargetObserver15IdTargetChangedEv to i8*), i8* bitcast (void (%"class.blink::IdTargetObserver"*)* @_ZN5blink16IdTargetObserver10UnregisterEv to i8*)] }, align 8
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink19style_change_reason8kControlE = external constant [0 x i8], align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink19style_change_reason10kAttributeE = external constant [0 x i8], align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.13 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.16 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c"The provided value is not a Date.\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@.str.20 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.23 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase48is_lang_attribute_aware_form_control_ui_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink16HTMLInputElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9InputTypeEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InputType]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_9InputTypeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_9InputTypeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_9InputTypeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink13TextInputTypeE = external unnamed_addr constant { [116 x i8*], [60 x i8*], [11 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ImageLoaderEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ImageLoader]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.27 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink10html_names12kDatalistTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.30 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.31 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.33 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17HTMLOptionElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HTMLOptionElement>, WTF::VectorTraits<blink::Member<blink::HTMLOptionElement> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16IdTargetObserverEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IdTargetObserver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16IdTargetObserverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16IdTargetObserverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEEEEPKcv = private unnamed_addr constant [104 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::DateTimeSuggestion>]\00", align 1

@_ZN5blink16HTMLInputElementC1ERNS_8DocumentENS_18CreateElementFlagsE = hidden unnamed_addr alias void (%"class.blink::HTMLInputElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*), void (%"class.blink::HTMLInputElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blink16HTMLInputElementC2ERNS_8DocumentENS_18CreateElementFlagsE
@_ZN5blink16HTMLInputElementD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLInputElement"*), void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElementD2Ev
@_ZN5blink27ListAttributeTargetObserverC1ERKN3WTF12AtomicStringEPNS_16HTMLInputElementE = hidden unnamed_addr alias void (%"class.blink::ListAttributeTargetObserver"*, %"class.WTF::AtomicString"*, %"class.blink::HTMLInputElement"*), void (%"class.blink::ListAttributeTargetObserver"*, %"class.WTF::AtomicString"*, %"class.blink::HTMLInputElement"*)* @_ZN5blink27ListAttributeTargetObserverC2ERKN3WTF12AtomicStringEPNS_16HTMLInputElementE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElementC2ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLInputElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink18TextControlElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::TextControlElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.blink::Document"* dereferenceable(2848) %1) #15
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 4
  %13 = bitcast %"class.WTF::StringImpl"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  store i32 20, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %15 = load i16, i16* %14, align 4
  %16 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %2, i64 0, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  %20 = zext i8 %18 to i16
  %21 = shl nuw nsw i16 %20, 9
  %22 = and i16 %15, -32768
  %23 = or i16 %22, %21
  %24 = or i16 %23, 4096
  store i16 %24, i16* %14, align 4
  br i1 %19, label %27, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::InputType"* null, %"class.blink::InputType"** %26, align 8
  br label %49

27:                                               ; preds = %3
  %28 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 64) #15
  %29 = bitcast i8* %28 to %"class.blink::BaseTextInputType"*
  tail call void @_ZN5blink17BaseTextInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseTextInputType"* %29, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #15
  %30 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink13TextInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %28, i64 16
  %32 = bitcast i8* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink13TextInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 40
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink13TextInputTypeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds i8, i8* %28, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %40 = bitcast %"class.blink::InputType"** %39 to i8**
  store i8* %28, i8** %40, align 8
  %41 = icmp eq i8* %28, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %27
  %43 = bitcast i8* %28 to %"class.blink::InputType"*
  %44 = bitcast i8* %28 to %"class.blink::InputTypeView"* (%"class.blink::InputType"*)***
  %45 = load %"class.blink::InputTypeView"* (%"class.blink::InputType"*)**, %"class.blink::InputTypeView"* (%"class.blink::InputType"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.blink::InputTypeView"* (%"class.blink::InputType"*)*, %"class.blink::InputTypeView"* (%"class.blink::InputType"*)** %45, i64 3
  %47 = load %"class.blink::InputTypeView"* (%"class.blink::InputType"*)*, %"class.blink::InputTypeView"* (%"class.blink::InputType"*)** %46, align 8
  %48 = tail call %"class.blink::InputTypeView"* %47(%"class.blink::InputType"* nonnull %43) #15
  br label %49

49:                                               ; preds = %25, %27, %42
  %50 = phi %"class.blink::InputTypeView"* [ %48, %42 ], [ null, %27 ], [ null, %25 ]
  %51 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  store %"class.blink::InputTypeView"* %50, %"class.blink::InputTypeView"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 9, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.blink::HTMLImageLoader"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 20, i1 false)
  %55 = load i32, i32* %53, align 8
  %56 = or i32 %55, 2048
  store i32 %56, i32* %53, align 8
  %57 = load i8, i8* %16, align 8
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %68

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25CreateUserAgentShadowRootEv(%"class.blink::Element"* %61) #15
  %63 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %51, align 8
  %64 = bitcast %"class.blink::InputTypeView"* %63 to void (%"class.blink::InputTypeView"*)***
  %65 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %65, i64 29
  %67 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %66, align 8
  tail call void %67(%"class.blink::InputTypeView"* %63) #15
  br label %68

68:                                               ; preds = %49, %60
  ret void
}

declare void @_ZN5blink18TextControlElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::TextControlElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25CreateUserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement19CreateShadowSubtreeEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 29
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLInputElement5TraceEPNS_7VisitorE(%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7
  %4 = bitcast %"class.blink::Member.48"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9InputTypeEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8
  %15 = bitcast %"class.blink::Member.54"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %84, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = and i64 %16, -131072
  %21 = inttoptr i64 %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 4138
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, i8* %21, i64 4160
  br label %65

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %21, i64 4096
  %29 = bitcast i8* %28 to %"class.blink::NormalPage"*
  %30 = getelementptr inbounds i8, i8* %21, i64 4400
  %31 = bitcast i8* %30 to i8**
  %32 = bitcast i8* %30 to i64*
  %33 = load i64, i64* %32, align 16
  %34 = sub i64 %16, %33
  %35 = lshr i64 %34, 3
  %36 = lshr i64 %34, 6
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = trunc i64 %35 to i32
  %40 = and i32 %39, 7
  %41 = shl i32 2, %40
  %42 = trunc i32 %41 to i8
  %43 = add i8 %42, -1
  %44 = and i8 %43, %38
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %27, %46
  %47 = phi i64 [ %48, %46 ], [ %36, %27 ]
  %48 = add i64 %47, -1
  %49 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %48
  %50 = load atomic i8, i8* %49 acquire, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %46, label %52

52:                                               ; preds = %46, %27
  %53 = phi i64 [ %36, %27 ], [ %48, %46 ]
  %54 = phi i8 [ %44, %27 ], [ %50, %46 ]
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @llvm.ctlz.i32(i32 %55, i1 true) #15, !range !2
  %57 = add nsw i32 %56, -24
  %58 = shl i64 %53, 3
  %59 = or i64 %58, 7
  %60 = sext i32 %57 to i64
  %61 = sub i64 %59, %60
  %62 = shl i64 %61, 3
  %63 = load i8*, i8** %31, align 16
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  br label %65

65:                                               ; preds = %52, %25
  %66 = phi i8* [ %26, %25 ], [ %64, %52 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = getelementptr inbounds i8, i8* %66, i64 4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 acquire, align 2
  %71 = lshr i16 %70, 2
  %72 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %73 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %72, i64 0, i32 0
  %74 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %73, align 8
  %75 = zext i16 %71 to i64
  %76 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %74, i64 %75
  %77 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %77, i64 0, i32 0
  %79 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %78, align 8
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* %67, void (%"class.blink::Visitor"*, i8*)* %79) #15
  br label %84

84:                                               ; preds = %13, %65
  %85 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 10
  %86 = bitcast %"class.blink::Member.294"* %85 to i64*
  %87 = load atomic i64, i64* %86 monotonic, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %84
  %90 = inttoptr i64 %87 to i8*
  %91 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, i64 5
  %94 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, align 8
  tail call void %94(%"class.blink::Visitor"* %1, i8* nonnull %90, i8* nonnull %90, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27ListAttributeTargetObserverEE5TraceEPNS_7VisitorEPKv) #15
  br label %95

95:                                               ; preds = %84, %89
  %96 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 9
  %97 = bitcast %"class.blink::Member.56"* %96 to i64*
  %98 = load atomic i64, i64* %97 monotonic, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %95
  %101 = inttoptr i64 %98 to i8*
  %102 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %103, i64 5
  %105 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %104, align 8
  tail call void %105(%"class.blink::Visitor"* %1, i8* nonnull %101, i8* nonnull %101, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLImageLoaderEE5TraceEPNS_7VisitorEPKv) #15
  br label %106

106:                                              ; preds = %95, %100
  %107 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZNK5blink18TextControlElement5TraceEPNS_7VisitorE(%"class.blink::TextControlElement"* %107, %"class.blink::Visitor"* %1) #15
  ret void
}

declare void @_ZNK5blink18TextControlElement5TraceEPNS_7VisitorE(%"class.blink::TextControlElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink16HTMLInputElement5TraceEPNS_7VisitorE(%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = bitcast i8* %3 to %"class.blink::HTMLInputElement"*
  tail call void @_ZNK5blink16HTMLInputElement5TraceEPNS_7VisitorE(%"class.blink::HTMLInputElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn248_NK5blink16HTMLInputElement5TraceEPNS_7VisitorE(%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::HTMLInputElement"*
  tail call void @_ZNK5blink16HTMLInputElement5TraceEPNS_7VisitorE(%"class.blink::HTMLInputElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement18HasPendingActivityEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLImageLoader"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink11ImageLoader15HasPendingEventEv(%"class.blink::ImageLoader"* %6) #15
  br i1 %7, label %16, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 8, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #15
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 8, i32 0, i32 1
  %13 = bitcast i64* %12 to %"class.blink::ImageLoader::Task"**
  %14 = load %"class.blink::ImageLoader::Task"*, %"class.blink::ImageLoader::Task"** %13, align 8
  %15 = icmp ne %"class.blink::ImageLoader::Task"* %14, null
  br label %16

16:                                               ; preds = %11, %8, %5, %1
  %17 = phi i1 [ false, %1 ], [ true, %5 ], [ %15, %11 ], [ false, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.blink::HTMLImageLoader"* @_ZN5blink16HTMLInputElement17EnsureImageLoaderEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLImageLoader"* %4, null
  br i1 %5, label %6, label %22

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm(i64 136) #15
  %8 = bitcast i8* %7 to %"class.blink::HTMLImageLoader"*
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLImageLoaderC1EPNS_7ElementE(%"class.blink::HTMLImageLoader"* %8, %"class.blink::Element"* %9) #15
  %10 = getelementptr inbounds i8, i8* %7, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = ptrtoint i8* %7 to i64
  %15 = bitcast %"class.blink::Member.56"* %2 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast i8* %7 to %"class.blink::HTMLImageLoader"*
  br i1 %17, label %22, label %19

19:                                               ; preds = %6
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #15
  %21 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %3, align 8
  br label %22

22:                                               ; preds = %1, %19, %6
  %23 = phi %"class.blink::HTMLImageLoader"* [ %4, %1 ], [ %21, %19 ], [ %18, %6 ]
  ret %"class.blink::HTMLImageLoader"* %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElementD2Ev(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #15
  br label %23

23:                                               ; preds = %1, %19, %22
  %24 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %40

40:                                               ; preds = %23, %36, %39
  %41 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %41) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16HTMLInputElementD1Ev(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 80
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 104
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 168
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 248
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 264
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #15
  br label %29

29:                                               ; preds = %28, %25, %1
  %30 = getelementptr inbounds i8, i8* %2, i64 256
  %31 = bitcast i8* %30 to %"class.WTF::StringImpl"**
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #15
  br label %47

47:                                               ; preds = %29, %43, %46
  %48 = bitcast i8* %2 to %"class.blink::TextControlElement"*
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %48) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn248_N5blink16HTMLInputElementD1Ev(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::Member"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 10
  %5 = bitcast %"class.blink::Member"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 13
  %7 = bitcast %"class.blink::Member"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 21
  %9 = bitcast %"class.blink::Member"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 31
  %11 = bitcast %"class.blink::Member"* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 33
  %13 = bitcast %"class.blink::Member"* %12 to %"class.WTF::StringImpl"**
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #15
  br label %29

29:                                               ; preds = %28, %25, %1
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 32
  %31 = bitcast %"class.blink::Member"* %30 to %"class.WTF::StringImpl"**
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #15
  br label %47

47:                                               ; preds = %29, %43, %46
  %48 = bitcast %"class.blink::Member"* %2 to %"class.blink::TextControlElement"*
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %48) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElementD0Ev(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #15
  br label %23

23:                                               ; preds = %22, %19, %1
  %24 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %40

40:                                               ; preds = %23, %36, %39
  %41 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %41) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16HTMLInputElementD0Ev(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 80
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 104
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 168
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 248
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 264
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #15
  br label %29

29:                                               ; preds = %28, %25, %1
  %30 = getelementptr inbounds i8, i8* %2, i64 256
  %31 = bitcast i8* %30 to %"class.WTF::StringImpl"**
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #15
  br label %47

47:                                               ; preds = %29, %43, %46
  %48 = bitcast i8* %2 to %"class.blink::TextControlElement"*
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %48) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn248_N5blink16HTMLInputElementD0Ev(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::Member"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 10
  %5 = bitcast %"class.blink::Member"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 13
  %7 = bitcast %"class.blink::Member"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 21
  %9 = bitcast %"class.blink::Member"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 31
  %11 = bitcast %"class.blink::Member"* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [225 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLInputElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 33
  %13 = bitcast %"class.blink::Member"* %12 to %"class.WTF::StringImpl"**
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #15
  br label %29

29:                                               ; preds = %28, %25, %1
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 32
  %31 = bitcast %"class.blink::Member"* %30 to %"class.WTF::StringImpl"**
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #15
  br label %47

47:                                               ; preds = %29, %43, %46
  %48 = bitcast %"class.blink::Member"* %2 to %"class.blink::TextControlElement"*
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %48) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %7 = select i1 %5, %"class.WTF::AtomicString"* %6, %"class.WTF::AtomicString"* %2
  ret %"class.WTF::AtomicString"* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZThn104_NK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = getelementptr inbounds i8, i8* %2, i64 256
  %4 = bitcast i8* %3 to %"class.WTF::AtomicString"*
  %5 = bitcast i8* %3 to %"class.WTF::StringImpl"**
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %9 = select i1 %7, %"class.WTF::AtomicString"* %8, %"class.WTF::AtomicString"* %4
  ret %"class.WTF::AtomicString"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement34FilesFromFileInputFormControlStateERKNS_16FormControlStateE(%"class.WTF::Vector.807"* noalias sret, %"class.blink::FormControlState"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink13FileInputType25FilesFromFormControlStateERKNS_16FormControlStateE(%"class.WTF::Vector.807"* sret %0, %"class.blink::FormControlState"* dereferenceable(24) %1) #15
  ret void
}

declare void @_ZN5blink13FileInputType25FilesFromFormControlStateERKNS_16FormControlStateE(%"class.WTF::Vector.807"* sret, %"class.blink::FormControlState"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement18ShouldAutocompleteEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %3 = load i16, i16* %2, align 4
  %4 = lshr i16 %3, 5
  %5 = and i16 %4, 3
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = icmp eq i16 %5, 1
  br label %12

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  %11 = tail call zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv(%"class.blink::HTMLFormControlElementWithState"* %10) #15
  br label %12

12:                                               ; preds = %9, %7
  %13 = phi i1 [ %8, %7 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement12IsValidValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*)***
  %6 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, i64 40
  %8 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputType"* %4) #15
  br i1 %9, label %10, label %55

10:                                               ; preds = %2
  %11 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %12 = bitcast %"class.blink::InputType"* %11 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %13 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %13, i64 23
  %15 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::InputType"* %11, %"class.WTF::String"* dereferenceable(8) %1) #15
  br i1 %16, label %55, label %17

17:                                               ; preds = %10
  %18 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %19 = tail call zeroext i1 @_ZNK5blink9InputType12StepMismatchERKN3WTF6StringE(%"class.blink::InputType"* %18, %"class.WTF::String"* dereferenceable(8) %1) #15
  br i1 %19, label %55, label %20

20:                                               ; preds = %17
  %21 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %22 = tail call zeroext i1 @_ZNK5blink9InputType14RangeUnderflowERKN3WTF6StringE(%"class.blink::InputType"* %21, %"class.WTF::String"* dereferenceable(8) %1) #15
  br i1 %22, label %55, label %23

23:                                               ; preds = %20
  %24 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %25 = tail call zeroext i1 @_ZNK5blink9InputType13RangeOverflowERKN3WTF6StringE(%"class.blink::InputType"* %24, %"class.WTF::String"* dereferenceable(8) %1) #15
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %28 = bitcast %"class.blink::InputType"* %27 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)***
  %29 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %29, i64 28
  %31 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::InputType"* %27, %"class.WTF::String"* dereferenceable(8) %1, i32 1) #15
  br i1 %32, label %55, label %33

33:                                               ; preds = %26
  %34 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %35 = bitcast %"class.blink::InputType"* %34 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)***
  %36 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %36, i64 29
  %38 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::InputType"* %34, %"class.WTF::String"* dereferenceable(8) %1, i32 1) #15
  br i1 %39, label %55, label %40

40:                                               ; preds = %33
  %41 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %42 = bitcast %"class.blink::InputType"* %41 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %43 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %43, i64 27
  %45 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::InputType"* %41, %"class.WTF::String"* dereferenceable(8) %1) #15
  br i1 %46, label %55, label %47

47:                                               ; preds = %40
  %48 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %49 = bitcast %"class.blink::InputType"* %48 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %50 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %50, i64 26
  %52 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::InputType"* %48, %"class.WTF::String"* dereferenceable(8) %1) #15
  %54 = xor i1 %53, true
  br label %55

55:                                               ; preds = %10, %17, %20, %23, %26, %33, %40, %47, %2
  %56 = phi i1 [ false, %2 ], [ false, %40 ], [ false, %33 ], [ false, %26 ], [ false, %23 ], [ false, %20 ], [ false, %17 ], [ false, %10 ], [ %54, %47 ]
  ret i1 %56
}

declare zeroext i1 @_ZNK5blink9InputType12StepMismatchERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType14RangeUnderflowERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType13RangeOverflowERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = bitcast %"class.blink::InputType"* %5 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)***
  %7 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %7, i64 28
  %9 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InputType"* %5, %"class.WTF::String"* dereferenceable(8) %1, i32 %2) #15
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = bitcast %"class.blink::InputType"* %5 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)***
  %7 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %7, i64 29
  %9 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InputType"* %5, %"class.WTF::String"* dereferenceable(8) %1, i32 %2) #15
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement7TooLongEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #15
  %4 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %5, i64 195
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::HTMLInputElement"* %0) #15
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::InputType"*, %"class.blink::InputType"** %10, align 8
  %12 = bitcast %"class.blink::InputType"* %11 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)***
  %13 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %13, i64 28
  %15 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::InputType"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %2, i32 0) #15
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #15
  br label %32

32:                                               ; preds = %1, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement7TooLongEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = bitcast i8* %3 to %"class.blink::HTMLInputElement"*
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = bitcast i8* %3 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %4) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 280
  %13 = bitcast i8* %12 to %"class.blink::InputType"**
  %14 = load %"class.blink::InputType"*, %"class.blink::InputType"** %13, align 8
  %15 = bitcast %"class.blink::InputType"* %14 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)***
  %16 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %16, i64 28
  %18 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %17, align 8
  %19 = call zeroext i1 %18(%"class.blink::InputType"* %14, %"class.WTF::String"* nonnull dereferenceable(8) %2, i32 0) #15
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %1, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement8TooShortEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #15
  %4 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %5, i64 195
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::HTMLInputElement"* %0) #15
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::InputType"*, %"class.blink::InputType"** %10, align 8
  %12 = bitcast %"class.blink::InputType"* %11 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)***
  %13 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %13, i64 29
  %15 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::InputType"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %2, i32 0) #15
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #15
  br label %32

32:                                               ; preds = %1, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement8TooShortEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = bitcast i8* %3 to %"class.blink::HTMLInputElement"*
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = bitcast i8* %3 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %4) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 280
  %13 = bitcast i8* %12 to %"class.blink::InputType"**
  %14 = load %"class.blink::InputType"*, %"class.blink::InputType"** %13, align 8
  %15 = bitcast %"class.blink::InputType"* %14 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)***
  %16 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %16, i64 29
  %18 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)** %17, align 8
  %19 = call zeroext i1 %18(%"class.blink::InputType"* %14, %"class.WTF::String"* nonnull dereferenceable(8) %2, i32 0) #15
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %1, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement12TypeMismatchEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 24
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement12TypeMismatchEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = getelementptr inbounds i8, i8* %2, i64 280
  %4 = bitcast i8* %3 to %"class.blink::InputType"**
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = bitcast %"class.blink::InputType"* %5 to i1 (%"class.blink::InputType"*)***
  %7 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, i64 24
  %9 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InputType"* %5) #15
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement12ValueMissingEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %0) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %13 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %13, i64 26
  %15 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::InputType"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #15
  br label %32

32:                                               ; preds = %1, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement12ValueMissingEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = bitcast i8* %3 to %"class.blink::HTMLInputElement"*
  %5 = getelementptr inbounds i8, i8* %3, i64 280
  %6 = bitcast i8* %5 to %"class.blink::InputType"**
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = bitcast i8* %3 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %10, i64 195
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::HTMLInputElement"* %4) #15
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = bitcast %"class.blink::InputType"* %7 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %16 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %16, i64 26
  %18 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.blink::InputType"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %1, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement11HasBadInputEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to i1 (%"class.blink::InputTypeView"*)***
  %5 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %5, i64 56
  %7 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputTypeView"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement11HasBadInputEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = getelementptr inbounds i8, i8* %2, i64 288
  %4 = bitcast i8* %3 to %"class.blink::InputTypeView"**
  %5 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %4, align 8
  %6 = bitcast %"class.blink::InputTypeView"* %5 to i1 (%"class.blink::InputTypeView"*)***
  %7 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %7, i64 56
  %9 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InputTypeView"* %5) #15
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement15PatternMismatchEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %0) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %13 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %13, i64 27
  %15 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::InputType"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #15
  br label %32

32:                                               ; preds = %1, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement15PatternMismatchEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = bitcast i8* %3 to %"class.blink::HTMLInputElement"*
  %5 = getelementptr inbounds i8, i8* %3, i64 280
  %6 = bitcast i8* %5 to %"class.blink::InputType"**
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = bitcast i8* %3 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %10, i64 195
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::HTMLInputElement"* %4) #15
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = bitcast %"class.blink::InputType"* %7 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %16 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %16, i64 27
  %18 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.blink::InputType"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %1, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement14RangeUnderflowEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %0) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = call zeroext i1 @_ZNK5blink9InputType14RangeUnderflowERKN3WTF6StringE(%"class.blink::InputType"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %28

28:                                               ; preds = %1, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement14RangeUnderflowEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = bitcast i8* %3 to %"class.blink::HTMLInputElement"*
  %5 = getelementptr inbounds i8, i8* %3, i64 280
  %6 = bitcast i8* %5 to %"class.blink::InputType"**
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = bitcast i8* %3 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %10, i64 195
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::HTMLInputElement"* %4) #15
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = call zeroext i1 @_ZNK5blink9InputType14RangeUnderflowERKN3WTF6StringE(%"class.blink::InputType"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #15
  br label %31

31:                                               ; preds = %1, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement13RangeOverflowEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %0) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = call zeroext i1 @_ZNK5blink9InputType13RangeOverflowERKN3WTF6StringE(%"class.blink::InputType"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %28

28:                                               ; preds = %1, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement13RangeOverflowEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = bitcast i8* %3 to %"class.blink::HTMLInputElement"*
  %5 = getelementptr inbounds i8, i8* %3, i64 280
  %6 = bitcast i8* %5 to %"class.blink::InputType"**
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = bitcast i8* %3 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %10, i64 195
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::HTMLInputElement"* %4) #15
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = call zeroext i1 @_ZNK5blink9InputType13RangeOverflowERKN3WTF6StringE(%"class.blink::InputType"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #15
  br label %31

31:                                               ; preds = %1, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement17validationMessageEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %4 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %4, i64 129
  %6 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::HTMLFormControlElement"* %2) #15
  br i1 %7, label %8, label %42

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.blink::ListedElement.base"* %9 to %"class.blink::ListedElement"*
  %11 = bitcast %"class.blink::ListedElement.base"* %9 to i1 (%"class.blink::ListedElement"*)***
  %12 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %12, i64 9
  %14 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::ListedElement"* %10) #15
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"* %10) #15
  %18 = ptrtoint %"class.WTF::StringImpl"* %17 to i64
  br label %42

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %21 = load %"class.blink::InputType"*, %"class.blink::InputType"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %23 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %22, align 8
  %24 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZNK5blink9InputType17ValidationMessageERKNS_13InputTypeViewE(%"class.blink::InputType"* %21, %"class.blink::InputTypeView"* dereferenceable(24) %23) #15
  %25 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %24, 0
  %26 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %27 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %24, 1
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #15
  br label %42

42:                                               ; preds = %41, %38, %19, %1, %16
  %43 = phi i64 [ %18, %16 ], [ 0, %1 ], [ %26, %19 ], [ %26, %38 ], [ %26, %41 ]
  %44 = inttoptr i64 %43 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

declare { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZNK5blink9InputType17ValidationMessageERKNS_13InputTypeViewE(%"class.blink::InputType"*, %"class.blink::InputTypeView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn104_NK5blink16HTMLInputElement17validationMessageEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = bitcast i8* %2 to %"class.blink::HTMLFormControlElement"*
  %4 = bitcast i8* %2 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %5 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %5, i64 129
  %7 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::HTMLFormControlElement"* %3) #15
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, i8* %2, i64 104
  %11 = bitcast i8* %10 to %"class.blink::ListedElement"*
  %12 = bitcast i8* %10 to i1 (%"class.blink::ListedElement"*)***
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 9
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %11) #15
  br i1 %16, label %17, label %20

17:                                               ; preds = %9
  %18 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"* %11) #15
  %19 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  br label %45

20:                                               ; preds = %9
  %21 = getelementptr inbounds i8, i8* %2, i64 280
  %22 = bitcast i8* %21 to %"class.blink::InputType"**
  %23 = load %"class.blink::InputType"*, %"class.blink::InputType"** %22, align 8
  %24 = getelementptr inbounds i8, i8* %2, i64 288
  %25 = bitcast i8* %24 to %"class.blink::InputTypeView"**
  %26 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %25, align 8
  %27 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZNK5blink9InputType17ValidationMessageERKNS_13InputTypeViewE(%"class.blink::InputType"* %23, %"class.blink::InputTypeView"* dereferenceable(24) %26) #15
  %28 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %27, 0
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  %30 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %27, 1
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #15
  br label %45

45:                                               ; preds = %1, %17, %20, %41, %44
  %46 = phi i64 [ %19, %17 ], [ 0, %1 ], [ %29, %20 ], [ %29, %41 ], [ %29, %44 ]
  %47 = inttoptr i64 %46 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement20ValidationSubMessageEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::ListedElement.base"* %2 to %"class.blink::ListedElement"*
  %4 = bitcast %"class.blink::ListedElement.base"* %2 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 9
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #15
  br i1 %8, label %32, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::InputType"*, %"class.blink::InputType"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %13 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %12, align 8
  %14 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZNK5blink9InputType17ValidationMessageERKNS_13InputTypeViewE(%"class.blink::InputType"* %11, %"class.blink::InputTypeView"* dereferenceable(24) %13) #15
  %15 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %14, 0
  %16 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %14, 1
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %18 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #15
  br label %32

32:                                               ; preds = %31, %28, %9, %1
  %33 = phi i64 [ 0, %1 ], [ %17, %9 ], [ %17, %28 ], [ %17, %31 ]
  %34 = inttoptr i64 %33 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn104_NK5blink16HTMLInputElement20ValidationSubMessageEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = getelementptr inbounds i8, i8* %2, i64 104
  %4 = bitcast i8* %3 to %"class.blink::ListedElement"*
  %5 = bitcast i8* %3 to i1 (%"class.blink::ListedElement"*)***
  %6 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, i64 9
  %8 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::ListedElement"* %4) #15
  br i1 %9, label %35, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds i8, i8* %2, i64 280
  %12 = bitcast i8* %11 to %"class.blink::InputType"**
  %13 = load %"class.blink::InputType"*, %"class.blink::InputType"** %12, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 288
  %15 = bitcast i8* %14 to %"class.blink::InputTypeView"**
  %16 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %15, align 8
  %17 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZNK5blink9InputType17ValidationMessageERKNS_13InputTypeViewE(%"class.blink::InputType"* %13, %"class.blink::InputTypeView"* dereferenceable(24) %16) #15
  %18 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %17, 0
  %19 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %17, 1
  %20 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %21 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %35

35:                                               ; preds = %1, %10, %31, %34
  %36 = phi i64 [ 0, %1 ], [ %20, %10 ], [ %20, %31 ], [ %20, %34 ]
  %37 = inttoptr i64 %36 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink16HTMLInputElement7MinimumEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = tail call double @_ZNK5blink9InputType7MinimumEv(%"class.blink::InputType"* %3) #15
  ret double %4
}

declare double @_ZNK5blink9InputType7MinimumEv(%"class.blink::InputType"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink16HTMLInputElement7MaximumEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = tail call double @_ZNK5blink9InputType7MaximumEv(%"class.blink::InputType"* %3) #15
  ret double %4
}

declare double @_ZNK5blink9InputType7MaximumEv(%"class.blink::InputType"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement12StepMismatchEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %0) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = call zeroext i1 @_ZNK5blink9InputType12StepMismatchERKN3WTF6StringE(%"class.blink::InputType"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %28

28:                                               ; preds = %1, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement12StepMismatchEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = bitcast i8* %3 to %"class.blink::HTMLInputElement"*
  %5 = getelementptr inbounds i8, i8* %3, i64 280
  %6 = bitcast i8* %5 to %"class.blink::InputType"**
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = bitcast i8* %3 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %10, i64 195
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::HTMLInputElement"* %4) #15
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = call zeroext i1 @_ZNK5blink9InputType12StepMismatchERKN3WTF6StringE(%"class.blink::InputType"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #15
  br label %31

31:                                               ; preds = %1, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement19GetAllowedValueStepEPNS_7DecimalE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::Decimal"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink9InputType19GetAllowedValueStepEPNS_7DecimalE(%"class.blink::InputType"* %4, %"class.blink::Decimal"* %1) #15
  ret i1 %5
}

declare zeroext i1 @_ZNK5blink9InputType19GetAllowedValueStepEPNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLInputElement15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* noalias sret, %"class.blink::HTMLInputElement"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = bitcast %"class.blink::InputType"* %5 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %7 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %7, i64 31
  %9 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %8, align 8
  tail call void %9(%"class.blink::StepRange"* sret %0, %"class.blink::InputType"* %5, i32 %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement24FindClosestTickMarkValueERKNS_7DecimalE(%"class.blink::Decimal"* noalias sret, %"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = bitcast %"class.blink::InputType"* %5 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)***
  %7 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)** %7, i64 74
  %9 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)** %8, align 8
  tail call void %9(%"class.blink::Decimal"* sret %0, %"class.blink::InputType"* %5, %"class.blink::Decimal"* dereferenceable(24) %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement6stepUpEiRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* nocapture readonly, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = sitofp i32 %1 to double
  tail call void @_ZN5blink9InputType6StepUpEdRNS_14ExceptionStateE(%"class.blink::InputType"* %5, double %6, %"class.blink::ExceptionState"* dereferenceable(72) %2) #15
  ret void
}

declare void @_ZN5blink9InputType6StepUpEdRNS_14ExceptionStateE(%"class.blink::InputType"*, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement8stepDownEiRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* nocapture readonly, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = sitofp i32 %1 to double
  %7 = fsub double -0.000000e+00, %6
  tail call void @_ZN5blink9InputType6StepUpEdRNS_14ExceptionStateE(%"class.blink::InputType"* %5, double %7, %"class.blink::ExceptionState"* dereferenceable(72) %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement4blurEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 20
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement11DefaultBlurEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element4blurEv(%"class.blink::Element"* %2) #15
  ret void
}

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement19HasCustomFocusLogicEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to i1 (%"class.blink::InputTypeView"*)***
  %5 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %5, i64 15
  %7 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputTypeView"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement19IsKeyboardFocusableEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 46
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement25MayTriggerVirtualKeyboardEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 47
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to i1 (%"class.blink::InputTypeView"*)***
  %5 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %5, i64 27
  %7 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputTypeView"* %3) #15
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %11 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLFormControlElement"* %10) #15
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i1 [ %11, %9 ], [ false, %1 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::HTMLInputElement"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %6 = alloca %"class.mojo::StructPtr.1525", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %9 = bitcast %"class.blink::InputType"* %8 to i1 (%"class.blink::InputType"*)***
  %10 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, i64 7
  %12 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::InputType"* %8) #15
  br i1 %13, label %14, label %87

14:                                               ; preds = %3
  switch i32 %1, label %19 [
    i32 0, label %15
    i32 1, label %17
    i32 2, label %89
  ]

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement6selectEv(%"class.blink::TextControlElement"* %16) #15
  br label %19

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement22RestoreCachedSelectionEv(%"class.blink::TextControlElement"* %18) #15
  br label %19

19:                                               ; preds = %14, %17, %15
  %20 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  tail call void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %24, %"class.blink::Node"* %20, i32 9) #15
  %25 = getelementptr inbounds %"class.blink::FocusOptions", %"class.blink::FocusOptions"* %2, i64 0, i32 2
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %89

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %32, label %38, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRareData"**
  %36 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %36, i64 0, i32 1, i32 0, i32 0
  br label %40

38:                                               ; preds = %28
  %39 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRenderingData"**
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi %"class.blink::NodeRenderingData"** [ %37, %34 ], [ %39, %38 ]
  %42 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %42, i64 0, i32 1
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutObject"* %44, null
  br i1 %45, label %73, label %46

46:                                               ; preds = %40
  br i1 %32, label %51, label %47

47:                                               ; preds = %46
  %48 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRareData"**
  %49 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %49, i64 0, i32 1, i32 0, i32 0
  br label %53

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRenderingData"**
  br label %53

53:                                               ; preds = %47, %51
  %54 = phi %"class.blink::NodeRenderingData"** [ %50, %47 ], [ %52, %51 ]
  %55 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %55, i64 0, i32 1
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #15
  %59 = tail call { i64, i64 } @_ZNK5blink4Node28BoundingBoxForScrollIntoViewEv(%"class.blink::Node"* %20) #15
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %61 = extractvalue { i64, i64 } %59, 0
  store i64 %61, i64* %60, align 8
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %63 = extractvalue { i64, i64 } %59, 1
  store i64 %63, i64* %62, align 8
  %64 = tail call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() #15
  %65 = tail call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() #15
  call void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.1525"* nonnull sret %6, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %64, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %65, i32 1, i1 zeroext true, i32 0, i1 zeroext false, i1 zeroext false) #15
  %66 = call { i64, i64 } @_ZN5blink12LayoutObject19ScrollRectToVisibleERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutObject"* %57, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, %"class.mojo::StructPtr.1525"* nonnull %6) #15
  %67 = getelementptr inbounds %"class.mojo::StructPtr.1525", %"class.mojo::StructPtr.1525"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %67, align 8
  store %"class.blink::mojom::blink::ScrollIntoViewParams"* null, %"class.blink::mojom::blink::ScrollIntoViewParams"** %67, align 8
  %69 = icmp eq %"class.blink::mojom::blink::ScrollIntoViewParams"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %53
  call void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"* nonnull %68) #15
  %71 = bitcast %"class.blink::mojom::blink::ScrollIntoViewParams"* %68 to i8*
  call void @_ZdlPv(i8* %71) #16
  br label %72

72:                                               ; preds = %53, %70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #15
  br label %73

73:                                               ; preds = %40, %72
  %74 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %75 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %74, i64 0, i32 2, i32 0, i32 0
  %76 = load %"class.blink::Document"*, %"class.blink::Document"** %75, align 8
  %77 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %76) #15
  %78 = icmp eq %"class.blink::LocalFrame"* %77, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %73
  %80 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %81 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::Document"*, %"class.blink::Document"** %81, align 8
  %83 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %82) #15
  %84 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %83, i64 0, i32 14, i32 0, i32 0
  %85 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %84, align 8
  %86 = call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() #15
  call void @_ZN5blink14FrameSelection15RevealSelectionERKNS_5mojom5blink15ScrollAlignmentENS_18RevealExtentOptionE(%"class.blink::FrameSelection"* %85, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %86, i32 1) #15
  br label %89

87:                                               ; preds = %3
  %88 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"* %88, i32 %1, %"class.blink::FocusOptions"* %2) #15
  br label %89

89:                                               ; preds = %19, %73, %79, %14, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement11IsTextFieldEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 7
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

declare void @_ZN5blink18TextControlElement6selectEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink18TextControlElement22RestoreCachedSelectionEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"*, %"class.blink::Node"*, i32) local_unnamed_addr #1

declare { i64, i64 } @_ZN5blink12LayoutObject19ScrollRectToVisibleERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.mojo::StructPtr.1525"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink4Node28BoundingBoxForScrollIntoViewEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.1525"* sret, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), i32, i1 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink14FrameSelection15RevealSelectionERKNS_5mojom5blink15ScrollAlignmentENS_18RevealExtentOptionE(%"class.blink::FrameSelection"*, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), i32) local_unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement10EndEditingEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 5, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -2
  %9 = icmp ult i32 %8, 18
  br i1 %9, label %10, label %33

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %12 = load %"class.blink::InputType"*, %"class.blink::InputType"** %11, align 8
  %13 = bitcast %"class.blink::InputType"* %12 to i1 (%"class.blink::InputType"*)***
  %14 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %14, i64 7
  %16 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::InputType"* %12) #15
  br i1 %17, label %18, label %33

18:                                               ; preds = %10
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %21) #15
  %23 = tail call dereferenceable(24) %"class.blink::SpellChecker"* @_ZNK5blink10LocalFrame15GetSpellCheckerEv(%"class.blink::LocalFrame"* %22) #15
  %24 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12SpellChecker24DidEndEditingOnTextFieldEPNS_7ElementE(%"class.blink::SpellChecker"* %23, %"class.blink::Element"* %24) #15
  %25 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %22, i64 0, i32 0
  %26 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %25) #15
  %27 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %26, i64 0, i32 7, i32 0, i32 0
  %28 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %27, align 8
  %29 = bitcast %"class.blink::ChromeClient"* %28 to void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)***
  %30 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)** %30, i64 87
  %32 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)** %31, align 8
  tail call void %32(%"class.blink::ChromeClient"* %28, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #15
  tail call void @_ZN5blink16HTMLInputElement21MaybeReportPiiMetricsEv(%"class.blink::HTMLInputElement"* %0)
  br label %33

33:                                               ; preds = %10, %1, %18
  ret void
}

declare dereferenceable(24) %"class.blink::SpellChecker"* @_ZNK5blink10LocalFrame15GetSpellCheckerEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare void @_ZN5blink12SpellChecker24DidEndEditingOnTextFieldEPNS_7ElementE(%"class.blink::SpellChecker"*, %"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement21MaybeReportPiiMetricsEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %4 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %4, i64 195
  %6 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %5, align 8
  %7 = tail call %"class.WTF::StringImpl"* %6(%"class.blink::HTMLInputElement"* %0) #15
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %137, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %9
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %9
  %22 = phi i32 [ %20, %19 ], [ %18, %9 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br i1 %12, label %137, label %26

25:                                               ; preds = %21
  br i1 %12, label %137, label %26

26:                                               ; preds = %24, %25
  %27 = bitcast %"class.blink::HTMLInputElement"* %0 to i32 (%"class.blink::HTMLInputElement"*)***
  %28 = load i32 (%"class.blink::HTMLInputElement"*)**, i32 (%"class.blink::HTMLInputElement"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::HTMLInputElement"*)*, i32 (%"class.blink::HTMLInputElement"*)** %28, i64 178
  %30 = load i32 (%"class.blink::HTMLInputElement"*)*, i32 (%"class.blink::HTMLInputElement"*)** %29, align 8
  %31 = tail call i32 %30(%"class.blink::HTMLInputElement"* %0) #15
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %72, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %37, i64 0, i32 2
  %39 = bitcast %"class.blink::UseCounter"* %38 to void (%"class.blink::UseCounter"*, i32)***
  %40 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %40, i64 3
  %42 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %41, align 8
  tail call void %42(%"class.blink::UseCounter"* %38, i32 3379) #15
  %43 = load i32 (%"class.blink::HTMLInputElement"*)**, i32 (%"class.blink::HTMLInputElement"*)*** %27, align 8
  %44 = getelementptr inbounds i32 (%"class.blink::HTMLInputElement"*)*, i32 (%"class.blink::HTMLInputElement"*)** %43, i64 178
  %45 = load i32 (%"class.blink::HTMLInputElement"*)*, i32 (%"class.blink::HTMLInputElement"*)** %44, align 8
  %46 = tail call i32 %45(%"class.blink::HTMLInputElement"* %0) #15
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %57

48:                                               ; preds = %33
  %49 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %50 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %51, i64 0, i32 2
  %53 = bitcast %"class.blink::UseCounter"* %52 to void (%"class.blink::UseCounter"*, i32)***
  %54 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %54, i64 3
  %56 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %55, align 8
  tail call void %56(%"class.blink::UseCounter"* %52, i32 3380) #15
  br label %72

57:                                               ; preds = %33
  %58 = load i32 (%"class.blink::HTMLInputElement"*)**, i32 (%"class.blink::HTMLInputElement"*)*** %27, align 8
  %59 = getelementptr inbounds i32 (%"class.blink::HTMLInputElement"*)*, i32 (%"class.blink::HTMLInputElement"*)** %58, i64 178
  %60 = load i32 (%"class.blink::HTMLInputElement"*)*, i32 (%"class.blink::HTMLInputElement"*)** %59, align 8
  %61 = tail call i32 %60(%"class.blink::HTMLInputElement"* %0) #15
  %62 = icmp eq i32 %61, 2
  br i1 %62, label %63, label %72

63:                                               ; preds = %57
  %64 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %65 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %64, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::Document"*, %"class.blink::Document"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %66, i64 0, i32 2
  %68 = bitcast %"class.blink::UseCounter"* %67 to void (%"class.blink::UseCounter"*, i32)***
  %69 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %69, i64 3
  %71 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %70, align 8
  tail call void %71(%"class.blink::UseCounter"* %67, i32 3381) #15
  br label %72

72:                                               ; preds = %26, %48, %63, %57
  %73 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %3, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %73, i64 195
  %75 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %74, align 8
  %76 = tail call %"class.WTF::StringImpl"* %75(%"class.blink::HTMLInputElement"* %0) #15
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp ult i32 %80, 255
  br i1 %81, label %82, label %111

82:                                               ; preds = %72, %78
  %83 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %84 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %84, i64 0, i32 2, i32 0, i32 0
  %86 = load %"class.blink::Document"*, %"class.blink::Document"** %85, align 8
  %87 = tail call dereferenceable(16) %"class.blink::ScriptRegexp"* @_ZNK5blink8Document17EnsureEmailRegexpEv(%"class.blink::Document"* %86) #15
  %88 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #15
  %89 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %3, align 8
  %90 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %89, i64 195
  %91 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %90, align 8
  %92 = tail call %"class.WTF::StringImpl"* %91(%"class.blink::HTMLInputElement"* %0) #15
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %93, align 8
  %94 = call zeroext i1 @_ZN5blink14EmailInputType19IsValidEmailAddressERKNS_12ScriptRegexpERKN3WTF6StringE(%"class.blink::ScriptRegexp"* dereferenceable(16) %87, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %82
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #15
  br label %110

110:                                              ; preds = %109, %106, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #15
  br i1 %77, label %125, label %111

111:                                              ; preds = %78, %110
  %112 = phi i1 [ %94, %110 ], [ false, %78 ]
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %111
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %111
  %122 = phi i32 [ %120, %119 ], [ %118, %111 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #15
  br i1 %112, label %127, label %137

125:                                              ; preds = %110, %121
  %126 = phi i1 [ %94, %110 ], [ %112, %121 ]
  br i1 %126, label %127, label %137

127:                                              ; preds = %124, %125
  %128 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %129 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %129, i64 0, i32 2, i32 0, i32 0
  %131 = load %"class.blink::Document"*, %"class.blink::Document"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %131, i64 0, i32 2
  %133 = bitcast %"class.blink::UseCounter"* %132 to void (%"class.blink::UseCounter"*, i32)***
  %134 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %134, i64 3
  %136 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %135, align 8
  call void %136(%"class.blink::UseCounter"* %132, i32 3382) #15
  br label %137

137:                                              ; preds = %1, %124, %24, %25, %127, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement20DispatchFocusInEventERKN3WTF12AtomicStringEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::HTMLInputElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #0 align 2 {
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kDOMFocusInE, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, %10
  br i1 %11, label %12, label %19

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %14 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %13, align 8
  %15 = bitcast %"class.blink::InputTypeView"* %14 to void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)***
  %16 = load void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)**, void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)*, void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)** %16, i64 16
  %18 = load void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)*, void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)** %17, align 8
  tail call void %18(%"class.blink::InputTypeView"* %14, %"class.blink::Element"* %2, i32 %3) #15
  br label %19

19:                                               ; preds = %12, %5
  %20 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"* %20, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::Element"* %2, i32 %3, %"class.blink::InputDeviceCapabilities"* %4) #15
  ret void
}

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement15HandleBlurEventEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 17
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement7setTypeERKN3WTF12AtomicStringE(%"class.blink::HTMLInputElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %1) #15
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement23InitializeTypeInParsingEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9InputType17NormalizeTypeNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %61) #15
  %63 = tail call %"class.blink::InputType"* @_ZN5blink9InputType6CreateERNS_16HTMLInputElementERKN3WTF12AtomicStringE(%"class.blink::HTMLInputElement"* dereferenceable(320) %0, %"class.WTF::AtomicString"* dereferenceable(8) %62) #15
  %64 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7
  %65 = ptrtoint %"class.blink::InputType"* %63 to i64
  %66 = bitcast %"class.blink::Member.48"* %64 to i64*
  store atomic i64 %65, i64* %66 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %60
  %70 = bitcast %"class.blink::InputType"* %63 to i8*
  %71 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %70) #15
  %72 = getelementptr inbounds %"class.blink::Member.48", %"class.blink::Member.48"* %64, i64 0, i32 0, i32 0
  %73 = load %"class.blink::InputType"*, %"class.blink::InputType"** %72, align 8
  br label %74

74:                                               ; preds = %60, %69
  %75 = phi %"class.blink::InputType"* [ %63, %60 ], [ %73, %69 ]
  %76 = getelementptr inbounds %"class.blink::Member.48", %"class.blink::Member.48"* %64, i64 0, i32 0, i32 0
  %77 = bitcast %"class.blink::InputType"* %75 to %"class.blink::InputTypeView"* (%"class.blink::InputType"*)***
  %78 = load %"class.blink::InputTypeView"* (%"class.blink::InputType"*)**, %"class.blink::InputTypeView"* (%"class.blink::InputType"*)*** %77, align 8
  %79 = getelementptr inbounds %"class.blink::InputTypeView"* (%"class.blink::InputType"*)*, %"class.blink::InputTypeView"* (%"class.blink::InputType"*)** %78, i64 3
  %80 = load %"class.blink::InputTypeView"* (%"class.blink::InputType"*)*, %"class.blink::InputTypeView"* (%"class.blink::InputType"*)** %79, align 8
  %81 = tail call %"class.blink::InputTypeView"* %80(%"class.blink::InputType"* %75) #15
  %82 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8
  %83 = ptrtoint %"class.blink::InputTypeView"* %81 to i64
  %84 = bitcast %"class.blink::Member.54"* %82 to i64*
  store atomic i64 %83, i64* %84 monotonic, align 8
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %74
  %88 = bitcast %"class.blink::InputTypeView"* %81 to i8*
  %89 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #15
  br label %90

90:                                               ; preds = %74, %87
  %91 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #15
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %92, align 8
  %93 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %94 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %95 = icmp eq %"class.blink::ElementData"* %94, null
  br i1 %95, label %146, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %94, i64 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %96
  %102 = bitcast %"class.blink::ElementData"* %94 to %"class.blink::UniqueElementData"*
  %103 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %94, i64 1, i32 1
  %104 = bitcast %"class.blink::Member.14"* %103 to %"class.blink::Attribute"**
  %105 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %102, i64 0, i32 2, i32 0, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  br label %113

108:                                              ; preds = %96
  %109 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %94, i64 1
  %110 = bitcast %"class.blink::ElementData"* %109 to %"class.blink::Attribute"*
  %111 = lshr i32 %98, 1
  %112 = and i32 %111, 268435455
  br label %113

113:                                              ; preds = %108, %101
  %114 = phi %"class.blink::Attribute"* [ %110, %108 ], [ %105, %101 ]
  %115 = phi i32 [ %112, %108 ], [ %107, %101 ]
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %114, i64 %116
  %118 = icmp eq i32 %115, 0
  br i1 %118, label %146, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %93, i64 0, i32 0, i32 0
  %121 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %121, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %124

124:                                              ; preds = %139, %119
  %125 = phi %"class.blink::Attribute"* [ %114, %119 ], [ %140, %139 ]
  %126 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %126, align 8
  %128 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %127, %121
  br i1 %128, label %142, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %131, %132
  br i1 %133, label %134, label %139

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 4, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %136, %137
  br i1 %138, label %142, label %139

139:                                              ; preds = %134, %129
  %140 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %125, i64 1
  %141 = icmp eq %"class.blink::Attribute"* %140, %117
  br i1 %141, label %146, label %124

142:                                              ; preds = %134, %124
  %143 = icmp eq %"class.blink::Attribute"* %125, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %125, i64 0, i32 1
  br label %148

146:                                              ; preds = %139, %142, %113, %90
  %147 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %148

148:                                              ; preds = %144, %146
  %149 = phi %"class.WTF::AtomicString"* [ %147, %146 ], [ %145, %144 ]
  %150 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %149, i64 0, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %92, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %170, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %170

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i33
  %162 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #15
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !4

167:                                              ; preds = %158
  tail call void @llvm.trap() #15
  unreachable

168:                                              ; preds = %158
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %159, align 4
  br label %170

170:                                              ; preds = %148, %153, %168
  %171 = load %"class.blink::InputType"*, %"class.blink::InputType"** %76, align 8
  %172 = bitcast %"class.blink::InputType"* %171 to i32 (%"class.blink::InputType"*)***
  %173 = load i32 (%"class.blink::InputType"*)**, i32 (%"class.blink::InputType"*)*** %172, align 8
  %174 = getelementptr inbounds i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %173, i64 14
  %175 = load i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %174, align 8
  %176 = tail call i32 %175(%"class.blink::InputType"* %171) #15
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %205

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %180 = load %"class.blink::InputType"*, %"class.blink::InputType"** %179, align 8
  %181 = bitcast %"class.blink::InputType"* %180 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %182 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %181, align 8
  %183 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %182, i64 43
  %184 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %183, align 8
  %185 = call %"class.WTF::StringImpl"* %184(%"class.blink::InputType"* %180, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %186 = ptrtoint %"class.WTF::StringImpl"* %185 to i64
  %187 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3
  %188 = bitcast %"class.WTF::String"* %187 to i64*
  %189 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %187, i64 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  store i64 %186, i64* %188, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %178
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #15
  br label %205

205:                                              ; preds = %178, %201, %204, %170
  %206 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %208, %210
  %212 = zext i1 %211 to i16
  %213 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %214 = load i16, i16* %213, align 4
  %215 = shl nuw nsw i16 %212, 14
  %216 = or i16 %214, %215
  store i16 %216, i16* %213, align 4
  %217 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %82, i64 0, i32 0, i32 0
  %218 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %217, align 8
  %219 = bitcast %"class.blink::InputTypeView"* %218 to i1 (%"class.blink::InputTypeView"*)***
  %220 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %219, align 8
  %221 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %220, i64 28
  %222 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %221, align 8
  %223 = call zeroext i1 %222(%"class.blink::InputTypeView"* %218) #15
  br i1 %223, label %224, label %232

224:                                              ; preds = %205
  %225 = call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25CreateUserAgentShadowRootEv(%"class.blink::Element"* %3) #15
  %226 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %227 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %226, align 8
  %228 = bitcast %"class.blink::InputTypeView"* %227 to void (%"class.blink::InputTypeView"*)***
  %229 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %229, i64 29
  %231 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %230, align 8
  call void %231(%"class.blink::InputTypeView"* %227) #15
  br label %232

232:                                              ; preds = %224, %205
  %233 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %234 = bitcast %"class.blink::ListedElement.base"* %233 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"* %234) #15
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %243, label %237

237:                                              ; preds = %232
  %238 = load %"class.blink::InputType"*, %"class.blink::InputType"** %76, align 8
  %239 = bitcast %"class.blink::InputType"* %238 to void (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %240 = load void (%"class.blink::InputType"*, %"class.WTF::String"*)**, void (%"class.blink::InputType"*, %"class.WTF::String"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.WTF::String"*)*, void (%"class.blink::InputType"*, %"class.WTF::String"*)** %240, i64 45
  %242 = load void (%"class.blink::InputType"*, %"class.WTF::String"*)*, void (%"class.blink::InputType"*, %"class.WTF::String"*)** %241, align 8
  call void %242(%"class.blink::InputType"* %238, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  br label %243

243:                                              ; preds = %237, %232
  %244 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %217, align 8
  %245 = bitcast %"class.blink::InputTypeView"* %244 to void (%"class.blink::InputTypeView"*)***
  %246 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %246, i64 37
  %248 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %247, align 8
  call void %248(%"class.blink::InputTypeView"* %244) #15
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %243
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #15
  br label %264

264:                                              ; preds = %243, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #15
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9InputType17NormalizeTypeNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::InputType"* @_ZN5blink9InputType6CreateERNS_16HTMLInputElementERKN3WTF12AtomicStringE(%"class.blink::HTMLInputElement"* dereferenceable(320), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement13SanitizeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %6 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %6, i64 43
  %8 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %7, align 8
  %9 = tail call %"class.WTF::StringImpl"* %8(%"class.blink::InputType"* %4, %"class.WTF::String"* dereferenceable(8) %1) #15
  ret %"class.WTF::StringImpl"* %9
}

declare void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement10UpdateTypeEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"struct.blink::Element::AttributeModificationParams", align 8
  %7 = alloca %"struct.blink::Element::AttributeModificationParams", align 8
  %8 = alloca %"struct.blink::Element::AttributeModificationParams", align 8
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %64, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ElementData"* %12 to %"class.blink::UniqueElementData"*
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1, i32 1
  %22 = bitcast %"class.blink::Member.14"* %21 to %"class.blink::Attribute"**
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %31

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1
  %28 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::Attribute"*
  %29 = lshr i32 %16, 1
  %30 = and i32 %29, 268435455
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi %"class.blink::Attribute"* [ %28, %26 ], [ %23, %19 ]
  %33 = phi i32 [ %30, %26 ], [ %25, %19 ]
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %57, %37
  %43 = phi %"class.blink::Attribute"* [ %32, %37 ], [ %58, %57 ]
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %45, %39
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %60, label %57

57:                                               ; preds = %52, %47
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 1
  %59 = icmp eq %"class.blink::Attribute"* %58, %35
  br i1 %59, label %64, label %42

60:                                               ; preds = %52, %42
  %61 = icmp eq %"class.blink::Attribute"* %43, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 1
  br label %66

64:                                               ; preds = %57, %60, %31, %1
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %66

66:                                               ; preds = %62, %64
  %67 = phi %"class.WTF::AtomicString"* [ %65, %64 ], [ %63, %62 ]
  %68 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9InputType17NormalizeTypeNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %67) #15
  %69 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7
  %70 = getelementptr inbounds %"class.blink::Member.48", %"class.blink::Member.48"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %72 = bitcast %"class.blink::InputType"* %71 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %73 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %73, i64 4
  %75 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %74, align 8
  %76 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %75(%"class.blink::InputType"* %71) #15
  %77 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %78, %80
  br i1 %81, label %909, label %82

82:                                               ; preds = %66
  %83 = tail call %"class.blink::InputType"* @_ZN5blink9InputType6CreateERNS_16HTMLInputElementERKN3WTF12AtomicStringE(%"class.blink::HTMLInputElement"* dereferenceable(320) %0, %"class.WTF::AtomicString"* dereferenceable(8) %68) #15
  %84 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %85 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %86 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %86, i64 171
  %88 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %87, align 8
  %89 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %88(%"class.blink::HTMLFormControlElement"* %84) #15
  %90 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %91 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %90, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %92, %94
  br i1 %95, label %96, label %115

96:                                               ; preds = %82
  %97 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %98 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %97, align 8
  %99 = icmp eq %"class.blink::HTMLFormElement"* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %98, i64 0, i32 3
  br label %111

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, 256
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %109 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %109, i64 0, i32 9
  br label %111

111:                                              ; preds = %107, %100
  %112 = phi %"class.blink::RadioButtonGroupScope"* [ %110, %107 ], [ %101, %100 ]
  %113 = icmp eq %"class.blink::RadioButtonGroupScope"* %112, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  tail call void @_ZN5blink21RadioButtonGroupScope12RemoveButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %112, %"class.blink::HTMLInputElement"* %0) #15
  br label %115

115:                                              ; preds = %82, %102, %111, %114
  %116 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %117 = bitcast %"class.blink::InputType"* %116 to i32 (%"class.blink::InputType"*)***
  %118 = load i32 (%"class.blink::InputType"*)**, i32 (%"class.blink::InputType"*)*** %117, align 8
  %119 = getelementptr inbounds i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %118, i64 14
  %120 = load i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %119, align 8
  %121 = tail call i32 %120(%"class.blink::InputType"* %116) #15
  %122 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %123 = bitcast %"class.blink::InputType"* %122 to i1 (%"class.blink::InputType"*)***
  %124 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %124, i64 68
  %126 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %125, align 8
  %127 = tail call zeroext i1 %126(%"class.blink::InputType"* %122) #15
  %128 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %129 = load %"class.blink::InputType"*, %"class.blink::InputType"** %128, align 8
  %130 = bitcast %"class.blink::InputType"* %129 to i1 (%"class.blink::InputType"*)***
  %131 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %130, align 8
  %132 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %131, i64 48
  %133 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %132, align 8
  %134 = tail call zeroext i1 %133(%"class.blink::InputType"* %129) #15
  %135 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8
  %136 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %136, align 8
  %138 = bitcast %"class.blink::InputTypeView"* %137 to void (%"class.blink::InputTypeView"*)***
  %139 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %139, i64 26
  %141 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %140, align 8
  tail call void %141(%"class.blink::InputTypeView"* %137) #15
  %142 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %136, align 8
  %143 = bitcast %"class.blink::InputTypeView"* %142 to void (%"class.blink::InputTypeView"*)***
  %144 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %144, i64 30
  %146 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %145, align 8
  tail call void %146(%"class.blink::InputTypeView"* %142) #15
  %147 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %148 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 1
  %149 = bitcast %"class.blink::Member.46"* %148 to i64*
  store atomic i64 0, i64* %149 monotonic, align 8
  %150 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node26SetForceReattachLayoutTreeEv(%"class.blink::Node"* %150) #15
  %151 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %152 = bitcast %"class.blink::InputType"* %151 to i1 (%"class.blink::InputType"*)***
  %153 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %152, align 8
  %154 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %153, i64 25
  %155 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %154, align 8
  %156 = tail call zeroext i1 %155(%"class.blink::InputType"* %151) #15
  %157 = bitcast %"class.blink::InputType"* %83 to i1 (%"class.blink::InputType"*)***
  %158 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %157, align 8
  %159 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %158, i64 25
  %160 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %159, align 8
  %161 = tail call zeroext i1 %160(%"class.blink::InputType"* %83) #15
  %162 = xor i1 %156, %161
  br i1 %162, label %163, label %166

163:                                              ; preds = %115
  %164 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %84) #15
  br i1 %164, label %165, label %166

165:                                              ; preds = %163
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 39) #15
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 37) #15
  br label %166

166:                                              ; preds = %165, %163, %115
  %167 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %168 = bitcast %"class.blink::InputType"* %167 to i1 (%"class.blink::InputType"*)***
  %169 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %168, align 8
  %170 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %169, i64 72
  %171 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %170, align 8
  %172 = tail call zeroext i1 %171(%"class.blink::InputType"* %167) #15
  %173 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %157, align 8
  %174 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %173, i64 72
  %175 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %174, align 8
  %176 = tail call zeroext i1 %175(%"class.blink::InputType"* %83) #15
  %177 = xor i1 %172, %176
  br i1 %177, label %178, label %179

178:                                              ; preds = %166
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 40) #15
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 41) #15
  br label %179

179:                                              ; preds = %178, %166
  %180 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %181 = bitcast %"class.blink::InputType"* %180 to i1 (%"class.blink::InputType"*)***
  %182 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %181, align 8
  %183 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %182, i64 66
  %184 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %183, align 8
  %185 = tail call zeroext i1 %184(%"class.blink::InputType"* %180) #15
  %186 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %157, align 8
  %187 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %186, i64 66
  %188 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %187, align 8
  %189 = tail call zeroext i1 %188(%"class.blink::InputType"* %83) #15
  %190 = xor i1 %185, %189
  br i1 %190, label %191, label %192

191:                                              ; preds = %179
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 32) #15
  br label %192

192:                                              ; preds = %191, %179
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 44) #15
  %193 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %194 = bitcast %"class.blink::InputType"* %193 to i1 (%"class.blink::InputType"*)***
  %195 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %194, align 8
  %196 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %195, i64 67
  %197 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %196, align 8
  %198 = tail call zeroext i1 %197(%"class.blink::InputType"* %193) #15
  br i1 %198, label %204, label %199

199:                                              ; preds = %192
  %200 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %157, align 8
  %201 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %200, i64 67
  %202 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %201, align 8
  %203 = tail call zeroext i1 %202(%"class.blink::InputType"* %83) #15
  br i1 %203, label %204, label %205

204:                                              ; preds = %199, %192
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 85) #15
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 86) #15
  br label %205

205:                                              ; preds = %204, %199
  %206 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %207 = bitcast %"class.blink::InputType"* %206 to i1 (%"class.blink::InputType"*)***
  %208 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %207, align 8
  %209 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %208, i64 64
  %210 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %209, align 8
  %211 = tail call zeroext i1 %210(%"class.blink::InputType"* %206) #15
  %212 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %157, align 8
  %213 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %212, i64 64
  %214 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %213, align 8
  %215 = tail call zeroext i1 %214(%"class.blink::InputType"* %83) #15
  %216 = xor i1 %211, %215
  br i1 %216, label %217, label %218

217:                                              ; preds = %205
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 94) #15
  br label %218

218:                                              ; preds = %217, %205
  %219 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %220 = bitcast %"class.blink::InputType"* %219 to i1 (%"class.blink::InputType"*)***
  %221 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %220, align 8
  %222 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %221, i64 71
  %223 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %222, align 8
  %224 = tail call zeroext i1 %223(%"class.blink::InputType"* %219) #15
  %225 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %157, align 8
  %226 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %225, i64 71
  %227 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %226, align 8
  %228 = tail call zeroext i1 %227(%"class.blink::InputType"* %83) #15
  %229 = xor i1 %224, %228
  %230 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %232 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %230, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %231, %233
  %235 = zext i1 %234 to i16
  %236 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %237 = load i16, i16* %236, align 4
  %238 = shl nuw nsw i16 %235, 14
  %239 = or i16 %237, %238
  store i16 %239, i16* %236, align 4
  %240 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %241 = bitcast %"class.blink::InputType"* %240 to i1 (%"class.blink::InputType"*)***
  %242 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %241, align 8
  %243 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %242, i64 83
  %244 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %243, align 8
  %245 = tail call zeroext i1 %244(%"class.blink::InputType"* %240) #15
  %246 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %136, align 8
  tail call void @_ZN5blink13InputTypeView15WillBeDestroyedEv(%"class.blink::InputTypeView"* %246) #15
  %247 = ptrtoint %"class.blink::InputType"* %83 to i64
  %248 = bitcast %"class.blink::Member.48"* %69 to i64*
  store atomic i64 %247, i64* %248 monotonic, align 8
  %249 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %255, label %251

251:                                              ; preds = %218
  %252 = bitcast %"class.blink::InputType"* %83 to i8*
  %253 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %252) #15
  %254 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  br label %255

255:                                              ; preds = %218, %251
  %256 = phi %"class.blink::InputType"* [ %83, %218 ], [ %254, %251 ]
  %257 = bitcast %"class.blink::InputType"* %256 to %"class.blink::InputTypeView"* (%"class.blink::InputType"*)***
  %258 = load %"class.blink::InputTypeView"* (%"class.blink::InputType"*)**, %"class.blink::InputTypeView"* (%"class.blink::InputType"*)*** %257, align 8
  %259 = getelementptr inbounds %"class.blink::InputTypeView"* (%"class.blink::InputType"*)*, %"class.blink::InputTypeView"* (%"class.blink::InputType"*)** %258, i64 3
  %260 = load %"class.blink::InputTypeView"* (%"class.blink::InputType"*)*, %"class.blink::InputTypeView"* (%"class.blink::InputType"*)** %259, align 8
  %261 = tail call %"class.blink::InputTypeView"* %260(%"class.blink::InputType"* %256) #15
  %262 = ptrtoint %"class.blink::InputTypeView"* %261 to i64
  %263 = bitcast %"class.blink::Member.54"* %135 to i64*
  store atomic i64 %262, i64* %263 monotonic, align 8
  %264 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %270, label %266

266:                                              ; preds = %255
  %267 = bitcast %"class.blink::InputTypeView"* %261 to i8*
  %268 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %267) #15
  %269 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %136, align 8
  br label %270

270:                                              ; preds = %255, %266
  %271 = phi %"class.blink::InputTypeView"* [ %261, %255 ], [ %269, %266 ]
  %272 = bitcast %"class.blink::InputTypeView"* %271 to i1 (%"class.blink::InputTypeView"*)***
  %273 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %272, align 8
  %274 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %273, i64 28
  %275 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %274, align 8
  %276 = tail call zeroext i1 %275(%"class.blink::InputTypeView"* %271) #15
  br i1 %276, label %277, label %285

277:                                              ; preds = %270
  %278 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"* %9) #15
  %279 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %280 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %279, align 8
  %281 = bitcast %"class.blink::InputTypeView"* %280 to void (%"class.blink::InputTypeView"*)***
  %282 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %281, align 8
  %283 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %282, i64 29
  %284 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %283, align 8
  tail call void %284(%"class.blink::InputTypeView"* %280) #15
  br label %285

285:                                              ; preds = %277, %270
  %286 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %287 = bitcast %"class.blink::ListedElement.base"* %286 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"* %287) #15
  br i1 %229, label %288, label %305

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %290 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %289, align 8
  %291 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %147) #15
  %292 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %291, i64 0, i32 0, i32 0
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %299, label %295

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = icmp ne i32 %297, 0
  br label %299

299:                                              ; preds = %288, %295
  %300 = phi i1 [ false, %288 ], [ %298, %295 ]
  %301 = bitcast %"class.blink::InputTypeView"* %290 to void (%"class.blink::InputTypeView"*, i1)***
  %302 = load void (%"class.blink::InputTypeView"*, i1)**, void (%"class.blink::InputTypeView"*, i1)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.blink::InputTypeView"*, i1)*, void (%"class.blink::InputTypeView"*, i1)** %302, i64 48
  %304 = load void (%"class.blink::InputTypeView"*, i1)*, void (%"class.blink::InputTypeView"*, i1)** %303, align 8
  tail call void %304(%"class.blink::InputTypeView"* %290, i1 zeroext %300) #15
  tail call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %147) #15
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %9, i32 38) #15
  br label %305

305:                                              ; preds = %299, %285
  %306 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %307 = bitcast %"class.blink::InputType"* %306 to i32 (%"class.blink::InputType"*)***
  %308 = load i32 (%"class.blink::InputType"*)**, i32 (%"class.blink::InputType"*)*** %307, align 8
  %309 = getelementptr inbounds i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %308, i64 14
  %310 = load i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %309, align 8
  %311 = tail call i32 %310(%"class.blink::InputType"* %306) #15
  %312 = icmp eq i32 %121, 0
  %313 = add i32 %311, -1
  %314 = icmp ult i32 %313, 2
  %315 = and i1 %312, %314
  br i1 %315, label %316, label %392

316:                                              ; preds = %305
  %317 = load i16, i16* %236, align 4
  %318 = and i16 %317, 1
  %319 = icmp eq i16 %318, 0
  br i1 %319, label %370, label %320

320:                                              ; preds = %316
  %321 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %322 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322) #15
  %323 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3, i32 0, i32 0
  %324 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %323, align 8
  %325 = icmp eq %"class.WTF::StringImpl"* %324, null
  br i1 %325, label %349, label %326

326:                                              ; preds = %320
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load atomic i32, i32* %327 acquire, align 4
  %329 = and i32 %328, 4
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %347, label %331

331:                                              ; preds = %326
  %332 = load atomic i32, i32* %327 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %349

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  %338 = zext i32 %337 to i33
  %339 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %338, i33 1) #15
  %340 = extractvalue { i33, i1 } %339, 1
  %341 = extractvalue { i33, i1 } %339, 0
  %342 = icmp slt i33 %341, 0
  %343 = or i1 %340, %342
  br i1 %343, label %344, label %345, !prof !4

344:                                              ; preds = %335
  tail call void @llvm.trap() #15
  unreachable

345:                                              ; preds = %335
  %346 = trunc i33 %341 to i32
  store i32 %346, i32* %336, align 4
  br label %349

347:                                              ; preds = %326
  %348 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %324) #15
  br label %349

349:                                              ; preds = %320, %331, %345, %347
  %350 = phi %"class.WTF::StringImpl"* [ %348, %347 ], [ %324, %331 ], [ %324, %345 ], [ null, %320 ]
  %351 = ptrtoint %"class.WTF::StringImpl"* %350 to i64
  %352 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  store i64 %351, i64* %352, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %9, %"class.blink::QualifiedName"* dereferenceable(8) %321, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #15
  %353 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %354, null
  br i1 %355, label %369, label %356

356:                                              ; preds = %349
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load atomic i32, i32* %357 monotonic, align 4
  %359 = and i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 0
  %362 = load i32, i32* %361, align 4
  br i1 %360, label %363, label %365

363:                                              ; preds = %356
  %364 = add i32 %362, -1
  store i32 %364, i32* %361, align 4
  br label %365

365:                                              ; preds = %363, %356
  %366 = phi i32 [ %364, %363 ], [ %362, %356 ]
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %369

368:                                              ; preds = %365
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %354) #15
  br label %369

369:                                              ; preds = %349, %365, %368
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322) #15
  br label %370

370:                                              ; preds = %316, %369
  %371 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3
  %372 = bitcast %"class.WTF::String"* %371 to i64*
  %373 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %371, i64 0, i32 0, i32 0
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %373, align 8
  store i64 0, i64* %372, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %374, null
  br i1 %375, label %389, label %376

376:                                              ; preds = %370
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  br i1 %380, label %383, label %385

383:                                              ; preds = %376
  %384 = add i32 %382, -1
  store i32 %384, i32* %381, align 4
  br label %385

385:                                              ; preds = %383, %376
  %386 = phi i32 [ %384, %383 ], [ %382, %376 ]
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %389

388:                                              ; preds = %385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #15
  br label %389

389:                                              ; preds = %388, %385, %370
  %390 = load i16, i16* %236, align 4
  %391 = and i16 %390, -2
  store i16 %391, i16* %236, align 4
  br label %703

392:                                              ; preds = %305
  %393 = icmp ne i32 %121, 0
  %394 = icmp eq i32 %311, 0
  %395 = and i1 %393, %394
  br i1 %395, label %396, label %527

396:                                              ; preds = %392
  %397 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %397) #15
  %398 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %398, align 8
  %399 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %400 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %401 = icmp eq %"class.blink::ElementData"* %400, null
  br i1 %401, label %452, label %402

402:                                              ; preds = %396
  %403 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %400, i64 0, i32 0, i32 0, i32 0
  %404 = load i32, i32* %403, align 4
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %414, label %407

407:                                              ; preds = %402
  %408 = bitcast %"class.blink::ElementData"* %400 to %"class.blink::UniqueElementData"*
  %409 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %400, i64 1, i32 1
  %410 = bitcast %"class.blink::Member.14"* %409 to %"class.blink::Attribute"**
  %411 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %410, align 8
  %412 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %408, i64 0, i32 2, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  br label %419

414:                                              ; preds = %402
  %415 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %400, i64 1
  %416 = bitcast %"class.blink::ElementData"* %415 to %"class.blink::Attribute"*
  %417 = lshr i32 %404, 1
  %418 = and i32 %417, 268435455
  br label %419

419:                                              ; preds = %414, %407
  %420 = phi %"class.blink::Attribute"* [ %416, %414 ], [ %411, %407 ]
  %421 = phi i32 [ %418, %414 ], [ %413, %407 ]
  %422 = zext i32 %421 to i64
  %423 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %420, i64 %422
  %424 = icmp eq i32 %421, 0
  br i1 %424, label %452, label %425

425:                                              ; preds = %419
  %426 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %399, i64 0, i32 0, i32 0
  %427 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %426, align 8
  %428 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %427, i64 0, i32 3, i32 0, i32 0, i32 0
  %429 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %427, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %430

430:                                              ; preds = %445, %425
  %431 = phi %"class.blink::Attribute"* [ %420, %425 ], [ %446, %445 ]
  %432 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %431, i64 0, i32 0, i32 0, i32 0
  %433 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %432, align 8
  %434 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %433, %427
  br i1 %434, label %448, label %435

435:                                              ; preds = %430
  %436 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %433, i64 0, i32 3, i32 0, i32 0, i32 0
  %437 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %436, align 8
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %437, %438
  br i1 %439, label %440, label %445

440:                                              ; preds = %435
  %441 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %433, i64 0, i32 4, i32 0, i32 0, i32 0
  %442 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8
  %443 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %444 = icmp eq %"class.WTF::StringImpl"* %442, %443
  br i1 %444, label %448, label %445

445:                                              ; preds = %440, %435
  %446 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %431, i64 1
  %447 = icmp eq %"class.blink::Attribute"* %446, %423
  br i1 %447, label %452, label %430

448:                                              ; preds = %440, %430
  %449 = icmp eq %"class.blink::Attribute"* %431, null
  br i1 %449, label %452, label %450

450:                                              ; preds = %448
  %451 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %431, i64 0, i32 1
  br label %454

452:                                              ; preds = %445, %448, %419, %396
  %453 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %454

454:                                              ; preds = %450, %452
  %455 = phi %"class.WTF::AtomicString"* [ %453, %452 ], [ %451, %450 ]
  %456 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %455, i64 0, i32 0, i32 0, i32 0
  %457 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %456, align 8
  store %"class.WTF::StringImpl"* %457, %"class.WTF::StringImpl"** %398, align 8
  %458 = icmp eq %"class.WTF::StringImpl"* %457, null
  br i1 %458, label %476, label %459

459:                                              ; preds = %454
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %476

464:                                              ; preds = %459
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  %467 = zext i32 %466 to i33
  %468 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %467, i33 1) #15
  %469 = extractvalue { i33, i1 } %468, 1
  %470 = extractvalue { i33, i1 } %468, 0
  %471 = icmp slt i33 %470, 0
  %472 = or i1 %469, %471
  br i1 %472, label %473, label %474, !prof !4

473:                                              ; preds = %464
  tail call void @llvm.trap() #15
  unreachable

474:                                              ; preds = %464
  %475 = trunc i33 %470 to i32
  store i32 %475, i32* %465, align 4
  br label %476

476:                                              ; preds = %454, %459, %474
  %477 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %478 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  %479 = bitcast %"class.blink::InputType"* %477 to void (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %480 = load void (%"class.blink::InputType"*, %"class.WTF::String"*)**, void (%"class.blink::InputType"*, %"class.WTF::String"*)*** %479, align 8
  %481 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.WTF::String"*)*, void (%"class.blink::InputType"*, %"class.WTF::String"*)** %480, i64 45
  %482 = load void (%"class.blink::InputType"*, %"class.WTF::String"*)*, void (%"class.blink::InputType"*, %"class.WTF::String"*)** %481, align 8
  call void %482(%"class.blink::InputType"* %477, %"class.WTF::String"* nonnull dereferenceable(8) %478) #15
  %483 = load %"class.blink::InputType"*, %"class.blink::InputType"** %128, align 8
  %484 = bitcast %"class.blink::InputType"* %483 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %485 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %484, align 8
  %486 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %485, i64 43
  %487 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %486, align 8
  %488 = call %"class.WTF::StringImpl"* %487(%"class.blink::InputType"* %483, %"class.WTF::String"* nonnull dereferenceable(8) %478) #15
  %489 = ptrtoint %"class.WTF::StringImpl"* %488 to i64
  %490 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3
  %491 = bitcast %"class.WTF::String"* %490 to i64*
  %492 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %490, i64 0, i32 0, i32 0
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %492, align 8
  store i64 %489, i64* %491, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %493, null
  br i1 %494, label %508, label %495

495:                                              ; preds = %476
  %496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %497 = load atomic i32, i32* %496 monotonic, align 4
  %498 = and i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 0
  %501 = load i32, i32* %500, align 4
  br i1 %499, label %502, label %504

502:                                              ; preds = %495
  %503 = add i32 %501, -1
  store i32 %503, i32* %500, align 4
  br label %504

504:                                              ; preds = %502, %495
  %505 = phi i32 [ %503, %502 ], [ %501, %495 ]
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %504
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %493) #15
  br label %508

508:                                              ; preds = %507, %504, %476
  %509 = load i16, i16* %236, align 4
  %510 = and i16 %509, -2
  store i16 %510, i16* %236, align 4
  %511 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  %512 = icmp eq %"class.WTF::StringImpl"* %511, null
  br i1 %512, label %526, label %513

513:                                              ; preds = %508
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load atomic i32, i32* %514 monotonic, align 4
  %516 = and i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 0
  %519 = load i32, i32* %518, align 4
  br i1 %517, label %520, label %522

520:                                              ; preds = %513
  %521 = add i32 %519, -1
  store i32 %521, i32* %518, align 4
  br label %522

522:                                              ; preds = %520, %513
  %523 = phi i32 [ %521, %520 ], [ %519, %513 ]
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %526

525:                                              ; preds = %522
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %511) #15
  br label %526

526:                                              ; preds = %508, %522, %525
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %397) #15
  br label %703

527:                                              ; preds = %392
  %528 = icmp ne i32 %121, 3
  %529 = icmp eq i32 %311, 3
  %530 = and i1 %528, %529
  br i1 %530, label %531, label %553

531:                                              ; preds = %527
  %532 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3
  %533 = bitcast %"class.WTF::String"* %532 to i64*
  %534 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %532, i64 0, i32 0, i32 0
  %535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %534, align 8
  store i64 0, i64* %533, align 8
  %536 = icmp eq %"class.WTF::StringImpl"* %535, null
  br i1 %536, label %550, label %537

537:                                              ; preds = %531
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 0
  %543 = load i32, i32* %542, align 4
  br i1 %541, label %544, label %546

544:                                              ; preds = %537
  %545 = add i32 %543, -1
  store i32 %545, i32* %542, align 4
  br label %546

546:                                              ; preds = %544, %537
  %547 = phi i32 [ %545, %544 ], [ %543, %537 ]
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %550

549:                                              ; preds = %546
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %535) #15
  br label %550

550:                                              ; preds = %549, %546, %531
  %551 = load i16, i16* %236, align 4
  %552 = and i16 %551, -2
  store i16 %552, i16* %236, align 4
  br label %703

553:                                              ; preds = %527
  %554 = load i16, i16* %236, align 4
  %555 = and i16 %554, 1
  %556 = icmp eq i16 %555, 0
  br i1 %556, label %557, label %661

557:                                              ; preds = %553
  %558 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558) #15
  %559 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %559, align 8
  %560 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %561 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %562 = icmp eq %"class.blink::ElementData"* %561, null
  br i1 %562, label %613, label %563

563:                                              ; preds = %557
  %564 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %561, i64 0, i32 0, i32 0, i32 0
  %565 = load i32, i32* %564, align 4
  %566 = and i32 %565, 1
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %575, label %568

568:                                              ; preds = %563
  %569 = bitcast %"class.blink::ElementData"* %561 to %"class.blink::UniqueElementData"*
  %570 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %561, i64 1, i32 1
  %571 = bitcast %"class.blink::Member.14"* %570 to %"class.blink::Attribute"**
  %572 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %571, align 8
  %573 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %569, i64 0, i32 2, i32 0, i32 0, i32 2
  %574 = load i32, i32* %573, align 4
  br label %580

575:                                              ; preds = %563
  %576 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %561, i64 1
  %577 = bitcast %"class.blink::ElementData"* %576 to %"class.blink::Attribute"*
  %578 = lshr i32 %565, 1
  %579 = and i32 %578, 268435455
  br label %580

580:                                              ; preds = %575, %568
  %581 = phi %"class.blink::Attribute"* [ %577, %575 ], [ %572, %568 ]
  %582 = phi i32 [ %579, %575 ], [ %574, %568 ]
  %583 = zext i32 %582 to i64
  %584 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %581, i64 %583
  %585 = icmp eq i32 %582, 0
  br i1 %585, label %613, label %586

586:                                              ; preds = %580
  %587 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %560, i64 0, i32 0, i32 0
  %588 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %587, align 8
  %589 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %588, i64 0, i32 3, i32 0, i32 0, i32 0
  %590 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %588, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %591

591:                                              ; preds = %606, %586
  %592 = phi %"class.blink::Attribute"* [ %581, %586 ], [ %607, %606 ]
  %593 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %592, i64 0, i32 0, i32 0, i32 0
  %594 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %593, align 8
  %595 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %594, %588
  br i1 %595, label %609, label %596

596:                                              ; preds = %591
  %597 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %594, i64 0, i32 3, i32 0, i32 0, i32 0
  %598 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %597, align 8
  %599 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %600 = icmp eq %"class.WTF::StringImpl"* %598, %599
  br i1 %600, label %601, label %606

601:                                              ; preds = %596
  %602 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %594, i64 0, i32 4, i32 0, i32 0, i32 0
  %603 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %602, align 8
  %604 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %590, align 8
  %605 = icmp eq %"class.WTF::StringImpl"* %603, %604
  br i1 %605, label %609, label %606

606:                                              ; preds = %601, %596
  %607 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %592, i64 1
  %608 = icmp eq %"class.blink::Attribute"* %607, %584
  br i1 %608, label %613, label %591

609:                                              ; preds = %601, %591
  %610 = icmp eq %"class.blink::Attribute"* %592, null
  br i1 %610, label %613, label %611

611:                                              ; preds = %609
  %612 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %592, i64 0, i32 1
  br label %615

613:                                              ; preds = %606, %609, %580, %557
  %614 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %615

615:                                              ; preds = %611, %613
  %616 = phi %"class.WTF::AtomicString"* [ %614, %613 ], [ %612, %611 ]
  %617 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %616, i64 0, i32 0, i32 0, i32 0
  %618 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %617, align 8
  store %"class.WTF::StringImpl"* %618, %"class.WTF::StringImpl"** %559, align 8
  %619 = icmp eq %"class.WTF::StringImpl"* %618, null
  br i1 %619, label %660, label %620

620:                                              ; preds = %615
  %621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %622 = load atomic i32, i32* %621 monotonic, align 4
  %623 = and i32 %622, 2
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %625, label %639

625:                                              ; preds = %620
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 0
  %627 = load i32, i32* %626, align 4
  %628 = zext i32 %627 to i33
  %629 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %628, i33 1) #15
  %630 = extractvalue { i33, i1 } %629, 1
  %631 = extractvalue { i33, i1 } %629, 0
  %632 = icmp slt i33 %631, 0
  %633 = or i1 %630, %632
  br i1 %633, label %634, label %635, !prof !4

634:                                              ; preds = %625
  tail call void @llvm.trap() #15
  unreachable

635:                                              ; preds = %625
  %636 = trunc i33 %631 to i32
  store i32 %636, i32* %626, align 4
  %637 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %638 = icmp eq %"class.WTF::StringImpl"* %637, null
  br i1 %638, label %660, label %639

639:                                              ; preds = %620, %635
  %640 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %641 = bitcast %"class.blink::InputType"* %640 to void (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %642 = load void (%"class.blink::InputType"*, %"class.WTF::String"*)**, void (%"class.blink::InputType"*, %"class.WTF::String"*)*** %641, align 8
  %643 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.WTF::String"*)*, void (%"class.blink::InputType"*, %"class.WTF::String"*)** %642, i64 45
  %644 = load void (%"class.blink::InputType"*, %"class.WTF::String"*)*, void (%"class.blink::InputType"*, %"class.WTF::String"*)** %643, align 8
  call void %644(%"class.blink::InputType"* %640, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %645 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %646 = icmp eq %"class.WTF::StringImpl"* %645, null
  br i1 %646, label %660, label %647

647:                                              ; preds = %639
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load atomic i32, i32* %648 monotonic, align 4
  %650 = and i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 0
  %653 = load i32, i32* %652, align 4
  br i1 %651, label %654, label %656

654:                                              ; preds = %647
  %655 = add i32 %653, -1
  store i32 %655, i32* %652, align 4
  br label %656

656:                                              ; preds = %654, %647
  %657 = phi i32 [ %655, %654 ], [ %653, %647 ]
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %660

659:                                              ; preds = %656
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %645) #15
  br label %660

660:                                              ; preds = %615, %635, %639, %656, %659
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #15
  br label %661

661:                                              ; preds = %553, %660
  br i1 %394, label %662, label %703

662:                                              ; preds = %661
  %663 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %663) #15
  %664 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %664, align 8
  %665 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3
  %666 = load %"class.blink::InputType"*, %"class.blink::InputType"** %128, align 8
  %667 = bitcast %"class.blink::InputType"* %666 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %668 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %667, align 8
  %669 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %668, i64 43
  %670 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %669, align 8
  %671 = call %"class.WTF::StringImpl"* %670(%"class.blink::InputType"* %666, %"class.WTF::String"* dereferenceable(8) %665) #15
  store %"class.WTF::StringImpl"* %671, %"class.WTF::StringImpl"** %664, align 8
  %672 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %665, i64 0, i32 0, i32 0
  %673 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %672, align 8
  %674 = call zeroext i1 @_ZN3WTF20EqualIgnoringNullityEPNS_10StringImplES1_(%"class.WTF::StringImpl"* %671, %"class.WTF::StringImpl"* %673) #15
  br i1 %674, label %686, label %675

675:                                              ; preds = %662
  %676 = load i16, i16* %236, align 4
  %677 = and i16 %676, 1
  %678 = icmp eq i16 %677, 0
  %679 = bitcast %"class.blink::HTMLInputElement"* %0 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %680 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %679, align 8
  %681 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %680, i64 196
  %682 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %681, align 8
  call void %682(%"class.blink::HTMLInputElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 0, i32 0) #15
  br i1 %678, label %683, label %686

683:                                              ; preds = %675
  %684 = load i16, i16* %236, align 4
  %685 = and i16 %684, -2
  store i16 %685, i16* %236, align 4
  br label %686

686:                                              ; preds = %675, %683, %662
  %687 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %664, align 8
  %688 = icmp eq %"class.WTF::StringImpl"* %687, null
  br i1 %688, label %702, label %689

689:                                              ; preds = %686
  %690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %687, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %691 = load atomic i32, i32* %690 monotonic, align 4
  %692 = and i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %687, i64 0, i32 0
  %695 = load i32, i32* %694, align 4
  br i1 %693, label %696, label %698

696:                                              ; preds = %689
  %697 = add i32 %695, -1
  store i32 %697, i32* %694, align 4
  br label %698

698:                                              ; preds = %696, %689
  %699 = phi i32 [ %697, %696 ], [ %695, %689 ]
  %700 = icmp eq i32 %699, 0
  br i1 %700, label %701, label %702

701:                                              ; preds = %698
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %687) #15
  br label %702

702:                                              ; preds = %686, %698, %701
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %663) #15
  br label %703

703:                                              ; preds = %526, %661, %702, %550, %389
  %704 = load i16, i16* %236, align 4
  %705 = or i16 %704, 4096
  store i16 %705, i16* %236, align 4
  %706 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %136, align 8
  %707 = bitcast %"class.blink::InputTypeView"* %706 to void (%"class.blink::InputTypeView"*)***
  %708 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %707, align 8
  %709 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %708, i64 37
  %710 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %709, align 8
  call void %710(%"class.blink::InputTypeView"* %706) #15
  %711 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %712 = bitcast %"class.blink::InputType"* %711 to i1 (%"class.blink::InputType"*)***
  %713 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %712, align 8
  %714 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %713, i64 68
  %715 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %714, align 8
  %716 = call zeroext i1 %715(%"class.blink::InputType"* %711) #15
  %717 = xor i1 %127, %716
  br i1 %717, label %718, label %843

718:                                              ; preds = %703
  %719 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %720 = icmp eq %"class.blink::ElementData"* %719, null
  br i1 %720, label %843, label %721

721:                                              ; preds = %718
  %722 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %719, i64 0, i32 0, i32 0, i32 0
  %723 = load i32, i32* %722, align 4
  %724 = and i32 %723, 1
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %733, label %726

726:                                              ; preds = %721
  %727 = bitcast %"class.blink::ElementData"* %719 to %"class.blink::UniqueElementData"*
  %728 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %719, i64 1, i32 1
  %729 = bitcast %"class.blink::Member.14"* %728 to %"class.blink::Attribute"**
  %730 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %729, align 8
  %731 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %727, i64 0, i32 2, i32 0, i32 0, i32 2
  %732 = load i32, i32* %731, align 4
  br label %738

733:                                              ; preds = %721
  %734 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %719, i64 1
  %735 = bitcast %"class.blink::ElementData"* %734 to %"class.blink::Attribute"*
  %736 = lshr i32 %723, 1
  %737 = and i32 %736, 268435455
  br label %738

738:                                              ; preds = %726, %733
  %739 = phi i32 [ %737, %733 ], [ %732, %726 ]
  %740 = phi %"class.blink::Attribute"* [ %735, %733 ], [ %730, %726 ]
  %741 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %742 = zext i32 %739 to i64
  %743 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %740, i64 %742
  %744 = icmp eq i32 %739, 0
  br i1 %744, label %843, label %745

745:                                              ; preds = %738
  %746 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %741, i64 0, i32 0, i32 0
  %747 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %746, align 8
  %748 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %747, i64 0, i32 3, i32 0, i32 0, i32 0
  %749 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %747, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %750

750:                                              ; preds = %765, %745
  %751 = phi %"class.blink::Attribute"* [ %740, %745 ], [ %766, %765 ]
  %752 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %751, i64 0, i32 0, i32 0, i32 0
  %753 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %752, align 8
  %754 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %753, %747
  br i1 %754, label %768, label %755

755:                                              ; preds = %750
  %756 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %753, i64 0, i32 3, i32 0, i32 0, i32 0
  %757 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %756, align 8
  %758 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %748, align 8
  %759 = icmp eq %"class.WTF::StringImpl"* %757, %758
  br i1 %759, label %760, label %765

760:                                              ; preds = %755
  %761 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %753, i64 0, i32 4, i32 0, i32 0, i32 0
  %762 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %761, align 8
  %763 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %749, align 8
  %764 = icmp eq %"class.WTF::StringImpl"* %762, %763
  br i1 %764, label %768, label %765

765:                                              ; preds = %760, %755
  %766 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %751, i64 1
  %767 = icmp eq %"class.blink::Attribute"* %766, %743
  br i1 %767, label %777, label %750

768:                                              ; preds = %750, %760
  %769 = icmp eq %"class.blink::Attribute"* %751, null
  br i1 %769, label %777, label %770

770:                                              ; preds = %768
  %771 = bitcast %"struct.blink::Element::AttributeModificationParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %771) #15
  %772 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %751, i64 0, i32 1
  %773 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %6, i64 0, i32 0
  store %"class.blink::QualifiedName"* %741, %"class.blink::QualifiedName"** %773, align 8
  %774 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %6, i64 0, i32 1
  store %"class.WTF::AtomicString"* %772, %"class.WTF::AtomicString"** %774, align 8
  %775 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %6, i64 0, i32 2
  store %"class.WTF::AtomicString"* %772, %"class.WTF::AtomicString"** %775, align 8
  %776 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %6, i64 0, i32 3
  store i32 0, i32* %776, align 8
  call void @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"* %84, %"struct.blink::Element::AttributeModificationParams"* nonnull dereferenceable(32) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %771) #15
  br label %777

777:                                              ; preds = %765, %768, %770
  %778 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %779 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %778, i64 0, i32 0, i32 0
  %780 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %779, align 8
  %781 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %780, i64 0, i32 3, i32 0, i32 0, i32 0
  %782 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %780, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %783

783:                                              ; preds = %798, %777
  %784 = phi %"class.blink::Attribute"* [ %740, %777 ], [ %799, %798 ]
  %785 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %784, i64 0, i32 0, i32 0, i32 0
  %786 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %785, align 8
  %787 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %786, %780
  br i1 %787, label %801, label %788

788:                                              ; preds = %783
  %789 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %786, i64 0, i32 3, i32 0, i32 0, i32 0
  %790 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %789, align 8
  %791 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %781, align 8
  %792 = icmp eq %"class.WTF::StringImpl"* %790, %791
  br i1 %792, label %793, label %798

793:                                              ; preds = %788
  %794 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %786, i64 0, i32 4, i32 0, i32 0, i32 0
  %795 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %794, align 8
  %796 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %782, align 8
  %797 = icmp eq %"class.WTF::StringImpl"* %795, %796
  br i1 %797, label %801, label %798

798:                                              ; preds = %793, %788
  %799 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %784, i64 1
  %800 = icmp eq %"class.blink::Attribute"* %799, %743
  br i1 %800, label %810, label %783

801:                                              ; preds = %783, %793
  %802 = icmp eq %"class.blink::Attribute"* %784, null
  br i1 %802, label %810, label %803

803:                                              ; preds = %801
  %804 = bitcast %"struct.blink::Element::AttributeModificationParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %804) #15
  %805 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %784, i64 0, i32 1
  %806 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %7, i64 0, i32 0
  store %"class.blink::QualifiedName"* %778, %"class.blink::QualifiedName"** %806, align 8
  %807 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %7, i64 0, i32 1
  store %"class.WTF::AtomicString"* %805, %"class.WTF::AtomicString"** %807, align 8
  %808 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %7, i64 0, i32 2
  store %"class.WTF::AtomicString"* %805, %"class.WTF::AtomicString"** %808, align 8
  %809 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %7, i64 0, i32 3
  store i32 0, i32* %809, align 8
  call void @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"* %84, %"struct.blink::Element::AttributeModificationParams"* nonnull dereferenceable(32) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %804) #15
  br label %810

810:                                              ; preds = %798, %801, %803
  %811 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %812 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %811, i64 0, i32 0, i32 0
  %813 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %812, align 8
  %814 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %813, i64 0, i32 3, i32 0, i32 0, i32 0
  %815 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %813, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %816

816:                                              ; preds = %831, %810
  %817 = phi %"class.blink::Attribute"* [ %740, %810 ], [ %832, %831 ]
  %818 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %817, i64 0, i32 0, i32 0, i32 0
  %819 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %818, align 8
  %820 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %819, %813
  br i1 %820, label %834, label %821

821:                                              ; preds = %816
  %822 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %819, i64 0, i32 3, i32 0, i32 0, i32 0
  %823 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %822, align 8
  %824 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %814, align 8
  %825 = icmp eq %"class.WTF::StringImpl"* %823, %824
  br i1 %825, label %826, label %831

826:                                              ; preds = %821
  %827 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %819, i64 0, i32 4, i32 0, i32 0, i32 0
  %828 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %827, align 8
  %829 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %815, align 8
  %830 = icmp eq %"class.WTF::StringImpl"* %828, %829
  br i1 %830, label %834, label %831

831:                                              ; preds = %826, %821
  %832 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %817, i64 1
  %833 = icmp eq %"class.blink::Attribute"* %832, %743
  br i1 %833, label %843, label %816

834:                                              ; preds = %816, %826
  %835 = icmp eq %"class.blink::Attribute"* %817, null
  br i1 %835, label %843, label %836

836:                                              ; preds = %834
  %837 = bitcast %"struct.blink::Element::AttributeModificationParams"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %837) #15
  %838 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %817, i64 0, i32 1
  %839 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %8, i64 0, i32 0
  store %"class.blink::QualifiedName"* %811, %"class.blink::QualifiedName"** %839, align 8
  %840 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %8, i64 0, i32 1
  store %"class.WTF::AtomicString"* %838, %"class.WTF::AtomicString"** %840, align 8
  %841 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %8, i64 0, i32 2
  store %"class.WTF::AtomicString"* %838, %"class.WTF::AtomicString"** %841, align 8
  %842 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %8, i64 0, i32 3
  store i32 0, i32* %842, align 8
  call void @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"* %84, %"struct.blink::Element::AttributeModificationParams"* nonnull dereferenceable(32) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %837) #15
  br label %843

843:                                              ; preds = %831, %718, %738, %836, %834, %703
  %844 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %845 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %844, align 8
  %846 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %845, i64 0, i32 2, i32 0, i32 0
  %847 = load %"class.blink::Document"*, %"class.blink::Document"** %846, align 8
  %848 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %847, i64 0, i32 43, i32 0, i32 0
  %849 = load %"class.blink::Element"*, %"class.blink::Element"** %848, align 8
  %850 = icmp eq %"class.blink::Element"* %849, %9
  br i1 %850, label %851, label %852

851:                                              ; preds = %843
  call void @_ZN5blink8Document32UpdateFocusAppearanceAfterLayoutEv(%"class.blink::Document"* %847) #15
  br label %852

852:                                              ; preds = %851, %843
  call void @_ZN5blink18TextControlElement29ClearValueBeforeFirstUserEditEv(%"class.blink::TextControlElement"* %147) #15
  %853 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %85, align 8
  %854 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %853, i64 171
  %855 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %854, align 8
  %856 = call dereferenceable(8) %"class.WTF::AtomicString"* %855(%"class.blink::HTMLFormControlElement"* %84) #15
  %857 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %856, i64 0, i32 0, i32 0, i32 0
  %858 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %857, align 8
  %859 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %860 = icmp eq %"class.WTF::StringImpl"* %858, %859
  br i1 %860, label %861, label %879

861:                                              ; preds = %852
  %862 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %863 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %862, align 8
  %864 = icmp eq %"class.blink::HTMLFormElement"* %863, null
  br i1 %864, label %867, label %865

865:                                              ; preds = %861
  %866 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %863, i64 0, i32 3
  br label %875

867:                                              ; preds = %861
  %868 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %869 = load i32, i32* %868, align 8
  %870 = and i32 %869, 256
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %879, label %872

872:                                              ; preds = %867
  %873 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %844, align 8
  %874 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %873, i64 0, i32 9
  br label %875

875:                                              ; preds = %872, %865
  %876 = phi %"class.blink::RadioButtonGroupScope"* [ %874, %872 ], [ %866, %865 ]
  %877 = icmp eq %"class.blink::RadioButtonGroupScope"* %876, null
  br i1 %877, label %879, label %878

878:                                              ; preds = %875
  call void @_ZN5blink21RadioButtonGroupScope9AddButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %876, %"class.blink::HTMLInputElement"* %0) #15
  br label %879

879:                                              ; preds = %852, %867, %875, %878
  %880 = load %"class.blink::InputType"*, %"class.blink::InputType"** %70, align 8
  %881 = bitcast %"class.blink::InputType"* %880 to i1 (%"class.blink::InputType"*)***
  %882 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %881, align 8
  %883 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %882, i64 83
  %884 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %883, align 8
  %885 = call zeroext i1 %884(%"class.blink::InputType"* %880) #15
  %886 = xor i1 %885, true
  %887 = or i1 %245, %886
  br i1 %887, label %890, label %888

888:                                              ; preds = %879
  %889 = call zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"* %147, i32 0, i32 0, i32 0) #15
  br label %890

890:                                              ; preds = %879, %888
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %287) #15
  br i1 %134, label %898, label %891

891:                                              ; preds = %890
  %892 = load %"class.blink::InputType"*, %"class.blink::InputType"** %128, align 8
  %893 = bitcast %"class.blink::InputType"* %892 to i1 (%"class.blink::InputType"*)***
  %894 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %893, align 8
  %895 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %894, i64 48
  %896 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %895, align 8
  %897 = call zeroext i1 %896(%"class.blink::InputType"* %892) #15
  br i1 %897, label %898, label %908

898:                                              ; preds = %891, %890
  %899 = call %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"* %84) #15
  %900 = icmp eq %"class.blink::HTMLFormElement"* %899, null
  br i1 %900, label %908, label %901

901:                                              ; preds = %898
  %902 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %903 = load i32, i32* %902, align 8
  %904 = and i32 %903, 256
  %905 = icmp eq i32 %904, 0
  br i1 %905, label %908, label %906

906:                                              ; preds = %901
  %907 = call %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"* %84) #15
  call void @_ZNK5blink15HTMLFormElement28InvalidateDefaultButtonStyleEv(%"class.blink::HTMLFormElement"* %907) #15
  br label %908

908:                                              ; preds = %901, %898, %906, %891
  call void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"* %287) #15
  br label %909

909:                                              ; preds = %66, %908
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement27CanBeSuccessfulSubmitButtonEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 48
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

declare void @_ZN5blink4Node26SetForceReattachLayoutTreeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"*, i32) local_unnamed_addr #1

declare void @_ZN5blink13InputTypeView15WillBeDestroyedEv(%"class.blink::InputTypeView"*) local_unnamed_addr #1

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement21UpdatePlaceholderTextEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %4) #15
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %1, %9
  %14 = phi i1 [ false, %1 ], [ %12, %9 ]
  %15 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*, i1)***
  %16 = load void (%"class.blink::InputTypeView"*, i1)**, void (%"class.blink::InputTypeView"*, i1)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::InputTypeView"*, i1)*, void (%"class.blink::InputTypeView"*, i1)** %16, i64 48
  %18 = load void (%"class.blink::InputTypeView"*, i1)*, void (%"class.blink::InputTypeView"*, i1)** %17, align 8
  tail call void %18(%"class.blink::InputTypeView"* %3, i1 zeroext %14) #15
  ret void
}

declare void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement13HasDirtyValueEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 1
  %5 = icmp ne i16 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement16SetNonDirtyValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %4 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %4, i64 196
  %6 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %5, align 8
  tail call void %6(%"class.blink::HTMLInputElement"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 0, i32 0) #15
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %8 = load i16, i16* %7, align 4
  %9 = and i16 %8, -2
  store i16 %9, i16* %7, align 4
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink8Document32UpdateFocusAppearanceAfterLayoutEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink18TextControlElement29ClearValueBeforeFirstUserEditEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZNK5blink15HTMLFormElement28InvalidateDefaultButtonStyleEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

declare void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement17SubtreeHasChangedEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 21
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"* %8, %"class.blink::Node"* %9) #15
  ret void
}

declare zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement15FormControlTypeEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %5 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %5, i64 4
  %7 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %7(%"class.blink::InputType"* %3) #15
  ret %"class.WTF::AtomicString"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 8
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  %11 = tail call zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"* %10) #15
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i1 [ %11, %9 ], [ false, %1 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = getelementptr inbounds i8, i8* %2, i64 280
  %4 = bitcast i8* %3 to %"class.blink::InputType"**
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = bitcast %"class.blink::InputType"* %5 to i1 (%"class.blink::InputType"*)***
  %7 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, i64 8
  %9 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InputType"* %5) #15
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = bitcast i8* %2 to %"class.blink::HTMLFormControlElementWithState"*
  %13 = tail call zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"* %12) #15
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i1 [ %13, %11 ], [ false, %1 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLInputElement20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %3, align 8
  %5 = bitcast %"class.blink::InputTypeView"* %4 to void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)***
  %6 = load void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)**, void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)*, void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)** %6, i64 53
  %8 = load void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)*, void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)** %7, align 8
  tail call void %8(%"class.blink::FormControlState"* sret %0, %"class.blink::InputTypeView"* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink16HTMLInputElement20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 -1, i32 0, i32 3
  %4 = getelementptr inbounds i8, i8* %3, i64 288
  %5 = bitcast i8* %4 to %"class.blink::InputTypeView"**
  %6 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %5, align 8, !noalias !5
  %7 = bitcast %"class.blink::InputTypeView"* %6 to void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)***
  %8 = load void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)**, void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)*** %7, align 8, !noalias !5
  %9 = getelementptr inbounds void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)*, void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)** %8, i64 53
  %10 = load void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)*, void (%"class.blink::FormControlState"*, %"class.blink::InputTypeView"*)** %9, align 8, !noalias !5
  tail call void %10(%"class.blink::FormControlState"* sret %0, %"class.blink::InputTypeView"* %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::HTMLInputElement"* nocapture, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %3, align 8
  %5 = bitcast %"class.blink::InputTypeView"* %4 to void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)***
  %6 = load void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)** %6, i64 54
  %8 = load void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)** %7, align 8
  tail call void %8(%"class.blink::InputTypeView"* %4, %"class.blink::FormControlState"* dereferenceable(24) %1) #15
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %10 = load i16, i16* %9, align 4
  %11 = or i16 %10, 256
  store i16 %11, i16* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16HTMLInputElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::HTMLInputElement"* nocapture, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = getelementptr inbounds i8, i8* %3, i64 288
  %5 = bitcast i8* %4 to %"class.blink::InputTypeView"**
  %6 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %5, align 8
  %7 = bitcast %"class.blink::InputTypeView"* %6 to void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)***
  %8 = load void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)** %8, i64 54
  %10 = load void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)** %9, align 8
  tail call void %10(%"class.blink::InputTypeView"* %6, %"class.blink::FormControlState"* dereferenceable(24) %1) #15
  %11 = getelementptr inbounds i8, i8* %3, i64 276
  %12 = bitcast i8* %11 to i16*
  %13 = load i16, i16* %12, align 4
  %14 = or i16 %13, 256
  store i16 %14, i16* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement17CanStartSelectionEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 7
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"* %10) #15
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i1 [ %11, %9 ], [ false, %1 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16HTMLInputElement24selectionStartForBindingERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*)***
  %6 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, i64 83
  %8 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputType"* %4) #15
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %12 = tail call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %11) #15
  %13 = zext i32 %12 to i64
  %14 = shl nuw i64 %13, 32
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i64 [ 1, %10 ], [ 0, %2 ]
  %17 = phi i64 [ %14, %10 ], [ 0, %2 ]
  %18 = or i64 %17, %16
  ret i64 %18
}

declare i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16HTMLInputElement22selectionEndForBindingERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*)***
  %6 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, i64 83
  %8 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputType"* %4) #15
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %12 = tail call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %11) #15
  %13 = zext i32 %12 to i64
  %14 = shl nuw i64 %13, 32
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i64 [ 1, %10 ], [ 0, %2 ]
  %17 = phi i64 [ %14, %10 ], [ 0, %2 ]
  %18 = or i64 %17, %16
  ret i64 %18
}

declare i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement28selectionDirectionForBindingERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*)***
  %6 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, i64 83
  %8 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputType"* %4) #15
  br i1 %9, label %10, label %34

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %12 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18TextControlElement18selectionDirectionEv(%"class.blink::TextControlElement"* %11) #15
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #15
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !4

31:                                               ; preds = %22
  tail call void @llvm.trap() #15
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %10, %2
  %35 = phi i64 [ 0, %2 ], [ %15, %10 ], [ %15, %17 ], [ %15, %32 ]
  %36 = inttoptr i64 %35 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %36
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18TextControlElement18selectionDirectionEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement27setSelectionStartForBindingEN4absl8optionalIjEERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i64, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.blink::InputType"* %7 to i1 (%"class.blink::InputType"*)***
  %9 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %9, i64 83
  %11 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::InputType"* %7) #15
  br i1 %12, label %169, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %17 = bitcast %"class.blink::InputType"* %16 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %18 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %18, i64 4
  %20 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %19, align 8
  %21 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %20(%"class.blink::InputType"* %16) #15
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %100, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %25
  %33 = zext i32 %31 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #15
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %32
  tail call void @llvm.trap() #15
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %40, %25
  %43 = phi i32 [ %41, %40 ], [ %31, %25 ]
  %44 = load atomic i32, i32* %26 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %42
  %48 = zext i32 %43 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #15
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !4

54:                                               ; preds = %47
  tail call void @llvm.trap() #15
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %30, align 4
  br label %57

57:                                               ; preds = %55, %42
  %58 = phi i32 [ %56, %55 ], [ %43, %42 ]
  %59 = load atomic i32, i32* %26 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = add i32 %58, -1
  store i32 %63, i32* %30, align 4
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %68

68:                                               ; preds = %64, %67
  %69 = load atomic i32, i32* %26 monotonic, align 4, !noalias !8
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = load i32, i32* %30, align 4
  br i1 %71, label %73, label %83

73:                                               ; preds = %68
  %74 = zext i32 %72 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #15
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !4

80:                                               ; preds = %73
  tail call void @llvm.trap() #15, !noalias !8
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %30, align 4, !noalias !8
  br label %83

83:                                               ; preds = %68, %81
  %84 = phi i32 [ %82, %81 ], [ %72, %68 ]
  %85 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %85, align 8, !alias.scope !8
  %86 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %86, align 8, !alias.scope !8
  %87 = load atomic i32, i32* %26 monotonic, align 4, !noalias !8
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %83
  %91 = zext i32 %84 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #15
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %90
  tail call void @llvm.trap() #15, !noalias !8
  unreachable

98:                                               ; preds = %90
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %30, align 4, !noalias !8
  br label %104

100:                                              ; preds = %13
  %101 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %101, align 8, !alias.scope !8
  %102 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %102, align 8, !alias.scope !8
  %103 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %103, align 8, !alias.scope !8
  br label %116

104:                                              ; preds = %98, %83
  %105 = phi i32 [ %99, %98 ], [ %84, %83 ]
  %106 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %106, align 8, !alias.scope !8
  %107 = load atomic i32, i32* %26 monotonic, align 4, !noalias !8
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = add i32 %105, -1
  store i32 %111, i32* %30, align 4, !noalias !8
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i32 [ %111, %110 ], [ %105, %104 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15, !noalias !8
  br label %116

116:                                              ; preds = %100, %112, %115
  %117 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %5)
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %120 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %119, align 8
  %121 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %120, align 8
  call void %121(%"class.blink::ExceptionState"* %2, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  br label %137

137:                                              ; preds = %116, %133, %136
  %138 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #15
  br label %154

154:                                              ; preds = %137, %150, %153
  br i1 %24, label %168, label %155

155:                                              ; preds = %154
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %168

168:                                              ; preds = %154, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  br label %176

169:                                              ; preds = %3
  %170 = lshr i64 %1, 32
  %171 = trunc i64 %170 to i32
  %172 = trunc i64 %1 to i8
  %173 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %174 = icmp eq i8 %172, 0
  %175 = select i1 %174, i32 0, i32 %171
  tail call void @_ZN5blink18TextControlElement17setSelectionStartEj(%"class.blink::TextControlElement"* %173, i32 %175) #15
  br label %176

176:                                              ; preds = %169, %168
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2846", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2846", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2846"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #15
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2846"* nonnull %3, i8* %8) #15
  %9 = bitcast %"class.WTF::StringTypeAdapter.2846"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #15
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2846"* nonnull %2, i8* %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #15
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #15
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !4

41:                                               ; preds = %34
  call void @llvm.trap() #15
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #15
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #15
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %70
  call void @llvm.trap() #15
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #15
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #15
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare void @_ZN5blink18TextControlElement17setSelectionStartEj(%"class.blink::TextControlElement"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement25setSelectionEndForBindingEN4absl8optionalIjEERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i64, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.blink::InputType"* %7 to i1 (%"class.blink::InputType"*)***
  %9 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %9, i64 83
  %11 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::InputType"* %7) #15
  br i1 %12, label %169, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %17 = bitcast %"class.blink::InputType"* %16 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %18 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %18, i64 4
  %20 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %19, align 8
  %21 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %20(%"class.blink::InputType"* %16) #15
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %100, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %25
  %33 = zext i32 %31 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #15
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %32
  tail call void @llvm.trap() #15
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %40, %25
  %43 = phi i32 [ %41, %40 ], [ %31, %25 ]
  %44 = load atomic i32, i32* %26 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %42
  %48 = zext i32 %43 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #15
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !4

54:                                               ; preds = %47
  tail call void @llvm.trap() #15
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %30, align 4
  br label %57

57:                                               ; preds = %55, %42
  %58 = phi i32 [ %56, %55 ], [ %43, %42 ]
  %59 = load atomic i32, i32* %26 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = add i32 %58, -1
  store i32 %63, i32* %30, align 4
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %68

68:                                               ; preds = %64, %67
  %69 = load atomic i32, i32* %26 monotonic, align 4, !noalias !11
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = load i32, i32* %30, align 4
  br i1 %71, label %73, label %83

73:                                               ; preds = %68
  %74 = zext i32 %72 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #15
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !4

80:                                               ; preds = %73
  tail call void @llvm.trap() #15, !noalias !11
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %30, align 4, !noalias !11
  br label %83

83:                                               ; preds = %68, %81
  %84 = phi i32 [ %82, %81 ], [ %72, %68 ]
  %85 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %85, align 8, !alias.scope !11
  %86 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %86, align 8, !alias.scope !11
  %87 = load atomic i32, i32* %26 monotonic, align 4, !noalias !11
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %83
  %91 = zext i32 %84 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #15
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %90
  tail call void @llvm.trap() #15, !noalias !11
  unreachable

98:                                               ; preds = %90
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %30, align 4, !noalias !11
  br label %104

100:                                              ; preds = %13
  %101 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %101, align 8, !alias.scope !11
  %102 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %102, align 8, !alias.scope !11
  %103 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %103, align 8, !alias.scope !11
  br label %116

104:                                              ; preds = %98, %83
  %105 = phi i32 [ %99, %98 ], [ %84, %83 ]
  %106 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %106, align 8, !alias.scope !11
  %107 = load atomic i32, i32* %26 monotonic, align 4, !noalias !11
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = add i32 %105, -1
  store i32 %111, i32* %30, align 4, !noalias !11
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i32 [ %111, %110 ], [ %105, %104 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15, !noalias !11
  br label %116

116:                                              ; preds = %100, %112, %115
  %117 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %5)
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %120 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %119, align 8
  %121 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %120, align 8
  call void %121(%"class.blink::ExceptionState"* %2, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  br label %137

137:                                              ; preds = %116, %133, %136
  %138 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #15
  br label %154

154:                                              ; preds = %137, %150, %153
  br i1 %24, label %168, label %155

155:                                              ; preds = %154
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %168

168:                                              ; preds = %154, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  br label %176

169:                                              ; preds = %3
  %170 = lshr i64 %1, 32
  %171 = trunc i64 %170 to i32
  %172 = trunc i64 %1 to i8
  %173 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %174 = icmp eq i8 %172, 0
  %175 = select i1 %174, i32 0, i32 %171
  tail call void @_ZN5blink18TextControlElement15setSelectionEndEj(%"class.blink::TextControlElement"* %173, i32 %175) #15
  br label %176

176:                                              ; preds = %169, %168
  ret void
}

declare void @_ZN5blink18TextControlElement15setSelectionEndEj(%"class.blink::TextControlElement"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement31setSelectionDirectionForBindingERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.blink::InputType"* %7 to i1 (%"class.blink::InputType"*)***
  %9 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %9, i64 83
  %11 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::InputType"* %7) #15
  br i1 %12, label %169, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %17 = bitcast %"class.blink::InputType"* %16 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %18 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %18, i64 4
  %20 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %19, align 8
  %21 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %20(%"class.blink::InputType"* %16) #15
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %100, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %25
  %33 = zext i32 %31 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #15
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %32
  tail call void @llvm.trap() #15
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %40, %25
  %43 = phi i32 [ %41, %40 ], [ %31, %25 ]
  %44 = load atomic i32, i32* %26 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %42
  %48 = zext i32 %43 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #15
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !4

54:                                               ; preds = %47
  tail call void @llvm.trap() #15
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %30, align 4
  br label %57

57:                                               ; preds = %55, %42
  %58 = phi i32 [ %56, %55 ], [ %43, %42 ]
  %59 = load atomic i32, i32* %26 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = add i32 %58, -1
  store i32 %63, i32* %30, align 4
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %68

68:                                               ; preds = %64, %67
  %69 = load atomic i32, i32* %26 monotonic, align 4, !noalias !14
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = load i32, i32* %30, align 4
  br i1 %71, label %73, label %83

73:                                               ; preds = %68
  %74 = zext i32 %72 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #15
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !4

80:                                               ; preds = %73
  tail call void @llvm.trap() #15, !noalias !14
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %30, align 4, !noalias !14
  br label %83

83:                                               ; preds = %68, %81
  %84 = phi i32 [ %82, %81 ], [ %72, %68 ]
  %85 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %85, align 8, !alias.scope !14
  %86 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %86, align 8, !alias.scope !14
  %87 = load atomic i32, i32* %26 monotonic, align 4, !noalias !14
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %83
  %91 = zext i32 %84 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #15
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %90
  tail call void @llvm.trap() #15, !noalias !14
  unreachable

98:                                               ; preds = %90
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %30, align 4, !noalias !14
  br label %104

100:                                              ; preds = %13
  %101 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %101, align 8, !alias.scope !14
  %102 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %102, align 8, !alias.scope !14
  %103 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %103, align 8, !alias.scope !14
  br label %116

104:                                              ; preds = %98, %83
  %105 = phi i32 [ %99, %98 ], [ %84, %83 ]
  %106 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %106, align 8, !alias.scope !14
  %107 = load atomic i32, i32* %26 monotonic, align 4, !noalias !14
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = add i32 %105, -1
  store i32 %111, i32* %30, align 4, !noalias !14
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i32 [ %111, %110 ], [ %105, %104 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15, !noalias !14
  br label %116

116:                                              ; preds = %100, %112, %115
  %117 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %5)
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %120 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %119, align 8
  %121 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %120, align 8
  call void %121(%"class.blink::ExceptionState"* %2, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  br label %137

137:                                              ; preds = %116, %133, %136
  %138 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #15
  br label %154

154:                                              ; preds = %137, %150, %153
  br i1 %24, label %168, label %155

155:                                              ; preds = %154
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %168

168:                                              ; preds = %154, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  br label %171

169:                                              ; preds = %3
  %170 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement21setSelectionDirectionERKN3WTF6StringE(%"class.blink::TextControlElement"* %170, %"class.WTF::String"* dereferenceable(8) %1) #15
  br label %171

171:                                              ; preds = %169, %168
  ret void
}

declare void @_ZN5blink18TextControlElement21setSelectionDirectionERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement27setSelectionRangeForBindingEjjRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = load %"class.blink::InputType"*, %"class.blink::InputType"** %8, align 8
  %10 = bitcast %"class.blink::InputType"* %9 to i1 (%"class.blink::InputType"*)***
  %11 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %11, i64 83
  %13 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::InputType"* %9) #15
  br i1 %14, label %171, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %18 = load %"class.blink::InputType"*, %"class.blink::InputType"** %8, align 8
  %19 = bitcast %"class.blink::InputType"* %18 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %20 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %20, i64 4
  %22 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %21, align 8
  %23 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %22(%"class.blink::InputType"* %18) #15
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %102, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #15
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !4

41:                                               ; preds = %34
  tail call void @llvm.trap() #15
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %42, %27
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = load atomic i32, i32* %28 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %59

49:                                               ; preds = %44
  %50 = zext i32 %45 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #15
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !4

56:                                               ; preds = %49
  tail call void @llvm.trap() #15
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %32, align 4
  br label %59

59:                                               ; preds = %57, %44
  %60 = phi i32 [ %58, %57 ], [ %45, %44 ]
  %61 = load atomic i32, i32* %28 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = add i32 %60, -1
  store i32 %65, i32* %32, align 4
  br label %66

66:                                               ; preds = %64, %59
  %67 = phi i32 [ %65, %64 ], [ %60, %59 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %70

70:                                               ; preds = %66, %69
  %71 = load atomic i32, i32* %28 monotonic, align 4, !noalias !17
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = load i32, i32* %32, align 4
  br i1 %73, label %75, label %85

75:                                               ; preds = %70
  %76 = zext i32 %74 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #15
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !4

82:                                               ; preds = %75
  tail call void @llvm.trap() #15, !noalias !17
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %32, align 4, !noalias !17
  br label %85

85:                                               ; preds = %70, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %70 ]
  %87 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %87, align 8, !alias.scope !17
  %88 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %88, align 8, !alias.scope !17
  %89 = load atomic i32, i32* %28 monotonic, align 4, !noalias !17
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %106

92:                                               ; preds = %85
  %93 = zext i32 %86 to i33
  %94 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #15
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !4

99:                                               ; preds = %92
  tail call void @llvm.trap() #15, !noalias !17
  unreachable

100:                                              ; preds = %92
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %32, align 4, !noalias !17
  br label %106

102:                                              ; preds = %15
  %103 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %103, align 8, !alias.scope !17
  %104 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %104, align 8, !alias.scope !17
  %105 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %105, align 8, !alias.scope !17
  br label %118

106:                                              ; preds = %100, %85
  %107 = phi i32 [ %101, %100 ], [ %86, %85 ]
  %108 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %108, align 8, !alias.scope !17
  %109 = load atomic i32, i32* %28 monotonic, align 4, !noalias !17
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %106
  %113 = add i32 %107, -1
  store i32 %113, i32* %32, align 4, !noalias !17
  br label %114

114:                                              ; preds = %112, %106
  %115 = phi i32 [ %113, %112 ], [ %107, %106 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15, !noalias !17
  br label %118

118:                                              ; preds = %102, %114, %117
  %119 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %6)
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %120, align 8
  %121 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %122 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %121, align 8
  %123 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %122, align 8
  call void %123(%"class.blink::ExceptionState"* %3, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %5) #15
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #15
  br label %139

139:                                              ; preds = %118, %135, %138
  %140 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #15
  br label %156

156:                                              ; preds = %139, %152, %155
  br i1 %26, label %170, label %157

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %170

170:                                              ; preds = %156, %166, %169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  br label %190

171:                                              ; preds = %4
  %172 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %173 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #15
  call void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"* %172, i32 %1, i32 %2, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #15
  br label %190

190:                                              ; preds = %189, %186, %171, %170
  %191 = phi i8* [ %16, %170 ], [ %173, %171 ], [ %173, %186 ], [ %173, %189 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #15
  ret void
}

declare void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement27setSelectionRangeForBindingEjjRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = load %"class.blink::InputType"*, %"class.blink::InputType"** %8, align 8
  %10 = bitcast %"class.blink::InputType"* %9 to i1 (%"class.blink::InputType"*)***
  %11 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %11, i64 83
  %13 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::InputType"* %9) #15
  br i1 %14, label %171, label %15

15:                                               ; preds = %5
  %16 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %18 = load %"class.blink::InputType"*, %"class.blink::InputType"** %8, align 8
  %19 = bitcast %"class.blink::InputType"* %18 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %20 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %20, i64 4
  %22 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %21, align 8
  %23 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %22(%"class.blink::InputType"* %18) #15
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %102, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #15
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !4

41:                                               ; preds = %34
  tail call void @llvm.trap() #15
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %42, %27
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = load atomic i32, i32* %28 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %59

49:                                               ; preds = %44
  %50 = zext i32 %45 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #15
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !4

56:                                               ; preds = %49
  tail call void @llvm.trap() #15
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %32, align 4
  br label %59

59:                                               ; preds = %57, %44
  %60 = phi i32 [ %58, %57 ], [ %45, %44 ]
  %61 = load atomic i32, i32* %28 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = add i32 %60, -1
  store i32 %65, i32* %32, align 4
  br label %66

66:                                               ; preds = %64, %59
  %67 = phi i32 [ %65, %64 ], [ %60, %59 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %70

70:                                               ; preds = %66, %69
  %71 = load atomic i32, i32* %28 monotonic, align 4, !noalias !20
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = load i32, i32* %32, align 4
  br i1 %73, label %75, label %85

75:                                               ; preds = %70
  %76 = zext i32 %74 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #15
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !4

82:                                               ; preds = %75
  tail call void @llvm.trap() #15, !noalias !20
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %32, align 4, !noalias !20
  br label %85

85:                                               ; preds = %70, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %70 ]
  %87 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %87, align 8, !alias.scope !20
  %88 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %88, align 8, !alias.scope !20
  %89 = load atomic i32, i32* %28 monotonic, align 4, !noalias !20
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %106

92:                                               ; preds = %85
  %93 = zext i32 %86 to i33
  %94 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #15
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !4

99:                                               ; preds = %92
  tail call void @llvm.trap() #15, !noalias !20
  unreachable

100:                                              ; preds = %92
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %32, align 4, !noalias !20
  br label %106

102:                                              ; preds = %15
  %103 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %103, align 8, !alias.scope !20
  %104 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %104, align 8, !alias.scope !20
  %105 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %105, align 8, !alias.scope !20
  br label %118

106:                                              ; preds = %100, %85
  %107 = phi i32 [ %101, %100 ], [ %86, %85 ]
  %108 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %108, align 8, !alias.scope !20
  %109 = load atomic i32, i32* %28 monotonic, align 4, !noalias !20
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %106
  %113 = add i32 %107, -1
  store i32 %113, i32* %32, align 4, !noalias !20
  br label %114

114:                                              ; preds = %112, %106
  %115 = phi i32 [ %113, %112 ], [ %107, %106 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15, !noalias !20
  br label %118

118:                                              ; preds = %102, %114, %117
  %119 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %7)
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %120, align 8
  %121 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %122 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %121, align 8
  %123 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %122, align 8
  call void %123(%"class.blink::ExceptionState"* %4, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %6) #15
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #15
  br label %139

139:                                              ; preds = %118, %135, %138
  %140 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #15
  br label %156

156:                                              ; preds = %139, %152, %155
  br i1 %26, label %170, label %157

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %170

170:                                              ; preds = %156, %166, %169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %173

171:                                              ; preds = %5
  %172 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"* %172, i32 %1, i32 %2, %"class.WTF::String"* dereferenceable(8) %3) #15
  br label %173

173:                                              ; preds = %171, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement27SetSelectionRangeForTestingEjjRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = load %"class.blink::InputType"*, %"class.blink::InputType"** %8, align 8
  %10 = bitcast %"class.blink::InputType"* %9 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %11, i64 4
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %13(%"class.blink::InputType"* %9) #15
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kNumberE, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %177, label %21

21:                                               ; preds = %4
  %22 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  %24 = load %"class.blink::InputType"*, %"class.blink::InputType"** %8, align 8
  %25 = bitcast %"class.blink::InputType"* %24 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %26 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %26, i64 4
  %28 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %27, align 8
  %29 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %28(%"class.blink::InputType"* %24) #15
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %108, label %33

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %50

40:                                               ; preds = %33
  %41 = zext i32 %39 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #15
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !4

47:                                               ; preds = %40
  tail call void @llvm.trap() #15
  unreachable

48:                                               ; preds = %40
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %38, align 4
  br label %50

50:                                               ; preds = %48, %33
  %51 = phi i32 [ %49, %48 ], [ %39, %33 ]
  %52 = load atomic i32, i32* %34 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %65

55:                                               ; preds = %50
  %56 = zext i32 %51 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #15
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !4

62:                                               ; preds = %55
  tail call void @llvm.trap() #15
  unreachable

63:                                               ; preds = %55
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %38, align 4
  br label %65

65:                                               ; preds = %63, %50
  %66 = phi i32 [ %64, %63 ], [ %51, %50 ]
  %67 = load atomic i32, i32* %34 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = add i32 %66, -1
  store i32 %71, i32* %38, align 4
  br label %72

72:                                               ; preds = %70, %65
  %73 = phi i32 [ %71, %70 ], [ %66, %65 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br label %76

76:                                               ; preds = %72, %75
  %77 = load atomic i32, i32* %34 monotonic, align 4, !noalias !23
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = load i32, i32* %38, align 4
  br i1 %79, label %81, label %91

81:                                               ; preds = %76
  %82 = zext i32 %80 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #15
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !4

88:                                               ; preds = %81
  tail call void @llvm.trap() #15, !noalias !23
  unreachable

89:                                               ; preds = %81
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %38, align 4, !noalias !23
  br label %91

91:                                               ; preds = %76, %89
  %92 = phi i32 [ %90, %89 ], [ %80, %76 ]
  %93 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %93, align 8, !alias.scope !23
  %94 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %94, align 8, !alias.scope !23
  %95 = load atomic i32, i32* %34 monotonic, align 4, !noalias !23
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %112

98:                                               ; preds = %91
  %99 = zext i32 %92 to i33
  %100 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #15
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !4

105:                                              ; preds = %98
  tail call void @llvm.trap() #15, !noalias !23
  unreachable

106:                                              ; preds = %98
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %38, align 4, !noalias !23
  br label %112

108:                                              ; preds = %21
  %109 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %109, align 8, !alias.scope !23
  %110 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %110, align 8, !alias.scope !23
  %111 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8** %111, align 8, !alias.scope !23
  br label %124

112:                                              ; preds = %106, %91
  %113 = phi i32 [ %107, %106 ], [ %92, %91 ]
  %114 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8** %114, align 8, !alias.scope !23
  %115 = load atomic i32, i32* %34 monotonic, align 4, !noalias !23
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %112
  %119 = add i32 %113, -1
  store i32 %119, i32* %38, align 4, !noalias !23
  br label %120

120:                                              ; preds = %118, %112
  %121 = phi i32 [ %119, %118 ], [ %113, %112 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15, !noalias !23
  br label %124

124:                                              ; preds = %108, %120, %123
  %125 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %6)
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %126, align 8
  %127 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %128 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %127, align 8
  %129 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %128, align 8
  call void %129(%"class.blink::ExceptionState"* %3, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %5) #15
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #15
  br label %145

145:                                              ; preds = %124, %141, %144
  %146 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #15
  br label %162

162:                                              ; preds = %145, %158, %161
  br i1 %32, label %176, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br label %176

176:                                              ; preds = %162, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  br label %177

177:                                              ; preds = %4, %176
  %178 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %179 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #15
  call void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"* %178, i32 %1, i32 %2, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #15
  br label %196

196:                                              ; preds = %177, %192, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLInputElement"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %3, align 8
  %5 = bitcast %"class.blink::InputTypeView"* %4 to void (%"class.blink::InputTypeView"*, i32)***
  %6 = load void (%"class.blink::InputTypeView"*, i32)**, void (%"class.blink::InputTypeView"*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::InputTypeView"*, i32)*, void (%"class.blink::InputTypeView"*, i32)** %6, i64 19
  %8 = load void (%"class.blink::InputTypeView"*, i32)*, void (%"class.blink::InputTypeView"*, i32)** %7, align 8
  tail call void %8(%"class.blink::InputTypeView"* %4, i32 %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLInputElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kVspaceAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %50, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHspaceAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  br i1 %13, label %50, label %14

14:                                               ; preds = %9
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %17
  br i1 %18, label %50, label %19

19:                                               ; preds = %14
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %22
  br i1 %23, label %50, label %24

24:                                               ; preds = %19
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %27
  br i1 %28, label %50, label %29

29:                                               ; preds = %24
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kBorderAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %32
  br i1 %33, label %34, label %47

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %36 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %37 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %37, i64 171
  %39 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %38, align 8
  %40 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %39(%"class.blink::HTMLFormControlElement"* %35) #15
  %41 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %40, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %41, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, %45
  br i1 %46, label %50, label %47

47:                                               ; preds = %34, %29
  %48 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = tail call zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"* %48, %"class.blink::QualifiedName"* dereferenceable(8) %1) #15
  br label %50

50:                                               ; preds = %2, %9, %14, %19, %24, %34, %47
  %51 = phi i1 [ %49, %47 ], [ true, %34 ], [ true, %24 ], [ true, %19 ], [ true, %14 ], [ true, %9 ], [ true, %2 ]
  ret i1 %51
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLInputElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kVspaceAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %12, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 223, %"class.WTF::String"* dereferenceable(8) %13, i32 1, i32 1) #15
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %12, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 218, %"class.WTF::String"* dereferenceable(8) %13, i32 1, i32 1) #15
  br label %213

14:                                               ; preds = %4
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHspaceAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %20, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 221, %"class.WTF::String"* dereferenceable(8) %21, i32 1, i32 1) #15
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %20, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 222, %"class.WTF::String"* dereferenceable(8) %21, i32 1, i32 1) #15
  br label %213

22:                                               ; preds = %14
  %23 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %25
  br i1 %26, label %27, label %37

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %29 = load %"class.blink::InputType"*, %"class.blink::InputType"** %28, align 8
  %30 = bitcast %"class.blink::InputType"* %29 to i1 (%"class.blink::InputType"*)***
  %31 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %31, i64 53
  %33 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::InputType"* %29) #15
  br i1 %34, label %35, label %213

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement30ApplyAlignmentAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %36, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #15
  br label %213

37:                                               ; preds = %22
  %38 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %40
  br i1 %41, label %42, label %115

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %44 = load %"class.blink::InputType"*, %"class.blink::InputType"** %43, align 8
  %45 = bitcast %"class.blink::InputType"* %44 to i1 (%"class.blink::InputType"*)***
  %46 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %46, i64 68
  %48 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::InputType"* %44) #15
  br i1 %49, label %50, label %213

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %51, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 438, %"class.WTF::String"* dereferenceable(8) %52, i32 1, i32 1) #15
  %53 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %54, align 8
  %56 = icmp eq %"class.blink::ElementData"* %55, null
  br i1 %56, label %107, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::ElementData"* %55 to %"class.blink::UniqueElementData"*
  %64 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 1, i32 1
  %65 = bitcast %"class.blink::Member.14"* %64 to %"class.blink::Attribute"**
  %66 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %63, i64 0, i32 2, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  br label %74

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 1
  %71 = bitcast %"class.blink::ElementData"* %70 to %"class.blink::Attribute"*
  %72 = lshr i32 %59, 1
  %73 = and i32 %72, 268435455
  br label %74

74:                                               ; preds = %69, %62
  %75 = phi %"class.blink::Attribute"* [ %71, %69 ], [ %66, %62 ]
  %76 = phi i32 [ %73, %69 ], [ %68, %62 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %75, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %107, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %53, i64 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %85

85:                                               ; preds = %100, %80
  %86 = phi %"class.blink::Attribute"* [ %75, %80 ], [ %101, %100 ]
  %87 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %88, %82
  br i1 %89, label %103, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %92, %93
  br i1 %94, label %95, label %100

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 4, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %97, %98
  br i1 %99, label %103, label %100

100:                                              ; preds = %95, %90
  %101 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 1
  %102 = icmp eq %"class.blink::Attribute"* %101, %78
  br i1 %102, label %107, label %85

103:                                              ; preds = %95, %85
  %104 = icmp eq %"class.blink::Attribute"* %86, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 0, i32 1
  br label %109

107:                                              ; preds = %100, %103, %74, %50
  %108 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi %"class.WTF::AtomicString"* [ %108, %107 ], [ %106, %105 ]
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %213, label %114

114:                                              ; preds = %109
  tail call void @_ZN5blink11HTMLElement23ApplyAspectRatioToStyleERKN3WTF12AtomicStringES4_PNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %51, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.WTF::AtomicString"* dereferenceable(8) %110, %"class.blink::MutableCSSPropertyValueSet"* %3) #15
  br label %213

115:                                              ; preds = %37
  %116 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %117, align 8
  %119 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %118
  br i1 %119, label %120, label %191

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %122 = load %"class.blink::InputType"*, %"class.blink::InputType"** %121, align 8
  %123 = bitcast %"class.blink::InputType"* %122 to i1 (%"class.blink::InputType"*)***
  %124 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %124, i64 68
  %126 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %125, align 8
  %127 = tail call zeroext i1 %126(%"class.blink::InputType"* %122) #15
  br i1 %127, label %128, label %213

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %129, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 165, %"class.WTF::String"* dereferenceable(8) %130, i32 1, i32 1) #15
  %131 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %132 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %131, align 8
  %133 = icmp eq %"class.blink::ElementData"* %132, null
  br i1 %133, label %183, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %132, i64 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %146, label %139

139:                                              ; preds = %134
  %140 = bitcast %"class.blink::ElementData"* %132 to %"class.blink::UniqueElementData"*
  %141 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %132, i64 1, i32 1
  %142 = bitcast %"class.blink::Member.14"* %141 to %"class.blink::Attribute"**
  %143 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %140, i64 0, i32 2, i32 0, i32 0, i32 2
  %145 = load i32, i32* %144, align 4
  br label %151

146:                                              ; preds = %134
  %147 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %132, i64 1
  %148 = bitcast %"class.blink::ElementData"* %147 to %"class.blink::Attribute"*
  %149 = lshr i32 %136, 1
  %150 = and i32 %149, 268435455
  br label %151

151:                                              ; preds = %146, %139
  %152 = phi %"class.blink::Attribute"* [ %148, %146 ], [ %143, %139 ]
  %153 = phi i32 [ %150, %146 ], [ %145, %139 ]
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %152, i64 %154
  %156 = icmp eq i32 %153, 0
  br i1 %156, label %183, label %157

157:                                              ; preds = %151
  %158 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %159 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %161

161:                                              ; preds = %176, %157
  %162 = phi %"class.blink::Attribute"* [ %152, %157 ], [ %177, %176 ]
  %163 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %162, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %163, align 8
  %165 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %164, %158
  br i1 %165, label %179, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 3, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %168, %169
  br i1 %170, label %171, label %176

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 4, i32 0, i32 0, i32 0
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %173, %174
  br i1 %175, label %179, label %176

176:                                              ; preds = %171, %166
  %177 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %162, i64 1
  %178 = icmp eq %"class.blink::Attribute"* %177, %155
  br i1 %178, label %183, label %161

179:                                              ; preds = %171, %161
  %180 = icmp eq %"class.blink::Attribute"* %162, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %179
  %182 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %162, i64 0, i32 1
  br label %185

183:                                              ; preds = %176, %179, %151, %128
  %184 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %185

185:                                              ; preds = %181, %183
  %186 = phi %"class.WTF::AtomicString"* [ %184, %183 ], [ %182, %181 ]
  %187 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %186, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %213, label %190

190:                                              ; preds = %185
  tail call void @_ZN5blink11HTMLElement23ApplyAspectRatioToStyleERKN3WTF12AtomicStringES4_PNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %129, %"class.WTF::AtomicString"* dereferenceable(8) %186, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #15
  br label %213

191:                                              ; preds = %115
  %192 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kBorderAttrE, align 8
  %193 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %192, i64 0, i32 0, i32 0
  %194 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %193, align 8
  %195 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %194
  br i1 %195, label %196, label %211

196:                                              ; preds = %191
  %197 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %198 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %199 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %198, align 8
  %200 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %199, i64 171
  %201 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %200, align 8
  %202 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %201(%"class.blink::HTMLFormControlElement"* %197) #15
  %203 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %202, i64 0, i32 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %203, i64 0, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %205, %207
  br i1 %208, label %209, label %211

209:                                              ; preds = %196
  %210 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement27ApplyBorderAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %210, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #15
  br label %213

211:                                              ; preds = %196, %191
  %212 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %212, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #15
  br label %213

213:                                              ; preds = %109, %185, %190, %114, %19, %42, %209, %211, %120, %27, %35, %11
  ret void
}

declare void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i32, i32) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement30ApplyAlignmentAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement23ApplyAspectRatioToStyleERKN3WTF12AtomicStringES4_PNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement27ApplyBorderAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLInputElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %7, align 8
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %13
  br i1 %14, label %15, label %118

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %17 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %18 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %18, i64 171
  %20 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %19, align 8
  %21 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %20(%"class.blink::HTMLFormControlElement"* %16) #15
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %28, label %47

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %30 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %29, align 8
  %31 = icmp eq %"class.blink::HTMLFormElement"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %30, i64 0, i32 3
  br label %43

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 256
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 9
  br label %43

43:                                               ; preds = %39, %32
  %44 = phi %"class.blink::RadioButtonGroupScope"* [ %42, %39 ], [ %33, %32 ]
  %45 = icmp eq %"class.blink::RadioButtonGroupScope"* %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %43
  tail call void @_ZN5blink21RadioButtonGroupScope12RemoveButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %44, %"class.blink::HTMLInputElement"* %0) #15
  br label %47

47:                                               ; preds = %15, %34, %43, %46
  %48 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 2
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #15
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !4

66:                                               ; preds = %57
  tail call void @llvm.trap() #15
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %69

69:                                               ; preds = %67, %52, %47
  %70 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %71 = bitcast %"class.WTF::AtomicString"* %48 to i64*
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  store i64 %70, i64* %71, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #15
  br label %88

88:                                               ; preds = %69, %84, %87
  %89 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %17, align 8
  %90 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %89, i64 171
  %91 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %90, align 8
  %92 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %91(%"class.blink::HTMLFormControlElement"* %16) #15
  %93 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %94, %95
  br i1 %96, label %97, label %116

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %99 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %98, align 8
  %100 = icmp eq %"class.blink::HTMLFormElement"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %99, i64 0, i32 3
  br label %112

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 256
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %110 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %110, i64 0, i32 9
  br label %112

112:                                              ; preds = %108, %101
  %113 = phi %"class.blink::RadioButtonGroupScope"* [ %111, %108 ], [ %102, %101 ]
  %114 = icmp eq %"class.blink::RadioButtonGroupScope"* %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  tail call void @_ZN5blink21RadioButtonGroupScope9AddButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %113, %"class.blink::HTMLInputElement"* %0) #15
  br label %116

116:                                              ; preds = %88, %103, %112, %115
  %117 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::TextControlElement"* %117, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #15
  br label %698

118:                                              ; preds = %2
  %119 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAutocompleteAttrE, align 8
  %120 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %120, align 8
  %122 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %121
  br i1 %122, label %123, label %223

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %127, label %131

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %129 = load i16, i16* %128, align 4
  %130 = and i16 %129, -97
  br label %216

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 1
  %135 = bitcast %"class.WTF::StringImpl"* %134 to i8*
  %136 = icmp eq i32 %133, 3
  br i1 %136, label %137, label %211

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %161, label %142

142:                                              ; preds = %137
  %143 = load i8, i8* %135, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %149 = sext i8 %148 to i32
  %150 = icmp eq i32 %147, %149
  br i1 %150, label %151, label %207

151:                                              ; preds = %142
  %152 = getelementptr inbounds i8, i8* %135, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 102), align 2
  %159 = sext i8 %158 to i32
  %160 = icmp eq i32 %157, %159
  br i1 %160, label %195, label %207

161:                                              ; preds = %137
  %162 = bitcast %"class.WTF::StringImpl"* %134 to i16*
  %163 = load i16, i16* %162, align 2
  %164 = add i16 %163, -65
  %165 = icmp ult i16 %164, 26
  %166 = zext i1 %165 to i16
  %167 = shl nuw nsw i16 %166, 5
  %168 = or i16 %167, %163
  %169 = zext i16 %168 to i32
  %170 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %169, %171
  br i1 %172, label %173, label %207

173:                                              ; preds = %161
  %174 = getelementptr inbounds i16, i16* %162, i64 1
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 102), align 2
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %181, %183
  br i1 %184, label %185, label %207

185:                                              ; preds = %173
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 1, i32 1
  %187 = bitcast i32* %186 to i16*
  %188 = load i16, i16* %187, align 2
  %189 = add i16 %188, -65
  %190 = icmp ult i16 %189, 26
  %191 = zext i1 %190 to i16
  %192 = shl nuw nsw i16 %191, 5
  %193 = or i16 %192, %188
  %194 = icmp eq i16 %193, %180
  br i1 %194, label %202, label %207

195:                                              ; preds = %151
  %196 = getelementptr inbounds i8, i8* %135, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = icmp eq i8 %200, %156
  br i1 %201, label %202, label %207

202:                                              ; preds = %185, %195
  %203 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %204 = load i16, i16* %203, align 4
  %205 = and i16 %204, -97
  %206 = or i16 %205, 64
  store i16 %206, i16* %203, align 4
  br label %698

207:                                              ; preds = %151, %142, %173, %161, %195, %185
  %208 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %209 = load i16, i16* %208, align 4
  %210 = and i16 %209, -97
  br label %219

211:                                              ; preds = %131
  %212 = icmp eq i32 %133, 0
  %213 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %214 = load i16, i16* %213, align 4
  %215 = and i16 %214, -97
  br i1 %212, label %216, label %219

216:                                              ; preds = %127, %211
  %217 = phi i16 [ %130, %127 ], [ %215, %211 ]
  %218 = phi i16* [ %128, %127 ], [ %213, %211 ]
  store i16 %217, i16* %218, align 4
  br label %698

219:                                              ; preds = %207, %211
  %220 = phi i16 [ %210, %207 ], [ %215, %211 ]
  %221 = phi i16* [ %208, %207 ], [ %213, %211 ]
  %222 = or i16 %220, 32
  store i16 %222, i16* %221, align 4
  br label %698

223:                                              ; preds = %118
  %224 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %225 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %224, i64 0, i32 0, i32 0
  %226 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %225, align 8
  %227 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %226
  br i1 %227, label %228, label %229

228:                                              ; preds = %223
  tail call void @_ZN5blink16HTMLInputElement10UpdateTypeEv(%"class.blink::HTMLInputElement"* %0)
  br label %698

229:                                              ; preds = %223
  %230 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %230, i64 0, i32 0, i32 0
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %233 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %232
  br i1 %233, label %234, label %334

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %236 = load i16, i16* %235, align 4
  %237 = and i16 %236, 1
  %238 = icmp eq i16 %237, 0
  br i1 %238, label %239, label %321

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %241 = load %"class.blink::InputType"*, %"class.blink::InputType"** %240, align 8
  %242 = bitcast %"class.blink::InputType"* %241 to i32 (%"class.blink::InputType"*)***
  %243 = load i32 (%"class.blink::InputType"*)**, i32 (%"class.blink::InputType"*)*** %242, align 8
  %244 = getelementptr inbounds i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %243, i64 14
  %245 = load i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %244, align 8
  %246 = tail call i32 %245(%"class.blink::InputType"* %241) #15
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %275

248:                                              ; preds = %239
  %249 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0
  %250 = load %"class.blink::InputType"*, %"class.blink::InputType"** %240, align 8
  %251 = bitcast %"class.blink::InputType"* %250 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %252 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %251, align 8
  %253 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %252, i64 43
  %254 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %253, align 8
  %255 = tail call %"class.WTF::StringImpl"* %254(%"class.blink::InputType"* %250, %"class.WTF::String"* dereferenceable(8) %249) #15
  %256 = ptrtoint %"class.WTF::StringImpl"* %255 to i64
  %257 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3
  %258 = bitcast %"class.WTF::String"* %257 to i64*
  %259 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %257, i64 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  store i64 %256, i64* %258, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %248
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #15
  br label %275

275:                                              ; preds = %248, %271, %274, %239
  %276 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %276) #15
  %277 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %278) #15
  %279 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %280 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %279, i64 0, i32 3, i32 0, i32 0, i32 0
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %300, label %283

283:                                              ; preds = %275
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %300

288:                                              ; preds = %283
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  %291 = zext i32 %290 to i33
  %292 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %291, i33 1) #15
  %293 = extractvalue { i33, i1 } %292, 1
  %294 = extractvalue { i33, i1 } %292, 0
  %295 = icmp slt i33 %294, 0
  %296 = or i1 %293, %295
  br i1 %296, label %297, label %298, !prof !4

297:                                              ; preds = %288
  tail call void @llvm.trap() #15
  unreachable

298:                                              ; preds = %288
  %299 = trunc i33 %294 to i32
  store i32 %299, i32* %289, align 4
  br label %300

300:                                              ; preds = %275, %283, %298
  %301 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kAttributeE, i64 0, i64 0), i8** %301, align 8
  %302 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %281, %"class.WTF::StringImpl"** %302, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %277, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #15
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %318, label %305

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %303) #15
  br label %318

318:                                              ; preds = %300, %314, %317
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %278) #15
  %319 = load i16, i16* %235, align 4
  %320 = or i16 %319, 4096
  store i16 %320, i16* %235, align 4
  br label %321

321:                                              ; preds = %234, %318
  %322 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %323 = bitcast %"class.blink::ListedElement.base"* %322 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %323) #15
  %324 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %325 = load %"class.blink::InputType"*, %"class.blink::InputType"** %324, align 8
  %326 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0
  call void @_ZNK5blink9InputType39WarnIfValueIsInvalidAndElementIsVisibleERKN3WTF6StringE(%"class.blink::InputType"* %325, %"class.WTF::String"* dereferenceable(8) %326) #15
  %327 = load %"class.blink::InputType"*, %"class.blink::InputType"** %324, align 8
  call void @_ZNK5blink9InputType14InRangeChangedEv(%"class.blink::InputType"* %327) #15
  %328 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %329 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %328, align 8
  %330 = bitcast %"class.blink::InputTypeView"* %329 to void (%"class.blink::InputTypeView"*)***
  %331 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %330, align 8
  %332 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %331, i64 42
  %333 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %332, align 8
  call void %333(%"class.blink::InputTypeView"* %329) #15
  br label %698

334:                                              ; preds = %229
  %335 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCheckedAttrE, align 8
  %336 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %335, i64 0, i32 0, i32 0
  %337 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %336, align 8
  %338 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %337
  br i1 %338, label %339, label %365

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %341 = load i16, i16* %340, align 4
  %342 = and i16 %341, 512
  %343 = icmp eq i16 %342, 0
  br i1 %343, label %353, label %344

344:                                              ; preds = %339
  %345 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %346 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %345, align 8
  %347 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %346, i64 0, i32 2, i32 0, i32 0
  %348 = load %"class.blink::Document"*, %"class.blink::Document"** %347, align 8
  %349 = tail call dereferenceable(56) %"class.blink::FormController"* @_ZN5blink8Document17GetFormControllerEv(%"class.blink::Document"* %348) #15
  %350 = tail call zeroext i1 @_ZNK5blink14FormController16HasControlStatesEv(%"class.blink::FormController"* %349) #15
  br i1 %350, label %363, label %351

351:                                              ; preds = %344
  %352 = load i16, i16* %340, align 4
  br label %353

353:                                              ; preds = %351, %339
  %354 = phi i16 [ %352, %351 ], [ %341, %339 ]
  %355 = and i16 %354, 4
  %356 = icmp eq i16 %355, 0
  br i1 %356, label %357, label %363

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %360 = icmp ne %"class.WTF::StringImpl"* %359, null
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %0, i1 zeroext %360, i32 0)
  %361 = load i16, i16* %340, align 4
  %362 = and i16 %361, -5
  store i16 %362, i16* %340, align 4
  br label %363

363:                                              ; preds = %353, %357, %344
  %364 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %364, i32 35) #15
  br label %698

365:                                              ; preds = %334
  %366 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMaxlengthAttrE, align 8
  %367 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %366, i64 0, i32 0, i32 0
  %368 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %367, align 8
  %369 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %368
  br i1 %369, label %370, label %373

370:                                              ; preds = %365
  %371 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %372 = bitcast %"class.blink::ListedElement.base"* %371 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %372) #15
  br label %698

373:                                              ; preds = %365
  %374 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMinlengthAttrE, align 8
  %375 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %374, i64 0, i32 0, i32 0
  %376 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %375, align 8
  %377 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %376
  br i1 %377, label %378, label %381

378:                                              ; preds = %373
  %379 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %380 = bitcast %"class.blink::ListedElement.base"* %379 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %380) #15
  br label %698

381:                                              ; preds = %373
  %382 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kSizeAttrE, align 8
  %383 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %382, i64 0, i32 0, i32 0
  %384 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %383, align 8
  %385 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %384
  br i1 %385, label %386, label %439

386:                                              ; preds = %381
  %387 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %387) #15
  store i32 0, i32* %4, align 4
  %388 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %389 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %390 = icmp eq %"class.WTF::StringImpl"* %389, null
  br i1 %390, label %402, label %391

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 1
  %393 = load i32, i32* %392, align 4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %402, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0
  %397 = call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8) %396, i32* nonnull dereferenceable(4) %4) #15
  %398 = xor i1 %397, true
  %399 = load i32, i32* %4, align 4
  %400 = icmp slt i32 %399, 1
  %401 = or i1 %400, %398
  br i1 %401, label %402, label %403

402:                                              ; preds = %386, %395, %391
  store i32 20, i32* %4, align 4
  br label %403

403:                                              ; preds = %395, %402
  %404 = phi i32 [ %399, %395 ], [ 20, %402 ]
  %405 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 4
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, %404
  br i1 %407, label %438, label %408

408:                                              ; preds = %403
  store i32 %404, i32* %405, align 8
  %409 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %410 = load i32, i32* %409, align 8
  %411 = and i32 %410, 1
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %412, label %418, label %414

414:                                              ; preds = %408
  %415 = bitcast %"class.blink::NodeData"** %413 to %"class.blink::NodeRareData"**
  %416 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %415, align 8
  %417 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %416, i64 0, i32 1, i32 0, i32 0
  br label %420

418:                                              ; preds = %408
  %419 = bitcast %"class.blink::NodeData"** %413 to %"class.blink::NodeRenderingData"**
  br label %420

420:                                              ; preds = %414, %418
  %421 = phi %"class.blink::NodeRenderingData"** [ %417, %414 ], [ %419, %418 ]
  %422 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %421, align 8
  %423 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %422, i64 0, i32 1
  %424 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %423, align 8
  %425 = icmp eq %"class.blink::LayoutObject"* %424, null
  br i1 %425, label %438, label %426

426:                                              ; preds = %420
  br i1 %412, label %431, label %427

427:                                              ; preds = %426
  %428 = bitcast %"class.blink::NodeData"** %413 to %"class.blink::NodeRareData"**
  %429 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %428, align 8
  %430 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %429, i64 0, i32 1, i32 0, i32 0
  br label %433

431:                                              ; preds = %426
  %432 = bitcast %"class.blink::NodeData"** %413 to %"class.blink::NodeRenderingData"**
  br label %433

433:                                              ; preds = %427, %431
  %434 = phi %"class.blink::NodeRenderingData"** [ %430, %427 ], [ %432, %431 ]
  %435 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %434, align 8
  %436 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %435, i64 0, i32 1
  %437 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %436, align 8
  call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %437, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #15
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %437, i8 zeroext 3) #15
  call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %437, i32 1) #15
  br label %438

438:                                              ; preds = %420, %403, %433
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %387) #15
  br label %698

439:                                              ; preds = %381
  %440 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %441 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %440, i64 0, i32 0, i32 0
  %442 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %441, align 8
  %443 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %442
  br i1 %443, label %444, label %451

444:                                              ; preds = %439
  %445 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %446 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %445, align 8
  %447 = bitcast %"class.blink::InputTypeView"* %446 to void (%"class.blink::InputTypeView"*)***
  %448 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %447, align 8
  %449 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %448, i64 35
  %450 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %449, align 8
  tail call void %450(%"class.blink::InputTypeView"* %446) #15
  br label %698

451:                                              ; preds = %439
  %452 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %453 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %452, i64 0, i32 0, i32 0
  %454 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %453, align 8
  %455 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %454
  br i1 %455, label %456, label %463

456:                                              ; preds = %451
  %457 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %458 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %457, align 8
  %459 = bitcast %"class.blink::InputTypeView"* %458 to void (%"class.blink::InputTypeView"*)***
  %460 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %459, align 8
  %461 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %460, i64 36
  %462 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %461, align 8
  tail call void %462(%"class.blink::InputTypeView"* %458) #15
  br label %698

463:                                              ; preds = %451
  %464 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  %465 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %464, i64 0, i32 0, i32 0
  %466 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %465, align 8
  %467 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %466
  br i1 %467, label %698, label %468

468:                                              ; preds = %463
  %469 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAccesskeyAttrE, align 8
  %470 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %469, i64 0, i32 0, i32 0
  %471 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %470, align 8
  %472 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %471
  br i1 %472, label %698, label %473

473:                                              ; preds = %468
  %474 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnsearchAttrE, align 8
  %475 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %474, i64 0, i32 0, i32 0
  %476 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %475, align 8
  %477 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %476
  br i1 %477, label %478, label %490

478:                                              ; preds = %473
  %479 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSearchE, align 8
  %481 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %483 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %482, align 8
  %484 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %483, i64 10
  %485 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %484, align 8
  %486 = tail call %"class.blink::ExecutionContext"* %485(%"class.blink::Node"* %481) #15
  %487 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %486, %"class.blink::QualifiedName"* dereferenceable(8) %6, %"class.WTF::AtomicString"* dereferenceable(8) %8, i32 0) #15
  %488 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %487, i64 0, i32 0, i32 0, i32 0
  %489 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %479, %"class.WTF::AtomicString"* dereferenceable(8) %480, %"class.blink::EventListener"* %488) #15
  br label %698

490:                                              ; preds = %473
  %491 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kIncrementalAttrE, align 8
  %492 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %491, i64 0, i32 0, i32 0
  %493 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %492, align 8
  %494 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %493
  br i1 %494, label %495, label %505

495:                                              ; preds = %490
  %496 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %497 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %496, align 8
  %498 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %497, i64 0, i32 2, i32 0, i32 0
  %499 = load %"class.blink::Document"*, %"class.blink::Document"** %498, align 8
  %500 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %499, i64 0, i32 2
  %501 = bitcast %"class.blink::UseCounter"* %500 to void (%"class.blink::UseCounter"*, i32)***
  %502 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %501, align 8
  %503 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %502, i64 3
  %504 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %503, align 8
  tail call void %504(%"class.blink::UseCounter"* %500, i32 25) #15
  br label %698

505:                                              ; preds = %490
  %506 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMinAttrE, align 8
  %507 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %506, i64 0, i32 0, i32 0
  %508 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %507, align 8
  %509 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %508
  br i1 %509, label %510, label %535

510:                                              ; preds = %505
  %511 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %512 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %511, align 8
  %513 = bitcast %"class.blink::InputTypeView"* %512 to void (%"class.blink::InputTypeView"*)***
  %514 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %513, align 8
  %515 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %514, i64 33
  %516 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %515, align 8
  tail call void %516(%"class.blink::InputTypeView"* %512) #15
  %517 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %518 = load %"class.blink::InputType"*, %"class.blink::InputType"** %517, align 8
  %519 = bitcast %"class.blink::InputType"* %518 to void (%"class.blink::InputType"*)***
  %520 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %519, align 8
  %521 = getelementptr inbounds void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %520, i64 52
  %522 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %521, align 8
  tail call void %522(%"class.blink::InputType"* %518) #15
  %523 = load %"class.blink::InputType"*, %"class.blink::InputType"** %517, align 8
  tail call void @_ZNK5blink9InputType14InRangeChangedEv(%"class.blink::InputType"* %523) #15
  %524 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %525 = bitcast %"class.blink::ListedElement.base"* %524 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %525) #15
  %526 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %527 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %526, align 8
  %528 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %527, i64 0, i32 2, i32 0, i32 0
  %529 = load %"class.blink::Document"*, %"class.blink::Document"** %528, align 8
  %530 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %529, i64 0, i32 2
  %531 = bitcast %"class.blink::UseCounter"* %530 to void (%"class.blink::UseCounter"*, i32)***
  %532 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %531, align 8
  %533 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %532, i64 3
  %534 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %533, align 8
  tail call void %534(%"class.blink::UseCounter"* %530, i32 43) #15
  br label %698

535:                                              ; preds = %505
  %536 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMaxAttrE, align 8
  %537 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %536, i64 0, i32 0, i32 0
  %538 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %537, align 8
  %539 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %538
  br i1 %539, label %540, label %565

540:                                              ; preds = %535
  %541 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %542 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %541, align 8
  %543 = bitcast %"class.blink::InputTypeView"* %542 to void (%"class.blink::InputTypeView"*)***
  %544 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %543, align 8
  %545 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %544, i64 33
  %546 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %545, align 8
  tail call void %546(%"class.blink::InputTypeView"* %542) #15
  %547 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %548 = load %"class.blink::InputType"*, %"class.blink::InputType"** %547, align 8
  %549 = bitcast %"class.blink::InputType"* %548 to void (%"class.blink::InputType"*)***
  %550 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %549, align 8
  %551 = getelementptr inbounds void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %550, i64 52
  %552 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %551, align 8
  tail call void %552(%"class.blink::InputType"* %548) #15
  %553 = load %"class.blink::InputType"*, %"class.blink::InputType"** %547, align 8
  tail call void @_ZNK5blink9InputType14InRangeChangedEv(%"class.blink::InputType"* %553) #15
  %554 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %555 = bitcast %"class.blink::ListedElement.base"* %554 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %555) #15
  %556 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %557 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %556, align 8
  %558 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %557, i64 0, i32 2, i32 0, i32 0
  %559 = load %"class.blink::Document"*, %"class.blink::Document"** %558, align 8
  %560 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %559, i64 0, i32 2
  %561 = bitcast %"class.blink::UseCounter"* %560 to void (%"class.blink::UseCounter"*, i32)***
  %562 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %561, align 8
  %563 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %562, i64 3
  %564 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %563, align 8
  tail call void %564(%"class.blink::UseCounter"* %560, i32 42) #15
  br label %698

565:                                              ; preds = %535
  %566 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kMultipleAttrE, align 8
  %567 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %566, i64 0, i32 0, i32 0
  %568 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %567, align 8
  %569 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %568
  br i1 %569, label %570, label %579

570:                                              ; preds = %565
  %571 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %572 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %571, align 8
  %573 = bitcast %"class.blink::InputTypeView"* %572 to void (%"class.blink::InputTypeView"*)***
  %574 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %573, align 8
  %575 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %574, i64 38
  %576 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %575, align 8
  tail call void %576(%"class.blink::InputTypeView"* %572) #15
  %577 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %578 = bitcast %"class.blink::ListedElement.base"* %577 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %578) #15
  br label %698

579:                                              ; preds = %565
  %580 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kStepAttrE, align 8
  %581 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %580, i64 0, i32 0, i32 0
  %582 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %581, align 8
  %583 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %582
  br i1 %583, label %584, label %602

584:                                              ; preds = %579
  %585 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %586 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %585, align 8
  %587 = bitcast %"class.blink::InputTypeView"* %586 to void (%"class.blink::InputTypeView"*)***
  %588 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %587, align 8
  %589 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %588, i64 34
  %590 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %589, align 8
  tail call void %590(%"class.blink::InputTypeView"* %586) #15
  %591 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %592 = bitcast %"class.blink::ListedElement.base"* %591 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %592) #15
  %593 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %594 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %593, align 8
  %595 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %594, i64 0, i32 2, i32 0, i32 0
  %596 = load %"class.blink::Document"*, %"class.blink::Document"** %595, align 8
  %597 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %596, i64 0, i32 2
  %598 = bitcast %"class.blink::UseCounter"* %597 to void (%"class.blink::UseCounter"*, i32)***
  %599 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %598, align 8
  %600 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %599, i64 3
  %601 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %600, align 8
  tail call void %601(%"class.blink::UseCounter"* %597, i32 51) #15
  br label %698

602:                                              ; preds = %579
  %603 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kPatternAttrE, align 8
  %604 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %603, i64 0, i32 0, i32 0
  %605 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %604, align 8
  %606 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %605
  br i1 %606, label %607, label %619

607:                                              ; preds = %602
  %608 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %609 = bitcast %"class.blink::ListedElement.base"* %608 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %609) #15
  %610 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %611 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %610, align 8
  %612 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %611, i64 0, i32 2, i32 0, i32 0
  %613 = load %"class.blink::Document"*, %"class.blink::Document"** %612, align 8
  %614 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %613, i64 0, i32 2
  %615 = bitcast %"class.blink::UseCounter"* %614 to void (%"class.blink::UseCounter"*, i32)***
  %616 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %615, align 8
  %617 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %616, i64 3
  %618 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %617, align 8
  tail call void %618(%"class.blink::UseCounter"* %614, i32 44) #15
  br label %698

619:                                              ; preds = %602
  %620 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kReadonlyAttrE, align 8
  %621 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %620, i64 0, i32 0, i32 0
  %622 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %621, align 8
  %623 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %622
  br i1 %623, label %624, label %632

624:                                              ; preds = %619
  %625 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::TextControlElement"* %625, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #15
  %626 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %627 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %626, align 8
  %628 = bitcast %"class.blink::InputTypeView"* %627 to void (%"class.blink::InputTypeView"*)***
  %629 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %628, align 8
  %630 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %629, i64 40
  %631 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %630, align 8
  tail call void %631(%"class.blink::InputTypeView"* %627) #15
  br label %698

632:                                              ; preds = %619
  %633 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kListAttrE, align 8
  %634 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %633, i64 0, i32 0, i32 0
  %635 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %634, align 8
  %636 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %635
  br i1 %636, label %637, label %673

637:                                              ; preds = %632
  %638 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %639 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %638, align 8
  %640 = icmp eq %"class.WTF::StringImpl"* %639, null
  br i1 %640, label %645, label %641

641:                                              ; preds = %637
  %642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 1
  %643 = load i32, i32* %642, align 4
  %644 = icmp eq i32 %643, 0
  br label %645

645:                                              ; preds = %637, %641
  %646 = phi i1 [ true, %637 ], [ %644, %641 ]
  %647 = xor i1 %646, true
  %648 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %649 = zext i1 %647 to i16
  %650 = load i16, i16* %648, align 4
  %651 = shl nuw nsw i16 %649, 7
  %652 = and i16 %650, -129
  %653 = or i16 %652, %651
  store i16 %653, i16* %648, align 4
  br i1 %646, label %662, label %654

654:                                              ; preds = %645
  tail call void @_ZN5blink16HTMLInputElement32ResetListAttributeTargetObserverEv(%"class.blink::HTMLInputElement"* %0)
  %655 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %656 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %655, align 8
  %657 = bitcast %"class.blink::InputTypeView"* %656 to void (%"class.blink::InputTypeView"*)***
  %658 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %657, align 8
  %659 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %658, i64 44
  %660 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %659, align 8
  tail call void %660(%"class.blink::InputTypeView"* %656) #15
  %661 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %661, i32 94) #15
  br label %662

662:                                              ; preds = %645, %654
  %663 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %663, i32 94) #15
  %664 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %665 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %664, align 8
  %666 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %665, i64 0, i32 2, i32 0, i32 0
  %667 = load %"class.blink::Document"*, %"class.blink::Document"** %666, align 8
  %668 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %667, i64 0, i32 2
  %669 = bitcast %"class.blink::UseCounter"* %668 to void (%"class.blink::UseCounter"*, i32)***
  %670 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %669, align 8
  %671 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %670, i64 3
  %672 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %671, align 8
  tail call void %672(%"class.blink::UseCounter"* %668, i32 41) #15
  br label %698

673:                                              ; preds = %632
  %674 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kWebkitdirectoryAttrE, align 8
  %675 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %674, i64 0, i32 0, i32 0
  %676 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %675, align 8
  %677 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %676
  br i1 %677, label %678, label %689

678:                                              ; preds = %673
  %679 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::TextControlElement"* %679, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #15
  %680 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %681 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %680, align 8
  %682 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %681, i64 0, i32 2, i32 0, i32 0
  %683 = load %"class.blink::Document"*, %"class.blink::Document"** %682, align 8
  %684 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %683, i64 0, i32 2
  %685 = bitcast %"class.blink::UseCounter"* %684 to void (%"class.blink::UseCounter"*, i32)***
  %686 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %685, align 8
  %687 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %686, i64 3
  %688 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %687, align 8
  tail call void %688(%"class.blink::UseCounter"* %684, i32 47) #15
  br label %698

689:                                              ; preds = %673
  %690 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kFormactionAttrE, align 8
  %691 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %690, i64 0, i32 0, i32 0
  %692 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %691, align 8
  %693 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %11, %692
  br i1 %693, label %694, label %696

694:                                              ; preds = %689
  %695 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element46LogUpdateAttributeIfIsolatedWorldAndInDocumentEPKcRKNS0_27AttributeModificationParamsE(%"class.blink::Element"* %695, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #15
  br label %696

696:                                              ; preds = %694, %689
  %697 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::TextControlElement"* %697, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #15
  br label %698

698:                                              ; preds = %216, %219, %202, %321, %370, %438, %456, %478, %510, %570, %607, %662, %696, %678, %624, %584, %540, %495, %463, %468, %444, %378, %363, %228, %116
  ret void
}

declare void @_ZN5blink18TextControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::TextControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK5blink9InputType39WarnIfValueIsInvalidAndElementIsVisibleERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5blink9InputType14InRangeChangedEv(%"class.blink::InputType"*) local_unnamed_addr #1

declare dereferenceable(56) %"class.blink::FormController"* @_ZN5blink8Document17GetFormControllerEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14FormController16HasControlStatesEv(%"class.blink::FormController"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %5 = load i16, i16* %4, align 4
  %6 = or i16 %5, 4
  store i16 %6, i16* %4, align 4
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %9 = bitcast %"class.blink::InputType"* %8 to void (%"class.blink::InputType"*)***
  %10 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %10, i64 20
  %12 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %11, align 8
  tail call void %12(%"class.blink::InputType"* %8) #15
  %13 = load i16, i16* %4, align 4
  %14 = and i16 %13, 2
  %15 = icmp ne i16 %14, 0
  %16 = xor i1 %15, %1
  br i1 %16, label %17, label %132

17:                                               ; preds = %3
  %18 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %19 = bitcast %"class.blink::InputType"* %18 to void (%"class.blink::InputType"*, i1)***
  %20 = load void (%"class.blink::InputType"*, i1)**, void (%"class.blink::InputType"*, i1)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::InputType"*, i1)*, void (%"class.blink::InputType"*, i1)** %20, i64 21
  %22 = load void (%"class.blink::InputType"*, i1)*, void (%"class.blink::InputType"*, i1)** %21, align 8
  tail call void %22(%"class.blink::InputType"* %18, i1 zeroext %1) #15
  %23 = zext i1 %1 to i16
  %24 = load i16, i16* %4, align 4
  %25 = shl nuw nsw i16 %23, 1
  %26 = and i16 %24, -3
  %27 = or i16 %26, %25
  store i16 %27, i16* %4, align 4
  %28 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %29 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %30 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %30, i64 171
  %32 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %31, align 8
  %33 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %32(%"class.blink::HTMLFormControlElement"* %28) #15
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %40, label %59

40:                                               ; preds = %17
  %41 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %42 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %41, align 8
  %43 = icmp eq %"class.blink::HTMLFormElement"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %42, i64 0, i32 3
  br label %55

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 256
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 9
  br label %55

55:                                               ; preds = %44, %51
  %56 = phi %"class.blink::RadioButtonGroupScope"* [ %54, %51 ], [ %45, %44 ]
  %57 = icmp eq %"class.blink::RadioButtonGroupScope"* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @_ZN5blink21RadioButtonGroupScope18UpdateCheckedStateEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %56, %"class.blink::HTMLInputElement"* %0) #15
  br label %59

59:                                               ; preds = %46, %17, %55, %58
  %60 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink4Node34InvalidateIfHasEffectiveAppearanceEv(%"class.blink::Node"* %60) #15
  %61 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %"class.blink::ListedElement.base"* %61 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %62) #15
  %63 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %66, label %72, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.blink::NodeData"** %67 to %"class.blink::NodeRareData"**
  %70 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %70, i64 0, i32 1, i32 0, i32 0
  br label %74

72:                                               ; preds = %59
  %73 = bitcast %"class.blink::NodeData"** %67 to %"class.blink::NodeRenderingData"**
  br label %74

74:                                               ; preds = %68, %72
  %75 = phi %"class.blink::NodeRenderingData"** [ %71, %68 ], [ %73, %72 ]
  %76 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %76, i64 0, i32 1
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutObject"* %78, null
  br i1 %79, label %115, label %80

80:                                               ; preds = %74
  br i1 %66, label %85, label %81

81:                                               ; preds = %80
  %82 = bitcast %"class.blink::NodeData"** %67 to %"class.blink::NodeRareData"**
  %83 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %83, i64 0, i32 1, i32 0, i32 0
  br label %87

85:                                               ; preds = %80
  %86 = bitcast %"class.blink::NodeData"** %67 to %"class.blink::NodeRenderingData"**
  br label %87

87:                                               ; preds = %81, %85
  %88 = phi %"class.blink::NodeRenderingData"** [ %84, %81 ], [ %86, %85 ]
  %89 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %89, i64 0, i32 1
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 6, i32 0, i32 0
  %93 = load %"class.blink::Node"*, %"class.blink::Node"** %92, align 8
  %94 = icmp eq %"class.blink::Node"* %93, null
  br i1 %94, label %95, label %102

95:                                               ; preds = %87, %95
  %96 = phi %"class.blink::LayoutObject"* [ %98, %95 ], [ %91, %87 ]
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %96, i64 0, i32 7
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 6, i32 0, i32 0
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  %101 = icmp eq %"class.blink::Node"* %100, null
  br i1 %101, label %95, label %102

102:                                              ; preds = %95, %87
  %103 = phi %"class.blink::Node"* [ %93, %87 ], [ %100, %95 ]
  %104 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %103, i64 0, i32 3, i32 0, i32 0
  %105 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %105, i64 0, i32 2, i32 0, i32 0
  %107 = load %"class.blink::Document"*, %"class.blink::Document"** %106, align 8
  %108 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %107) #15
  %109 = icmp eq %"class.blink::AXObjectCache"* %108, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %102
  %111 = bitcast %"class.blink::AXObjectCache"* %108 to void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)***
  %112 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %112, i64 14
  %114 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %113, align 8
  tail call void %114(%"class.blink::AXObjectCache"* nonnull %108, %"class.blink::Node"* %60) #15
  br label %115

115:                                              ; preds = %110, %102, %74
  %116 = icmp eq i32 %2, 3
  br i1 %116, label %117, label %130

117:                                              ; preds = %115
  %118 = load i32, i32* %63, align 8
  %119 = and i32 %118, 256
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %130, label %121

121:                                              ; preds = %117
  %122 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %123 = bitcast %"class.blink::InputType"* %122 to i1 (%"class.blink::InputType"*)***
  %124 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %124, i64 61
  %126 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %125, align 8
  %127 = tail call zeroext i1 %126(%"class.blink::InputType"* %122) #15
  br i1 %127, label %128, label %130

128:                                              ; preds = %121
  %129 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"* %129) #15
  br label %130

130:                                              ; preds = %117, %128, %121, %115
  %131 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %131, i32 32) #15
  br label %132

132:                                              ; preds = %3, %130
  ret void
}

declare zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #1

declare %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement32ResetListAttributeTargetObserverEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kListAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %99, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 256
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %99, label %68

68:                                               ; preds = %63
  %69 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16IdTargetObserverEEEPhm(i64 32) #15
  %70 = bitcast i8* %69 to %"class.blink::IdTargetObserver"*
  %71 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %72, i64 0, i32 6, i32 0, i32 0
  %74 = load %"class.blink::IdTargetObserverRegistry"*, %"class.blink::IdTargetObserverRegistry"** %73, align 8
  tail call void @_ZN5blink16IdTargetObserverC2ERNS_24IdTargetObserverRegistryERKN3WTF12AtomicStringE(%"class.blink::IdTargetObserver"* %70, %"class.blink::IdTargetObserverRegistry"* %74, %"class.WTF::AtomicString"* dereferenceable(8) %59) #15
  %75 = bitcast i8* %69 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink27ListAttributeTargetObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds i8, i8* %69, i64 24
  %77 = bitcast i8* %76 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %77, align 8
  %78 = getelementptr inbounds i8, i8* %69, i64 -4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = or i16 %80, 1
  store atomic i16 %81, i16* %79 release, align 2
  %82 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 10
  %83 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::ListAttributeTargetObserver"*, %"class.blink::ListAttributeTargetObserver"** %83, align 8
  %85 = icmp eq %"class.blink::ListAttributeTargetObserver"* %84, null
  br i1 %85, label %92, label %86

86:                                               ; preds = %68
  %87 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %84, i64 0, i32 0
  %88 = bitcast %"class.blink::ListAttributeTargetObserver"* %84 to void (%"class.blink::IdTargetObserver"*)***
  %89 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %89, i64 4
  %91 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %90, align 8
  tail call void %91(%"class.blink::IdTargetObserver"* %87) #15
  br label %92

92:                                               ; preds = %86, %68
  %93 = ptrtoint i8* %69 to i64
  %94 = bitcast %"class.blink::Member.294"* %82 to i64*
  store atomic i64 %93, i64* %94 monotonic, align 8
  %95 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %116, label %97

97:                                               ; preds = %92
  %98 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #15
  br label %116

99:                                               ; preds = %63, %58
  %100 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 10
  %101 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.blink::ListAttributeTargetObserver"*, %"class.blink::ListAttributeTargetObserver"** %101, align 8
  %103 = icmp eq %"class.blink::ListAttributeTargetObserver"* %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %102, i64 0, i32 0
  %106 = bitcast %"class.blink::ListAttributeTargetObserver"* %102 to void (%"class.blink::IdTargetObserver"*)***
  %107 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %107, i64 4
  %109 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %108, align 8
  tail call void %109(%"class.blink::IdTargetObserver"* %105) #15
  br label %110

110:                                              ; preds = %104, %99
  %111 = bitcast %"class.blink::Member.294"* %100 to i64*
  store atomic i64 0, i64* %111 monotonic, align 8
  %112 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  %115 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #15
  br label %116

116:                                              ; preds = %114, %110, %97, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement26ListAttributeTargetChangedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 44
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %8, i32 94) #15
  ret void
}

declare void @_ZN5blink7Element46LogUpdateAttributeIfIsolatedWorldAndInDocumentEPKcRKNS0_27AttributeModificationParamsE(%"class.blink::Element"*, i8*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement22ParserDidSetAttributesEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16HTMLInputElement23InitializeTypeInParsingEv(%"class.blink::HTMLInputElement"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement21FinishParsingChildrenEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, -513
  store i16 %4, i16* %2, align 4
  %5 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv(%"class.blink::HTMLFormControlElementWithState"* %5) #15
  %6 = load i16, i16* %2, align 4
  %7 = and i16 %6, 256
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %69

9:                                                ; preds = %1
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCheckedAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %66, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ElementData"* %12 to %"class.blink::UniqueElementData"*
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1, i32 1
  %22 = bitcast %"class.blink::Member.14"* %21 to %"class.blink::Attribute"**
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %31

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1
  %28 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::Attribute"*
  %29 = lshr i32 %16, 1
  %30 = and i32 %29, 268435455
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi %"class.blink::Attribute"* [ %28, %26 ], [ %23, %19 ]
  %33 = phi i32 [ %30, %26 ], [ %25, %19 ]
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %66, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %58, %37
  %43 = phi %"class.blink::Attribute"* [ %32, %37 ], [ %59, %58 ]
  %44 = phi i32 [ 0, %37 ], [ %60, %58 ]
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %46, %39
  br i1 %47, label %62, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %55, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %53, %48
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 1
  %60 = add i32 %44, 1
  %61 = icmp eq %"class.blink::Attribute"* %59, %35
  br i1 %61, label %66, label %42

62:                                               ; preds = %42, %53
  %63 = icmp eq i32 %44, -1
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %0, i1 zeroext true, i32 0)
  %65 = load i16, i16* %2, align 4
  br label %66

66:                                               ; preds = %58, %62, %31, %9, %64
  %67 = phi i16 [ %6, %31 ], [ %6, %9 ], [ %65, %64 ], [ %6, %62 ], [ %6, %58 ]
  %68 = and i16 %67, -5
  store i16 %68, i16* %2, align 4
  br label %69

69:                                               ; preds = %1, %66
  ret void
}

declare void @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::HTMLInputElement"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*)***
  %6 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, i64 50
  %8 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputType"* %4) #15
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"* %11, %"class.blink::ComputedStyle"* dereferenceable(104) %1) #15
  br label %13

13:                                               ; preds = %10, %2
  %14 = phi i1 [ false, %2 ], [ %12, %10 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement27TypeShouldForceLegacyLayoutEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to i1 (%"class.blink::InputTypeView"*)***
  %5 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %5, i64 22
  %7 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputTypeView"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink16HTMLInputElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %4, align 8
  %6 = bitcast %"class.blink::InputTypeView"* %5 to %"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)***
  %7 = load %"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)**, %"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)*, %"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)** %7, i64 23
  %9 = load %"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)*, %"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)** %8, align 8
  %10 = tail call %"class.blink::LayoutObject"* %9(%"class.blink::InputTypeView"* %5, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #15
  ret %"class.blink::LayoutObject"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::HTMLInputElement"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"* %3, %"struct.blink::Node::AttachContext"* dereferenceable(32) %1) #15
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %23 = load %"class.blink::InputType"*, %"class.blink::InputType"** %22, align 8
  %24 = bitcast %"class.blink::InputType"* %23 to void (%"class.blink::InputType"*)***
  %25 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %25, i64 78
  %27 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %26, align 8
  tail call void %27(%"class.blink::InputType"* %23) #15
  br label %28

28:                                               ; preds = %15, %21
  %29 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %30 = load %"class.blink::InputType"*, %"class.blink::InputType"** %29, align 8
  %31 = bitcast %"class.blink::InputType"* %30 to void (%"class.blink::InputType"*)***
  %32 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %32, i64 51
  %34 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %33, align 8
  tail call void %34(%"class.blink::InputType"* %30) #15
  ret void
}

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement16DetachLayoutTreeEb(%"class.blink::HTMLInputElement"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"* %3, i1 zeroext %1) #15
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %5 = load i16, i16* %4, align 4
  %6 = or i16 %5, 4096
  store i16 %6, i16* %4, align 4
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %7, align 8
  %9 = bitcast %"class.blink::InputTypeView"* %8 to void (%"class.blink::InputTypeView"*)***
  %10 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %10, i64 26
  %12 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %11, align 8
  tail call void %12(%"class.blink::InputTypeView"* %8) #15
  ret void
}

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement7AltTextEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %15 = bitcast %"class.blink::Member.14"* %14 to %"class.blink::Attribute"**
  %16 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %21 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::Attribute"*
  %22 = lshr i32 %9, 1
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"class.blink::Attribute"* [ %21, %19 ], [ %16, %12 ]
  %26 = phi i32 [ %23, %19 ], [ %18, %12 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %50, %30
  %36 = phi %"class.blink::Attribute"* [ %25, %30 ], [ %51, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %32
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %28
  br i1 %52, label %57, label %35

53:                                               ; preds = %45, %35
  %54 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 1
  br label %59

57:                                               ; preds = %50, %53, %24, %1
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.WTF::AtomicString"* [ %58, %57 ], [ %56, %55 ]
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %160

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #15
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !4

79:                                               ; preds = %70
  tail call void @llvm.trap() #15
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %160

82:                                               ; preds = %59
  %83 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  br i1 %6, label %134, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %84
  %90 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %91 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %92 = bitcast %"class.blink::Member.14"* %91 to %"class.blink::Attribute"**
  %93 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %90, i64 0, i32 2, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  br label %101

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %98 = bitcast %"class.blink::ElementData"* %97 to %"class.blink::Attribute"*
  %99 = lshr i32 %86, 1
  %100 = and i32 %99, 268435455
  br label %101

101:                                              ; preds = %96, %89
  %102 = phi %"class.blink::Attribute"* [ %98, %96 ], [ %93, %89 ]
  %103 = phi i32 [ %100, %96 ], [ %95, %89 ]
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %102, i64 %104
  %106 = icmp eq i32 %103, 0
  br i1 %106, label %134, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %83, i64 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %112

112:                                              ; preds = %127, %107
  %113 = phi %"class.blink::Attribute"* [ %102, %107 ], [ %128, %127 ]
  %114 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %114, align 8
  %116 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %115, %109
  br i1 %116, label %130, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 3, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %119, %120
  br i1 %121, label %122, label %127

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 4, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %124, %125
  br i1 %126, label %130, label %127

127:                                              ; preds = %122, %117
  %128 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %113, i64 1
  %129 = icmp eq %"class.blink::Attribute"* %128, %105
  br i1 %129, label %134, label %112

130:                                              ; preds = %122, %112
  %131 = icmp eq %"class.blink::Attribute"* %113, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %113, i64 0, i32 1
  br label %136

134:                                              ; preds = %127, %130, %101, %82
  %135 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %136

136:                                              ; preds = %132, %134
  %137 = phi %"class.WTF::AtomicString"* [ %135, %134 ], [ %133, %132 ]
  %138 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %158, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %158

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = zext i32 %148 to i33
  %150 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %149, i33 1) #15
  %151 = extractvalue { i33, i1 } %150, 1
  %152 = extractvalue { i33, i1 } %150, 0
  %153 = icmp slt i33 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %155, label %156, !prof !4

155:                                              ; preds = %146
  tail call void @llvm.trap() #15
  unreachable

156:                                              ; preds = %146
  %157 = trunc i33 %152 to i32
  store i32 %157, i32* %147, align 4
  br label %158

158:                                              ; preds = %136, %141, %156
  %159 = ptrtoint %"class.WTF::StringImpl"* %139 to i64
  br label %160

160:                                              ; preds = %80, %65, %158
  %161 = phi i64 [ %159, %158 ], [ %63, %65 ], [ %63, %80 ]
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %248

163:                                              ; preds = %160
  %164 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %165 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %166 = icmp eq %"class.blink::ElementData"* %165, null
  br i1 %166, label %217, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %165, i64 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %179, label %172

172:                                              ; preds = %167
  %173 = bitcast %"class.blink::ElementData"* %165 to %"class.blink::UniqueElementData"*
  %174 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %165, i64 1, i32 1
  %175 = bitcast %"class.blink::Member.14"* %174 to %"class.blink::Attribute"**
  %176 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %173, i64 0, i32 2, i32 0, i32 0, i32 2
  %178 = load i32, i32* %177, align 4
  br label %184

179:                                              ; preds = %167
  %180 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %165, i64 1
  %181 = bitcast %"class.blink::ElementData"* %180 to %"class.blink::Attribute"*
  %182 = lshr i32 %169, 1
  %183 = and i32 %182, 268435455
  br label %184

184:                                              ; preds = %179, %172
  %185 = phi %"class.blink::Attribute"* [ %181, %179 ], [ %176, %172 ]
  %186 = phi i32 [ %183, %179 ], [ %178, %172 ]
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %185, i64 %187
  %189 = icmp eq i32 %186, 0
  br i1 %189, label %217, label %190

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %164, i64 0, i32 0, i32 0
  %192 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %192, i64 0, i32 3, i32 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %192, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %195

195:                                              ; preds = %210, %190
  %196 = phi %"class.blink::Attribute"* [ %185, %190 ], [ %211, %210 ]
  %197 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %196, i64 0, i32 0, i32 0, i32 0
  %198 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %197, align 8
  %199 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %198, %192
  br i1 %199, label %213, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %198, i64 0, i32 3, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %202, %203
  br i1 %204, label %205, label %210

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %198, i64 0, i32 4, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %207, %208
  br i1 %209, label %213, label %210

210:                                              ; preds = %205, %200
  %211 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %196, i64 1
  %212 = icmp eq %"class.blink::Attribute"* %211, %188
  br i1 %212, label %217, label %195

213:                                              ; preds = %205, %195
  %214 = icmp eq %"class.blink::Attribute"* %196, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %196, i64 0, i32 1
  br label %219

217:                                              ; preds = %210, %213, %184, %163
  %218 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %219

219:                                              ; preds = %215, %217
  %220 = phi %"class.WTF::AtomicString"* [ %218, %217 ], [ %216, %215 ]
  %221 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %220, i64 0, i32 0, i32 0, i32 0
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %241, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %241

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = zext i32 %231 to i33
  %233 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %232, i33 1) #15
  %234 = extractvalue { i33, i1 } %233, 1
  %235 = extractvalue { i33, i1 } %233, 0
  %236 = icmp slt i33 %235, 0
  %237 = or i1 %234, %236
  br i1 %237, label %238, label %239, !prof !4

238:                                              ; preds = %229
  tail call void @llvm.trap() #15
  unreachable

239:                                              ; preds = %229
  %240 = trunc i33 %235 to i32
  store i32 %240, i32* %230, align 4
  br label %241

241:                                              ; preds = %239, %224, %219
  %242 = ptrtoint %"class.WTF::StringImpl"* %222 to i64
  %243 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %243, label %244, label %248

244:                                              ; preds = %241
  %245 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %2) #15
  %246 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %245, i32 24774) #15
  %247 = ptrtoint %"class.WTF::StringImpl"* %246 to i64
  br label %248

248:                                              ; preds = %160, %241, %244
  %249 = phi i64 [ %247, %244 ], [ %242, %241 ], [ %161, %160 ]
  %250 = inttoptr i64 %249 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %250
}

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement17IsActivatedSubmitEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 16
  %5 = icmp ne i16 %4, 0
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement18SetActivatedSubmitEb(%"class.blink::HTMLInputElement"* nocapture, i1 zeroext) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %4 = zext i1 %1 to i16
  %5 = load i16, i16* %3, align 4
  %6 = shl nuw nsw i16 %4, 4
  %7 = and i16 %5, -17
  %8 = or i16 %7, %6
  store i16 %8, i16* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement16AppendToFormDataERNS_8FormDataE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::FormData"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*)***
  %6 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, i64 9
  %8 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputType"* %4) #15
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %12 = bitcast %"class.blink::InputType"* %11 to void (%"class.blink::InputType"*, %"class.blink::FormData"*)***
  %13 = load void (%"class.blink::InputType"*, %"class.blink::FormData"*)**, void (%"class.blink::InputType"*, %"class.blink::FormData"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.blink::FormData"*)*, void (%"class.blink::InputType"*, %"class.blink::FormData"*)** %13, i64 10
  %15 = load void (%"class.blink::InputType"*, %"class.blink::FormData"*)*, void (%"class.blink::InputType"*, %"class.blink::FormData"*)** %14, align 8
  tail call void %15(%"class.blink::InputType"* %11, %"class.blink::FormData"* %1) #15
  br label %16

16:                                               ; preds = %10, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16HTMLInputElement16AppendToFormDataERNS_8FormDataE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::FormData"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %4 = getelementptr inbounds i8, i8* %3, i64 280
  %5 = bitcast i8* %4 to %"class.blink::InputType"**
  %6 = load %"class.blink::InputType"*, %"class.blink::InputType"** %5, align 8
  %7 = bitcast %"class.blink::InputType"* %6 to i1 (%"class.blink::InputType"*)***
  %8 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %8, i64 9
  %10 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::InputType"* %6) #15
  br i1 %11, label %12, label %18

12:                                               ; preds = %2
  %13 = load %"class.blink::InputType"*, %"class.blink::InputType"** %5, align 8
  %14 = bitcast %"class.blink::InputType"* %13 to void (%"class.blink::InputType"*, %"class.blink::FormData"*)***
  %15 = load void (%"class.blink::InputType"*, %"class.blink::FormData"*)**, void (%"class.blink::InputType"*, %"class.blink::FormData"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.blink::FormData"*)*, void (%"class.blink::InputType"*, %"class.blink::FormData"*)** %15, i64 10
  %17 = load void (%"class.blink::InputType"*, %"class.blink::FormData"*)*, void (%"class.blink::InputType"*, %"class.blink::FormData"*)** %16, align 8
  tail call void %17(%"class.blink::InputType"* %13, %"class.blink::FormData"* %1) #15
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16HTMLInputElement21ResultForDialogSubmitEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %5, i64 11
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::InputType"* %3) #15
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement9ResetImplEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i32 (%"class.blink::InputType"*)***
  %6 = load i32 (%"class.blink::InputType"*)**, i32 (%"class.blink::InputType"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %6, i64 14
  %8 = load i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::InputType"* %4) #15
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %80

11:                                               ; preds = %1
  %12 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %13, align 8
  %15 = icmp eq %"class.blink::ElementData"* %14, null
  br i1 %15, label %66, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::ElementData"* %14 to %"class.blink::UniqueElementData"*
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 1, i32 1
  %24 = bitcast %"class.blink::Member.14"* %23 to %"class.blink::Attribute"**
  %25 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %22, i64 0, i32 2, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  br label %33

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 1
  %30 = bitcast %"class.blink::ElementData"* %29 to %"class.blink::Attribute"*
  %31 = lshr i32 %18, 1
  %32 = and i32 %31, 268435455
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi %"class.blink::Attribute"* [ %30, %28 ], [ %25, %21 ]
  %35 = phi i32 [ %32, %28 ], [ %27, %21 ]
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %12, i64 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %59, %39
  %45 = phi %"class.blink::Attribute"* [ %34, %39 ], [ %60, %59 ]
  %46 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %47, %41
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 4, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %56, %57
  br i1 %58, label %62, label %59

59:                                               ; preds = %54, %49
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 1
  %61 = icmp eq %"class.blink::Attribute"* %60, %37
  br i1 %61, label %66, label %44

62:                                               ; preds = %54, %44
  %63 = icmp eq %"class.blink::Attribute"* %45, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 0, i32 1
  br label %68

66:                                               ; preds = %59, %62, %33, %11
  %67 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %68

68:                                               ; preds = %64, %66
  %69 = phi %"class.WTF::AtomicString"* [ %67, %66 ], [ %65, %64 ]
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %69, i64 0, i32 0
  %71 = bitcast %"class.blink::HTMLInputElement"* %0 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %72 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %72, i64 196
  %74 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %73, align 8
  tail call void %74(%"class.blink::HTMLInputElement"* %0, %"class.WTF::String"* dereferenceable(8) %70, i32 0, i32 0) #15
  %75 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %76 = load i16, i16* %75, align 4
  %77 = and i16 %76, -2
  store i16 %77, i16* %75, align 4
  %78 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast %"class.blink::ListedElement.base"* %78 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %79) #15
  br label %116

80:                                               ; preds = %1
  %81 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %82 = bitcast %"class.blink::InputType"* %81 to i32 (%"class.blink::InputType"*)***
  %83 = load i32 (%"class.blink::InputType"*)**, i32 (%"class.blink::InputType"*)*** %82, align 8
  %84 = getelementptr inbounds i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %83, i64 14
  %85 = load i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %84, align 8
  %86 = tail call i32 %85(%"class.blink::InputType"* %81) #15
  %87 = icmp eq i32 %86, 3
  br i1 %87, label %88, label %116

88:                                               ; preds = %80
  %89 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #15
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %90, align 8
  %91 = bitcast %"class.blink::HTMLInputElement"* %0 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %92 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %92, i64 196
  %94 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %93, align 8
  call void %94(%"class.blink::HTMLInputElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, i32 0, i32 0) #15
  %95 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %96 = load i16, i16* %95, align 4
  %97 = and i16 %96, -2
  store i16 %97, i16* %95, align 4
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #15
  br label %113

113:                                              ; preds = %88, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #15
  %114 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %115 = bitcast %"class.blink::ListedElement.base"* %114 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %115) #15
  br label %116

116:                                              ; preds = %80, %113, %68
  %117 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCheckedAttrE, align 8
  %118 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %119 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %118, align 8
  %120 = icmp eq %"class.blink::ElementData"* %119, null
  br i1 %120, label %172, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %119, i64 0, i32 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %133, label %126

126:                                              ; preds = %121
  %127 = bitcast %"class.blink::ElementData"* %119 to %"class.blink::UniqueElementData"*
  %128 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %119, i64 1, i32 1
  %129 = bitcast %"class.blink::Member.14"* %128 to %"class.blink::Attribute"**
  %130 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %127, i64 0, i32 2, i32 0, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  br label %138

133:                                              ; preds = %121
  %134 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %119, i64 1
  %135 = bitcast %"class.blink::ElementData"* %134 to %"class.blink::Attribute"*
  %136 = lshr i32 %123, 1
  %137 = and i32 %136, 268435455
  br label %138

138:                                              ; preds = %133, %126
  %139 = phi %"class.blink::Attribute"* [ %135, %133 ], [ %130, %126 ]
  %140 = phi i32 [ %137, %133 ], [ %132, %126 ]
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %139, i64 %141
  %143 = icmp eq i32 %140, 0
  br i1 %143, label %169, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %117, i64 0, i32 0, i32 0
  %146 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %146, i64 0, i32 3, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %146, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %149

149:                                              ; preds = %165, %144
  %150 = phi %"class.blink::Attribute"* [ %139, %144 ], [ %166, %165 ]
  %151 = phi i32 [ 0, %144 ], [ %167, %165 ]
  %152 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %150, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %152, align 8
  %154 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %153, %146
  br i1 %154, label %169, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %153, i64 0, i32 3, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %157, %158
  br i1 %159, label %160, label %165

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %153, i64 0, i32 4, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %162, %163
  br i1 %164, label %169, label %165

165:                                              ; preds = %160, %155
  %166 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %150, i64 1
  %167 = add i32 %151, 1
  %168 = icmp eq %"class.blink::Attribute"* %166, %142
  br i1 %168, label %169, label %149

169:                                              ; preds = %165, %160, %149, %138
  %170 = phi i32 [ -1, %138 ], [ %151, %149 ], [ %151, %160 ], [ -1, %165 ]
  %171 = icmp ne i32 %170, -1
  br label %172

172:                                              ; preds = %116, %169
  %173 = phi i1 [ false, %116 ], [ %171, %169 ]
  call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %0, i1 zeroext %173, i32 0)
  %174 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %175 = load i16, i16* %174, align 4
  %176 = and i16 %175, -5
  store i16 %176, i16* %174, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement12DefaultValueEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  ret %"class.WTF::AtomicString"* %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement20HasBeenPasswordFieldEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 16384
  %5 = icmp ne i16 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement27DispatchChangeEventIfNeededEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 256
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %9 = bitcast %"class.blink::InputType"* %8 to i1 (%"class.blink::InputType"*)***
  %10 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, i64 61
  %12 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::InputType"* %8) #15
  br i1 %13, label %14, label %16

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithState19DispatchChangeEventEv(%"class.blink::HTMLFormControlElementWithState"* %15) #15
  br label %16

16:                                               ; preds = %1, %14, %6
  ret void
}

declare void @_ZN5blink31HTMLFormControlElementWithState19DispatchChangeEventEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement35DispatchInputAndChangeEventIfNeededEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 256
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %9 = bitcast %"class.blink::InputType"* %8 to i1 (%"class.blink::InputType"*)***
  %10 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, i64 61
  %12 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::InputType"* %8) #15
  br i1 %13, label %14, label %16

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"* %15) #15
  tail call void @_ZN5blink31HTMLFormControlElementWithState19DispatchChangeEventEv(%"class.blink::HTMLFormControlElementWithState"* %15) #15
  br label %16

16:                                               ; preds = %1, %14, %6
  ret void
}

declare void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement11IsCheckableEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 66
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to void (%"class.blink::InputType"*)***
  %5 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %5, i64 20
  %7 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %6, align 8
  tail call void %7(%"class.blink::InputType"* %3) #15
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %9 = load i16, i16* %8, align 4
  %10 = and i16 %9, 2
  %11 = icmp ne i16 %10, 0
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RadioButtonGroupScope"* @_ZNK5blink16HTMLInputElement24GetRadioButtonGroupScopeEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %4 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %4, i64 171
  %6 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %5, align 8
  %7 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %6(%"class.blink::HTMLFormControlElement"* %2) #15
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br i1 %13, label %14, label %29

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %16 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %15, align 8
  %17 = icmp eq %"class.blink::HTMLFormElement"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %16, i64 0, i32 3
  br label %29

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 256
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 9
  br label %29

29:                                               ; preds = %20, %1, %18, %25
  %30 = phi %"class.blink::RadioButtonGroupScope"* [ %28, %25 ], [ %19, %18 ], [ null, %1 ], [ null, %20 ]
  ret %"class.blink::RadioButtonGroupScope"* %30
}

declare void @_ZN5blink21RadioButtonGroupScope18UpdateCheckedStateEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"*, %"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare void @_ZNK5blink4Node34InvalidateIfHasEffectiveAppearanceEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement16setIndeterminateEb(%"class.blink::HTMLInputElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %4 = load i16, i16* %3, align 4
  %5 = and i16 %4, 8
  %6 = icmp ne i16 %5, 0
  %7 = xor i1 %6, %1
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = zext i1 %1 to i16
  %10 = shl nuw nsw i16 %9, 3
  %11 = and i16 %4, -9
  %12 = or i16 %11, %10
  store i16 %12, i16* %3, align 4
  %13 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %13, i32 44) #15
  %14 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink4Node34InvalidateIfHasEffectiveAppearanceEv(%"class.blink::Node"* %14) #15
  %15 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %18) #15
  %20 = icmp eq %"class.blink::AXObjectCache"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %8
  %22 = bitcast %"class.blink::AXObjectCache"* %19 to void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)***
  %23 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %23, i64 14
  %25 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %24, align 8
  tail call void %25(%"class.blink::AXObjectCache"* nonnull %19, %"class.blink::Node"* %14) #15
  br label %26

26:                                               ; preds = %21, %8, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink16HTMLInputElement4sizeEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement27SizeShouldIncludeDecorationERi(%"class.blink::HTMLInputElement"* nocapture readonly, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %3, align 8
  %5 = bitcast %"class.blink::InputTypeView"* %4 to i1 (%"class.blink::InputTypeView"*, i32, i32*)***
  %6 = load i1 (%"class.blink::InputTypeView"*, i32, i32*)**, i1 (%"class.blink::InputTypeView"*, i32, i32*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*, i32, i32*)*, i1 (%"class.blink::InputTypeView"*, i32, i32*)** %6, i64 3
  %8 = load i1 (%"class.blink::InputTypeView"*, i32, i32*)*, i1 (%"class.blink::InputTypeView"*, i32, i32*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputTypeView"* %4, i32 20, i32* dereferenceable(4) %1) #15
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::HTMLInputElement"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLInputElement"*
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 2, i32 0, i32 0, i32 6
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3
  %7 = bitcast %"class.blink::Member.2"* %5 to %"class.WTF::StringImpl"**
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #15
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !4

24:                                               ; preds = %15
  tail call void @llvm.trap() #15
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %3
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::String"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 5
  %48 = load i16, i16* %47, align 4
  %49 = and i16 %48, 1
  %50 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %51 = load i16, i16* %50, align 4
  %52 = and i16 %51, -2
  %53 = or i16 %52, %49
  store i16 %53, i16* %50, align 4
  %54 = load i16, i16* %47, align 4
  %55 = and i16 %54, 2
  %56 = icmp ne i16 %55, 0
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %0, i1 zeroext %56, i32 0)
  %57 = load i16, i16* %47, align 4
  %58 = and i16 %57, 4
  %59 = load i16, i16* %50, align 4
  %60 = and i16 %59, -5
  %61 = or i16 %60, %58
  store i16 %61, i16* %50, align 4
  %62 = load i16, i16* %47, align 4
  %63 = and i16 %62, 8
  %64 = and i16 %61, -9
  %65 = or i16 %64, %63
  store i16 %65, i16* %50, align 4
  %66 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %67 = load %"class.blink::InputType"*, %"class.blink::InputType"** %66, align 8
  %68 = bitcast %"class.blink::InputType"* %67 to void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)***
  %69 = load void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)**, void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)*, void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)** %69, i64 77
  %71 = load void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)*, void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)** %70, align 8
  tail call void %71(%"class.blink::InputType"* %67, %"class.blink::HTMLInputElement"* dereferenceable(320) %4) #15
  %72 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::TextControlElement"* %72, %"class.blink::Element"* dereferenceable(104) %1, i32 %2) #15
  %73 = load i16, i16* %50, align 4
  %74 = or i16 %73, 4096
  store i16 %74, i16* %50, align 4
  %75 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %76 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %75, align 8
  %77 = bitcast %"class.blink::InputTypeView"* %76 to void (%"class.blink::InputTypeView"*)***
  %78 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %78, i64 37
  %80 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %79, align 8
  tail call void %80(%"class.blink::InputTypeView"* %76) #15
  ret void
}

declare void @_ZN5blink18TextControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::TextControlElement"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement5valueEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i32 (%"class.blink::InputType"*)***
  %6 = load i32 (%"class.blink::InputType"*)**, i32 (%"class.blink::InputType"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %6, i64 14
  %8 = load i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::InputType"* %4) #15
  switch i32 %9, label %268 [
    i32 3, label %10
    i32 1, label %17
    i32 2, label %96
    i32 0, label %247
  ]

10:                                               ; preds = %1
  %11 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %12 = bitcast %"class.blink::InputType"* %11 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*)***
  %13 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %13, i64 12
  %15 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %14, align 8
  %16 = tail call %"class.WTF::StringImpl"* %15(%"class.blink::InputType"* %11) #15
  br label %290

17:                                               ; preds = %1
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %19, align 8
  %21 = icmp eq %"class.blink::ElementData"* %20, null
  br i1 %21, label %72, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::UniqueElementData"*
  %29 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 1, i32 1
  %30 = bitcast %"class.blink::Member.14"* %29 to %"class.blink::Attribute"**
  %31 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %28, i64 0, i32 2, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  br label %39

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 1
  %36 = bitcast %"class.blink::ElementData"* %35 to %"class.blink::Attribute"*
  %37 = lshr i32 %24, 1
  %38 = and i32 %37, 268435455
  br label %39

39:                                               ; preds = %34, %27
  %40 = phi %"class.blink::Attribute"* [ %36, %34 ], [ %31, %27 ]
  %41 = phi i32 [ %38, %34 ], [ %33, %27 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 %42
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %72, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %18, i64 0, i32 0, i32 0
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %65, %45
  %51 = phi %"class.blink::Attribute"* [ %40, %45 ], [ %66, %65 ]
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %53, %47
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %57, %58
  br i1 %59, label %60, label %65

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, %63
  br i1 %64, label %68, label %65

65:                                               ; preds = %60, %55
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %51, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %43
  br i1 %67, label %72, label %50

68:                                               ; preds = %60, %50
  %69 = icmp eq %"class.blink::Attribute"* %51, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %51, i64 0, i32 1
  br label %74

72:                                               ; preds = %65, %68, %39, %17
  %73 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %74

74:                                               ; preds = %70, %72
  %75 = phi %"class.WTF::AtomicString"* [ %73, %72 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %290, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %290

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #15
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !4

93:                                               ; preds = %84
  tail call void @llvm.trap() #15
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  br label %290

96:                                               ; preds = %1
  %97 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %98 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %98, align 8
  %100 = icmp eq %"class.blink::ElementData"* %99, null
  br i1 %100, label %151, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %113, label %106

106:                                              ; preds = %101
  %107 = bitcast %"class.blink::ElementData"* %99 to %"class.blink::UniqueElementData"*
  %108 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %99, i64 1, i32 1
  %109 = bitcast %"class.blink::Member.14"* %108 to %"class.blink::Attribute"**
  %110 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %107, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  br label %118

113:                                              ; preds = %101
  %114 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %99, i64 1
  %115 = bitcast %"class.blink::ElementData"* %114 to %"class.blink::Attribute"*
  %116 = lshr i32 %103, 1
  %117 = and i32 %116, 268435455
  br label %118

118:                                              ; preds = %113, %106
  %119 = phi %"class.blink::Attribute"* [ %115, %113 ], [ %110, %106 ]
  %120 = phi i32 [ %117, %113 ], [ %112, %106 ]
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %119, i64 %121
  %123 = icmp eq i32 %120, 0
  br i1 %123, label %151, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %97, i64 0, i32 0, i32 0
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %129

129:                                              ; preds = %144, %124
  %130 = phi %"class.blink::Attribute"* [ %119, %124 ], [ %145, %144 ]
  %131 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %132, %126
  br i1 %133, label %147, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %136, %137
  br i1 %138, label %139, label %144

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 4, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %141, %142
  br i1 %143, label %147, label %144

144:                                              ; preds = %139, %134
  %145 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %130, i64 1
  %146 = icmp eq %"class.blink::Attribute"* %145, %122
  br i1 %146, label %151, label %129

147:                                              ; preds = %139, %129
  %148 = icmp eq %"class.blink::Attribute"* %130, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %130, i64 0, i32 1
  br label %153

151:                                              ; preds = %144, %147, %118, %96
  %152 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %153

153:                                              ; preds = %149, %151
  %154 = phi %"class.WTF::AtomicString"* [ %152, %151 ], [ %150, %149 ]
  %155 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %175, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %177

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i33
  %167 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #15
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !4

172:                                              ; preds = %163
  tail call void @llvm.trap() #15
  unreachable

173:                                              ; preds = %163
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %164, align 4
  br label %177

175:                                              ; preds = %153
  %176 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #15
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #15
  br label %195

177:                                              ; preds = %173, %158
  %178 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #15
  %179 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %179, align 8
  %180 = load atomic i32, i32* %159 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %195

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i33
  %187 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %186, i33 1) #15
  %188 = extractvalue { i33, i1 } %187, 1
  %189 = extractvalue { i33, i1 } %187, 0
  %190 = icmp slt i33 %189, 0
  %191 = or i1 %188, %190
  br i1 %191, label %192, label %193, !prof !4

192:                                              ; preds = %183
  tail call void @llvm.trap() #15
  unreachable

193:                                              ; preds = %183
  %194 = trunc i33 %189 to i32
  store i32 %194, i32* %184, align 4
  br label %195

195:                                              ; preds = %193, %177, %175
  %196 = phi i8* [ %176, %175 ], [ %178, %177 ], [ %178, %193 ]
  %197 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %233, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %219

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i33
  %209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #15
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !4

214:                                              ; preds = %205
  call void @llvm.trap() #15
  unreachable

215:                                              ; preds = %205
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %206, align 4
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %233, label %219

219:                                              ; preds = %200, %215
  %220 = phi %"class.WTF::StringImpl"* [ %217, %215 ], [ %198, %200 ]
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %219
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %219
  %230 = phi i32 [ %228, %227 ], [ %226, %219 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #15
  br label %233

233:                                              ; preds = %195, %215, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #15
  br i1 %157, label %290, label %234

234:                                              ; preds = %233
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %290

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #15
  br label %290

247:                                              ; preds = %1
  %248 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %290, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %290

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = zext i32 %258 to i33
  %260 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %259, i33 1) #15
  %261 = extractvalue { i33, i1 } %260, 1
  %262 = extractvalue { i33, i1 } %260, 0
  %263 = icmp slt i33 %262, 0
  %264 = or i1 %261, %263
  br i1 %264, label %265, label %266, !prof !4

265:                                              ; preds = %256
  tail call void @llvm.trap() #15
  unreachable

266:                                              ; preds = %256
  %267 = trunc i33 %262 to i32
  store i32 %267, i32* %257, align 4
  br label %290

268:                                              ; preds = %1
  %269 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %270 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %269, i64 0, i32 0, i32 0
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %290, label %273

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %290

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i33
  %282 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %281, i33 1) #15
  %283 = extractvalue { i33, i1 } %282, 1
  %284 = extractvalue { i33, i1 } %282, 0
  %285 = icmp slt i33 %284, 0
  %286 = or i1 %283, %285
  br i1 %286, label %287, label %288, !prof !4

287:                                              ; preds = %278
  tail call void @llvm.trap() #15
  unreachable

288:                                              ; preds = %278
  %289 = trunc i33 %284 to i32
  store i32 %289, i32* %279, align 4
  br label %290

290:                                              ; preds = %288, %273, %268, %266, %251, %247, %246, %243, %233, %94, %79, %74, %10
  %291 = phi %"class.WTF::StringImpl"* [ %16, %10 ], [ null, %74 ], [ %77, %79 ], [ %77, %94 ], [ %198, %233 ], [ %198, %243 ], [ %198, %246 ], [ null, %247 ], [ %249, %251 ], [ %249, %266 ], [ null, %268 ], [ %271, %273 ], [ %271, %288 ]
  ret %"class.WTF::StringImpl"* %291
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement19ValueOrDefaultLabelEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %3 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %3, i64 195
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %4, align 8
  %6 = tail call %"class.WTF::StringImpl"* %5(%"class.blink::HTMLInputElement"* %0) #15
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %10 = load %"class.blink::InputType"*, %"class.blink::InputType"** %9, align 8
  %11 = bitcast %"class.blink::InputType"* %10 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*)***
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %12, i64 13
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %13, align 8
  %15 = tail call %"class.WTF::StringImpl"* %14(%"class.blink::InputType"* %10) #15
  br label %16

16:                                               ; preds = %8, %1
  %17 = phi %"class.WTF::StringImpl"* [ %15, %8 ], [ %6, %1 ]
  ret %"class.WTF::StringImpl"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement15SetValueForUserERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %4 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %4, i64 196
  %6 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %5, align 8
  tail call void %6(%"class.blink::HTMLInputElement"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 1, i32 0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.blink::InputType"* %7 to i1 (%"class.blink::InputType"*)***
  %9 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %9, i64 60
  %11 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::InputType"* %7) #15
  br i1 %12, label %33, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %15 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::TextControlElement"* %14, %"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #15
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  br label %110

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %35 = load i16, i16* %34, align 4
  %36 = or i16 %35, 4096
  store i16 %36, i16* %34, align 4
  %37 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %38 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #15
  %39 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %40 = bitcast %"class.blink::InputType"* %39 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %41 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %41, i64 43
  %43 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %42, align 8
  %44 = tail call %"class.WTF::StringImpl"* %43(%"class.blink::InputType"* %39, %"class.WTF::String"* dereferenceable(8) %1) #15
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  call void @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::TextControlElement"* %37, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %33
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #15
  br label %61

61:                                               ; preds = %33, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #15
  %62 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.blink::StyleChangeReasonForTracing"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #15
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #15
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !4

82:                                               ; preds = %73
  call void @llvm.trap() #15
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %61, %68, %83
  %86 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason13kControlValueE, i64 0, i64 0), i8** %86, align 8
  %87 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %87, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %62, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %5) #15
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #15
  br label %103

103:                                              ; preds = %85, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #15
  %104 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %105 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %104, align 8
  %106 = bitcast %"class.blink::InputTypeView"* %105 to void (%"class.blink::InputTypeView"*)***
  %107 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %107, i64 37
  %109 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %108, align 8
  call void %109(%"class.blink::InputTypeView"* %105) #15
  br label %110

110:                                              ; preds = %103, %32
  ret void
}

declare void @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement15SetEditingValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %53, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %23 = load %"class.blink::InputType"*, %"class.blink::InputType"** %22, align 8
  %24 = bitcast %"class.blink::InputType"* %23 to i1 (%"class.blink::InputType"*)***
  %25 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %25, i64 7
  %27 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::InputType"* %23) #15
  br i1 %28, label %29, label %53

29:                                               ; preds = %21
  %30 = bitcast %"class.blink::HTMLInputElement"* %0 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*)***
  %31 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*)** %31, i64 197
  %33 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*)** %32, align 8
  tail call void %33(%"class.blink::HTMLInputElement"* %0, %"class.WTF::String"* dereferenceable(8) %1) #15
  %34 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %35 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %34, align 8
  %36 = bitcast %"class.blink::InputTypeView"* %35 to void (%"class.blink::InputTypeView"*)***
  %37 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %37, i64 21
  %39 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %38, align 8
  tail call void %39(%"class.blink::InputTypeView"* %35) #15
  %40 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"* %40, %"class.blink::Node"* %3) #15
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %29
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %29, %45
  %49 = phi i32 [ %47, %45 ], [ 0, %29 ]
  %50 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %51 = tail call zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"* %50, i32 %49, i32 %49, i32 0) #15
  %52 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"* %52) #15
  br label %53

53:                                               ; preds = %15, %21, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement19SetInnerEditorValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement19SetInnerEditorValueERKN3WTF6StringE(%"class.blink::TextControlElement"* %3, %"class.WTF::String"* dereferenceable(8) %1) #15
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %5 = load i16, i16* %4, align 4
  %6 = and i16 %5, -4097
  store i16 %6, i16* %4, align 4
  ret void
}

declare void @_ZN5blink18TextControlElement19SetInnerEditorValueERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement8setValueERKN3WTF6StringERNS_14ExceptionStateENS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %6 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %7 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %7, i64 171
  %9 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %8, align 8
  %10 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %9(%"class.blink::HTMLFormControlElement"* %5) #15
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kFileE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %13, %15
  br i1 %16, label %17, label %26

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.7, i64 0, i64 0)) #15
  br label %31

26:                                               ; preds = %17, %21, %4
  %27 = bitcast %"class.blink::HTMLInputElement"* %0 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %28 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %28, i64 196
  %30 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %29, align 8
  tail call void %30(%"class.blink::HTMLInputElement"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %3, i32 0) #15
  br label %31

31:                                               ; preds = %26, %25
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement8setValueERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  tail call void @_ZNK5blink9InputType39WarnIfValueIsInvalidAndElementIsVisibleERKN3WTF6StringE(%"class.blink::InputType"* %8, %"class.WTF::String"* dereferenceable(8) %1) #15
  %9 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %10 = bitcast %"class.blink::InputType"* %9 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %11 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %11, i64 62
  %13 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::InputType"* %9, %"class.WTF::String"* dereferenceable(8) %1) #15
  br i1 %14, label %15, label %132

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %17 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  call void @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::TextControlElement"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %5) #15
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #15
  br label %34

34:                                               ; preds = %15, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  %35 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  call void @_ZN5blink22HTMLFormControlElement16SetAutofillStateENS_16WebAutofillStateE(%"class.blink::HTMLFormControlElement"* %35, i32 0) #15
  %36 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #15
  call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %36) #15
  %37 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %38, align 8
  %39 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %40 = bitcast %"class.blink::InputType"* %39 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %41 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %41, i64 43
  %43 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %42, align 8
  %44 = call %"class.WTF::StringImpl"* %43(%"class.blink::InputType"* %39, %"class.WTF::String"* dereferenceable(8) %1) #15
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %38, align 8
  %45 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %46 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %46, i64 195
  %48 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %47, align 8
  %49 = call %"class.WTF::StringImpl"* %48(%"class.blink::HTMLInputElement"* %0) #15
  %50 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"* %49) #15
  %51 = xor i1 %50, true
  %52 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %34
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %66

66:                                               ; preds = %34, %62, %65
  %67 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %67, align 8
  %68 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %69 = load i16, i16* %68, align 4
  %70 = or i16 %69, 4096
  store i16 %70, i16* %68, align 4
  %71 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %72 = bitcast %"class.blink::InputType"* %71 to void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)***
  %73 = load void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)**, void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)*, void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)** %73, i64 63
  %75 = load void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)*, void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)** %74, align 8
  call void %75(%"class.blink::InputType"* %71, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext %51, i32 %2, i32 %3) #15
  %76 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %77 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %76, align 8
  %78 = bitcast %"class.blink::InputTypeView"* %77 to void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)***
  %79 = load void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)**, void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)*, void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)** %79, i64 43
  %81 = load void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)*, void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)** %80, align 8
  call void %81(%"class.blink::InputTypeView"* %77, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext %51) #15
  br i1 %50, label %114, label %82

82:                                               ; preds = %66
  %83 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %84 = bitcast %"class.blink::ListedElement.base"* %83 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"* %84) #15
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %114

92:                                               ; preds = %82, %88
  %93 = load i16, i16* %68, align 4
  %94 = and i16 %93, 16384
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %114, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::Document"*, %"class.blink::Document"** %99, align 8
  %101 = call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %100) #15
  %102 = icmp eq %"class.blink::Page"* %101, null
  br i1 %102, label %114, label %103

103:                                              ; preds = %96
  %104 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %97, align 8
  %105 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %104, i64 0, i32 2, i32 0, i32 0
  %106 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %107 = call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %106) #15
  %108 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %107, i64 0, i32 7, i32 0, i32 0
  %109 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %108, align 8
  %110 = bitcast %"class.blink::ChromeClient"* %109 to void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)***
  %111 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)** %111, i64 114
  %113 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLInputElement"*)** %112, align 8
  call void %113(%"class.blink::ChromeClient"* %109, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #15
  br label %114

114:                                              ; preds = %92, %66, %96, %88, %103
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #15
  br label %130

130:                                              ; preds = %114, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #15
  %131 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #15
  call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %131) #15
  br label %132

132:                                              ; preds = %4, %130
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement16SetAutofillStateENS_16WebAutofillStateE(%"class.blink::HTMLFormControlElement"*, i32) local_unnamed_addr #1

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement20SetNonAttributeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::String"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #15
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %45 = load i16, i16* %44, align 4
  %46 = or i16 %45, 1
  store i16 %46, i16* %44, align 4
  %47 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.blink::ListedElement.base"* %47 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %48) #15
  %49 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %50 = load %"class.blink::InputType"*, %"class.blink::InputType"** %49, align 8
  tail call void @_ZNK5blink9InputType14InRangeChangedEv(%"class.blink::InputType"* %50) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement30SetNonAttributeValueByUserEditERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement35SetValueBeforeFirstUserEditIfNotSetEv(%"class.blink::TextControlElement"* %3) #15
  tail call void @_ZN5blink16HTMLInputElement20SetNonAttributeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  tail call void @_ZN5blink18TextControlElement23CheckIfValueWasRevertedERKN3WTF6StringE(%"class.blink::TextControlElement"* %3, %"class.WTF::String"* dereferenceable(8) %1) #15
  ret void
}

declare void @_ZN5blink18TextControlElement35SetValueBeforeFirstUserEditIfNotSetEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink18TextControlElement23CheckIfValueWasRevertedERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement10UpdateViewEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 37
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLInputElement11valueAsDateEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Time", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 2
  %10 = bitcast %"class.blink::UseCounter"* %9 to void (%"class.blink::UseCounter"*, i32)***
  %11 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %11, i64 3
  %13 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %12, align 8
  tail call void %13(%"class.blink::UseCounter"* %9, i32 3110) #15
  %14 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 7, i32 0, i32 0
  %15 = load %"class.blink::InputType"*, %"class.blink::InputType"** %14, align 8
  %16 = bitcast %"class.blink::InputType"* %15 to double (%"class.blink::InputType"*)***
  %17 = load double (%"class.blink::InputType"*)**, double (%"class.blink::InputType"*)*** %16, align 8
  %18 = getelementptr inbounds double (%"class.blink::InputType"*)*, double (%"class.blink::InputType"*)** %17, i64 15
  %19 = load double (%"class.blink::InputType"*)*, double (%"class.blink::InputType"*)** %18, align 8
  %20 = tail call double %19(%"class.blink::InputType"* %15) #15
  %21 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %22 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %23 = tail call double @llvm.fabs.f64(double %20) #17
  %24 = fcmp ueq double %23, 0x7FF0000000000000
  br i1 %24, label %25, label %26

25:                                               ; preds = %3
  tail call void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* sret %0, %"class.v8::Isolate"* %22) #15
  br label %49

26:                                               ; preds = %3
  %27 = tail call i64 @_ZN4base4Time10FromJsTimeEd(double %20) #15
  %28 = bitcast %"class.base::Time"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.v8::Context"*, %"class.v8::Context"** %30, align 8
  %32 = icmp eq %"class.v8::Context"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::ScriptState"* %2 to %"class.v8::internal::Isolate"**
  %35 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %36 = bitcast %"class.v8::Context"* %31 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %35, i64 %37) #15
  %39 = bitcast i64* %38 to %"class.v8::Context"*
  br label %40

40:                                               ; preds = %33, %26
  %41 = phi %"class.v8::Context"* [ %39, %33 ], [ null, %26 ]
  %42 = call double @_ZNK4base4Time20ToJsTimeIgnoringNullEv(%"class.base::Time"* nonnull %4) #15
  %43 = call %"class.v8::Value"* @_ZN2v84Date3NewENS_5LocalINS_7ContextEEEd(%"class.v8::Context"* %41, double %42) #15
  %44 = icmp eq %"class.v8::Value"* %43, null
  br i1 %44, label %45, label %46, !prof !4

45:                                               ; preds = %40
  call void @_ZN2v82V812ToLocalEmptyEv() #15
  br label %46

46:                                               ; preds = %40, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %47 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %22, %"class.v8::Isolate"** %47, align 8
  %48 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %48, %"class.v8::Isolate"* %22, %"class.v8::Value"* %43) #15
  br label %49

49:                                               ; preds = %46, %25
  ret void
}

declare void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* sret, %"class.v8::Isolate"*) local_unnamed_addr #1

declare i64 @_ZN4base4Time10FromJsTimeEd(double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement14setValueAsDateEPNS_11ScriptStateERKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::optional.2350", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 2
  %11 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %12 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %12, i64 3
  %14 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %13, align 8
  tail call void %14(%"class.blink::UseCounter"* %10, i32 3111) #15
  %15 = getelementptr inbounds %"class.absl::optional.2350", %"class.absl::optional.2350"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #15
  %17 = bitcast %"class.v8::Value"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %21, label %38

21:                                               ; preds = %4
  %22 = add i64 %18, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i64 %18, -4294967296
  %26 = zext i32 %24 to i64
  %27 = or i64 %25, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 67
  br i1 %31, label %32, label %38

32:                                               ; preds = %21
  %33 = add i64 %18, 23
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, -2
  %37 = icmp eq i32 %36, 6
  br i1 %37, label %48, label %38

38:                                               ; preds = %32, %21, %4
  %39 = tail call zeroext i1 @_ZNK2v85Value6IsDateEv(%"class.v8::Value"* %16) #15
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0)) #15
  br label %48

41:                                               ; preds = %38
  %42 = bitcast %"class.v8::Value"* %16 to %"class.v8::Date"*
  %43 = tail call double @_ZNK2v84Date7ValueOfEv(%"class.v8::Date"* %42) #15
  %44 = tail call double @llvm.fabs.f64(double %43) #17
  %45 = fcmp ueq double %44, 0x7FF0000000000000
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = tail call i64 @_ZN4base4Time10FromJsTimeEd(double %43) #15
  br label %48

48:                                               ; preds = %32, %40, %41, %46
  %49 = phi i8 [ 1, %46 ], [ 0, %40 ], [ 0, %32 ], [ 0, %41 ]
  %50 = phi i64 [ %47, %46 ], [ undef, %40 ], [ undef, %32 ], [ undef, %41 ]
  store i8 %49, i8* %15, align 8
  %51 = getelementptr inbounds %"class.absl::optional.2350", %"class.absl::optional.2350"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %57 = load %"class.blink::InputType"*, %"class.blink::InputType"** %56, align 8
  %58 = bitcast %"class.blink::InputType"* %57 to void (%"class.blink::InputType"*, %"class.absl::optional.2350"*, %"class.blink::ExceptionState"*)***
  %59 = load void (%"class.blink::InputType"*, %"class.absl::optional.2350"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::InputType"*, %"class.absl::optional.2350"*, %"class.blink::ExceptionState"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.absl::optional.2350"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, %"class.absl::optional.2350"*, %"class.blink::ExceptionState"*)** %59, i64 16
  %61 = load void (%"class.blink::InputType"*, %"class.absl::optional.2350"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, %"class.absl::optional.2350"*, %"class.blink::ExceptionState"*)** %60, align 8
  call void %61(%"class.blink::InputType"* %57, %"class.absl::optional.2350"* nonnull dereferenceable(16) %5, %"class.blink::ExceptionState"* dereferenceable(72) %3) #15
  br label %62

62:                                               ; preds = %48, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  ret void
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink16HTMLInputElement13valueAsNumberEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to double (%"class.blink::InputType"*)***
  %5 = load double (%"class.blink::InputType"*)**, double (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds double (%"class.blink::InputType"*)*, double (%"class.blink::InputType"*)** %5, i64 17
  %7 = load double (%"class.blink::InputType"*)*, double (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call double %7(%"class.blink::InputType"* %3) #15
  ret double %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement16setValueAsNumberEdRNS_14ExceptionStateENS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* nocapture readonly, double, %"class.blink::ExceptionState"* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call double @llvm.fabs.f64(double %1) #17
  %7 = fcmp oeq double %6, 0x7FF0000000000000
  br i1 %7, label %8, label %32

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages16NotAFiniteNumberEdPKc(double %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %13 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %13, i64 3
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, align 8
  call void %15(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5) #15
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #15
  br label %31

31:                                               ; preds = %8, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  br label %39

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %34 = load %"class.blink::InputType"*, %"class.blink::InputType"** %33, align 8
  %35 = bitcast %"class.blink::InputType"* %34 to void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)***
  %36 = load void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)**, void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)** %36, i64 18
  %38 = load void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)** %37, align 8
  tail call void %38(%"class.blink::InputType"* %34, double %1, i32 %3, %"class.blink::ExceptionState"* dereferenceable(72) %2) #15
  br label %39

39:                                               ; preds = %32, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages16NotAFiniteNumberEdPKc(double, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLInputElement10RatioValueEv(%"class.blink::Decimal"* noalias sret, %"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::StepRange", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = alloca %"class.blink::Decimal", align 8
  %13 = bitcast %"class.blink::StepRange"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 120, i1 false)
  %14 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 7, i32 0, i32 0
  %15 = load %"class.blink::InputType"*, %"class.blink::InputType"** %14, align 8, !noalias !26
  %16 = bitcast %"class.blink::InputType"* %15 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %17 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %16, align 8, !noalias !26
  %18 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %17, i64 31
  %19 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %18, align 8, !noalias !26
  call void %19(%"class.blink::StepRange"* nonnull sret %8, %"class.blink::InputType"* %15, i32 0) #15
  %20 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  %21 = bitcast %"class.WTF::String"* %10 to i8*
  %22 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  %23 = bitcast %"class.blink::HTMLInputElement"* %1 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %24 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %24, i64 195
  %26 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %25, align 8
  %27 = call %"class.WTF::StringImpl"* %26(%"class.blink::HTMLInputElement"* %1) #15
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %30 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #15, !noalias !29
  %31 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15, !noalias !29
  %32 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %8, i64 0, i32 1
  %33 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %8, i64 0, i32 0
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %6, %"class.blink::Decimal"* %32, %"class.blink::Decimal"* nonnull dereferenceable(24) %33) #15, !noalias !29
  %34 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #15, !noalias !29
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %7, i32 2) #15, !noalias !29
  call void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* nonnull sret %5, %"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #15, !noalias !29
  call void @_ZNK5blink9StepRange10ClampValueERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %11, %"class.blink::StepRange"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #15, !noalias !29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15, !noalias !29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15, !noalias !29
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %9, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #15
  br label %50

50:                                               ; preds = %2, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  %51 = bitcast %"class.blink::Decimal"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #15
  call void @_ZNK5blink9StepRange10ClampValueERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %12, %"class.blink::StepRange"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %9) #15
  %52 = call zeroext i1 @_ZNK5blink7DecimaleqERKS0_(%"class.blink::Decimal"* %32, %"class.blink::Decimal"* nonnull dereferenceable(24) %33) #15, !noalias !32
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* %0, i32 0) #15
  br label %57

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::Decimal"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #15, !noalias !32
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %3, %"class.blink::Decimal"* nonnull %12, %"class.blink::Decimal"* dereferenceable(24) %32) #15
  %56 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #15, !noalias !32
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %4, %"class.blink::Decimal"* nonnull %33, %"class.blink::Decimal"* dereferenceable(24) %32) #15
  call void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* sret %0, %"class.blink::Decimal"* nonnull %3, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #15, !noalias !32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #15, !noalias !32
  br label %57

57:                                               ; preds = %53, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #15
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %13) #15
  ret void
}

declare void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK5blink9StepRange10ClampValueERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::StepRange"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement20SetValueFromRendererERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  call void @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::TextControlElement"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br label %22

22:                                               ; preds = %2, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  call void @_ZN5blink18TextControlElement35SetValueBeforeFirstUserEditIfNotSetEv(%"class.blink::TextControlElement"* %4) #15
  %23 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #15
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !4

41:                                               ; preds = %32
  call void @llvm.trap() #15
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %42, %27, %22
  %45 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %46 = bitcast %"class.WTF::String"* %23 to i64*
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  store i64 %45, i64* %46, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #15
  br label %63

63:                                               ; preds = %44, %59, %62
  %64 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %65 = load i16, i16* %64, align 4
  %66 = and i16 %65, -4098
  %67 = or i16 %66, 1
  store i16 %67, i16* %64, align 4
  call void @_ZN5blink18TextControlElement23CheckIfValueWasRevertedERKN3WTF6StringE(%"class.blink::TextControlElement"* %4, %"class.WTF::String"* dereferenceable(8) %1) #15
  %68 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %69 = load %"class.blink::InputType"*, %"class.blink::InputType"** %68, align 8
  %70 = bitcast %"class.blink::InputType"* %69 to i1 (%"class.blink::InputType"*)***
  %71 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %70, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %71, i64 7
  %73 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %72, align 8
  %74 = call zeroext i1 %73(%"class.blink::InputType"* %69) #15
  br i1 %74, label %77, label %75

75:                                               ; preds = %63
  %76 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  call void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"* %76) #15
  br label %77

77:                                               ; preds = %75, %63
  %78 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast %"class.blink::ListedElement.base"* %78 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"* %79) #15
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %79) #15
  %80 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  call void @_ZN5blink22HTMLFormControlElement16SetAutofillStateENS_16WebAutofillStateE(%"class.blink::HTMLFormControlElement"* %80, i32 0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink16HTMLInputElement23PreDispatchEventHandlerERNS_5EventE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kTextInputE, align 8
  %4 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %5, %7
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %11 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %10, align 8
  %12 = bitcast %"class.blink::InputTypeView"* %11 to i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)***
  %13 = load i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)**, i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*, i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)** %13, i64 13
  %15 = load i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*, i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::InputTypeView"* %11, %"class.blink::Event"* dereferenceable(104) %1) #15
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  br label %23

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %21 = load i16, i16* %20, align 8
  %22 = or i16 %21, 8
  store i16 %22, i16* %20, align 8
  br label %55

23:                                               ; preds = %17, %2
  %24 = phi %"class.WTF::StringImpl"* [ %18, %17 ], [ %5, %2 ]
  %25 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %24, %27
  br i1 %28, label %29, label %55

29:                                               ; preds = %23
  %30 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %31 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %31, i64 12
  %33 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::Event"* %1) #15
  %35 = icmp eq %"class.blink::Event"* %1, null
  %36 = xor i1 %34, true
  %37 = or i1 %35, %36
  br i1 %37, label %55, label %38

38:                                               ; preds = %29
  %39 = bitcast %"class.blink::Event"* %1 to %"class.blink::MouseEvent"*
  %40 = bitcast %"class.blink::Event"* %1 to i16 (%"class.blink::MouseEvent"*)***
  %41 = load i16 (%"class.blink::MouseEvent"*)**, i16 (%"class.blink::MouseEvent"*)*** %40, align 8
  %42 = getelementptr inbounds i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %41, i64 33
  %43 = load i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %42, align 8
  %44 = tail call signext i16 %43(%"class.blink::MouseEvent"* nonnull %39) #15
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %48 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %47, align 8
  %49 = bitcast %"class.blink::InputTypeView"* %48 to %"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)***
  %50 = load %"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)**, %"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)*, %"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)** %50, i64 6
  %52 = load %"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)*, %"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)** %51, align 8
  %53 = tail call %"class.blink::ClickHandlingState"* %52(%"class.blink::InputTypeView"* %48) #15
  %54 = getelementptr inbounds %"class.blink::ClickHandlingState", %"class.blink::ClickHandlingState"* %53, i64 0, i32 0
  br label %55

55:                                               ; preds = %23, %46, %38, %29, %19
  %56 = phi %"class.blink::EventDispatchHandlingState"* [ null, %19 ], [ null, %23 ], [ %54, %46 ], [ null, %38 ], [ null, %29 ]
  ret %"class.blink::EventDispatchHandlingState"* %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::EventDispatchHandlingState"* %2, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %6, align 8
  %8 = bitcast %"class.blink::EventDispatchHandlingState"* %2 to %"class.blink::ClickHandlingState"*
  %9 = bitcast %"class.blink::InputTypeView"* %7 to void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)***
  %10 = load void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)** %10, i64 7
  %12 = load void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)** %11, align 8
  tail call void %12(%"class.blink::InputTypeView"* %7, %"class.blink::Event"* dereferenceable(104) %1, %"class.blink::ClickHandlingState"* nonnull dereferenceable(24) %8) #15
  br label %13

13:                                               ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLInputElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.blink::Persistent.2539", align 8
  %6 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %7 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %7, i64 12
  %9 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::Event"* %1) #15
  %11 = bitcast %"class.blink::Event"* %1 to %"class.blink::MouseEvent"*
  %12 = select i1 %10, %"class.blink::MouseEvent"* %11, %"class.blink::MouseEvent"* null
  %13 = icmp ne %"class.blink::MouseEvent"* %12, null
  br i1 %13, label %14, label %39

14:                                               ; preds = %2
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %16 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %39

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::MouseEvent"* %12 to i16 (%"class.blink::MouseEvent"*)***
  %23 = load i16 (%"class.blink::MouseEvent"*)**, i16 (%"class.blink::MouseEvent"*)*** %22, align 8
  %24 = getelementptr inbounds i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %23, i64 33
  %25 = load i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %24, align 8
  %26 = tail call signext i16 %25(%"class.blink::MouseEvent"* nonnull %12) #15
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %30 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %29, align 8
  %31 = bitcast %"class.blink::InputTypeView"* %30 to void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)***
  %32 = load void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)** %32, i64 4
  %34 = load void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)** %33, align 8
  tail call void %34(%"class.blink::InputTypeView"* %30, %"class.blink::MouseEvent"* dereferenceable(296) %11) #15
  %35 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %36 = load i16, i16* %35, align 8
  %37 = and i16 %36, 64
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %308

39:                                               ; preds = %28, %21, %14, %2
  %40 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %6, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %40, i64 14
  %42 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::Event"* %1) #15
  %44 = bitcast %"class.blink::Event"* %1 to %"class.blink::KeyboardEvent"*
  %45 = select i1 %43, %"class.blink::KeyboardEvent"* %44, %"class.blink::KeyboardEvent"* null
  %46 = icmp ne %"class.blink::KeyboardEvent"* %45, null
  br i1 %46, label %47, label %65

47:                                               ; preds = %39
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kKeydownE, align 8
  %49 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  br i1 %53, label %54, label %65

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %56 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %55, align 8
  %57 = bitcast %"class.blink::InputTypeView"* %56 to void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)***
  %58 = load void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)** %58, i64 8
  %60 = load void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)** %59, align 8
  tail call void %60(%"class.blink::InputTypeView"* %56, %"class.blink::KeyboardEvent"* nonnull dereferenceable(176) %45) #15
  %61 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %62 = load i16, i16* %61, align 8
  %63 = and i16 %62, 64
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %308

65:                                               ; preds = %54, %47, %39
  %66 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %67 = load %"class.blink::InputType"*, %"class.blink::InputType"** %66, align 8
  %68 = bitcast %"class.blink::InputType"* %67 to i1 (%"class.blink::InputType"*)***
  %69 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %69, i64 7
  %71 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %70, align 8
  %72 = tail call zeroext i1 %71(%"class.blink::InputType"* %67) #15
  br i1 %72, label %73, label %91

73:                                               ; preds = %65
  %74 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kKeydownE, align 8
  %75 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %76, %78
  br i1 %79, label %85, label %80

80:                                               ; preds = %73
  %81 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kKeypressE, align 8
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %76, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %73, %80
  %86 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement19DefaultEventHandlerERNS_5EventE(%"class.blink::TextControlElement"* %86, %"class.blink::Event"* dereferenceable(104) %1) #15
  %87 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %88 = load i16, i16* %87, align 8
  %89 = and i16 %88, 64
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %91, label %308

91:                                               ; preds = %85, %65, %80
  %92 = phi i1 [ true, %85 ], [ false, %80 ], [ false, %65 ]
  %93 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kDOMActivateE, align 8
  %94 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %95, %97
  br i1 %98, label %99, label %110

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %101 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %100, align 8
  %102 = bitcast %"class.blink::InputTypeView"* %101 to void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)***
  %103 = load void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)** %103, i64 18
  %105 = load void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)** %104, align 8
  tail call void %105(%"class.blink::InputTypeView"* %101, %"class.blink::Event"* dereferenceable(104) %1) #15
  %106 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %107 = load i16, i16* %106, align 8
  %108 = and i16 %107, 64
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %110, label %308

110:                                              ; preds = %99, %91
  br i1 %46, label %111, label %147

111:                                              ; preds = %110
  %112 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kKeypressE, align 8
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %114 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %112, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %113, %115
  br i1 %116, label %117, label %130

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %119 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %118, align 8
  %120 = bitcast %"class.blink::InputTypeView"* %119 to void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)***
  %121 = load void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)** %121, i64 9
  %123 = load void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)** %122, align 8
  tail call void %123(%"class.blink::InputTypeView"* %119, %"class.blink::KeyboardEvent"* nonnull dereferenceable(176) %45) #15
  %124 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %125 = load i16, i16* %124, align 8
  %126 = and i16 %125, 64
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %128, label %308

128:                                              ; preds = %117
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  br label %130

130:                                              ; preds = %128, %111
  %131 = phi %"class.WTF::StringImpl"* [ %129, %128 ], [ %113, %111 ]
  %132 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kKeyupE, align 8
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %131, %134
  br i1 %135, label %136, label %147

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %138 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %137, align 8
  %139 = bitcast %"class.blink::InputTypeView"* %138 to void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)***
  %140 = load void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)** %140, i64 10
  %142 = load void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)** %141, align 8
  tail call void %142(%"class.blink::InputTypeView"* %138, %"class.blink::KeyboardEvent"* nonnull dereferenceable(176) %45) #15
  %143 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %144 = load i16, i16* %143, align 8
  %145 = and i16 %144, 64
  %146 = icmp eq i16 %145, 0
  br i1 %146, label %147, label %308

147:                                              ; preds = %136, %110, %130
  %148 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %149 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %148, align 8
  %150 = bitcast %"class.blink::InputTypeView"* %149 to i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)***
  %151 = load i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)**, i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*** %150, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*, i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)** %151, i64 13
  %153 = load i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*, i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)** %152, align 8
  %154 = tail call zeroext i1 %153(%"class.blink::InputTypeView"* %149, %"class.blink::Event"* dereferenceable(104) %1) #15
  br i1 %154, label %155, label %266

155:                                              ; preds = %147
  %156 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %157 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %158 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %157, align 8
  %159 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %158, i64 171
  %160 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %159, align 8
  %161 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %160(%"class.blink::HTMLFormControlElement"* %156) #15
  %162 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kSearchE, align 8
  %163 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %161, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %164, %166
  br i1 %167, label %168, label %246

168:                                              ; preds = %155
  %169 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %170 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %170, i64 0, i32 2, i32 0, i32 0
  %172 = load %"class.blink::Document"*, %"class.blink::Document"** %171, align 8
  %173 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %172, i8 zeroext 2) #15
  %174 = bitcast %"class.base::SingleThreadTaskRunner"* %173 to %"class.base::TaskRunner"*
  %175 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %175) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10, i64 0, i64 0), i32 1414) #15
  %176 = bitcast %"class.blink::Persistent.2539"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176) #15
  %177 = getelementptr inbounds %"class.blink::Persistent.2539", %"class.blink::Persistent.2539"* %5, i64 0, i32 0
  %178 = getelementptr inbounds %"class.blink::Persistent.2539", %"class.blink::Persistent.2539"* %5, i64 0, i32 0, i32 0
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %178, align 8, !alias.scope !35
  %179 = getelementptr inbounds %"class.blink::Persistent.2539", %"class.blink::Persistent.2539"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %179, align 8, !alias.scope !35
  %180 = ptrtoint %"class.blink::HTMLInputElement"* %0 to i64
  switch i64 %180, label %181 [
    i64 0, label %196
    i64 -1, label %196
  ]

181:                                              ; preds = %168
  %182 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8, !noalias !35
  %183 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %182, i64 0, i32 0, i32 0
  %184 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %183, align 8, !noalias !35
  %185 = icmp eq %"class.blink::PersistentNode"* %184, null
  br i1 %185, label %186, label %189, !prof !4

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %182, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %187) #15
  %188 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %183, align 8
  br label %189

189:                                              ; preds = %186, %181
  %190 = phi %"class.blink::PersistentNode"* [ %188, %186 ], [ %184, %181 ]
  %191 = bitcast %"class.blink::PersistentNode"* %190 to i64*
  %192 = load i64, i64* %191, align 8, !noalias !35
  %193 = bitcast %"class.blink::PersistentRegion"* %182 to i64*
  store i64 %192, i64* %193, align 8, !noalias !35
  %194 = bitcast %"class.blink::PersistentNode"* %190 to %"class.blink::PersistentBase.2540"**
  store %"class.blink::PersistentBase.2540"* %177, %"class.blink::PersistentBase.2540"** %194, align 8, !noalias !35
  %195 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %190, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16HTMLInputElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %195, align 8
  store %"class.blink::PersistentNode"* %190, %"class.blink::PersistentNode"** %179, align 8, !alias.scope !35
  br label %196

196:                                              ; preds = %168, %168, %189
  %197 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %197, align 8, !alias.scope !38
  %198 = call i8* @_Znwm(i64 64) #16, !noalias !41
  %199 = bitcast i8* %198 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %199, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink16HTMLInputElementEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink16HTMLInputElementEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !41
  %200 = getelementptr inbounds i8, i8* %198, i64 32
  %201 = bitcast i8* %200 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLInputElement"*)* @_ZN5blink16HTMLInputElement8OnSearchEv to i64), i64 0>, <2 x i64>* %201, align 8, !noalias !41
  %202 = getelementptr inbounds i8, i8* %198, i64 48
  %203 = bitcast %"class.blink::Persistent.2539"* %5 to i64*
  %204 = load i64, i64* %203, align 8, !noalias !41
  %205 = bitcast i8* %202 to i64*
  store i64 %204, i64* %205, align 8, !noalias !41
  %206 = getelementptr inbounds i8, i8* %198, i64 56
  %207 = bitcast i8* %206 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %207, align 8, !noalias !41
  switch i64 %204, label %208 [
    i64 0, label %223
    i64 -1, label %223
  ]

208:                                              ; preds = %196
  %209 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8, !noalias !41
  %210 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %210, align 8, !noalias !41
  %212 = icmp eq %"class.blink::PersistentNode"* %211, null
  br i1 %212, label %213, label %216, !prof !4

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %209, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %214) #15, !noalias !41
  %215 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %210, align 8, !noalias !41
  br label %216

216:                                              ; preds = %213, %208
  %217 = phi %"class.blink::PersistentNode"* [ %215, %213 ], [ %211, %208 ]
  %218 = bitcast %"class.blink::PersistentNode"* %217 to i64*
  %219 = load i64, i64* %218, align 8, !noalias !41
  %220 = bitcast %"class.blink::PersistentRegion"* %209 to i64*
  store i64 %219, i64* %220, align 8, !noalias !41
  %221 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %217, i64 0, i32 0
  store i8* %202, i8** %221, align 8, !noalias !41
  %222 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %217, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16HTMLInputElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %222, align 8, !noalias !41
  store %"class.blink::PersistentNode"* %217, %"class.blink::PersistentNode"** %207, align 8, !noalias !41
  br label %223

223:                                              ; preds = %196, %196, %216
  %224 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %198, i8** %224, align 8, !alias.scope !41
  %225 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %174, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #15
  %226 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %226) #15
  %227 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %179, align 8
  %228 = icmp eq %"class.blink::PersistentNode"* %227, null
  br i1 %228, label %236, label %229

229:                                              ; preds = %223
  %230 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %231 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %230, i64 0, i32 0, i32 0
  %232 = bitcast %"class.blink::PersistentRegion"* %230 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.blink::PersistentNode"* %227 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %227, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %235, align 8
  store %"class.blink::PersistentNode"* %227, %"class.blink::PersistentNode"** %231, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %179, align 8
  br label %236

236:                                              ; preds = %223, %229
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %175) #15
  %237 = icmp eq %"class.base::SingleThreadTaskRunner"* %173, null
  br i1 %237, label %246, label %238

238:                                              ; preds = %236
  %239 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %173, i64 0, i32 0, i32 0, i32 1
  %240 = getelementptr inbounds %"class.base::RefCountedThreadSafe.441", %"class.base::RefCountedThreadSafe.441"* %239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = atomicrmw sub i32* %240, i32 1 acq_rel
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.base::RefCountedThreadSafe.441", %"class.base::RefCountedThreadSafe.441"* %239, i64 -2
  %245 = bitcast %"class.base::RefCountedThreadSafe.441"* %244 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %245) #15
  br label %246

246:                                              ; preds = %243, %238, %236, %155
  %247 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  call void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"* %247) #15
  %248 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %148, align 8
  %249 = bitcast %"class.blink::InputTypeView"* %248 to %"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)***
  %250 = load %"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)**, %"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)*** %249, align 8
  %251 = getelementptr inbounds %"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)*, %"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)** %250, i64 14
  %252 = load %"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)*, %"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)** %251, align 8
  %253 = call %"class.blink::HTMLFormElement"* %252(%"class.blink::InputTypeView"* %248) #15
  %254 = icmp eq %"class.blink::HTMLFormElement"* %253, null
  br i1 %254, label %262, label %255

255:                                              ; preds = %246
  %256 = load %"class.blink::InputType"*, %"class.blink::InputType"** %66, align 8
  %257 = bitcast %"class.blink::InputType"* %256 to i1 (%"class.blink::InputType"*)***
  %258 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %257, align 8
  %259 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %258, i64 7
  %260 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %259, align 8
  %261 = call zeroext i1 %260(%"class.blink::InputType"* %256) #15
  call void @_ZN5blink15HTMLFormElement16SubmitImplicitlyERKNS_5EventEb(%"class.blink::HTMLFormElement"* nonnull %253, %"class.blink::Event"* dereferenceable(104) %1, i1 zeroext %261) #15
  br label %262

262:                                              ; preds = %246, %255
  %263 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %264 = load i16, i16* %263, align 8
  %265 = or i16 %264, 64
  store i16 %265, i16* %263, align 8
  br label %308

266:                                              ; preds = %147
  %267 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %6, align 8
  %268 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %267, i64 23
  %269 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %268, align 8
  %270 = tail call zeroext i1 %269(%"class.blink::Event"* %1) #15
  br i1 %270, label %271, label %278

271:                                              ; preds = %266
  %272 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %148, align 8
  %273 = bitcast %"class.blink::Event"* %1 to %"class.blink::BeforeTextInsertedEvent"*
  %274 = bitcast %"class.blink::InputTypeView"* %272 to void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)***
  %275 = load void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)*** %274, align 8
  %276 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)** %275, i64 11
  %277 = load void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)** %276, align 8
  tail call void %277(%"class.blink::InputTypeView"* %272, %"class.blink::BeforeTextInsertedEvent"* dereferenceable(112) %273) #15
  br label %278

278:                                              ; preds = %271, %266
  br i1 %13, label %279, label %295

279:                                              ; preds = %278
  %280 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kMousedownE, align 8
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %282 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %280, i64 0, i32 0, i32 0, i32 0
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %281, %283
  br i1 %284, label %285, label %295

285:                                              ; preds = %279
  %286 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %148, align 8
  %287 = bitcast %"class.blink::InputTypeView"* %286 to void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)***
  %288 = load void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)*** %287, align 8
  %289 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)** %288, i64 5
  %290 = load void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)** %289, align 8
  tail call void %290(%"class.blink::InputTypeView"* %286, %"class.blink::MouseEvent"* nonnull dereferenceable(296) %12) #15
  %291 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %292 = load i16, i16* %291, align 8
  %293 = and i16 %292, 64
  %294 = icmp eq i16 %293, 0
  br i1 %294, label %295, label %308

295:                                              ; preds = %285, %279, %278
  %296 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %148, align 8
  %297 = bitcast %"class.blink::InputTypeView"* %296 to void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)***
  %298 = load void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*** %297, align 8
  %299 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)** %298, i64 12
  %300 = load void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)** %299, align 8
  tail call void %300(%"class.blink::InputTypeView"* %296, %"class.blink::Event"* dereferenceable(104) %1) #15
  br i1 %92, label %308, label %301

301:                                              ; preds = %295
  %302 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %303 = load i16, i16* %302, align 8
  %304 = and i16 %303, 64
  %305 = icmp eq i16 %304, 0
  br i1 %305, label %306, label %308

306:                                              ; preds = %301
  %307 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement19DefaultEventHandlerERNS_5EventE(%"class.blink::TextControlElement"* %307, %"class.blink::Event"* dereferenceable(104) %1) #15
  br label %308

308:                                              ; preds = %28, %54, %85, %99, %117, %136, %285, %301, %295, %306, %262
  ret void
}

declare void @_ZN5blink18TextControlElement19DefaultEventHandlerERNS_5EventE(%"class.blink::TextControlElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement8OnSearchEv(%"class.blink::HTMLInputElement"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to void (%"class.blink::InputType"*)***
  %5 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %5, i64 86
  %7 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %6, align 8
  tail call void %7(%"class.blink::InputType"* %3) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink15HTMLFormElement16SubmitImplicitlyERKNS_5EventEb(%"class.blink::HTMLFormElement"*, %"class.blink::Event"* dereferenceable(104), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLInputElement28CanTriggerImplicitSubmissionEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 7
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement21HasActivationBehaviorEv(%"class.blink::HTMLInputElement"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16HTMLInputElement29WillRespondToMouseClickEventsEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %4 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %4, i64 138
  %6 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::HTMLFormControlElement"* %2) #15
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"* %9) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i1 [ %10, %8 ], [ true, %1 ]
  ret i1 %12
}

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement14IsURLAttributeERKNS_9AttributeE(%"class.blink::HTMLInputElement"* nocapture readnone, %"class.blink::Attribute"* nocapture readonly dereferenceable(16)) unnamed_addr #4 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kFormactionAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  ret i1 %13

14:                                               ; preds = %2
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLInputElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)***
  %6 = load i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)** %6, i64 75
  %8 = load i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputType"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %1) #15
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %11, %"class.blink::QualifiedName"* dereferenceable(8) %1) #15
  br label %13

13:                                               ; preds = %10, %2
  %14 = phi i1 [ true, %2 ], [ %12, %10 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink16HTMLInputElement24SubResourceAttributeNameEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to %"class.blink::QualifiedName"* (%"class.blink::InputType"*)***
  %5 = load %"class.blink::QualifiedName"* (%"class.blink::InputType"*)**, %"class.blink::QualifiedName"* (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName"* (%"class.blink::InputType"*)*, %"class.blink::QualifiedName"* (%"class.blink::InputType"*)** %5, i64 76
  %7 = load %"class.blink::QualifiedName"* (%"class.blink::InputType"*)*, %"class.blink::QualifiedName"* (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call dereferenceable(8) %"class.blink::QualifiedName"* %7(%"class.blink::InputType"* %3) #15
  ret %"class.blink::QualifiedName"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLInputElement15AcceptMIMETypesEv(%"class.WTF::Vector.807"* noalias sret, %"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kAcceptAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %15 = bitcast %"class.blink::Member.14"* %14 to %"class.blink::Attribute"**
  %16 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %21 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::Attribute"*
  %22 = lshr i32 %9, 1
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"class.blink::Attribute"* [ %21, %19 ], [ %16, %12 ]
  %26 = phi i32 [ %23, %19 ], [ %18, %12 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %50, %30
  %36 = phi %"class.blink::Attribute"* [ %25, %30 ], [ %51, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %32
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %28
  br i1 %52, label %57, label %35

53:                                               ; preds = %45, %35
  %54 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 1
  br label %59

57:                                               ; preds = %50, %53, %24, %2
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.WTF::AtomicString"* [ %58, %57 ], [ %56, %55 ]
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0
  tail call fastcc void @_ZN5blinkL20ParseAcceptAttributeERKN3WTF6StringEPFbS3_E(%"class.WTF::Vector.807"* sret %0, %"class.WTF::String"* dereferenceable(8) %61, i1 (%"class.WTF::String"*)* nonnull @_ZN5blinkL15IsValidMIMETypeERKN3WTF6StringE)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL20ParseAcceptAttributeERKN3WTF6StringEPFbS3_E(%"class.WTF::Vector.807"* noalias sret, %"class.WTF::String"* dereferenceable(8), i1 (%"class.WTF::String"*)* nocapture) unnamed_addr #0 {
  %4 = alloca %"class.WTF::Vector.807", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.807"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %146, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %146, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.WTF::Vector.807"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #15
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %1, i16 zeroext 44, i1 zeroext false, %"class.WTF::Vector.807"* nonnull dereferenceable(16) %4) #15
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %20, align 8
  %23 = load i32, i32* %21, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 %24
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = bitcast %"class.WTF::String"* %5 to i8*
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %30 = bitcast %"class.WTF::String"* %6 to i8*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  br label %71

32:                                               ; preds = %143
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %20, align 8
  br label %34

34:                                               ; preds = %32, %18
  %35 = phi %"class.WTF::String"* [ %33, %32 ], [ %22, %18 ]
  %36 = icmp eq %"class.WTF::String"* %35, null
  br i1 %36, label %70, label %37, !prof !46

37:                                               ; preds = %34
  %38 = bitcast %"class.WTF::String"* %35 to i8*
  %39 = load i32, i32* %21, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %68, label %41, !prof !4

41:                                               ; preds = %37
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  br label %44

44:                                               ; preds = %62, %41
  %45 = phi %"class.WTF::String"* [ %63, %62 ], [ %35, %41 ]
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #15
  br label %62

62:                                               ; preds = %61, %58, %44
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 1
  %64 = icmp eq %"class.WTF::String"* %63, %43
  br i1 %64, label %65, label %44

65:                                               ; preds = %62
  store i32 0, i32* %21, align 4
  %66 = bitcast %"class.WTF::Vector.807"* %4 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %37
  %69 = phi i8* [ %67, %65 ], [ %38, %37 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %20, align 8
  br label %70

70:                                               ; preds = %34, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #15
  br label %146

71:                                               ; preds = %27, %143
  %72 = phi %"class.WTF::String"* [ %22, %27 ], [ %144, %143 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %29, align 8
  %73 = call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %72) #15
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %29, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %143, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %129, label %79

79:                                               ; preds = %75
  %80 = call zeroext i1 %2(%"class.WTF::String"* nonnull dereferenceable(8) %5) #15, !callees !47
  br i1 %80, label %81, label %126

81:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  %82 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* nonnull %5) #15
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %31, align 8
  %83 = load i32, i32* %9, align 4
  %84 = load i32, i32* %8, align 8
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %94, label %86, !prof !4

86:                                               ; preds = %81
  %87 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %88 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %89 = zext i32 %83 to i64
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 %89
  %91 = bitcast %"class.WTF::String"* %90 to i64*
  store i64 %87, i64* %91, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %92 = load i32, i32* %9, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %9, align 4
  br label %110

94:                                               ; preds = %81
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.807"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6) #15
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #15
  br label %110

110:                                              ; preds = %86, %94, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %143

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #15
  br label %143

126:                                              ; preds = %79
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %143, label %129

129:                                              ; preds = %75, %126
  %130 = phi %"class.WTF::StringImpl"* [ %127, %126 ], [ %73, %75 ]
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %129
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %129
  %140 = phi i32 [ %138, %137 ], [ %136, %129 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #15
  br label %143

143:                                              ; preds = %142, %139, %126, %71, %125, %122, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 1
  %145 = icmp eq %"class.WTF::String"* %144, %25
  br i1 %145, label %32, label %71

146:                                              ; preds = %3, %70, %14
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL15IsValidMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) #7 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %78, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %9, label %25, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %78, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.WTF::StringImpl"* %10 to i8*
  %17 = zext i32 %13 to i64
  %18 = tail call i8* @memchr(i8* %16, i32 47, i64 %17) #18
  %19 = icmp eq i8* %18, null
  %20 = ptrtoint i8* %18 to i64
  %21 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %22 = sub i64 %20, %21
  %23 = trunc i64 %22 to i32
  %24 = select i1 %19, i32 -1, i32 %23
  br label %42

25:                                               ; preds = %5
  %26 = bitcast %"class.WTF::StringImpl"* %10 to i16*
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %78, label %30

30:                                               ; preds = %25
  %31 = zext i32 %28 to i64
  br label %32

32:                                               ; preds = %30, %37
  %33 = phi i64 [ %38, %37 ], [ 0, %30 ]
  %34 = getelementptr inbounds i16, i16* %26, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 47
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = add nuw nsw i64 %33, 1
  %39 = icmp eq i64 %38, %31
  br i1 %39, label %78, label %32

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  br label %42

42:                                               ; preds = %15, %40
  %43 = phi i32 [ %13, %15 ], [ %28, %40 ]
  %44 = phi i32 [ %24, %15 ], [ %41, %40 ]
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  %47 = add i32 %43, -1
  %48 = icmp eq i32 %44, %47
  %49 = or i1 %46, %48
  br i1 %49, label %78, label %50

50:                                               ; preds = %42
  %51 = bitcast %"class.WTF::StringImpl"* %10 to i8*
  %52 = bitcast %"class.WTF::StringImpl"* %10 to i16*
  %53 = zext i32 %44 to i64
  %54 = zext i32 %43 to i64
  %55 = icmp eq i32 %43, 0
  br i1 %55, label %78, label %56

56:                                               ; preds = %50, %75
  %57 = phi i64 [ %76, %75 ], [ 0, %50 ]
  %58 = load atomic i32, i32* %6 monotonic, align 4
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds i8, i8* %51, i64 %57
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  br label %68

65:                                               ; preds = %56
  %66 = getelementptr inbounds i16, i16* %52, i64 %57
  %67 = load i16, i16* %66, align 2
  br label %68

68:                                               ; preds = %61, %65
  %69 = phi i16 [ %64, %61 ], [ %67, %65 ]
  %70 = add i16 %69, -33
  %71 = icmp ugt i16 %70, 94
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  switch i16 %69, label %75 [
    i16 47, label %73
    i16 44, label %73
    i16 41, label %73
    i16 40, label %73
    i16 34, label %73
    i16 93, label %73
    i16 92, label %73
    i16 91, label %73
    i16 64, label %73
    i16 63, label %73
    i16 62, label %73
    i16 61, label %73
    i16 60, label %73
    i16 59, label %73
    i16 58, label %73
    i16 125, label %73
    i16 123, label %73
    i16 127, label %73
  ]

73:                                               ; preds = %68, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72
  %74 = icmp eq i64 %57, %53
  br i1 %74, label %75, label %78

75:                                               ; preds = %72, %73
  %76 = add nuw nsw i64 %57, 1
  %77 = icmp ult i64 %76, %54
  br i1 %77, label %56, label %78

78:                                               ; preds = %37, %73, %75, %50, %42, %25, %11, %1
  %79 = phi i1 [ false, %25 ], [ false, %11 ], [ false, %1 ], [ false, %42 ], [ true, %50 ], [ true, %75 ], [ false, %73 ], [ false, %37 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLInputElement20AcceptFileExtensionsEv(%"class.WTF::Vector.807"* noalias sret, %"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kAcceptAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %15 = bitcast %"class.blink::Member.14"* %14 to %"class.blink::Attribute"**
  %16 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %21 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::Attribute"*
  %22 = lshr i32 %9, 1
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"class.blink::Attribute"* [ %21, %19 ], [ %16, %12 ]
  %26 = phi i32 [ %23, %19 ], [ %18, %12 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %50, %30
  %36 = phi %"class.blink::Attribute"* [ %25, %30 ], [ %51, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %32
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %28
  br i1 %52, label %57, label %35

53:                                               ; preds = %45, %35
  %54 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 1
  br label %59

57:                                               ; preds = %50, %53, %24, %2
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.WTF::AtomicString"* [ %58, %57 ], [ %56, %55 ]
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0
  tail call fastcc void @_ZN5blinkL20ParseAcceptAttributeERKN3WTF6StringEPFbS3_E(%"class.WTF::Vector.807"* sret %0, %"class.WTF::String"* dereferenceable(8) %61, i1 (%"class.WTF::String"*)* nonnull @_ZN5blinkL20IsValidFileExtensionERKN3WTF6StringE)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL20IsValidFileExtensionERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) #5 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %13, label %19, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  br label %22

19:                                               ; preds = %9
  %20 = bitcast %"class.WTF::StringImpl"* %14 to i16*
  %21 = load i16, i16* %20, align 2
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i16 [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i16 %23, 46
  br label %25

25:                                               ; preds = %1, %5, %22
  %26 = phi i1 [ %24, %22 ], [ false, %5 ], [ false, %1 ]
  ret i1 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement3AltEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  ret %"class.WTF::AtomicString"* %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement8MultipleEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kMultipleAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %50, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %51, %50 ]
  %36 = phi i32 [ 0, %29 ], [ %52, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %31
  br i1 %39, label %54, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %52 = add i32 %36, 1
  %53 = icmp eq %"class.blink::Attribute"* %51, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %50, %45, %34, %23
  %55 = phi i32 [ -1, %23 ], [ %36, %34 ], [ %36, %45 ], [ -1, %50 ]
  %56 = icmp ne i32 %55, -1
  br label %57

57:                                               ; preds = %1, %54
  %58 = phi i1 [ false, %1 ], [ %56, %54 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement7setSizeEjRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11, i64 0, i64 0)) #15
  br label %9

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kSizeAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %7, %"class.blink::QualifiedName"* dereferenceable(8) %8, i32 %1, i32 20) #15
  br label %9

9:                                                ; preds = %6, %5
  ret void
}

declare void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLInputElement3SrcEv(%"class.blink::KURL"* noalias sret, %"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %8, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %19 = bitcast %"class.blink::Member.14"* %18 to %"class.blink::Attribute"**
  %20 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %17, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %28

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %25 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::Attribute"*
  %26 = lshr i32 %13, 1
  %27 = and i32 %26, 268435455
  br label %28

28:                                               ; preds = %23, %16
  %29 = phi %"class.blink::Attribute"* [ %25, %23 ], [ %20, %16 ]
  %30 = phi i32 [ %27, %23 ], [ %22, %16 ]
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %54, %34
  %40 = phi %"class.blink::Attribute"* [ %29, %34 ], [ %55, %54 ]
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %36
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %44
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::Attribute"* %55, %32
  br i1 %56, label %61, label %39

57:                                               ; preds = %49, %39
  %58 = icmp eq %"class.blink::Attribute"* %40, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 1
  br label %63

61:                                               ; preds = %54, %57, %28, %2
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %63

63:                                               ; preds = %59, %61
  %64 = phi %"class.WTF::AtomicString"* [ %62, %61 ], [ %60, %59 ]
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0
  tail call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret %0, %"class.blink::Document"* %6, %"class.WTF::String"* dereferenceable(8) %65) #15
  ret void
}

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FileList"* @_ZNK5blink16HTMLInputElement5filesEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to %"class.blink::FileList"* (%"class.blink::InputType"*)***
  %5 = load %"class.blink::FileList"* (%"class.blink::InputType"*)**, %"class.blink::FileList"* (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::FileList"* (%"class.blink::InputType"*)*, %"class.blink::FileList"* (%"class.blink::InputType"*)** %5, i64 54
  %7 = load %"class.blink::FileList"* (%"class.blink::InputType"*)*, %"class.blink::FileList"* (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call %"class.blink::FileList"* %7(%"class.blink::InputType"* %3) #15
  ret %"class.blink::FileList"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement8setFilesEPNS_8FileListE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::FileList"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)***
  %6 = load i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)**, i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)*, i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)** %6, i64 55
  %8 = load i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)*, i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputType"* %4, %"class.blink::FileList"* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16HTMLInputElement19ReceiveDroppedFilesEPKNS_8DragDataE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::DragData"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)***
  %6 = load i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)**, i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)*, i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)** %6, i64 58
  %8 = load i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)*, i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::InputType"* %4, %"class.blink::DragData"* %1) #15
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16HTMLInputElement19DroppedFileSystemIdEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %5, i64 59
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::InputType"* %3) #15
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement22CanReceiveDroppedFilesEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 1024
  %5 = icmp ne i16 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement25SetCanReceiveDroppedFilesEb(%"class.blink::HTMLInputElement"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %4 = load i16, i16* %3, align 4
  %5 = lshr i16 %4, 10
  %6 = and i16 %5, 1
  %7 = zext i16 %6 to i32
  %8 = zext i1 %1 to i32
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %29, label %10

10:                                               ; preds = %2
  %11 = zext i1 %1 to i16
  %12 = shl nuw nsw i16 %11, 10
  %13 = and i16 %4, -1025
  %14 = or i16 %13, %12
  store i16 %14, i16* %3, align 4
  %15 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %16 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %15, align 8
  %17 = bitcast %"class.blink::InputTypeView"* %16 to %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)***
  %18 = load %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)**, %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)*, %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)** %18, i64 31
  %20 = load %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)*, %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)** %19, align 8
  %21 = tail call %"class.blink::HTMLInputElement"* %20(%"class.blink::InputTypeView"* %16) #15
  %22 = icmp eq %"class.blink::HTMLInputElement"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.blink::HTMLInputElement"* %21 to void (%"class.blink::Element"*, i1)***
  %26 = load void (%"class.blink::Element"*, i1)**, void (%"class.blink::Element"*, i1)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %26, i64 140
  %28 = load void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %27, align 8
  tail call void %28(%"class.blink::Element"* %24, i1 zeroext %1) #15
  br label %29

29:                                               ; preds = %23, %10, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLInputElement"* @_ZNK5blink16HTMLInputElement12UploadButtonEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)***
  %5 = load %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)**, %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)*, %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)** %5, i64 31
  %7 = load %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)*, %"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call %"class.blink::HTMLInputElement"* %7(%"class.blink::InputTypeView"* %3) #15
  ret %"class.blink::HTMLInputElement"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement13LocalizeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %9 = bitcast %"class.blink::InputType"* %8 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %10, i64 41
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::InputType"* %8, %"class.WTF::String"* dereferenceable(8) %1) #15
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi %"class.WTF::StringImpl"* [ %13, %6 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement9IsInRangeEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %4 = bitcast %"class.blink::HTMLInputElement"* %0 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %5 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %5, i64 129
  %7 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::HTMLFormControlElement"* %3) #15
  br i1 %8, label %9, label %36

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::InputType"*, %"class.blink::InputType"** %10, align 8
  %12 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %14, i64 195
  %16 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %15, align 8
  %17 = tail call %"class.WTF::StringImpl"* %16(%"class.blink::HTMLInputElement"* %0) #15
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = call zeroext i1 @_ZNK5blink9InputType9IsInRangeERKN3WTF6StringE(%"class.blink::InputType"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %9, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %36

36:                                               ; preds = %1, %35
  %37 = phi i1 [ %19, %35 ], [ false, %1 ]
  ret i1 %37
}

declare zeroext i1 @_ZNK5blink9InputType9IsInRangeERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement12IsOutOfRangeEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %4 = bitcast %"class.blink::HTMLInputElement"* %0 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %5 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %5, i64 129
  %7 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::HTMLFormControlElement"* %3) #15
  br i1 %8, label %9, label %36

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::InputType"*, %"class.blink::InputType"** %10, align 8
  %12 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %14, i64 195
  %16 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %15, align 8
  %17 = tail call %"class.WTF::StringImpl"* %16(%"class.blink::HTMLInputElement"* %0) #15
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = call zeroext i1 @_ZNK5blink9InputType12IsOutOfRangeERKN3WTF6StringE(%"class.blink::InputType"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %9, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %36

36:                                               ; preds = %1, %35
  %37 = phi i1 [ %19, %35 ], [ false, %1 ]
  ret i1 %37
}

declare zeroext i1 @_ZNK5blink9InputType12IsOutOfRangeERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement21IsRequiredFormControlEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 25
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %11 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %10) #15
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i1 [ false, %1 ], [ %11, %9 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 72
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %11 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* %10) #15
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i1 [ true, %1 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 72
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %11 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* %10) #15
  %12 = xor i1 %11, true
  br label %13

13:                                               ; preds = %9, %1
  %14 = phi i1 [ false, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement27UpdateClearButtonVisibilityEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 47
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement14WillChangeFormEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = icmp eq %"class.blink::InputType"* %3, null
  %5 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  br i1 %4, label %37, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %8 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %8, i64 171
  %10 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %9, align 8
  %11 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %10(%"class.blink::HTMLFormControlElement"* %5) #15
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %14, %16
  br i1 %17, label %18, label %37

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %20 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %19, align 8
  %21 = icmp eq %"class.blink::HTMLFormElement"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %20, i64 0, i32 3
  br label %33

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 256
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 9
  br label %33

33:                                               ; preds = %29, %22
  %34 = phi %"class.blink::RadioButtonGroupScope"* [ %32, %29 ], [ %23, %22 ]
  %35 = icmp eq %"class.blink::RadioButtonGroupScope"* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @_ZN5blink21RadioButtonGroupScope12RemoveButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %34, %"class.blink::HTMLInputElement"* %0) #15
  br label %37

37:                                               ; preds = %1, %36, %33, %24, %6
  tail call void @_ZN5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"* %5) #15
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16HTMLInputElement14WillChangeFormEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = bitcast i8* %2 to %"class.blink::HTMLInputElement"*
  %4 = getelementptr inbounds i8, i8* %2, i64 280
  %5 = bitcast i8* %4 to %"class.blink::InputType"**
  %6 = load %"class.blink::InputType"*, %"class.blink::InputType"** %5, align 8
  %7 = icmp eq %"class.blink::InputType"* %6, null
  %8 = bitcast i8* %2 to %"class.blink::HTMLFormControlElement"*
  br i1 %7, label %43, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %2 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %11, i64 171
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %13(%"class.blink::HTMLFormControlElement"* %8) #15
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %43

21:                                               ; preds = %9
  %22 = getelementptr inbounds i8, i8* %2, i64 128
  %23 = bitcast i8* %22 to %"class.blink::HTMLFormElement"**
  %24 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %23, align 8
  %25 = icmp eq %"class.blink::HTMLFormElement"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %24, i64 0, i32 3
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %2, i64 16
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 256
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds i8, i8* %2, i64 32
  %36 = bitcast i8* %35 to %"class.blink::TreeScope"**
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 9
  br label %39

39:                                               ; preds = %34, %26
  %40 = phi %"class.blink::RadioButtonGroupScope"* [ %38, %34 ], [ %27, %26 ]
  %41 = icmp eq %"class.blink::RadioButtonGroupScope"* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  tail call void @_ZN5blink21RadioButtonGroupScope12RemoveButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %40, %"class.blink::HTMLInputElement"* %3) #15
  br label %43

43:                                               ; preds = %1, %9, %28, %39, %42
  tail call void @_ZN5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"* %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement13DidChangeFormEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"* %2) #15
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = icmp eq %"class.blink::InputType"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %8 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %8, i64 171
  %10 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %9, align 8
  %11 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %10(%"class.blink::HTMLFormControlElement"* %2) #15
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %14, %16
  br i1 %17, label %18, label %37

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %20 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %19, align 8
  %21 = icmp eq %"class.blink::HTMLFormElement"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %20, i64 0, i32 3
  br label %33

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 256
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 9
  br label %33

33:                                               ; preds = %29, %22
  %34 = phi %"class.blink::RadioButtonGroupScope"* [ %32, %29 ], [ %23, %22 ]
  %35 = icmp eq %"class.blink::RadioButtonGroupScope"* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @_ZN5blink21RadioButtonGroupScope9AddButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %34, %"class.blink::HTMLInputElement"* %0) #15
  br label %37

37:                                               ; preds = %1, %36, %33, %24, %6
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16HTMLInputElement13DidChangeFormEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = bitcast i8* %2 to %"class.blink::HTMLInputElement"*
  %4 = bitcast i8* %2 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"* %4) #15
  %5 = getelementptr inbounds i8, i8* %2, i64 280
  %6 = bitcast i8* %5 to %"class.blink::InputType"**
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = icmp eq %"class.blink::InputType"* %7, null
  br i1 %8, label %43, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %2 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %11, i64 171
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %13(%"class.blink::HTMLFormControlElement"* %4) #15
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %43

21:                                               ; preds = %9
  %22 = getelementptr inbounds i8, i8* %2, i64 128
  %23 = bitcast i8* %22 to %"class.blink::HTMLFormElement"**
  %24 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %23, align 8
  %25 = icmp eq %"class.blink::HTMLFormElement"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %24, i64 0, i32 3
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %2, i64 16
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 256
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds i8, i8* %2, i64 32
  %36 = bitcast i8* %35 to %"class.blink::TreeScope"**
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 9
  br label %39

39:                                               ; preds = %34, %26
  %40 = phi %"class.blink::RadioButtonGroupScope"* [ %38, %34 ], [ %27, %26 ]
  %41 = icmp eq %"class.blink::RadioButtonGroupScope"* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  tail call void @_ZN5blink21RadioButtonGroupScope9AddButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %40, %"class.blink::HTMLInputElement"* %3) #15
  br label %43

43:                                               ; preds = %1, %9, %28, %39, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16HTMLInputElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLInputElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %4 = tail call i32 @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #15
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 256
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %43, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %11 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %10, align 8
  %12 = icmp eq %"class.blink::HTMLFormElement"* %11, null
  br i1 %12, label %13, label %43

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %15 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %15, i64 171
  %17 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %16, align 8
  %18 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %17(%"class.blink::HTMLFormControlElement"* %3) #15
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %43

25:                                               ; preds = %13
  %26 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %10, align 8
  %27 = icmp eq %"class.blink::HTMLFormElement"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %26, i64 0, i32 3
  br label %39

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 256
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 9
  br label %39

39:                                               ; preds = %35, %28
  %40 = phi %"class.blink::RadioButtonGroupScope"* [ %38, %35 ], [ %29, %28 ]
  %41 = icmp eq %"class.blink::RadioButtonGroupScope"* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  tail call void @_ZN5blink21RadioButtonGroupScope9AddButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %40, %"class.blink::HTMLInputElement"* %0) #15
  br label %43

43:                                               ; preds = %2, %42, %39, %30, %13, %9
  tail call void @_ZN5blink16HTMLInputElement32ResetListAttributeTargetObserverEv(%"class.blink::HTMLInputElement"* %0)
  %44 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kFormactionAttrE, align 8
  tail call void @_ZN5blink7Element41LogAddElementIfIsolatedWorldAndInDocumentEPKcRKNS_13QualifiedNameES5_(%"class.blink::Element"* %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %"class.blink::QualifiedName"* dereferenceable(8) %45, %"class.blink::QualifiedName"* dereferenceable(8) %46) #15
  ret i32 1
}

declare i32 @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN5blink7Element41LogAddElementIfIsolatedWorldAndInDocumentEPKcRKNS_13QualifiedNameES5_(%"class.blink::Element"*, i8*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLInputElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %3, align 8
  %5 = bitcast %"class.blink::InputTypeView"* %4 to void (%"class.blink::InputTypeView"*)***
  %6 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, i64 26
  %8 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %7, align 8
  tail call void %8(%"class.blink::InputTypeView"* %4) #15
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %48, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %15 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %14, align 8
  %16 = icmp eq %"class.blink::HTMLFormElement"* %15, null
  br i1 %16, label %17, label %48

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %19 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %20 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %20, i64 171
  %22 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %21, align 8
  %23 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %22(%"class.blink::HTMLFormControlElement"* %18) #15
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %26, %28
  br i1 %29, label %30, label %48

30:                                               ; preds = %17
  %31 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %14, align 8
  %32 = icmp eq %"class.blink::HTMLFormElement"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %31, i64 0, i32 3
  br label %44

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 256
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 9
  br label %44

44:                                               ; preds = %40, %33
  %45 = phi %"class.blink::RadioButtonGroupScope"* [ %43, %40 ], [ %34, %33 ]
  %46 = icmp eq %"class.blink::RadioButtonGroupScope"* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  tail call void @_ZN5blink21RadioButtonGroupScope12RemoveButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %45, %"class.blink::HTMLInputElement"* %0) #15
  br label %48

48:                                               ; preds = %2, %47, %44, %35, %17, %13
  %49 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"* %49, %"class.blink::ContainerNode"* dereferenceable(80) %1) #15
  tail call void @_ZN5blink16HTMLInputElement32ResetListAttributeTargetObserverEv(%"class.blink::HTMLInputElement"* %0)
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLInputElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLImageLoader"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %4, i64 0, i32 0
  tail call void @_ZN5blink11ImageLoader27ElementDidMoveToNewDocumentEv(%"class.blink::ImageLoader"* %7) #15
  br label %8

8:                                                ; preds = %2, %6
  %9 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %10 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %11, i64 171
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %13(%"class.blink::HTMLFormControlElement"* %9) #15
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 9
  tail call void @_ZN5blink21RadioButtonGroupScope12RemoveButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* %24, %"class.blink::HTMLInputElement"* %0) #15
  br label %25

25:                                               ; preds = %21, %8
  tail call void @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLFormControlElement"* %9, %"class.blink::Document"* dereferenceable(2848) %1) #15
  ret void
}

declare void @_ZN5blink11ImageLoader27ElementDidMoveToNewDocumentEv(%"class.blink::ImageLoader"*) local_unnamed_addr #1

declare void @_ZN5blink21RadioButtonGroupScope12RemoveButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"*, %"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement18RecalcWillValidateEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 22
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.blink::ListedElement.base"* %10 to %"class.blink::ListedElement"*
  %12 = tail call zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"* %11) #15
  br label %13

13:                                               ; preds = %9, %1
  %14 = phi i1 [ false, %1 ], [ %12, %9 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement18RecalcWillValidateEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = getelementptr inbounds i8, i8* %2, i64 280
  %4 = bitcast i8* %3 to %"class.blink::InputType"**
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = bitcast %"class.blink::InputType"* %5 to i1 (%"class.blink::InputType"*)***
  %7 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, i64 22
  %9 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InputType"* %5) #15
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds i8, i8* %2, i64 104
  %13 = bitcast i8* %12 to %"class.blink::ListedElement"*
  %14 = tail call zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"* %13) #15
  br label %15

15:                                               ; preds = %1, %11
  %16 = phi i1 [ false, %1 ], [ %14, %11 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement24RequiredAttributeChangedEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv(%"class.blink::HTMLFormControlElement"* %2) #15
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %4 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %4, i64 171
  %6 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %5, align 8
  %7 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %6(%"class.blink::HTMLFormControlElement"* %2) #15
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br i1 %13, label %14, label %33

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %16 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %15, align 8
  %17 = icmp eq %"class.blink::HTMLFormElement"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %16, i64 0, i32 3
  br label %29

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 256
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 9
  br label %29

29:                                               ; preds = %18, %25
  %30 = phi %"class.blink::RadioButtonGroupScope"* [ %28, %25 ], [ %19, %18 ]
  %31 = icmp eq %"class.blink::RadioButtonGroupScope"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @_ZN5blink21RadioButtonGroupScope24RequiredAttributeChangedEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %30, %"class.blink::HTMLInputElement"* %0) #15
  br label %33

33:                                               ; preds = %20, %1, %29, %32
  %34 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %35 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %34, align 8
  %36 = bitcast %"class.blink::InputTypeView"* %35 to void (%"class.blink::InputTypeView"*)***
  %37 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %37, i64 41
  %39 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %38, align 8
  tail call void %39(%"class.blink::InputTypeView"* %35) #15
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink21RadioButtonGroupScope24RequiredAttributeChangedEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"*, %"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement24DisabledAttributeChangedEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"* %2) #15
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %3, align 8
  %5 = bitcast %"class.blink::InputTypeView"* %4 to void (%"class.blink::InputTypeView"*)***
  %6 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, i64 39
  %8 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %7, align 8
  tail call void %8(%"class.blink::InputTypeView"* %4) #15
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16HTMLInputElement24DisabledAttributeChangedEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = bitcast i8* %2 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"* %3) #15
  %4 = getelementptr inbounds i8, i8* %2, i64 288
  %5 = bitcast i8* %4 to %"class.blink::InputTypeView"**
  %6 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %5, align 8
  %7 = bitcast %"class.blink::InputTypeView"* %6 to void (%"class.blink::InputTypeView"*)***
  %8 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %8, i64 39
  %10 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %9, align 8
  tail call void %10(%"class.blink::InputTypeView"* %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement25SelectColorInColorChooserERKNS_5ColorE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to %"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)***
  %6 = load %"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)**, %"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)*, %"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)** %6, i64 87
  %8 = load %"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)*, %"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)** %7, align 8
  %9 = tail call %"class.blink::ColorChooserClient"* %8(%"class.blink::InputType"* %4) #15
  %10 = icmp eq %"class.blink::ColorChooserClient"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::ColorChooserClient"* %9 to void (%"class.blink::ColorChooserClient"*, %"class.blink::Color"*)***
  %13 = load void (%"class.blink::ColorChooserClient"*, %"class.blink::Color"*)**, void (%"class.blink::ColorChooserClient"*, %"class.blink::Color"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::ColorChooserClient"*, %"class.blink::Color"*)*, void (%"class.blink::ColorChooserClient"*, %"class.blink::Color"*)** %13, i64 3
  %15 = load void (%"class.blink::ColorChooserClient"*, %"class.blink::Color"*)*, void (%"class.blink::ColorChooserClient"*, %"class.blink::Color"*)** %14, align 8
  tail call void %15(%"class.blink::ColorChooserClient"* nonnull %9, %"class.blink::Color"* dereferenceable(4) %1) #15
  br label %16

16:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement25EndColorChooserForTestingEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 26
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElement"* @_ZNK5blink16HTMLInputElement4listEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"* %0)
  %3 = getelementptr inbounds %"class.blink::HTMLDataListElement", %"class.blink::HTMLDataListElement"* %2, i64 0, i32 0
  ret %"class.blink::HTMLElement"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %3 = load i16, i16* %2, align 4
  %4 = trunc i16 %3 to i8
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %97

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::InputType"*, %"class.blink::InputType"** %7, align 8
  %9 = bitcast %"class.blink::InputType"* %8 to i1 (%"class.blink::InputType"*)***
  %10 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, i64 64
  %12 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::InputType"* %8) #15
  br i1 %13, label %14, label %97

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kListAttrE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %18, align 8
  %20 = icmp eq %"class.blink::ElementData"* %19, null
  br i1 %20, label %71, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::UniqueElementData"*
  %28 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 1, i32 1
  %29 = bitcast %"class.blink::Member.14"* %28 to %"class.blink::Attribute"**
  %30 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %27, i64 0, i32 2, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  br label %38

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 1
  %35 = bitcast %"class.blink::ElementData"* %34 to %"class.blink::Attribute"*
  %36 = lshr i32 %23, 1
  %37 = and i32 %36, 268435455
  br label %38

38:                                               ; preds = %33, %26
  %39 = phi %"class.blink::Attribute"* [ %35, %33 ], [ %30, %26 ]
  %40 = phi i32 [ %37, %33 ], [ %32, %26 ]
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 %41
  %43 = icmp eq i32 %40, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %64, %44
  %50 = phi %"class.blink::Attribute"* [ %39, %44 ], [ %65, %64 ]
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %52, %46
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %56, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, %62
  br i1 %63, label %67, label %64

64:                                               ; preds = %59, %54
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 1
  %66 = icmp eq %"class.blink::Attribute"* %65, %42
  br i1 %66, label %71, label %49

67:                                               ; preds = %59, %49
  %68 = icmp eq %"class.blink::Attribute"* %50, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 0, i32 1
  br label %73

71:                                               ; preds = %64, %67, %38, %14
  %72 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %73

73:                                               ; preds = %69, %71
  %74 = phi %"class.WTF::AtomicString"* [ %72, %71 ], [ %70, %69 ]
  %75 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %16, %"class.WTF::AtomicString"* dereferenceable(8) %74) #15
  %76 = icmp eq %"class.blink::Element"* %75, null
  br i1 %76, label %97, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %75, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 48
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %97

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %75, i64 0, i32 0, i32 0
  %84 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kDatalistTagE, align 8
  %85 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 1, i32 2
  %88 = bitcast %"class.blink::Member"* %87 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %89 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %89, i64 0, i32 3, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %91, %93
  %95 = bitcast %"class.blink::Element"* %75 to %"class.blink::HTMLDataListElement"*
  %96 = select i1 %94, %"class.blink::HTMLDataListElement"* %95, %"class.blink::HTMLDataListElement"* null
  br label %97

97:                                               ; preds = %82, %77, %73, %6, %1
  %98 = phi %"class.blink::HTMLDataListElement"* [ null, %1 ], [ null, %6 ], [ %96, %82 ], [ null, %77 ], [ null, %73 ]
  ret %"class.blink::HTMLDataListElement"* %98
}

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement23HasValidDataListOptionsEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"* %0)
  %3 = icmp eq %"class.blink::HTMLDataListElement"* %2, null
  br i1 %3, label %51, label %4

4:                                                ; preds = %1
  %5 = tail call %"class.blink::HTMLDataListOptionsCollection"* @_ZN5blink19HTMLDataListElement7optionsEv(%"class.blink::HTMLDataListElement"* nonnull %2) #15
  %6 = getelementptr inbounds %"class.blink::HTMLDataListOptionsCollection", %"class.blink::HTMLDataListOptionsCollection"* %5, i64 0, i32 0
  %7 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %6, i32 0) #15
  %8 = icmp eq %"class.blink::Element"* %7, null
  br i1 %8, label %51, label %9

9:                                                ; preds = %4, %47
  %10 = phi %"class.blink::Element"* [ %49, %47 ], [ %7, %4 ]
  %11 = phi i32 [ %48, %47 ], [ 0, %4 ]
  %12 = bitcast %"class.blink::Element"* %10 to %"class.blink::HTMLOptionElement"*
  %13 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %12) #15
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %47, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %15
  %20 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"* nonnull %12) #15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %33

33:                                               ; preds = %29, %32
  br i1 %20, label %47, label %51

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %47

47:                                               ; preds = %9, %33, %43, %46
  %48 = add i32 %11, 1
  %49 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %6, i32 %48) #15
  %50 = icmp eq %"class.blink::Element"* %49, null
  br i1 %50, label %51, label %9

51:                                               ; preds = %47, %33, %4, %1
  %52 = phi i1 [ false, %1 ], [ false, %4 ], [ false, %47 ], [ true, %33 ]
  ret i1 %52
}

declare %"class.blink::HTMLDataListOptionsCollection"* @_ZN5blink19HTMLDataListElement7optionsEv(%"class.blink::HTMLDataListElement"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLInputElement23FilteredDataListOptionsEv(%"class.blink::HeapVector.2565"* noalias sret, %"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.807", align 8
  %5 = alloca %"class.blink::HTMLOptionElement"*, align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector.2565", %"class.blink::HeapVector.2565"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector.2565", %"class.blink::HeapVector.2565"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector.2565", %"class.blink::HeapVector.2565"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.blink::HeapVector.2565"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  %14 = tail call %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"* %1)
  %15 = icmp eq %"class.blink::HTMLDataListElement"* %14, null
  br i1 %15, label %387, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 0
  %20 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %19) #15
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %18, align 8
  %21 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kMultipleAttrE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %22, align 8
  %24 = icmp eq %"class.blink::ElementData"* %23, null
  br i1 %24, label %152, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %23, i64 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::ElementData"* %23 to %"class.blink::UniqueElementData"*
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %23, i64 1, i32 1
  %33 = bitcast %"class.blink::Member.14"* %32 to %"class.blink::Attribute"**
  %34 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %31, i64 0, i32 2, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  br label %42

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %23, i64 1
  %39 = bitcast %"class.blink::ElementData"* %38 to %"class.blink::Attribute"*
  %40 = lshr i32 %27, 1
  %41 = and i32 %40, 268435455
  br label %42

42:                                               ; preds = %37, %30
  %43 = phi %"class.blink::Attribute"* [ %39, %37 ], [ %34, %30 ]
  %44 = phi i32 [ %41, %37 ], [ %36, %30 ]
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 %45
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %152, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %21, i64 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %69, %48
  %54 = phi %"class.blink::Attribute"* [ %43, %48 ], [ %70, %69 ]
  %55 = phi i32 [ 0, %48 ], [ %71, %69 ]
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %57, %50
  br i1 %58, label %73, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %66, %67
  br i1 %68, label %73, label %69

69:                                               ; preds = %64, %59
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 1
  %71 = add i32 %55, 1
  %72 = icmp eq %"class.blink::Attribute"* %70, %46
  br i1 %72, label %152, label %53

73:                                               ; preds = %53, %64
  %74 = icmp eq i32 %55, -1
  br i1 %74, label %152, label %75

75:                                               ; preds = %73
  %76 = bitcast %"class.blink::HTMLInputElement"* %1 to %"class.blink::HTMLFormControlElement"*
  %77 = bitcast %"class.blink::HTMLInputElement"* %1 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %78 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %77, align 8
  %79 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %78, i64 171
  %80 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %79, align 8
  %81 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %80(%"class.blink::HTMLFormControlElement"* %76) #15
  %82 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kEmailE, align 8
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %84, %86
  br i1 %87, label %88, label %152

88:                                               ; preds = %75
  %89 = bitcast %"class.WTF::Vector.807"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #15
  %90 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %4, i64 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 16, i1 false) #15
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %3, i16 zeroext 44, i1 zeroext true, %"class.WTF::Vector.807"* nonnull dereferenceable(16) %4) #15
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %115, label %94

94:                                               ; preds = %88
  %95 = add i32 %92, -1
  %96 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.807"* nonnull %4, i32 %95) #15
  %97 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %96) #15
  %98 = ptrtoint %"class.WTF::StringImpl"* %97 to i64
  %99 = bitcast %"class.WTF::String"* %3 to i64*
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %98, i64* %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #15
  br label %115

115:                                              ; preds = %94, %111, %114, %88
  %116 = load %"class.WTF::String"*, %"class.WTF::String"** %90, align 8
  %117 = icmp eq %"class.WTF::String"* %116, null
  br i1 %117, label %151, label %118, !prof !46

118:                                              ; preds = %115
  %119 = bitcast %"class.WTF::String"* %116 to i8*
  %120 = load i32, i32* %91, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !4

122:                                              ; preds = %118
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"class.WTF::String"* [ %144, %143 ], [ %116, %122 ]
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #15
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %145 = icmp eq %"class.WTF::String"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %91, align 4
  %147 = bitcast %"class.WTF::Vector.807"* %4 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %118
  %150 = phi i8* [ %148, %146 ], [ %119, %118 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %90, align 8
  br label %151

151:                                              ; preds = %115, %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #15
  br label %152

152:                                              ; preds = %69, %73, %42, %16, %151, %75
  %153 = call %"class.blink::HTMLDataListOptionsCollection"* @_ZN5blink19HTMLDataListElement7optionsEv(%"class.blink::HTMLDataListElement"* nonnull %14) #15
  %154 = getelementptr inbounds %"class.blink::HeapVector.2565", %"class.blink::HeapVector.2565"* %0, i64 0, i32 0
  %155 = getelementptr inbounds %"class.blink::HTMLDataListOptionsCollection", %"class.blink::HTMLDataListOptionsCollection"* %153, i64 0, i32 0
  %156 = call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %155) #15
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2568"* %154, i32 %156)
  %157 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String8FoldCaseEv(%"class.WTF::String"* nonnull %3) #15
  %158 = ptrtoint %"class.WTF::StringImpl"* %157 to i64
  %159 = bitcast %"class.WTF::String"* %3 to i64*
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %158, i64* %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %152
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #15
  br label %175

175:                                              ; preds = %174, %171, %152
  %176 = call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %155) #15
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %198, label %178

178:                                              ; preds = %175
  %179 = bitcast %"class.blink::HTMLOptionElement"** %5 to i8*
  %180 = bitcast %"class.blink::HTMLOptionElement"** %5 to %"class.blink::Element"**
  %181 = bitcast %"class.WTF::String"* %6 to i8*
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %183 = bitcast %"class.WTF::StringView"* %7 to i8*
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %186 = bitcast i8** %185 to %"class.WTF::StringImpl"**
  %187 = bitcast %"class.WTF::StringView"* %7 to i64*
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %189 = bitcast %"class.WTF::StringView"* %9 to i8*
  %190 = bitcast %"class.WTF::String"* %8 to i8*
  %191 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %194 = bitcast i8** %193 to %"class.WTF::StringImpl"**
  %195 = bitcast %"class.WTF::StringView"* %9 to i64*
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %197 = bitcast %"class.blink::HTMLOptionElement"** %5 to i64*
  br label %215

198:                                              ; preds = %383, %175
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %199) #15
  br label %214

214:                                              ; preds = %198, %210, %213
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %387

215:                                              ; preds = %178, %383
  %216 = phi i32 [ 0, %178 ], [ %384, %383 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #15
  store %"class.blink::HTMLOptionElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::HTMLOptionElement"*), %"class.blink::HTMLOptionElement"** %5, align 8
  %217 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %155, i32 %216) #15
  %218 = bitcast %"class.blink::Element"* %217 to %"class.blink::HTMLOptionElement"*
  store %"class.blink::Element"* %217, %"class.blink::Element"** %180, align 8
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %327, label %221

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %327, label %225

225:                                              ; preds = %221
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #15
  %226 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* %218) #15
  store %"class.WTF::StringImpl"* %226, %"class.WTF::StringImpl"** %182, align 8
  %227 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String8FoldCaseEv(%"class.WTF::String"* nonnull %6) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #15
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %230, label %232

230:                                              ; preds = %225
  store i8* null, i8** %185, align 8
  %231 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %231, i64* %187, align 8
  br label %236

232:                                              ; preds = %225
  store %"class.WTF::StringImpl"* %228, %"class.WTF::StringImpl"** %184, align 8
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 1
  store %"class.WTF::StringImpl"* %235, %"class.WTF::StringImpl"** %186, align 8
  br label %236

236:                                              ; preds = %230, %232
  %237 = phi i32 [ %234, %232 ], [ 0, %230 ]
  store i32 %237, i32* %188, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #15
  br label %243

240:                                              ; preds = %236
  %241 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %227, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, i32 0) #15
  %242 = icmp eq i32 %241, -1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #15
  br i1 %242, label %243, label %259

243:                                              ; preds = %239, %240
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #15
  %244 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  %245 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5labelEv(%"class.blink::HTMLOptionElement"* %244) #15
  store %"class.WTF::StringImpl"* %245, %"class.WTF::StringImpl"** %191, align 8
  %246 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String8FoldCaseEv(%"class.WTF::String"* nonnull %8) #15
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %249, label %251

249:                                              ; preds = %243
  store i8* null, i8** %193, align 8
  %250 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %250, i64* %195, align 8
  br label %255

251:                                              ; preds = %243
  store %"class.WTF::StringImpl"* %247, %"class.WTF::StringImpl"** %192, align 8
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 1
  store %"class.WTF::StringImpl"* %254, %"class.WTF::StringImpl"** %194, align 8
  br label %255

255:                                              ; preds = %249, %251
  %256 = phi i32 [ %253, %251 ], [ 0, %249 ]
  store i32 %256, i32* %196, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %257, label %258, label %260

258:                                              ; preds = %255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #15
  br label %275

259:                                              ; preds = %240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #15
  br label %293

260:                                              ; preds = %255
  %261 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %246, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, i32 0) #15
  %262 = icmp eq i32 %261, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #15
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %260
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %260
  %272 = phi i32 [ %270, %269 ], [ %268, %260 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #15
  br label %275

275:                                              ; preds = %258, %271, %274
  %276 = phi i1 [ %262, %271 ], [ %262, %274 ], [ true, %258 ]
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %292, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #15
  br label %292

292:                                              ; preds = %291, %288, %275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #15
  br i1 %238, label %307, label %293

293:                                              ; preds = %259, %292
  %294 = phi i1 [ false, %259 ], [ %276, %292 ]
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %293
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %293
  %304 = phi i32 [ %302, %301 ], [ %300, %293 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #15
  br label %307

307:                                              ; preds = %292, %303, %306
  %308 = phi i1 [ %276, %292 ], [ %294, %303 ], [ %294, %306 ]
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #15
  br label %324

324:                                              ; preds = %307, %320, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #15
  br i1 %308, label %383, label %325

325:                                              ; preds = %324
  %326 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  br label %327

327:                                              ; preds = %325, %215, %221
  %328 = phi %"class.blink::HTMLOptionElement"* [ %218, %221 ], [ %326, %325 ], [ %218, %215 ]
  %329 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* %328) #15
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %383, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 1
  %333 = load i32, i32* %332, align 4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %351, label %335

335:                                              ; preds = %331
  %336 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  %337 = call zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"* %336) #15
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %339 = load atomic i32, i32* %338 monotonic, align 4
  %340 = and i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %343 = load i32, i32* %342, align 4
  br i1 %341, label %344, label %346

344:                                              ; preds = %335
  %345 = add i32 %343, -1
  store i32 %345, i32* %342, align 4
  br label %346

346:                                              ; preds = %344, %335
  %347 = phi i32 [ %345, %344 ], [ %343, %335 ]
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %350

349:                                              ; preds = %346
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #15
  br label %350

350:                                              ; preds = %346, %349
  br i1 %337, label %383, label %364

351:                                              ; preds = %331
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load atomic i32, i32* %352 monotonic, align 4
  %354 = and i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %357 = load i32, i32* %356, align 4
  br i1 %355, label %358, label %360

358:                                              ; preds = %351
  %359 = add i32 %357, -1
  store i32 %359, i32* %356, align 4
  br label %360

360:                                              ; preds = %358, %351
  %361 = phi i32 [ %359, %358 ], [ %357, %351 ]
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %383

363:                                              ; preds = %360
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #15
  br label %383

364:                                              ; preds = %350
  %365 = load i32, i32* %12, align 4
  %366 = load i32, i32* %11, align 8
  %367 = icmp eq i32 %365, %366
  br i1 %367, label %382, label %368, !prof !4

368:                                              ; preds = %364
  %369 = load %"class.blink::Member.2571"*, %"class.blink::Member.2571"** %10, align 8
  %370 = zext i32 %365 to i64
  %371 = getelementptr inbounds %"class.blink::Member.2571", %"class.blink::Member.2571"* %369, i64 %370
  %372 = load i64, i64* %197, align 8
  %373 = bitcast %"class.blink::Member.2571"* %371 to i64*
  store atomic i64 %372, i64* %373 monotonic, align 8
  %374 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %379, label %376

376:                                              ; preds = %368
  %377 = inttoptr i64 %372 to i8*
  %378 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %377) #15
  br label %379

379:                                              ; preds = %376, %368
  %380 = load i32, i32* %12, align 4
  %381 = add i32 %380, 1
  store i32 %381, i32* %12, align 4
  br label %383

382:                                              ; preds = %364
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2568"* %154, %"class.blink::HTMLOptionElement"** nonnull dereferenceable(8) %5) #15
  br label %383

383:                                              ; preds = %327, %382, %379, %363, %360, %350, %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #15
  %384 = add nuw i32 %216, 1
  %385 = call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %155) #15
  %386 = icmp ult i32 %384, %385
  br i1 %386, label %215, label %198

387:                                              ; preds = %2, %214
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.807"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2568"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !46

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2571"*, %"class.blink::Member.2571"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2571"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17HTMLOptionElementEEEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2568"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2571"*, %"class.blink::Member.2571"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2571"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2571"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !4

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2568"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String8FoldCaseEv(%"class.WTF::String"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5labelEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement30SetListAttributeTargetObserverEPNS_27ListAttributeTargetObserverE(%"class.blink::HTMLInputElement"* nocapture, %"class.blink::ListAttributeTargetObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::ListAttributeTargetObserver"*, %"class.blink::ListAttributeTargetObserver"** %4, align 8
  %6 = icmp eq %"class.blink::ListAttributeTargetObserver"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %5, i64 0, i32 0
  %9 = bitcast %"class.blink::ListAttributeTargetObserver"* %5 to void (%"class.blink::IdTargetObserver"*)***
  %10 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %10, i64 4
  %12 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %11, align 8
  tail call void %12(%"class.blink::IdTargetObserver"* %8) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = ptrtoint %"class.blink::ListAttributeTargetObserver"* %1 to i64
  %15 = bitcast %"class.blink::Member.294"* %3 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::ListAttributeTargetObserver"* %1 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #15
  br label %21

21:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement11IsSteppableEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 67
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement12IsTextButtonEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 6
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement14IsEnumeratableEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 65
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink16HTMLInputElement14IsEnumeratableEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 -1, i32 0, i32 3
  %3 = getelementptr inbounds i8, i8* %2, i64 280
  %4 = bitcast i8* %3 to %"class.blink::InputType"**
  %5 = load %"class.blink::InputType"*, %"class.blink::InputType"** %4, align 8
  %6 = bitcast %"class.blink::InputType"* %5 to i1 (%"class.blink::InputType"*)***
  %7 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, i64 65
  %9 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InputType"* %5) #15
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement11IsLabelableEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 5
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement25MatchesDefaultPseudoClassEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 49
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16HTMLInputElement11scrollWidthEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 7
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"* %10) #15
  br label %90

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %13) #15
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = tail call i32 @_ZN5blink7Element11clientWidthEv(%"class.blink::Element"* %23) #15
  br label %90

25:                                               ; preds = %12, %18
  %26 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %30, %"class.blink::Node"* %26, i32 15) #15
  %31 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %31, align 8
  %33 = icmp eq %"class.blink::TextControlInnerEditorElement"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %35) #15
  br label %37

37:                                               ; preds = %25, %34
  %38 = phi %"class.blink::LayoutBox"* [ %36, %34 ], [ null, %25 ]
  %39 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %26) #15
  %40 = icmp ne %"class.blink::LayoutBox"* %38, null
  %41 = icmp ne %"class.blink::LayoutBox"* %39, null
  %42 = and i1 %40, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = tail call i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"* %44) #15
  br label %90

46:                                               ; preds = %37
  %47 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* nonnull %39) #15
  %48 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* nonnull %38) #15
  %49 = icmp sgt i32 %48, -1
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %47, i32 %48) #15
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !4
  %55 = bitcast %"class.blink::LayoutBox"* %38 to i32 (%"class.blink::LayoutBox"*)***
  %56 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %56, i64 152
  %58 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %57, align 8
  %59 = tail call i32 %58(%"class.blink::LayoutBox"* nonnull %38) #15
  %60 = icmp slt i32 %54, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %54) #15
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !4
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %39, i64 0, i32 0, i32 0, i32 5, i32 0
  %67 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %67, i64 0, i32 0, i32 1, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %71, i64 0, i32 6
  %73 = load float, float* %72, align 8
  %74 = sitofp i32 %65 to float
  %75 = fmul float %74, 1.562500e-02
  %76 = fdiv float %75, %73
  %77 = fmul float %76, 6.400000e+01
  %78 = fcmp ult float %77, 0xC1E0000000000000
  %79 = fcmp ugt float %77, 0x41DFFFFFE0000000
  %80 = fcmp ogt float %77, 0xC1E0000000000000
  %81 = select i1 %80, float %77, float 0xC1E0000000000000
  %82 = fptosi float %81 to i32
  %83 = select i1 %78, i32 0, i32 2147483647
  %84 = select i1 %79, i32 %83, i32 %82
  %85 = sdiv i32 %84, 64
  %86 = srem i32 %84, 64
  %87 = add nsw i32 %86, 32
  %88 = ashr i32 %87, 6
  %89 = add nsw i32 %88, %85
  br label %90

90:                                               ; preds = %43, %46, %22, %9
  %91 = phi i32 [ %24, %22 ], [ %11, %9 ], [ %89, %46 ], [ %45, %43 ]
  ret i32 %91
}

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare i32 @_ZN5blink7Element11clientWidthEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"*, %"class.blink::Node"*, i32) local_unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16HTMLInputElement12scrollHeightEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 7
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"* %10) #15
  br label %90

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %13) #15
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = tail call i32 @_ZN5blink7Element12clientHeightEv(%"class.blink::Element"* %23) #15
  br label %90

25:                                               ; preds = %12, %18
  %26 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %30, %"class.blink::Node"* %26, i32 15) #15
  %31 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %31, align 8
  %33 = icmp eq %"class.blink::TextControlInnerEditorElement"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %35) #15
  br label %37

37:                                               ; preds = %25, %34
  %38 = phi %"class.blink::LayoutBox"* [ %36, %34 ], [ null, %25 ]
  %39 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %26) #15
  %40 = icmp ne %"class.blink::LayoutBox"* %38, null
  %41 = icmp ne %"class.blink::LayoutBox"* %39, null
  %42 = and i1 %40, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = tail call i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"* %44) #15
  br label %90

46:                                               ; preds = %37
  %47 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* nonnull %39) #15
  %48 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* nonnull %38) #15
  %49 = icmp sgt i32 %48, -1
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %47, i32 %48) #15
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !4
  %55 = bitcast %"class.blink::LayoutBox"* %38 to i32 (%"class.blink::LayoutBox"*)***
  %56 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %56, i64 153
  %58 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %57, align 8
  %59 = tail call i32 %58(%"class.blink::LayoutBox"* nonnull %38) #15
  %60 = icmp slt i32 %54, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %54) #15
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !4
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %39, i64 0, i32 0, i32 0, i32 5, i32 0
  %67 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %67, i64 0, i32 0, i32 1, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %71, i64 0, i32 6
  %73 = load float, float* %72, align 8
  %74 = sitofp i32 %65 to float
  %75 = fmul float %74, 1.562500e-02
  %76 = fdiv float %75, %73
  %77 = fmul float %76, 6.400000e+01
  %78 = fcmp ult float %77, 0xC1E0000000000000
  %79 = fcmp ugt float %77, 0x41DFFFFFE0000000
  %80 = fcmp ogt float %77, 0xC1E0000000000000
  %81 = select i1 %80, float %77, float 0xC1E0000000000000
  %82 = fptosi float %81 to i32
  %83 = select i1 %78, i32 0, i32 2147483647
  %84 = select i1 %79, i32 %83, i32 %82
  %85 = sdiv i32 %84, 64
  %86 = srem i32 %84, 64
  %87 = add nsw i32 %86, 32
  %88 = ashr i32 %87, 6
  %89 = add nsw i32 %88, %85
  br label %90

90:                                               ; preds = %43, %46, %22, %9
  %91 = phi i32 [ %24, %22 ], [ %11, %9 ], [ %89, %46 ], [ %45, %43 ]
  ret i32 %91
}

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12clientHeightEv(%"class.blink::Element"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement19ShouldAppearCheckedEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to void (%"class.blink::InputType"*)***
  %5 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %5, i64 20
  %7 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %6, align 8
  tail call void %7(%"class.blink::InputType"* %3) #15
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %9 = load i16, i16* %8, align 4
  %10 = and i16 %9, 2
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %1
  %13 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %14 = bitcast %"class.blink::InputType"* %13 to i1 (%"class.blink::InputType"*)***
  %15 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %15, i64 66
  %17 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::InputType"* %13) #15
  br label %19

19:                                               ; preds = %1, %12
  %20 = phi i1 [ false, %1 ], [ %18, %12 ]
  ret i1 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement24SetPlaceholderVisibilityEb(%"class.blink::HTMLInputElement"* nocapture, i1 zeroext) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %4 = zext i1 %1 to i16
  %5 = load i16, i16* %3, align 4
  %6 = shl nuw nsw i16 %4, 13
  %7 = and i16 %5, -8193
  %8 = or i16 %7, %6
  store i16 %8, i16* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement19SupportsPlaceholderEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 71
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement19GetPlaceholderValueEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %2) #15
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %7
  %12 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %2) #15
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %35, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %35

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #15
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !4

30:                                               ; preds = %21
  tail call void @llvm.trap() #15
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %35

33:                                               ; preds = %1, %7
  %34 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement19StrippedPlaceholderEv(%"class.blink::TextControlElement"* %2) #15
  br label %35

35:                                               ; preds = %31, %16, %11, %33
  %36 = phi %"class.WTF::StringImpl"* [ %34, %33 ], [ null, %11 ], [ %14, %16 ], [ %14, %31 ]
  ret %"class.WTF::StringImpl"* %36
}

declare %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement19StrippedPlaceholderEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement14DefaultToolTipEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %4, align 8
  %6 = bitcast %"class.blink::InputType"* %3 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)** %7, i64 73
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::InputType"* %3, %"class.blink::InputTypeView"* dereferenceable(24) %5) #15
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement14FileStatusTextEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to %"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)** %5, i64 32
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::InputTypeView"* %3) #15
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement25ShouldApplyMiddleEllipsisEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to %"class.blink::FileList"* (%"class.blink::InputType"*)***
  %5 = load %"class.blink::FileList"* (%"class.blink::InputType"*)**, %"class.blink::FileList"* (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::FileList"* (%"class.blink::InputType"*)*, %"class.blink::FileList"* (%"class.blink::InputType"*)** %5, i64 54
  %7 = load %"class.blink::FileList"* (%"class.blink::InputType"*)*, %"class.blink::FileList"* (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call %"class.blink::FileList"* %7(%"class.blink::InputType"* %3) #15
  %9 = icmp eq %"class.blink::FileList"* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %1
  %11 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %12 = bitcast %"class.blink::InputType"* %11 to %"class.blink::FileList"* (%"class.blink::InputType"*)***
  %13 = load %"class.blink::FileList"* (%"class.blink::InputType"*)**, %"class.blink::FileList"* (%"class.blink::InputType"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::FileList"* (%"class.blink::InputType"*)*, %"class.blink::FileList"* (%"class.blink::InputType"*)** %13, i64 54
  %15 = load %"class.blink::FileList"* (%"class.blink::InputType"*)*, %"class.blink::FileList"* (%"class.blink::InputType"*)** %14, align 8
  %16 = tail call %"class.blink::FileList"* %15(%"class.blink::InputType"* %11) #15
  %17 = getelementptr inbounds %"class.blink::FileList", %"class.blink::FileList"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp ult i32 %18, 2
  br label %20

20:                                               ; preds = %1, %10
  %21 = phi i1 [ false, %1 ], [ %19, %10 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement25ShouldAppearIndeterminateEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 81
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16HTMLInputElement16SizeOfRadioGroupEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %4 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %4, i64 171
  %6 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %5, align 8
  %7 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %6(%"class.blink::HTMLFormControlElement"* %2) #15
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br i1 %13, label %14, label %34

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %16 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %15, align 8
  %17 = icmp eq %"class.blink::HTMLFormElement"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %16, i64 0, i32 3
  br label %29

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 256
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 9
  br label %29

29:                                               ; preds = %18, %25
  %30 = phi %"class.blink::RadioButtonGroupScope"* [ %28, %25 ], [ %19, %18 ]
  %31 = icmp eq %"class.blink::RadioButtonGroupScope"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @_ZNK5blink21RadioButtonGroupScope12GroupSizeForEPKNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %30, %"class.blink::HTMLInputElement"* %0) #15
  br label %34

34:                                               ; preds = %20, %1, %29, %32
  %35 = phi i32 [ %33, %32 ], [ 0, %29 ], [ 0, %1 ], [ 0, %20 ]
  ret i32 %35
}

declare i32 @_ZNK5blink21RadioButtonGroupScope12GroupSizeForEPKNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"*, %"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16HTMLInputElement6heightEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i32 (%"class.blink::InputType"*)***
  %5 = load i32 (%"class.blink::InputType"*)**, i32 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %5, i64 84
  %7 = load i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::InputType"* %3) #15
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16HTMLInputElement5widthEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i32 (%"class.blink::InputType"*)***
  %5 = load i32 (%"class.blink::InputType"*)**, i32 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %5, i64 85
  %7 = load i32 (%"class.blink::InputType"*)*, i32 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::InputType"* %3) #15
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement9setHeightEj(%"class.blink::HTMLInputElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, i32 %1, i32 0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement8setWidthEj(%"class.blink::HTMLInputElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, i32 %1, i32 0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ListAttributeTargetObserverC2ERKN3WTF12AtomicStringEPNS_16HTMLInputElementE(%"class.blink::ListAttributeTargetObserver"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::IdTargetObserverRegistry"*, %"class.blink::IdTargetObserverRegistry"** %7, align 8
  tail call void @_ZN5blink16IdTargetObserverC2ERNS_24IdTargetObserverRegistryERKN3WTF12AtomicStringE(%"class.blink::IdTargetObserver"* %4, %"class.blink::IdTargetObserverRegistry"* %8, %"class.WTF::AtomicString"* dereferenceable(8) %1) #15
  %9 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink27ListAttributeTargetObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::HTMLInputElement"* %2, %"class.blink::HTMLInputElement"** %10, align 8
  ret void
}

declare void @_ZN5blink16IdTargetObserverC2ERNS_24IdTargetObserverRegistryERKN3WTF12AtomicStringE(%"class.blink::IdTargetObserver"*, %"class.blink::IdTargetObserverRegistry"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27ListAttributeTargetObserver5TraceEPNS_7VisitorE(%"class.blink::ListAttributeTargetObserver"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.52"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %0, i64 0, i32 0
  tail call void @_ZNK5blink16IdTargetObserver5TraceEPNS_7VisitorE(%"class.blink::IdTargetObserver"* %14, %"class.blink::Visitor"* %1) #15
  ret void
}

declare void @_ZNK5blink16IdTargetObserver5TraceEPNS_7VisitorE(%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ListAttributeTargetObserver15IdTargetChangedEv(%"class.blink::ListAttributeTargetObserver"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %4, align 8
  %6 = bitcast %"class.blink::InputTypeView"* %5 to void (%"class.blink::InputTypeView"*)***
  %7 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %7, i64 44
  %9 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %8, align 8
  tail call void %9(%"class.blink::InputTypeView"* %5) #15
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %10, i32 94) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %8 = bitcast %"class.blink::InputType"* %7 to i1 (%"class.blink::InputType"*)***
  %9 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %9, i64 83
  %11 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::InputType"* %7) #15
  br i1 %12, label %169, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = load %"class.blink::InputType"*, %"class.blink::InputType"** %6, align 8
  %17 = bitcast %"class.blink::InputType"* %16 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %18 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %18, i64 4
  %20 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %19, align 8
  %21 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %20(%"class.blink::InputType"* %16) #15
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %100, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %25
  %33 = zext i32 %31 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #15
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %32
  tail call void @llvm.trap() #15
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %40, %25
  %43 = phi i32 [ %41, %40 ], [ %31, %25 ]
  %44 = load atomic i32, i32* %26 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %42
  %48 = zext i32 %43 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #15
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !4

54:                                               ; preds = %47
  tail call void @llvm.trap() #15
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %30, align 4
  br label %57

57:                                               ; preds = %55, %42
  %58 = phi i32 [ %56, %55 ], [ %43, %42 ]
  %59 = load atomic i32, i32* %26 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = add i32 %58, -1
  store i32 %63, i32* %30, align 4
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %68

68:                                               ; preds = %64, %67
  %69 = load atomic i32, i32* %26 monotonic, align 4, !noalias !48
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = load i32, i32* %30, align 4
  br i1 %71, label %73, label %83

73:                                               ; preds = %68
  %74 = zext i32 %72 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #15
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !4

80:                                               ; preds = %73
  tail call void @llvm.trap() #15, !noalias !48
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %30, align 4, !noalias !48
  br label %83

83:                                               ; preds = %68, %81
  %84 = phi i32 [ %82, %81 ], [ %72, %68 ]
  %85 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %85, align 8, !alias.scope !48
  %86 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %86, align 8, !alias.scope !48
  %87 = load atomic i32, i32* %26 monotonic, align 4, !noalias !48
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %83
  %91 = zext i32 %84 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #15
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %90
  tail call void @llvm.trap() #15, !noalias !48
  unreachable

98:                                               ; preds = %90
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %30, align 4, !noalias !48
  br label %104

100:                                              ; preds = %13
  %101 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %101, align 8, !alias.scope !48
  %102 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %102, align 8, !alias.scope !48
  %103 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %103, align 8, !alias.scope !48
  br label %116

104:                                              ; preds = %98, %83
  %105 = phi i32 [ %99, %98 ], [ %84, %83 ]
  %106 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %106, align 8, !alias.scope !48
  %107 = load atomic i32, i32* %26 monotonic, align 4, !noalias !48
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = add i32 %105, -1
  store i32 %111, i32* %30, align 4, !noalias !48
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i32 [ %111, %110 ], [ %105, %104 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15, !noalias !48
  br label %116

116:                                              ; preds = %100, %112, %115
  %117 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %5)
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %120 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %119, align 8
  %121 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %120, align 8
  call void %121(%"class.blink::ExceptionState"* %2, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  br label %137

137:                                              ; preds = %116, %133, %136
  %138 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #15
  br label %154

154:                                              ; preds = %137, %150, %153
  br i1 %24, label %168, label %155

155:                                              ; preds = %154
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %168

168:                                              ; preds = %154, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  br label %171

169:                                              ; preds = %3
  %170 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::TextControlElement"* %170, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #15
  br label %171

171:                                              ; preds = %169, %168
  ret void
}

declare void @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %10 = load %"class.blink::InputType"*, %"class.blink::InputType"** %9, align 8
  %11 = bitcast %"class.blink::InputType"* %10 to i1 (%"class.blink::InputType"*)***
  %12 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %12, i64 83
  %14 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::InputType"* %10) #15
  br i1 %15, label %172, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15
  %19 = load %"class.blink::InputType"*, %"class.blink::InputType"** %9, align 8
  %20 = bitcast %"class.blink::InputType"* %19 to %"class.WTF::AtomicString"* (%"class.blink::InputType"*)***
  %21 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)**, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %21, i64 4
  %23 = load %"class.WTF::AtomicString"* (%"class.blink::InputType"*)*, %"class.WTF::AtomicString"* (%"class.blink::InputType"*)** %22, align 8
  %24 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %23(%"class.blink::InputType"* %19) #15
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %103, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %45

35:                                               ; preds = %28
  %36 = zext i32 %34 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #15
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !4

42:                                               ; preds = %35
  tail call void @llvm.trap() #15
  unreachable

43:                                               ; preds = %35
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %33, align 4
  br label %45

45:                                               ; preds = %43, %28
  %46 = phi i32 [ %44, %43 ], [ %34, %28 ]
  %47 = load atomic i32, i32* %29 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %45
  %51 = zext i32 %46 to i33
  %52 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #15
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !4

57:                                               ; preds = %50
  tail call void @llvm.trap() #15
  unreachable

58:                                               ; preds = %50
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %33, align 4
  br label %60

60:                                               ; preds = %58, %45
  %61 = phi i32 [ %59, %58 ], [ %46, %45 ]
  %62 = load atomic i32, i32* %29 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = add i32 %61, -1
  store i32 %66, i32* %33, align 4
  br label %67

67:                                               ; preds = %65, %60
  %68 = phi i32 [ %66, %65 ], [ %61, %60 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #15
  br label %71

71:                                               ; preds = %67, %70
  %72 = load atomic i32, i32* %29 monotonic, align 4, !noalias !51
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = load i32, i32* %33, align 4
  br i1 %74, label %76, label %86

76:                                               ; preds = %71
  %77 = zext i32 %75 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #15
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !4

83:                                               ; preds = %76
  tail call void @llvm.trap() #15, !noalias !51
  unreachable

84:                                               ; preds = %76
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %33, align 4, !noalias !51
  br label %86

86:                                               ; preds = %71, %84
  %87 = phi i32 [ %85, %84 ], [ %75, %71 ]
  %88 = bitcast %"class.WTF::StringAppend"* %8 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %88, align 8, !alias.scope !51
  %89 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %89, align 8, !alias.scope !51
  %90 = load atomic i32, i32* %29 monotonic, align 4, !noalias !51
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %107

93:                                               ; preds = %86
  %94 = zext i32 %87 to i33
  %95 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #15
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !4

100:                                              ; preds = %93
  tail call void @llvm.trap() #15, !noalias !51
  unreachable

101:                                              ; preds = %93
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %33, align 4, !noalias !51
  br label %107

103:                                              ; preds = %16
  %104 = bitcast %"class.WTF::StringAppend"* %8 to i64*
  store i64 ptrtoint ([28 x i8]* @.str to i64), i64* %104, align 8, !alias.scope !51
  %105 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8, !alias.scope !51
  %106 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %106, align 8, !alias.scope !51
  br label %119

107:                                              ; preds = %101, %86
  %108 = phi i32 [ %102, %101 ], [ %87, %86 ]
  %109 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8** %109, align 8, !alias.scope !51
  %110 = load atomic i32, i32* %29 monotonic, align 4, !noalias !51
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %107
  %114 = add i32 %108, -1
  store i32 %114, i32* %33, align 4, !noalias !51
  br label %115

115:                                              ; preds = %113, %107
  %116 = phi i32 [ %114, %113 ], [ %108, %107 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #15, !noalias !51
  br label %119

119:                                              ; preds = %103, %115, %118
  %120 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %8)
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %121, align 8
  %122 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %123 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %122, align 8
  %124 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %123, align 8
  call void %124(%"class.blink::ExceptionState"* %5, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #15
  br label %140

140:                                              ; preds = %119, %136, %139
  %141 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #15
  br label %157

157:                                              ; preds = %140, %153, %156
  br i1 %27, label %171, label %158

158:                                              ; preds = %157
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #15
  br label %171

171:                                              ; preds = %157, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %174

172:                                              ; preds = %6
  %173 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE(%"class.blink::TextControlElement"* %173, %"class.WTF::String"* dereferenceable(8) %1, i32 %2, i32 %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.blink::ExceptionState"* dereferenceable(72) %5) #15
  br label %174

174:                                              ; preds = %172, %171
  ret void
}

declare void @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16HTMLInputElement30SetupDateTimeChooserParametersERNS_25DateTimeChooserParametersE(%"class.blink::HTMLInputElement"*, %"struct.blink::DateTimeChooserParameters"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StepRange", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.blink::IntRect"*
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.mojo::StructPtr.2620", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::Decimal", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %19) #15
  %21 = icmp eq %"class.blink::LocalFrameView"* %20, null
  br i1 %21, label %488, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %24 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %25 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %25, i64 171
  %27 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %26, align 8
  %28 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %27(%"class.blink::HTMLFormControlElement"* %23) #15
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %47, %32, %22
  %50 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %51 = bitcast %"struct.blink::DateTimeChooserParameters"* %1 to i64*
  %52 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  store i64 %50, i64* %51, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #15
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %70 = load %"class.blink::InputType"*, %"class.blink::InputType"** %69, align 8
  %71 = tail call double @_ZNK5blink9InputType7MinimumEv(%"class.blink::InputType"* %70) #15
  %72 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 5
  store double %71, double* %72, align 8
  %73 = load %"class.blink::InputType"*, %"class.blink::InputType"** %69, align 8
  %74 = tail call double @_ZNK5blink9InputType7MaximumEv(%"class.blink::InputType"* %73) #15
  %75 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 6
  store double %74, double* %75, align 8
  %76 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %23) #15
  %77 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 9
  %78 = zext i1 %76 to i8
  store i8 %78, i8* %77, align 8
  %79 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase48is_lang_attribute_aware_form_control_ui_enabled_E, align 1, !range !3
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %102

81:                                               ; preds = %68
  %82 = tail call %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() #15
  %83 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %84 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 2
  %85 = bitcast %"class.WTF::AtomicString"* %84 to i64*
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %84, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %83, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %165, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %165

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #15
  br label %165

102:                                              ; preds = %68
  %103 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = tail call %"class.WTF::StringImpl"* @_ZNK5blink7Element24ComputeInheritedLanguageEv(%"class.blink::Element"* %103) #15
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %102, %106
  %111 = tail call %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() #15
  %112 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  br label %131

113:                                              ; preds = %106
  %114 = ptrtoint %"class.WTF::StringImpl"* %104 to i64
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #15
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !4

128:                                              ; preds = %119
  tail call void @llvm.trap() #15
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %129, %113, %110
  %132 = phi i64 [ %112, %110 ], [ %114, %113 ], [ %114, %129 ]
  %133 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 2
  %134 = bitcast %"class.WTF::AtomicString"* %133 to i64*
  %135 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %133, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  store i64 %132, i64* %134, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #15
  br label %151

151:                                              ; preds = %150, %147, %131
  br i1 %105, label %165, label %152

152:                                              ; preds = %151
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #15
  br label %165

165:                                              ; preds = %164, %161, %151, %81, %98, %101
  %166 = bitcast %"class.blink::StepRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %166) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 120, i1 false)
  %167 = load %"class.blink::InputType"*, %"class.blink::InputType"** %69, align 8, !noalias !54
  %168 = bitcast %"class.blink::InputType"* %167 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %169 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %168, align 8, !noalias !54
  %170 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %169, i64 31
  %171 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %170, align 8, !noalias !54
  call void %171(%"class.blink::StepRange"* nonnull sret %3, %"class.blink::InputType"* %167, i32 0) #15
  %172 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %3, i64 0, i32 5
  %173 = load i8, i8* %172, align 8, !range !3
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %183, label %175

175:                                              ; preds = %165
  %176 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #15
  %177 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %3, i64 0, i32 2
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* dereferenceable(24) %177) #15
  %178 = call double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"* nonnull %4) #15
  %179 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 7
  store double %178, double* %179, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #15
  %180 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #15
  %181 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %3, i64 0, i32 3
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* dereferenceable(24) %181) #15
  %182 = call double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #15
  br label %185

183:                                              ; preds = %165
  %184 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 7
  store double 1.000000e+00, double* %184, align 8
  br label %185

185:                                              ; preds = %183, %175
  %186 = phi double [ 0.000000e+00, %183 ], [ %182, %175 ]
  %187 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 8
  store double %186, double* %187, align 8
  %188 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %189 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %188, i64 0, i32 2, i32 0, i32 0
  %190 = load %"class.blink::Document"*, %"class.blink::Document"** %189, align 8
  %191 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %190) #15
  %192 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192) #15
  %193 = call { i64, i64 } @_ZNK5blink4Node23PixelSnappedBoundingBoxEv(%"class.blink::Node"* %15) #15
  %194 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %195 = extractvalue { i64, i64 } %193, 0
  store i64 %195, i64* %194, align 8
  %196 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %197 = extractvalue { i64, i64 } %193, 1
  store i64 %197, i64* %196, align 8
  %198 = call { i64, i64 } @_ZNK5blink14LocalFrameView13FrameToScreenERKNS_7IntRectE(%"class.blink::LocalFrameView"* %191, %"class.blink::IntRect"* nonnull dereferenceable(16) %7) #15
  %199 = extractvalue { i64, i64 } %198, 0
  %200 = extractvalue { i64, i64 } %198, 1
  %201 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 1
  %202 = bitcast %"class.blink::IntRect"* %201 to i64*
  store i64 %199, i64* %202, align 8
  %203 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 1, i32 1
  %204 = bitcast %"class.blink::IntSize"* %203 to i64*
  store i64 %200, i64* %204, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192) #15
  %205 = load %"class.blink::InputType"*, %"class.blink::InputType"** %69, align 8
  %206 = bitcast %"class.blink::InputType"* %205 to double (%"class.blink::InputType"*)***
  %207 = load double (%"class.blink::InputType"*)**, double (%"class.blink::InputType"*)*** %206, align 8
  %208 = getelementptr inbounds double (%"class.blink::InputType"*)*, double (%"class.blink::InputType"*)** %207, i64 17
  %209 = load double (%"class.blink::InputType"*)*, double (%"class.blink::InputType"*)** %208, align 8
  %210 = call double %209(%"class.blink::InputType"* %205) #15
  %211 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 3
  store double %210, double* %211, align 8
  %212 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %213 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %212, align 8
  %214 = bitcast %"class.blink::InputTypeView"* %213 to i32 (%"class.blink::InputTypeView"*)***
  %215 = load i32 (%"class.blink::InputTypeView"*)**, i32 (%"class.blink::InputTypeView"*)*** %214, align 8
  %216 = getelementptr inbounds i32 (%"class.blink::InputTypeView"*)*, i32 (%"class.blink::InputTypeView"*)** %215, i64 57
  %217 = load i32 (%"class.blink::InputTypeView"*)*, i32 (%"class.blink::InputTypeView"*)** %216, align 8
  %218 = call i32 %217(%"class.blink::InputTypeView"* %213) #15
  %219 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 16
  store i32 %218, i32* %219, align 8
  %220 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %212, align 8
  %221 = bitcast %"class.blink::InputTypeView"* %220 to i8 (%"class.blink::InputTypeView"*)***
  %222 = load i8 (%"class.blink::InputTypeView"*)**, i8 (%"class.blink::InputTypeView"*)*** %221, align 8
  %223 = getelementptr inbounds i8 (%"class.blink::InputTypeView"*)*, i8 (%"class.blink::InputTypeView"*)** %222, i64 25
  %224 = load i8 (%"class.blink::InputTypeView"*)*, i8 (%"class.blink::InputTypeView"*)** %223, align 8
  %225 = call zeroext i8 %224(%"class.blink::InputTypeView"* %220) #15
  %226 = icmp eq i8 %225, 1
  %227 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 10
  %228 = zext i1 %226 to i8
  store i8 %228, i8* %227, align 1
  %229 = call %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"* %0)
  %230 = icmp eq %"class.blink::HTMLDataListElement"* %229, null
  br i1 %230, label %487, label %231

231:                                              ; preds = %185
  %232 = call %"class.blink::HTMLDataListOptionsCollection"* @_ZN5blink19HTMLDataListElement7optionsEv(%"class.blink::HTMLDataListElement"* nonnull %229) #15
  %233 = getelementptr inbounds %"class.blink::HTMLDataListOptionsCollection", %"class.blink::HTMLDataListOptionsCollection"* %232, i64 0, i32 0
  %234 = bitcast %"class.WTF::String"* %8 to i8*
  %235 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %236 = bitcast %"class.mojo::StructPtr.2620"* %9 to i8*
  %237 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = bitcast %"class.mojo::StructPtr.2620"* %9 to i64*
  %239 = bitcast %"class.blink::Decimal"* %10 to i8*
  %240 = bitcast %"class.WTF::String"* %11 to i8*
  %241 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %242 = bitcast %"class.blink::Decimal"* %12 to i8*
  %243 = bitcast %"class.WTF::String"* %13 to i8*
  %244 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %245 = bitcast %"class.WTF::String"* %14 to i8*
  %246 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %247 = bitcast %"class.WTF::String"* %14 to i64*
  %248 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 4
  %249 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %250 = getelementptr inbounds %"struct.blink::DateTimeChooserParameters", %"struct.blink::DateTimeChooserParameters"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %251 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %248, i64 0, i32 0, i32 0, i32 0
  br label %252

252:                                              ; preds = %484, %231
  %253 = phi i32 [ 0, %231 ], [ %485, %484 ]
  %254 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %233, i32 %253) #15
  %255 = bitcast %"class.blink::Element"* %254 to %"class.blink::HTMLOptionElement"*
  %256 = icmp eq %"class.blink::Element"* %254, null
  br i1 %256, label %484, label %257

257:                                              ; preds = %252
  %258 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %255) #15
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %484, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 1
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %286, label %264

264:                                              ; preds = %260
  %265 = call zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"* nonnull %255) #15
  br i1 %265, label %286, label %266

266:                                              ; preds = %264
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #15
  %267 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %255) #15
  store %"class.WTF::StringImpl"* %267, %"class.WTF::StringImpl"** %235, align 8
  %268 = call zeroext i1 @_ZNK5blink16HTMLInputElement12IsValidValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %8)
  %269 = xor i1 %268, true
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %266
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #15
  br label %285

285:                                              ; preds = %284, %281, %266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #15
  br label %286

286:                                              ; preds = %264, %260, %285
  %287 = phi i1 [ %269, %285 ], [ true, %260 ], [ true, %264 ]
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %286
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %286
  %297 = phi i32 [ %295, %294 ], [ %293, %286 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #15
  br i1 %287, label %484, label %301

300:                                              ; preds = %296
  br i1 %287, label %484, label %301

301:                                              ; preds = %299, %300
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #15
  %302 = call i8* @_Znwm(i64 24) #16, !noalias !57
  %303 = bitcast i8* %302 to %"class.blink::mojom::blink::DateTimeSuggestion"*
  call void @_ZN5blink5mojom5blink18DateTimeSuggestionC1Ev(%"class.blink::mojom::blink::DateTimeSuggestion"* nonnull %303) #15, !noalias !57
  %304 = ptrtoint i8* %302 to i64
  store i64 %304, i64* %238, align 8, !alias.scope !57
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %239) #15
  %305 = load %"class.blink::InputType"*, %"class.blink::InputType"** %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #15
  %306 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %255) #15
  store %"class.WTF::StringImpl"* %306, %"class.WTF::StringImpl"** %241, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #15
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %12) #15
  %307 = bitcast %"class.blink::InputType"* %305 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %308 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %307, align 8
  %309 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %308, i64 79
  %310 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %309, align 8
  call void %310(%"class.blink::Decimal"* nonnull sret %10, %"class.blink::InputType"* %305, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #15
  %311 = call double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"* nonnull %10) #15
  %312 = load %"class.blink::mojom::blink::DateTimeSuggestion"*, %"class.blink::mojom::blink::DateTimeSuggestion"** %237, align 8
  %313 = getelementptr inbounds %"class.blink::mojom::blink::DateTimeSuggestion", %"class.blink::mojom::blink::DateTimeSuggestion"* %312, i64 0, i32 0
  store double %311, double* %313, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #15
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %314, null
  br i1 %315, label %329, label %316

316:                                              ; preds = %301
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br i1 %320, label %323, label %325

323:                                              ; preds = %316
  %324 = add i32 %322, -1
  store i32 %324, i32* %321, align 4
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi i32 [ %324, %323 ], [ %322, %316 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %314) #15
  br label %329

329:                                              ; preds = %301, %325, %328
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %239) #15
  %330 = load %"class.blink::mojom::blink::DateTimeSuggestion"*, %"class.blink::mojom::blink::DateTimeSuggestion"** %237, align 8
  %331 = getelementptr inbounds %"class.blink::mojom::blink::DateTimeSuggestion", %"class.blink::mojom::blink::DateTimeSuggestion"* %330, i64 0, i32 0
  %332 = load double, double* %331, align 8
  %333 = fcmp uno double %332, 0.000000e+00
  br i1 %333, label %473, label %334

334:                                              ; preds = %329
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #15
  %335 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %255) #15
  store %"class.WTF::StringImpl"* %335, %"class.WTF::StringImpl"** %244, align 8
  %336 = icmp eq %"class.WTF::StringImpl"* %335, null
  br i1 %336, label %344, label %337

337:                                              ; preds = %334
  %338 = load %"class.blink::InputType"*, %"class.blink::InputType"** %69, align 8
  %339 = bitcast %"class.blink::InputType"* %338 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %340 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %339, align 8
  %341 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %340, i64 41
  %342 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %341, align 8
  %343 = call %"class.WTF::StringImpl"* %342(%"class.blink::InputType"* %338, %"class.WTF::String"* nonnull dereferenceable(8) %13) #15
  br label %344

344:                                              ; preds = %334, %337
  %345 = phi %"class.WTF::StringImpl"* [ %343, %337 ], [ null, %334 ]
  %346 = ptrtoint %"class.WTF::StringImpl"* %345 to i64
  %347 = load %"class.blink::mojom::blink::DateTimeSuggestion"*, %"class.blink::mojom::blink::DateTimeSuggestion"** %237, align 8
  %348 = getelementptr inbounds %"class.blink::mojom::blink::DateTimeSuggestion", %"class.blink::mojom::blink::DateTimeSuggestion"* %347, i64 0, i32 1
  %349 = bitcast %"class.WTF::String"* %348 to i64*
  %350 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %348, i64 0, i32 0, i32 0
  %351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %350, align 8
  store i64 %346, i64* %349, align 8
  %352 = icmp eq %"class.WTF::StringImpl"* %351, null
  br i1 %352, label %366, label %353

353:                                              ; preds = %344
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = and i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 0
  %359 = load i32, i32* %358, align 4
  br i1 %357, label %360, label %362

360:                                              ; preds = %353
  %361 = add i32 %359, -1
  store i32 %361, i32* %358, align 4
  br label %362

362:                                              ; preds = %360, %353
  %363 = phi i32 [ %361, %360 ], [ %359, %353 ]
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %366

365:                                              ; preds = %362
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %351) #15
  br label %366

366:                                              ; preds = %365, %362, %344
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #15
  br label %382

382:                                              ; preds = %366, %378, %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %245) #15
  %383 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %255) #15
  %384 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5labelEv(%"class.blink::HTMLOptionElement"* nonnull %255) #15
  %385 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %383, %"class.WTF::StringImpl"* %384) #15
  br i1 %385, label %386, label %388

386:                                              ; preds = %382
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i64 0) #15
  %387 = load i64, i64* %247, align 8
  br label %391

388:                                              ; preds = %382
  %389 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5labelEv(%"class.blink::HTMLOptionElement"* nonnull %255) #15
  store %"class.WTF::StringImpl"* %389, %"class.WTF::StringImpl"** %246, align 8
  %390 = ptrtoint %"class.WTF::StringImpl"* %389 to i64
  br label %391

391:                                              ; preds = %388, %386
  %392 = phi i64 [ %390, %388 ], [ %387, %386 ]
  %393 = load %"class.blink::mojom::blink::DateTimeSuggestion"*, %"class.blink::mojom::blink::DateTimeSuggestion"** %237, align 8
  %394 = getelementptr inbounds %"class.blink::mojom::blink::DateTimeSuggestion", %"class.blink::mojom::blink::DateTimeSuggestion"* %393, i64 0, i32 2
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %246, align 8
  %395 = bitcast %"class.WTF::String"* %394 to i64*
  %396 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %394, i64 0, i32 0, i32 0
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %396, align 8
  store i64 %392, i64* %395, align 8
  %398 = icmp eq %"class.WTF::StringImpl"* %397, null
  br i1 %398, label %412, label %399

399:                                              ; preds = %391
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = load atomic i32, i32* %400 monotonic, align 4
  %402 = and i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 0
  %405 = load i32, i32* %404, align 4
  br i1 %403, label %406, label %408

406:                                              ; preds = %399
  %407 = add i32 %405, -1
  store i32 %407, i32* %404, align 4
  br label %408

408:                                              ; preds = %406, %399
  %409 = phi i32 [ %407, %406 ], [ %405, %399 ]
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %412

411:                                              ; preds = %408
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %397) #15
  br label %412

412:                                              ; preds = %391, %408, %411
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %428, label %415

415:                                              ; preds = %412
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load atomic i32, i32* %416 monotonic, align 4
  %418 = and i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  br i1 %419, label %422, label %424

422:                                              ; preds = %415
  %423 = add i32 %421, -1
  store i32 %423, i32* %420, align 4
  br label %424

424:                                              ; preds = %422, %415
  %425 = phi i32 [ %423, %422 ], [ %421, %415 ]
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %424
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %413) #15
  br label %428

428:                                              ; preds = %412, %424, %427
  %429 = icmp eq %"class.WTF::StringImpl"* %384, null
  br i1 %429, label %443, label %430

430:                                              ; preds = %428
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 0
  %436 = load i32, i32* %435, align 4
  br i1 %434, label %437, label %439

437:                                              ; preds = %430
  %438 = add i32 %436, -1
  store i32 %438, i32* %435, align 4
  br label %439

439:                                              ; preds = %437, %430
  %440 = phi i32 [ %438, %437 ], [ %436, %430 ]
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %384) #15
  br label %443

443:                                              ; preds = %428, %439, %442
  %444 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %444, label %458, label %445

445:                                              ; preds = %443
  %446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = load atomic i32, i32* %446 monotonic, align 4
  %448 = and i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %451 = load i32, i32* %450, align 4
  br i1 %449, label %452, label %454

452:                                              ; preds = %445
  %453 = add i32 %451, -1
  store i32 %453, i32* %450, align 4
  br label %454

454:                                              ; preds = %452, %445
  %455 = phi i32 [ %453, %452 ], [ %451, %445 ]
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %458

457:                                              ; preds = %454
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #15
  br label %458

458:                                              ; preds = %443, %454, %457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #15
  %459 = load i32, i32* %249, align 4
  %460 = load i32, i32* %250, align 8
  %461 = icmp eq i32 %459, %460
  br i1 %461, label %471, label %462, !prof !4

462:                                              ; preds = %458
  %463 = load %"class.mojo::StructPtr.2620"*, %"class.mojo::StructPtr.2620"** %251, align 8
  %464 = zext i32 %459 to i64
  %465 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %463, i64 %464
  %466 = bitcast %"class.mojo::StructPtr.2620"* %465 to i64*
  %467 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %465, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %467, align 8
  %468 = load i64, i64* %238, align 8
  store i64 %468, i64* %466, align 8
  %469 = load i32, i32* %249, align 4
  %470 = add i32 %469, 1
  store i32 %470, i32* %249, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #15
  br label %481

471:                                              ; preds = %458
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2617"* %248, %"class.mojo::StructPtr.2620"* nonnull dereferenceable(8) %9) #15
  %472 = load %"class.blink::mojom::blink::DateTimeSuggestion"*, %"class.blink::mojom::blink::DateTimeSuggestion"** %237, align 8
  br label %473

473:                                              ; preds = %471, %329
  %474 = phi %"class.blink::mojom::blink::DateTimeSuggestion"* [ %472, %471 ], [ %330, %329 ]
  %475 = phi i32 [ 0, %471 ], [ 4, %329 ]
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %237, align 8
  %476 = icmp eq %"class.blink::mojom::blink::DateTimeSuggestion"* %474, null
  br i1 %476, label %479, label %477

477:                                              ; preds = %473
  call void @_ZN5blink5mojom5blink18DateTimeSuggestionD1Ev(%"class.blink::mojom::blink::DateTimeSuggestion"* nonnull %474) #15
  %478 = bitcast %"class.blink::mojom::blink::DateTimeSuggestion"* %474 to i8*
  call void @_ZdlPv(i8* %478) #16
  br label %479

479:                                              ; preds = %473, %477
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #15
  %480 = icmp eq i32 %475, 0
  br i1 %480, label %481, label %484

481:                                              ; preds = %462, %479, %484
  %482 = phi i32 [ %485, %484 ], [ %253, %479 ], [ %253, %462 ]
  %483 = add i32 %482, 1
  br label %484

484:                                              ; preds = %257, %299, %300, %252, %479, %481
  %485 = phi i32 [ %483, %481 ], [ %253, %479 ], [ %253, %252 ], [ %253, %300 ], [ %253, %299 ], [ %253, %257 ]
  %486 = phi i32 [ 0, %481 ], [ %475, %479 ], [ 2, %252 ], [ 4, %300 ], [ 4, %299 ], [ 4, %257 ]
  switch i32 %486, label %487 [
    i32 0, label %252
    i32 4, label %481
  ]

487:                                              ; preds = %484, %185
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %166) #15
  br label %488

488:                                              ; preds = %2, %487
  %489 = phi i1 [ true, %487 ], [ false, %2 ]
  ret i1 %489
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element24ComputeInheritedLanguageEv(%"class.blink::Element"*) local_unnamed_addr #1

declare double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink14LocalFrameView13FrameToScreenERKNS_7IntRectE(%"class.blink::LocalFrameView"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink4Node23PixelSnappedBoundingBoxEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement26SupportsInputModeAttributeEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 82
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement27CapsLockStateMayHaveChangedEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 45
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement27ShouldDrawCapsLockIndicatorEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to i1 (%"class.blink::InputTypeView"*)***
  %5 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %5, i64 46
  %7 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputTypeView"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement23SetShouldRevealPasswordEb(%"class.blink::HTMLInputElement"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %5 = load i16, i16* %4, align 4
  %6 = lshr i16 %5, 11
  %7 = and i16 %6, 1
  %8 = zext i16 %7 to i32
  %9 = zext i1 %1 to i32
  %10 = icmp eq i32 %8, %9
  br i1 %10, label %62, label %11

11:                                               ; preds = %2
  %12 = zext i1 %1 to i16
  %13 = shl nuw nsw i16 %12, 11
  %14 = and i16 %5, -2049
  %15 = or i16 %14, %13
  store i16 %15, i16* %4, align 4
  %16 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %16, align 8
  %18 = icmp eq %"class.blink::TextControlInnerEditorElement"* %17, null
  br i1 %18, label %62, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #15
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !4

40:                                               ; preds = %31
  tail call void @llvm.trap() #15
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %19, %26, %41
  %44 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason8kControlE, i64 0, i64 0), i8** %44, align 8
  %45 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %45, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %20, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #15
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #15
  br label %61

61:                                               ; preds = %43, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  br label %62

62:                                               ; preds = %61, %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement20IsInteractiveContentEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 5
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ComputedStyle"* @_ZN5blink16HTMLInputElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::HTMLInputElement"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element28OriginalStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"* %3, %"class.blink::StyleRecalcContext"* dereferenceable(8) %1) #15
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %6 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %5, align 8
  %7 = bitcast %"class.blink::InputTypeView"* %6 to void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)***
  %8 = load void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)**, void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)** %8, i64 24
  %10 = load void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)*, void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)** %9, align 8
  tail call void %10(%"class.blink::InputTypeView"* %6, %"class.blink::ComputedStyle"* dereferenceable(104) %4) #15
  ret %"class.blink::ComputedStyle"* %4
}

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element28OriginalStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 44
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %8, i32 94) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZN5blink16HTMLInputElement17PopupRootAXObjectEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to %"class.blink::AXObject"* (%"class.blink::InputTypeView"*)***
  %5 = load %"class.blink::AXObject"* (%"class.blink::InputTypeView"*)**, %"class.blink::AXObject"* (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::InputTypeView"*)*, %"class.blink::AXObject"* (%"class.blink::InputTypeView"*)** %5, i64 49
  %7 = load %"class.blink::AXObject"* (%"class.blink::InputTypeView"*)*, %"class.blink::AXObject"* (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call %"class.blink::AXObject"* %7(%"class.blink::InputTypeView"* %3) #15
  ret %"class.blink::AXObject"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement21EnsureFallbackContentEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 50
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement20EnsurePrimaryContentEv(%"class.blink::HTMLInputElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to void (%"class.blink::InputTypeView"*)***
  %5 = load void (%"class.blink::InputTypeView"*)**, void (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %5, i64 51
  %7 = load void (%"class.blink::InputTypeView"*)*, void (%"class.blink::InputTypeView"*)** %6, align 8
  tail call void %7(%"class.blink::InputTypeView"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement18HasFallbackContentEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to i1 (%"class.blink::InputTypeView"*)***
  %5 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %5, i64 52
  %7 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputTypeView"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HTMLInputElement"* nocapture readonly, %"class.WTF::Vector.807"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InputType"*, %"class.blink::InputType"** %3, align 8
  %5 = bitcast %"class.blink::InputType"* %4 to void (%"class.blink::InputType"*, %"class.WTF::Vector.807"*)***
  %6 = load void (%"class.blink::InputType"*, %"class.WTF::Vector.807"*)**, void (%"class.blink::InputType"*, %"class.WTF::Vector.807"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.WTF::Vector.807"*)*, void (%"class.blink::InputType"*, %"class.WTF::Vector.807"*)** %6, i64 57
  %8 = load void (%"class.blink::InputType"*, %"class.WTF::Vector.807"*)*, void (%"class.blink::InputType"*, %"class.WTF::Vector.807"*)** %7, align 8
  tail call void %8(%"class.blink::InputType"* %4, %"class.WTF::Vector.807"* dereferenceable(16) %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLInputElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLInputElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"* %3) #15
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode15ChildrenChangedERKNS0_14ChildrenChangeE(%"class.blink::ContainerNode"* %5, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56) %1) #15
  ret void
}

declare void @_ZN5blink13ContainerNode15ChildrenChangedERKNS0_14ChildrenChangeE(%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZNK5blink16HTMLInputElement24GetLayoutBoxForScrollingEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 7
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %9, label %16

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %10, align 8
  %12 = icmp eq %"class.blink::TextControlInnerEditorElement"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %14) #15
  br label %19

16:                                               ; preds = %9, %1
  %17 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = tail call %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"* %17) #15
  br label %19

19:                                               ; preds = %16, %13
  %20 = phi %"class.blink::LayoutBox"* [ %15, %13 ], [ %18, %16 ]
  ret %"class.blink::LayoutBox"* %20
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLInputElement15IsDraggedSliderEv(%"class.blink::HTMLInputElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::InputTypeView"*, %"class.blink::InputTypeView"** %2, align 8
  %4 = bitcast %"class.blink::InputTypeView"* %3 to i1 (%"class.blink::InputTypeView"*)***
  %5 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %5, i64 55
  %7 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputTypeView"* %3) #15
  ret i1 %8
}

declare zeroext i1 @_ZN5blink14EmailInputType19IsValidEmailAddressERKNS_12ScriptRegexpERKN3WTF6StringE(%"class.blink::ScriptRegexp"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::ScriptRegexp"* @_ZNK5blink8Document17EnsureEmailRegexpEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #15
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16HTMLInputElement18GetWrapperTypeInfoEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16HTMLInputElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink18TextControlElement10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::TextControlElement"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #15
  ret %"class.blink::ComputedStyle"* %4
}

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.2642"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink18TextControlElement18DispatchFocusEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink18TextControlElement17DispatchBlurEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLInputElement13IsTextControlEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 7
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLInputElement21IsOptionalFormControlEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::InputType"*, %"class.blink::InputType"** %2, align 8
  %4 = bitcast %"class.blink::InputType"* %3 to i1 (%"class.blink::InputType"*)***
  %5 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %5, i64 25
  %7 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InputType"* %3) #15
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::HTMLInputElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %11 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %10) #15
  %12 = xor i1 %11, true
  br label %13

13:                                               ; preds = %1, %9
  %14 = phi i1 [ true, %1 ], [ %12, %9 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink22HTMLFormControlElement14IsValidElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare i32 @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElement", %"class.blink::HTMLFormControlElement"* %0, i64 0, i32 3
  ret %"class.blink::FormAssociated"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink16HTMLInputElement21GetFormElementPiiTypeEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HTMLInputElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE(%"class.blink::HTMLInputElement"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 11
  store i32 %1, i32* %3, align 8
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLInputElement20IsPlaceholderVisibleEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 5
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 8192
  %5 = icmp ne i16 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLInputElement12IsEmptyValueEv(%"class.blink::HTMLInputElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0
  %3 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %2) #15
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %5
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %5
  %18 = phi i32 [ %16, %15 ], [ %14, %5 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = phi i1 [ %8, %17 ], [ %8, %20 ], [ true, %1 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TextControlElement16HandleFocusEventEPNS_7ElementENS_5mojom9FocusTypeE(%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13ListedElement18IsElementInternalsEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE(%"class.blink::ListedElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink13ListedElement16ValidationAnchorEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_16HTMLInputElementEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -31
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::Node"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %5, i64 10
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::Node"* %3) #15
  %9 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %8) #15
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_16HTMLInputElementEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 6
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::HTMLImageLoader"**
  %4 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLImageLoader"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %4, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK5blink11ImageLoader15HasPendingEventEv(%"class.blink::ImageLoader"* %7) #15
  br i1 %8, label %17, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %4, i64 0, i32 0, i32 8, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #15
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %4, i64 0, i32 0, i32 8, i32 0, i32 1
  %14 = bitcast i64* %13 to %"class.blink::ImageLoader::Task"**
  %15 = load %"class.blink::ImageLoader::Task"*, %"class.blink::ImageLoader::Task"** %14, align 8
  %16 = icmp ne %"class.blink::ImageLoader::Task"* %15, null
  br label %17

17:                                               ; preds = %1, %6, %9, %12
  %18 = phi i1 [ false, %1 ], [ true, %6 ], [ %16, %12 ], [ false, %9 ]
  ret i1 %18
}

; Function Attrs: nounwind
declare void @_ZN5blink16IdTargetObserverD2Ev(%"class.blink::IdTargetObserver"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27ListAttributeTargetObserverD0Ev(%"class.blink::ListAttributeTargetObserver"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ListAttributeTargetObserver", %"class.blink::ListAttributeTargetObserver"* %0, i64 0, i32 0
  tail call void @_ZN5blink16IdTargetObserverD2Ev(%"class.blink::IdTargetObserver"* %2) #15
  ret void
}

declare void @_ZN5blink16IdTargetObserver10UnregisterEv(%"class.blink::IdTargetObserver"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare zeroext i1 @_ZNK5blink11ImageLoader15HasPendingEventEv(%"class.blink::ImageLoader"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF20EqualIgnoringNullityEPNS_10StringImplES1_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #8 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.2777, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #15
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !46

23:                                               ; preds = %19
  %24 = bitcast %class.anon.2777* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #15
  %25 = getelementptr inbounds %class.anon.2777, %class.anon.2777* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.2777, %class.anon.2777* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), %class.anon.2777* nonnull dereferenceable(16) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #15
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #15
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #15
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.2777* dereferenceable(16)) local_unnamed_addr #8 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #15
  %20 = tail call i8* @_Znwm(i64 192) #16
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #15
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #15
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #15
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #15
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #15
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #15
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #15
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #15
  %38 = getelementptr inbounds %class.anon.2777, %class.anon.2777* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #15
  %40 = getelementptr inbounds %class.anon.2777, %class.anon.2777* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #15
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #15
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #15
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #15
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #15
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #15
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #16
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #15
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !60

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !62

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !63

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #16
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #16, !noalias !64
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !64
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #16
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v84Date3NewENS_5LocalINS_7ContextEEEd(%"class.v8::Context"*, double) local_unnamed_addr #1

declare double @_ZNK4base4Time20ToJsTimeIgnoringNullEv(%"class.base::Time"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.422, %class.scoped_refptr.422* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #15
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.920"* dereferenceable(8) %9) #15
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #15
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #15
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #15
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #15
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.422* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #15
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #15
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #15
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #15
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #15
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #15
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #15
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.422* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #15
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #15
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #15
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.16, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0)) #15
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.16, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0)) #15
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.920"* dereferenceable(8)) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value6IsDateEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare double @_ZNK2v84Date7ValueOfEv(%"class.v8::Date"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #11

declare void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7DecimaleqERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.807"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !46

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.807"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !46

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.807"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.807"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !46

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.807"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !46

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.807"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.807"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.23, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #14

declare %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"*, i32) local_unnamed_addr #1

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #11

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #11

declare void @_ZN5blink21RadioButtonGroupScope9AddButtonEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"*, %"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink18DateTimeSuggestionD1Ev(%"class.blink::mojom::blink::DateTimeSuggestion"*) unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9InputTypeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %21, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #15
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9InputTypeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InputType"*
  %4 = bitcast i8* %1 to void (%"class.blink::InputType"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::InputType"*, %"class.blink::Visitor"*)**, void (%"class.blink::InputType"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.blink::Visitor"*)*, void (%"class.blink::InputType"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::InputType"*, %"class.blink::Visitor"*)*, void (%"class.blink::InputType"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::InputType"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_9InputTypeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::InputType"*
  %3 = bitcast i8* %0 to void (%"class.blink::InputType"*)***
  %4 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %3, align 8
  %5 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %4, align 8
  tail call void %5(%"class.blink::InputType"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_9InputTypeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink17BaseTextInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseTextInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27ListAttributeTargetObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ListAttributeTargetObserver"*
  %4 = bitcast i8* %1 to void (%"class.blink::ListAttributeTargetObserver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ListAttributeTargetObserver"*, %"class.blink::Visitor"*)**, void (%"class.blink::ListAttributeTargetObserver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ListAttributeTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ListAttributeTargetObserver"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::ListAttributeTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ListAttributeTargetObserver"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ListAttributeTargetObserver"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLImageLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ImageLoader"*
  tail call void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink15HTMLImageLoaderC1EPNS_7ElementE(%"class.blink::HTMLImageLoader"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ImageLoaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ImageLoader"*
  tail call void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ImageLoader"*
  %3 = bitcast i8* %0 to void (%"class.blink::ImageLoader"*)***
  %4 = load void (%"class.blink::ImageLoader"*)**, void (%"class.blink::ImageLoader"*)*** %3, align 8
  %5 = load void (%"class.blink::ImageLoader"*)*, void (%"class.blink::ImageLoader"*)** %4, align 8
  tail call void %5(%"class.blink::ImageLoader"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2846", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2846"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2846", %"class.WTF::StringTypeAdapter.2846"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2846"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2846"* nonnull %4, i8* %14) #15
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2500"* %9) #15
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2500"* %9) #15
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %25, i8* %26) #15
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2846", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2847", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2846", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2846"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2846"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2846"* nonnull %5, i8* %10) #15
  %11 = bitcast %"class.WTF::StringTypeAdapter.2846"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2846", %"class.WTF::StringTypeAdapter.2846"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2846"* nonnull %3, i8* %14) #15
  %15 = bitcast %"class.WTF::StringTypeAdapter.2847"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2847", %"class.WTF::StringTypeAdapter.2847"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2847", %"class.WTF::StringTypeAdapter.2847"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #15
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2847"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2846"* nonnull %3, i8* %1) #15
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2847", %"class.WTF::StringTypeAdapter.2847"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2848"* nonnull %34, i8* %37) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2500"* %6) #15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2846"* nonnull %5, i8* %40) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2846", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2847", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2846", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2846"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2846"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2846"* nonnull %5, i8* %10) #15
  %11 = bitcast %"class.WTF::StringTypeAdapter.2846"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2846", %"class.WTF::StringTypeAdapter.2846"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2846"* nonnull %3, i8* %14) #15
  %15 = bitcast %"class.WTF::StringTypeAdapter.2847"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2847", %"class.WTF::StringTypeAdapter.2847"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2847", %"class.WTF::StringTypeAdapter.2847"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #15
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2847"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2846"* nonnull %3, i16* %1) #15
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2847", %"class.WTF::StringTypeAdapter.2847"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2848"* nonnull %34, i16* %37) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2500"* %6) #15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2846"* nonnull %5, i16* %40) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2846"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2500"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2846", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2846"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2846", %"class.WTF::StringTypeAdapter.2846"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2500", %"class.WTF::StringAppend.2500"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2846"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2846"* nonnull %4, i8* %13) #15
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2500", %"class.WTF::StringAppend.2500"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %45, i8* %46) #15
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2846"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2848"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2846"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2848"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16HTMLInputElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HTMLInputElement"**
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #15
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #15
  %7 = icmp eq %"class.blink::HTMLInputElement"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HTMLInputElement"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #15
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #15
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLInputElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLInputElement"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink16HTMLInputElementEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::HTMLInputElement"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::HTMLInputElement"*)**
  %21 = load void (%"class.blink::HTMLInputElement"*)*, void (%"class.blink::HTMLInputElement"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::HTMLInputElement"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::HTMLInputElement"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::HTMLInputElement"* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink16HTMLInputElementEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %10 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::PersistentRegion"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::PersistentNode"* %6 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %6, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %14, align 8
  store %"class.blink::PersistentNode"* %6, %"class.blink::PersistentNode"** %10, align 8
  br label %15

15:                                               ; preds = %3, %8
  %16 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.807"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.807", %"class.WTF::Vector.807"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2568"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2568"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2568"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #15
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17HTMLOptionElementEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2571"*, %"class.blink::Member.2571"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.2571"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2571"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !46

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2568"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #15
  %33 = bitcast %"class.WTF::Vector.2568"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #15
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #15
  %42 = bitcast %"class.WTF::Vector.2568"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17HTMLOptionElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.31, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.33, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17HTMLOptionElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #15
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2571"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2571", %"class.blink::Member.2571"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2571"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZNK5blink17HTMLOptionElement5TraceEPNS_7VisitorE(%"class.blink::HTMLOptionElement"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink17HTMLOptionElement5TraceEPNS_7VisitorE(%"class.blink::HTMLOptionElement"*, %"class.blink::Visitor"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2568"*, %"class.blink::HTMLOptionElement"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2568"* %0, i32 %14) #15
  %15 = getelementptr inbounds %"class.WTF::Vector.2568", %"class.WTF::Vector.2568"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2571"*, %"class.blink::Member.2571"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2571", %"class.blink::Member.2571"* %16, i64 %18
  %20 = bitcast %"class.blink::HTMLOptionElement"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2571"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #15
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16IdTargetObserverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16IdTargetObserverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IdTargetObserver"*
  %4 = bitcast i8* %1 to void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)**, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IdTargetObserver"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16IdTargetObserverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IdTargetObserver"*
  %3 = bitcast i8* %0 to void (%"class.blink::IdTargetObserver"*)***
  %4 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %3, align 8
  %5 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %4, align 8
  tail call void %5(%"class.blink::IdTargetObserver"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16IdTargetObserverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink5mojom5blink18DateTimeSuggestionC1Ev(%"class.blink::mojom::blink::DateTimeSuggestion"*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2617"*, %"class.mojo::StructPtr.2620"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.2620"*, %"class.mojo::StructPtr.2620"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.2620"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.2620"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !46

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.2620"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEEEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEEEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2617"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.2620"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2617"* %0, i32 %22) #15
  %36 = load %"class.mojo::StructPtr.2620"*, %"class.mojo::StructPtr.2620"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.2620"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.2620"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !46

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.2620"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEEEEmm(i64 %55) #15
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEEEEPKcv, i64 0, i64 0)) #15
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2617"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.2620"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2617"* %0, i32 %50) #15
  %64 = load %"class.mojo::StructPtr.2620"*, %"class.mojo::StructPtr.2620"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.2620"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.2620"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.2620"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.2620"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.2620"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2617"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.2620"*, %"class.mojo::StructPtr.2620"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.2620"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2617"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.2620"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.2620"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.2620"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.2620"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !67

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.2620"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.2620"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.2620"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.2620"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.2620"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.2620"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.2620"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.2620"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.2620"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.2620"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.2620"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.2620"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.2620"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEEEEmm(i64 %73) #15
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEEEEPKcv, i64 0, i64 0)) #15
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.2620"*, %"class.mojo::StructPtr.2620"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.2620"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.2620"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.2620"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.2620"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.2620"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.2620"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !68

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.2620"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.2620"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.2620"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.2620"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.2620"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.2620"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.2620"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.2620"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.2620"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.2620"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.2620"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2620"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::DateTimeSuggestion"* null, %"class.blink::mojom::blink::DateTimeSuggestion"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.2620", %"class.mojo::StructPtr.2620"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.2620"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2617"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #15
  %149 = bitcast %"class.WTF::Vector.2617"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2617", %"class.WTF::Vector.2617"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18DateTimeSuggestionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.23, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readnone }
attributes #18 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 24, i32 33}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink16HTMLInputElement20SaveFormControlStateEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink16HTMLInputElement20SaveFormControlStateEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!19 = distinct !{!19, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!22 = distinct !{!22, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink16HTMLInputElement15CreateStepRangeENS_15AnyStepHandlingE: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink16HTMLInputElement15CreateStepRangeENS_15AnyStepHandlingE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5blink9StepRange12DefaultValueEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink9StepRange12DefaultValueEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5blink9StepRange19ProportionFromValueERKNS_7DecimalE: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink9StepRange19ProportionFromValueERKNS_7DecimalE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN5blink22WrapPersistentInternalINS_16HTMLInputElementEEENS_10PersistentIT_EEPS3_: argument 0"}
!37 = distinct !{!37, !"_ZN5blink22WrapPersistentInternalINS_16HTMLInputElementEEENS_10PersistentIT_EEPS3_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN3WTF4BindIMN5blink16HTMLInputElementEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF4BindIMN5blink16HTMLInputElementEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!41 = !{!42, !44, !39}
!42 = distinct !{!42, !43, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink16HTMLInputElementEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink16HTMLInputElementEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!44 = distinct !{!44, !45, !"_ZN4base8BindOnceIMN5blink16HTMLInputElementEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8BindOnceIMN5blink16HTMLInputElementEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!46 = !{!"branch_weights", i32 2000, i32 1}
!47 = !{i1 (%"class.WTF::String"*)* @_ZN5blinkL15IsValidMIMETypeERKN3WTF6StringE, i1 (%"class.WTF::String"*)* @_ZN5blinkL20IsValidFileExtensionERKN3WTF6StringE}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!50 = distinct !{!50, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!53 = distinct !{!53, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK5blink16HTMLInputElement15CreateStepRangeENS_15AnyStepHandlingE: argument 0"}
!56 = distinct !{!56, !"_ZNK5blink16HTMLInputElement15CreateStepRangeENS_15AnyStepHandlingE"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN5blink5mojom5blink18DateTimeSuggestion3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!59 = distinct !{!59, !"_ZN5blink5mojom5blink18DateTimeSuggestion3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!60 = distinct !{!60, !61}
!61 = !{!"llvm.loop.unroll.disable"}
!62 = distinct !{!62, !61}
!63 = distinct !{!63, !61}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!67 = distinct !{!67, !61}
!68 = distinct !{!68, !61}
