; ModuleID = '../../extensions/browser/app_window/size_constraints.cc'
source_filename = "../../extensions/browser/app_window/size_constraints.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::SizeConstraints" = type { %"class.gfx::Size", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }

@_ZN10extensions15SizeConstraintsC1Ev = hidden unnamed_addr alias void (%"class.extensions::SizeConstraints"*), void (%"class.extensions::SizeConstraints"*)* @_ZN10extensions15SizeConstraintsC2Ev
@_ZN10extensions15SizeConstraintsC1ERKN3gfx4SizeES4_ = hidden unnamed_addr alias void (%"class.extensions::SizeConstraints"*, %"class.gfx::Size"*, %"class.gfx::Size"*), void (%"class.extensions::SizeConstraints"*, %"class.gfx::Size"*, %"class.gfx::Size"*)* @_ZN10extensions15SizeConstraintsC2ERKN3gfx4SizeES4_
@_ZN10extensions15SizeConstraintsD1Ev = hidden unnamed_addr alias void (%"class.extensions::SizeConstraints"*), void (%"class.extensions::SizeConstraints"*)* @_ZN10extensions15SizeConstraintsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions15SizeConstraintsC2Ev(%"class.extensions::SizeConstraints"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.extensions::SizeConstraints"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10extensions15SizeConstraintsC2ERKN3gfx4SizeES4_(%"class.extensions::SizeConstraints"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.gfx::Size"* %1 to i64*
  %5 = bitcast %"class.extensions::SizeConstraints"* %0 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  %7 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1
  %8 = bitcast %"class.gfx::Size"* %2 to i64*
  %9 = bitcast %"class.gfx::Size"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions15SizeConstraintsD2Ev(%"class.extensions::SizeConstraints"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN10extensions15SizeConstraints21AddFrameToConstraintsERKN3gfx4SizeERKNS1_6InsetsE(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %8, %4
  %12 = add i32 %11, %10
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi i32 [ %12, %6 ], [ 0, %2 ]
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = icmp sgt i32 %14, 0
  %20 = select i1 %19, i32 %14, i32 0
  br label %34

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %23, %16
  %27 = add i32 %26, %25
  %28 = icmp sgt i32 %14, 0
  %29 = select i1 %28, i32 %14, i32 0
  %30 = icmp sgt i32 %27, 0
  %31 = select i1 %30, i32 %27, i32 0
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 32
  br label %34

34:                                               ; preds = %21, %18
  %35 = phi i32 [ %20, %18 ], [ %29, %21 ]
  %36 = phi i64 [ 0, %18 ], [ %33, %21 ]
  %37 = zext i32 %35 to i64
  %38 = or i64 %36, %37
  ret i64 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10extensions15SizeConstraints9ClampSizeEN3gfx4SizeE(%"class.extensions::SizeConstraints"* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Size"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Size"*
  store i64 %1, i64* %3, align 8
  %7 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = trunc i64 %1 to i32
  %11 = lshr i64 %1, 32
  %12 = trunc i64 %11 to i32
  br i1 %9, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %8, %15
  %17 = select i1 %16, i32 %15, i32 %8
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ 0, %2 ]
  %20 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = icmp sgt i32 %19, 0
  br i1 %24, label %33, label %49

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %21, %27
  %29 = select i1 %28, i32 %27, i32 %21
  %30 = icmp sgt i32 %19, 0
  %31 = icmp sgt i32 %29, 0
  %32 = select i1 %31, i32 %29, i32 0
  br i1 %30, label %33, label %40

33:                                               ; preds = %25, %23
  %34 = phi i32 [ 0, %23 ], [ %32, %25 ]
  %35 = bitcast i64* %3 to i32*
  %36 = icmp slt i32 %19, %10
  %37 = select i1 %36, i32 %19, i32 %10
  %38 = icmp sgt i32 %37, 0
  %39 = select i1 %38, i32 %37, i32 0
  store i32 %39, i32* %35, align 8
  br label %40

40:                                               ; preds = %25, %33
  %41 = phi i32 [ %34, %33 ], [ %32, %25 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  %45 = icmp slt i32 %41, %12
  %46 = select i1 %45, i32 %41, i32 %12
  %47 = icmp sgt i32 %46, 0
  %48 = select i1 %47, i32 %46, i32 0
  store i32 %48, i32* %44, align 4
  br label %49

49:                                               ; preds = %23, %40, %43
  %50 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #8
  %51 = bitcast %"class.extensions::SizeConstraints"* %0 to i64*
  %52 = load i64, i64* %51, align 4
  store i64 %52, i64* %5, align 8
  call void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"* nonnull %4, %"class.gfx::Size"* nonnull dereferenceable(8) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #8
  %53 = load i64, i64* %3, align 8
  ret i64 %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK10extensions15SizeConstraints14GetMaximumSizeEv(%"class.extensions::SizeConstraints"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %3, %7
  %9 = select i1 %8, i32 %7, i32 %3
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ 0, %1 ]
  %12 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = icmp sgt i32 %11, 0
  %17 = select i1 %16, i32 %11, i32 0
  br label %29

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %13, %20
  %22 = select i1 %21, i32 %20, i32 %13
  %23 = icmp sgt i32 %11, 0
  %24 = select i1 %23, i32 %11, i32 0
  %25 = icmp sgt i32 %22, 0
  %26 = select i1 %25, i32 %22, i32 0
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 32
  br label %29

29:                                               ; preds = %18, %15
  %30 = phi i32 [ %17, %15 ], [ %24, %18 ]
  %31 = phi i64 [ 0, %15 ], [ %28, %18 ]
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  ret i64 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK10extensions15SizeConstraints14GetMinimumSizeEv(%"class.extensions::SizeConstraints"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.extensions::SizeConstraints"* %0 to i64*
  %3 = load i64, i64* %2, align 4
  ret i64 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions15SizeConstraints14HasMinimumSizeEv(%"class.extensions::SizeConstraints"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.extensions::SizeConstraints"* %0 to i64*
  %3 = load i64, i64* %2, align 4
  %4 = trunc i64 %3 to i32
  %5 = icmp ne i32 %4, 0
  %6 = icmp ugt i64 %3, 4294967295
  %7 = or i1 %6, %5
  ret i1 %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions15SizeConstraints14HasMaximumSizeEv(%"class.extensions::SizeConstraints"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %3, %7
  %9 = select i1 %8, i32 %7, i32 %3
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i32 [ %9, %5 ], [ 0, %1 ]
  %12 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = icmp sgt i32 %11, 0
  %17 = select i1 %16, i32 %11, i32 0
  br label %26

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %13, %20
  %22 = select i1 %21, i32 %20, i32 %13
  %23 = icmp sgt i32 %11, 0
  %24 = select i1 %23, i32 %11, i32 0
  %25 = icmp sgt i32 %22, 0
  br label %26

26:                                               ; preds = %15, %18
  %27 = phi i32 [ %17, %15 ], [ %24, %18 ]
  %28 = phi i1 [ false, %15 ], [ %25, %18 ]
  %29 = icmp ne i32 %27, 0
  %30 = or i1 %28, %29
  ret i1 %30
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions15SizeConstraints12HasFixedSizeEv(%"class.extensions::SizeConstraints"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.extensions::SizeConstraints"* %0 to i64*
  %3 = load i64, i64* %2, align 4
  %4 = trunc i64 %3 to i32
  %5 = lshr i64 %3, 32
  %6 = trunc i64 %5 to i32
  %7 = icmp eq i32 %4, 0
  %8 = icmp eq i32 %6, 0
  %9 = or i1 %7, %8
  br i1 %9, label %38, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %12, %4
  %15 = select i1 %14, i32 %4, i32 %12
  %16 = select i1 %13, i32 0, i32 %15
  %17 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %10
  %21 = icmp sgt i32 %16, 0
  %22 = select i1 %21, i32 %16, i32 0
  br label %32

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %18, %25
  %27 = select i1 %26, i32 %25, i32 %18
  %28 = icmp sgt i32 %16, 0
  %29 = select i1 %28, i32 %16, i32 0
  %30 = icmp sgt i32 %27, 0
  %31 = select i1 %30, i32 %27, i32 0
  br label %32

32:                                               ; preds = %20, %23
  %33 = phi i32 [ %22, %20 ], [ %29, %23 ]
  %34 = phi i32 [ 0, %20 ], [ %31, %23 ]
  %35 = icmp eq i32 %33, %4
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = icmp eq i32 %34, %6
  br label %38

38:                                               ; preds = %1, %36, %32
  %39 = phi i1 [ false, %32 ], [ %37, %36 ], [ false, %1 ]
  ret i1 %39
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10extensions15SizeConstraints16set_minimum_sizeERKN3gfx4SizeE(%"class.extensions::SizeConstraints"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gfx::Size"* %1 to i64*
  %4 = bitcast %"class.extensions::SizeConstraints"* %0 to i64*
  %5 = load i64, i64* %3, align 4
  store i64 %5, i64* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10extensions15SizeConstraints16set_maximum_sizeERKN3gfx4SizeE(%"class.extensions::SizeConstraints"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SizeConstraints", %"class.extensions::SizeConstraints"* %0, i64 0, i32 1
  %4 = bitcast %"class.gfx::Size"* %1 to i64*
  %5 = bitcast %"class.gfx::Size"* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
