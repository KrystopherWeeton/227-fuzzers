; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_ratectrl.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_ratectrl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.Vp9LevelSpec = type { i32, i64, i32, i32, double, double, double, i8, i32, i8 }
%struct.VP9_COMP = type { %struct.FRAME_INFO, [8 x i8], %struct.QUANTS, %struct.ThreadData, %struct.MB_MODE_INFO_EXT*, [8 x i8], [256 x [8 x i16]], [256 x [8 x i16]], %struct.VP9Common, %struct.VP9EncoderConfig, %struct.lookahead_ctx*, %struct.lookahead_entry*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, i8, [50 x %struct.TplDepFrame], [8 x %struct.yv12_buffer_config*], [8 x %struct.EncFrameBuf], %union.pthread_mutex_t, i32, %struct.KMEANS_DATA*, i32, i32, [8 x double], [8 x double], [8 x i32], i32, %struct.TileDataEnc*, i32, i32, [3 x i32], i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64*, i32, i32, double*, %struct.yv12_buffer_config, [4 x [64 x %struct.TOKENEXTRA*]], [4 x [64 x %struct.TOKENLIST*]], i64, %struct.RD_OPT, %struct.CODING_CONTEXT, [2 x i32*], [2 x i32*], [2 x i32*], [2 x i32*], i64, i64, i64, %struct.RATE_CONTROL, double, [8 x [4 x i32]], %struct.vpx_codec_pkt_list*, [25 x %struct.MBGRAPH_FRAME_STATS], i32, i32, i32, %struct.SPEED_FEATURES, i32, i32, i32, i32, i32, i8*, i8*, [8 x i32], %struct.CYCLIC_REFRESH*, %struct.ActiveMap, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)*, %struct.scale_factors, i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)*, [13 x %struct.vp9_variance_vtable], i64, i64, i64, i64, %struct.TWO_PASS, i8, %struct.yv12_buffer_config, %struct.ALT_REF_AQ*, i32, i32, i32, i32, i32, i32, %struct.SVC, %struct.diff*, i32, i32, i32, %struct.search_site_config, [10 x i32], [7 x [4 x i32]], [2 x [10 x [10 x i32]]], [10 x [10 x [10 x i32]]], [4 x [3 x i32]], [16 x [4 x i32]], [3 x [2 x [4 x i32]]], %struct.vp9_denoiser, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.noise_estimate, i8*, [4 x i64], i64, i64, i64, i8, i32, %struct.VPxWorker*, %struct.EncWorkerData*, %struct.VP9LfSyncData, %struct.VP9BitstreamWorkerData*, i32, %struct.Vp9LevelInfo, %struct.MultiThreadHandle, void (%struct.VP9RowMTSyncData*, i32, i32)*, void (%struct.VP9RowMTSyncData*, i32, i32, i32)*, %struct.ARNRFilterData, i32, i32, i8*, i8*, i8*, i8*, i8, i8, i8*, i32, %struct.LevelConstraint, i8*, i8*, i32, %struct.vpx_roi_map, i32, %struct.EXT_RATECTRL, [8 x i8] }
%struct.FRAME_INFO = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.QUANTS = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.ThreadData = type { %struct.macroblock, %struct.RD_COUNTS, %struct.FRAME_COUNTS*, %struct.PICK_MODE_CONTEXT*, %struct.PC_TREE*, %struct.PC_TREE*, [8 x i8] }
%struct.macroblock = type { [3 x %struct.macroblock_plane], %struct.macroblockd, %struct.MB_MODE_INFO_EXT*, %struct.MB_MODE_INFO_EXT*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [4 x i32], [4 x i32], i32, [4 x i32], [4 x i32], [4 x i32], [2 x i32*], [2 x i32*], i32**, [4 x i32], [2 x i32*], [2 x i32*], i32**, i32, i32, %struct.MvLimits, [4 x [256 x i8]], [4 x i32], i32, i32, [4 x [2 x [2 x [6 x [2 x [6 x [12 x i32]]]]]]], i32, i32, i32, i32, i32, [12 x i8], [12 x i64], [4 x %struct.mv], [2 x i8], i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, [25 x i8], i8, i8, void (i16*, i32*, i32)*, void (i32*, i8*, i32, i32)*, void (i32*, i16*, i32, i32, i32)*, [8 x i8], [4096 x i8], %struct.scale_factors*, [8 x i8] }
%struct.macroblock_plane = type { [4096 x i16], i32*, i32*, i16*, %struct.buf_2d, [8 x i8], [8 x i16], i16*, i16*, i16*, i16*, i16*, [2 x i64], [8 x i8] }
%struct.buf_2d = type { i8*, i32 }
%struct.macroblockd = type { [3 x %struct.macroblockd_plane], i8, i8, %struct.FRAME_COUNTS*, %struct.TileInfo, i32, %struct.MODE_INFO**, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i32, [3 x i8]*, i32, i32, i32, i32, %struct.frame_contexts*, [2 x %struct.RefBuffer*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [16 x i8]], i8*, [8 x i8], i32, i32, i32, %struct.vpx_internal_error_info*, i32* }
%struct.macroblockd_plane = type { i32*, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i16, i16, i8, i8, i16*, i32* }
%struct.TileInfo = type { i32, i32, i32, i32 }
%struct.MODE_INFO = type { i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x %union.int_mv], [4 x %struct.b_mode_info] }
%union.int_mv = type { i32 }
%struct.b_mode_info = type { i8, [2 x %union.int_mv] }
%struct.frame_contexts = type { [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [4 x [2 x i8]], [7 x [3 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], %struct.tx_probs, [3 x i8], %struct.nmv_context, i32 }
%struct.tx_probs = type { [2 x [3 x i8]], [2 x [2 x i8]], [2 x [1 x i8]] }
%struct.nmv_context = type { [3 x i8], [2 x %struct.nmv_component] }
%struct.nmv_component = type { i8, [10 x i8], [1 x i8], [10 x i8], [2 x [3 x i8]], [3 x i8], i8, i8 }
%struct.RefBuffer = type { i32, %struct.yv12_buffer_config*, %struct.scale_factors }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.MvLimits = type { i32, i32, i32, i32 }
%struct.mv = type { i16, i16 }
%struct.RD_COUNTS = type { [4 x [2 x [2 x [6 x [6 x [12 x i32]]]]]], [3 x i64], [4 x i64] }
%struct.FRAME_COUNTS = type { [4 x [10 x i32]], [10 x [10 x i32]], [16 x [4 x i32]], [4 x [2 x [2 x [6 x [6 x [4 x i32]]]]]], [4 x [2 x [2 x [6 x [6 x i32]]]]], [4 x [3 x i32]], [7 x [4 x i32]], [4 x [2 x i32]], [5 x [2 x i32]], [5 x [2 x [2 x i32]]], [5 x [2 x i32]], %struct.tx_counts, [3 x [2 x i32]], %struct.nmv_context_counts }
%struct.tx_counts = type { [2 x [4 x i32]], [2 x [3 x i32]], [2 x [2 x i32]], [4 x i32] }
%struct.nmv_context_counts = type { [4 x i32], [2 x %struct.nmv_component_counts] }
%struct.nmv_component_counts = type { [2 x i32], [11 x i32], [2 x i32], [10 x [2 x i32]], [2 x [4 x i32]], [4 x i32], [2 x i32], [2 x i32] }
%struct.PICK_MODE_CONTEXT = type { %struct.MODE_INFO, %struct.MB_MODE_INFO_EXT, i8*, [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i16*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i16*]], i32, i32, i32, i32, i32, [12 x i8], i32, i32, i32, i32, [4 x i64], i32, i64, i64, i32, i32, i32, i8, %union.int_mv, i8, i8, i32, [4 x %struct.mv], i8, i32, i8 }
%struct.MB_MODE_INFO_EXT = type { [4 x [2 x %union.int_mv]], [4 x i8] }
%struct.PC_TREE = type { i32, i32, i8, %struct.PICK_MODE_CONTEXT, [2 x %struct.PICK_MODE_CONTEXT], [2 x %struct.PICK_MODE_CONTEXT], %union.anon, %struct.mv }
%union.anon = type { [4 x %struct.PC_TREE*] }
%struct.VP9Common = type { %struct.vpx_internal_error_info, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], [8 x i32], [3 x %struct.RefBuffer], i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], i32, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, i32 (%struct.VP9Common*, i32)*, void (%struct.VP9Common*)*, void (%struct.VP9Common*)*, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, i32, i32, i32, [2 x i8*], i8*, i8*, i32, i8, [11 x i8], %struct.loop_filter_info_n, i32, [4 x i32], %struct.loopfilter, %struct.segmentation, i8, [2 x i8], i32, %struct.frame_contexts*, %struct.frame_contexts*, i32, %struct.FRAME_COUNTS, i32, i32, i32, i32, i32, %struct.postproc_state, i32, i32, i32, i32, i32, i32, %struct.BufferPool*, i8*, i8*, i32, i32, [8 x i8] }
%struct.RefCntBuffer = type { i32, %struct.MV_REF*, i32, i32, i8, i32, i32, %struct.vpx_codec_frame_buffer, %struct.yv12_buffer_config }
%struct.MV_REF = type { [2 x %union.int_mv], [2 x i8] }
%struct.vpx_codec_frame_buffer = type { i8*, i64, i8* }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [8 x [4 x [2 x i8]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { i32, i32, i32, i32, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], %struct.LOOP_FILTER_MASK*, i32 }
%struct.LOOP_FILTER_MASK = type { [4 x i64], [4 x i64], i64, [4 x i16], [4 x i16], i16, [64 x i8] }
%struct.segmentation = type { i8, i8, i8, i8, i8, [7 x i8], [3 x i8], [8 x [4 x i16]], [8 x i32], i32 }
%struct.postproc_state = type { i32, i32, i32, i32, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i8*, i8* }
%struct.BufferPool = type { i8*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, [12 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.VP9EncoderConfig = type { i32, i32, i32, i32, i32, double, %struct.vpx_rational, %struct.vpx_rational64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i32], [5 x i32], [5 x i32], [5 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vpx_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vpx_rational = type { i32, i32 }
%struct.vpx_rational64 = type { i64, i32 }
%struct.vpx_fixed_buf = type { i8*, i64 }
%struct.lookahead_ctx = type { i32, i32, i32, i32, i32, %struct.lookahead_entry* }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32, i64 }
%struct.TplDepFrame = type { i8, %struct.TplDepStats*, i32, i32, i32, i32, i32, i32 }
%struct.TplDepStats = type { i64, i64, i64, i64, i64, i32, %union.int_mv }
%struct.EncFrameBuf = type { i32, i32, %struct.yv12_buffer_config }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.KMEANS_DATA = type { double, i32, i32 }
%struct.TileDataEnc = type { %struct.TileInfo, [13 x [30 x i32]], [13 x [30 x i8]], %struct.FIRSTPASS_DATA, %struct.VP9RowMTSyncData, i32* }
%struct.FIRSTPASS_DATA = type { double, double, i64, i64, i64, i64, i32, i32, double, double, double, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32 }
%struct.VP9RowMTSyncData = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32 }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.0, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%struct.TOKENEXTRA = type { i8*, i16, i32 }
%struct.TOKENLIST = type { %struct.TOKENEXTRA*, %struct.TOKENEXTRA*, i32 }
%struct.RD_OPT = type { [30 x i32], [6 x i32], [8 x [13 x [30 x i32]]], [4 x [3 x i64]], [4 x [4 x i64]], i32, i32, double }
%struct.CODING_CONTEXT = type { [4 x i32], [2 x [32767 x i32]], [2 x [32767 x i32]], [3 x i8], i8*, [4 x i8], [2 x i8], %struct.frame_contexts }
%struct.RATE_CONTROL = type { i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, [5 x double], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], double, double, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], [5 x i32], i32, i32, [25 x i64], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, [5 x i32], double, i32, i32, i32, i32 }
%struct.vpx_codec_pkt_list = type { i32, i32, [1 x %struct.vpx_codec_cx_pkt] }
%struct.vpx_codec_cx_pkt = type { i32, %union.anon.3 }
%union.anon.3 = type { %struct.anon.4, [40 x i8] }
%struct.anon.4 = type { i8*, i64, i64, i64, i32, i32, [5 x i32], [5 x i32], [5 x i8] }
%struct.MBGRAPH_FRAME_STATS = type { %struct.MBGRAPH_MB_STATS* }
%struct.MBGRAPH_MB_STATS = type { [4 x %struct.anon.5] }
%struct.anon.5 = type { i32, %union.anon.6 }
%union.anon.6 = type { %union.int_mv }
%struct.SPEED_FEATURES = type { %struct.MV_SPEED_FEATURES, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i8, i8, i32, i32, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x %struct.MESH_PATTERN], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], [4 x i32], [13 x i32], i32, i32, i32, i32, i32, [13 x i32], i32, i32, i32, i8, i32, i32, i32, i8, i32, i32, i32, %struct.PARTITION_SEARCH_BREAKOUT_THR, %struct.anon.7, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MV_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, %struct.ADAPT_SUBPEL_FORCE_STOP, i32 }
%struct.ADAPT_SUBPEL_FORCE_STOP = type { i32, i32, i32 }
%struct.MESH_PATTERN = type { i32, i32 }
%struct.PARTITION_SEARCH_BREAKOUT_THR = type { i64, i32 }
%struct.anon.7 = type { i32, [3 x float], i32, i32, [4 x i32] }
%struct.CYCLIC_REFRESH = type { i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i64, i16, double, i32, double, [3 x i32], i32, double, i32, i32, i32 }
%struct.ActiveMap = type { i32, i32, i8* }
%struct.vp9_variance_vtable = type { i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8*, i32, i32*)* }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)*, [2 x [2 x [2 x void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*]]], [2 x [2 x [2 x void (i16*, i64, i16*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32, i32)*]]] }
%struct.TWO_PASS = type { i32, i32, %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRST_PASS_INFO, %struct.FIRSTPASS_STATS, i32, i64, double, double, double, double, %struct.FP_MB_FLOAT_STATS*, i32, i64, double, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], %struct.GF_GROUP }
%struct.FIRST_PASS_INFO = type { %struct.FIRSTPASS_STATS*, i32 }
%struct.FIRSTPASS_STATS = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i64 }
%struct.FP_MB_FLOAT_STATS = type { double, double, double }
%struct.GF_GROUP = type { i8, [252 x i32], [252 x i32], [252 x i8], [252 x i8], [252 x i8], [252 x i32], [252 x i32], i32, i32, [50 x i32], i32, i32, i32, i32, i32, i32 }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ALT_REF_AQ = type opaque
%struct.SVC = type { i32, i32, i32, i32, i32, i32, %struct.lookahead_entry, i32, [25 x %struct.yv12_buffer_config], %struct.yv12_buffer_config, i32, i32, [12 x %struct.LAYER_CONTEXT], i32, [12 x i32], [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, [2 x %struct.BUFFER_LONGTERM_REF], i32, i32, i32, i32, [5 x i8], [5 x i32], i8*, [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, [12 x i32], [12 x i32], [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, i32, i32, [5 x i32], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i32], [8 x i8], [8 x i8], [5 x i32], i8, i8, i8, [8 x i8], i32, [5 x i32], i32, [5 x i64], i64, i64, [5 x i64], i32, i32, i32, i32 }
%struct.LAYER_CONTEXT = type { %struct.RATE_CONTROL, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, %struct.TWO_PASS, %struct.vpx_fixed_buf, i32, i32, i32, i32, %struct.lookahead_entry*, i32, i32, i32, i64, i32, i8*, i8*, i8*, i32, i32, i32, i8, i32 }
%struct.BUFFER_LONGTERM_REF = type { i32, i32 }
%struct.diff = type { i32, i32, i32 }
%struct.search_site_config = type { [88 x %struct.mv], [88 x i64], i32, i32 }
%struct.vp9_denoiser = type { %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i32, i32 }
%struct.noise_estimate = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VPxWorker = type { %struct.VPxWorkerImpl*, i32, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.VPxWorkerImpl = type opaque
%struct.EncWorkerData = type { %struct.VP9_COMP*, %struct.ThreadData*, i32, i32, [64 x i32] }
%struct.VP9LfSyncData = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, %struct.LoopFilterWorkerData*, i32, i32, %union.pthread_mutex_t*, %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32 }
%struct.LoopFilterWorkerData = type { %struct.yv12_buffer_config*, %struct.VP9Common*, [3 x %struct.macroblockd_plane], i32, i32, i32 }
%struct.VP9BitstreamWorkerData = type opaque
%struct.Vp9LevelInfo = type { %struct.Vp9LevelStats, %struct.Vp9LevelSpec }
%struct.Vp9LevelStats = type { i8, i32, i64, i64, double, %struct.FrameWindowBuffer, i32 }
%struct.FrameWindowBuffer = type { [128 x %struct.FrameRecord], i8, i8 }
%struct.FrameRecord = type { i64, i32, i32 }
%struct.MultiThreadHandle = type { i32, i32, i32, [4 x i32], %struct.JobQueue*, i32, [64 x %struct.RowMTInfo], [80 x i32] }
%struct.JobQueue = type { i8*, %struct.JobNode }
%struct.JobNode = type { i32, i32, i32 }
%struct.RowMTInfo = type { %struct.JobQueueHandle, %union.pthread_mutex_t }
%struct.JobQueueHandle = type { i8*, i32 }
%struct.ARNRFilterData = type { [25 x %struct.yv12_buffer_config*], i32, i32, i32, %struct.scale_factors }
%struct.LevelConstraint = type { i8, i8, i32, double }
%struct.vpx_roi_map = type { i8, i8*, i32, i32, [8 x i32], [8 x i32], [8 x i32], [8 x i32], [4 x i32] }
%struct.EXT_RATECTRL = type { i32, i8*, %struct.vpx_rc_funcs, %struct.vpx_rc_config, %struct.vpx_rc_firstpass_stats }
%struct.vpx_rc_funcs = type { i32 (i8*, %struct.vpx_rc_config*, i8**)*, i32 (i8*, %struct.vpx_rc_firstpass_stats*)*, i32 (i8*, %struct.vpx_rc_encodeframe_info*, %struct.vpx_rc_encodeframe_decision*)*, i32 (i8*, %struct.vpx_rc_encodeframe_result*)*, i32 (i8*)*, i8* }
%struct.vpx_rc_encodeframe_info = type { i32, i32, i32, i32, [3 x i32], [3 x i32] }
%struct.vpx_rc_encodeframe_decision = type { i32 }
%struct.vpx_rc_encodeframe_result = type { i64, i64, i64 }
%struct.vpx_rc_config = type { i32, i32, i32, i32, i32, i32 }
%struct.vpx_rc_firstpass_stats = type { %struct.vpx_rc_frame_stats*, i32 }
%struct.vpx_rc_frame_stats = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double }

@kf_low_motion_minq_8 = internal global [256 x i32] zeroinitializer, align 16
@kf_high_motion_minq_8 = internal global [256 x i32] zeroinitializer, align 16
@arfgf_low_motion_minq_8 = internal global [256 x i32] zeroinitializer, align 16
@arfgf_high_motion_minq_8 = internal global [256 x i32] zeroinitializer, align 16
@inter_minq_8 = internal global [256 x i32] zeroinitializer, align 16
@rtc_minq_8 = internal global [256 x i32] zeroinitializer, align 16
@kf_low_motion_minq_10 = internal global [256 x i32] zeroinitializer, align 16
@kf_high_motion_minq_10 = internal global [256 x i32] zeroinitializer, align 16
@arfgf_low_motion_minq_10 = internal global [256 x i32] zeroinitializer, align 16
@arfgf_high_motion_minq_10 = internal global [256 x i32] zeroinitializer, align 16
@inter_minq_10 = internal global [256 x i32] zeroinitializer, align 16
@rtc_minq_10 = internal global [256 x i32] zeroinitializer, align 16
@kf_low_motion_minq_12 = internal global [256 x i32] zeroinitializer, align 16
@kf_high_motion_minq_12 = internal global [256 x i32] zeroinitializer, align 16
@arfgf_low_motion_minq_12 = internal global [256 x i32] zeroinitializer, align 16
@arfgf_high_motion_minq_12 = internal global [256 x i32] zeroinitializer, align 16
@inter_minq_12 = internal global [256 x i32] zeroinitializer, align 16
@rtc_minq_12 = internal global [256 x i32] zeroinitializer, align 16
@vp9_frame_type_qdelta.rate_factor_deltas = internal unnamed_addr constant [5 x double] [double 1.000000e+00, double 1.000000e+00, double 1.500000e+00, double 1.750000e+00, double 2.000000e+00], align 16
@vp9_level_defs = external local_unnamed_addr constant [14 x %struct.Vp9LevelSpec], align 16
@rcf_mult = internal unnamed_addr constant [2 x double] [double 1.000000e+00, double 2.000000e+00], align 16
@__const.rc_pick_q_and_bounds_one_pass_vbr.delta_rate = private unnamed_addr constant [8 x double] [double 5.000000e-01, double 1.000000e+00, double 8.500000e-01, double 1.000000e+00, double 0x3FE6666666666666, double 1.000000e+00, double 8.500000e-01, double 1.000000e+00], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_rc_init_minq_luts() local_unnamed_addr #0 {
  tail call fastcc void @init_minq_luts(i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_8, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_8, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_8, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_8, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @inter_minq_8, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @rtc_minq_8, i64 0, i64 0), i32 8)
  tail call fastcc void @init_minq_luts(i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @inter_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @rtc_minq_10, i64 0, i64 0), i32 10)
  tail call fastcc void @init_minq_luts(i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_12, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_12, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_12, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_12, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @inter_minq_12, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @rtc_minq_12, i64 0, i64 0), i32 12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @init_minq_luts(i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, i32) unnamed_addr #0 {
  br label %8

8:                                                ; preds = %148, %7
  %9 = phi i64 [ 0, %7 ], [ %151, %148 ]
  %10 = icmp eq i32 %6, 10
  %11 = select i1 %10, double 6.250000e-02, double 1.562500e-02
  %12 = icmp eq i32 %6, 8
  %13 = select i1 %12, double 2.500000e-01, double %11
  %14 = trunc i64 %9 to i32
  %15 = tail call signext i16 @vp9_ac_quant(i32 %14, i32 0, i32 %6) #8
  %16 = sitofp i16 %15 to double
  %17 = fmul double %13, %16
  %18 = fmul double %17, 0x3EB0C6F7A0B5ED8D
  %19 = fadd double %18, -4.000000e-04
  %20 = fmul double %17, %19
  %21 = fadd double %20, 1.500000e-01
  %22 = fmul double %17, %21
  %23 = fcmp olt double %22, %17
  %24 = select i1 %23, double %22, double %17
  %25 = fcmp ugt double %24, 2.000000e+00
  br i1 %25, label %26, label %39

26:                                               ; preds = %8, %36
  %27 = phi i32 [ %37, %36 ], [ 0, %8 ]
  %28 = icmp eq i32 %6, 10
  %29 = select i1 %28, double 6.250000e-02, double 1.562500e-02
  %30 = icmp eq i32 %6, 8
  %31 = select i1 %30, double 2.500000e-01, double %29
  %32 = tail call signext i16 @vp9_ac_quant(i32 %27, i32 0, i32 %6) #8
  %33 = sitofp i16 %32 to double
  %34 = fmul double %31, %33
  %35 = fcmp ugt double %24, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %26
  %37 = add nuw nsw i32 %27, 1
  %38 = icmp eq i32 %37, 256
  br i1 %38, label %39, label %26

39:                                               ; preds = %26, %36, %8
  %40 = phi i32 [ 0, %8 ], [ %27, %26 ], [ 255, %36 ]
  %41 = getelementptr inbounds i32, i32* %0, i64 %9
  store i32 %40, i32* %41, align 4
  %42 = fmul double %17, 2.100000e-06
  %43 = fadd double %42, -1.250000e-03
  %44 = fmul double %17, %43
  %45 = fadd double %44, 4.500000e-01
  %46 = fmul double %17, %45
  %47 = fcmp olt double %46, %17
  %48 = select i1 %47, double %46, double %17
  %49 = fcmp ugt double %48, 2.000000e+00
  br i1 %49, label %50, label %63

50:                                               ; preds = %39, %60
  %51 = phi i32 [ %61, %60 ], [ 0, %39 ]
  %52 = icmp eq i32 %6, 10
  %53 = select i1 %52, double 6.250000e-02, double 1.562500e-02
  %54 = icmp eq i32 %6, 8
  %55 = select i1 %54, double 2.500000e-01, double %53
  %56 = tail call signext i16 @vp9_ac_quant(i32 %51, i32 0, i32 %6) #8
  %57 = sitofp i16 %56 to double
  %58 = fmul double %55, %57
  %59 = fcmp ugt double %48, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %50
  %61 = add nuw nsw i32 %51, 1
  %62 = icmp eq i32 %61, 256
  br i1 %62, label %63, label %50

63:                                               ; preds = %50, %60, %39
  %64 = phi i32 [ 0, %39 ], [ %51, %50 ], [ 255, %60 ]
  %65 = getelementptr inbounds i32, i32* %1, i64 %9
  store i32 %64, i32* %65, align 4
  %66 = fmul double %17, 1.500000e-06
  %67 = fadd double %66, -9.000000e-04
  %68 = fmul double %17, %67
  %69 = fadd double %68, 3.000000e-01
  %70 = fmul double %17, %69
  %71 = fcmp olt double %70, %17
  %72 = select i1 %71, double %70, double %17
  %73 = fcmp ugt double %72, 2.000000e+00
  br i1 %73, label %74, label %87

74:                                               ; preds = %63, %84
  %75 = phi i32 [ %85, %84 ], [ 0, %63 ]
  %76 = icmp eq i32 %6, 10
  %77 = select i1 %76, double 6.250000e-02, double 1.562500e-02
  %78 = icmp eq i32 %6, 8
  %79 = select i1 %78, double 2.500000e-01, double %77
  %80 = tail call signext i16 @vp9_ac_quant(i32 %75, i32 0, i32 %6) #8
  %81 = sitofp i16 %80 to double
  %82 = fmul double %79, %81
  %83 = fcmp ugt double %72, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %74
  %85 = add nuw nsw i32 %75, 1
  %86 = icmp eq i32 %85, 256
  br i1 %86, label %87, label %74

87:                                               ; preds = %74, %84, %63
  %88 = phi i32 [ 0, %63 ], [ %75, %74 ], [ 255, %84 ]
  %89 = getelementptr inbounds i32, i32* %2, i64 %9
  store i32 %88, i32* %89, align 4
  %90 = fmul double %17, 2.710000e-06
  %91 = fadd double %90, -1.130000e-03
  %92 = fmul double %17, %91
  %93 = fadd double %92, 0x3FE6666666666666
  %94 = fmul double %17, %93
  %95 = fcmp olt double %94, %17
  %96 = select i1 %95, double %94, double %17
  %97 = fcmp ugt double %96, 2.000000e+00
  br i1 %97, label %98, label %111

98:                                               ; preds = %87, %108
  %99 = phi i32 [ %109, %108 ], [ 0, %87 ]
  %100 = icmp eq i32 %6, 10
  %101 = select i1 %100, double 6.250000e-02, double 1.562500e-02
  %102 = icmp eq i32 %6, 8
  %103 = select i1 %102, double 2.500000e-01, double %101
  %104 = tail call signext i16 @vp9_ac_quant(i32 %99, i32 0, i32 %6) #8
  %105 = sitofp i16 %104 to double
  %106 = fmul double %103, %105
  %107 = fcmp ugt double %96, %106
  br i1 %107, label %108, label %111

108:                                              ; preds = %98
  %109 = add nuw nsw i32 %99, 1
  %110 = icmp eq i32 %109, 256
  br i1 %110, label %111, label %98

111:                                              ; preds = %98, %108, %87
  %112 = phi i32 [ 0, %87 ], [ %99, %98 ], [ 255, %108 ]
  %113 = getelementptr inbounds i32, i32* %4, i64 %9
  store i32 %112, i32* %113, align 4
  %114 = fadd double %44, 5.500000e-01
  %115 = fmul double %17, %114
  %116 = fcmp olt double %115, %17
  %117 = select i1 %116, double %115, double %17
  %118 = fcmp ugt double %117, 2.000000e+00
  br i1 %118, label %119, label %132

119:                                              ; preds = %111, %129
  %120 = phi i32 [ %130, %129 ], [ 0, %111 ]
  %121 = icmp eq i32 %6, 10
  %122 = select i1 %121, double 6.250000e-02, double 1.562500e-02
  %123 = icmp eq i32 %6, 8
  %124 = select i1 %123, double 2.500000e-01, double %122
  %125 = tail call signext i16 @vp9_ac_quant(i32 %120, i32 0, i32 %6) #8
  %126 = sitofp i16 %125 to double
  %127 = fmul double %124, %126
  %128 = fcmp ugt double %117, %127
  br i1 %128, label %129, label %132

129:                                              ; preds = %119
  %130 = add nuw nsw i32 %120, 1
  %131 = icmp eq i32 %130, 256
  br i1 %131, label %132, label %119

132:                                              ; preds = %119, %129, %111
  %133 = phi i32 [ 0, %111 ], [ %120, %119 ], [ 255, %129 ]
  %134 = getelementptr inbounds i32, i32* %3, i64 %9
  store i32 %133, i32* %134, align 4
  br i1 %97, label %135, label %148

135:                                              ; preds = %132, %145
  %136 = phi i32 [ %146, %145 ], [ 0, %132 ]
  %137 = icmp eq i32 %6, 10
  %138 = select i1 %137, double 6.250000e-02, double 1.562500e-02
  %139 = icmp eq i32 %6, 8
  %140 = select i1 %139, double 2.500000e-01, double %138
  %141 = tail call signext i16 @vp9_ac_quant(i32 %136, i32 0, i32 %6) #8
  %142 = sitofp i16 %141 to double
  %143 = fmul double %140, %142
  %144 = fcmp ugt double %96, %143
  br i1 %144, label %145, label %148

145:                                              ; preds = %135
  %146 = add nuw nsw i32 %136, 1
  %147 = icmp eq i32 %146, 256
  br i1 %147, label %148, label %135

148:                                              ; preds = %135, %145, %132
  %149 = phi i32 [ 0, %132 ], [ %136, %135 ], [ 255, %145 ]
  %150 = getelementptr inbounds i32, i32* %5, i64 %9
  store i32 %149, i32* %150, align 4
  %151 = add nuw nsw i64 %9, 1
  %152 = icmp eq i64 %151, 256
  br i1 %152, label %153, label %8

153:                                              ; preds = %148
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @vp9_convert_qindex_to_q(i32, i32) local_unnamed_addr #0 {
  %3 = icmp eq i32 %1, 10
  %4 = select i1 %3, double 6.250000e-02, double 1.562500e-02
  %5 = icmp eq i32 %1, 8
  %6 = select i1 %5, double 2.500000e-01, double %4
  %7 = tail call signext i16 @vp9_ac_quant(i32 %0, i32 0, i32 %1) #8
  %8 = sitofp i16 %7 to double
  %9 = fmul double %6, %8
  ret double %9
}

declare signext i16 @vp9_ac_quant(i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_convert_q_to_qindex(double, i32) local_unnamed_addr #0 {
  br label %3

3:                                                ; preds = %13, %2
  %4 = phi i32 [ 0, %2 ], [ %14, %13 ]
  %5 = icmp eq i32 %1, 10
  %6 = select i1 %5, double 6.250000e-02, double 1.562500e-02
  %7 = icmp eq i32 %1, 8
  %8 = select i1 %7, double 2.500000e-01, double %6
  %9 = tail call signext i16 @vp9_ac_quant(i32 %4, i32 0, i32 %1) #8
  %10 = sitofp i16 %9 to double
  %11 = fmul double %8, %10
  %12 = fcmp ult double %11, %0
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = add nuw nsw i32 %4, 1
  %15 = icmp eq i32 %14, 256
  br i1 %15, label %16, label %3

16:                                               ; preds = %13, %3
  ret i32 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_rc_bits_per_mb(i32, i32, double, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 10
  %6 = select i1 %5, double 6.250000e-02, double 1.562500e-02
  %7 = icmp eq i32 %3, 8
  %8 = select i1 %7, double 2.500000e-01, double %6
  %9 = tail call signext i16 @vp9_ac_quant(i32 %1, i32 0, i32 %3) #8
  %10 = sitofp i16 %9 to double
  %11 = fmul double %8, %10
  %12 = icmp eq i32 %0, 0
  %13 = select i1 %12, i32 2700000, i32 1800000
  %14 = sitofp i32 %13 to double
  %15 = fmul double %11, %14
  %16 = fptosi double %15 to i32
  %17 = ashr i32 %16, 12
  %18 = add nsw i32 %17, %13
  %19 = sitofp i32 %18 to double
  %20 = fmul double %19, %2
  %21 = fdiv double %20, %11
  %22 = fptosi double %21 to i32
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_estimate_bits_at_q(i32, i32, i32, double, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %4, 10
  %7 = select i1 %6, double 6.250000e-02, double 1.562500e-02
  %8 = icmp eq i32 %4, 8
  %9 = select i1 %8, double 2.500000e-01, double %7
  %10 = tail call signext i16 @vp9_ac_quant(i32 %1, i32 0, i32 %4) #8
  %11 = sitofp i16 %10 to double
  %12 = fmul double %9, %11
  %13 = icmp eq i32 %0, 0
  %14 = select i1 %13, i32 2700000, i32 1800000
  %15 = sitofp i32 %14 to double
  %16 = fmul double %12, %15
  %17 = fptosi double %16 to i32
  %18 = ashr i32 %17, 12
  %19 = add nsw i32 %18, %14
  %20 = sitofp i32 %19 to double
  %21 = fmul double %20, %3
  %22 = fdiv double %21, %12
  %23 = fptosi double %22 to i32
  %24 = sext i32 %23 to i64
  %25 = sext i32 %2 to i64
  %26 = mul nsw i64 %24, %25
  %27 = lshr i64 %26, 9
  %28 = trunc i64 %27 to i32
  %29 = icmp sgt i32 %28, 200
  %30 = select i1 %29, i32 %28, i32 200
  ret i32 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_rc_clamp_pframe_target_size(%struct.VP9_COMP* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 26
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %6 = load i32, i32* %5, align 8
  %7 = ashr i32 %6, 5
  %8 = icmp sgt i32 %4, %7
  %9 = select i1 %8, i32 %4, i32 %7
  %10 = icmp sgt i32 %9, %1
  %11 = select i1 %10, i32 %9, i32 %1
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i32 %11, i32 %9
  br label %20

20:                                               ; preds = %15, %2
  %21 = phi i32 [ %11, %2 ], [ %19, %15 ]
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %21, %23
  %25 = select i1 %24, i32 %23, i32 %21
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 13
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %20
  %30 = mul i32 %27, %6
  %31 = udiv i32 %30, 100
  %32 = icmp slt i32 %25, %31
  %33 = select i1 %32, i32 %25, i32 %31
  br label %34

34:                                               ; preds = %20, %29
  %35 = phi i32 [ %33, %29 ], [ %25, %20 ]
  ret i32 %35
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_rc_clamp_iframe_target_size(%struct.VP9_COMP* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 12
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %8 = load i32, i32* %7, align 8
  %9 = mul i32 %8, %4
  %10 = udiv i32 %9, 100
  %11 = icmp sgt i32 %10, %1
  %12 = select i1 %11, i32 %1, i32 %10
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi i32 [ %12, %6 ], [ %1, %2 ]
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %14, %16
  %18 = select i1 %17, i32 %16, i32 %14
  ret i32 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_update_buffer_level_preencode(%struct.VP9_COMP* nocapture) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  %6 = load i64, i64* %5, align 8
  %7 = add nsw i64 %6, %4
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 52
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %7, %9
  %11 = select i1 %10, i64 %7, i64 %9
  store i64 %11, i64* %5, align 8
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @vp9_rc_get_default_min_gf_interval(i32, i32, double) local_unnamed_addr #5 {
  %4 = mul nsw i32 %1, %0
  %5 = sitofp i32 %4 to double
  %6 = fmul double %5, %2
  %7 = fmul double %2, 1.250000e-01
  %8 = fptosi double %7 to i32
  %9 = icmp slt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = icmp sgt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = fcmp ugt double %6, 1.658880e+08
  br i1 %13, label %14, label %21

14:                                               ; preds = %3
  %15 = fmul double %6, 4.000000e+00
  %16 = fdiv double %15, 1.658880e+08
  %17 = fadd double %16, 5.000000e-01
  %18 = fptosi double %17 to i32
  %19 = icmp sgt i32 %12, %18
  %20 = select i1 %19, i32 %12, i32 %18
  br label %21

21:                                               ; preds = %3, %14
  %22 = phi i32 [ %20, %14 ], [ %12, %3 ]
  ret i32 %22
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @vp9_rc_get_default_max_gf_interval(double, i32) local_unnamed_addr #5 {
  %3 = fmul double %0, 7.500000e-01
  %4 = fptosi double %3 to i32
  %5 = icmp slt i32 %4, 16
  %6 = select i1 %5, i32 %4, i32 16
  %7 = and i32 %6, 1
  %8 = add nsw i32 %7, %6
  %9 = icmp sgt i32 %8, %1
  %10 = select i1 %9, i32 %8, i32 %1
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_rc_init(%struct.VP9EncoderConfig* nocapture readonly, i32, %struct.RATE_CONTROL*) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 20
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 28
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 31, i64 0
  store i32 %11, i32* %12, align 8
  %13 = load i32, i32* %10, align 8
  br label %26

14:                                               ; preds = %5, %3
  %15 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 28
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 29
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, %16
  %20 = sdiv i32 %19, 2
  %21 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 31, i64 0
  store i32 %20, i32* %21, align 8
  %22 = load i32, i32* %15, align 8
  %23 = load i32, i32* %17, align 4
  %24 = add nsw i32 %23, %22
  %25 = sdiv i32 %24, 2
  br label %26

26:                                               ; preds = %14, %9
  %27 = phi i32 [ %25, %14 ], [ %13, %9 ]
  %28 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 31, i64 1
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 29
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 4, i64 0
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 28
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 4, i64 1
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 50
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 34
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 35
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 25
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 40
  %42 = insertelement <4 x i32> undef, i32 %40, i32 0
  %43 = shufflevector <4 x i32> %42, <4 x i32> undef, <4 x i32> zeroinitializer
  %44 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %44, align 8
  %45 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 45
  %46 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 75
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 72
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 76
  %49 = bitcast i64* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false)
  store i32 10, i32* %48, align 4
  %50 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 66
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 71
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 78
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 67
  store i32 -1, i32* %53, align 8
  %54 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 68
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 73
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 74
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 69
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 70
  store i32 0, i32* %58, align 4
  %59 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 63
  store i32 150, i32* %59, align 8
  %60 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 64
  store i32 100, i32* %60, align 4
  %61 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 77
  store i32 0, i32* %61, align 8
  %62 = getelementptr %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 65, i64 0
  %63 = bitcast i64* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 200, i1 false)
  %64 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 18
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 19
  store i32 8, i32* %65, align 8
  %66 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 20
  %67 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 12
  store i32 0, i32* %67, align 4
  %68 = bitcast i32* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 16, i1 false)
  %69 = load i32, i32* %32, align 8
  %70 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 28
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 29
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 30
  store i32 0, i32* %72, align 4
  %73 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 32
  store double 0.000000e+00, double* %73, align 8
  %74 = load i32, i32* %32, align 8
  %75 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 10
  %78 = select i1 %77, double 6.250000e-02, double 1.562500e-02
  %79 = icmp eq i32 %76, 8
  %80 = select i1 %79, double 2.500000e-01, double %78
  %81 = tail call signext i16 @vp9_ac_quant(i32 %74, i32 0, i32 %76) #8
  %82 = sitofp i16 %81 to double
  %83 = fmul double %80, %82
  %84 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 33
  store double %83, double* %84, align 8
  %85 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 10, i64 0
  %86 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 85, i64 0
  %87 = bitcast double* %85 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %87, align 8
  %88 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 10, i64 2
  %89 = bitcast double* %88 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %89, align 8
  %90 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %90, align 4
  %91 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 10, i64 4
  store double 1.000000e+00, double* %91, align 8
  %92 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 85, i64 4
  store i32 0, i32* %92, align 4
  %93 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 53
  %94 = load i32, i32* %93, align 8
  %95 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 13
  store i32 %94, i32* %95, align 8
  %96 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 54
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 14
  store i32 %97, i32* %98, align 4
  %99 = icmp eq i32 %94, 0
  br i1 %99, label %100, label %126

100:                                              ; preds = %26
  %101 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 2
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 5
  %106 = load double, double* %105, align 8
  %107 = mul nsw i32 %104, %102
  %108 = sitofp i32 %107 to double
  %109 = fmul double %106, %108
  %110 = fmul double %106, 1.250000e-01
  %111 = fptosi double %110 to i32
  %112 = icmp slt i32 %111, 16
  %113 = select i1 %112, i32 %111, i32 16
  %114 = icmp sgt i32 %113, 4
  %115 = select i1 %114, i32 %113, i32 4
  %116 = fcmp ugt double %109, 1.658880e+08
  br i1 %116, label %117, label %124

117:                                              ; preds = %100
  %118 = fmul double %109, 4.000000e+00
  %119 = fdiv double %118, 1.658880e+08
  %120 = fadd double %119, 5.000000e-01
  %121 = fptosi double %120 to i32
  %122 = icmp sgt i32 %115, %121
  %123 = select i1 %122, i32 %115, i32 %121
  br label %124

124:                                              ; preds = %100, %117
  %125 = phi i32 [ %123, %117 ], [ %115, %100 ]
  store i32 %125, i32* %95, align 8
  br label %126

126:                                              ; preds = %124, %26
  %127 = phi i32 [ %125, %124 ], [ %94, %26 ]
  %128 = icmp eq i32 %97, 0
  br i1 %128, label %129, label %140

129:                                              ; preds = %126
  %130 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 5
  %131 = load double, double* %130, align 8
  %132 = fmul double %131, 7.500000e-01
  %133 = fptosi double %132 to i32
  %134 = icmp slt i32 %133, 16
  %135 = select i1 %134, i32 %133, i32 16
  %136 = and i32 %135, 1
  %137 = add nsw i32 %136, %135
  %138 = icmp sgt i32 %137, %127
  %139 = select i1 %138, i32 %137, i32 %127
  store i32 %139, i32* %98, align 4
  br label %140

140:                                              ; preds = %129, %126
  %141 = phi i32 [ %139, %129 ], [ %97, %126 ]
  %142 = add nsw i32 %141, %127
  %143 = sdiv i32 %142, 2
  %144 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 16
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 16
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = getelementptr inbounds %struct.VP9EncoderConfig, %struct.VP9EncoderConfig* %0, i64 0, i32 20
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 3
  br i1 %151, label %153, label %152

152:                                              ; preds = %148, %140
  br label %153

153:                                              ; preds = %148, %152
  %154 = phi i32 [ 250, %152 ], [ 8, %148 ]
  %155 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 15
  store i32 %154, i32* %155, align 8
  %156 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 80
  %157 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 86
  %158 = bitcast i32* %156 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 20, i1 false)
  store double 1.000000e+00, double* %157, align 8
  %159 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %2, i64 0, i32 87
  %160 = bitcast i32* %159 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @vp9_test_drop(%struct.VP9_COMP*) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 26
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.SVC, %struct.SVC* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 38, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 40
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  store i32 0, i32* %11, align 4
  br label %213

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 37, i64 %10
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi i32* [ %18, %17 ], [ %3, %1 ]
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %213, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.SVC, %struct.SVC* %2, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 2
  br i1 %30, label %213, label %31

31:                                               ; preds = %27, %23
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  %33 = load i64, i64* %32, align 8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %39, label %213

39:                                               ; preds = %35, %31
  br i1 %6, label %85, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %42 = load i32, i32* %41, align 16
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %85, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp slt i32 %25, %46
  br i1 %47, label %48, label %83

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %42, 2
  %54 = sext i32 %25 to i64
  %55 = sext i32 %50 to i64
  %56 = sext i32 %52 to i64
  %57 = sext i32 %46 to i64
  br label %58

58:                                               ; preds = %80, %48
  %59 = phi i64 [ %54, %48 ], [ %81, %80 ]
  %60 = mul nsw i64 %59, %55
  %61 = add nsw i64 %60, %56
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %61, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %80

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 37, i64 %59
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %61, i32 0, i32 51
  %70 = load i64, i64* %69, align 8
  %71 = mul nsw i64 %70, %68
  %72 = sdiv i64 %71, 100
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %61, i32 0, i32 34
  %74 = load i64, i64* %73, align 8
  %75 = shl i64 %72, 32
  %76 = ashr exact i64 %75, 32
  %77 = icmp sle i64 %74, %76
  br i1 %53, label %78, label %79

78:                                               ; preds = %65
  br i1 %77, label %213, label %80

79:                                               ; preds = %65
  br i1 %77, label %80, label %90

80:                                               ; preds = %79, %78, %58
  %81 = add nsw i64 %59, 1
  %82 = icmp eq i64 %81, %57
  br i1 %82, label %83, label %58

83:                                               ; preds = %80, %44
  %84 = icmp eq i32 %42, 2
  br i1 %84, label %90, label %86

85:                                               ; preds = %39, %40
  br i1 %34, label %86, label %90

86:                                               ; preds = %83, %85
  %87 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 2
  br i1 %89, label %213, label %90

90:                                               ; preds = %79, %83, %85, %86
  %91 = sext i32 %21 to i64
  %92 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %93 = load i64, i64* %92, align 8
  %94 = mul nsw i64 %93, %91
  %95 = sdiv i64 %94, 100
  br i1 %6, label %136, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %98 = load i32, i32* %97, align 16
  %99 = icmp eq i32 %98, 2
  br i1 %99, label %100, label %136

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %102 = load i32, i32* %101, align 8
  %103 = icmp slt i32 %25, %102
  br i1 %103, label %104, label %140

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %25 to i64
  %110 = sext i32 %106 to i64
  %111 = sext i32 %108 to i64
  %112 = sext i32 %102 to i64
  br label %113

113:                                              ; preds = %133, %104
  %114 = phi i64 [ %109, %104 ], [ %134, %133 ]
  %115 = mul nsw i64 %114, %110
  %116 = add nsw i64 %115, %111
  %117 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %116, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %120, label %133

120:                                              ; preds = %113
  %121 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 37, i64 %114
  %122 = load i32, i32* %121, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %116, i32 0, i32 51
  %125 = load i64, i64* %124, align 8
  %126 = mul nsw i64 %125, %123
  %127 = sdiv i64 %126, 100
  %128 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %116, i32 0, i32 34
  %129 = load i64, i64* %128, align 8
  %130 = shl i64 %127, 32
  %131 = ashr exact i64 %130, 32
  %132 = icmp sgt i64 %129, %131
  br i1 %132, label %133, label %146

133:                                              ; preds = %120, %113
  %134 = add nsw i64 %114, 1
  %135 = icmp eq i64 %134, %112
  br i1 %135, label %140, label %113

136:                                              ; preds = %90, %96
  %137 = shl i64 %95, 32
  %138 = ashr exact i64 %137, 32
  %139 = icmp sgt i64 %33, %138
  br i1 %139, label %140, label %146

140:                                              ; preds = %133, %136, %100
  %141 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 38
  %142 = load i32, i32* %141, align 8
  %143 = icmp sgt i32 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = add nsw i32 %142, -1
  store i32 %145, i32* %141, align 8
  br label %201

146:                                              ; preds = %120, %136, %140
  br i1 %6, label %151, label %147

147:                                              ; preds = %146
  %148 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %149 = load i32, i32* %148, align 16
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %155

151:                                              ; preds = %147, %146
  %152 = shl i64 %95, 32
  %153 = ashr exact i64 %152, 32
  %154 = icmp sgt i64 %33, %153
  br i1 %154, label %201, label %196

155:                                              ; preds = %147
  %156 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %157 = load i32, i32* %156, align 8
  %158 = icmp slt i32 %25, %157
  br i1 %158, label %159, label %194

159:                                              ; preds = %155
  %160 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %149, 2
  %165 = sext i32 %25 to i64
  %166 = sext i32 %161 to i64
  %167 = sext i32 %163 to i64
  %168 = sext i32 %157 to i64
  br label %169

169:                                              ; preds = %191, %159
  %170 = phi i64 [ %165, %159 ], [ %192, %191 ]
  %171 = mul nsw i64 %170, %166
  %172 = add nsw i64 %171, %167
  %173 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %172, i32 1
  %174 = load i32, i32* %173, align 8
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %176, label %191

176:                                              ; preds = %169
  %177 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 37, i64 %170
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %172, i32 0, i32 51
  %181 = load i64, i64* %180, align 8
  %182 = mul nsw i64 %181, %179
  %183 = sdiv i64 %182, 100
  %184 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %172, i32 0, i32 34
  %185 = load i64, i64* %184, align 8
  %186 = shl i64 %183, 32
  %187 = ashr exact i64 %186, 32
  %188 = icmp sle i64 %185, %187
  br i1 %164, label %189, label %190

189:                                              ; preds = %176
  br i1 %188, label %196, label %191

190:                                              ; preds = %176
  br i1 %188, label %191, label %201

191:                                              ; preds = %190, %189, %169
  %192 = add nsw i64 %170, 1
  %193 = icmp eq i64 %192, %168
  br i1 %193, label %194, label %169

194:                                              ; preds = %191, %155
  %195 = icmp eq i32 %149, 2
  br i1 %195, label %201, label %196

196:                                              ; preds = %189, %151, %194
  %197 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 38
  %198 = load i32, i32* %197, align 8
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %196
  store i32 1, i32* %197, align 8
  br label %201

201:                                              ; preds = %190, %151, %194, %196, %200, %144
  %202 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 38
  %203 = load i32, i32* %202, align 8
  %204 = icmp sgt i32 %203, 0
  %205 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 39
  br i1 %204, label %206, label %212

206:                                              ; preds = %201
  %207 = load i32, i32* %205, align 4
  %208 = icmp sgt i32 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %206
  %210 = add nsw i32 %207, -1
  store i32 %210, i32* %205, align 4
  br label %213

211:                                              ; preds = %206
  store i32 %203, i32* %205, align 4
  br label %213

212:                                              ; preds = %201
  store i32 0, i32* %205, align 4
  br label %213

213:                                              ; preds = %78, %209, %211, %212, %86, %35, %27, %19, %16
  %214 = phi i32 [ 0, %16 ], [ 0, %19 ], [ 0, %27 ], [ 1, %35 ], [ 1, %86 ], [ 1, %209 ], [ 0, %211 ], [ 0, %212 ], [ 1, %78 ]
  ret i32 %214
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @post_encode_drop_cbr(%struct.VP9_COMP*, i64* nocapture) local_unnamed_addr #4 {
  %3 = load i64, i64* %1, align 8
  %4 = shl i64 %3, 3
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %6, %9
  %11 = icmp slt i64 %10, %4
  br i1 %11, label %12, label %118

12:                                               ; preds = %2
  store i64 0, i64* %1, align 8
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %13, align 4
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %20 = load i32, i32* %19, align 4
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 54
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 53
  store i32 0, i32* %23, align 8
  %24 = load i32, i32* %7, align 8
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 57
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 38
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 1
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %12
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %34 = load i32, i32* %33, align 16
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %43, label %36

36:                                               ; preds = %32
  %37 = load i64, i64* %5, align 8
  %38 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  store i64 %39, i64* %5, align 8
  %42 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  store i64 %39, i64* %42, align 8
  br label %43

43:                                               ; preds = %12, %32, %36, %41
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 71
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  br i1 %31, label %54, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 43
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48, %43
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 81
  store i32 1, i32* %53, align 4
  br label %54

54:                                               ; preds = %48, %47, %52
  %55 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 80
  store i32 1, i32* %55, align 8
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 153
  store i8 1, i8* %59, align 1
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 0, i32* %60, align 4
  br i1 %31, label %121, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 35, i64 %64
  store i32 1, i32* %65, align 4
  %66 = load i32, i32* %62, align 8
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 36, i64 %67
  store i32 1, i32* %68, align 4
  %69 = load i32, i32* %62, align 8
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 38, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 33
  store i32 1, i32* %74, align 4
  %75 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %121

78:                                               ; preds = %61
  %79 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = icmp sgt i32 %80, 0
  %82 = and i32 %80, 1
  %83 = icmp eq i32 %80, 1
  %84 = sub i32 %80, %82
  %85 = icmp eq i32 %82, 0
  br label %86

86:                                               ; preds = %78, %115
  %87 = phi i32 [ 0, %78 ], [ %116, %115 ]
  br i1 %81, label %88, label %115

88:                                               ; preds = %86
  %89 = mul nsw i32 %80, %87
  br i1 %83, label %107, label %90

90:                                               ; preds = %88, %90
  %91 = phi i32 [ %104, %90 ], [ 0, %88 ]
  %92 = phi i32 [ %105, %90 ], [ %84, %88 ]
  %93 = add nsw i32 %89, %91
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %94, i32 0, i32 80
  store i32 1, i32* %95, align 8
  %96 = load i32, i32* %56, align 8
  %97 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %94, i32 0, i32 31, i64 1
  store i32 %96, i32* %97, align 4
  %98 = or i32 %91, 1
  %99 = add nsw i32 %89, %98
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %100, i32 0, i32 80
  store i32 1, i32* %101, align 8
  %102 = load i32, i32* %56, align 8
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %100, i32 0, i32 31, i64 1
  store i32 %102, i32* %103, align 4
  %104 = add nuw nsw i32 %91, 2
  %105 = add i32 %92, -2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %90

107:                                              ; preds = %90, %88
  %108 = phi i32 [ 0, %88 ], [ %104, %90 ]
  br i1 %85, label %115, label %109

109:                                              ; preds = %107
  %110 = add nsw i32 %89, %108
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %111, i32 0, i32 80
  store i32 1, i32* %112, align 8
  %113 = load i32, i32* %56, align 8
  %114 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %111, i32 0, i32 31, i64 1
  store i32 %113, i32* %114, align 4
  br label %115

115:                                              ; preds = %109, %107, %86
  %116 = add nuw nsw i32 %87, 1
  %117 = icmp slt i32 %116, %76
  br i1 %117, label %86, label %121

118:                                              ; preds = %2
  %119 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 80
  store i32 0, i32* %119, align 8
  %120 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 81
  store i32 0, i32* %120, align 4
  br label %121

121:                                              ; preds = %115, %61, %54, %118
  %122 = phi i32 [ 0, %118 ], [ 1, %54 ], [ 1, %61 ], [ 1, %115 ]
  ret i32 %122
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_rc_postencode_update_drop_frame(%struct.VP9_COMP* nocapture) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 54
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 53
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 57
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 38
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 1
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %24 = load i32, i32* %23, align 16
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %34, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %30 = load i64, i64* %29, align 8
  %31 = icmp sgt i64 %28, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  store i64 %30, i64* %27, align 8
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  store i64 %30, i64* %33, align 8
  br label %34

34:                                               ; preds = %22, %1, %32, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_rc_drop_frame(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %4 = load i32, i32* %3, align 4
  %5 = icmp ne i32 %4, 0
  %6 = getelementptr inbounds %struct.SVC, %struct.SVC* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  %9 = and i1 %5, %8
  br i1 %9, label %10, label %19

10:                                               ; preds = %1
  %11 = add nsw i32 %7, -1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 36, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %29 [
    i32 1, label %19
    i32 3, label %19
  ]

19:                                               ; preds = %1, %10, %16, %16
  %20 = sext i32 %7 to i64
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 39, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %19
  %25 = tail call i32 @vp9_test_drop(%struct.VP9_COMP* %0)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %113, label %27

27:                                               ; preds = %24
  %28 = load i32, i32* %3, align 4
  br label %29

29:                                               ; preds = %27, %16, %19
  %30 = phi i32 [ %28, %27 ], [ %4, %16 ], [ %4, %19 ]
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %31, align 4
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %34, align 8
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 54
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 53
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 57
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 38
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 1
  store i32 %46, i32* %47, align 4
  %48 = icmp eq i32 %30, 0
  br i1 %48, label %61, label %49

49:                                               ; preds = %29
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %51 = load i32, i32* %50, align 16
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %64, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %57 = load i64, i64* %56, align 8
  %58 = icmp sgt i64 %55, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %53
  store i64 %57, i64* %54, align 8
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  store i64 %57, i64* %60, align 8
  br label %64

61:                                               ; preds = %29
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 153
  store i8 1, i8* %63, align 1
  br label %113

64:                                               ; preds = %49, %53, %59
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 153
  store i8 1, i8* %66, align 1
  %67 = getelementptr inbounds %struct.SVC, %struct.SVC* %2, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 35, i64 %69
  store i32 1, i32* %70, align 4
  %71 = load i32, i32* %67, align 8
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 36, i64 %72
  store i32 1, i32* %73, align 4
  %74 = load i32, i32* %67, align 8
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 38, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %76, align 4
  %79 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 33
  store i32 1, i32* %79, align 4
  %80 = load i32, i32* %50, align 8
  switch i32 %80, label %89 [
    i32 1, label %93
    i32 3, label %81
  ]

81:                                               ; preds = %64
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, -1
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 39, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %64, %81
  %90 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 36, i64 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %64, %89, %81
  tail call void @vp9_inc_frame_in_layer(%struct.VP9_COMP* %0) #8
  br label %94

94:                                               ; preds = %93, %89
  %95 = load i32, i32* %67, align 8
  %96 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %97 = load i32, i32* %96, align 8
  %98 = add nsw i32 %97, -1
  %99 = icmp eq i32 %95, %98
  br i1 %99, label %100, label %113

100:                                              ; preds = %94
  %101 = icmp sgt i32 %95, 0
  br i1 %101, label %102, label %112

102:                                              ; preds = %100
  %103 = zext i32 %95 to i64
  br label %106

104:                                              ; preds = %106
  %105 = icmp eq i64 %111, %103
  br i1 %105, label %112, label %106

106:                                              ; preds = %104, %102
  %107 = phi i64 [ 0, %102 ], [ %111, %104 ]
  %108 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 36, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  %111 = add nuw nsw i64 %107, 1
  br i1 %110, label %113, label %104

112:                                              ; preds = %104, %100
  store i32 0, i32* %79, align 4
  br label %113

113:                                              ; preds = %106, %61, %24, %94, %112
  %114 = phi i32 [ 1, %112 ], [ 1, %61 ], [ 1, %94 ], [ 0, %24 ], [ 1, %106 ]
  ret i32 %114
}

declare void @vp9_inc_frame_in_layer(%struct.VP9_COMP*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_rc_update_rate_correction_factors(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 4
  br label %51

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %23

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %17 = load i8, i8* %16, align 4
  %18 = zext i8 %17 to i64
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 1, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 %21
  br label %51

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %25 = load i32, i32* %24, align 16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %49, label %31

31:                                               ; preds = %27, %23
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %49

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 14
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %45, 100
  br i1 %46, label %47, label %49

47:                                               ; preds = %43, %39
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 3
  br label %51

49:                                               ; preds = %43, %35, %31, %27
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 0
  br label %51

51:                                               ; preds = %9, %15, %47, %49
  %52 = phi double* [ %10, %9 ], [ %22, %15 ], [ %50, %49 ], [ %48, %47 ]
  %53 = load double, double* %52, align 8
  %54 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %56
  %58 = load double, double* %57, align 8
  %59 = fmul double %53, %58
  %60 = fcmp olt double %59, 5.000000e-03
  %61 = fcmp ogt double %59, 5.000000e+01
  %62 = select i1 %61, double 5.000000e+01, double %59
  %63 = select i1 %60, double 5.000000e-03, double %62
  %64 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %65 = load i8, i8* %64, align 4
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %252

72:                                               ; preds = %51
  tail call void @vpx_clear_system_state() #8
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 3
  br i1 %75, label %76, label %80

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 69, i32 0
  %78 = load i8, i8* %77, align 8
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %118

80:                                               ; preds = %76, %72
  %81 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %82 = load i8, i8* %81, align 4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = load i32, i32* %2, align 4
  br label %86

86:                                               ; preds = %80, %84
  %87 = phi i32 [ %85, %84 ], [ 0, %80 ]
  %88 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 38
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 31
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %93 = load i32, i32* %92, align 16
  %94 = icmp eq i32 %93, 10
  %95 = select i1 %94, double 6.250000e-02, double 1.562500e-02
  %96 = icmp eq i32 %93, 8
  %97 = select i1 %96, double 2.500000e-01, double %95
  %98 = tail call signext i16 @vp9_ac_quant(i32 %89, i32 0, i32 %93) #8
  %99 = sitofp i16 %98 to double
  %100 = fmul double %97, %99
  %101 = icmp eq i32 %87, 0
  %102 = select i1 %101, i32 2700000, i32 1800000
  %103 = sitofp i32 %102 to double
  %104 = fmul double %100, %103
  %105 = fptosi double %104 to i32
  %106 = ashr i32 %105, 12
  %107 = add nsw i32 %106, %102
  %108 = sitofp i32 %107 to double
  %109 = fmul double %63, %108
  %110 = fdiv double %109, %100
  %111 = fptosi double %110 to i32
  %112 = sext i32 %111 to i64
  %113 = sext i32 %91 to i64
  %114 = mul nsw i64 %112, %113
  %115 = lshr i64 %114, 9
  %116 = trunc i64 %115 to i32
  %117 = icmp sgt i32 %116, 200
  br i1 %117, label %121, label %130

118:                                              ; preds = %76
  %119 = tail call i32 @vp9_cyclic_refresh_estimate_bits_at_q(%struct.VP9_COMP* %0, double %63) #8
  %120 = icmp sgt i32 %119, 200
  br i1 %120, label %121, label %130

121:                                              ; preds = %86, %118
  %122 = phi i32 [ %119, %118 ], [ %116, %86 ]
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 2
  %124 = load i32, i32* %123, align 8
  %125 = sext i32 %124 to i64
  %126 = mul nsw i64 %125, 100
  %127 = sext i32 %122 to i64
  %128 = sdiv i64 %126, %127
  %129 = trunc i64 %128 to i32
  br label %130

130:                                              ; preds = %86, %121, %118
  %131 = phi i32 [ %129, %121 ], [ 100, %118 ], [ 100, %86 ]
  %132 = zext i32 %68 to i64
  %133 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 85, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %130
  store i32 1, i32* %133, align 4
  br label %148

137:                                              ; preds = %130
  %138 = sitofp i32 %131 to double
  %139 = fmul double %138, 1.000000e-02
  %140 = tail call double @log10(double %139) #8
  %141 = tail call double @llvm.fabs.f64(double %140)
  %142 = fcmp ogt double %141, 1.000000e+00
  br i1 %142, label %148, label %143

143:                                              ; preds = %137
  %144 = tail call double @log10(double %139) #8
  %145 = tail call double @llvm.fabs.f64(double %144)
  %146 = fmul double %145, 5.000000e-01
  %147 = fadd double %146, 2.500000e-01
  br label %148

148:                                              ; preds = %143, %137, %136
  %149 = phi double [ 1.000000e+00, %136 ], [ %147, %143 ], [ 7.500000e-01, %137 ]
  %150 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 55
  %151 = load i32, i32* %150, align 8
  %152 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 56
  store i32 %151, i32* %152, align 4
  %153 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 38
  %154 = load i32, i32* %153, align 4
  store i32 %154, i32* %150, align 8
  %155 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 53
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 54
  store i32 %156, i32* %157, align 4
  %158 = icmp sgt i32 %131, 110
  br i1 %158, label %162, label %159

159:                                              ; preds = %148
  %160 = icmp slt i32 %131, 90
  br i1 %160, label %161, label %167

161:                                              ; preds = %159
  store i32 1, i32* %155, align 8
  br label %182

162:                                              ; preds = %148
  store i32 -1, i32* %155, align 8
  %163 = icmp eq i32 %156, 1
  %164 = icmp sgt i32 %131, 1000
  %165 = and i1 %164, %163
  br i1 %165, label %166, label %169

166:                                              ; preds = %162
  store i32 0, i32* %157, align 4
  br label %169

167:                                              ; preds = %159
  store i32 0, i32* %155, align 8
  %168 = icmp sgt i32 %131, 102
  br i1 %168, label %169, label %180

169:                                              ; preds = %162, %166, %167
  %170 = add nsw i32 %131, -100
  %171 = sitofp i32 %170 to double
  %172 = fmul double %149, %171
  %173 = fadd double %172, 1.000000e+02
  %174 = fptosi double %173 to i32
  %175 = sitofp i32 %174 to double
  %176 = fmul double %63, %175
  %177 = fdiv double %176, 1.000000e+02
  %178 = fcmp ogt double %177, 5.000000e+01
  br i1 %178, label %179, label %193

179:                                              ; preds = %169
  br label %193

180:                                              ; preds = %167
  %181 = icmp slt i32 %131, 99
  br i1 %181, label %182, label %193

182:                                              ; preds = %161, %180
  %183 = sub nsw i32 100, %131
  %184 = sitofp i32 %183 to double
  %185 = fmul double %149, %184
  %186 = fsub double 1.000000e+02, %185
  %187 = fptosi double %186 to i32
  %188 = sitofp i32 %187 to double
  %189 = fmul double %63, %188
  %190 = fdiv double %189, 1.000000e+02
  %191 = fcmp olt double %190, 5.000000e-03
  br i1 %191, label %192, label %193

192:                                              ; preds = %182
  br label %193

193:                                              ; preds = %180, %192, %182, %169, %179
  %194 = phi double [ 5.000000e+01, %179 ], [ %177, %169 ], [ 5.000000e-03, %192 ], [ %190, %182 ], [ %63, %180 ]
  %195 = load i32, i32* %54, align 4
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %196
  %198 = load double, double* %197, align 8
  %199 = fdiv double %194, %198
  %200 = fcmp olt double %199, 5.000000e-03
  %201 = fcmp ogt double %199, 5.000000e+01
  %202 = select i1 %201, double 5.000000e+01, double %199
  %203 = select i1 %200, double 5.000000e-03, double %202
  %204 = load i32, i32* %2, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %210, label %206

206:                                              ; preds = %193
  %207 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %208 = load i8, i8* %207, align 4
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %206, %193
  %211 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 4
  br label %250

212:                                              ; preds = %206
  %213 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 2
  br i1 %215, label %216, label %223

216:                                              ; preds = %212
  %217 = load i8, i8* %64, align 4
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 1, i64 %218
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 %221
  br label %250

223:                                              ; preds = %212
  %224 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %225 = load i32, i32* %224, align 16
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %231

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %248, label %231

231:                                              ; preds = %227, %223
  %232 = load i32, i32* %69, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %248

234:                                              ; preds = %231
  %235 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %248

238:                                              ; preds = %234
  %239 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 1
  br i1 %241, label %242, label %246

242:                                              ; preds = %238
  %243 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 14
  %244 = load i32, i32* %243, align 4
  %245 = icmp ugt i32 %244, 100
  br i1 %245, label %246, label %248

246:                                              ; preds = %242, %238
  %247 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 3
  br label %250

248:                                              ; preds = %242, %234, %231, %227
  %249 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 0
  br label %250

250:                                              ; preds = %210, %216, %246, %248
  %251 = phi double* [ %249, %248 ], [ %247, %246 ], [ %222, %216 ], [ %211, %210 ]
  store double %203, double* %251, align 8
  br label %252

252:                                              ; preds = %250, %51
  ret void
}

declare void @vpx_clear_system_state() local_unnamed_addr #1

declare i32 @vp9_cyclic_refresh_estimate_bits_at_q(%struct.VP9_COMP*, double) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @log10(double) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_rc_regulate_q(%struct.VP9_COMP*, i32, i32, i32) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 84
  %7 = load %struct.CYCLIC_REFRESH*, %struct.CYCLIC_REFRESH** %6, align 8
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %13 = load i8, i8* %12, align 4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11, %4
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 4
  br label %57

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %23 = load i8, i8* %22, align 4
  %24 = zext i8 %23 to i64
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 1, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 %27
  br label %57

29:                                               ; preds = %17
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %31 = load i32, i32* %30, align 16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %33, %29
  %38 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %55

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 14
  %51 = load i32, i32* %50, align 4
  %52 = icmp ugt i32 %51, 100
  br i1 %52, label %53, label %55

53:                                               ; preds = %49, %45
  %54 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 3
  br label %57

55:                                               ; preds = %49, %41, %37, %33
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 0
  br label %57

57:                                               ; preds = %15, %21, %53, %55
  %58 = phi double* [ %16, %15 ], [ %28, %21 ], [ %56, %55 ], [ %54, %53 ]
  %59 = load double, double* %58, align 8
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %62
  %64 = load double, double* %63, align 8
  %65 = fmul double %59, %64
  %66 = fcmp olt double %65, 5.000000e-03
  %67 = fcmp ogt double %65, 5.000000e+01
  %68 = select i1 %67, double 5.000000e+01, double %65
  %69 = select i1 %66, double 5.000000e-03, double %68
  %70 = sext i32 %1 to i64
  %71 = shl nsw i64 %70, 9
  %72 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 31
  %73 = load i32, i32* %72, align 8
  %74 = sext i32 %73 to i64
  %75 = udiv i64 %71, %74
  %76 = trunc i64 %75 to i32
  %77 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %78 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %7, i64 0, i32 19
  %79 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 14
  %80 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %81 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  br label %83

83:                                               ; preds = %133, %57
  %84 = phi i32 [ 2147483647, %57 ], [ %134, %133 ]
  %85 = phi i32 [ %2, %57 ], [ %135, %133 ]
  %86 = load i32, i32* %77, align 4
  %87 = icmp eq i32 %86, 3
  br i1 %87, label %88, label %99

88:                                               ; preds = %83
  %89 = load i32, i32* %78, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %88
  %92 = load i32, i32* %79, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = load i32, i32* %80, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %94, %91
  %98 = tail call i32 @vp9_cyclic_refresh_rc_bits_per_mb(%struct.VP9_COMP* %0, i32 %85, double %69) #8
  br label %125

99:                                               ; preds = %94, %88, %83
  %100 = load i8, i8* %81, align 4
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = load i32, i32* %8, align 4
  br label %104

104:                                              ; preds = %99, %102
  %105 = phi i32 [ %103, %102 ], [ 0, %99 ]
  %106 = load i32, i32* %82, align 16
  %107 = icmp eq i32 %106, 10
  %108 = select i1 %107, double 6.250000e-02, double 1.562500e-02
  %109 = icmp eq i32 %106, 8
  %110 = select i1 %109, double 2.500000e-01, double %108
  %111 = tail call signext i16 @vp9_ac_quant(i32 %85, i32 0, i32 %106) #8
  %112 = sitofp i16 %111 to double
  %113 = fmul double %110, %112
  %114 = icmp eq i32 %105, 0
  %115 = select i1 %114, i32 2700000, i32 1800000
  %116 = sitofp i32 %115 to double
  %117 = fmul double %113, %116
  %118 = fptosi double %117 to i32
  %119 = ashr i32 %118, 12
  %120 = add nsw i32 %119, %115
  %121 = sitofp i32 %120 to double
  %122 = fmul double %69, %121
  %123 = fdiv double %122, %113
  %124 = fptosi double %123 to i32
  br label %125

125:                                              ; preds = %104, %97
  %126 = phi i32 [ %124, %104 ], [ %98, %97 ]
  %127 = icmp sgt i32 %126, %76
  br i1 %127, label %133, label %128

128:                                              ; preds = %125
  %129 = sub nsw i32 %76, %126
  %130 = icmp sgt i32 %129, %84
  %131 = zext i1 %130 to i32
  %132 = sub i32 %85, %131
  br label %137

133:                                              ; preds = %125
  %134 = sub nsw i32 %126, %76
  %135 = add nsw i32 %85, 1
  %136 = icmp slt i32 %85, %3
  br i1 %136, label %83, label %137

137:                                              ; preds = %133, %128
  %138 = phi i32 [ %132, %128 ], [ %3, %133 ]
  %139 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %202

142:                                              ; preds = %137
  %143 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143)
  store i32 %138, i32* %5, align 4
  %144 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 78
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %185

147:                                              ; preds = %142
  %148 = load i32, i32* %79, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %157, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %152 = load i32, i32* %151, align 16
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %185

154:                                              ; preds = %150
  %155 = load i32, i32* %80, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %185

157:                                              ; preds = %154, %147
  %158 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 53
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 54
  %161 = load i32, i32* %160, align 4
  %162 = mul nsw i32 %161, %159
  %163 = icmp eq i32 %162, -1
  br i1 %163, label %164, label %185

164:                                              ; preds = %157
  %165 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 55
  %166 = load i32, i32* %165, align 8
  %167 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 56
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %166, %168
  br i1 %169, label %185, label %170

170:                                              ; preds = %164
  %171 = icmp slt i32 %166, %168
  %172 = select i1 %171, i32 %166, i32 %168
  %173 = icmp sgt i32 %166, %168
  %174 = select i1 %173, i32 %166, i32 %168
  %175 = icmp sgt i32 %172, %138
  %176 = icmp slt i32 %174, %138
  %177 = select i1 %176, i32 %174, i32 %138
  %178 = select i1 %175, i32 %172, i32 %177
  %179 = icmp eq i32 %159, -1
  %180 = icmp slt i32 %178, %138
  %181 = and i1 %179, %180
  %182 = add nsw i32 %178, %138
  %183 = ashr i32 %182, 1
  %184 = select i1 %181, i32 %183, i32 %178
  store i32 %184, i32* %5, align 4
  br label %185

185:                                              ; preds = %170, %164, %157, %154, %150, %142
  %186 = phi i32 [ %138, %154 ], [ %138, %150 ], [ %138, %164 ], [ %138, %142 ], [ %184, %170 ], [ %138, %157 ]
  %187 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 62
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, 1
  br i1 %189, label %190, label %192

190:                                              ; preds = %185
  call void @vp9_cyclic_refresh_limit_q(%struct.VP9_COMP* %0, i32* nonnull %5) #8
  %191 = load i32, i32* %5, align 4
  br label %192

192:                                              ; preds = %185, %190
  %193 = phi i32 [ %191, %190 ], [ %186, %185 ]
  %194 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %195 = load i32, i32* %194, align 8
  %196 = icmp slt i32 %193, %195
  %197 = select i1 %196, i32 %193, i32 %195
  %198 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %199 = load i32, i32* %198, align 4
  %200 = icmp sgt i32 %197, %199
  %201 = select i1 %200, i32 %197, i32 %199
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143)
  br label %202

202:                                              ; preds = %137, %192
  %203 = phi i32 [ %201, %192 ], [ %138, %137 ]
  ret i32 %203
}

declare i32 @vp9_cyclic_refresh_rc_bits_per_mb(%struct.VP9_COMP*, i32, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_frame_type_qdelta(%struct.VP9_COMP* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds [5 x double], [5 x double]* @vp9_frame_type_qdelta.rate_factor_deltas, i64 0, i64 %7
  %9 = load double, double* %8, align 8
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %11 = load i32, i32* %10, align 16
  %12 = tail call i32 @vp9_compute_qdelta_by_rate(%struct.RATE_CONTROL* %4, i32 %6, i32 %2, double %9, i32 %11)
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_compute_qdelta_by_rate(%struct.RATE_CONTROL* nocapture readonly, i32, i32, double, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %0, i64 0, i32 48
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %4, 10
  %9 = select i1 %8, double 6.250000e-02, double 1.562500e-02
  %10 = icmp eq i32 %4, 8
  %11 = select i1 %10, double 2.500000e-01, double %9
  %12 = tail call signext i16 @vp9_ac_quant(i32 %2, i32 0, i32 %4) #8
  %13 = sitofp i16 %12 to double
  %14 = fmul double %11, %13
  %15 = icmp eq i32 %1, 0
  %16 = select i1 %15, i32 2700000, i32 1800000
  %17 = sitofp i32 %16 to double
  %18 = fmul double %14, %17
  %19 = fptosi double %18 to i32
  %20 = ashr i32 %19, 12
  %21 = add nsw i32 %20, %16
  %22 = sitofp i32 %21 to double
  %23 = fdiv double %22, %14
  %24 = fptosi double %23 to i32
  %25 = sitofp i32 %24 to double
  %26 = fmul double %25, %3
  %27 = fptosi double %26 to i32
  %28 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %0, i64 0, i32 49
  %29 = load i32, i32* %28, align 4
  %30 = load i32, i32* %6, align 8
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %53

32:                                               ; preds = %5, %49
  %33 = phi i32 [ %50, %49 ], [ %29, %5 ]
  %34 = icmp eq i32 %4, 10
  %35 = select i1 %34, double 6.250000e-02, double 1.562500e-02
  %36 = icmp eq i32 %4, 8
  %37 = select i1 %36, double 2.500000e-01, double %35
  %38 = tail call signext i16 @vp9_ac_quant(i32 %33, i32 0, i32 %4) #8
  %39 = sitofp i16 %38 to double
  %40 = fmul double %37, %39
  %41 = fmul double %40, %17
  %42 = fptosi double %41 to i32
  %43 = ashr i32 %42, 12
  %44 = add nsw i32 %43, %16
  %45 = sitofp i32 %44 to double
  %46 = fdiv double %45, %40
  %47 = fptosi double %46 to i32
  %48 = icmp sgt i32 %47, %27
  br i1 %48, label %49, label %53

49:                                               ; preds = %32
  %50 = add nsw i32 %33, 1
  %51 = load i32, i32* %6, align 8
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %32, label %53

53:                                               ; preds = %49, %32, %5
  %54 = phi i32 [ %7, %5 ], [ %33, %32 ], [ %7, %49 ]
  %55 = sub nsw i32 %54, %2
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_rc_pick_q_and_bounds(%struct.VP9_COMP*, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %682

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67
  br i1 %10, label %12, label %244

12:                                               ; preds = %7
  %13 = tail call fastcc i32 @calc_active_worst_quality_one_pass_cbr(%struct.VP9_COMP* %0) #8
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %15 = load i32, i32* %14, align 16
  %16 = icmp eq i32 %15, 10
  %17 = select i1 %16, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @rtc_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @rtc_minq_12, i64 0, i64 0)
  %18 = icmp eq i32 %15, 8
  %19 = select i1 %18, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @rtc_minq_8, i64 0, i64 0), i32* %17
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %25 = load i8, i8* %24, align 4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %106, label %27

27:                                               ; preds = %23, %12
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %15, 10
  %36 = select i1 %35, double 6.250000e-02, double 1.562500e-02
  %37 = icmp eq i32 %15, 8
  %38 = select i1 %37, double 2.500000e-01, double %36
  %39 = tail call signext i16 @vp9_ac_quant(i32 %34, i32 0, i32 %15) #8
  %40 = sitofp i16 %39 to double
  %41 = fmul double %38, %40
  %42 = fmul double %41, 7.500000e-01
  %43 = load i32, i32* %14, align 16
  %44 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %11, double %41, double %42, i32 %43) #8
  %45 = add nsw i32 %44, %34
  %46 = load i32, i32* %28, align 4
  %47 = icmp sgt i32 %45, %46
  %48 = select i1 %47, i32 %45, i32 %46
  br label %205

49:                                               ; preds = %27
  %50 = load i32, i32* %28, align 4
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %205, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 0
  %56 = load i32, i32* %55, align 8
  %57 = select i1 %16, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_12, i64 0, i64 0)
  %58 = select i1 %18, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_8, i64 0, i64 0), i32* %57
  %59 = select i1 %16, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_12, i64 0, i64 0)
  %60 = select i1 %18, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_8, i64 0, i64 0), i32* %59
  %61 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 9
  %62 = load i32, i32* %61, align 8
  %63 = icmp sgt i32 %62, 4800
  br i1 %63, label %64, label %68

64:                                               ; preds = %54
  %65 = sext i32 %56 to i64
  %66 = getelementptr inbounds i32, i32* %58, i64 %65
  %67 = load i32, i32* %66, align 4
  br label %86

68:                                               ; preds = %54
  %69 = icmp slt i32 %62, 300
  br i1 %69, label %70, label %74

70:                                               ; preds = %68
  %71 = sext i32 %56 to i64
  %72 = getelementptr inbounds i32, i32* %60, i64 %71
  %73 = load i32, i32* %72, align 4
  br label %86

74:                                               ; preds = %68
  %75 = sub nuw nsw i32 4800, %62
  %76 = sext i32 %56 to i64
  %77 = getelementptr inbounds i32, i32* %60, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds i32, i32* %58, i64 %76
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 %78, %80
  %82 = mul nsw i32 %81, %75
  %83 = add nsw i32 %82, 2250
  %84 = sdiv i32 %83, 4500
  %85 = add nsw i32 %84, %80
  br label %86

86:                                               ; preds = %74, %70, %64
  %87 = phi i32 [ %67, %64 ], [ %73, %70 ], [ %85, %74 ]
  %88 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %89 = load i32, i32* %88, align 16
  %90 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %89
  %93 = icmp slt i32 %92, 101377
  %94 = select i1 %93, double 7.500000e-01, double 1.000000e+00
  %95 = icmp eq i32 %15, 10
  %96 = select i1 %95, double 6.250000e-02, double 1.562500e-02
  %97 = icmp eq i32 %15, 8
  %98 = select i1 %97, double 2.500000e-01, double %96
  %99 = tail call signext i16 @vp9_ac_quant(i32 %87, i32 0, i32 %15) #8
  %100 = sitofp i16 %99 to double
  %101 = fmul double %98, %100
  %102 = fmul double %94, %101
  %103 = load i32, i32* %14, align 16
  %104 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %11, double %101, double %102, i32 %103) #8
  %105 = add nsw i32 %104, %87
  br label %205

106:                                              ; preds = %23
  %107 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %177

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %177

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 14
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %177, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %124 = load i32, i32* %123, align 16
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %177, label %126

126:                                              ; preds = %122, %118
  %127 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %128 = load i32, i32* %127, align 8
  %129 = icmp sgt i32 %128, 1
  br i1 %129, label %130, label %134

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %132 = load i32, i32* %131, align 4
  %133 = icmp slt i32 %132, %13
  br i1 %133, label %135, label %134

134:                                              ; preds = %130, %126
  br label %135

135:                                              ; preds = %134, %130
  %136 = phi i32 [ %13, %134 ], [ %132, %130 ]
  %137 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 159
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %145, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %142 = load i8, i8* %141, align 4
  %143 = zext i8 %142 to i64
  %144 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 7, i64 %143
  br label %147

145:                                              ; preds = %135
  %146 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  br label %147

147:                                              ; preds = %145, %140
  %148 = phi i32* [ %144, %140 ], [ %146, %145 ]
  %149 = load i32, i32* %148, align 4
  %150 = select i1 %16, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_12, i64 0, i64 0)
  %151 = select i1 %18, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_8, i64 0, i64 0), i32* %150
  %152 = select i1 %16, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_12, i64 0, i64 0)
  %153 = select i1 %18, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_8, i64 0, i64 0), i32* %152
  %154 = icmp sgt i32 %149, 2000
  br i1 %154, label %155, label %159

155:                                              ; preds = %147
  %156 = sext i32 %136 to i64
  %157 = getelementptr inbounds i32, i32* %151, i64 %156
  %158 = load i32, i32* %157, align 4
  br label %205

159:                                              ; preds = %147
  %160 = icmp slt i32 %149, 400
  br i1 %160, label %161, label %165

161:                                              ; preds = %159
  %162 = sext i32 %136 to i64
  %163 = getelementptr inbounds i32, i32* %153, i64 %162
  %164 = load i32, i32* %163, align 4
  br label %205

165:                                              ; preds = %159
  %166 = sub nuw nsw i32 2000, %149
  %167 = sext i32 %136 to i64
  %168 = getelementptr inbounds i32, i32* %153, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %151, i64 %167
  %171 = load i32, i32* %170, align 4
  %172 = sub nsw i32 %169, %171
  %173 = mul nsw i32 %172, %166
  %174 = add nsw i32 %173, 800
  %175 = sdiv i32 %174, 1600
  %176 = add nsw i32 %175, %171
  br label %205

177:                                              ; preds = %122, %114, %110, %106
  %178 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %179 = load i32, i32* %178, align 4
  %180 = icmp ugt i32 %179, 1
  br i1 %180, label %181, label %193

181:                                              ; preds = %177
  %182 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %183, %13
  br i1 %184, label %185, label %189

185:                                              ; preds = %181
  %186 = sext i32 %183 to i64
  %187 = getelementptr inbounds i32, i32* %19, i64 %186
  %188 = load i32, i32* %187, align 4
  br label %205

189:                                              ; preds = %181
  %190 = sext i32 %13 to i64
  %191 = getelementptr inbounds i32, i32* %19, i64 %190
  %192 = load i32, i32* %191, align 4
  br label %205

193:                                              ; preds = %177
  %194 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 0
  %195 = load i32, i32* %194, align 8
  %196 = icmp slt i32 %195, %13
  br i1 %196, label %197, label %201

197:                                              ; preds = %193
  %198 = sext i32 %195 to i64
  %199 = getelementptr inbounds i32, i32* %19, i64 %198
  %200 = load i32, i32* %199, align 4
  br label %205

201:                                              ; preds = %193
  %202 = sext i32 %13 to i64
  %203 = getelementptr inbounds i32, i32* %19, i64 %202
  %204 = load i32, i32* %203, align 4
  br label %205

205:                                              ; preds = %201, %197, %189, %185, %165, %161, %155, %86, %49, %32
  %206 = phi i32 [ %48, %32 ], [ %105, %86 ], [ %50, %49 ], [ %188, %185 ], [ %192, %189 ], [ %200, %197 ], [ %204, %201 ], [ %158, %155 ], [ %164, %161 ], [ %176, %165 ]
  %207 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %208 = load i32, i32* %207, align 4
  %209 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %210 = load i32, i32* %209, align 8
  %211 = icmp slt i32 %206, %208
  %212 = icmp sgt i32 %206, %210
  %213 = select i1 %212, i32 %210, i32 %206
  %214 = select i1 %211, i32 %208, i32 %213
  %215 = icmp slt i32 %13, %214
  %216 = icmp sgt i32 %13, %210
  %217 = select i1 %216, i32 %210, i32 %13
  %218 = select i1 %215, i32 %214, i32 %217
  store i32 %218, i32* %2, align 4
  store i32 %214, i32* %1, align 4
  %219 = load i32, i32* %20, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %225, label %221

221:                                              ; preds = %205
  %222 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %223 = load i8, i8* %222, align 4
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %232, label %225

225:                                              ; preds = %221, %205
  %226 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %232, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 5
  %231 = load i32, i32* %230, align 8
  br label %687

232:                                              ; preds = %225, %221
  %233 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = tail call i32 @vp9_rc_regulate_q(%struct.VP9_COMP* %0, i32 %234, i32 %214, i32 %218) #8
  %236 = load i32, i32* %2, align 4
  %237 = icmp sgt i32 %235, %236
  br i1 %237, label %238, label %687

238:                                              ; preds = %232
  %239 = load i32, i32* %233, align 4
  %240 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %241 = load i32, i32* %240, align 8
  %242 = icmp slt i32 %239, %241
  br i1 %242, label %687, label %243

243:                                              ; preds = %238
  store i32 %235, i32* %2, align 4
  br label %687

244:                                              ; preds = %7
  %245 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 30
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %9, 2
  br i1 %247, label %248, label %264

248:                                              ; preds = %244
  %249 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 46
  %250 = load i64, i64* %249, align 8
  %251 = icmp sgt i64 %250, 0
  br i1 %251, label %252, label %264

252:                                              ; preds = %248
  %253 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 45
  %254 = load i64, i64* %253, align 8
  %255 = sitofp i64 %254 to double
  %256 = sitofp i64 %250 to double
  %257 = fdiv double %255, %256
  %258 = fcmp olt double %257, 1.000000e-01
  br i1 %258, label %259, label %264

259:                                              ; preds = %252
  %260 = sitofp i32 %246 to double
  %261 = fmul double %257, %260
  %262 = fdiv double %261, 1.000000e-01
  %263 = fptosi double %262 to i32
  br label %264

264:                                              ; preds = %259, %252, %248, %244
  %265 = phi i32 [ %246, %248 ], [ %246, %244 ], [ %263, %259 ], [ %246, %252 ]
  %266 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %267 = load i32, i32* %266, align 4
  %268 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %280

271:                                              ; preds = %264
  %272 = icmp eq i32 %267, 0
  br i1 %272, label %273, label %276

273:                                              ; preds = %271
  %274 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %275 = load i32, i32* %274, align 8
  br label %319

276:                                              ; preds = %271
  %277 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 0
  %278 = load i32, i32* %277, align 8
  %279 = shl i32 %278, 1
  br label %319

280:                                              ; preds = %264
  %281 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %306

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %292

288:                                              ; preds = %284
  %289 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %290 = load i32, i32* %289, align 16
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %306, label %292

292:                                              ; preds = %288, %284
  %293 = icmp eq i32 %267, 1
  br i1 %293, label %294, label %299

294:                                              ; preds = %292
  %295 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 0
  %296 = load i32, i32* %295, align 8
  %297 = mul nsw i32 %296, 5
  %298 = ashr i32 %297, 2
  br label %319

299:                                              ; preds = %292
  %300 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 1
  %301 = load i32, i32* %300, align 4
  %302 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 64
  %303 = load i32, i32* %302, align 4
  %304 = mul nsw i32 %303, %301
  %305 = sdiv i32 %304, 100
  br label %319

306:                                              ; preds = %288, %280
  %307 = icmp eq i32 %267, 1
  br i1 %307, label %308, label %312

308:                                              ; preds = %306
  %309 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 0
  %310 = load i32, i32* %309, align 8
  %311 = shl i32 %310, 1
  br label %319

312:                                              ; preds = %306
  %313 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 63
  %316 = load i32, i32* %315, align 8
  %317 = mul nsw i32 %316, %314
  %318 = sdiv i32 %317, 100
  br label %319

319:                                              ; preds = %312, %308, %299, %294, %276, %273
  %320 = phi i32 [ %275, %273 ], [ %279, %276 ], [ %298, %294 ], [ %305, %299 ], [ %311, %308 ], [ %318, %312 ]
  %321 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %322 = load i32, i32* %321, align 8
  %323 = icmp slt i32 %320, %322
  %324 = select i1 %323, i32 %320, i32 %322
  %325 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %326 = load i32, i32* %325, align 16
  %327 = icmp eq i32 %326, 10
  %328 = select i1 %327, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @inter_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @inter_minq_12, i64 0, i64 0)
  %329 = icmp eq i32 %326, 8
  %330 = select i1 %329, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @inter_minq_8, i64 0, i64 0), i32* %328
  br i1 %270, label %335, label %331

331:                                              ; preds = %319
  %332 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %333 = load i8, i8* %332, align 4
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %427, label %335

335:                                              ; preds = %331, %319
  %336 = icmp eq i32 %9, 3
  br i1 %336, label %337, label %353

337:                                              ; preds = %335
  %338 = icmp eq i32 %326, 10
  %339 = select i1 %338, double 6.250000e-02, double 1.562500e-02
  %340 = icmp eq i32 %326, 8
  %341 = select i1 %340, double 2.500000e-01, double %339
  %342 = tail call signext i16 @vp9_ac_quant(i32 %265, i32 0, i32 %326) #8
  %343 = sitofp i16 %342 to double
  %344 = fmul double %341, %343
  %345 = fmul double %344, 2.500000e-01
  %346 = load i32, i32* %325, align 16
  %347 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %11, double %344, double %345, i32 %346) #8
  %348 = add nsw i32 %347, %265
  %349 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %350 = load i32, i32* %349, align 4
  %351 = icmp sgt i32 %348, %350
  %352 = select i1 %351, i32 %348, i32 %350
  br label %602

353:                                              ; preds = %335
  %354 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  %355 = load i32, i32* %354, align 4
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %375, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 5
  %359 = load i32, i32* %358, align 8
  %360 = icmp eq i32 %326, 10
  %361 = select i1 %360, double 6.250000e-02, double 1.562500e-02
  %362 = icmp eq i32 %326, 8
  %363 = select i1 %362, double 2.500000e-01, double %361
  %364 = tail call signext i16 @vp9_ac_quant(i32 %359, i32 0, i32 %326) #8
  %365 = sitofp i16 %364 to double
  %366 = fmul double %363, %365
  %367 = fmul double %366, 7.500000e-01
  %368 = load i32, i32* %325, align 16
  %369 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %11, double %366, double %367, i32 %368) #8
  %370 = add nsw i32 %369, %359
  %371 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %372 = load i32, i32* %371, align 4
  %373 = icmp sgt i32 %370, %372
  %374 = select i1 %373, i32 %370, i32 %372
  br label %602

375:                                              ; preds = %353
  %376 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 0
  %377 = load i32, i32* %376, align 8
  %378 = select i1 %327, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_12, i64 0, i64 0)
  %379 = select i1 %329, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_8, i64 0, i64 0), i32* %378
  %380 = select i1 %327, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_12, i64 0, i64 0)
  %381 = select i1 %329, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_8, i64 0, i64 0), i32* %380
  %382 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 9
  %383 = load i32, i32* %382, align 8
  %384 = icmp sgt i32 %383, 4800
  br i1 %384, label %385, label %389

385:                                              ; preds = %375
  %386 = sext i32 %377 to i64
  %387 = getelementptr inbounds i32, i32* %379, i64 %386
  %388 = load i32, i32* %387, align 4
  br label %407

389:                                              ; preds = %375
  %390 = icmp slt i32 %383, 300
  br i1 %390, label %391, label %395

391:                                              ; preds = %389
  %392 = sext i32 %377 to i64
  %393 = getelementptr inbounds i32, i32* %381, i64 %392
  %394 = load i32, i32* %393, align 4
  br label %407

395:                                              ; preds = %389
  %396 = sub nuw nsw i32 4800, %383
  %397 = sext i32 %377 to i64
  %398 = getelementptr inbounds i32, i32* %381, i64 %397
  %399 = load i32, i32* %398, align 4
  %400 = getelementptr inbounds i32, i32* %379, i64 %397
  %401 = load i32, i32* %400, align 4
  %402 = sub nsw i32 %399, %401
  %403 = mul nsw i32 %402, %396
  %404 = add nsw i32 %403, 2250
  %405 = sdiv i32 %404, 4500
  %406 = add nsw i32 %405, %401
  br label %407

407:                                              ; preds = %395, %391, %385
  %408 = phi i32 [ %388, %385 ], [ %394, %391 ], [ %406, %395 ]
  %409 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %410 = load i32, i32* %409, align 16
  %411 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %412 = load i32, i32* %411, align 4
  %413 = mul nsw i32 %412, %410
  %414 = icmp slt i32 %413, 101377
  %415 = select i1 %414, double 7.500000e-01, double 1.000000e+00
  %416 = icmp eq i32 %326, 10
  %417 = select i1 %416, double 6.250000e-02, double 1.562500e-02
  %418 = icmp eq i32 %326, 8
  %419 = select i1 %418, double 2.500000e-01, double %417
  %420 = tail call signext i16 @vp9_ac_quant(i32 %408, i32 0, i32 %326) #8
  %421 = sitofp i16 %420 to double
  %422 = fmul double %419, %421
  %423 = fmul double %415, %422
  %424 = load i32, i32* %325, align 16
  %425 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %11, double %422, double %423, i32 %424) #8
  %426 = add nsw i32 %425, %408
  br label %602

427:                                              ; preds = %331
  %428 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %429 = load i32, i32* %428, align 4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %561

431:                                              ; preds = %427
  %432 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %433 = load i32, i32* %432, align 4
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %439

435:                                              ; preds = %431
  %436 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %437 = load i32, i32* %436, align 16
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %561, label %439

439:                                              ; preds = %435, %431
  %440 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %441 = load i32, i32* %440, align 8
  %442 = icmp sgt i32 %441, 1
  br i1 %442, label %443, label %448

443:                                              ; preds = %439
  %444 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %445 = load i32, i32* %444, align 4
  %446 = icmp slt i32 %445, %324
  %447 = select i1 %446, i32 %445, i32 %324
  br label %451

448:                                              ; preds = %439
  %449 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 0
  %450 = load i32, i32* %449, align 8
  br label %451

451:                                              ; preds = %448, %443
  %452 = phi i32 [ %450, %448 ], [ %447, %443 ]
  switch i32 %9, label %520 [
    i32 2, label %453
    i32 3, label %500
  ]

453:                                              ; preds = %451
  %454 = icmp slt i32 %452, %265
  %455 = select i1 %454, i32 %265, i32 %452
  %456 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 159
  %457 = load i32, i32* %456, align 8
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %464, label %459

459:                                              ; preds = %453
  %460 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %461 = load i8, i8* %460, align 4
  %462 = zext i8 %461 to i64
  %463 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 7, i64 %462
  br label %466

464:                                              ; preds = %453
  %465 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  br label %466

466:                                              ; preds = %464, %459
  %467 = phi i32* [ %463, %459 ], [ %465, %464 ]
  %468 = load i32, i32* %467, align 4
  %469 = select i1 %327, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_12, i64 0, i64 0)
  %470 = select i1 %329, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_8, i64 0, i64 0), i32* %469
  %471 = select i1 %327, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_12, i64 0, i64 0)
  %472 = select i1 %329, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_8, i64 0, i64 0), i32* %471
  %473 = icmp sgt i32 %468, 2000
  br i1 %473, label %474, label %478

474:                                              ; preds = %466
  %475 = sext i32 %455 to i64
  %476 = getelementptr inbounds i32, i32* %470, i64 %475
  %477 = load i32, i32* %476, align 4
  br label %496

478:                                              ; preds = %466
  %479 = icmp slt i32 %468, 400
  br i1 %479, label %480, label %484

480:                                              ; preds = %478
  %481 = sext i32 %455 to i64
  %482 = getelementptr inbounds i32, i32* %472, i64 %481
  %483 = load i32, i32* %482, align 4
  br label %496

484:                                              ; preds = %478
  %485 = sub nuw nsw i32 2000, %468
  %486 = sext i32 %455 to i64
  %487 = getelementptr inbounds i32, i32* %472, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = getelementptr inbounds i32, i32* %470, i64 %486
  %490 = load i32, i32* %489, align 4
  %491 = sub nsw i32 %488, %490
  %492 = mul nsw i32 %491, %485
  %493 = add nsw i32 %492, 800
  %494 = sdiv i32 %493, 1600
  %495 = add nsw i32 %494, %490
  br label %496

496:                                              ; preds = %484, %480, %474
  %497 = phi i32 [ %477, %474 ], [ %483, %480 ], [ %495, %484 ]
  %498 = mul nsw i32 %497, 15
  %499 = sdiv i32 %498, 16
  br label %602

500:                                              ; preds = %451
  %501 = icmp eq i32 %326, 10
  %502 = select i1 %501, double 6.250000e-02, double 1.562500e-02
  %503 = icmp eq i32 %326, 8
  %504 = select i1 %503, double 2.500000e-01, double %502
  %505 = tail call signext i16 @vp9_ac_quant(i32 %265, i32 0, i32 %326) #8
  %506 = sitofp i16 %505 to double
  %507 = fmul double %504, %506
  %508 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %509 = load i32, i32* %508, align 16
  %510 = icmp eq i32 %509, 0
  %511 = select i1 %510, double 5.000000e-01, double 4.000000e-01
  %512 = fmul double %507, %511
  %513 = load i32, i32* %325, align 16
  %514 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %11, double %507, double %512, i32 %513) #8
  %515 = add nsw i32 %514, %265
  %516 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %517 = load i32, i32* %516, align 4
  %518 = icmp sgt i32 %515, %517
  %519 = select i1 %518, i32 %515, i32 %517
  br label %602

520:                                              ; preds = %451
  %521 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 159
  %522 = load i32, i32* %521, align 8
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %529, label %524

524:                                              ; preds = %520
  %525 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %526 = load i8, i8* %525, align 4
  %527 = zext i8 %526 to i64
  %528 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 7, i64 %527
  br label %531

529:                                              ; preds = %520
  %530 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  br label %531

531:                                              ; preds = %529, %524
  %532 = phi i32* [ %528, %524 ], [ %530, %529 ]
  %533 = load i32, i32* %532, align 4
  %534 = select i1 %327, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_12, i64 0, i64 0)
  %535 = select i1 %329, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_8, i64 0, i64 0), i32* %534
  %536 = select i1 %327, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_12, i64 0, i64 0)
  %537 = select i1 %329, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_8, i64 0, i64 0), i32* %536
  %538 = icmp sgt i32 %533, 2000
  br i1 %538, label %539, label %543

539:                                              ; preds = %531
  %540 = sext i32 %452 to i64
  %541 = getelementptr inbounds i32, i32* %535, i64 %540
  %542 = load i32, i32* %541, align 4
  br label %602

543:                                              ; preds = %531
  %544 = icmp slt i32 %533, 400
  br i1 %544, label %545, label %549

545:                                              ; preds = %543
  %546 = sext i32 %452 to i64
  %547 = getelementptr inbounds i32, i32* %537, i64 %546
  %548 = load i32, i32* %547, align 4
  br label %602

549:                                              ; preds = %543
  %550 = sub nuw nsw i32 2000, %533
  %551 = sext i32 %452 to i64
  %552 = getelementptr inbounds i32, i32* %537, i64 %551
  %553 = load i32, i32* %552, align 4
  %554 = getelementptr inbounds i32, i32* %535, i64 %551
  %555 = load i32, i32* %554, align 4
  %556 = sub nsw i32 %553, %555
  %557 = mul nsw i32 %556, %550
  %558 = add nsw i32 %557, 800
  %559 = sdiv i32 %558, 1600
  %560 = add nsw i32 %559, %555
  br label %602

561:                                              ; preds = %435, %427
  %562 = icmp eq i32 %9, 3
  br i1 %562, label %563, label %584

563:                                              ; preds = %561
  %564 = icmp eq i32 %326, 10
  %565 = select i1 %564, double 6.250000e-02, double 1.562500e-02
  %566 = icmp eq i32 %326, 8
  %567 = select i1 %566, double 2.500000e-01, double %565
  %568 = tail call signext i16 @vp9_ac_quant(i32 %265, i32 0, i32 %326) #8
  %569 = sitofp i16 %568 to double
  %570 = fmul double %567, %569
  %571 = load i32, i32* %266, align 4
  %572 = and i32 %571, 7
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds [8 x double], [8 x double]* @__const.rc_pick_q_and_bounds_one_pass_vbr.delta_rate, i64 0, i64 %573
  %575 = load double, double* %574, align 8
  %576 = fmul double %570, %575
  %577 = load i32, i32* %325, align 16
  %578 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %11, double %570, double %576, i32 %577) #8
  %579 = add nsw i32 %578, %265
  %580 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %581 = load i32, i32* %580, align 4
  %582 = icmp sgt i32 %579, %581
  %583 = select i1 %582, i32 %579, i32 %581
  br label %602

584:                                              ; preds = %561
  %585 = icmp ugt i32 %267, 1
  br i1 %585, label %586, label %591

586:                                              ; preds = %584
  %587 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %588 = load i32, i32* %587, align 4
  %589 = icmp slt i32 %588, %324
  %590 = select i1 %589, i32 %588, i32 %324
  br label %594

591:                                              ; preds = %584
  %592 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 0
  %593 = load i32, i32* %592, align 8
  br label %594

594:                                              ; preds = %591, %586
  %595 = phi i32 [ %590, %586 ], [ %593, %591 ]
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds i32, i32* %330, i64 %596
  %598 = load i32, i32* %597, align 4
  %599 = icmp slt i32 %598, %265
  %600 = and i1 %247, %599
  %601 = select i1 %600, i32 %265, i32 %598
  br label %602

602:                                              ; preds = %594, %563, %549, %545, %539, %500, %496, %407, %357, %337
  %603 = phi i32 [ %352, %337 ], [ %374, %357 ], [ %426, %407 ], [ %583, %563 ], [ %499, %496 ], [ %519, %500 ], [ %601, %594 ], [ %542, %539 ], [ %548, %545 ], [ %560, %549 ]
  %604 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %605 = load i32, i32* %604, align 4
  %606 = load i32, i32* %321, align 8
  %607 = icmp slt i32 %603, %605
  %608 = icmp sgt i32 %603, %606
  %609 = select i1 %608, i32 %606, i32 %603
  %610 = select i1 %607, i32 %605, i32 %609
  %611 = icmp slt i32 %324, %610
  %612 = icmp sgt i32 %324, %606
  %613 = select i1 %612, i32 %606, i32 %324
  %614 = select i1 %611, i32 %610, i32 %613
  store i32 %614, i32* %2, align 4
  store i32 %610, i32* %1, align 4
  tail call void @vpx_clear_system_state() #8
  %615 = load i32, i32* %268, align 4
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %617, label %627

617:                                              ; preds = %602
  %618 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  %619 = load i32, i32* %618, align 4
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %627

621:                                              ; preds = %617
  %622 = load i32, i32* %266, align 4
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %627, label %624

624:                                              ; preds = %621
  %625 = load i32, i32* %325, align 16
  %626 = tail call i32 @vp9_compute_qdelta_by_rate(%struct.RATE_CONTROL* %11, i32 0, i32 %614, double 2.000000e+00, i32 %625) #8
  br label %642

627:                                              ; preds = %621, %617, %602
  %628 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %629 = load i32, i32* %628, align 4
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %631, label %642

631:                                              ; preds = %627
  %632 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %633 = load i32, i32* %632, align 4
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %639

635:                                              ; preds = %631
  %636 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %637 = load i32, i32* %636, align 16
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %642, label %639

639:                                              ; preds = %635, %631
  %640 = load i32, i32* %325, align 16
  %641 = tail call i32 @vp9_compute_qdelta_by_rate(%struct.RATE_CONTROL* %11, i32 %615, i32 %614, double 1.750000e+00, i32 %640) #8
  br label %642

642:                                              ; preds = %639, %635, %627, %624
  %643 = phi i32 [ 0, %627 ], [ %641, %639 ], [ 0, %635 ], [ %626, %624 ]
  %644 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 71
  %645 = load i32, i32* %644, align 8
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %652, label %647

647:                                              ; preds = %642
  %648 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 88
  %649 = load i32, i32* %648, align 8
  %650 = icmp eq i32 %649, 0
  %651 = select i1 %650, i32 %643, i32 0
  br label %652

652:                                              ; preds = %647, %642
  %653 = phi i32 [ %643, %642 ], [ %651, %647 ]
  %654 = add nsw i32 %653, %614
  store i32 %654, i32* %2, align 4
  %655 = load i32, i32* %1, align 4
  %656 = icmp sgt i32 %654, %655
  %657 = select i1 %656, i32 %654, i32 %655
  store i32 %657, i32* %2, align 4
  %658 = load i32, i32* %8, align 4
  %659 = icmp eq i32 %658, 3
  br i1 %659, label %687, label %660

660:                                              ; preds = %652
  %661 = load i32, i32* %268, align 4
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %670

663:                                              ; preds = %660
  %664 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  %665 = load i32, i32* %664, align 4
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %670, label %667

667:                                              ; preds = %663
  %668 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 5
  %669 = load i32, i32* %668, align 8
  br label %687

670:                                              ; preds = %663, %660
  %671 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  %672 = load i32, i32* %671, align 4
  %673 = tail call i32 @vp9_rc_regulate_q(%struct.VP9_COMP* %0, i32 %672, i32 %610, i32 %614) #8
  %674 = load i32, i32* %2, align 4
  %675 = icmp sgt i32 %673, %674
  br i1 %675, label %676, label %687

676:                                              ; preds = %670
  %677 = load i32, i32* %671, align 4
  %678 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %679 = load i32, i32* %678, align 8
  %680 = icmp slt i32 %677, %679
  br i1 %680, label %687, label %681

681:                                              ; preds = %676
  store i32 %673, i32* %2, align 4
  br label %687

682:                                              ; preds = %3
  %683 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %684 = load i8, i8* %683, align 4
  %685 = zext i8 %684 to i32
  %686 = tail call fastcc i32 @rc_pick_q_and_bounds_two_pass(%struct.VP9_COMP* %0, i32* %1, i32* %2, i32 %685)
  br label %687

687:                                              ; preds = %681, %676, %670, %667, %652, %243, %238, %232, %229, %682
  %688 = phi i32 [ %686, %682 ], [ %231, %229 ], [ %235, %243 ], [ %235, %232 ], [ %236, %238 ], [ %669, %667 ], [ %673, %681 ], [ %673, %670 ], [ %610, %652 ], [ %674, %676 ]
  %689 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 61
  %690 = load i32, i32* %689, align 4
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %709, label %692

692:                                              ; preds = %687
  %693 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 50
  %694 = load i32, i32* %693, align 8
  %695 = icmp eq i32 %694, 1
  br i1 %695, label %696, label %700

696:                                              ; preds = %692
  %697 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 51
  %698 = load i32, i32* %697, align 4
  %699 = sub nsw i32 %688, %698
  br label %700

700:                                              ; preds = %696, %692
  %701 = phi i32 [ %699, %696 ], [ %688, %692 ]
  %702 = load i32, i32* %1, align 4
  %703 = icmp slt i32 %701, %702
  br i1 %703, label %704, label %705

704:                                              ; preds = %700
  store i32 %701, i32* %1, align 4
  br label %709

705:                                              ; preds = %700
  %706 = load i32, i32* %2, align 4
  %707 = icmp sgt i32 %701, %706
  br i1 %707, label %708, label %709

708:                                              ; preds = %705
  store i32 %701, i32* %2, align 4
  br label %709

709:                                              ; preds = %687, %704, %708, %705
  %710 = phi i32 [ %701, %704 ], [ %701, %708 ], [ %701, %705 ], [ %688, %687 ]
  ret i32 %710
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @rc_pick_q_and_bounds_two_pass(%struct.VP9_COMP*, i32* nocapture, i32* nocapture, i32) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 30
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %43

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 14
  %17 = load double, double* %16, align 8
  %18 = fcmp ogt double %17, 1.000000e-01
  br i1 %18, label %19, label %26

19:                                               ; preds = %15
  %20 = fadd double %17, -1.000000e-01
  %21 = fdiv double %20, 5.000000e-02
  %22 = fptosi double %21 to i32
  %23 = sub nsw i32 %11, %22
  %24 = icmp sgt i32 %23, 0
  %25 = select i1 %24, i32 %23, i32 0
  br label %26

26:                                               ; preds = %19, %15
  %27 = phi i32 [ %25, %19 ], [ %11, %15 ]
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 46
  %29 = load i64, i64* %28, align 8
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 45
  %33 = load i64, i64* %32, align 8
  %34 = sitofp i64 %33 to double
  %35 = sitofp i64 %29 to double
  %36 = fdiv double %34, %35
  %37 = fcmp olt double %36, 1.000000e-01
  br i1 %37, label %38, label %43

38:                                               ; preds = %31
  %39 = sitofp i32 %27 to double
  %40 = fmul double %36, %39
  %41 = fdiv double %40, 1.000000e-01
  %42 = fptosi double %41 to i32
  br label %43

43:                                               ; preds = %4, %26, %31, %38
  %44 = phi i32 [ %27, %26 ], [ %11, %4 ], [ %42, %38 ], [ %27, %31 ]
  %45 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #8
  store i32 -1431655766, i32* %7, align 4
  %46 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #8
  %47 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 25
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %8, align 4
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %60

52:                                               ; preds = %43
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %58 = load i32, i32* %57, align 16
  %59 = icmp ne i32 %58, 0
  br label %60

60:                                               ; preds = %52, %43, %56
  %61 = phi i1 [ false, %43 ], [ true, %52 ], [ %59, %56 ]
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %63 = load i32, i32* %62, align 16
  %64 = icmp eq i32 %63, 10
  %65 = select i1 %64, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @inter_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @inter_minq_12, i64 0, i64 0)
  %66 = icmp eq i32 %63, 8
  %67 = select i1 %66, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @inter_minq_8, i64 0, i64 0), i32* %65
  %68 = icmp eq i32 %13, 3
  %69 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %68, label %72, label %158

72:                                               ; preds = %60
  br i1 %71, label %73, label %76

73:                                               ; preds = %72
  %74 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #8
  store i32 %11, i32* %5, align 4
  %75 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #8
  store i32 %11, i32* %6, align 4
  br label %82

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %78 = load i8, i8* %77, align 4
  %79 = icmp eq i8 %78, 0
  %80 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #8
  store i32 %11, i32* %5, align 4
  %81 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #8
  store i32 %11, i32* %6, align 4
  br i1 %79, label %91, label %82

82:                                               ; preds = %73, %76
  %83 = phi i8* [ %75, %73 ], [ %81, %76 ]
  %84 = phi i8* [ %74, %73 ], [ %80, %76 ]
  %85 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %86 = load i32, i32* %85, align 4
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %88, label %153

88:                                               ; preds = %82
  call fastcc void @pick_kf_q_bound_two_pass(%struct.VP9_COMP* %0, i32* nonnull %5, i32* nonnull %6) #8
  %89 = load i32, i32* %5, align 4
  %90 = load i32, i32* %6, align 4
  br label %153

91:                                               ; preds = %76
  br i1 %51, label %92, label %153

92:                                               ; preds = %91
  %93 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %94 = load i32, i32* %93, align 16
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %153, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 159
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %102 = load i8, i8* %101, align 4
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 7, i64 %103
  br label %107

105:                                              ; preds = %96
  %106 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  br label %107

107:                                              ; preds = %105, %100
  %108 = phi i32* [ %104, %100 ], [ %106, %105 ]
  %109 = load i32, i32* %108, align 4
  %110 = select i1 %64, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_12, i64 0, i64 0)
  %111 = select i1 %66, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_8, i64 0, i64 0), i32* %110
  %112 = select i1 %64, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_12, i64 0, i64 0)
  %113 = select i1 %66, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_8, i64 0, i64 0), i32* %112
  %114 = icmp sgt i32 %109, 2000
  br i1 %114, label %115, label %119

115:                                              ; preds = %107
  %116 = sext i32 %11 to i64
  %117 = getelementptr inbounds i32, i32* %111, i64 %116
  %118 = load i32, i32* %117, align 4
  br label %137

119:                                              ; preds = %107
  %120 = icmp slt i32 %109, 400
  br i1 %120, label %121, label %125

121:                                              ; preds = %119
  %122 = sext i32 %11 to i64
  %123 = getelementptr inbounds i32, i32* %113, i64 %122
  %124 = load i32, i32* %123, align 4
  br label %137

125:                                              ; preds = %119
  %126 = sub nuw nsw i32 2000, %109
  %127 = sext i32 %11 to i64
  %128 = getelementptr inbounds i32, i32* %113, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds i32, i32* %111, i64 %127
  %131 = load i32, i32* %130, align 4
  %132 = sub nsw i32 %129, %131
  %133 = mul nsw i32 %132, %126
  %134 = add nsw i32 %133, 800
  %135 = sdiv i32 %134, 1600
  %136 = add nsw i32 %135, %131
  br label %137

137:                                              ; preds = %125, %121, %115
  %138 = phi i32 [ %118, %115 ], [ %124, %121 ], [ %136, %125 ]
  store i32 %138, i32* %5, align 4
  %139 = sext i32 %3 to i64
  %140 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 2
  br i1 %142, label %143, label %153

143:                                              ; preds = %137
  %144 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 4, i64 %139
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = add nsw i32 %146, -1
  %148 = mul nsw i32 %147, %11
  %149 = lshr i32 %146, 1
  %150 = add i32 %149, %138
  %151 = add i32 %150, %148
  %152 = sdiv i32 %151, %146
  store i32 %152, i32* %5, align 4
  br label %153

153:                                              ; preds = %82, %88, %91, %92, %137, %143
  %154 = phi i8* [ %83, %82 ], [ %83, %88 ], [ %81, %92 ], [ %81, %91 ], [ %81, %137 ], [ %81, %143 ]
  %155 = phi i8* [ %84, %82 ], [ %84, %88 ], [ %80, %92 ], [ %80, %91 ], [ %80, %137 ], [ %80, %143 ]
  %156 = phi i32 [ %11, %82 ], [ %90, %88 ], [ %11, %92 ], [ %11, %91 ], [ %11, %137 ], [ %11, %143 ]
  %157 = phi i32 [ %11, %82 ], [ %89, %88 ], [ %11, %92 ], [ %11, %91 ], [ %138, %137 ], [ %152, %143 ]
  store i32 %156, i32* %2, align 4
  store i32 %157, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %155) #8
  br label %436

158:                                              ; preds = %60
  br i1 %71, label %260, label %159

159:                                              ; preds = %158
  %160 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %161 = load i8, i8* %160, align 4
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %260

163:                                              ; preds = %159
  br i1 %61, label %164, label %253

164:                                              ; preds = %163
  %165 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %166 = load i32, i32* %165, align 8
  %167 = icmp sgt i32 %166, 1
  br i1 %167, label %168, label %172

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %170 = load i32, i32* %169, align 4
  %171 = icmp slt i32 %170, %48
  br i1 %171, label %173, label %172

172:                                              ; preds = %168, %164
  br label %173

173:                                              ; preds = %168, %172
  %174 = phi i32 [ %48, %172 ], [ %170, %168 ]
  %175 = icmp slt i32 %174, %44
  %176 = and i1 %14, %175
  %177 = select i1 %176, i32 %44, i32 %174
  %178 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 159
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %186, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %183 = load i8, i8* %182, align 4
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 7, i64 %184
  br label %188

186:                                              ; preds = %173
  %187 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  br label %188

188:                                              ; preds = %186, %181
  %189 = phi i32* [ %185, %181 ], [ %187, %186 ]
  %190 = load i32, i32* %189, align 4
  %191 = select i1 %64, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_12, i64 0, i64 0)
  %192 = select i1 %66, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_low_motion_minq_8, i64 0, i64 0), i32* %191
  %193 = select i1 %64, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_12, i64 0, i64 0)
  %194 = select i1 %66, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @arfgf_high_motion_minq_8, i64 0, i64 0), i32* %193
  %195 = icmp sgt i32 %190, 2000
  br i1 %195, label %196, label %200

196:                                              ; preds = %188
  %197 = sext i32 %177 to i64
  %198 = getelementptr inbounds i32, i32* %192, i64 %197
  %199 = load i32, i32* %198, align 4
  br label %218

200:                                              ; preds = %188
  %201 = icmp slt i32 %190, 400
  br i1 %201, label %202, label %206

202:                                              ; preds = %200
  %203 = sext i32 %177 to i64
  %204 = getelementptr inbounds i32, i32* %194, i64 %203
  %205 = load i32, i32* %204, align 4
  br label %218

206:                                              ; preds = %200
  %207 = sub nuw nsw i32 2000, %190
  %208 = sext i32 %177 to i64
  %209 = getelementptr inbounds i32, i32* %194, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds i32, i32* %192, i64 %208
  %212 = load i32, i32* %211, align 4
  %213 = sub nsw i32 %210, %212
  %214 = mul nsw i32 %213, %207
  %215 = add nsw i32 %214, 800
  %216 = sdiv i32 %215, 1600
  %217 = add nsw i32 %216, %212
  br label %218

218:                                              ; preds = %196, %202, %206
  %219 = phi i32 [ %199, %196 ], [ %205, %202 ], [ %217, %206 ]
  store i32 %219, i32* %7, align 4
  %220 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 87
  %221 = load i32, i32* %220, align 8
  switch i32 %221, label %228 [
    i32 1, label %223
    i32 -1, label %222
  ]

222:                                              ; preds = %218
  br label %223

223:                                              ; preds = %218, %222
  %224 = phi i32* [ %192, %222 ], [ %194, %218 ]
  %225 = sext i32 %177 to i64
  %226 = getelementptr inbounds i32, i32* %224, i64 %225
  %227 = load i32, i32* %226, align 4
  br label %228

228:                                              ; preds = %223, %218
  %229 = phi i32 [ %219, %218 ], [ %227, %223 ]
  %230 = sitofp i32 %219 to double
  %231 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 86
  %232 = load double, double* %231, align 8
  %233 = fmul double %232, %230
  %234 = sitofp i32 %229 to double
  %235 = fsub double 1.000000e+00, %232
  %236 = fmul double %235, %234
  %237 = fadd double %233, %236
  %238 = fptosi double %237 to i32
  store i32 %238, i32* %7, align 4
  %239 = sext i32 %3 to i64
  %240 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 1, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, 2
  br i1 %242, label %243, label %268

243:                                              ; preds = %228
  %244 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 4, i64 %239
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = add nsw i32 %246, -1
  %248 = mul nsw i32 %247, %177
  %249 = lshr i32 %246, 1
  %250 = add i32 %249, %238
  %251 = add i32 %250, %248
  %252 = sdiv i32 %251, %246
  store i32 %252, i32* %7, align 4
  br label %268

253:                                              ; preds = %163
  %254 = sext i32 %48 to i64
  %255 = getelementptr inbounds i32, i32* %67, i64 %254
  %256 = load i32, i32* %255, align 4
  %257 = icmp slt i32 %256, %44
  %258 = and i1 %14, %257
  %259 = select i1 %258, i32 %44, i32 %256
  store i32 %259, i32* %7, align 4
  br label %263

260:                                              ; preds = %159, %158
  call fastcc void @pick_kf_q_bound_two_pass(%struct.VP9_COMP* %0, i32* nonnull %7, i32* nonnull %8)
  %261 = load i32, i32* %69, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %268, label %263

263:                                              ; preds = %253, %260
  %264 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %265 = load i8, i8* %264, align 4
  %266 = icmp ne i8 %265, 0
  %267 = or i1 %61, %266
  br i1 %267, label %268, label %294

268:                                              ; preds = %243, %228, %260, %263
  %269 = sext i32 %3 to i64
  %270 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 4, i64 %269
  %271 = load i8, i8* %270, align 1
  %272 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 27
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 29
  %275 = load i32, i32* %274, align 4
  %276 = load i32, i32* %7, align 4
  %277 = add i32 %275, %273
  %278 = sub i32 %276, %277
  store i32 %278, i32* %7, align 4
  %279 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 28
  %280 = load i32, i32* %279, align 8
  %281 = sdiv i32 %280, 2
  %282 = load i32, i32* %8, align 4
  %283 = add nsw i32 %282, %281
  store i32 %283, i32* %8, align 4
  %284 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 1, i64 %269
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 2
  br i1 %286, label %287, label %315

287:                                              ; preds = %268
  %288 = zext i8 %271 to i64
  %289 = add nsw i64 %288, -1
  %290 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 31, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = icmp sgt i32 %278, %291
  %293 = select i1 %292, i32 %278, i32 %291
  store i32 %293, i32* %7, align 4
  br label %315

294:                                              ; preds = %263
  %295 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 14
  %296 = load i32, i32* %295, align 4
  %297 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 27
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 29
  %300 = load i32, i32* %299, align 4
  %301 = add nsw i32 %300, %298
  %302 = sdiv i32 %301, 2
  %303 = load i32, i32* %7, align 4
  %304 = sub nsw i32 %303, %302
  %305 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 28
  %306 = load i32, i32* %305, align 8
  %307 = load i32, i32* %8, align 4
  %308 = add nsw i32 %307, %306
  store i32 %308, i32* %8, align 4
  %309 = add nsw i32 %296, -1
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 31, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = icmp sgt i32 %304, %312
  %314 = select i1 %313, i32 %304, i32 %312
  store i32 %314, i32* %7, align 4
  br label %315

315:                                              ; preds = %268, %287, %294
  %316 = phi i32 [ %278, %268 ], [ %293, %287 ], [ %314, %294 ]
  %317 = phi i32 [ %283, %268 ], [ %283, %287 ], [ %308, %294 ]
  tail call void @vpx_clear_system_state() #8
  %318 = load i32, i32* %69, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %324, label %320

320:                                              ; preds = %315
  %321 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %322 = load i8, i8* %321, align 4
  %323 = icmp eq i8 %322, 0
  br i1 %323, label %332, label %324

324:                                              ; preds = %315, %320
  %325 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  %326 = load i32, i32* %325, align 4
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %332, label %328

328:                                              ; preds = %324
  %329 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 24
  %330 = load i32, i32* %329, align 8
  %331 = icmp slt i32 %330, 95
  br i1 %331, label %332, label %344

332:                                              ; preds = %324, %320, %328
  %333 = sext i32 %3 to i64
  %334 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 1, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [5 x double], [5 x double]* @vp9_frame_type_qdelta.rate_factor_deltas, i64 0, i64 %336
  %338 = load double, double* %337, align 8
  %339 = load i32, i32* %62, align 16
  %340 = tail call i32 @vp9_compute_qdelta_by_rate(%struct.RATE_CONTROL* %9, i32 %318, i32 %317, double %338, i32 %339) #8
  %341 = add nsw i32 %317, %340
  %342 = icmp sgt i32 %341, %316
  %343 = select i1 %342, i32 %341, i32 %316
  store i32 %343, i32* %8, align 4
  br label %344

344:                                              ; preds = %332, %328
  %345 = phi i32 [ %343, %332 ], [ %317, %328 ]
  %346 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %375, label %349

349:                                              ; preds = %344
  %350 = load i32, i32* %69, align 4
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %375, label %352

352:                                              ; preds = %349
  %353 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %354 = load i8, i8* %353, align 4
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %356, label %375

356:                                              ; preds = %352
  %357 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %358 = load i32, i32* %357, align 16
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %375

360:                                              ; preds = %356
  %361 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %362 = load i32, i32* %361, align 4
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %367, label %364

364:                                              ; preds = %360
  %365 = load i32, i32* %49, align 4
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %375, label %367

367:                                              ; preds = %364, %360
  %368 = load i32, i32* %62, align 16
  %369 = tail call i32 @vp9_compute_qdelta_by_rate(%struct.RATE_CONTROL* %9, i32 %350, i32 %316, double 2.000000e+00, i32 %368)
  %370 = add nsw i32 %369, %316
  %371 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %372 = load i32, i32* %371, align 4
  %373 = icmp sgt i32 %370, %372
  %374 = select i1 %373, i32 %370, i32 %372
  store i32 %374, i32* %7, align 4
  br label %375

375:                                              ; preds = %364, %349, %352, %356, %344, %367
  %376 = phi i32 [ %316, %364 ], [ %316, %349 ], [ %316, %352 ], [ %316, %356 ], [ %316, %344 ], [ %374, %367 ]
  %377 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %378 = load i32, i32* %377, align 4
  %379 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %380 = load i32, i32* %379, align 8
  %381 = icmp slt i32 %376, %378
  %382 = icmp sgt i32 %376, %380
  %383 = select i1 %382, i32 %380, i32 %376
  %384 = select i1 %381, i32 %378, i32 %383
  store i32 %384, i32* %7, align 4
  %385 = icmp slt i32 %345, %384
  %386 = icmp sgt i32 %345, %380
  %387 = select i1 %386, i32 %380, i32 %345
  %388 = select i1 %385, i32 %384, i32 %387
  store i32 %388, i32* %8, align 4
  %389 = load i32, i32* %69, align 4
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %395, label %391

391:                                              ; preds = %375
  %392 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %393 = load i8, i8* %392, align 4
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %422, label %395

395:                                              ; preds = %375, %391
  %396 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  %397 = load i32, i32* %396, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %413, label %399

399:                                              ; preds = %395
  %400 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 24
  %401 = load i32, i32* %400, align 8
  %402 = icmp sgt i32 %401, 94
  br i1 %402, label %403, label %410

403:                                              ; preds = %399
  %404 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 6
  %405 = load i32, i32* %404, align 4
  %406 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 5
  %407 = load i32, i32* %406, align 8
  %408 = icmp slt i32 %405, %407
  %409 = select i1 %408, i32 %405, i32 %407
  br label %433

410:                                              ; preds = %399
  %411 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 5
  %412 = load i32, i32* %411, align 8
  br label %433

413:                                              ; preds = %395
  br i1 %390, label %433, label %414

414:                                              ; preds = %413
  %415 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %416 = load i8, i8* %415, align 4
  %417 = icmp eq i8 %416, 0
  br i1 %417, label %422, label %418

418:                                              ; preds = %414
  %419 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  %420 = load i32, i32* %419, align 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %433, label %422

422:                                              ; preds = %391, %418, %414
  %423 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  %424 = load i32, i32* %423, align 4
  %425 = tail call i32 @vp9_rc_regulate_q(%struct.VP9_COMP* %0, i32 %424, i32 %384, i32 %388)
  %426 = icmp sgt i32 %425, %388
  br i1 %426, label %427, label %433

427:                                              ; preds = %422
  %428 = load i32, i32* %423, align 4
  %429 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %430 = load i32, i32* %429, align 8
  %431 = icmp slt i32 %428, %430
  br i1 %431, label %433, label %432

432:                                              ; preds = %427
  store i32 %425, i32* %8, align 4
  br label %433

433:                                              ; preds = %413, %418, %427, %432, %422, %403, %410
  %434 = phi i32 [ %388, %403 ], [ %388, %410 ], [ %425, %432 ], [ %388, %422 ], [ %388, %427 ], [ %388, %418 ], [ %388, %413 ]
  %435 = phi i32 [ %409, %403 ], [ %412, %410 ], [ %425, %432 ], [ %425, %422 ], [ %388, %427 ], [ %384, %418 ], [ %384, %413 ]
  store i32 %434, i32* %2, align 4
  store i32 %384, i32* %1, align 4
  br label %436

436:                                              ; preds = %433, %153
  %437 = phi i32 [ %157, %153 ], [ %435, %433 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #8
  ret i32 %437
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_configure_buffer_updates(%struct.VP9_COMP*, i32) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 26
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 90
  store i32 0, i32* %5, align 4
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 2, i64 %6
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %39 [
    i32 0, label %9
    i32 1, label %13
    i32 2, label %17
    i32 4, label %21
    i32 5, label %30
    i32 6, label %34
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 1, i32* %12, align 16
  br label %43

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %16, align 16
  br label %43

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %20, align 16
  br label %43

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 1, i32* %23, align 4
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %24, align 16
  store i32 1, i32* %3, align 4
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 88
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %43, label %28

28:                                               ; preds = %21
  store i32 1, i32* %5, align 4
  store i32 0, i32* %23, align 4
  store i32 1, i32* %4, align 8
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 66
  store i32 0, i32* %29, align 16
  br label %43

30:                                               ; preds = %2
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 1, i32* %31, align 8
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %33, align 16
  store i32 1, i32* %3, align 4
  br label %43

34:                                               ; preds = %2
  %35 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %37, align 16
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 8
  %38 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 66
  store i32 0, i32* %38, align 16
  br label %43

39:                                               ; preds = %2
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 1, i32* %42, align 16
  br label %43

43:                                               ; preds = %21, %28, %39, %34, %30, %17, %13, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_estimate_qp_gop(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 13
  %5 = load i32, i32* %4, align 4
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 -1431655766, i32* %2, align 4
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %3, align 4
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 66
  %12 = load i32, i32* %11, align 16
  %13 = icmp slt i32 %5, 1
  br i1 %13, label %76, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 3
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 26
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 90
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 88
  %27 = add nuw i32 %5, 1
  %28 = zext i32 %27 to i64
  br label %29

29:                                               ; preds = %69, %14
  %30 = phi i64 [ %74, %69 ], [ 1, %14 ]
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 6, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = trunc i64 %30 to i32
  %34 = trunc i64 %30 to i8
  store i8 %34, i8* %8, align 4
  store i32 %32, i32* %15, align 4
  %35 = load i32, i32* %16, align 4
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %47

37:                                               ; preds = %29
  %38 = load i32, i32* %17, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %37
  %41 = sitofp i32 %32 to double
  %42 = zext i32 %38 to i64
  %43 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %42
  %44 = load double, double* %43, align 8
  %45 = fmul double %44, %41
  %46 = fptosi double %45 to i32
  store i32 %46, i32* %15, align 4
  br label %47

47:                                               ; preds = %29, %37, %40
  %48 = phi i32 [ %32, %37 ], [ %46, %40 ], [ %32, %29 ]
  %49 = sext i32 %48 to i64
  %50 = shl nsw i64 %49, 12
  %51 = load i32, i32* %18, align 16
  %52 = load i32, i32* %19, align 4
  %53 = mul nsw i32 %52, %51
  %54 = sext i32 %53 to i64
  %55 = sdiv i64 %50, %54
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %20, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %21, align 8
  store i32 0, i32* %22, align 4
  %57 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 2, i64 %30
  %58 = load i32, i32* %57, align 4
  switch i32 %58, label %68 [
    i32 0, label %59
    i32 1, label %60
    i32 2, label %61
    i32 4, label %62
    i32 5, label %66
    i32 6, label %67
  ]

59:                                               ; preds = %47
  store i32 1, i32* %23, align 8
  store i32 1, i32* %24, align 4
  store i32 1, i32* %25, align 16
  br label %69

60:                                               ; preds = %47
  store i32 1, i32* %23, align 8
  store i32 0, i32* %24, align 4
  store i32 0, i32* %25, align 16
  br label %69

61:                                               ; preds = %47
  store i32 1, i32* %23, align 8
  store i32 1, i32* %24, align 4
  store i32 0, i32* %25, align 16
  br label %69

62:                                               ; preds = %47
  store i32 0, i32* %23, align 8
  store i32 1, i32* %24, align 4
  store i32 0, i32* %25, align 16
  store i32 1, i32* %10, align 4
  %63 = load i32, i32* %26, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %62
  store i32 1, i32* %22, align 4
  store i32 0, i32* %24, align 4
  store i32 1, i32* %21, align 8
  store i32 0, i32* %11, align 16
  br label %69

66:                                               ; preds = %47
  store i32 1, i32* %23, align 8
  store i32 0, i32* %24, align 4
  store i32 0, i32* %25, align 16
  store i32 1, i32* %10, align 4
  br label %69

67:                                               ; preds = %47
  store i32 0, i32* %23, align 8
  store i32 0, i32* %24, align 4
  store i32 0, i32* %25, align 16
  store i32 1, i32* %10, align 4
  store i32 1, i32* %21, align 8
  store i32 0, i32* %11, align 16
  br label %69

68:                                               ; preds = %47
  store i32 0, i32* %23, align 8
  store i32 0, i32* %24, align 4
  store i32 1, i32* %25, align 16
  br label %69

69:                                               ; preds = %59, %60, %61, %62, %65, %66, %67, %68
  %70 = call fastcc i32 @rc_pick_q_and_bounds_two_pass(%struct.VP9_COMP* %0, i32* nonnull %2, i32* nonnull %3, i32 %33)
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 20, i64 %30, i32 7
  %72 = icmp sgt i32 %70, 1
  %73 = select i1 %72, i32 %70, i32 1
  store i32 %73, i32* %71, align 4
  %74 = add nuw nsw i64 %30, 1
  %75 = icmp eq i64 %74, %28
  br i1 %75, label %76, label %29

76:                                               ; preds = %69, %1
  store i8 %9, i8* %8, align 4
  store i32 %12, i32* %11, align 16
  store i32 0, i32* %10, align 4
  %77 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 26
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 90
  store i32 0, i32* %78, align 4
  %79 = zext i8 %9 to i64
  %80 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 2, i64 %79
  %81 = load i32, i32* %80, align 4
  switch i32 %81, label %110 [
    i32 0, label %82
    i32 1, label %86
    i32 2, label %90
    i32 4, label %94
    i32 5, label %102
    i32 6, label %106
  ]

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 1, i32* %83, align 8
  %84 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 1, i32* %84, align 4
  %85 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 1, i32* %85, align 16
  br label %114

86:                                               ; preds = %76
  %87 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 1, i32* %87, align 8
  %88 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 0, i32* %88, align 4
  %89 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %89, align 16
  br label %114

90:                                               ; preds = %76
  %91 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 1, i32* %91, align 8
  %92 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 1, i32* %92, align 4
  %93 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %93, align 16
  br label %114

94:                                               ; preds = %76
  %95 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 0, i32* %95, align 8
  %96 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 1, i32* %96, align 4
  %97 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %97, align 16
  store i32 1, i32* %10, align 4
  %98 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 88
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %114, label %101

101:                                              ; preds = %94
  store i32 1, i32* %78, align 4
  store i32 0, i32* %96, align 4
  store i32 1, i32* %77, align 8
  store i32 0, i32* %11, align 16
  br label %114

102:                                              ; preds = %76
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 1, i32* %103, align 8
  %104 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 0, i32* %104, align 4
  %105 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %105, align 16
  store i32 1, i32* %10, align 4
  br label %114

106:                                              ; preds = %76
  %107 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 0, i32* %107, align 8
  %108 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 0, i32* %108, align 4
  %109 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 0, i32* %109, align 16
  store i32 1, i32* %10, align 4
  store i32 1, i32* %77, align 8
  store i32 0, i32* %11, align 16
  br label %114

110:                                              ; preds = %76
  %111 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  store i32 0, i32* %111, align 8
  %112 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 0, i32* %112, align 4
  %113 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  store i32 1, i32* %113, align 16
  br label %114

114:                                              ; preds = %82, %86, %90, %94, %101, %102, %106, %110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_rc_set_frame_target(%struct.VP9_COMP* nocapture, i32) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = sitofp i32 %1 to double
  %13 = zext i32 %9 to i64
  %14 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %13
  %15 = load double, double* %14, align 8
  %16 = fmul double %15, %12
  %17 = fptosi double %16 to i32
  store i32 %17, i32* %3, align 4
  br label %18

18:                                               ; preds = %7, %11, %2
  %19 = phi i32 [ %1, %7 ], [ %17, %11 ], [ %1, %2 ]
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 12
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %23 = load i32, i32* %22, align 16
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = mul nsw i32 %25, %23
  %27 = sext i32 %26 to i64
  %28 = sdiv i64 %21, %27
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 3
  store i32 %29, i32* %30, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_rc_compute_frame_size_bounds(%struct.VP9_COMP* nocapture readonly, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #4 {
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  store i32 0, i32* %2, align 4
  br label %33

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 64
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = sext i32 %1 to i64
  %14 = mul nsw i64 %12, %13
  %15 = sdiv i64 %14, 100
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 65
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = mul nsw i64 %19, %13
  %21 = sdiv i64 %20, 100
  %22 = trunc i64 %21 to i32
  %23 = sub nsw i32 %1, %16
  %24 = icmp sgt i32 %23, 100
  %25 = select i1 %24, i32 %23, i32 100
  %26 = add nsw i32 %25, -100
  store i32 %26, i32* %2, align 4
  %27 = add i32 %1, 100
  %28 = add i32 %27, %22
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %28, %30
  %32 = select i1 %31, i32 %28, i32 %30
  br label %33

33:                                               ; preds = %9, %8
  %34 = phi i32 [ 2147483647, %8 ], [ %32, %9 ]
  store i32 %34, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_compute_frame_low_motion(%struct.VP9_COMP* nocapture) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 33
  %3 = load i32, i32* %2, align 16
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 35
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %59

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 53
  %9 = load %struct.MODE_INFO**, %struct.MODE_INFO*** %8, align 8
  %10 = icmp sgt i32 %5, 0
  %11 = add i32 %5, -1
  %12 = zext i32 %11 to i64
  %13 = add nuw nsw i64 %12, 1
  br label %14

14:                                               ; preds = %53, %7
  %15 = phi i32 [ 0, %7 ], [ %57, %53 ]
  %16 = phi i32 [ 0, %7 ], [ %55, %53 ]
  %17 = phi %struct.MODE_INFO** [ %9, %7 ], [ %56, %53 ]
  br i1 %10, label %18, label %53

18:                                               ; preds = %14, %46
  %19 = phi i32 [ %49, %46 ], [ 0, %14 ]
  %20 = phi i32 [ %47, %46 ], [ %16, %14 ]
  %21 = phi %struct.MODE_INFO** [ %48, %46 ], [ %17, %14 ]
  %22 = load %struct.MODE_INFO*, %struct.MODE_INFO** %21, align 8
  %23 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %22, i64 0, i32 8, i64 0
  %24 = load i8, i8* %23, align 4
  %25 = icmp eq i8 %24, 1
  br i1 %25, label %26, label %46

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %22, i64 0, i32 9, i64 0
  %28 = bitcast %union.int_mv* %27 to i16*
  %29 = load i16, i16* %28, align 4
  %30 = sext i16 %29 to i32
  %31 = icmp slt i32 %30, 0
  %32 = sub nsw i32 0, %30
  %33 = select i1 %31, i32 %32, i32 %30
  %34 = icmp slt i32 %33, 16
  br i1 %34, label %35, label %46

35:                                               ; preds = %26
  %36 = bitcast %union.int_mv* %27 to %struct.mv*
  %37 = getelementptr inbounds %struct.mv, %struct.mv* %36, i64 0, i32 1
  %38 = load i16, i16* %37, align 2
  %39 = sext i16 %38 to i32
  %40 = icmp slt i32 %39, 0
  %41 = sub nsw i32 0, %39
  %42 = select i1 %40, i32 %41, i32 %39
  %43 = icmp slt i32 %42, 16
  %44 = zext i1 %43 to i32
  %45 = add nsw i32 %20, %44
  br label %46

46:                                               ; preds = %35, %26, %18
  %47 = phi i32 [ %20, %26 ], [ %20, %18 ], [ %45, %35 ]
  %48 = getelementptr inbounds %struct.MODE_INFO*, %struct.MODE_INFO** %21, i64 1
  %49 = add nuw nsw i32 %19, 1
  %50 = icmp eq i32 %49, %5
  br i1 %50, label %51, label %18

51:                                               ; preds = %46
  %52 = getelementptr %struct.MODE_INFO*, %struct.MODE_INFO** %17, i64 %13
  br label %53

53:                                               ; preds = %51, %14
  %54 = phi %struct.MODE_INFO** [ %17, %14 ], [ %52, %51 ]
  %55 = phi i32 [ %16, %14 ], [ %47, %51 ]
  %56 = getelementptr inbounds %struct.MODE_INFO*, %struct.MODE_INFO** %54, i64 8
  %57 = add nuw nsw i32 %15, 1
  %58 = icmp eq i32 %57, %3
  br i1 %58, label %59, label %14

59:                                               ; preds = %53, %1
  %60 = phi i32 [ 0, %1 ], [ %55, %53 ]
  %61 = mul nsw i32 %60, 100
  %62 = mul nsw i32 %5, %3
  %63 = sdiv i32 %61, %62
  %64 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 75
  %65 = load i32, i32* %64, align 8
  %66 = mul nsw i32 %65, 3
  %67 = add nsw i32 %66, %63
  %68 = ashr i32 %67, 2
  store i32 %68, i32* %64, align 8
  %69 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %102, label %72

72:                                               ; preds = %59
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, -1
  %78 = icmp eq i32 %74, %77
  %79 = icmp sgt i32 %76, 1
  %80 = and i1 %78, %79
  br i1 %80, label %81, label %102

81:                                               ; preds = %72
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %83 to i64
  %87 = sext i32 %85 to i64
  %88 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %87, i32 0, i32 75
  store i32 %68, i32* %88, align 8
  %89 = load i32, i32* %75, align 8
  %90 = icmp sgt i32 %89, 2
  br i1 %90, label %91, label %102

91:                                               ; preds = %81, %91
  %92 = phi i64 [ %97, %91 ], [ 1, %81 ]
  %93 = load i32, i32* %64, align 8
  %94 = mul nsw i64 %92, %86
  %95 = add nsw i64 %94, %87
  %96 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %95, i32 0, i32 75
  store i32 %93, i32* %96, align 8
  %97 = add nuw nsw i64 %92, 1
  %98 = load i32, i32* %75, align 8
  %99 = add nsw i32 %98, -1
  %100 = sext i32 %99 to i64
  %101 = icmp slt i64 %97, %100
  br i1 %101, label %91, label %102

102:                                              ; preds = %91, %81, %59, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_rc_postencode_update(%struct.VP9_COMP*, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 38
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 0
  %7 = load i8, i8* %6, align 4
  %8 = zext i8 %7 to i64
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 32, i32 4, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = trunc i64 %1 to i32
  %12 = shl i32 %11, 3
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 2
  store i32 %12, i32* %13, align 8
  tail call void @vp9_rc_update_rate_correction_factors(%struct.VP9_COMP* %0)
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %77, label %21

21:                                               ; preds = %2, %17
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 0
  store i32 %5, i32* %22, align 8
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 0
  %24 = load i32, i32* %23, align 8
  %25 = mul nsw i32 %24, 3
  %26 = add i32 %5, 2
  %27 = add i32 %26, %25
  %28 = ashr i32 %27, 2
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %21
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  br label %148

34:                                               ; preds = %21
  %35 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  br label %146

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SVC, %struct.SVC* %3, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = mul nsw i32 %42, %36
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %44, i32 0, i32 4, i64 0
  store i32 %5, i32* %45, align 8
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %44, i32 0, i32 31, i64 0
  store i32 %28, i32* %46, align 8
  %47 = icmp eq i32 %36, 1
  br i1 %47, label %142, label %48

48:                                               ; preds = %40
  %49 = add i32 %36, -1
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %36, 2
  br i1 %51, label %130, label %52

52:                                               ; preds = %48
  %53 = sub i32 %49, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i32 [ 1, %52 ], [ %74, %54 ]
  %56 = phi i32 [ %53, %52 ], [ %75, %54 ]
  %57 = load i32, i32* %22, align 8
  %58 = load i32, i32* %23, align 8
  %59 = load i32, i32* %41, align 8
  %60 = mul nsw i32 %59, %36
  %61 = add nsw i32 %60, %55
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %62, i32 0, i32 4, i64 0
  store i32 %57, i32* %63, align 8
  %64 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %62, i32 0, i32 31, i64 0
  store i32 %58, i32* %64, align 8
  %65 = add nuw nsw i32 %55, 1
  %66 = load i32, i32* %22, align 8
  %67 = load i32, i32* %23, align 8
  %68 = load i32, i32* %41, align 8
  %69 = mul nsw i32 %68, %36
  %70 = add nsw i32 %69, %65
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %71, i32 0, i32 4, i64 0
  store i32 %66, i32* %72, align 8
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %71, i32 0, i32 31, i64 0
  store i32 %67, i32* %73, align 8
  %74 = add nuw nsw i32 %55, 2
  %75 = add i32 %56, -2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %130, label %54

77:                                               ; preds = %17
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %97, label %85

85:                                               ; preds = %77, %81
  %86 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %142

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %142

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %95 = load i32, i32* %94, align 16
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %142

97:                                               ; preds = %93, %81
  %98 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 1
  store i32 %5, i32* %98, align 4
  %99 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %100 = load i32, i32* %99, align 4
  %101 = mul nsw i32 %100, 3
  %102 = add i32 %5, 2
  %103 = add i32 %102, %101
  %104 = ashr i32 %103, 2
  store i32 %104, i32* %99, align 4
  %105 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 30
  %106 = load i32, i32* %105, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %109 = load i32, i32* %108, align 16
  %110 = icmp eq i32 %109, 10
  %111 = select i1 %110, double 6.250000e-02, double 1.562500e-02
  %112 = icmp eq i32 %109, 8
  %113 = select i1 %112, double 2.500000e-01, double %111
  %114 = tail call signext i16 @vp9_ac_quant(i32 %5, i32 0, i32 %109) #8
  %115 = sitofp i16 %114 to double
  %116 = fmul double %113, %115
  %117 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 32
  %118 = load double, double* %117, align 8
  %119 = fadd double %116, %118
  store double %119, double* %117, align 8
  %120 = load i32, i32* %105, align 4
  %121 = sitofp i32 %120 to double
  %122 = fdiv double %119, %121
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 33
  store double %122, double* %123, align 8
  %124 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 29
  %125 = load i32, i32* %124, align 8
  %126 = add nsw i32 %125, %5
  store i32 %126, i32* %124, align 8
  %127 = sdiv i32 %126, %120
  %128 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 28
  store i32 %127, i32* %128, align 4
  %129 = load i32, i32* %78, align 4
  br label %142

130:                                              ; preds = %54, %48
  %131 = phi i32 [ 1, %48 ], [ %74, %54 ]
  %132 = icmp eq i32 %50, 0
  br i1 %132, label %142, label %133

133:                                              ; preds = %130
  %134 = load i32, i32* %22, align 8
  %135 = load i32, i32* %23, align 8
  %136 = load i32, i32* %41, align 8
  %137 = mul nsw i32 %136, %36
  %138 = add nsw i32 %137, %131
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %139, i32 0, i32 4, i64 0
  store i32 %134, i32* %140, align 8
  %141 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %139, i32 0, i32 31, i64 0
  store i32 %135, i32* %141, align 8
  br label %142

142:                                              ; preds = %133, %130, %40, %93, %89, %85, %97
  %143 = phi i32 [ %79, %93 ], [ %79, %89 ], [ %79, %85 ], [ %129, %97 ], [ %30, %40 ], [ %30, %130 ], [ %30, %133 ]
  %144 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %145 = icmp eq i32 %143, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %38, %142
  %147 = phi i32* [ %39, %38 ], [ %144, %142 ]
  tail call void @vp9_svc_adjust_avg_frame_qindex(%struct.VP9_COMP* %0) #8
  br label %148

148:                                              ; preds = %32, %142, %146
  %149 = phi i32* [ %33, %32 ], [ %144, %142 ], [ %147, %146 ]
  %150 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 5
  %151 = load i32, i32* %150, align 8
  %152 = icmp slt i32 %5, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = load i32, i32* %14, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 17
  %158 = load i32, i32* %157, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %173

160:                                              ; preds = %156
  %161 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %162 = load i32, i32* %161, align 16
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %172

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %173, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %168, %160, %153, %148
  store i32 %5, i32* %150, align 8
  br label %173

173:                                              ; preds = %168, %164, %156, %172
  %174 = zext i8 %10 to i64
  %175 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 31, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = icmp slt i32 %5, %176
  %178 = load i32, i32* %14, align 4
  br i1 %177, label %199, label %179

179:                                              ; preds = %173
  %180 = icmp eq i32 %178, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  store i32 %5, i32* %175, align 4
  br label %205

182:                                              ; preds = %179
  %183 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 17
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %201

186:                                              ; preds = %182
  %187 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %188 = load i32, i32* %187, align 16
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %198

190:                                              ; preds = %186
  %191 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %201, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %194, %186
  store i32 %5, i32* %175, align 4
  br label %201

199:                                              ; preds = %173
  store i32 %5, i32* %175, align 4
  %200 = icmp eq i32 %178, 0
  br i1 %200, label %205, label %201

201:                                              ; preds = %182, %190, %194, %198, %199
  %202 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %203 = load i8, i8* %202, align 4
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %208, label %205

205:                                              ; preds = %181, %199, %201
  %206 = phi i32 [ 0, %199 ], [ %178, %201 ], [ 0, %181 ]
  %207 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 6
  store i32 %5, i32* %207, align 4
  br label %208

208:                                              ; preds = %201, %205
  %209 = phi i32 [ %178, %201 ], [ %206, %205 ]
  %210 = load i32, i32* %13, align 8
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  %213 = load i64, i64* %212, align 8
  %214 = sub nsw i64 %213, %211
  %215 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 52
  %216 = load i64, i64* %215, align 8
  %217 = icmp slt i64 %214, %216
  %218 = select i1 %217, i64 %214, i64 %216
  store i64 %218, i64* %212, align 8
  %219 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 62
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %222, label %230

222:                                              ; preds = %208
  %223 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 26
  %224 = load i32, i32* %223, align 16
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %230

226:                                              ; preds = %222
  %227 = sub nsw i64 0, %216
  %228 = icmp sgt i64 %218, %227
  %229 = select i1 %228, i64 %218, i64 %227
  store i64 %229, i64* %212, align 8
  br label %230

230:                                              ; preds = %226, %222, %208
  %231 = phi i64 [ %229, %226 ], [ %218, %222 ], [ %218, %208 ]
  %232 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  store i64 %231, i64* %232, align 8
  %233 = load i32, i32* %149, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %268, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %268

239:                                              ; preds = %235
  %240 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = add nsw i32 %241, 1
  %243 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %244 = load i32, i32* %243, align 4
  %245 = icmp slt i32 %242, %244
  br i1 %245, label %246, label %268

246:                                              ; preds = %239
  %247 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi i32 [ %244, %246 ], [ %264, %248 ]
  %250 = phi i32 [ %242, %246 ], [ %263, %248 ]
  %251 = load i32, i32* %247, align 8
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i32 %252, %250
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %254, i32 0, i32 35
  %256 = load i64, i64* %255, align 8
  %257 = sub nsw i64 %256, %211
  %258 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %254, i32 0, i32 52
  %259 = load i64, i64* %258, align 8
  %260 = icmp slt i64 %257, %259
  %261 = select i1 %260, i64 %257, i64 %259
  store i64 %261, i64* %255, align 8
  %262 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %254, i32 0, i32 34
  store i64 %261, i64* %262, align 8
  %263 = add nsw i32 %250, 1
  %264 = load i32, i32* %243, align 4
  %265 = icmp slt i32 %263, %264
  br i1 %265, label %248, label %266

266:                                              ; preds = %248
  %267 = load i32, i32* %14, align 4
  br label %268

268:                                              ; preds = %266, %230, %235, %239
  %269 = phi i32 [ %267, %266 ], [ %209, %230 ], [ %209, %235 ], [ %209, %239 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %313, label %271

271:                                              ; preds = %268
  %272 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %273 = load i8, i8* %272, align 4
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %275, label %313

275:                                              ; preds = %271
  %276 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 40
  %277 = load i32, i32* %276, align 8
  %278 = sext i32 %277 to i64
  %279 = mul nsw i64 %278, 3
  %280 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = sext i32 %281 to i64
  %283 = add nsw i64 %282, 2
  %284 = add nsw i64 %283, %279
  %285 = lshr i64 %284, 2
  %286 = trunc i64 %285 to i32
  store i32 %286, i32* %276, align 8
  %287 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 41
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = mul nsw i64 %289, 3
  %291 = load i32, i32* %13, align 8
  %292 = sext i32 %291 to i64
  %293 = add nsw i64 %292, 2
  %294 = add nsw i64 %293, %290
  %295 = lshr i64 %294, 2
  %296 = trunc i64 %295 to i32
  store i32 %296, i32* %287, align 4
  %297 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 42
  %298 = load i32, i32* %297, align 8
  %299 = sext i32 %298 to i64
  %300 = mul nsw i64 %299, 31
  %301 = add nsw i64 %282, 16
  %302 = add nsw i64 %301, %300
  %303 = lshr i64 %302, 5
  %304 = trunc i64 %303 to i32
  store i32 %304, i32* %297, align 8
  %305 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 43
  %306 = load i32, i32* %305, align 4
  %307 = sext i32 %306 to i64
  %308 = mul nsw i64 %307, 31
  %309 = add nsw i64 %292, 16
  %310 = add nsw i64 %309, %308
  %311 = lshr i64 %310, 5
  %312 = trunc i64 %311 to i32
  store i32 %312, i32* %305, align 4
  br label %313

313:                                              ; preds = %268, %271, %275
  %314 = load i32, i32* %13, align 8
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 45
  %317 = load i64, i64* %316, align 8
  %318 = add nsw i64 %317, %315
  store i64 %318, i64* %316, align 8
  %319 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 24
  %320 = load i32, i32* %319, align 16
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %324 = load i32, i32* %323, align 8
  br label %325

325:                                              ; preds = %313, %322
  %326 = phi i32 [ %324, %322 ], [ 0, %313 ]
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 46
  %329 = load i64, i64* %328, align 8
  %330 = add nsw i64 %329, %327
  store i64 %330, i64* %328, align 8
  %331 = sub nsw i64 %318, %330
  %332 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 47
  store i64 %331, i64* %332, align 8
  %333 = load i32, i32* %149, align 4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %417

335:                                              ; preds = %325
  %336 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 15
  %337 = load i32, i32* %336, align 8
  %338 = icmp eq i32 %337, 2
  br i1 %338, label %339, label %343

339:                                              ; preds = %335
  %340 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %364, label %343

343:                                              ; preds = %339, %335
  %344 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 19
  %345 = load i32, i32* %344, align 8
  %346 = icmp sgt i32 %345, 3
  br i1 %346, label %347, label %364

347:                                              ; preds = %343
  %348 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 47
  %349 = load i32, i32* %348, align 16
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %364, label %351

351:                                              ; preds = %347
  %352 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %353 = load i32, i32* %352, align 16
  %354 = icmp eq i32 %353, 0
  %355 = or i1 %270, %354
  br i1 %355, label %364, label %356

356:                                              ; preds = %351
  %357 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %358 = load i8, i8* %357, align 4
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %360, label %364

360:                                              ; preds = %356
  %361 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 11
  store i32 0, i32* %361, align 8
  %362 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 22
  store i32 0, i32* %362, align 4
  %363 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 23
  store i32 1, i32* %363, align 8
  br label %494

364:                                              ; preds = %351, %339, %343, %356, %347
  %365 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %391, label %368

368:                                              ; preds = %364
  %369 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 11
  store i32 0, i32* %369, align 8
  %370 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %371 = load i32, i32* %370, align 4
  %372 = icmp eq i32 %371, 2
  %373 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 22
  %374 = load i32, i32* %373, align 4
  %375 = icmp ne i32 %374, 0
  br i1 %372, label %376, label %382

376:                                              ; preds = %368
  br i1 %375, label %385, label %377

377:                                              ; preds = %376
  %378 = load i8, i8* %6, align 4
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %380, label %385

380:                                              ; preds = %377
  %381 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 23
  store i32 0, i32* %381, align 8
  br label %385

382:                                              ; preds = %368
  br i1 %375, label %385, label %383

383:                                              ; preds = %382
  %384 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 23
  store i32 0, i32* %384, align 8
  br label %385

385:                                              ; preds = %383, %382, %380, %377, %376
  %386 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  %387 = load i32, i32* %386, align 4
  %388 = icmp sgt i32 %387, 0
  br i1 %388, label %389, label %487

389:                                              ; preds = %385
  %390 = add nsw i32 %387, -1
  store i32 %390, i32* %386, align 4
  br label %487

391:                                              ; preds = %364
  %392 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %393 = load i32, i32* %392, align 16
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %487

395:                                              ; preds = %391
  %396 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  %397 = load i32, i32* %396, align 4
  %398 = icmp sgt i32 %397, 0
  br i1 %398, label %399, label %401

399:                                              ; preds = %395
  %400 = add nsw i32 %397, -1
  store i32 %400, i32* %396, align 4
  br label %401

401:                                              ; preds = %399, %395
  %402 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 11
  %403 = load i32, i32* %402, align 8
  %404 = add nsw i32 %403, 1
  store i32 %404, i32* %402, align 8
  %405 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 90
  %406 = load i32, i32* %405, align 4
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %487, label %408

408:                                              ; preds = %401
  store i32 0, i32* %402, align 8
  %409 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 22
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %487

412:                                              ; preds = %408
  %413 = load i8, i8* %6, align 4
  %414 = icmp eq i8 %413, 0
  br i1 %414, label %415, label %487

415:                                              ; preds = %412
  %416 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 23
  store i32 0, i32* %416, align 8
  br label %487

417:                                              ; preds = %325
  %418 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 20
  %419 = load i32, i32* %418, align 4
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %487, label %421

421:                                              ; preds = %417
  %422 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %487

425:                                              ; preds = %421
  %426 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %427 = load i32, i32* %426, align 4
  %428 = icmp eq i32 %427, 0
  %429 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 11
  br i1 %428, label %430, label %433

430:                                              ; preds = %425
  %431 = load i32, i32* %429, align 8
  %432 = add nsw i32 %431, 1
  br label %433

433:                                              ; preds = %425, %430
  %434 = phi i32 [ %432, %430 ], [ 0, %425 ]
  store i32 %434, i32* %429, align 8
  %435 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  %436 = load i32, i32* %435, align 4
  %437 = icmp sgt i32 %436, 0
  br i1 %437, label %438, label %440

438:                                              ; preds = %433
  %439 = add nsw i32 %436, -1
  store i32 %439, i32* %435, align 4
  br label %440

440:                                              ; preds = %438, %433
  %441 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %442 = load i32, i32* %441, align 4
  %443 = icmp sgt i32 %442, 1
  br i1 %443, label %444, label %487

444:                                              ; preds = %440
  %445 = getelementptr inbounds %struct.SVC, %struct.SVC* %3, i64 0, i32 0
  %446 = load i32, i32* %445, align 8
  %447 = mul nsw i32 %446, %442
  %448 = add nsw i32 %447, 1
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %449, i32 0, i32 11
  store i32 %434, i32* %450, align 8
  %451 = icmp eq i32 %442, 2
  br i1 %451, label %487, label %452

452:                                              ; preds = %444
  %453 = add i32 %442, -2
  %454 = and i32 %453, 1
  %455 = icmp eq i32 %442, 3
  br i1 %455, label %477, label %456

456:                                              ; preds = %452
  %457 = sub i32 %453, %454
  br label %458

458:                                              ; preds = %458, %456
  %459 = phi i32 [ 2, %456 ], [ %474, %458 ]
  %460 = phi i32 [ %457, %456 ], [ %475, %458 ]
  %461 = load i32, i32* %429, align 8
  %462 = load i32, i32* %445, align 8
  %463 = mul nsw i32 %462, %442
  %464 = add nsw i32 %463, %459
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %465, i32 0, i32 11
  store i32 %461, i32* %466, align 8
  %467 = or i32 %459, 1
  %468 = load i32, i32* %429, align 8
  %469 = load i32, i32* %445, align 8
  %470 = mul nsw i32 %469, %442
  %471 = add nsw i32 %470, %467
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %472, i32 0, i32 11
  store i32 %468, i32* %473, align 8
  %474 = add nuw nsw i32 %459, 2
  %475 = add i32 %460, -2
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %458

477:                                              ; preds = %458, %452
  %478 = phi i32 [ 2, %452 ], [ %474, %458 ]
  %479 = icmp eq i32 %454, 0
  br i1 %479, label %487, label %480

480:                                              ; preds = %477
  %481 = load i32, i32* %429, align 8
  %482 = load i32, i32* %445, align 8
  %483 = mul nsw i32 %482, %442
  %484 = add nsw i32 %483, %478
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %485, i32 0, i32 11
  store i32 %481, i32* %486, align 8
  br label %487

487:                                              ; preds = %480, %477, %444, %440, %385, %389, %391, %401, %408, %412, %415, %417, %421
  br i1 %270, label %492, label %488

488:                                              ; preds = %487
  %489 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %490 = load i8, i8* %489, align 4
  %491 = icmp eq i8 %490, 0
  br i1 %491, label %494, label %492

492:                                              ; preds = %487, %488
  %493 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  store i32 0, i32* %493, align 8
  br label %494

494:                                              ; preds = %360, %488, %492
  %495 = load i32, i32* %319, align 16
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %504, label %497

497:                                              ; preds = %494
  %498 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %499 = load i32, i32* %498, align 8
  %500 = add nsw i32 %499, 1
  store i32 %500, i32* %498, align 8
  %501 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %502 = load i32, i32* %501, align 4
  %503 = add nsw i32 %502, -1
  store i32 %503, i32* %501, align 4
  br label %504

504:                                              ; preds = %494, %497
  %505 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %506 = load i32, i32* %505, align 4
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %516, label %508

508:                                              ; preds = %504
  %509 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 59
  %510 = load i32, i32* %509, align 8
  %511 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %512 = load i32, i32* %511, align 4
  %513 = icmp ne i32 %510, %512
  %514 = zext i1 %513 to i32
  %515 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 118
  store i32 %514, i32* %515, align 16
  store i32 %510, i32* %511, align 4
  br label %693

516:                                              ; preds = %504
  br i1 %270, label %689, label %517

517:                                              ; preds = %516
  %518 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %519 = load i8, i8* %518, align 4
  %520 = icmp eq i8 %519, 0
  br i1 %520, label %521, label %689

521:                                              ; preds = %517
  %522 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 88
  %523 = load i32, i32* %522, align 8
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %689, label %525

525:                                              ; preds = %521
  %526 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 69
  %527 = load i32, i32* %526, align 8
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %689, label %529

529:                                              ; preds = %525
  %530 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %531 = load i32, i32* %530, align 4
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %689

533:                                              ; preds = %529
  %534 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %535 = load i32, i32* %534, align 4
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %689

537:                                              ; preds = %533
  %538 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %539 = load i32, i32* %538, align 16
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %689

541:                                              ; preds = %537
  %542 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 33
  %543 = load i32, i32* %542, align 16
  %544 = icmp sgt i32 %543, 0
  br i1 %544, label %545, label %689

545:                                              ; preds = %541
  %546 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 35
  %547 = load i32, i32* %546, align 8
  %548 = icmp sgt i32 %547, 0
  %549 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 157
  %550 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 158
  %551 = add nsw i32 %547, 7
  %552 = ashr i32 %551, 3
  %553 = sext i32 %547 to i64
  %554 = sext i32 %543 to i64
  %555 = sext i32 %552 to i64
  %556 = add nsw i64 %553, -1
  %557 = lshr i64 %556, 3
  %558 = add nuw nsw i64 %557, 1
  %559 = and i64 %558, 4611686018427387900
  %560 = add nsw i64 %559, -4
  %561 = lshr exact i64 %560, 2
  %562 = add nuw nsw i64 %561, 1
  %563 = icmp ult i64 %558, 4
  %564 = and i64 %558, 4611686018427387900
  %565 = shl i64 %564, 3
  %566 = and i64 %562, 1
  %567 = icmp eq i64 %560, 0
  %568 = sub nuw nsw i64 %562, %566
  %569 = icmp eq i64 %566, 0
  %570 = icmp eq i64 %558, %564
  br label %571

571:                                              ; preds = %672, %545
  %572 = phi i64 [ %675, %672 ], [ 0, %545 ]
  %573 = phi i32 [ %674, %672 ], [ 0, %545 ]
  %574 = phi i32 [ %673, %672 ], [ 0, %545 ]
  br i1 %548, label %575, label %672

575:                                              ; preds = %571
  %576 = lshr exact i64 %572, 3
  %577 = load i8*, i8** %549, align 8
  %578 = load i8*, i8** %550, align 16
  %579 = mul nsw i64 %576, %555
  br i1 %563, label %651, label %580

580:                                              ; preds = %575
  %581 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %573, i32 0
  %582 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %574, i32 0
  br i1 %567, label %618, label %583

583:                                              ; preds = %580, %583
  %584 = phi i64 [ %615, %583 ], [ 0, %580 ]
  %585 = phi <4 x i32> [ %613, %583 ], [ %581, %580 ]
  %586 = phi <4 x i32> [ %614, %583 ], [ %582, %580 ]
  %587 = phi i64 [ %616, %583 ], [ %568, %580 ]
  %588 = and i64 %584, 2305843009213693944
  %589 = add nsw i64 %588, %579
  %590 = getelementptr inbounds i8, i8* %577, i64 %589
  %591 = bitcast i8* %590 to <4 x i8>*
  %592 = load <4 x i8>, <4 x i8>* %591, align 1
  %593 = zext <4 x i8> %592 to <4 x i32>
  %594 = getelementptr inbounds i8, i8* %578, i64 %589
  %595 = bitcast i8* %594 to <4 x i8>*
  %596 = load <4 x i8>, <4 x i8>* %595, align 1
  %597 = zext <4 x i8> %596 to <4 x i32>
  %598 = add <4 x i32> %585, %593
  %599 = add <4 x i32> %598, %597
  %600 = add nsw <4 x i32> %586, %593
  %601 = and i64 %584, 2305843009213693944
  %602 = or i64 %601, 4
  %603 = add nsw i64 %602, %579
  %604 = getelementptr inbounds i8, i8* %577, i64 %603
  %605 = bitcast i8* %604 to <4 x i8>*
  %606 = load <4 x i8>, <4 x i8>* %605, align 1
  %607 = zext <4 x i8> %606 to <4 x i32>
  %608 = getelementptr inbounds i8, i8* %578, i64 %603
  %609 = bitcast i8* %608 to <4 x i8>*
  %610 = load <4 x i8>, <4 x i8>* %609, align 1
  %611 = zext <4 x i8> %610 to <4 x i32>
  %612 = add <4 x i32> %599, %607
  %613 = add <4 x i32> %612, %611
  %614 = add nsw <4 x i32> %600, %607
  %615 = add i64 %584, 8
  %616 = add i64 %587, -2
  %617 = icmp eq i64 %616, 0
  br i1 %617, label %618, label %583, !llvm.loop !2

618:                                              ; preds = %583, %580
  %619 = phi <4 x i32> [ undef, %580 ], [ %613, %583 ]
  %620 = phi <4 x i32> [ undef, %580 ], [ %614, %583 ]
  %621 = phi i64 [ 0, %580 ], [ %615, %583 ]
  %622 = phi <4 x i32> [ %581, %580 ], [ %613, %583 ]
  %623 = phi <4 x i32> [ %582, %580 ], [ %614, %583 ]
  br i1 %569, label %638, label %624

624:                                              ; preds = %618
  %625 = and i64 %621, 2305843009213693948
  %626 = add nsw i64 %625, %579
  %627 = getelementptr inbounds i8, i8* %577, i64 %626
  %628 = bitcast i8* %627 to <4 x i8>*
  %629 = load <4 x i8>, <4 x i8>* %628, align 1
  %630 = zext <4 x i8> %629 to <4 x i32>
  %631 = add nsw <4 x i32> %623, %630
  %632 = add <4 x i32> %622, %630
  %633 = getelementptr inbounds i8, i8* %578, i64 %626
  %634 = bitcast i8* %633 to <4 x i8>*
  %635 = load <4 x i8>, <4 x i8>* %634, align 1
  %636 = zext <4 x i8> %635 to <4 x i32>
  %637 = add <4 x i32> %632, %636
  br label %638

638:                                              ; preds = %618, %624
  %639 = phi <4 x i32> [ %619, %618 ], [ %637, %624 ]
  %640 = phi <4 x i32> [ %620, %618 ], [ %631, %624 ]
  %641 = shufflevector <4 x i32> %640, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %642 = add <4 x i32> %640, %641
  %643 = shufflevector <4 x i32> %642, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %644 = add <4 x i32> %642, %643
  %645 = extractelement <4 x i32> %644, i32 0
  %646 = shufflevector <4 x i32> %639, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %647 = add <4 x i32> %639, %646
  %648 = shufflevector <4 x i32> %647, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %649 = add <4 x i32> %647, %648
  %650 = extractelement <4 x i32> %649, i32 0
  br i1 %570, label %672, label %651

651:                                              ; preds = %638, %575
  %652 = phi i64 [ 0, %575 ], [ %565, %638 ]
  %653 = phi i32 [ %573, %575 ], [ %650, %638 ]
  %654 = phi i32 [ %574, %575 ], [ %645, %638 ]
  br label %655

655:                                              ; preds = %651, %655
  %656 = phi i64 [ %670, %655 ], [ %652, %651 ]
  %657 = phi i32 [ %668, %655 ], [ %653, %651 ]
  %658 = phi i32 [ %669, %655 ], [ %654, %651 ]
  %659 = lshr exact i64 %656, 3
  %660 = add nsw i64 %659, %579
  %661 = getelementptr inbounds i8, i8* %577, i64 %660
  %662 = load i8, i8* %661, align 1
  %663 = zext i8 %662 to i32
  %664 = getelementptr inbounds i8, i8* %578, i64 %660
  %665 = load i8, i8* %664, align 1
  %666 = zext i8 %665 to i32
  %667 = add i32 %657, %663
  %668 = add i32 %667, %666
  %669 = add nsw i32 %658, %663
  %670 = add nuw nsw i64 %656, 8
  %671 = icmp slt i64 %670, %553
  br i1 %671, label %655, label %672, !llvm.loop !4

672:                                              ; preds = %655, %638, %571
  %673 = phi i32 [ %574, %571 ], [ %645, %638 ], [ %669, %655 ]
  %674 = phi i32 [ %573, %571 ], [ %650, %638 ], [ %668, %655 ]
  %675 = add nuw nsw i64 %572, 8
  %676 = icmp slt i64 %675, %554
  br i1 %676, label %571, label %677

677:                                              ; preds = %672
  %678 = icmp sgt i32 %674, 0
  br i1 %678, label %679, label %689

679:                                              ; preds = %677
  %680 = sitofp i32 %673 to double
  %681 = fmul double %680, 1.000000e+02
  %682 = sitofp i32 %674 to double
  %683 = fdiv double %681, %682
  %684 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 79
  %685 = load double, double* %684, align 8
  %686 = fmul double %685, 7.500000e-01
  %687 = fmul double %683, 2.500000e-01
  %688 = fadd double %687, %686
  store double %688, double* %684, align 8
  br label %689

689:                                              ; preds = %516, %679, %677, %541, %537, %533, %529, %525, %521, %517
  %690 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %691 = load i32, i32* %690, align 4
  %692 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 70
  store i32 %691, i32* %692, align 4
  br label %693

693:                                              ; preds = %508, %689
  br i1 %270, label %700, label %694

694:                                              ; preds = %693
  %695 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %696 = load i8, i8* %695, align 4
  %697 = icmp eq i8 %696, 0
  br i1 %697, label %698, label %700

698:                                              ; preds = %694
  %699 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 78
  store i32 0, i32* %699, align 4
  br label %700

700:                                              ; preds = %693, %694, %698
  %701 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %702 = load i32, i32* %701, align 8
  %703 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 57
  store i32 %702, i32* %703, align 8
  br i1 %334, label %714, label %704

704:                                              ; preds = %700
  %705 = getelementptr inbounds %struct.SVC, %struct.SVC* %3, i64 0, i32 0
  %706 = load i32, i32* %705, align 8
  %707 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %708 = load i32, i32* %707, align 8
  %709 = add nsw i32 %708, -1
  %710 = icmp slt i32 %706, %709
  br i1 %710, label %711, label %714

711:                                              ; preds = %704
  %712 = load i32, i32* %4, align 4
  %713 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 34
  store i32 %712, i32* %713, align 8
  br label %714

714:                                              ; preds = %700, %711, %704
  ret void
}

declare void @vp9_svc_adjust_avg_frame_qindex(%struct.VP9_COMP*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_rc_get_one_pass_vbr_params(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %3 = load i32, i32* %2, align 16
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 108
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %20

16:                                               ; preds = %9
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %20, label %33

18:                                               ; preds = %5
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  store i32 0, i32* %19, align 4
  br label %24

20:                                               ; preds = %9, %16
  %21 = phi i32 [ 0, %16 ], [ %15, %9 ]
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  store i32 0, i32* %22, align 4
  %23 = icmp eq i32 %21, 0
  br label %24

24:                                               ; preds = %18, %20
  %25 = phi i1 [ false, %18 ], [ %23, %20 ]
  %26 = zext i1 %25 to i32
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 18
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 9
  store i32 2000, i32* %31, align 8
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 23
  store i32 0, i32* %32, align 8
  br label %35

33:                                               ; preds = %1, %16
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  store i32 1, i32* %34, align 4
  br label %35

35:                                               ; preds = %33, %24
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %152

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  store i32 2000, i32* %40, align 8
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 3
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  tail call void @vp9_cyclic_refresh_set_golden_update(%struct.VP9_COMP* %0) #8
  br label %61

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 13
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 14
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %53, %51
  %55 = icmp slt i32 %54, 20
  %56 = sdiv i32 %54, 2
  %57 = icmp sgt i32 %54, 41
  %58 = select i1 %55, i32 10, i32 %56
  %59 = select i1 %57, i32 20, i32 %58
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  store i32 %59, i32* %60, align 4
  br label %61

61:                                               ; preds = %49, %48
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 76
  store i32 10, i32* %62, align 4
  %63 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 40
  %64 = load i32, i32* %63, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %72

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 41
  %68 = load i32, i32* %67, align 4
  %69 = sitofp i32 %68 to double
  %70 = sitofp i32 %64 to double
  %71 = fdiv double %69, %70
  br label %72

72:                                               ; preds = %66, %61
  %73 = phi double [ %71, %66 ], [ 1.000000e+00, %61 ]
  %74 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %75 = load i32, i32* %74, align 4
  %76 = icmp ugt i32 %75, 30
  br i1 %76, label %77, label %120

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %81 = load i32, i32* %80, align 8
  %82 = mul nsw i32 %81, 7
  %83 = ashr i32 %82, 3
  %84 = icmp sgt i32 %79, %83
  %85 = fcmp ogt double %73, 3.500000e+00
  %86 = and i1 %85, %84
  br i1 %86, label %87, label %96

87:                                               ; preds = %77
  %88 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, 3
  %91 = icmp sgt i32 %90, 31
  %92 = ashr i32 %90, 1
  %93 = select i1 %91, i32 15, i32 %92
  store i32 %93, i32* %88, align 4
  %94 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 75
  %95 = load i32, i32* %94, align 8
  br label %106

96:                                               ; preds = %77
  %97 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 75
  %98 = load i32, i32* %97, align 8
  %99 = icmp slt i32 %98, 20
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %102 = load i32, i32* %101, align 4
  %103 = icmp slt i32 %102, 12
  %104 = ashr i32 %102, 1
  %105 = select i1 %103, i32 6, i32 %104
  store i32 %105, i32* %101, align 4
  br label %106

106:                                              ; preds = %96, %100, %87
  %107 = phi i32 [ %98, %96 ], [ %98, %100 ], [ %95, %87 ]
  %108 = mul i32 %107, 4000
  %109 = add nsw i32 %107, 100
  %110 = sdiv i32 %108, %109
  %111 = icmp sgt i32 %110, 500
  %112 = select i1 %111, i32 %110, i32 500
  store i32 %112, i32* %40, align 8
  %113 = mul nsw i32 %112, 3
  %114 = icmp ugt i32 %113, 6399
  %115 = add nsw i32 %113, -2000
  %116 = icmp ugt i32 %115, 4399
  %117 = select i1 %114, i32 15, i32 5
  %118 = udiv i32 %113, 400
  %119 = select i1 %116, i32 %117, i32 %118
  store i32 %119, i32* %62, align 4
  br label %120

120:                                              ; preds = %106, %72
  %121 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 17
  store i32 0, i32* %123, align 8
  %124 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %125 = load i32, i32* %124, align 4
  %126 = mul nsw i32 %125, 7
  %127 = ashr i32 %126, 2
  %128 = icmp sge i32 %127, %122
  %129 = icmp slt i32 %125, %122
  %130 = and i1 %129, %128
  br i1 %130, label %131, label %135

131:                                              ; preds = %120
  %132 = icmp sgt i32 %122, 9
  %133 = zext i1 %132 to i32
  %134 = ashr i32 %122, %133
  br label %137

135:                                              ; preds = %120
  %136 = icmp sgt i32 %125, %122
  br i1 %136, label %137, label %139

137:                                              ; preds = %135, %131
  %138 = phi i32 [ %134, %131 ], [ %122, %135 ]
  store i32 %138, i32* %124, align 4
  store i32 1, i32* %123, align 8
  br label %139

139:                                              ; preds = %137, %135
  %140 = phi i32 [ %125, %135 ], [ %138, %137 ]
  store i32 %140, i32* %36, align 4
  %141 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 1, i32* %141, align 4
  %142 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 22
  store i32 0, i32* %142, align 4
  %143 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 69
  store i32 0, i32* %143, align 8
  %144 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 88
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %152, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 47
  %149 = load i32, i32* %148, align 16
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %147
  store i32 1, i32* %142, align 4
  store i32 1, i32* %143, align 8
  br label %152

152:                                              ; preds = %151, %139, %147, %35
  %153 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %174

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %158 = load i32, i32* %157, align 8
  %159 = mul nsw i32 %158, 25
  %160 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 12
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %168, label %163

163:                                              ; preds = %156
  %164 = mul i32 %161, %158
  %165 = udiv i32 %164, 100
  %166 = icmp sgt i32 %165, %159
  %167 = select i1 %166, i32 %159, i32 %165
  br label %168

168:                                              ; preds = %156, %163
  %169 = phi i32 [ %167, %163 ], [ %159, %156 ]
  %170 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %171 = load i32, i32* %170, align 8
  %172 = icmp sgt i32 %169, %171
  %173 = select i1 %172, i32 %171, i32 %169
  br label %238

174:                                              ; preds = %152
  %175 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 76
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %197

182:                                              ; preds = %174
  %183 = icmp eq i32 %181, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %182
  %185 = load i32, i32* %2, align 16
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %197, label %187

187:                                              ; preds = %184, %182
  %188 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %189 = load i32, i32* %188, align 8
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %192 = load i32, i32* %191, align 4
  %193 = sext i32 %192 to i64
  %194 = sext i32 %176 to i64
  %195 = mul nsw i64 %190, %194
  %196 = mul i64 %195, %193
  br label %205

197:                                              ; preds = %184, %174
  %198 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %199 = load i32, i32* %198, align 8
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %202 = load i32, i32* %201, align 4
  %203 = sext i32 %202 to i64
  %204 = mul nsw i64 %203, %200
  br label %205

205:                                              ; preds = %197, %187
  %206 = phi i32 [ %202, %197 ], [ %192, %187 ]
  %207 = phi i64 [ %204, %197 ], [ %196, %187 ]
  %208 = phi i32 [ %199, %197 ], [ %189, %187 ]
  %209 = add i32 %176, -1
  %210 = add i32 %209, %206
  %211 = sext i32 %210 to i64
  %212 = sdiv i64 %207, %211
  %213 = icmp slt i64 %212, 2147483647
  %214 = select i1 %213, i64 %212, i64 2147483647
  %215 = trunc i64 %214 to i32
  %216 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 26
  %217 = load i32, i32* %216, align 4
  %218 = ashr i32 %208, 5
  %219 = icmp sgt i32 %217, %218
  %220 = select i1 %219, i32 %217, i32 %218
  %221 = icmp sgt i32 %220, %215
  %222 = select i1 %221, i32 %220, i32 %215
  %223 = icmp eq i32 %181, 0
  %224 = or i1 %179, %223
  %225 = select i1 %224, i32 %222, i32 %220
  %226 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %227 = load i32, i32* %226, align 8
  %228 = icmp sgt i32 %225, %227
  %229 = select i1 %228, i32 %227, i32 %225
  %230 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 13
  %231 = load i32, i32* %230, align 8
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %238, label %233

233:                                              ; preds = %205
  %234 = mul i32 %231, %208
  %235 = udiv i32 %234, 100
  %236 = icmp slt i32 %229, %235
  %237 = select i1 %236, i32 %229, i32 %235
  br label %238

238:                                              ; preds = %233, %205, %168
  %239 = phi i32 [ %173, %168 ], [ %237, %233 ], [ %229, %205 ]
  %240 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  store i32 %239, i32* %240, align 4
  %241 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, 2
  br i1 %243, label %244, label %255

244:                                              ; preds = %238
  %245 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %246 = load i32, i32* %245, align 4
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %255, label %248

248:                                              ; preds = %244
  %249 = sitofp i32 %239 to double
  %250 = zext i32 %246 to i64
  %251 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %250
  %252 = load double, double* %251, align 8
  %253 = fmul double %252, %249
  %254 = fptosi double %253 to i32
  store i32 %254, i32* %240, align 4
  br label %255

255:                                              ; preds = %238, %244, %248
  %256 = phi i32 [ %239, %244 ], [ %254, %248 ], [ %239, %238 ]
  %257 = sext i32 %256 to i64
  %258 = shl nsw i64 %257, 12
  %259 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %260 = load i32, i32* %259, align 16
  %261 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %262 = load i32, i32* %261, align 4
  %263 = mul nsw i32 %262, %260
  %264 = sext i32 %263 to i64
  %265 = sdiv i64 %258, %264
  %266 = trunc i64 %265 to i32
  %267 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 3
  store i32 %266, i32* %267, align 4
  %268 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, 3
  br i1 %270, label %271, label %276

271:                                              ; preds = %255
  %272 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %273 = load i32, i32* %272, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %271
  tail call void @vp9_cyclic_refresh_update_parameters(%struct.VP9_COMP* %0) #8
  br label %276

276:                                              ; preds = %275, %271, %255
  ret void
}

declare void @vp9_cyclic_refresh_set_golden_update(%struct.VP9_COMP*) local_unnamed_addr #1

declare void @vp9_cyclic_refresh_update_parameters(%struct.VP9_COMP*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_calc_pframe_target_size_one_pass_cbr(%struct.VP9_COMP* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  %5 = load i64, i64* %4, align 8
  %6 = sub nsw i64 %3, %5
  %7 = sdiv i64 %3, 100
  %8 = add nsw i64 %7, 1
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, 3215
  %12 = ashr i32 %10, 4
  %13 = select i1 %11, i32 %12, i32 200
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 14
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %22 = load i32, i32* %21, align 4
  %23 = mul nsw i32 %22, %10
  %24 = add i32 %15, 100
  %25 = select i1 %20, i32 100, i32 %24
  %26 = mul nsw i32 %23, %25
  %27 = mul nsw i32 %22, 100
  %28 = add i32 %27, %15
  %29 = sdiv i32 %26, %28
  br label %30

30:                                               ; preds = %17, %1
  %31 = phi i32 [ %10, %1 ], [ %29, %17 ]
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %54

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, %41
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %44, %46
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %48, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 3215
  %52 = ashr i32 %50, 4
  %53 = select i1 %51, i32 %52, i32 200
  br label %54

54:                                               ; preds = %35, %30, %39
  %55 = phi i32 [ %53, %39 ], [ %13, %35 ], [ %13, %30 ]
  %56 = phi i32 [ %50, %39 ], [ %31, %35 ], [ %31, %30 ]
  %57 = icmp sgt i64 %6, 0
  br i1 %57, label %58, label %69

58:                                               ; preds = %54
  %59 = sdiv i64 %6, %8
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 21
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %59, %62
  %64 = select i1 %63, i64 %59, i64 %62
  %65 = trunc i64 %64 to i32
  %66 = mul nsw i32 %56, %65
  %67 = sdiv i32 %66, 200
  %68 = sub nsw i32 %56, %67
  br label %83

69:                                               ; preds = %54
  %70 = icmp slt i64 %6, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %69
  %72 = sdiv i64 %6, %8
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 22
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = icmp slt i64 %73, %76
  %78 = select i1 %77, i64 %73, i64 %76
  %79 = trunc i64 %78 to i32
  %80 = mul nsw i32 %56, %79
  %81 = sdiv i32 %80, 200
  %82 = add nsw i32 %81, %56
  br label %83

83:                                               ; preds = %69, %71, %58
  %84 = phi i32 [ %68, %58 ], [ %82, %71 ], [ %56, %69 ]
  %85 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 13
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = mul i32 %86, %10
  %90 = udiv i32 %89, 100
  %91 = icmp slt i32 %84, %90
  %92 = select i1 %91, i32 %84, i32 %90
  br label %93

93:                                               ; preds = %83, %88
  %94 = phi i32 [ %92, %88 ], [ %84, %83 ]
  %95 = icmp sgt i32 %55, %94
  %96 = select i1 %95, i32 %55, i32 %94
  ret i32 %96
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_calc_iframe_target_size_one_pass_cbr(%struct.VP9_COMP* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 50
  %7 = load i64, i64* %6, align 8
  %8 = icmp sgt i64 %7, 4294967295
  br i1 %8, label %56, label %9

9:                                                ; preds = %5
  %10 = sdiv i64 %7, 2
  %11 = trunc i64 %10 to i32
  br label %56

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %14 = load double, double* %13, align 16
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 1
  br i1 %17, label %18, label %32

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %32

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = mul nsw i32 %24, %16
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %25, %27
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %29, i32 3
  %31 = load double, double* %30, align 8
  br label %32

32:                                               ; preds = %22, %18, %12
  %33 = phi double [ %31, %22 ], [ %14, %18 ], [ %14, %12 ]
  %34 = fmul double %33, 2.000000e+00
  %35 = fadd double %34, -1.600000e+01
  %36 = fptosi double %35 to i32
  %37 = icmp sgt i32 %36, 32
  %38 = select i1 %37, i32 %36, i32 32
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %40 = load i32, i32* %39, align 8
  %41 = sitofp i32 %40 to double
  %42 = fmul double %33, 5.000000e-01
  %43 = fcmp ogt double %42, %41
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = mul nsw i32 %38, %40
  %46 = sitofp i32 %45 to double
  %47 = fdiv double %46, %42
  %48 = fptosi double %47 to i32
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i32 [ %48, %44 ], [ %38, %32 ]
  %51 = add nsw i32 %50, 16
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %53 = load i32, i32* %52, align 8
  %54 = mul nsw i32 %51, %53
  %55 = ashr i32 %54, 4
  br label %56

56:                                               ; preds = %9, %5, %49
  %57 = phi i32 [ %55, %49 ], [ %11, %9 ], [ 2147483647, %5 ]
  %58 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 12
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %63 = load i32, i32* %62, align 8
  %64 = mul i32 %63, %59
  %65 = udiv i32 %64, 100
  %66 = icmp sgt i32 %65, %57
  %67 = select i1 %66, i32 %57, i32 %65
  br label %68

68:                                               ; preds = %56, %61
  %69 = phi i32 [ %67, %61 ], [ %57, %56 ]
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %71 = load i32, i32* %70, align 8
  %72 = icmp sgt i32 %69, %71
  %73 = select i1 %72, i32 %71, i32 %69
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_rc_get_svc_params(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, %7
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %10, %12
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 62
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = sext i32 %12 to i64
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %18, i32 14
  store i32 0, i32* %19, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 57
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %56, label %28

28:                                               ; preds = %24, %20
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 108
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %56

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 17
  %35 = load i32, i32* %34, align 16
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 22
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 18
  %41 = load i32, i32* %40, align 4
  %42 = srem i32 %39, %41
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %37
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 57
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  %48 = icmp eq i32 %7, 0
  %49 = and i1 %48, %47
  br i1 %49, label %56, label %50

50:                                               ; preds = %44, %33, %37
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 55, i64 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 1
  %54 = icmp eq i32 %7, 0
  %55 = and i1 %54, %53
  br i1 %55, label %56, label %145

56:                                               ; preds = %50, %44, %24, %28
  %57 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 23
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %167, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %167

66:                                               ; preds = %62
  br i1 %23, label %71, label %67

67:                                               ; preds = %66
  tail call void @vp9_svc_reset_temporal_layers(%struct.VP9_COMP* %0, i32 1) #8
  %68 = load i32, i32* %6, align 8
  %69 = load i32, i32* %8, align 4
  %70 = mul nsw i32 %69, %68
  br label %71

71:                                               ; preds = %66, %67
  %72 = phi i32 [ %10, %66 ], [ %70, %67 ]
  %73 = phi i32 [ %9, %66 ], [ %69, %67 ]
  %74 = phi i32 [ %7, %66 ], [ %68, %67 ]
  %75 = load i32, i32* %11, align 4
  %76 = add nsw i32 %72, %75
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %77, i32 14
  store i32 1, i32* %78, align 4
  %79 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %80 = load i32, i32* %79, align 16
  %81 = and i32 %80, -8
  store i32 %81, i32* %79, align 16
  %82 = load i32, i32* %21, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %71
  %85 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 50
  %86 = load i64, i64* %85, align 8
  %87 = icmp sgt i64 %86, 4294967295
  br i1 %87, label %128, label %88

88:                                               ; preds = %84
  %89 = sdiv i64 %86, 2
  %90 = trunc i64 %89 to i32
  br label %128

91:                                               ; preds = %71
  %92 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %93 = load double, double* %92, align 16
  %94 = icmp sgt i32 %73, 1
  br i1 %94, label %95, label %105

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = load i32, i32* %11, align 4
  %101 = add nsw i32 %100, %72
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %102, i32 3
  %104 = load double, double* %103, align 8
  br label %105

105:                                              ; preds = %99, %95, %91
  %106 = phi double [ %104, %99 ], [ %93, %95 ], [ %93, %91 ]
  %107 = fmul double %106, 2.000000e+00
  %108 = fadd double %107, -1.600000e+01
  %109 = fptosi double %108 to i32
  %110 = icmp sgt i32 %109, 32
  %111 = select i1 %110, i32 %109, i32 32
  %112 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %113 = load i32, i32* %112, align 8
  %114 = sitofp i32 %113 to double
  %115 = fmul double %106, 5.000000e-01
  %116 = fcmp ogt double %115, %114
  br i1 %116, label %117, label %122

117:                                              ; preds = %105
  %118 = mul nsw i32 %111, %113
  %119 = sitofp i32 %118 to double
  %120 = fdiv double %119, %115
  %121 = fptosi double %120 to i32
  br label %122

122:                                              ; preds = %117, %105
  %123 = phi i32 [ %121, %117 ], [ %111, %105 ]
  %124 = add nsw i32 %123, 16
  %125 = load i32, i32* %4, align 8
  %126 = mul nsw i32 %124, %125
  %127 = ashr i32 %126, 4
  br label %128

128:                                              ; preds = %122, %88, %84
  %129 = phi i32 [ %127, %122 ], [ %90, %88 ], [ 2147483647, %84 ]
  %130 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 12
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %139, label %133

133:                                              ; preds = %128
  %134 = load i32, i32* %4, align 8
  %135 = mul i32 %134, %131
  %136 = udiv i32 %135, 100
  %137 = icmp sgt i32 %136, %129
  %138 = select i1 %137, i32 %129, i32 %136
  br label %139

139:                                              ; preds = %128, %133
  %140 = phi i32 [ %138, %133 ], [ %129, %128 ]
  %141 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %142 = load i32, i32* %141, align 8
  %143 = icmp sgt i32 %140, %142
  %144 = select i1 %143, i32 %142, i32 %140
  br label %167

145:                                              ; preds = %50
  %146 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  store i32 1, i32* %146, align 4
  %147 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %167, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %167

154:                                              ; preds = %150
  %155 = sext i32 %13 to i64
  %156 = icmp ne i32 %7, 0
  %157 = or i1 %156, %23
  br i1 %157, label %158, label %163

158:                                              ; preds = %154
  %159 = load i32, i32* %11, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %160, i32 14
  %162 = load i32, i32* %161, align 4
  br label %163

163:                                              ; preds = %154, %158
  %164 = phi i32 [ %162, %158 ], [ 0, %154 ]
  %165 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %155, i32 14
  store i32 %164, i32* %165, align 4
  %166 = tail call i32 @vp9_calc_pframe_target_size_one_pass_cbr(%struct.VP9_COMP* %0)
  br label %167

167:                                              ; preds = %150, %62, %145, %56, %163, %139
  %168 = phi i32 [ %73, %139 ], [ %9, %62 ], [ %9, %163 ], [ %9, %150 ], [ %9, %56 ], [ %9, %145 ]
  %169 = phi i32 [ %74, %139 ], [ %7, %62 ], [ %7, %163 ], [ %7, %150 ], [ %7, %56 ], [ %7, %145 ]
  %170 = phi i32 [ %144, %139 ], [ %5, %62 ], [ %166, %163 ], [ %5, %150 ], [ %5, %56 ], [ %5, %145 ]
  %171 = phi i32 [ %76, %139 ], [ %13, %62 ], [ %13, %163 ], [ %13, %150 ], [ %13, %56 ], [ %13, %145 ]
  %172 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %285, label %175

175:                                              ; preds = %167
  %176 = icmp sgt i32 %169, 0
  br i1 %176, label %177, label %251

177:                                              ; preds = %175
  %178 = sext i32 %171 to i64
  %179 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %178, i32 14
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %251

182:                                              ; preds = %177
  %183 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  store i32 0, i32* %183, align 4
  %184 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %185 = load i32, i32* %184, align 16
  %186 = and i32 %185, -8
  store i32 %186, i32* %184, align 16
  %187 = load i32, i32* %21, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %196

189:                                              ; preds = %182
  %190 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 50
  %191 = load i64, i64* %190, align 8
  %192 = icmp sgt i64 %191, 4294967295
  br i1 %192, label %234, label %193

193:                                              ; preds = %189
  %194 = sdiv i64 %191, 2
  %195 = trunc i64 %194 to i32
  br label %234

196:                                              ; preds = %182
  %197 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %198 = load double, double* %197, align 16
  %199 = icmp sgt i32 %168, 1
  br i1 %199, label %200, label %211

200:                                              ; preds = %196
  %201 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 1
  br i1 %203, label %204, label %211

204:                                              ; preds = %200
  %205 = mul nsw i32 %168, %169
  %206 = load i32, i32* %11, align 4
  %207 = add nsw i32 %206, %205
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %208, i32 3
  %210 = load double, double* %209, align 8
  br label %211

211:                                              ; preds = %204, %200, %196
  %212 = phi double [ %210, %204 ], [ %198, %200 ], [ %198, %196 ]
  %213 = fmul double %212, 2.000000e+00
  %214 = fadd double %213, -1.600000e+01
  %215 = fptosi double %214 to i32
  %216 = icmp sgt i32 %215, 32
  %217 = select i1 %216, i32 %215, i32 32
  %218 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %219 = load i32, i32* %218, align 8
  %220 = sitofp i32 %219 to double
  %221 = fmul double %212, 5.000000e-01
  %222 = fcmp ogt double %221, %220
  br i1 %222, label %223, label %228

223:                                              ; preds = %211
  %224 = mul nsw i32 %217, %219
  %225 = sitofp i32 %224 to double
  %226 = fdiv double %225, %221
  %227 = fptosi double %226 to i32
  br label %228

228:                                              ; preds = %223, %211
  %229 = phi i32 [ %227, %223 ], [ %217, %211 ]
  %230 = add nsw i32 %229, 16
  %231 = load i32, i32* %4, align 8
  %232 = mul nsw i32 %230, %231
  %233 = ashr i32 %232, 4
  br label %234

234:                                              ; preds = %228, %193, %189
  %235 = phi i32 [ %233, %228 ], [ %195, %193 ], [ 2147483647, %189 ]
  %236 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 12
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %245, label %239

239:                                              ; preds = %234
  %240 = load i32, i32* %4, align 8
  %241 = mul i32 %240, %237
  %242 = udiv i32 %241, 100
  %243 = icmp sgt i32 %242, %235
  %244 = select i1 %243, i32 %235, i32 %242
  br label %245

245:                                              ; preds = %234, %239
  %246 = phi i32 [ %244, %239 ], [ %235, %234 ]
  %247 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %248 = load i32, i32* %247, align 8
  %249 = icmp sgt i32 %246, %248
  %250 = select i1 %249, i32 %248, i32 %246
  br label %251

251:                                              ; preds = %245, %177, %175
  %252 = phi i32 [ %250, %245 ], [ %170, %177 ], [ %170, %175 ]
  %253 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %285

256:                                              ; preds = %251
  %257 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %258 = load i32, i32* %257, align 8
  switch i32 %258, label %281 [
    i32 2, label %259
    i32 3, label %268
  ]

259:                                              ; preds = %256
  switch i32 %169, label %281 [
    i32 0, label %260
    i32 1, label %264
  ]

260:                                              ; preds = %259
  %261 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 0, i32* %261, align 4
  %262 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 2, i32* %262, align 16
  %263 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 6, i32* %263, align 4
  br label %281

264:                                              ; preds = %259
  %265 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 1, i32* %265, align 4
  %266 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 3, i32* %266, align 16
  %267 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 6, i32* %267, align 4
  br label %281

268:                                              ; preds = %256
  switch i32 %169, label %281 [
    i32 0, label %269
    i32 1, label %273
    i32 2, label %277
  ]

269:                                              ; preds = %268
  %270 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 0, i32* %270, align 4
  %271 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 3, i32* %271, align 16
  %272 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 6, i32* %272, align 4
  br label %281

273:                                              ; preds = %268
  %274 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 1, i32* %274, align 4
  %275 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 4, i32* %275, align 16
  %276 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 6, i32* %276, align 4
  br label %281

277:                                              ; preds = %268
  %278 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 2, i32* %278, align 4
  %279 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 5, i32* %279, align 16
  %280 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 7, i32* %280, align 4
  br label %281

281:                                              ; preds = %268, %256, %259, %273, %277, %269, %260, %264
  %282 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 44
  store i32 1, i32* %282, align 8
  %283 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 45
  store i32 1, i32* %283, align 4
  %284 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 46
  store i32 1, i32* %284, align 16
  br label %285

285:                                              ; preds = %167, %251, %281
  %286 = phi i32 [ %252, %281 ], [ %252, %251 ], [ %170, %167 ]
  tail call void @vp9_svc_check_spatial_layer_sync(%struct.VP9_COMP* %0) #8
  %287 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 20
  %288 = load i32, i32* %287, align 4
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %334, label %290

290:                                              ; preds = %285
  %291 = load i32, i32* %11, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %292, i32 14
  %294 = load i32, i32* %293, align 4
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %308

296:                                              ; preds = %290
  %297 = load i32, i32* %6, align 8
  %298 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %299 = load i32, i32* %298, align 8
  %300 = icmp eq i32 %299, 3
  %301 = zext i1 %300 to i32
  %302 = sub i32 %297, %301
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 %303, i32 0
  %305 = load i32, i32* %304, align 8
  %306 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 %305, i32* %306, align 16
  %307 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 3, i32* %307, align 16
  br label %308

308:                                              ; preds = %290, %296
  %309 = icmp eq i32 %291, 0
  br i1 %309, label %310, label %341

310:                                              ; preds = %308
  %311 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 0, i32 14
  %312 = load i32, i32* %311, align 4
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %326, label %314

314:                                              ; preds = %310
  %315 = load i32, i32* %6, align 8
  %316 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %317 = load i32, i32* %316, align 8
  %318 = icmp eq i32 %317, 3
  %319 = zext i1 %318 to i32
  %320 = sub i32 %315, %319
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 %321, i32 0
  %323 = load i32, i32* %322, align 8
  %324 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 %323, i32* %324, align 4
  %325 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 46
  store i32 1, i32* %325, align 16
  br label %341

326:                                              ; preds = %310
  %327 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  %328 = load i32, i32* %327, align 4
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %341

330:                                              ; preds = %326
  %331 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  store i32 20, i32* %331, align 4
  store i32 20, i32* %327, align 4
  %332 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 45
  store i32 1, i32* %332, align 4
  %333 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  store i32 2000, i32* %333, align 8
  br label %341

334:                                              ; preds = %285
  %335 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 19
  %336 = load i32, i32* %335, align 8
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %341

338:                                              ; preds = %334
  %339 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  store i32 2147483647, i32* %339, align 4
  %340 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  store i32 2147483647, i32* %340, align 4
  br label %341

341:                                              ; preds = %334, %338, %308, %326, %330, %314
  %342 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 56
  %343 = load i8, i8* %342, align 4
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %579, label %345

345:                                              ; preds = %341
  %346 = load i32, i32* %21, align 4
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %351

348:                                              ; preds = %345
  %349 = load i32, i32* %8, align 4
  %350 = icmp sgt i32 %349, 1
  br i1 %350, label %515, label %351

351:                                              ; preds = %348, %345
  %352 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 13
  %353 = load i32, i32* %352, align 8
  %354 = icmp eq i32 %353, 1
  br i1 %354, label %512, label %355

355:                                              ; preds = %351
  %356 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %357 = load i32, i32* %356, align 8
  %358 = icmp sgt i32 %357, 3
  br i1 %358, label %512, label %359

359:                                              ; preds = %355
  %360 = load i32, i32* %8, align 4
  %361 = icmp sgt i32 %360, 3
  %362 = icmp eq i32 %357, 1
  %363 = or i1 %362, %361
  br i1 %363, label %512, label %364

364:                                              ; preds = %359
  %365 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 24
  store i32 0, i32* %365, align 16
  %366 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  store i8 1, i8* %366, align 4
  %367 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  store i32 1, i32* %367, align 4
  %368 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  %369 = bitcast i32* %368 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %369, align 4
  %370 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  br i1 %347, label %371, label %374

371:                                              ; preds = %364
  store i32 0, i32* %370, align 4
  %372 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 1, i32* %372, align 16
  %373 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 2, i32* %373, align 4
  br label %515

374:                                              ; preds = %364
  store i32 -1, i32* %370, align 4
  %375 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 -1, i32* %375, align 16
  %376 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 -1, i32* %376, align 4
  %377 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 0
  %378 = load i8, i8* %377, align 1
  %379 = icmp eq i8 %378, 1
  %380 = zext i1 %379 to i32
  br i1 %379, label %381, label %382

381:                                              ; preds = %374
  store i32 0, i32* %370, align 4
  br label %382

382:                                              ; preds = %381, %374
  %383 = phi i32 [ 0, %381 ], [ -1, %374 ]
  %384 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 1
  %385 = load i8, i8* %384, align 1
  %386 = icmp eq i8 %385, 1
  %387 = zext i1 %386 to i32
  %388 = add nuw nsw i32 %387, %380
  switch i32 %388, label %400 [
    i32 1, label %397
    i32 2, label %396
    i32 3, label %395
  ]

389:                                              ; preds = %508
  store i32 %510, i32* %375, align 16
  br label %390

390:                                              ; preds = %508, %504, %502, %389
  %391 = phi i32 [ %510, %389 ], [ %510, %508 ], [ %491, %504 ], [ %491, %502 ]
  %392 = phi i32 [ %509, %389 ], [ %509, %508 ], [ %493, %504 ], [ %493, %502 ]
  %393 = icmp eq i32 %392, -1
  br i1 %393, label %394, label %522

394:                                              ; preds = %390
  store i32 %391, i32* %376, align 4
  br label %522

395:                                              ; preds = %382
  store i32 1, i32* %376, align 4
  br label %400

396:                                              ; preds = %382
  store i32 1, i32* %375, align 16
  br label %400

397:                                              ; preds = %382
  %398 = icmp eq i32 %383, -1
  br i1 %398, label %399, label %400

399:                                              ; preds = %397
  store i32 1, i32* %370, align 4
  br label %400

400:                                              ; preds = %399, %397, %396, %395, %382
  %401 = phi i32 [ 1, %399 ], [ 0, %397 ], [ %383, %396 ], [ %383, %395 ], [ %383, %382 ]
  %402 = phi i32 [ -1, %399 ], [ -1, %397 ], [ 1, %396 ], [ -1, %395 ], [ -1, %382 ]
  %403 = phi i32 [ -1, %399 ], [ -1, %397 ], [ -1, %396 ], [ 1, %395 ], [ -1, %382 ]
  %404 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 2
  %405 = load i8, i8* %404, align 1
  %406 = icmp eq i8 %405, 1
  %407 = zext i1 %406 to i32
  %408 = add nuw nsw i32 %388, %407
  switch i32 %408, label %418 [
    i32 1, label %415
    i32 2, label %412
    i32 3, label %409
  ]

409:                                              ; preds = %400
  %410 = icmp eq i32 %403, -1
  br i1 %410, label %411, label %418

411:                                              ; preds = %409
  store i32 2, i32* %376, align 4
  br label %418

412:                                              ; preds = %400
  %413 = icmp eq i32 %402, -1
  br i1 %413, label %414, label %418

414:                                              ; preds = %412
  store i32 2, i32* %375, align 16
  br label %418

415:                                              ; preds = %400
  %416 = icmp eq i32 %401, -1
  br i1 %416, label %417, label %418

417:                                              ; preds = %415
  store i32 2, i32* %370, align 4
  br label %418

418:                                              ; preds = %417, %415, %414, %412, %411, %409, %400
  %419 = phi i32 [ 2, %417 ], [ %401, %415 ], [ %401, %414 ], [ %401, %412 ], [ %401, %411 ], [ %401, %409 ], [ %401, %400 ]
  %420 = phi i32 [ %402, %417 ], [ %402, %415 ], [ 2, %414 ], [ %402, %412 ], [ %402, %411 ], [ %402, %409 ], [ %402, %400 ]
  %421 = phi i32 [ %403, %417 ], [ %403, %415 ], [ %403, %414 ], [ %403, %412 ], [ 2, %411 ], [ %403, %409 ], [ %403, %400 ]
  %422 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 3
  %423 = load i8, i8* %422, align 1
  %424 = icmp eq i8 %423, 1
  %425 = zext i1 %424 to i32
  %426 = add nuw nsw i32 %408, %425
  switch i32 %426, label %436 [
    i32 1, label %433
    i32 2, label %430
    i32 3, label %427
  ]

427:                                              ; preds = %418
  %428 = icmp eq i32 %421, -1
  br i1 %428, label %429, label %436

429:                                              ; preds = %427
  store i32 3, i32* %376, align 4
  br label %436

430:                                              ; preds = %418
  %431 = icmp eq i32 %420, -1
  br i1 %431, label %432, label %436

432:                                              ; preds = %430
  store i32 3, i32* %375, align 16
  br label %436

433:                                              ; preds = %418
  %434 = icmp eq i32 %419, -1
  br i1 %434, label %435, label %436

435:                                              ; preds = %433
  store i32 3, i32* %370, align 4
  br label %436

436:                                              ; preds = %435, %433, %432, %430, %429, %427, %418
  %437 = phi i32 [ 3, %435 ], [ %419, %433 ], [ %419, %432 ], [ %419, %430 ], [ %419, %429 ], [ %419, %427 ], [ %419, %418 ]
  %438 = phi i32 [ %420, %435 ], [ %420, %433 ], [ 3, %432 ], [ %420, %430 ], [ %420, %429 ], [ %420, %427 ], [ %420, %418 ]
  %439 = phi i32 [ %421, %435 ], [ %421, %433 ], [ %421, %432 ], [ %421, %430 ], [ 3, %429 ], [ %421, %427 ], [ %421, %418 ]
  %440 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 4
  %441 = load i8, i8* %440, align 1
  %442 = icmp eq i8 %441, 1
  %443 = zext i1 %442 to i32
  %444 = add nuw nsw i32 %426, %443
  switch i32 %444, label %454 [
    i32 1, label %451
    i32 2, label %448
    i32 3, label %445
  ]

445:                                              ; preds = %436
  %446 = icmp eq i32 %439, -1
  br i1 %446, label %447, label %454

447:                                              ; preds = %445
  store i32 4, i32* %376, align 4
  br label %454

448:                                              ; preds = %436
  %449 = icmp eq i32 %438, -1
  br i1 %449, label %450, label %454

450:                                              ; preds = %448
  store i32 4, i32* %375, align 16
  br label %454

451:                                              ; preds = %436
  %452 = icmp eq i32 %437, -1
  br i1 %452, label %453, label %454

453:                                              ; preds = %451
  store i32 4, i32* %370, align 4
  br label %454

454:                                              ; preds = %453, %451, %450, %448, %447, %445, %436
  %455 = phi i32 [ 4, %453 ], [ %437, %451 ], [ %437, %450 ], [ %437, %448 ], [ %437, %447 ], [ %437, %445 ], [ %437, %436 ]
  %456 = phi i32 [ %438, %453 ], [ %438, %451 ], [ 4, %450 ], [ %438, %448 ], [ %438, %447 ], [ %438, %445 ], [ %438, %436 ]
  %457 = phi i32 [ %439, %453 ], [ %439, %451 ], [ %439, %450 ], [ %439, %448 ], [ 4, %447 ], [ %439, %445 ], [ %439, %436 ]
  %458 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 5
  %459 = load i8, i8* %458, align 1
  %460 = icmp eq i8 %459, 1
  %461 = zext i1 %460 to i32
  %462 = add nuw nsw i32 %444, %461
  switch i32 %462, label %472 [
    i32 1, label %469
    i32 2, label %466
    i32 3, label %463
  ]

463:                                              ; preds = %454
  %464 = icmp eq i32 %457, -1
  br i1 %464, label %465, label %472

465:                                              ; preds = %463
  store i32 5, i32* %376, align 4
  br label %472

466:                                              ; preds = %454
  %467 = icmp eq i32 %456, -1
  br i1 %467, label %468, label %472

468:                                              ; preds = %466
  store i32 5, i32* %375, align 16
  br label %472

469:                                              ; preds = %454
  %470 = icmp eq i32 %455, -1
  br i1 %470, label %471, label %472

471:                                              ; preds = %469
  store i32 5, i32* %370, align 4
  br label %472

472:                                              ; preds = %471, %469, %468, %466, %465, %463, %454
  %473 = phi i32 [ 5, %471 ], [ %455, %469 ], [ %455, %468 ], [ %455, %466 ], [ %455, %465 ], [ %455, %463 ], [ %455, %454 ]
  %474 = phi i32 [ %456, %471 ], [ %456, %469 ], [ 5, %468 ], [ %456, %466 ], [ %456, %465 ], [ %456, %463 ], [ %456, %454 ]
  %475 = phi i32 [ %457, %471 ], [ %457, %469 ], [ %457, %468 ], [ %457, %466 ], [ 5, %465 ], [ %457, %463 ], [ %457, %454 ]
  %476 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 6
  %477 = load i8, i8* %476, align 1
  %478 = icmp eq i8 %477, 1
  %479 = zext i1 %478 to i32
  %480 = add nuw nsw i32 %462, %479
  switch i32 %480, label %490 [
    i32 1, label %487
    i32 2, label %484
    i32 3, label %481
  ]

481:                                              ; preds = %472
  %482 = icmp eq i32 %475, -1
  br i1 %482, label %483, label %490

483:                                              ; preds = %481
  store i32 6, i32* %376, align 4
  br label %490

484:                                              ; preds = %472
  %485 = icmp eq i32 %474, -1
  br i1 %485, label %486, label %490

486:                                              ; preds = %484
  store i32 6, i32* %375, align 16
  br label %490

487:                                              ; preds = %472
  %488 = icmp eq i32 %473, -1
  br i1 %488, label %489, label %490

489:                                              ; preds = %487
  store i32 6, i32* %370, align 4
  br label %490

490:                                              ; preds = %489, %487, %486, %484, %483, %481, %472
  %491 = phi i32 [ 6, %489 ], [ %473, %487 ], [ %473, %486 ], [ %473, %484 ], [ %473, %483 ], [ %473, %481 ], [ %473, %472 ]
  %492 = phi i32 [ %474, %489 ], [ %474, %487 ], [ 6, %486 ], [ %474, %484 ], [ %474, %483 ], [ %474, %481 ], [ %474, %472 ]
  %493 = phi i32 [ %475, %489 ], [ %475, %487 ], [ %475, %486 ], [ %475, %484 ], [ 6, %483 ], [ %475, %481 ], [ %475, %472 ]
  %494 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 7
  %495 = load i8, i8* %494, align 1
  %496 = icmp eq i8 %495, 1
  %497 = zext i1 %496 to i32
  %498 = add nuw nsw i32 %480, %497
  switch i32 %498, label %508 [
    i32 1, label %505
    i32 2, label %502
    i32 3, label %499
  ]

499:                                              ; preds = %490
  %500 = icmp eq i32 %493, -1
  br i1 %500, label %501, label %508

501:                                              ; preds = %499
  store i32 7, i32* %376, align 4
  br label %508

502:                                              ; preds = %490
  %503 = icmp eq i32 %492, -1
  br i1 %503, label %504, label %390

504:                                              ; preds = %502
  store i32 7, i32* %375, align 16
  br label %390

505:                                              ; preds = %490
  %506 = icmp eq i32 %491, -1
  br i1 %506, label %507, label %508

507:                                              ; preds = %505
  store i32 7, i32* %370, align 4
  br label %508

508:                                              ; preds = %507, %505, %501, %499, %490
  %509 = phi i32 [ %493, %507 ], [ %493, %505 ], [ 7, %501 ], [ %493, %499 ], [ %493, %490 ]
  %510 = phi i32 [ 7, %507 ], [ %491, %505 ], [ %491, %501 ], [ %491, %499 ], [ %491, %490 ]
  %511 = icmp eq i32 %492, -1
  br i1 %511, label %389, label %390

512:                                              ; preds = %351, %355, %359
  br i1 %347, label %515, label %513

513:                                              ; preds = %512
  %514 = load i32, i32* %8, align 4
  br label %522

515:                                              ; preds = %371, %348, %512
  %516 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 50
  %517 = load i64, i64* %516, align 8
  %518 = icmp sgt i64 %517, 4294967295
  br i1 %518, label %562, label %519

519:                                              ; preds = %515
  %520 = sdiv i64 %517, 2
  %521 = trunc i64 %520 to i32
  br label %562

522:                                              ; preds = %513, %394, %390
  %523 = phi i32 [ %514, %513 ], [ %360, %394 ], [ %360, %390 ]
  %524 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %525 = load double, double* %524, align 16
  %526 = icmp sgt i32 %523, 1
  br i1 %526, label %527, label %539

527:                                              ; preds = %522
  %528 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %529 = load i32, i32* %528, align 4
  %530 = icmp eq i32 %529, 1
  br i1 %530, label %531, label %539

531:                                              ; preds = %527
  %532 = load i32, i32* %6, align 8
  %533 = mul nsw i32 %532, %523
  %534 = load i32, i32* %11, align 4
  %535 = add nsw i32 %533, %534
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %536, i32 3
  %538 = load double, double* %537, align 8
  br label %539

539:                                              ; preds = %531, %527, %522
  %540 = phi double [ %538, %531 ], [ %525, %527 ], [ %525, %522 ]
  %541 = fmul double %540, 2.000000e+00
  %542 = fadd double %541, -1.600000e+01
  %543 = fptosi double %542 to i32
  %544 = icmp sgt i32 %543, 32
  %545 = select i1 %544, i32 %543, i32 32
  %546 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %547 = load i32, i32* %546, align 8
  %548 = sitofp i32 %547 to double
  %549 = fmul double %540, 5.000000e-01
  %550 = fcmp ogt double %549, %548
  br i1 %550, label %551, label %556

551:                                              ; preds = %539
  %552 = mul nsw i32 %545, %547
  %553 = sitofp i32 %552 to double
  %554 = fdiv double %553, %549
  %555 = fptosi double %554 to i32
  br label %556

556:                                              ; preds = %551, %539
  %557 = phi i32 [ %555, %551 ], [ %545, %539 ]
  %558 = add nsw i32 %557, 16
  %559 = load i32, i32* %4, align 8
  %560 = mul nsw i32 %558, %559
  %561 = ashr i32 %560, 4
  br label %562

562:                                              ; preds = %556, %519, %515
  %563 = phi i32 [ %561, %556 ], [ %521, %519 ], [ 2147483647, %515 ]
  %564 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 12
  %565 = load i32, i32* %564, align 4
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %573, label %567

567:                                              ; preds = %562
  %568 = load i32, i32* %4, align 8
  %569 = mul i32 %568, %565
  %570 = udiv i32 %569, 100
  %571 = icmp sgt i32 %570, %563
  %572 = select i1 %571, i32 %563, i32 %570
  br label %573

573:                                              ; preds = %562, %567
  %574 = phi i32 [ %572, %567 ], [ %563, %562 ]
  %575 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %576 = load i32, i32* %575, align 8
  %577 = icmp sgt i32 %574, %576
  %578 = select i1 %577, i32 %576, i32 %574
  br label %579

579:                                              ; preds = %341, %573
  %580 = phi i32 [ %578, %573 ], [ %286, %341 ]
  %581 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %582 = load i32, i32* %581, align 4
  %583 = icmp eq i32 %582, 3
  br i1 %583, label %584, label %585

584:                                              ; preds = %579
  tail call void @vp9_cyclic_refresh_update_parameters(%struct.VP9_COMP* %0) #8
  br label %585

585:                                              ; preds = %584, %579
  %586 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  store i32 %580, i32* %586, align 4
  %587 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %588 = load i32, i32* %587, align 4
  %589 = icmp eq i32 %588, 2
  br i1 %589, label %590, label %601

590:                                              ; preds = %585
  %591 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %592 = load i32, i32* %591, align 4
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %601, label %594

594:                                              ; preds = %590
  %595 = sitofp i32 %580 to double
  %596 = zext i32 %592 to i64
  %597 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %596
  %598 = load double, double* %597, align 8
  %599 = fmul double %598, %595
  %600 = fptosi double %599 to i32
  store i32 %600, i32* %586, align 4
  br label %601

601:                                              ; preds = %585, %590, %594
  %602 = phi i32 [ %580, %590 ], [ %600, %594 ], [ %580, %585 ]
  %603 = sext i32 %602 to i64
  %604 = shl nsw i64 %603, 12
  %605 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %606 = load i32, i32* %605, align 16
  %607 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %608 = load i32, i32* %607, align 4
  %609 = mul nsw i32 %608, %606
  %610 = sext i32 %609 to i64
  %611 = sdiv i64 %604, %610
  %612 = trunc i64 %611 to i32
  %613 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 3
  store i32 %612, i32* %613, align 4
  %614 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 24
  %615 = load i32, i32* %614, align 16
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %692, label %617

617:                                              ; preds = %601
  %618 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 65
  %619 = load i64, i64* %618, align 8
  %620 = load i32, i32* %6, align 8
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 66, i64 %621
  %623 = load i64, i64* %622, align 8
  %624 = sub nsw i64 %619, %623
  %625 = load i32, i32* %11, align 4
  %626 = load i32, i32* %8, align 4
  %627 = icmp slt i32 %625, %626
  br i1 %627, label %628, label %692

628:                                              ; preds = %617
  %629 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 60
  %630 = icmp sgt i64 %624, 0
  %631 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 22
  %632 = sitofp i64 %624 to double
  %633 = fdiv double 1.000000e+07, %632
  %634 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  %635 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  br label %636

636:                                              ; preds = %688, %628
  %637 = phi i32 [ %620, %628 ], [ %689, %688 ]
  %638 = phi i32 [ %626, %628 ], [ %686, %688 ]
  %639 = phi i32 [ %625, %628 ], [ %685, %688 ]
  %640 = mul nsw i32 %638, %637
  %641 = add nsw i32 %640, %639
  %642 = sext i32 %641 to i64
  %643 = load i32, i32* %629, align 8
  %644 = icmp ne i32 %643, 0
  %645 = icmp eq i32 %638, 1
  %646 = and i1 %630, %645
  %647 = and i1 %646, %644
  br i1 %647, label %648, label %661

648:                                              ; preds = %636
  %649 = load i32, i32* %631, align 8
  %650 = icmp sgt i32 %649, 0
  br i1 %650, label %651, label %661

651:                                              ; preds = %648
  %652 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %642, i32 1
  %653 = load i32, i32* %652, align 8
  %654 = sitofp i32 %653 to double
  %655 = fdiv double %654, %633
  %656 = fptosi double %655 to i32
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %642, i32 0, i32 35
  %659 = load i64, i64* %658, align 8
  %660 = add nsw i64 %659, %657
  store i64 %660, i64* %658, align 8
  br label %673

661:                                              ; preds = %648, %636
  %662 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %642, i32 1
  %663 = load i32, i32* %662, align 8
  %664 = sitofp i32 %663 to double
  %665 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %642, i32 3
  %666 = load double, double* %665, align 8
  %667 = fdiv double %664, %666
  %668 = fptosi double %667 to i32
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %642, i32 0, i32 35
  %671 = load i64, i64* %670, align 8
  %672 = add nsw i64 %671, %669
  store i64 %672, i64* %670, align 8
  br label %673

673:                                              ; preds = %661, %651
  %674 = phi i64 [ %672, %661 ], [ %660, %651 ]
  %675 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %642, i32 0, i32 35
  %676 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %642, i32 0, i32 52
  %677 = load i64, i64* %676, align 8
  %678 = icmp slt i64 %674, %677
  %679 = select i1 %678, i64 %674, i64 %677
  store i64 %679, i64* %675, align 8
  %680 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %642, i32 0, i32 34
  store i64 %679, i64* %680, align 8
  %681 = load i32, i32* %11, align 4
  %682 = icmp eq i32 %639, %681
  br i1 %682, label %683, label %684

683:                                              ; preds = %673
  store i64 %679, i64* %634, align 8
  store i64 %679, i64* %635, align 8
  br label %684

684:                                              ; preds = %683, %673
  %685 = add nsw i32 %639, 1
  %686 = load i32, i32* %8, align 4
  %687 = icmp slt i32 %685, %686
  br i1 %687, label %688, label %690

688:                                              ; preds = %684
  %689 = load i32, i32* %6, align 8
  br label %636

690:                                              ; preds = %684
  %691 = load i32, i32* %587, align 4
  br label %692

692:                                              ; preds = %690, %617, %601
  %693 = phi i32 [ %691, %690 ], [ %588, %617 ], [ %588, %601 ]
  %694 = icmp eq i32 %693, 2
  br i1 %694, label %695, label %766

695:                                              ; preds = %692
  %696 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 69
  %697 = load i32, i32* %696, align 8
  %698 = icmp eq i32 %697, 1
  br i1 %698, label %699, label %766

699:                                              ; preds = %695
  %700 = load i32, i32* %6, align 8
  %701 = load i32, i32* %14, align 8
  %702 = icmp eq i32 %700, %701
  br i1 %702, label %703, label %766

703:                                              ; preds = %699
  %704 = load i32, i32* %11, align 4
  %705 = icmp eq i32 %704, 0
  br i1 %705, label %706, label %766

706:                                              ; preds = %703
  %707 = tail call i32 @vp9_resize_one_pass_cbr(%struct.VP9_COMP* %0)
  %708 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 118
  store i32 %707, i32* %708, align 16
  %709 = icmp eq i32 %707, 0
  br i1 %709, label %769, label %710

710:                                              ; preds = %706
  %711 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %711) #8
  store i32 -1431655766, i32* %2, align 4
  %712 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %712) #8
  store i32 -1431655766, i32* %3, align 4
  %713 = load i32, i32* %8, align 4
  %714 = icmp sgt i32 %713, 0
  %715 = load i32, i32* %6, align 8
  %716 = mul nsw i32 %715, %713
  br i1 %714, label %717, label %749

717:                                              ; preds = %710
  %718 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 121
  %719 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 122
  %720 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 1
  %721 = bitcast double* %720 to i64*
  br label %722

722:                                              ; preds = %717, %722
  %723 = phi i32 [ %716, %717 ], [ %748, %722 ]
  %724 = phi i32 [ 0, %717 ], [ %744, %722 ]
  %725 = add nsw i32 %723, %724
  %726 = sext i32 %725 to i64
  %727 = load i32, i32* %718, align 4
  %728 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %726, i32 7
  %729 = load i32, i32* %728, align 4
  %730 = mul nsw i32 %729, %727
  %731 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %726, i32 9
  store i32 %730, i32* %731, align 4
  %732 = load i32, i32* %719, align 16
  %733 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %726, i32 8
  %734 = load i32, i32* %733, align 8
  %735 = mul nsw i32 %734, %732
  %736 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %726, i32 10
  store i32 %735, i32* %736, align 8
  %737 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %726, i32 0, i32 51
  %738 = load i64, i64* %737, align 8
  %739 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %726, i32 0, i32 34
  store i64 %738, i64* %739, align 8
  %740 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %726, i32 0, i32 35
  store i64 %738, i64* %740, align 8
  %741 = load i64, i64* %721, align 8
  %742 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %726, i32 0, i32 10, i64 1
  %743 = bitcast double* %742 to i64*
  store i64 %741, i64* %743, align 8
  %744 = add nuw nsw i32 %724, 1
  %745 = load i32, i32* %8, align 4
  %746 = icmp slt i32 %744, %745
  %747 = load i32, i32* %6, align 8
  %748 = mul nsw i32 %747, %745
  br i1 %746, label %722, label %749

749:                                              ; preds = %722, %710
  %750 = phi i32 [ %716, %710 ], [ %748, %722 ]
  %751 = load i32, i32* %11, align 4
  %752 = add nsw i32 %751, %750
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 2
  %755 = load i32, i32* %754, align 8
  %756 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 3
  %757 = load i32, i32* %756, align 4
  %758 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %753, i32 9
  %759 = load i32, i32* %758, align 4
  %760 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %753, i32 10
  %761 = load i32, i32* %760, align 8
  call void @get_layer_resolution(i32 %755, i32 %757, i32 %759, i32 %761, i32* nonnull %2, i32* nonnull %3) #8
  %762 = load i32, i32* %2, align 4
  %763 = load i32, i32* %3, align 4
  %764 = call i32 @vp9_set_size_literal(%struct.VP9_COMP* %0, i32 %762, i32 %763) #8
  %765 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 70
  store i32 1, i32* %765, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %712) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %711) #8
  br label %769

766:                                              ; preds = %703, %699, %695, %692
  %767 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 118
  store i32 0, i32* %767, align 16
  %768 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 70
  store i32 0, i32* %768, align 4
  br label %769

769:                                              ; preds = %749, %706, %766
  ret void
}

declare void @vp9_svc_reset_temporal_layers(%struct.VP9_COMP*, i32) local_unnamed_addr #1

declare void @vp9_svc_check_spatial_layer_sync(%struct.VP9_COMP*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_resize_one_pass_cbr(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 121
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 122
  store i32 1, i32* %3, align 16
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 123
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 125
  store i32 0, i32* %9, align 4
  br label %154

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %12 = load i32, i32* %11, align 16
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = mul nsw i32 %14, %12
  %16 = icmp sgt i32 %15, 102239
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 9
  %18 = load i32, i32* %17, align 16
  %19 = icmp sgt i32 %18, 0
  %20 = select i1 %19, i32 60, i32 70
  %21 = select i1 %19, i32 40, i32 50
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 119
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %39 [
    i32 0, label %24
    i32 1, label %33
  ]

24:                                               ; preds = %10
  %25 = icmp sgt i32 %15, 921599
  br i1 %25, label %26, label %39

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %28, 10000
  br i1 %29, label %99, label %30

30:                                               ; preds = %26
  %31 = icmp slt i32 %28, 13333
  br i1 %31, label %32, label %39

32:                                               ; preds = %30
  store i32 1, i32* %22, align 4
  br label %104

33:                                               ; preds = %10
  %34 = icmp sgt i32 %15, 518399
  br i1 %34, label %35, label %39

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %37, 10000
  br i1 %38, label %99, label %39

39:                                               ; preds = %10, %24, %30, %35, %33
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %41 = load i32, i32* %40, align 8
  %42 = sitofp i32 %41 to double
  %43 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %44 = load double, double* %43, align 16
  %45 = fcmp olt double %44, %42
  br i1 %45, label %46, label %154

46:                                               ; preds = %39
  %47 = fmul double %44, 2.000000e+00
  %48 = fptosi double %47 to i32
  %49 = icmp slt i32 %48, 30
  %50 = select i1 %49, i32 %48, i32 30
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 123
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, %52
  store i32 %55, i32* %53, align 4
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %59 = load i64, i64* %58, align 8
  %60 = mul nsw i64 %59, 30
  %61 = sdiv i64 %60, 100
  %62 = shl i64 %61, 32
  %63 = ashr exact i64 %62, 32
  %64 = icmp slt i64 %57, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %46
  %66 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 124
  %67 = load i32, i32* %66, align 8
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %66, align 8
  br label %69

69:                                               ; preds = %65, %46
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 125
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %70, align 4
  %73 = icmp slt i32 %72, %50
  br i1 %73, label %154, label %74

74:                                               ; preds = %69
  %75 = sdiv i32 %55, %72
  %76 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 124
  %77 = load i32, i32* %76, align 8
  %78 = ashr i32 %72, 2
  %79 = icmp sgt i32 %77, %78
  %80 = and i1 %16, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %74
  switch i32 %23, label %100 [
    i32 1, label %82
    i32 0, label %101
  ]

82:                                               ; preds = %81
  store i32 2, i32* %22, align 4
  store i32 0, i32* %53, align 4
  store i32 0, i32* %70, align 4
  store i32 0, i32* %76, align 8
  br label %104

83:                                               ; preds = %74
  %84 = icmp eq i32 %23, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %87 = load i32, i32* %86, align 8
  %88 = mul nsw i32 %87, %20
  %89 = sdiv i32 %88, 100
  %90 = icmp slt i32 %75, %89
  br i1 %90, label %91, label %100

91:                                               ; preds = %85
  %92 = icmp eq i32 %23, 1
  br i1 %92, label %103, label %93

93:                                               ; preds = %91
  %94 = mul nsw i32 %87, %21
  %95 = sdiv i32 %94, 100
  %96 = icmp slt i32 %75, %95
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = icmp eq i32 %23, 2
  br i1 %98, label %101, label %100

99:                                               ; preds = %35, %26
  store i32 2, i32* %22, align 4
  br label %104

100:                                              ; preds = %97, %85, %83, %81
  store i32 0, i32* %53, align 4
  store i32 0, i32* %70, align 4
  store i32 0, i32* %76, align 8
  br label %154

101:                                              ; preds = %97, %81
  %102 = phi i32 [ 1, %81 ], [ -1, %97 ]
  store i32 1, i32* %22, align 4
  store i32 0, i32* %53, align 4
  store i32 0, i32* %70, align 4
  store i32 0, i32* %76, align 8
  br label %104

103:                                              ; preds = %93, %91
  store i32 0, i32* %22, align 4
  store i32 0, i32* %53, align 4
  store i32 0, i32* %70, align 4
  store i32 0, i32* %76, align 8
  br label %104

104:                                              ; preds = %99, %82, %32, %101, %103
  %105 = phi i32 [ 1, %103 ], [ 3, %101 ], [ 3, %32 ], [ 1, %82 ], [ 1, %99 ]
  %106 = phi i32 [ 1, %103 ], [ 4, %101 ], [ 4, %32 ], [ 2, %82 ], [ 2, %99 ]
  %107 = phi i32 [ -2, %103 ], [ %102, %101 ], [ 1, %32 ], [ 2, %82 ], [ 2, %99 ]
  store i32 %105, i32* %2, align 4
  store i32 %106, i32* %3, align 16
  %108 = mul nuw nsw i32 %106, %106
  %109 = mul nuw nsw i32 %105, %105
  %110 = trunc i32 %108 to i8
  %111 = trunc i32 %109 to i8
  %112 = udiv i8 %110, %111
  %113 = zext i8 %112 to i32
  %114 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  store i64 %115, i64* %117, align 8
  %118 = tail call i32 @vp9_calc_pframe_target_size_one_pass_cbr(%struct.VP9_COMP* %0)
  %119 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  store i32 %118, i32* %119, align 4
  %120 = icmp sgt i32 %107, -1
  br i1 %120, label %121, label %123

121:                                              ; preds = %104
  %122 = mul nsw i32 %118, %113
  br label %125

123:                                              ; preds = %104
  %124 = sdiv i32 %118, %113
  br label %125

125:                                              ; preds = %123, %121
  %126 = phi i32 [ %122, %121 ], [ %124, %123 ]
  %127 = tail call fastcc i32 @calc_active_worst_quality_one_pass_cbr(%struct.VP9_COMP* %0)
  %128 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %129 = load i32, i32* %128, align 4
  %130 = tail call i32 @vp9_rc_regulate_q(%struct.VP9_COMP* %0, i32 %126, i32 %129, i32 %127)
  %131 = icmp sgt i32 %107, 0
  br i1 %131, label %132, label %142

132:                                              ; preds = %125
  %133 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %134 = load i32, i32* %133, align 8
  %135 = mul nsw i32 %134, 90
  %136 = sdiv i32 %135, 100
  %137 = icmp sgt i32 %130, %136
  br i1 %137, label %138, label %154

138:                                              ; preds = %132
  %139 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 0
  %140 = load double, double* %139, align 8
  %141 = fmul double %140, 8.500000e-01
  store double %141, double* %139, align 8
  br label %154

142:                                              ; preds = %125
  %143 = icmp slt i32 %107, 0
  br i1 %143, label %144, label %154

144:                                              ; preds = %142
  %145 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 38
  %146 = load i32, i32* %145, align 4
  %147 = mul nsw i32 %146, 130
  %148 = sdiv i32 %147, 100
  %149 = icmp sgt i32 %130, %148
  br i1 %149, label %150, label %154

150:                                              ; preds = %144
  %151 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 0
  %152 = load double, double* %151, align 8
  %153 = fmul double %152, 9.000000e-01
  store double %153, double* %151, align 8
  br label %154

154:                                              ; preds = %132, %138, %69, %39, %100, %150, %144, %142, %7
  %155 = phi i32 [ 0, %7 ], [ 0, %142 ], [ %107, %144 ], [ %107, %150 ], [ 0, %100 ], [ 0, %39 ], [ 0, %69 ], [ %107, %138 ], [ %107, %132 ]
  ret i32 %155
}

declare void @get_layer_resolution(i32, i32, i32, i32, i32*, i32*) local_unnamed_addr #1

declare i32 @vp9_set_size_literal(%struct.VP9_COMP*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_rc_get_one_pass_cbr_params(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 108
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 17
  %12 = load i32, i32* %11, align 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %5, %14, %1
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 18
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 9
  store i32 2000, i32* %23, align 8
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 23
  store i32 0, i32* %24, align 8
  br label %27

25:                                               ; preds = %10, %14
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  store i32 1, i32* %26, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %54

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 3
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  tail call void @vp9_cyclic_refresh_set_golden_update(%struct.VP9_COMP* %0) #8
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %37 = load i32, i32* %36, align 4
  br label %46

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 13
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 14
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, %40
  %44 = sdiv i32 %43, 2
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  store i32 %44, i32* %45, align 4
  br label %46

46:                                               ; preds = %38, %35
  %47 = phi i32 [ %44, %38 ], [ %37, %35 ]
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %47, %49
  %51 = select i1 %50, i32 %49, i32 %47
  store i32 %51, i32* %28, align 4
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 1, i32* %52, align 4
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  store i32 2000, i32* %53, align 8
  br label %54

54:                                               ; preds = %46, %27
  %55 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 3
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  tail call void @vp9_cyclic_refresh_update_parameters(%struct.VP9_COMP* %0) #8
  br label %59

59:                                               ; preds = %58, %54
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %65 = load i8, i8* %64, align 4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %139, label %67

67:                                               ; preds = %59, %63
  %68 = load i32, i32* %2, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 50
  %72 = load i64, i64* %71, align 8
  %73 = icmp sgt i64 %72, 4294967295
  br i1 %73, label %121, label %74

74:                                               ; preds = %70
  %75 = sdiv i64 %72, 2
  %76 = trunc i64 %75 to i32
  br label %121

77:                                               ; preds = %67
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %79 = load double, double* %78, align 16
  %80 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %81, 1
  br i1 %82, label %83, label %97

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %97

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = mul nsw i32 %89, %81
  %91 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %90, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %94, i32 3
  %96 = load double, double* %95, align 8
  br label %97

97:                                               ; preds = %87, %83, %77
  %98 = phi double [ %96, %87 ], [ %79, %83 ], [ %79, %77 ]
  %99 = fmul double %98, 2.000000e+00
  %100 = fadd double %99, -1.600000e+01
  %101 = fptosi double %100 to i32
  %102 = icmp sgt i32 %101, 32
  %103 = select i1 %102, i32 %101, i32 32
  %104 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %105 = load i32, i32* %104, align 8
  %106 = sitofp i32 %105 to double
  %107 = fmul double %98, 5.000000e-01
  %108 = fcmp ogt double %107, %106
  br i1 %108, label %109, label %114

109:                                              ; preds = %97
  %110 = mul nsw i32 %103, %105
  %111 = sitofp i32 %110 to double
  %112 = fdiv double %111, %107
  %113 = fptosi double %112 to i32
  br label %114

114:                                              ; preds = %109, %97
  %115 = phi i32 [ %113, %109 ], [ %103, %97 ]
  %116 = add nsw i32 %115, 16
  %117 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %118 = load i32, i32* %117, align 8
  %119 = mul nsw i32 %116, %118
  %120 = ashr i32 %119, 4
  br label %121

121:                                              ; preds = %114, %74, %70
  %122 = phi i32 [ %120, %114 ], [ %76, %74 ], [ 2147483647, %70 ]
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 12
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %133, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %128 = load i32, i32* %127, align 8
  %129 = mul i32 %128, %124
  %130 = udiv i32 %129, 100
  %131 = icmp sgt i32 %130, %122
  %132 = select i1 %131, i32 %122, i32 %130
  br label %133

133:                                              ; preds = %121, %126
  %134 = phi i32 [ %132, %126 ], [ %122, %121 ]
  %135 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %134, %136
  %138 = select i1 %137, i32 %136, i32 %134
  br label %141

139:                                              ; preds = %63
  %140 = tail call i32 @vp9_calc_pframe_target_size_one_pass_cbr(%struct.VP9_COMP* %0)
  br label %141

141:                                              ; preds = %139, %133
  %142 = phi i32 [ %138, %133 ], [ %140, %139 ]
  %143 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  store i32 %142, i32* %143, align 4
  %144 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 2
  br i1 %146, label %147, label %158

147:                                              ; preds = %141
  %148 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %158, label %151

151:                                              ; preds = %147
  %152 = sitofp i32 %142 to double
  %153 = zext i32 %149 to i64
  %154 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %153
  %155 = load double, double* %154, align 8
  %156 = fmul double %155, %152
  %157 = fptosi double %156 to i32
  store i32 %157, i32* %143, align 4
  br label %158

158:                                              ; preds = %141, %147, %151
  %159 = phi i32 [ %142, %147 ], [ %157, %151 ], [ %142, %141 ]
  %160 = sext i32 %159 to i64
  %161 = shl nsw i64 %160, 12
  %162 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %163 = load i32, i32* %162, align 16
  %164 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %165 = load i32, i32* %164, align 4
  %166 = mul nsw i32 %165, %163
  %167 = sext i32 %166 to i64
  %168 = sdiv i64 %161, %167
  %169 = trunc i64 %168 to i32
  %170 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 3
  store i32 %169, i32* %170, align 4
  %171 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 24
  %172 = load i32, i32* %171, align 16
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %186, label %174

174:                                              ; preds = %158
  %175 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %176 = load i32, i32* %175, align 8
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  %179 = load i64, i64* %178, align 8
  %180 = add nsw i64 %179, %177
  %181 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 52
  %182 = load i64, i64* %181, align 8
  %183 = icmp slt i64 %180, %182
  %184 = select i1 %183, i64 %180, i64 %182
  store i64 %184, i64* %178, align 8
  %185 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  store i64 %184, i64* %185, align 8
  br label %186

186:                                              ; preds = %158, %174
  br i1 %146, label %187, label %189

187:                                              ; preds = %186
  %188 = tail call i32 @vp9_resize_one_pass_cbr(%struct.VP9_COMP* %0)
  br label %189

189:                                              ; preds = %186, %187
  %190 = phi i32 [ %188, %187 ], [ 0, %186 ]
  %191 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 118
  store i32 %190, i32* %191, align 16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* nocapture readonly, double, double, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %0, i64 0, i32 48
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %0, i64 0, i32 49
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %6
  br i1 %9, label %10, label %29

10:                                               ; preds = %4, %22
  %11 = phi i32 [ %23, %22 ], [ %8, %4 ]
  %12 = icmp eq i32 %3, 10
  %13 = select i1 %12, double 6.250000e-02, double 1.562500e-02
  %14 = icmp eq i32 %3, 8
  %15 = select i1 %14, double 2.500000e-01, double %13
  %16 = tail call signext i16 @vp9_ac_quant(i32 %11, i32 0, i32 %3) #8
  %17 = sitofp i16 %16 to double
  %18 = fmul double %15, %17
  %19 = fcmp ult double %18, %1
  br i1 %19, label %22, label %20

20:                                               ; preds = %10
  %21 = load i32, i32* %5, align 8
  br label %26

22:                                               ; preds = %10
  %23 = add nsw i32 %11, 1
  %24 = load i32, i32* %5, align 8
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %10, label %26

26:                                               ; preds = %22, %20
  %27 = phi i32 [ %21, %20 ], [ %24, %22 ]
  %28 = load i32, i32* %7, align 4
  br label %29

29:                                               ; preds = %26, %4
  %30 = phi i32 [ %6, %4 ], [ %27, %26 ]
  %31 = phi i32 [ %8, %4 ], [ %28, %26 ]
  %32 = phi i32 [ %6, %4 ], [ %11, %26 ]
  %33 = icmp slt i32 %31, %30
  br i1 %33, label %34, label %48

34:                                               ; preds = %29, %44
  %35 = phi i32 [ %45, %44 ], [ %31, %29 ]
  %36 = icmp eq i32 %3, 10
  %37 = select i1 %36, double 6.250000e-02, double 1.562500e-02
  %38 = icmp eq i32 %3, 8
  %39 = select i1 %38, double 2.500000e-01, double %37
  %40 = tail call signext i16 @vp9_ac_quant(i32 %35, i32 0, i32 %3) #8
  %41 = sitofp i16 %40 to double
  %42 = fmul double %39, %41
  %43 = fcmp ult double %42, %2
  br i1 %43, label %44, label %48

44:                                               ; preds = %34
  %45 = add nsw i32 %35, 1
  %46 = load i32, i32* %5, align 8
  %47 = icmp slt i32 %45, %46
  br i1 %47, label %34, label %48

48:                                               ; preds = %44, %34, %29
  %49 = phi i32 [ %6, %29 ], [ %35, %34 ], [ %35, %44 ]
  %50 = sub nsw i32 %49, %32
  ret i32 %50
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_rc_set_gf_interval_range(%struct.VP9_COMP* nocapture readonly, %struct.RATE_CONTROL* nocapture) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %1, i64 0, i32 14
  store i32 8, i32* %11, align 4
  %12 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %1, i64 0, i32 13
  store i32 8, i32* %12, align 8
  %13 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %1, i64 0, i32 15
  store i32 8, i32* %13, align 8
  br label %104

14:                                               ; preds = %6, %2
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 54
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %1, i64 0, i32 14
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 53
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %1, i64 0, i32 13
  store i32 %19, i32* %20, align 8
  %21 = icmp eq i32 %19, 0
  br i1 %21, label %22, label %48

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %28 = load double, double* %27, align 16
  %29 = mul nsw i32 %26, %24
  %30 = sitofp i32 %29 to double
  %31 = fmul double %28, %30
  %32 = fmul double %28, 1.250000e-01
  %33 = fptosi double %32 to i32
  %34 = icmp slt i32 %33, 16
  %35 = select i1 %34, i32 %33, i32 16
  %36 = icmp sgt i32 %35, 4
  %37 = select i1 %36, i32 %35, i32 4
  %38 = fcmp ugt double %31, 1.658880e+08
  br i1 %38, label %39, label %46

39:                                               ; preds = %22
  %40 = fmul double %31, 4.000000e+00
  %41 = fdiv double %40, 1.658880e+08
  %42 = fadd double %41, 5.000000e-01
  %43 = fptosi double %42 to i32
  %44 = icmp sgt i32 %37, %43
  %45 = select i1 %44, i32 %37, i32 %43
  br label %46

46:                                               ; preds = %22, %39
  %47 = phi i32 [ %45, %39 ], [ %37, %22 ]
  store i32 %47, i32* %20, align 8
  br label %48

48:                                               ; preds = %46, %14
  %49 = phi i32 [ %47, %46 ], [ %19, %14 ]
  %50 = icmp eq i32 %16, 0
  br i1 %50, label %51, label %62

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %53 = load double, double* %52, align 16
  %54 = fmul double %53, 7.500000e-01
  %55 = fptosi double %54 to i32
  %56 = icmp slt i32 %55, 16
  %57 = select i1 %56, i32 %55, i32 16
  %58 = and i32 %57, 1
  %59 = add nsw i32 %58, %57
  %60 = icmp sgt i32 %59, %49
  %61 = select i1 %60, i32 %59, i32 %49
  store i32 %61, i32* %17, align 4
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %16, %48 ]
  %64 = getelementptr inbounds %struct.RATE_CONTROL, %struct.RATE_CONTROL* %1, i64 0, i32 15
  store i32 250, i32* %64, align 8
  %65 = icmp sgt i32 %63, 250
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  store i32 250, i32* %17, align 4
  br label %67

67:                                               ; preds = %66, %62
  %68 = phi i32 [ 250, %66 ], [ %63, %62 ]
  %69 = icmp slt i32 %49, %68
  %70 = select i1 %69, i32 %49, i32 %68
  store i32 %70, i32* %20, align 8
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 59
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %104

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %76 = load i32, i32* %75, align 16
  %77 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %76
  %80 = icmp sgt i32 %76, %78
  %81 = select i1 %80, i32 %76, i32 %78
  br label %82

82:                                               ; preds = %113, %74
  %83 = phi i64 [ 10, %74 ], [ %114, %113 ]
  %84 = getelementptr inbounds [14 x %struct.Vp9LevelSpec], [14 x %struct.Vp9LevelSpec]* @vp9_level_defs, i64 0, i64 %83, i32 2
  %85 = load i32, i32* %84, align 16
  %86 = icmp ult i32 %85, %79
  br i1 %86, label %101, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds [14 x %struct.Vp9LevelSpec], [14 x %struct.Vp9LevelSpec]* @vp9_level_defs, i64 0, i64 %83, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = icmp ult i32 %89, %81
  br i1 %90, label %101, label %91

91:                                               ; preds = %109, %87
  %92 = phi i64 [ %83, %87 ], [ %102, %109 ]
  %93 = and i64 %92, 4294967295
  %94 = getelementptr inbounds [14 x %struct.Vp9LevelSpec], [14 x %struct.Vp9LevelSpec]* @vp9_level_defs, i64 0, i64 %93, i32 8
  %95 = load i32, i32* %94, align 4
  %96 = icmp sgt i32 %70, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %91
  %98 = add nsw i32 %95, 1
  store i32 %98, i32* %20, align 8
  %99 = icmp sgt i32 %68, %98
  %100 = select i1 %99, i32 %68, i32 %98
  store i32 %100, i32* %17, align 4
  br label %104

101:                                              ; preds = %87, %82
  %102 = or i64 %83, 1
  %103 = icmp eq i64 %102, 255
  br i1 %103, label %104, label %105

104:                                              ; preds = %101, %97, %91, %67, %10
  ret void

105:                                              ; preds = %101
  %106 = getelementptr inbounds [14 x %struct.Vp9LevelSpec], [14 x %struct.Vp9LevelSpec]* @vp9_level_defs, i64 0, i64 %102, i32 2
  %107 = load i32, i32* %106, align 16
  %108 = icmp ult i32 %107, %79
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds [14 x %struct.Vp9LevelSpec], [14 x %struct.Vp9LevelSpec]* @vp9_level_defs, i64 0, i64 %102, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = icmp ult i32 %111, %81
  br i1 %112, label %113, label %91

113:                                              ; preds = %109, %105
  %114 = add nuw nsw i64 %83, 2
  br label %82
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_rc_update_framerate(%struct.VP9_COMP* nocapture) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 8
  %4 = load i64, i64* %3, align 8
  %5 = sitofp i64 %4 to double
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %7 = load double, double* %6, align 16
  %8 = fdiv double %5, %7
  %9 = fptosi double %8 to i32
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 38
  %12 = load i32, i32* %11, align 8
  %13 = mul nsw i32 %12, %9
  %14 = sdiv i32 %13, 100
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 26
  %16 = icmp sgt i32 %13, 20099
  %17 = select i1 %16, i32 %14, i32 200
  store i32 %17, i32* %15, align 4
  %18 = sext i32 %9 to i64
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 39
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %21, %18
  %23 = sdiv i64 %22, 100
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 31
  %26 = load i32, i32* %25, align 8
  %27 = mul nsw i32 %26, 250
  %28 = icmp sgt i32 %27, 4000000
  %29 = select i1 %28, i32 %27, i32 4000000
  %30 = icmp sgt i32 %29, %24
  %31 = select i1 %30, i32 %29, i32 %24
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  store i32 %31, i32* %32, align 8
  tail call void @vp9_rc_set_gf_interval_range(%struct.VP9_COMP* %0, %struct.RATE_CONTROL* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_set_target_rate(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 12
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %13 = load i32, i32* %12, align 8
  %14 = mul i32 %13, %9
  %15 = udiv i32 %14, 100
  %16 = icmp sgt i32 %15, %3
  %17 = select i1 %16, i32 %3, i32 %15
  br label %18

18:                                               ; preds = %7, %11
  %19 = phi i32 [ %17, %11 ], [ %3, %7 ]
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %19, %21
  %23 = select i1 %22, i32 %21, i32 %19
  br label %56

24:                                               ; preds = %1
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 26
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %28 = load i32, i32* %27, align 8
  %29 = ashr i32 %28, 5
  %30 = icmp sgt i32 %26, %29
  %31 = select i1 %30, i32 %26, i32 %29
  %32 = icmp sgt i32 %31, %3
  %33 = select i1 %32, i32 %31, i32 %3
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %24
  %38 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  %41 = select i1 %40, i32 %33, i32 %31
  br label %42

42:                                               ; preds = %37, %24
  %43 = phi i32 [ %33, %24 ], [ %41, %37 ]
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %45 = load i32, i32* %44, align 8
  %46 = icmp sgt i32 %43, %45
  %47 = select i1 %46, i32 %45, i32 %43
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 13
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %42
  %52 = mul i32 %49, %28
  %53 = udiv i32 %52, 100
  %54 = icmp slt i32 %47, %53
  %55 = select i1 %54, i32 %47, i32 %53
  br label %56

56:                                               ; preds = %51, %42, %18
  %57 = phi i32 [ %23, %18 ], [ %55, %51 ], [ %47, %42 ]
  %58 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 40
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %144

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %63 = load i32, i32* %62, align 4
  switch i32 %63, label %144 [
    i32 0, label %64
    i32 2, label %64
  ]

64:                                               ; preds = %61, %61
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 36
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 2, i32 24
  %68 = load double, double* %67, align 8
  %69 = fptosi double %68 to i32
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 %69, %71
  %73 = icmp ult i32 %72, 16
  %74 = select i1 %73, i32 %72, i32 16
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %100

76:                                               ; preds = %64
  %77 = icmp sgt i64 %66, 0
  %78 = zext i32 %74 to i64
  %79 = sdiv i64 %66, %78
  %80 = trunc i64 %79 to i32
  %81 = sub i32 0, %80
  %82 = select i1 %77, i32 %80, i32 %81
  %83 = sdiv i32 %57, 2
  %84 = icmp slt i32 %82, %83
  %85 = select i1 %84, i32 %82, i32 %83
  br i1 %77, label %86, label %92

86:                                               ; preds = %76
  %87 = sext i32 %85 to i64
  %88 = icmp sgt i64 %66, %87
  %89 = trunc i64 %66 to i32
  %90 = select i1 %88, i32 %85, i32 %89
  %91 = add nsw i32 %90, %57
  br label %100

92:                                               ; preds = %76
  %93 = sub nsw i32 0, %85
  %94 = sext i32 %93 to i64
  %95 = icmp slt i64 %66, %94
  %96 = trunc i64 %66 to i32
  %97 = sub i32 0, %96
  %98 = select i1 %95, i32 %85, i32 %97
  %99 = sub nsw i32 %57, %98
  br label %100

100:                                              ; preds = %92, %86, %64
  %101 = phi i32 [ %91, %86 ], [ %99, %92 ], [ %57, %64 ]
  br i1 %6, label %144, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %104 = load i8, i8* %103, align 4
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %144

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %108 = load i32, i32* %107, align 16
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %144

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %144

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %144

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 37
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %144, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %124 = load i32, i32* %123, align 8
  %125 = icmp sgt i32 %124, %101
  %126 = select i1 %125, i32 %124, i32 %101
  %127 = sext i32 %126 to i64
  %128 = icmp slt i64 %120, %127
  %129 = select i1 %128, i64 %120, i64 %127
  %130 = shl i64 %129, 32
  %131 = ashr exact i64 %130, 32
  %132 = sdiv i32 %126, 8
  %133 = sext i32 %132 to i64
  %134 = sdiv i64 %120, 8
  %135 = icmp slt i64 %134, %133
  %136 = select i1 %135, i64 %133, i64 %134
  %137 = icmp slt i64 %131, %136
  %138 = select i1 %137, i64 %131, i64 %136
  %139 = trunc i64 %138 to i32
  %140 = add nsw i32 %101, %139
  %141 = shl i64 %138, 32
  %142 = ashr exact i64 %141, 32
  %143 = sub nsw i64 %120, %142
  store i64 %143, i64* %119, align 8
  br label %144

144:                                              ; preds = %122, %118, %114, %110, %106, %102, %100, %61, %56
  %145 = phi i32 [ %57, %61 ], [ %57, %56 ], [ %101, %100 ], [ %101, %118 ], [ %140, %122 ], [ %101, %114 ], [ %101, %110 ], [ %101, %106 ], [ %101, %102 ]
  %146 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  store i32 %145, i32* %146, align 4
  %147 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 2
  br i1 %149, label %150, label %161

150:                                              ; preds = %144
  %151 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %161, label %154

154:                                              ; preds = %150
  %155 = sitofp i32 %145 to double
  %156 = zext i32 %152 to i64
  %157 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %156
  %158 = load double, double* %157, align 8
  %159 = fmul double %158, %155
  %160 = fptosi double %159 to i32
  store i32 %160, i32* %146, align 4
  br label %161

161:                                              ; preds = %144, %150, %154
  %162 = phi i32 [ %145, %150 ], [ %160, %154 ], [ %145, %144 ]
  %163 = sext i32 %162 to i64
  %164 = shl nsw i64 %163, 12
  %165 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %166 = load i32, i32* %165, align 16
  %167 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %168 = load i32, i32* %167, align 4
  %169 = mul nsw i32 %168, %166
  %170 = sext i32 %169 to i64
  %171 = sdiv i64 %164, %170
  %172 = trunc i64 %171 to i32
  %173 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 3
  store i32 %172, i32* %173, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc i32 @calc_active_worst_quality_one_pass_cbr(%struct.VP9_COMP* nocapture readonly) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %3 = load i64, i64* %2, align 8
  %4 = ashr i64 %3, 3
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = mul nsw i32 %6, 5
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %13 = load i8, i8* %12, align 4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 78
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 80
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %1, %19, %15, %11
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %25 = load i32, i32* %24, align 8
  br label %113

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %28, %7
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %37

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %31, %34
  %36 = select i1 %35, i32 %31, i32 %34
  br label %37

37:                                               ; preds = %32, %26
  %38 = phi i32 [ %31, %26 ], [ %36, %32 ]
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %40 = load i32, i32* %39, align 8
  %41 = mul nsw i32 %38, 5
  %42 = ashr i32 %41, 2
  %43 = icmp slt i32 %40, %42
  %44 = select i1 %43, i32 %40, i32 %42
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %68, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %50 = load i32, i32* %49, align 16
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %68

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %55, i32 14
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %55, i32 0, i32 4, i64 0
  %61 = load i32, i32* %60, align 8
  %62 = icmp slt i32 %38, %61
  %63 = select i1 %62, i32 %38, i32 %61
  %64 = mul nsw i32 %63, 9
  %65 = ashr i32 %64, 3
  %66 = icmp slt i32 %40, %65
  %67 = select i1 %66, i32 %40, i32 %65
  br label %68

68:                                               ; preds = %52, %59, %37, %48
  %69 = phi i32 [ %44, %48 ], [ %44, %37 ], [ %44, %52 ], [ %67, %59 ]
  %70 = phi i32 [ %38, %48 ], [ %38, %37 ], [ %38, %52 ], [ %63, %59 ]
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  %72 = load i64, i64* %71, align 8
  %73 = icmp slt i64 %3, %72
  br i1 %73, label %74, label %96

74:                                               ; preds = %68
  %75 = sdiv i32 %69, 3
  %76 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 62
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 1
  %79 = ashr i32 %69, 3
  %80 = select i1 %78, i32 %79, i32 %75
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %113, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 52
  %84 = load i64, i64* %83, align 8
  %85 = sub nsw i64 %84, %3
  %86 = sext i32 %80 to i64
  %87 = sdiv i64 %85, %86
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %82
  %90 = sub nsw i64 %72, %3
  %91 = sdiv i64 %90, %87
  %92 = trunc i64 %91 to i32
  br label %93

93:                                               ; preds = %82, %89
  %94 = phi i32 [ %92, %89 ], [ 0, %82 ]
  %95 = sub nsw i32 %69, %94
  br label %113

96:                                               ; preds = %68
  %97 = icmp sgt i64 %72, %4
  br i1 %97, label %98, label %113

98:                                               ; preds = %96
  %99 = icmp eq i64 %4, 0
  br i1 %99, label %113, label %100

100:                                              ; preds = %98
  %101 = sub nsw i64 %3, %4
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %100
  %104 = sub nsw i32 %40, %70
  %105 = sext i32 %104 to i64
  %106 = sub nsw i64 %3, %72
  %107 = mul nsw i64 %106, %105
  %108 = sdiv i64 %107, %101
  %109 = trunc i64 %108 to i32
  br label %110

110:                                              ; preds = %100, %103
  %111 = phi i32 [ %109, %103 ], [ 0, %100 ]
  %112 = add nsw i32 %111, %70
  br label %113

113:                                              ; preds = %96, %110, %98, %74, %93, %23
  %114 = phi i32 [ %25, %23 ], [ %112, %110 ], [ %69, %98 ], [ %95, %93 ], [ %69, %74 ], [ %40, %96 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_scene_detection_onepass(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = alloca [25 x %struct.yv12_buffer_config*], align 16
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 14
  %4 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %3, align 8
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 16
  %6 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %5, align 16
  %7 = icmp eq %struct.yv12_buffer_config* %4, null
  %8 = icmp eq %struct.yv12_buffer_config* %6, null
  %9 = or i1 %7, %8
  br i1 %9, label %1028, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 22
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %1028, label %18

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 13
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 13
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 11
  %32 = load i32, i32* %31, align 16
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %1028

34:                                               ; preds = %18
  %35 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 71
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 68
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %42 = load i32, i32* %41, align 16
  %43 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 62
  %44 = load i32, i32* %43, align 16
  %45 = icmp eq i32 %42, %44
  %46 = icmp eq i32 %24, %38
  %47 = and i1 %46, %45
  %48 = icmp eq i32 %26, %36
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %1028

50:                                               ; preds = %34
  %51 = bitcast [25 x %struct.yv12_buffer_config*]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %51) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 0, i64 200, i1 false)
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 35
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 33
  %55 = load i32, i32* %54, align 16
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 11
  %57 = load i32, i32* %56, align 8
  %58 = icmp slt i32 %57, 6
  %59 = select i1 %58, i32 240000, i32 140000
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 62
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 1
  %63 = select i1 %62, i32 20000, i32 65000
  %64 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  %67 = select i1 %66, float 0x4000CCCCC0000000, float 8.000000e+00
  br i1 %13, label %77, label %68

68:                                               ; preds = %50
  %69 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = icmp sgt i32 %70, 1
  br i1 %71, label %72, label %77

72:                                               ; preds = %68
  %73 = add nsw i32 %24, 7
  %74 = add nsw i32 %26, 7
  %75 = ashr i32 %73, 3
  %76 = ashr i32 %74, 3
  br label %77

77:                                               ; preds = %50, %72, %68
  %78 = phi i32 [ %75, %72 ], [ %53, %68 ], [ %53, %50 ]
  %79 = phi i32 [ %76, %72 ], [ %55, %68 ], [ %55, %50 ]
  %80 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 19
  %81 = load i32, i32* %80, align 8
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %222

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %92

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 10
  %89 = load %struct.lookahead_ctx*, %struct.lookahead_ctx** %88, align 8
  %90 = tail call i32 @vp9_lookahead_depth(%struct.lookahead_ctx* %89) #8
  %91 = add nsw i32 %90, -1
  br label %92

92:                                               ; preds = %83, %87
  %93 = phi i32 [ %91, %87 ], [ 2, %83 ]
  %94 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 10
  %95 = load %struct.lookahead_ctx*, %struct.lookahead_ctx** %94, align 8
  %96 = tail call i32 @vp9_lookahead_depth(%struct.lookahead_ctx* %95) #8
  %97 = add nsw i32 %96, -1
  %98 = icmp sgt i32 %93, 0
  br i1 %98, label %99, label %114

99:                                               ; preds = %92
  %100 = zext i32 %93 to i64
  br label %101

101:                                              ; preds = %111, %99
  %102 = phi i64 [ 0, %99 ], [ %112, %111 ]
  %103 = trunc i64 %102 to i32
  %104 = sub nsw i32 %97, %103
  %105 = icmp sgt i32 %104, -1
  br i1 %105, label %106, label %111

106:                                              ; preds = %101
  %107 = load %struct.lookahead_ctx*, %struct.lookahead_ctx** %94, align 8
  %108 = tail call %struct.lookahead_entry* @vp9_lookahead_peek(%struct.lookahead_ctx* %107, i32 %104) #8
  %109 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %108, i64 0, i32 0
  %110 = getelementptr inbounds [25 x %struct.yv12_buffer_config*], [25 x %struct.yv12_buffer_config*]* %2, i64 0, i64 %102
  store %struct.yv12_buffer_config* %109, %struct.yv12_buffer_config** %110, align 8
  br label %111

111:                                              ; preds = %106, %101
  %112 = add nuw nsw i64 %102, 1
  %113 = icmp eq i64 %112, %100
  br i1 %113, label %114, label %101

114:                                              ; preds = %111, %92
  %115 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 1
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 0
  %118 = load i64, i64* %117, align 8
  %119 = uitofp i64 %118 to float
  %120 = fmul float %67, %119
  %121 = fptoui float %120 to i32
  %122 = icmp ugt i32 %63, %121
  %123 = select i1 %122, i32 %63, i32 %121
  %124 = zext i32 %123 to i64
  %125 = icmp ugt i64 %116, %124
  br i1 %125, label %126, label %130

126:                                              ; preds = %114
  %127 = load i32, i32* %84, align 4
  %128 = load i32, i32* %80, align 8
  %129 = icmp ugt i32 %127, %128
  br i1 %129, label %131, label %130

130:                                              ; preds = %126, %114
  br label %131

131:                                              ; preds = %126, %130
  %132 = phi i32 [ 0, %130 ], [ 1, %126 ]
  store i32 %132, i32* %39, align 8
  %133 = icmp ne i32 %132, 0
  %134 = zext i32 %59 to i64
  %135 = icmp ugt i64 %116, %134
  %136 = and i1 %135, %133
  %137 = zext i1 %136 to i32
  %138 = icmp eq i64 %116, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %131
  %140 = mul i64 %118, 3
  %141 = add i64 %140, %116
  %142 = lshr i64 %141, 2
  store i64 %142, i64* %117, align 8
  br label %143

143:                                              ; preds = %131, %139
  %144 = load i32, i32* %80, align 8
  %145 = icmp sgt i32 %144, 2
  br i1 %145, label %146, label %220

146:                                              ; preds = %143
  %147 = add nsw i32 %144, -1
  %148 = sext i32 %147 to i64
  %149 = icmp sgt i64 %148, 2
  %150 = select i1 %149, i64 %148, i64 2
  %151 = add nsw i64 %150, -1
  %152 = icmp ult i64 %151, 4
  br i1 %152, label %211, label %153

153:                                              ; preds = %146
  %154 = and i64 %151, -4
  %155 = or i64 %154, 1
  %156 = add nsw i64 %154, -4
  %157 = lshr exact i64 %156, 2
  %158 = add nuw nsw i64 %157, 1
  %159 = and i64 %158, 1
  %160 = icmp eq i64 %156, 0
  br i1 %160, label %193, label %161

161:                                              ; preds = %153
  %162 = sub nuw nsw i64 %158, %159
  br label %163

163:                                              ; preds = %163, %161
  %164 = phi i64 [ 0, %161 ], [ %190, %163 ]
  %165 = phi i64 [ %162, %161 ], [ %191, %163 ]
  %166 = or i64 %164, 1
  %167 = add nuw nsw i64 %166, 1
  %168 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %167
  %169 = bitcast i64* %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 8
  %171 = getelementptr inbounds i64, i64* %168, i64 2
  %172 = bitcast i64* %171 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 8
  %174 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %166
  %175 = bitcast i64* %174 to <2 x i64>*
  store <2 x i64> %170, <2 x i64>* %175, align 8
  %176 = getelementptr inbounds i64, i64* %174, i64 2
  %177 = bitcast i64* %176 to <2 x i64>*
  store <2 x i64> %173, <2 x i64>* %177, align 8
  %178 = or i64 %164, 5
  %179 = add nuw nsw i64 %178, 1
  %180 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %179
  %181 = bitcast i64* %180 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8
  %183 = getelementptr inbounds i64, i64* %180, i64 2
  %184 = bitcast i64* %183 to <2 x i64>*
  %185 = load <2 x i64>, <2 x i64>* %184, align 8
  %186 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %178
  %187 = bitcast i64* %186 to <2 x i64>*
  store <2 x i64> %182, <2 x i64>* %187, align 8
  %188 = getelementptr inbounds i64, i64* %186, i64 2
  %189 = bitcast i64* %188 to <2 x i64>*
  store <2 x i64> %185, <2 x i64>* %189, align 8
  %190 = add i64 %164, 8
  %191 = add i64 %165, -2
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %163, !llvm.loop !6

193:                                              ; preds = %163, %153
  %194 = phi i64 [ 0, %153 ], [ %190, %163 ]
  %195 = icmp eq i64 %159, 0
  br i1 %195, label %209, label %196

196:                                              ; preds = %193
  %197 = or i64 %194, 1
  %198 = add nuw nsw i64 %197, 1
  %199 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %198
  %200 = bitcast i64* %199 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 8
  %202 = getelementptr inbounds i64, i64* %199, i64 2
  %203 = bitcast i64* %202 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 8
  %205 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %197
  %206 = bitcast i64* %205 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %206, align 8
  %207 = getelementptr inbounds i64, i64* %205, i64 2
  %208 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %208, align 8
  br label %209

209:                                              ; preds = %193, %196
  %210 = icmp eq i64 %151, %154
  br i1 %210, label %220, label %211

211:                                              ; preds = %209, %146
  %212 = phi i64 [ 1, %146 ], [ %155, %209 ]
  br label %213

213:                                              ; preds = %211, %213
  %214 = phi i64 [ %215, %213 ], [ %212, %211 ]
  %215 = add nuw nsw i64 %214, 1
  %216 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %215
  %217 = load i64, i64* %216, align 8
  %218 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %214
  store i64 %217, i64* %218, align 8
  %219 = icmp slt i64 %215, %148
  br i1 %219, label %213, label %220, !llvm.loop !7

220:                                              ; preds = %213, %209, %143
  %221 = icmp sgt i32 %93, 0
  br i1 %221, label %222, label %425

222:                                              ; preds = %77, %220
  %223 = phi i64 [ %116, %220 ], [ 0, %77 ]
  %224 = phi i32 [ %137, %220 ], [ 0, %77 ]
  %225 = phi i32 [ %93, %220 ], [ 1, %77 ]
  %226 = phi i32 [ %97, %220 ], [ 0, %77 ]
  %227 = phi i32 [ %144, %220 ], [ %81, %77 ]
  %228 = add i32 %226, 1
  %229 = add nsw i32 %78, 7
  %230 = sdiv i32 %229, 8
  %231 = add nsw i32 %79, 7
  %232 = sdiv i32 %231, 8
  %233 = icmp sgt i32 %79, 0
  %234 = icmp sgt i32 %78, 0
  %235 = add nsw i32 %232, -1
  %236 = add nsw i32 %230, -1
  %237 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 12, i32 0
  %238 = shl i32 %230, 6
  %239 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 0
  %240 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %241 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %242 = zext i32 %59 to i64
  %243 = zext i32 %225 to i64
  br label %244

244:                                              ; preds = %423, %222
  %245 = phi i32 [ %227, %222 ], [ %424, %423 ]
  %246 = phi i64 [ 0, %222 ], [ %421, %423 ]
  %247 = phi i8* [ %20, %222 ], [ %420, %423 ]
  %248 = phi i32 [ %22, %222 ], [ %419, %423 ]
  %249 = phi i32 [ %224, %222 ], [ %418, %423 ]
  %250 = phi i32 [ %30, %222 ], [ %417, %423 ]
  %251 = phi i8* [ %28, %222 ], [ %416, %423 ]
  %252 = icmp eq i32 %245, 0
  br i1 %252, label %292, label %253

253:                                              ; preds = %244
  %254 = getelementptr inbounds [25 x %struct.yv12_buffer_config*], [25 x %struct.yv12_buffer_config*]* %2, i64 0, i64 %246
  %255 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %254, align 8
  %256 = icmp eq %struct.yv12_buffer_config* %255, null
  br i1 %256, label %415, label %257

257:                                              ; preds = %253
  %258 = add nuw nsw i64 %246, 1
  %259 = getelementptr inbounds [25 x %struct.yv12_buffer_config*], [25 x %struct.yv12_buffer_config*]* %2, i64 0, i64 %258
  %260 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %259, align 8
  %261 = icmp eq %struct.yv12_buffer_config* %260, null
  br i1 %261, label %415, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %255, i64 0, i32 0
  %264 = load i32, i32* %263, align 8
  %265 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %260, i64 0, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %264, %266
  br i1 %267, label %268, label %415

268:                                              ; preds = %262
  %269 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %255, i64 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %260, i64 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %270, %272
  br i1 %273, label %274, label %415

274:                                              ; preds = %268
  %275 = trunc i64 %246 to i32
  %276 = sub i32 %228, %275
  %277 = icmp sgt i32 %245, 0
  br i1 %277, label %278, label %292

278:                                              ; preds = %274
  %279 = getelementptr inbounds [25 x %struct.yv12_buffer_config*], [25 x %struct.yv12_buffer_config*]* %2, i64 0, i64 %246
  %280 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %279, align 8
  %281 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %280, i64 0, i32 13
  %282 = load i8*, i8** %281, align 8
  %283 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %280, i64 0, i32 4
  %284 = load i32, i32* %283, align 8
  %285 = add nuw nsw i64 %246, 1
  %286 = getelementptr inbounds [25 x %struct.yv12_buffer_config*], [25 x %struct.yv12_buffer_config*]* %2, i64 0, i64 %285
  %287 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %286, align 8
  %288 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %287, i64 0, i32 13
  %289 = load i8*, i8** %288, align 8
  %290 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %287, i64 0, i32 4
  %291 = load i32, i32* %290, align 8
  br label %292

292:                                              ; preds = %244, %278, %274
  %293 = phi i32 [ %276, %278 ], [ %276, %274 ], [ 0, %244 ]
  %294 = phi i8* [ %289, %278 ], [ %251, %274 ], [ %251, %244 ]
  %295 = phi i32 [ %291, %278 ], [ %250, %274 ], [ %250, %244 ]
  %296 = phi i32 [ %284, %278 ], [ %248, %274 ], [ %248, %244 ]
  %297 = phi i8* [ %282, %278 ], [ %247, %274 ], [ %247, %244 ]
  br i1 %233, label %298, label %367

298:                                              ; preds = %292
  %299 = shl i32 %296, 6
  %300 = sub nsw i32 %299, %238
  %301 = sext i32 %300 to i64
  %302 = shl i32 %295, 6
  %303 = sub nsw i32 %302, %238
  %304 = sext i32 %303 to i64
  br label %305

305:                                              ; preds = %298, %352
  %306 = phi i32 [ 0, %298 ], [ %357, %352 ]
  %307 = phi i64 [ 0, %298 ], [ %356, %352 ]
  %308 = phi i32 [ 0, %298 ], [ %360, %352 ]
  %309 = phi i8* [ %297, %298 ], [ %358, %352 ]
  %310 = phi i32 [ 0, %298 ], [ %354, %352 ]
  %311 = phi i8* [ %294, %298 ], [ %359, %352 ]
  br i1 %234, label %312, label %352

312:                                              ; preds = %305
  %313 = icmp ne i32 %308, 0
  %314 = icmp slt i32 %308, %235
  %315 = and i32 %308, 1
  br label %316

316:                                              ; preds = %312, %344
  %317 = phi i32 [ %306, %312 ], [ %347, %344 ]
  %318 = phi i64 [ %307, %312 ], [ %346, %344 ]
  %319 = phi i32 [ 0, %312 ], [ %350, %344 ]
  %320 = phi i8* [ %309, %312 ], [ %348, %344 ]
  %321 = phi i32 [ %310, %312 ], [ %345, %344 ]
  %322 = phi i8* [ %311, %312 ], [ %349, %344 ]
  %323 = icmp ne i32 %319, 0
  %324 = and i1 %313, %323
  %325 = and i1 %314, %324
  %326 = icmp slt i32 %319, %236
  %327 = and i1 %326, %325
  br i1 %327, label %328, label %344

328:                                              ; preds = %316
  %329 = or i32 %319, %308
  %330 = and i32 %329, 1
  %331 = icmp ne i32 %330, 0
  %332 = and i32 %315, %319
  %333 = icmp eq i32 %332, 0
  %334 = and i1 %333, %331
  br i1 %334, label %344, label %335

335:                                              ; preds = %328
  %336 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %237, align 16
  %337 = tail call i32 %336(i8* %320, i32 %296, i8* %322, i32 %295) #8
  %338 = zext i32 %337 to i64
  %339 = add i64 %318, %338
  %340 = add nsw i32 %317, 1
  %341 = icmp eq i32 %337, 0
  %342 = zext i1 %341 to i32
  %343 = add nsw i32 %321, %342
  br label %344

344:                                              ; preds = %328, %335, %316
  %345 = phi i32 [ %321, %316 ], [ %343, %335 ], [ %321, %328 ]
  %346 = phi i64 [ %318, %316 ], [ %339, %335 ], [ %318, %328 ]
  %347 = phi i32 [ %317, %316 ], [ %340, %335 ], [ %317, %328 ]
  %348 = getelementptr inbounds i8, i8* %320, i64 64
  %349 = getelementptr inbounds i8, i8* %322, i64 64
  %350 = add nuw nsw i32 %319, 1
  %351 = icmp slt i32 %350, %230
  br i1 %351, label %316, label %352

352:                                              ; preds = %344, %305
  %353 = phi i8* [ %311, %305 ], [ %349, %344 ]
  %354 = phi i32 [ %310, %305 ], [ %345, %344 ]
  %355 = phi i8* [ %309, %305 ], [ %348, %344 ]
  %356 = phi i64 [ %307, %305 ], [ %346, %344 ]
  %357 = phi i32 [ %306, %305 ], [ %347, %344 ]
  %358 = getelementptr inbounds i8, i8* %355, i64 %301
  %359 = getelementptr inbounds i8, i8* %353, i64 %304
  %360 = add nuw nsw i32 %308, 1
  %361 = icmp slt i32 %360, %232
  br i1 %361, label %305, label %362

362:                                              ; preds = %352
  %363 = icmp sgt i32 %357, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %362
  %365 = sext i32 %357 to i64
  %366 = udiv i64 %356, %365
  br label %367

367:                                              ; preds = %292, %364, %362
  %368 = phi i32 [ %357, %364 ], [ %357, %362 ], [ 0, %292 ]
  %369 = phi i8* [ %358, %364 ], [ %358, %362 ], [ %297, %292 ]
  %370 = phi i32 [ %354, %364 ], [ %354, %362 ], [ 0, %292 ]
  %371 = phi i8* [ %359, %364 ], [ %359, %362 ], [ %294, %292 ]
  %372 = phi i64 [ %366, %364 ], [ %356, %362 ], [ 0, %292 ]
  %373 = icmp eq i32 %293, 0
  br i1 %373, label %374, label %406

374:                                              ; preds = %367
  %375 = load i64, i64* %239, align 8
  %376 = uitofp i64 %375 to float
  %377 = fmul float %67, %376
  %378 = fptoui float %377 to i32
  %379 = icmp ugt i32 %63, %378
  %380 = select i1 %379, i32 %63, i32 %378
  %381 = zext i32 %380 to i64
  %382 = icmp ugt i64 %372, %381
  br i1 %382, label %383, label %396

383:                                              ; preds = %374
  %384 = load i32, i32* %240, align 8
  %385 = load i32, i32* %241, align 8
  %386 = add nsw i32 %385, 1
  %387 = icmp sgt i32 %384, %386
  br i1 %387, label %388, label %395

388:                                              ; preds = %383
  %389 = ashr i32 %368, 2
  %390 = mul nsw i32 %389, 3
  %391 = icmp slt i32 %370, %390
  br i1 %391, label %392, label %395

392:                                              ; preds = %388
  store i32 1, i32* %39, align 8
  %393 = icmp ugt i64 %372, %242
  %394 = select i1 %393, i32 1, i32 %249
  br label %401

395:                                              ; preds = %383, %388
  store i32 0, i32* %39, align 8
  br label %401

396:                                              ; preds = %374
  store i32 0, i32* %39, align 8
  %397 = icmp eq i64 %372, 0
  br i1 %397, label %398, label %401

398:                                              ; preds = %396
  %399 = load i32, i32* %64, align 4
  %400 = icmp eq i32 %399, 1
  br i1 %400, label %401, label %409

401:                                              ; preds = %395, %392, %396, %398
  %402 = phi i32 [ %394, %392 ], [ %249, %396 ], [ %249, %398 ], [ %249, %395 ]
  %403 = mul i64 %375, 3
  %404 = add i64 %403, %372
  %405 = lshr i64 %404, 2
  store i64 %405, i64* %239, align 8
  br label %409

406:                                              ; preds = %367
  %407 = sext i32 %293 to i64
  %408 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %407
  store i64 %372, i64* %408, align 8
  br label %409

409:                                              ; preds = %398, %401, %406
  %410 = phi i32 [ %402, %401 ], [ %249, %398 ], [ %249, %406 ]
  %411 = mul nsw i32 %368, 3
  %412 = ashr i32 %411, 2
  %413 = icmp slt i32 %370, %412
  br i1 %413, label %414, label %415

414:                                              ; preds = %409
  store i32 1, i32* %40, align 4
  br label %415

415:                                              ; preds = %409, %414, %257, %253, %262, %268
  %416 = phi i8* [ %251, %268 ], [ %251, %262 ], [ %251, %257 ], [ %251, %253 ], [ %371, %414 ], [ %371, %409 ]
  %417 = phi i32 [ %250, %268 ], [ %250, %262 ], [ %250, %257 ], [ %250, %253 ], [ %295, %414 ], [ %295, %409 ]
  %418 = phi i32 [ %249, %268 ], [ %249, %262 ], [ %249, %257 ], [ %249, %253 ], [ %410, %414 ], [ %410, %409 ]
  %419 = phi i32 [ %248, %268 ], [ %248, %262 ], [ %248, %257 ], [ %248, %253 ], [ %296, %414 ], [ %296, %409 ]
  %420 = phi i8* [ %247, %268 ], [ %247, %262 ], [ %247, %257 ], [ %247, %253 ], [ %369, %414 ], [ %369, %409 ]
  %421 = add nuw nsw i64 %246, 1
  %422 = icmp eq i64 %421, %243
  br i1 %422, label %425, label %423

423:                                              ; preds = %415
  %424 = load i32, i32* %80, align 8
  br label %244

425:                                              ; preds = %415, %220
  %426 = phi i64 [ %116, %220 ], [ %223, %415 ]
  %427 = phi i32 [ %137, %220 ], [ %418, %415 ]
  %428 = load i32, i32* %64, align 4
  %429 = icmp eq i32 %428, 1
  br i1 %429, label %430, label %474

430:                                              ; preds = %425
  %431 = load i32, i32* %60, align 4
  %432 = icmp eq i32 %431, 1
  br i1 %432, label %474, label %433

433:                                              ; preds = %430
  %434 = load i32, i32* %11, align 4
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %477

436:                                              ; preds = %433
  %437 = load i32, i32* %39, align 8
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %462, label %439

439:                                              ; preds = %436
  %440 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 4, i64 1
  %441 = load i32, i32* %440, align 4
  %442 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %443 = load i32, i32* %442, align 4
  %444 = icmp eq i32 %441, %443
  br i1 %444, label %445, label %462

445:                                              ; preds = %439
  %446 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %447 = load i32, i32* %446, align 4
  %448 = shl i32 %441, 1
  %449 = icmp slt i32 %447, %448
  br i1 %449, label %450, label %462

450:                                              ; preds = %445
  %451 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 0
  %452 = load double, double* %451, align 8
  %453 = fcmp oeq double %452, 5.000000e-03
  br i1 %453, label %454, label %462

454:                                              ; preds = %450
  store double 5.000000e-01, double* %451, align 8
  %455 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %456 = load i32, i32* %455, align 8
  store i32 %456, i32* %446, align 4
  %457 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %458 = load i64, i64* %457, align 8
  %459 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  store i64 %458, i64* %459, align 8
  %460 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  store i64 %458, i64* %460, align 8
  %461 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 78
  store i32 1, i32* %461, align 4
  br label %462

462:                                              ; preds = %436, %454, %450, %445, %439
  %463 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %464 = load i32, i32* %463, align 4
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %474, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 78
  %468 = load i32, i32* %467, align 4
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %474, label %470

470:                                              ; preds = %466
  %471 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %472 = load i32, i32* %471, align 8
  %473 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  store i32 %472, i32* %473, align 4
  br label %474

474:                                              ; preds = %466, %462, %430, %470, %425
  %475 = load i32, i32* %11, align 4
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %508, label %477

477:                                              ; preds = %433, %474
  %478 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %479 = load i32, i32* %478, align 8
  %480 = icmp sgt i32 %479, 0
  br i1 %480, label %481, label %508

481:                                              ; preds = %477
  %482 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %483 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 0
  br label %484

484:                                              ; preds = %481, %502
  %485 = phi i32 [ %479, %481 ], [ %503, %502 ]
  %486 = phi i32 [ 0, %481 ], [ %504, %502 ]
  %487 = load i32, i32* %482, align 4
  %488 = icmp sgt i32 %487, 0
  br i1 %488, label %489, label %502

489:                                              ; preds = %484, %489
  %490 = phi i32 [ %498, %489 ], [ %487, %484 ]
  %491 = phi i32 [ %497, %489 ], [ 0, %484 ]
  %492 = mul nsw i32 %490, %486
  %493 = add nsw i32 %492, %491
  %494 = sext i32 %493 to i64
  %495 = load i64, i64* %483, align 8
  %496 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %494, i32 0, i32 65, i64 0
  store i64 %495, i64* %496, align 8
  %497 = add nuw nsw i32 %491, 1
  %498 = load i32, i32* %482, align 4
  %499 = icmp slt i32 %497, %498
  br i1 %499, label %489, label %500

500:                                              ; preds = %489
  %501 = load i32, i32* %478, align 8
  br label %502

502:                                              ; preds = %500, %484
  %503 = phi i32 [ %501, %500 ], [ %485, %484 ]
  %504 = add nuw nsw i32 %486, 1
  %505 = icmp slt i32 %504, %503
  br i1 %505, label %484, label %506

506:                                              ; preds = %502
  %507 = load i32, i32* %64, align 4
  br label %508

508:                                              ; preds = %506, %477, %474
  %509 = phi i32 [ %507, %506 ], [ %428, %477 ], [ %428, %474 ]
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %640

511:                                              ; preds = %508
  %512 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %513 = load i32, i32* %512, align 4
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %640, label %515

515:                                              ; preds = %511
  %516 = load i32, i32* %39, align 8
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %640, label %518

518:                                              ; preds = %515
  %519 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %520 = load i32, i32* %519, align 4
  %521 = icmp sgt i32 %520, 3
  br i1 %521, label %522, label %640

522:                                              ; preds = %518
  %523 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 72
  %524 = load i32, i32* %523, align 4
  %525 = icmp sgt i32 %524, 4
  br i1 %525, label %526, label %640

526:                                              ; preds = %522
  %527 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  %528 = load i32, i32* %527, align 4
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %640

530:                                              ; preds = %526
  %531 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  store i32 1, i32* %531, align 4
  %532 = icmp eq i32 %427, 0
  br i1 %532, label %534, label %533

533:                                              ; preds = %530
  store i32 0, i32* %512, align 4
  br label %534

534:                                              ; preds = %530, %533
  %535 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 22
  store i32 0, i32* %535, align 4
  %536 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 88
  %537 = load i32, i32* %536, align 8
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %544, label %539

539:                                              ; preds = %534
  %540 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 47
  %541 = load i32, i32* %540, align 16
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %544, label %543

543:                                              ; preds = %539
  store i32 1, i32* %535, align 4
  br label %544

544:                                              ; preds = %539, %534, %543
  %545 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  store i32 1000, i32* %545, align 8
  %546 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %547 = load i32, i32* %546, align 4
  %548 = icmp sgt i32 %547, 10
  %549 = select i1 %548, i32 %547, i32 10
  %550 = icmp slt i32 %549, 20
  %551 = select i1 %550, i32 %549, i32 20
  store i32 %551, i32* %546, align 4
  %552 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 17
  store i32 0, i32* %552, align 8
  %553 = mul nuw nsw i32 %551, 7
  %554 = lshr i32 %553, 2
  %555 = icmp sge i32 %554, %520
  %556 = icmp slt i32 %551, %520
  %557 = and i1 %556, %555
  br i1 %557, label %558, label %562

558:                                              ; preds = %544
  %559 = icmp sgt i32 %520, 9
  %560 = zext i1 %559 to i32
  %561 = lshr i32 %520, %560
  br label %564

562:                                              ; preds = %544
  %563 = icmp sgt i32 %551, %520
  br i1 %563, label %564, label %566

564:                                              ; preds = %562, %558
  %565 = phi i32 [ %561, %558 ], [ %520, %562 ]
  store i32 %565, i32* %546, align 4
  store i32 1, i32* %552, align 8
  br label %566

566:                                              ; preds = %564, %562
  %567 = phi i32 [ %551, %562 ], [ %565, %564 ]
  %568 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  store i32 %567, i32* %568, align 4
  %569 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 76
  %570 = load i32, i32* %569, align 4
  %571 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %572 = load i32, i32* %571, align 4
  %573 = icmp eq i32 %572, 0
  %574 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %575 = load i32, i32* %574, align 8
  %576 = sext i32 %575 to i64
  %577 = sext i32 %567 to i64
  %578 = mul nsw i64 %576, %577
  %579 = sext i32 %570 to i64
  %580 = mul nsw i64 %576, %577
  %581 = mul i64 %580, %579
  %582 = select i1 %573, i64 %581, i64 %578
  %583 = add i32 %567, -1
  %584 = add i32 %583, %570
  %585 = sext i32 %584 to i64
  %586 = sdiv i64 %582, %585
  %587 = icmp slt i64 %586, 2147483647
  %588 = select i1 %587, i64 %586, i64 2147483647
  %589 = trunc i64 %588 to i32
  %590 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 26
  %591 = load i32, i32* %590, align 4
  %592 = ashr i32 %575, 5
  %593 = icmp sgt i32 %591, %592
  %594 = select i1 %593, i32 %591, i32 %592
  %595 = icmp sgt i32 %594, %589
  %596 = select i1 %595, i32 %594, i32 %589
  %597 = select i1 %573, i32 %596, i32 %594
  %598 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %599 = load i32, i32* %598, align 8
  %600 = icmp sgt i32 %597, %599
  %601 = select i1 %600, i32 %599, i32 %597
  %602 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 13
  %603 = load i32, i32* %602, align 8
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %610, label %605

605:                                              ; preds = %566
  %606 = mul i32 %603, %575
  %607 = udiv i32 %606, 100
  %608 = icmp slt i32 %601, %607
  %609 = select i1 %608, i32 %601, i32 %607
  br label %610

610:                                              ; preds = %566, %605
  %611 = phi i32 [ %609, %605 ], [ %601, %566 ]
  %612 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  store i32 %611, i32* %612, align 4
  %613 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %614 = load i32, i32* %613, align 4
  %615 = icmp eq i32 %614, 2
  br i1 %615, label %616, label %627

616:                                              ; preds = %610
  %617 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %618 = load i32, i32* %617, align 4
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %627, label %620

620:                                              ; preds = %616
  %621 = sitofp i32 %611 to double
  %622 = zext i32 %618 to i64
  %623 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %622
  %624 = load double, double* %623, align 8
  %625 = fmul double %624, %621
  %626 = fptosi double %625 to i32
  store i32 %626, i32* %612, align 4
  br label %627

627:                                              ; preds = %610, %616, %620
  %628 = phi i32 [ %611, %616 ], [ %626, %620 ], [ %611, %610 ]
  %629 = sext i32 %628 to i64
  %630 = shl nsw i64 %629, 12
  %631 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %632 = load i32, i32* %631, align 16
  %633 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %634 = load i32, i32* %633, align 4
  %635 = mul nsw i32 %634, %632
  %636 = sext i32 %635 to i64
  %637 = sdiv i64 %630, %636
  %638 = trunc i64 %637 to i32
  %639 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 3
  store i32 %638, i32* %639, align 4
  store i32 0, i32* %523, align 4
  br label %644

640:                                              ; preds = %515, %511, %526, %522, %518, %508
  %641 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 72
  %642 = load i32, i32* %641, align 4
  %643 = add nsw i32 %642, 1
  store i32 %643, i32* %641, align 4
  br label %644

644:                                              ; preds = %640, %627
  %645 = load i32, i32* %80, align 8
  %646 = icmp sgt i32 %645, 0
  br i1 %646, label %647, label %1027

647:                                              ; preds = %644
  %648 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 10
  %649 = load %struct.lookahead_ctx*, %struct.lookahead_ctx** %648, align 8
  %650 = tail call i32 @vp9_lookahead_depth(%struct.lookahead_ctx* %649) #8
  %651 = add i32 %650, -1
  %652 = icmp sgt i32 %651, 0
  br i1 %652, label %653, label %782

653:                                              ; preds = %647
  %654 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 0
  %655 = load i64, i64* %654, align 8
  %656 = sext i32 %651 to i64
  %657 = zext i32 %650 to i64
  br label %658

658:                                              ; preds = %757, %653
  %659 = phi i64 [ %766, %757 ], [ 0, %653 ]
  %660 = phi i64 [ %763, %757 ], [ %656, %653 ]
  %661 = phi i64 [ %764, %757 ], [ 1, %653 ]
  %662 = phi i32 [ %759, %757 ], [ -1, %653 ]
  %663 = phi i32 [ %727, %757 ], [ -1, %653 ]
  %664 = phi i64 [ %762, %757 ], [ %426, %653 ]
  %665 = phi i32 [ %758, %757 ], [ 0, %653 ]
  %666 = phi i32 [ %726, %757 ], [ 0, %653 ]
  %667 = sub nuw nsw i64 %656, %660
  %668 = add nuw nsw i64 %667, 1
  %669 = icmp eq i64 %667, 0
  br i1 %669, label %705, label %670

670:                                              ; preds = %658
  %671 = and i64 %659, 1
  %672 = icmp eq i64 %659, 1
  br i1 %672, label %692, label %673

673:                                              ; preds = %670
  %674 = sub i64 %659, %671
  br label %675

675:                                              ; preds = %1033, %673
  %676 = phi i64 [ 1, %673 ], [ %1035, %1033 ]
  %677 = phi i64 [ %655, %673 ], [ %1034, %1033 ]
  %678 = phi i64 [ %674, %673 ], [ %1036, %1033 ]
  %679 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %676
  %680 = load i64, i64* %679, align 8
  %681 = icmp eq i64 %680, 0
  br i1 %681, label %686, label %682

682:                                              ; preds = %675
  %683 = mul i64 %677, 3
  %684 = add i64 %680, %683
  %685 = lshr i64 %684, 2
  br label %686

686:                                              ; preds = %682, %675
  %687 = phi i64 [ %685, %682 ], [ %677, %675 ]
  %688 = add nuw nsw i64 %676, 1
  %689 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %688
  %690 = load i64, i64* %689, align 8
  %691 = icmp eq i64 %690, 0
  br i1 %691, label %1033, label %1029

692:                                              ; preds = %1033, %670
  %693 = phi i64 [ undef, %670 ], [ %1034, %1033 ]
  %694 = phi i64 [ 1, %670 ], [ %1035, %1033 ]
  %695 = phi i64 [ %655, %670 ], [ %1034, %1033 ]
  %696 = icmp eq i64 %671, 0
  br i1 %696, label %705, label %697

697:                                              ; preds = %692
  %698 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %694
  %699 = load i64, i64* %698, align 8
  %700 = icmp eq i64 %699, 0
  br i1 %700, label %705, label %701

701:                                              ; preds = %697
  %702 = mul i64 %695, 3
  %703 = add i64 %699, %702
  %704 = lshr i64 %703, 2
  br label %705

705:                                              ; preds = %692, %697, %701, %658
  %706 = phi i64 [ %655, %658 ], [ %693, %692 ], [ %704, %701 ], [ %695, %697 ]
  %707 = icmp eq i32 %666, 0
  br i1 %707, label %708, label %725

708:                                              ; preds = %705
  %709 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %668
  %710 = load i64, i64* %709, align 8
  %711 = trunc i64 %706 to i32
  %712 = shl i32 %711, 1
  %713 = icmp ugt i32 %712, 70000
  %714 = select i1 %713, i32 %712, i32 70000
  %715 = zext i32 %714 to i64
  %716 = icmp ugt i64 %710, %715
  br i1 %716, label %723, label %717

717:                                              ; preds = %708
  %718 = shl i32 %711, 2
  %719 = icmp ugt i32 %718, 52500
  %720 = select i1 %719, i32 %718, i32 52500
  %721 = zext i32 %720 to i64
  %722 = icmp ugt i64 %710, %721
  br i1 %722, label %723, label %725

723:                                              ; preds = %717, %708
  %724 = trunc i64 %668 to i32
  br label %725

725:                                              ; preds = %723, %717, %705
  %726 = phi i32 [ %666, %705 ], [ 1, %723 ], [ 0, %717 ]
  %727 = phi i32 [ %663, %705 ], [ %724, %723 ], [ %663, %717 ]
  %728 = icmp eq i32 %665, 0
  %729 = icmp ne i64 %667, 0
  %730 = and i1 %729, %728
  br i1 %730, label %731, label %757

731:                                              ; preds = %725
  %732 = icmp slt i64 %668, %656
  br i1 %732, label %733, label %757

733:                                              ; preds = %731
  %734 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %667
  %735 = load i64, i64* %734, align 8
  %736 = icmp ugt i64 %735, 17500
  br i1 %736, label %737, label %757

737:                                              ; preds = %733
  %738 = lshr i64 %735, 1
  %739 = trunc i64 %668 to i32
  br label %740

740:                                              ; preds = %740, %737
  %741 = phi i32 [ %739, %737 ], [ %752, %740 ]
  %742 = phi i32 [ 1, %737 ], [ %750, %740 ]
  %743 = sext i32 %741 to i64
  %744 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %743
  %745 = load i64, i64* %744, align 8
  %746 = add i64 %745, -1
  %747 = icmp ult i64 %746, 17499
  %748 = icmp ult i64 %745, %738
  %749 = and i1 %748, %747
  %750 = select i1 %749, i32 %742, i32 0
  %751 = select i1 %749, i32 %741, i32 %651
  %752 = add nsw i32 %751, 1
  %753 = icmp slt i32 %752, %651
  br i1 %753, label %740, label %754

754:                                              ; preds = %740
  %755 = icmp eq i32 %750, 0
  %756 = select i1 %755, i32 %662, i32 %739
  br label %757

757:                                              ; preds = %754, %733, %731, %725
  %758 = phi i32 [ 0, %733 ], [ 0, %731 ], [ %665, %725 ], [ %750, %754 ]
  %759 = phi i32 [ %662, %733 ], [ %662, %731 ], [ %662, %725 ], [ %756, %754 ]
  %760 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 65, i64 %668
  %761 = load i64, i64* %760, align 8
  %762 = add i64 %761, %664
  %763 = add nsw i64 %660, -1
  %764 = add nuw nsw i64 %661, 1
  %765 = icmp eq i64 %764, %657
  %766 = add i64 %659, 1
  br i1 %765, label %767, label %658

767:                                              ; preds = %757
  %768 = udiv i64 %762, %656
  %769 = icmp eq i32 %727, -1
  br i1 %769, label %782, label %770

770:                                              ; preds = %767
  %771 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 67
  %772 = load i32, i32* %771, align 8
  %773 = add nsw i32 %772, -1
  %774 = icmp eq i32 %727, %773
  br i1 %774, label %782, label %775

775:                                              ; preds = %770
  %776 = sub nsw i32 %727, %772
  %777 = icmp slt i32 %776, 0
  %778 = sub nsw i32 0, %776
  %779 = select i1 %777, i32 %778, i32 %776
  %780 = icmp slt i32 %779, 4
  br i1 %780, label %781, label %782

781:                                              ; preds = %775
  store i32 -1, i32* %771, align 8
  br label %788

782:                                              ; preds = %775, %770, %767, %647
  %783 = phi i1 [ true, %770 ], [ true, %775 ], [ false, %767 ], [ false, %647 ]
  %784 = phi i64 [ %768, %770 ], [ %768, %775 ], [ %768, %767 ], [ %426, %647 ]
  %785 = phi i32 [ %759, %770 ], [ %759, %775 ], [ %759, %767 ], [ -1, %647 ]
  %786 = phi i32 [ %727, %770 ], [ %727, %775 ], [ -1, %767 ], [ -1, %647 ]
  %787 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 67
  store i32 %786, i32* %787, align 8
  br label %788

788:                                              ; preds = %782, %781
  %789 = phi i1 [ %783, %782 ], [ true, %781 ]
  %790 = phi i64 [ %784, %782 ], [ %768, %781 ]
  %791 = phi i32 [ %785, %782 ], [ %759, %781 ]
  %792 = phi i32 [ %786, %782 ], [ -1, %781 ]
  %793 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %794 = load i32, i32* %793, align 4
  %795 = icmp eq i32 %794, 1
  br i1 %795, label %796, label %1025

796:                                              ; preds = %788
  %797 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %798 = load i32, i32* %797, align 4
  %799 = icmp ugt i32 %798, 30
  br i1 %799, label %800, label %1025

800:                                              ; preds = %796
  %801 = load i32, i32* %80, align 8
  %802 = icmp sgt i32 %801, 8
  br i1 %802, label %803, label %1025

803:                                              ; preds = %800
  %804 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 40
  %805 = load i32, i32* %804, align 8
  %806 = icmp sgt i32 %805, 0
  br i1 %806, label %807, label %813

807:                                              ; preds = %803
  %808 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 41
  %809 = load i32, i32* %808, align 4
  %810 = sitofp i32 %809 to double
  %811 = sitofp i32 %805 to double
  %812 = fdiv double %810, %811
  br label %813

813:                                              ; preds = %807, %803
  %814 = phi double [ %812, %807 ], [ 1.000000e+00, %803 ]
  br i1 %789, label %838, label %815

815:                                              ; preds = %813
  %816 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 66
  %817 = load i64, i64* %816, align 8
  %818 = shl i64 %817, 1
  %819 = icmp ugt i64 %790, %818
  %820 = icmp ugt i64 %790, 120000
  %821 = or i1 %820, %819
  %822 = lshr i64 %817, 1
  %823 = icmp ult i64 %790, %822
  %824 = icmp ult i64 %790, 70000
  %825 = or i1 %824, %823
  br i1 %825, label %826, label %834

826:                                              ; preds = %815
  %827 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  store i32 2000, i32* %827, align 8
  %828 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %829 = load i32, i32* %828, align 4
  %830 = mul nsw i32 %829, 3
  %831 = icmp sgt i32 %830, 31
  %832 = ashr i32 %830, 1
  %833 = select i1 %831, i32 15, i32 %832
  store i32 %833, i32* %828, align 4
  br label %849

834:                                              ; preds = %815
  br i1 %821, label %838, label %835

835:                                              ; preds = %834
  %836 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %837 = load i32, i32* %836, align 4
  br label %849

838:                                              ; preds = %834, %813
  %839 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  store i32 1000, i32* %839, align 8
  %840 = fcmp ogt double %814, 3.000000e+00
  %841 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %842 = load i32, i32* %841, align 4
  %843 = ashr i32 %842, 1
  %844 = icmp slt i32 %842, 20
  %845 = select i1 %844, i32 10, i32 %843
  %846 = icmp slt i32 %842, 12
  %847 = select i1 %846, i32 6, i32 %843
  %848 = select i1 %840, i32 %845, i32 %847
  store i32 %848, i32* %841, align 4
  br label %849

849:                                              ; preds = %838, %835, %826
  %850 = phi i32 [ %837, %835 ], [ %848, %838 ], [ %833, %826 ]
  %851 = phi i1 [ false, %835 ], [ false, %838 ], [ true, %826 ]
  %852 = phi i1 [ false, %835 ], [ true, %838 ], [ %821, %826 ]
  %853 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  %854 = icmp slt i32 %850, %801
  br i1 %854, label %857, label %855

855:                                              ; preds = %849
  %856 = add nsw i32 %801, -1
  store i32 %856, i32* %853, align 4
  br label %857

857:                                              ; preds = %855, %849
  %858 = phi i32 [ %850, %849 ], [ %856, %855 ]
  %859 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %860 = load i32, i32* %859, align 4
  %861 = icmp sgt i32 %792, 0
  %862 = icmp sgt i32 %860, %792
  %863 = and i1 %861, %862
  %864 = select i1 %863, i32 %792, i32 %860
  %865 = icmp sgt i32 %791, 3
  %866 = icmp sgt i32 %864, %791
  %867 = and i1 %865, %866
  %868 = select i1 %867, i32 %791, i32 %864
  %869 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 17
  store i32 0, i32* %869, align 8
  %870 = mul nsw i32 %858, 7
  %871 = ashr i32 %870, 2
  %872 = icmp sge i32 %871, %868
  %873 = icmp slt i32 %858, %868
  %874 = and i1 %873, %872
  br i1 %874, label %875, label %879

875:                                              ; preds = %857
  %876 = icmp sgt i32 %868, 9
  %877 = zext i1 %876 to i32
  %878 = ashr i32 %868, %877
  br label %881

879:                                              ; preds = %857
  %880 = icmp sgt i32 %858, %868
  br i1 %880, label %881, label %883

881:                                              ; preds = %879, %875
  %882 = phi i32 [ %878, %875 ], [ %868, %879 ]
  store i32 %882, i32* %853, align 4
  store i32 1, i32* %869, align 8
  br label %883

883:                                              ; preds = %881, %879
  %884 = phi i32 [ %858, %879 ], [ %882, %881 ]
  %885 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  store i32 %884, i32* %885, align 4
  %886 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 63
  store i32 150, i32* %886, align 8
  %887 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 64
  store i32 100, i32* %887, align 4
  %888 = fcmp uge double %814, 2.000000e+00
  %889 = or i1 %888, %852
  br i1 %889, label %891, label %890

890:                                              ; preds = %883
  store i32 120, i32* %886, align 8
  store i32 90, i32* %887, align 4
  br label %900

891:                                              ; preds = %883
  %892 = fcmp ogt double %814, 8.000000e+00
  br i1 %892, label %893, label %900

893:                                              ; preds = %891
  %894 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %895 = load i32, i32* %894, align 4
  %896 = icmp slt i32 %895, 16
  br i1 %896, label %897, label %900

897:                                              ; preds = %893
  %898 = icmp slt i32 %895, 8
  %899 = select i1 %898, i32 400, i32 200
  store i32 %899, i32* %886, align 8
  br label %900

900:                                              ; preds = %897, %893, %891, %890
  br i1 %851, label %901, label %907

901:                                              ; preds = %900
  %902 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 75
  %903 = load i32, i32* %902, align 8
  %904 = icmp sgt i32 %903, 80
  br i1 %904, label %905, label %907

905:                                              ; preds = %901
  %906 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 76
  store i32 15, i32* %906, align 4
  br label %915

907:                                              ; preds = %901, %900
  br i1 %852, label %912, label %908

908:                                              ; preds = %907
  %909 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 75
  %910 = load i32, i32* %909, align 8
  %911 = icmp slt i32 %910, 30
  br i1 %911, label %912, label %915

912:                                              ; preds = %908, %907
  %913 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 76
  store i32 5, i32* %913, align 4
  %914 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 7
  store i32 500, i32* %914, align 8
  br label %915

915:                                              ; preds = %912, %908, %905
  %916 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 88
  %917 = load i32, i32* %916, align 8
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %952, label %919

919:                                              ; preds = %915
  %920 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 47
  %921 = load i32, i32* %920, align 16
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %952, label %923

923:                                              ; preds = %919
  %924 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %925 = load i32, i32* %924, align 4
  %926 = icmp eq i32 %925, 0
  br i1 %926, label %937, label %927

927:                                              ; preds = %923
  %928 = load i32, i32* %39, align 8
  %929 = icmp eq i32 %928, 0
  br i1 %929, label %930, label %937

930:                                              ; preds = %927
  %931 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 79
  %932 = load double, double* %931, align 8
  %933 = fcmp olt double %932, 1.500000e+01
  br i1 %933, label %934, label %937

934:                                              ; preds = %930
  %935 = load i32, i32* %56, align 8
  %936 = icmp sgt i32 %935, 4
  br i1 %936, label %944, label %937

937:                                              ; preds = %934, %930, %927, %923
  br i1 %861, label %938, label %942

938:                                              ; preds = %937
  %939 = icmp sle i32 %792, %884
  %940 = icmp ugt i64 %790, 26250
  %941 = or i1 %940, %939
  br i1 %941, label %944, label %947

942:                                              ; preds = %937
  %943 = icmp ugt i64 %790, 26250
  br i1 %943, label %944, label %947

944:                                              ; preds = %942, %938, %934
  %945 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 22
  store i32 0, i32* %945, align 4
  %946 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 69
  store i32 0, i32* %946, align 8
  br label %952

947:                                              ; preds = %942, %938
  %948 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 22
  store i32 1, i32* %948, align 4
  %949 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 69
  store i32 1, i32* %949, align 8
  %950 = icmp sgt i32 %884, 12
  br i1 %950, label %951, label %952

951:                                              ; preds = %947
  store i32 12, i32* %853, align 4
  store i32 12, i32* %885, align 4
  br label %952

952:                                              ; preds = %951, %947, %944, %919, %915
  %953 = phi i32 [ %884, %944 ], [ 12, %951 ], [ %884, %947 ], [ %884, %919 ], [ %884, %915 ]
  %954 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 76
  %955 = load i32, i32* %954, align 4
  %956 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %957 = load i32, i32* %956, align 4
  %958 = icmp eq i32 %957, 0
  %959 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %960 = load i32, i32* %959, align 8
  %961 = sext i32 %960 to i64
  %962 = sext i32 %953 to i64
  %963 = mul nsw i64 %961, %962
  %964 = sext i32 %955 to i64
  %965 = mul nsw i64 %961, %962
  %966 = mul i64 %965, %964
  %967 = select i1 %958, i64 %966, i64 %963
  %968 = add i32 %953, -1
  %969 = add i32 %968, %955
  %970 = sext i32 %969 to i64
  %971 = sdiv i64 %967, %970
  %972 = icmp slt i64 %971, 2147483647
  %973 = select i1 %972, i64 %971, i64 2147483647
  %974 = trunc i64 %973 to i32
  %975 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 26
  %976 = load i32, i32* %975, align 4
  %977 = ashr i32 %960, 5
  %978 = icmp sgt i32 %976, %977
  %979 = select i1 %978, i32 %976, i32 %977
  %980 = icmp sgt i32 %979, %974
  %981 = select i1 %980, i32 %979, i32 %974
  %982 = select i1 %958, i32 %981, i32 %979
  %983 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %984 = load i32, i32* %983, align 8
  %985 = icmp sgt i32 %982, %984
  %986 = select i1 %985, i32 %984, i32 %982
  %987 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 13
  %988 = load i32, i32* %987, align 8
  %989 = icmp eq i32 %988, 0
  br i1 %989, label %995, label %990

990:                                              ; preds = %952
  %991 = mul i32 %988, %960
  %992 = udiv i32 %991, 100
  %993 = icmp slt i32 %986, %992
  %994 = select i1 %993, i32 %986, i32 %992
  br label %995

995:                                              ; preds = %990, %952
  %996 = phi i32 [ %994, %990 ], [ %986, %952 ]
  %997 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 1
  store i32 %996, i32* %997, align 4
  %998 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %999 = load i32, i32* %998, align 4
  %1000 = icmp eq i32 %999, 2
  br i1 %1000, label %1001, label %1012

1001:                                             ; preds = %995
  %1002 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 58
  %1003 = load i32, i32* %1002, align 4
  %1004 = icmp eq i32 %1003, 0
  br i1 %1004, label %1012, label %1005

1005:                                             ; preds = %1001
  %1006 = sitofp i32 %996 to double
  %1007 = zext i32 %1003 to i64
  %1008 = getelementptr inbounds [2 x double], [2 x double]* @rcf_mult, i64 0, i64 %1007
  %1009 = load double, double* %1008, align 8
  %1010 = fmul double %1009, %1006
  %1011 = fptosi double %1010 to i32
  store i32 %1011, i32* %997, align 4
  br label %1012

1012:                                             ; preds = %1005, %1001, %995
  %1013 = phi i32 [ %996, %1001 ], [ %1011, %1005 ], [ %996, %995 ]
  %1014 = sext i32 %1013 to i64
  %1015 = shl nsw i64 %1014, 12
  %1016 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %1017 = load i32, i32* %1016, align 16
  %1018 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %1019 = load i32, i32* %1018, align 4
  %1020 = mul nsw i32 %1019, %1017
  %1021 = sext i32 %1020 to i64
  %1022 = sdiv i64 %1015, %1021
  %1023 = trunc i64 %1022 to i32
  %1024 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 3
  store i32 %1023, i32* %1024, align 4
  br label %1025

1025:                                             ; preds = %788, %796, %800, %1012
  %1026 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 66
  store i64 %790, i64* %1026, align 8
  br label %1027

1027:                                             ; preds = %1025, %644
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %51) #8
  br label %1028

1028:                                             ; preds = %34, %1027, %18, %1, %14
  ret void

1029:                                             ; preds = %686
  %1030 = mul i64 %687, 3
  %1031 = add i64 %690, %1030
  %1032 = lshr i64 %1031, 2
  br label %1033

1033:                                             ; preds = %1029, %686
  %1034 = phi i64 [ %1032, %1029 ], [ %687, %686 ]
  %1035 = add nuw nsw i64 %676, 2
  %1036 = add i64 %678, -2
  %1037 = icmp eq i64 %1036, 0
  br i1 %1037, label %692, label %675
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @vp9_lookahead_depth(%struct.lookahead_ctx*) local_unnamed_addr #1

declare %struct.lookahead_entry* @vp9_lookahead_peek(%struct.lookahead_ctx*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_encodedframe_overshoot(%struct.VP9_COMP*, i32, i32* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 3
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 92
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  %12 = icmp slt i32 %8, %1
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %212

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 62
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  %18 = ashr i32 %5, 3
  %19 = mul nsw i32 %18, 7
  %20 = ashr i32 %5, 2
  %21 = mul nsw i32 %20, 3
  %22 = select i1 %17, i32 %19, i32 %21
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 38
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %22
  br i1 %25, label %26, label %212

26:                                               ; preds = %14
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 10, i64 0
  %28 = load double, double* %27, align 8
  store i32 %5, i32* %2, align 4
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 84
  %30 = load %struct.CYCLIC_REFRESH*, %struct.CYCLIC_REFRESH** %29, align 8
  %31 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %30, i64 0, i32 20
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 74
  store i32 1, i32* %32, align 4
  %33 = load i32, i32* %9, align 8
  %34 = icmp eq i32 %33, 2
  %35 = shl i32 %7, 4
  %36 = icmp slt i32 %35, %1
  %37 = and i1 %36, %34
  br i1 %37, label %38, label %132

38:                                               ; preds = %26
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %40 = load i32, i32* %39, align 16
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %132

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 33
  %44 = load i32, i32* %43, align 16
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 35
  %48 = load i32, i32* %47, align 8
  br label %123

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 53
  %51 = load %struct.MODE_INFO**, %struct.MODE_INFO*** %50, align 8
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 35
  %53 = load i32, i32* %52, align 8
  %54 = icmp sgt i32 %53, 0
  %55 = add i32 %53, -1
  %56 = and i32 %53, 3
  %57 = icmp ult i32 %55, 3
  %58 = sub i32 %53, %56
  %59 = icmp eq i32 %56, 0
  br label %60

60:                                               ; preds = %49, %117
  %61 = phi i32 [ 0, %49 ], [ %121, %117 ]
  %62 = phi i32 [ 0, %49 ], [ %119, %117 ]
  %63 = phi %struct.MODE_INFO** [ %51, %49 ], [ %120, %117 ]
  br i1 %54, label %64, label %117

64:                                               ; preds = %60
  br i1 %57, label %99, label %65

65:                                               ; preds = %64, %65
  %66 = phi i32 [ %95, %65 ], [ %62, %64 ]
  %67 = phi %struct.MODE_INFO** [ %96, %65 ], [ %63, %64 ]
  %68 = phi i32 [ %97, %65 ], [ %58, %64 ]
  %69 = load %struct.MODE_INFO*, %struct.MODE_INFO** %67, align 8
  %70 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %69, i64 0, i32 8, i64 0
  %71 = load i8, i8* %70, align 4
  %72 = icmp eq i8 %71, 0
  %73 = zext i1 %72 to i32
  %74 = add nsw i32 %66, %73
  %75 = getelementptr inbounds %struct.MODE_INFO*, %struct.MODE_INFO** %67, i64 1
  %76 = load %struct.MODE_INFO*, %struct.MODE_INFO** %75, align 8
  %77 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %76, i64 0, i32 8, i64 0
  %78 = load i8, i8* %77, align 4
  %79 = icmp eq i8 %78, 0
  %80 = zext i1 %79 to i32
  %81 = add nsw i32 %74, %80
  %82 = getelementptr inbounds %struct.MODE_INFO*, %struct.MODE_INFO** %67, i64 2
  %83 = load %struct.MODE_INFO*, %struct.MODE_INFO** %82, align 8
  %84 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %83, i64 0, i32 8, i64 0
  %85 = load i8, i8* %84, align 4
  %86 = icmp eq i8 %85, 0
  %87 = zext i1 %86 to i32
  %88 = add nsw i32 %81, %87
  %89 = getelementptr inbounds %struct.MODE_INFO*, %struct.MODE_INFO** %67, i64 3
  %90 = load %struct.MODE_INFO*, %struct.MODE_INFO** %89, align 8
  %91 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %90, i64 0, i32 8, i64 0
  %92 = load i8, i8* %91, align 4
  %93 = icmp eq i8 %92, 0
  %94 = zext i1 %93 to i32
  %95 = add nsw i32 %88, %94
  %96 = getelementptr inbounds %struct.MODE_INFO*, %struct.MODE_INFO** %67, i64 4
  %97 = add i32 %68, -4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %65

99:                                               ; preds = %65, %64
  %100 = phi i32 [ undef, %64 ], [ %95, %65 ]
  %101 = phi %struct.MODE_INFO** [ undef, %64 ], [ %96, %65 ]
  %102 = phi i32 [ %62, %64 ], [ %95, %65 ]
  %103 = phi %struct.MODE_INFO** [ %63, %64 ], [ %96, %65 ]
  br i1 %59, label %117, label %104

104:                                              ; preds = %99, %104
  %105 = phi i32 [ %113, %104 ], [ %102, %99 ]
  %106 = phi %struct.MODE_INFO** [ %114, %104 ], [ %103, %99 ]
  %107 = phi i32 [ %115, %104 ], [ %56, %99 ]
  %108 = load %struct.MODE_INFO*, %struct.MODE_INFO** %106, align 8
  %109 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %108, i64 0, i32 8, i64 0
  %110 = load i8, i8* %109, align 4
  %111 = icmp eq i8 %110, 0
  %112 = zext i1 %111 to i32
  %113 = add nsw i32 %105, %112
  %114 = getelementptr inbounds %struct.MODE_INFO*, %struct.MODE_INFO** %106, i64 1
  %115 = add i32 %107, -1
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %104, !llvm.loop !8

117:                                              ; preds = %99, %104, %60
  %118 = phi %struct.MODE_INFO** [ %63, %60 ], [ %101, %99 ], [ %114, %104 ]
  %119 = phi i32 [ %62, %60 ], [ %100, %99 ], [ %113, %104 ]
  %120 = getelementptr inbounds %struct.MODE_INFO*, %struct.MODE_INFO** %118, i64 8
  %121 = add nuw nsw i32 %61, 1
  %122 = icmp slt i32 %121, %44
  br i1 %122, label %60, label %123

123:                                              ; preds = %117, %46
  %124 = phi i32 [ %48, %46 ], [ %53, %117 ]
  %125 = phi i32 [ 0, %46 ], [ %119, %117 ]
  %126 = mul nsw i32 %125, 100
  %127 = mul nsw i32 %124, %44
  %128 = sdiv i32 %126, %127
  %129 = icmp sgt i32 %128, 60
  br i1 %129, label %130, label %132

130:                                              ; preds = %123
  %131 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 73
  store i32 1, i32* %131, align 8
  br label %132

132:                                              ; preds = %123, %130, %38, %26
  %133 = load i32, i32* %2, align 4
  %134 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 34
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 35
  store i64 %136, i64* %138, align 8
  %139 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 53
  store i32 0, i32* %139, align 8
  %140 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 54
  store i32 0, i32* %140, align 4
  %141 = sext i32 %7 to i64
  %142 = shl nsw i64 %141, 9
  %143 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 31
  %144 = load i32, i32* %143, align 8
  %145 = sext i32 %144 to i64
  %146 = udiv i64 %142, %145
  %147 = trunc i64 %146 to i32
  %148 = load i32, i32* %2, align 4
  %149 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %150 = load i32, i32* %149, align 16
  %151 = icmp eq i32 %150, 10
  %152 = select i1 %151, double 6.250000e-02, double 1.562500e-02
  %153 = icmp eq i32 %150, 8
  %154 = select i1 %153, double 2.500000e-01, double %152
  %155 = tail call signext i16 @vp9_ac_quant(i32 %148, i32 0, i32 %150) #8
  %156 = sitofp i16 %155 to double
  %157 = fmul double %154, %156
  %158 = fmul double %157, 1.800000e+06
  %159 = fptosi double %158 to i32
  %160 = ashr i32 %159, 12
  %161 = add nsw i32 %160, 1800000
  %162 = sitofp i32 %147 to double
  %163 = fmul double %157, %162
  %164 = sitofp i32 %161 to double
  %165 = fdiv double %163, %164
  %166 = fcmp ogt double %165, %28
  br i1 %166, label %167, label %173

167:                                              ; preds = %132
  %168 = fmul double %28, 2.000000e+00
  %169 = fcmp olt double %168, %165
  %170 = select i1 %169, double %168, double %165
  %171 = fcmp ogt double %170, 5.000000e+01
  %172 = select i1 %171, double 5.000000e+01, double %170
  store double %172, double* %27, align 8
  br label %173

173:                                              ; preds = %167, %132
  %174 = phi double [ %172, %167 ], [ %28, %132 ]
  %175 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %212, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 62
  %180 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %181 = load i32, i32* %180, align 4
  br label %182

182:                                              ; preds = %178, %205
  %183 = phi i32 [ %181, %178 ], [ %206, %205 ]
  %184 = phi i32 [ 0, %178 ], [ %207, %205 ]
  %185 = icmp sgt i32 %183, 0
  br i1 %185, label %186, label %205

186:                                              ; preds = %182, %186
  %187 = phi i32 [ %203, %186 ], [ %183, %182 ]
  %188 = phi i32 [ %202, %186 ], [ 0, %182 ]
  %189 = mul nsw i32 %187, %184
  %190 = add nsw i32 %189, %188
  %191 = sext i32 %190 to i64
  %192 = load i32, i32* %2, align 4
  %193 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %191, i32 0, i32 31, i64 1
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %191, i32 0, i32 51
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %191, i32 0, i32 34
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %191, i32 0, i32 35
  store i64 %195, i64* %197, align 8
  %198 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %191, i32 0, i32 53
  store i32 0, i32* %198, align 8
  %199 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %191, i32 0, i32 54
  store i32 0, i32* %199, align 4
  %200 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %191, i32 0, i32 10, i64 0
  store double %174, double* %200, align 8
  %201 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %191, i32 0, i32 80
  store i32 1, i32* %201, align 8
  %202 = add nuw nsw i32 %188, 1
  %203 = load i32, i32* %180, align 4
  %204 = icmp slt i32 %202, %203
  br i1 %204, label %186, label %205

205:                                              ; preds = %186, %182
  %206 = phi i32 [ %183, %182 ], [ %203, %186 ]
  %207 = add nuw nsw i32 %184, 1
  %208 = load i32, i32* %179, align 8
  %209 = icmp sgt i32 %208, 1
  %210 = select i1 %209, i32 %208, i32 1
  %211 = icmp ult i32 %207, %210
  br i1 %211, label %182, label %212

212:                                              ; preds = %205, %14, %3, %173
  %213 = phi i32 [ 1, %173 ], [ 0, %3 ], [ 0, %14 ], [ 1, %205 ]
  ret i32 %213
}

declare void @vp9_cyclic_refresh_limit_q(%struct.VP9_COMP*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @pick_kf_q_bound_two_pass(%struct.VP9_COMP* nocapture readonly, i32* nocapture, i32* nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 25
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 20
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 24
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 94
  br i1 %13, label %14, label %36

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %16, %18
  %20 = select i1 %19, i32 %16, i32 %18
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %22 = load i32, i32* %21, align 16
  %23 = icmp eq i32 %22, 10
  %24 = select i1 %23, double 6.250000e-02, double 1.562500e-02
  %25 = icmp eq i32 %22, 8
  %26 = select i1 %25, double 2.500000e-01, double %24
  %27 = tail call signext i16 @vp9_ac_quant(i32 %20, i32 0, i32 %22) #8
  %28 = sitofp i16 %27 to double
  %29 = fmul double %26, %28
  %30 = fmul double %29, 1.250000e+00
  %31 = load i32, i32* %21, align 16
  %32 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %4, double %29, double %30, i32 %31)
  %33 = add nsw i32 %32, %20
  %34 = icmp slt i32 %33, %6
  %35 = select i1 %34, i32 %33, i32 %6
  br label %123

36:                                               ; preds = %10
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 5
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %40 = load i32, i32* %39, align 16
  %41 = icmp eq i32 %40, 10
  %42 = select i1 %41, double 6.250000e-02, double 1.562500e-02
  %43 = icmp eq i32 %40, 8
  %44 = select i1 %43, double 2.500000e-01, double %42
  %45 = tail call signext i16 @vp9_ac_quant(i32 %38, i32 0, i32 %40) #8
  %46 = sitofp i16 %45 to double
  %47 = fmul double %44, %46
  %48 = fmul double %47, 7.500000e-01
  %49 = load i32, i32* %39, align 16
  %50 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %4, double %47, double %48, i32 %49)
  %51 = add nsw i32 %50, %38
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %51, %53
  %55 = select i1 %54, i32 %51, i32 %53
  br label %123

56:                                               ; preds = %3
  %57 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 80
  %58 = load i32, i32* %57, align 16
  %59 = icmp eq i32 %58, 10
  %60 = select i1 %59, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_12, i64 0, i64 0)
  %61 = icmp eq i32 %58, 8
  %62 = select i1 %61, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_low_motion_minq_8, i64 0, i64 0), i32* %60
  %63 = select i1 %59, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_10, i64 0, i64 0), i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_12, i64 0, i64 0)
  %64 = select i1 %61, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @kf_high_motion_minq_8, i64 0, i64 0), i32* %63
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 9
  %66 = load i32, i32* %65, align 8
  %67 = icmp sgt i32 %66, 4800
  br i1 %67, label %68, label %72

68:                                               ; preds = %56
  %69 = sext i32 %6 to i64
  %70 = getelementptr inbounds i32, i32* %62, i64 %69
  %71 = load i32, i32* %70, align 4
  br label %90

72:                                               ; preds = %56
  %73 = icmp slt i32 %66, 300
  br i1 %73, label %74, label %78

74:                                               ; preds = %72
  %75 = sext i32 %6 to i64
  %76 = getelementptr inbounds i32, i32* %64, i64 %75
  %77 = load i32, i32* %76, align 4
  br label %90

78:                                               ; preds = %72
  %79 = sub nuw nsw i32 4800, %66
  %80 = sext i32 %6 to i64
  %81 = getelementptr inbounds i32, i32* %64, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds i32, i32* %62, i64 %80
  %84 = load i32, i32* %83, align 4
  %85 = sub nsw i32 %82, %84
  %86 = mul nsw i32 %85, %79
  %87 = add nsw i32 %86, 2250
  %88 = sdiv i32 %87, 4500
  %89 = add nsw i32 %88, %84
  br label %90

90:                                               ; preds = %68, %74, %78
  %91 = phi i32 [ %71, %68 ], [ %77, %74 ], [ %89, %78 ]
  %92 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 23
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, 98
  %95 = sdiv i32 %91, 4
  %96 = select i1 %94, i32 %95, i32 %91
  %97 = icmp sgt i32 %96, 1
  %98 = select i1 %97, i32 %96, i32 1
  %99 = icmp slt i32 %6, %98
  %100 = select i1 %99, i32 %6, i32 %98
  %101 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %102 = load i32, i32* %101, align 16
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %104 = load i32, i32* %103, align 4
  %105 = mul nsw i32 %104, %102
  %106 = icmp slt i32 %105, 101377
  %107 = select i1 %106, double 7.500000e-01, double 1.000000e+00
  %108 = sitofp i32 %93 to double
  %109 = fmul double %108, 1.000000e-03
  %110 = fsub double 5.000000e-02, %109
  %111 = fadd double %110, %107
  %112 = icmp eq i32 %58, 10
  %113 = select i1 %112, double 6.250000e-02, double 1.562500e-02
  %114 = icmp eq i32 %58, 8
  %115 = select i1 %114, double 2.500000e-01, double %113
  %116 = tail call signext i16 @vp9_ac_quant(i32 %100, i32 0, i32 %58) #8
  %117 = sitofp i16 %116 to double
  %118 = fmul double %115, %117
  %119 = fmul double %111, %118
  %120 = load i32, i32* %57, align 16
  %121 = tail call i32 @vp9_compute_qdelta(%struct.RATE_CONTROL* %4, double %118, double %119, i32 %120)
  %122 = add nsw i32 %121, %100
  br label %123

123:                                              ; preds = %36, %14, %90
  %124 = phi i32 [ %122, %90 ], [ %55, %36 ], [ %20, %14 ]
  %125 = phi i32 [ %6, %90 ], [ %6, %36 ], [ %35, %14 ]
  store i32 %125, i32* %2, align 4
  store i32 %124, i32* %1, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5, !3}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
