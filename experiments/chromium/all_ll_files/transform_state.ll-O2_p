; ModuleID = '../../third_party/blink/renderer/core/layout/geometry/transform_state.cc'
source_filename = "../../third_party/blink/renderer/core/layout/geometry/transform_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::AffineTransform" = type { [6 x double] }

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.blink::TransformState"* @_ZN5blink14TransformStateaSERKS0_(%"class.blink::TransformState"* returned, %"class.blink::TransformState"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 3
  %5 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %6 = bitcast %"struct.blink::PhysicalOffset"* %4 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 6
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 6
  store i8 %9, i8* %10, align 2
  %11 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 7
  store i8 %12, i8* %13, align 1
  %14 = icmp eq i8 %9, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::TransformState"* %1 to i64*
  %17 = bitcast %"class.blink::TransformState"* %0 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 8
  br label %19

19:                                               ; preds = %2, %15
  %20 = icmp eq i8 %12, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1
  %23 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 1
  %24 = bitcast %"class.blink::FloatQuad"* %23 to i8*
  %25 = bitcast %"class.blink::FloatQuad"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 4 %25, i64 32, i1 false)
  br label %26

26:                                               ; preds = %19, %21
  %27 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 4
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 4
  store i8 %28, i8* %29, align 8
  %30 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 5
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 5
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 8
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 8
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %37, align 8
  store %"class.blink::TransformationMatrix"* null, %"class.blink::TransformationMatrix"** %37, align 8
  %39 = icmp eq %"class.blink::TransformationMatrix"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %26
  %41 = bitcast %"class.blink::TransformationMatrix"* %38 to i8*
  tail call void @free(i8* %41) #9
  br label %42

42:                                               ; preds = %26, %40
  %43 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %44 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %43, align 8
  %45 = icmp eq %"class.blink::TransformationMatrix"* %44, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %42
  %47 = tail call noalias i8* @malloc(i64 128) #9
  %48 = bitcast %"class.blink::TransformationMatrix"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %48, i64 128, i1 false) #9
  %49 = ptrtoint i8* %47 to i64
  %50 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %37, align 8
  %51 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  store i64 %49, i64* %51, align 8
  %52 = icmp eq %"class.blink::TransformationMatrix"* %50, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.blink::TransformationMatrix"* %50 to i8*
  tail call void @free(i8* %54) #9
  br label %55

55:                                               ; preds = %42, %46, %53
  ret %"class.blink::TransformState"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14TransformState18TranslateTransformERKNS_14PhysicalOffsetE(%"class.blink::TransformState"* nocapture readonly, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to double
  %11 = fmul double %10, 1.562500e-02
  %12 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to double
  %15 = fmul double %14, 1.562500e-02
  br i1 %5, label %16, label %18

16:                                               ; preds = %2
  %17 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix13PostTranslateEdd(%"class.blink::TransformationMatrix"* %7, double %11, double %15) #9
  br label %20

18:                                               ; preds = %2
  %19 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"* %7, double %11, double %15) #9
  br label %20

20:                                               ; preds = %18, %16
  ret void
}

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix13PostTranslateEdd(%"class.blink::TransformationMatrix"*, double, double) local_unnamed_addr #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"*, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14TransformState26TranslateMappedCoordinatesERKNS_14PhysicalOffsetE(%"class.blink::TransformState"* nocapture, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"struct.blink::PhysicalOffset"* %1 to i64*
  %8 = load i64, i64* %7, align 4
  br label %42

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = tail call i1 @llvm.is.constant.i32(i32 %11) #9
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = sub i32 0, %11
  %15 = icmp eq i32 %14, -2147483648
  %16 = select i1 %15, i32 2147483647, i32 %14
  br label %22

17:                                               ; preds = %9
  %18 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %11) #9
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 2147483647, i32 %20
  br label %22

22:                                               ; preds = %17, %13
  %23 = phi i32 [ %16, %13 ], [ %21, %17 ]
  %24 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = tail call i1 @llvm.is.constant.i32(i32 %25) #9
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = sub i32 0, %25
  %29 = icmp eq i32 %28, -2147483648
  %30 = select i1 %29, i32 2147483647, i32 %28
  br label %36

31:                                               ; preds = %22
  %32 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %25) #9
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 2147483647, i32 %34
  br label %36

36:                                               ; preds = %27, %31
  %37 = phi i32 [ %30, %27 ], [ %35, %31 ]
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  %40 = zext i32 %23 to i64
  %41 = or i64 %39, %40
  br label %42

42:                                               ; preds = %36, %6
  %43 = phi i64 [ %8, %6 ], [ %41, %36 ]
  %44 = lshr i64 %43, 32
  %45 = insertelement <2 x i64> undef, i64 %43, i32 0
  %46 = insertelement <2 x i64> %45, i64 %44, i32 1
  %47 = trunc <2 x i64> %46 to <2 x i32>
  %48 = sitofp <2 x i32> %47 to <2 x float>
  %49 = fmul <2 x float> %48, <float 1.562500e-02, float 1.562500e-02>
  %50 = shufflevector <2 x float> %49, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %51 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 6
  %52 = load i8, i8* %51, align 2, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 0, i32 0
  %56 = load float, float* %55, align 4
  %57 = extractelement <2 x float> %49, i32 0
  %58 = fadd float %57, %56
  store float %58, float* %55, align 4
  %59 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 0, i32 1
  %60 = load float, float* %59, align 4
  %61 = extractelement <2 x float> %49, i32 1
  %62 = fadd float %61, %60
  store float %62, float* %59, align 4
  br label %63

63:                                               ; preds = %42, %54
  %64 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 7
  %65 = load i8, i8* %64, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 1, i32 0, i32 0
  %69 = bitcast float* %68 to <4 x float>*
  %70 = load <4 x float>, <4 x float>* %69, align 4
  %71 = fadd <4 x float> %50, %70
  %72 = bitcast float* %68 to <4 x float>*
  store <4 x float> %71, <4 x float>* %72, align 4
  %73 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 1, i32 2, i32 0
  %74 = bitcast float* %73 to <4 x float>*
  %75 = load <4 x float>, <4 x float>* %74, align 4
  %76 = shufflevector <2 x float> %49, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %77 = fadd <4 x float> %76, %75
  %78 = bitcast float* %73 to <4 x float>*
  store <4 x float> %77, <4 x float>* %78, align 4
  br label %79

79:                                               ; preds = %63, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"*, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %6, i32 %2, i32 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %10, align 8
  %12 = icmp eq %"class.blink::TransformationMatrix"* %11, null
  br i1 %12, label %13, label %40

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %14, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %18) #9
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !3
  %25 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 3, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  %31 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %28) #9
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %30, i32 %33, !prof !3
  %35 = zext i32 %34 to i64
  %36 = shl nuw i64 %35, 32
  %37 = zext i32 %24 to i64
  %38 = or i64 %36, %37
  %39 = bitcast %"struct.blink::PhysicalOffset"* %14 to i64*
  store i64 %38, i64* %39, align 4
  br label %64

40:                                               ; preds = %9
  tail call void @_ZN5blink14TransformState22ApplyAccumulatedOffsetEv(%"class.blink::TransformState"* %0)
  %41 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 4
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %40
  %45 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %10, align 8
  %46 = icmp eq %"class.blink::TransformationMatrix"* %45, null
  br i1 %46, label %63, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = sitofp i32 %52 to double
  %54 = fmul double %53, 1.562500e-02
  %55 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = sitofp i32 %56 to double
  %58 = fmul double %57, 1.562500e-02
  br i1 %50, label %59, label %61

59:                                               ; preds = %47
  %60 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix13PostTranslateEdd(%"class.blink::TransformationMatrix"* nonnull %45, double %54, double %58) #9
  br label %64

61:                                               ; preds = %47
  %62 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"* nonnull %45, double %54, double %58) #9
  br label %64

63:                                               ; preds = %44, %40
  tail call void @_ZN5blink14TransformState26TranslateMappedCoordinatesERKNS_14PhysicalOffsetE(%"class.blink::TransformState"* %0, %"struct.blink::PhysicalOffset"* dereferenceable(8) %1)
  br label %64

64:                                               ; preds = %61, %59, %63, %13
  %65 = icmp eq i32 %7, 1
  %66 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 4
  %67 = zext i1 %65 to i8
  store i8 %67, i8* %66, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14TransformState22ApplyAccumulatedOffsetEv(%"class.blink::TransformState"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"struct.blink::PhysicalOffset"*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 3
  %6 = bitcast %"struct.blink::PhysicalOffset"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %2, align 8
  store i64 0, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = or i64 %9, %7
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %15, align 8
  %17 = icmp eq %"class.blink::TransformationMatrix"* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 8
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = sitofp i32 %8 to double
  %23 = fmul double %22, 1.562500e-02
  %24 = sitofp i32 %10 to double
  %25 = fmul double %24, 1.562500e-02
  br i1 %21, label %26, label %28

26:                                               ; preds = %18
  %27 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix13PostTranslateEdd(%"class.blink::TransformationMatrix"* nonnull %16, double %23, double %25) #9
  br label %30

28:                                               ; preds = %18
  %29 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"* nonnull %16, double %23, double %25) #9
  br label %30

30:                                               ; preds = %26, %28
  tail call void @_ZN5blink14TransformState22ApplyAccumulatedOffsetEv(%"class.blink::TransformState"* %0) #9
  %31 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %15, align 8
  %32 = icmp eq %"class.blink::TransformationMatrix"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 4
  store i8 0, i8* %34, align 8
  br label %37

35:                                               ; preds = %30
  tail call void @_ZN5blink14TransformState20FlattenWithTransformERKNS_20TransformationMatrixE(%"class.blink::TransformState"* %0, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %31) #9
  br label %37

36:                                               ; preds = %14
  call void @_ZN5blink14TransformState26TranslateMappedCoordinatesERKNS_14PhysicalOffsetE(%"class.blink::TransformState"* %0, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %3)
  br label %37

37:                                               ; preds = %1, %35, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14TransformState7FlattenEv(%"class.blink::TransformState"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14TransformState22ApplyAccumulatedOffsetEv(%"class.blink::TransformState"* %0)
  %2 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %2, align 8
  %4 = icmp eq %"class.blink::TransformationMatrix"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 4
  store i8 0, i8* %6, align 8
  br label %8

7:                                                ; preds = %1
  tail call void @_ZN5blink14TransformState20FlattenWithTransformERKNS_20TransformationMatrixE(%"class.blink::TransformState"* %0, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %3)
  br label %8

8:                                                ; preds = %7, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14TransformState14ApplyTransformERKNS_15AffineTransformENS0_21TransformAccumulationE(%"class.blink::TransformState"*, %"class.blink::AffineTransform"* dereferenceable(48), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TransformationMatrix", align 8
  %5 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #9
  call void @_ZNK5blink15AffineTransform22ToTransformationMatrixEv(%"class.blink::TransformationMatrix"* nonnull sret %4, %"class.blink::AffineTransform"* %1) #9
  call void @_ZN5blink14TransformState14ApplyTransformERKNS_20TransformationMatrixENS0_21TransformAccumulationE(%"class.blink::TransformState"* %0, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %4, i32 %2)
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14TransformState14ApplyTransformERKNS_20TransformationMatrixENS0_21TransformAccumulationE(%"class.blink::TransformState"*, %"class.blink::TransformationMatrix"* dereferenceable(128), i32) local_unnamed_addr #3 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::TransformationMatrix", align 8
  %6 = tail call zeroext i1 @_ZNK5blink20TransformationMatrix20IsIntegerTranslationEv(%"class.blink::TransformationMatrix"* %1) #9
  br i1 %6, label %7, label %38

7:                                                ; preds = %3
  %8 = bitcast i64* %4 to %"struct.blink::PhysicalOffset"*
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %1, i64 0, i32 0, i32 0, i64 3, i64 0
  %11 = load double, double* %10, align 8
  %12 = fptrunc double %11 to float
  %13 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %1, i64 0, i32 0, i32 0, i64 3, i64 1
  %14 = load double, double* %13, align 8
  %15 = fptrunc double %14 to float
  %16 = fmul float %12, 6.400000e+01
  %17 = tail call float @llvm.round.f32(float %16) #9
  %18 = fcmp ult float %17, 0xC1E0000000000000
  %19 = fcmp ugt float %17, 0x41DFFFFFE0000000
  %20 = fcmp ogt float %17, 0xC1E0000000000000
  %21 = select i1 %20, float %17, float 0xC1E0000000000000
  %22 = fptosi float %21 to i32
  %23 = select i1 %18, i32 0, i32 2147483647
  %24 = select i1 %19, i32 %23, i32 %22
  %25 = fmul float %15, 6.400000e+01
  %26 = tail call float @llvm.round.f32(float %25) #9
  %27 = fcmp ult float %26, 0xC1E0000000000000
  %28 = fcmp ugt float %26, 0x41DFFFFFE0000000
  %29 = fcmp ogt float %26, 0xC1E0000000000000
  %30 = select i1 %29, float %26, float 0xC1E0000000000000
  %31 = fptosi float %30 to i32
  %32 = select i1 %27, i32 0, i32 2147483647
  %33 = select i1 %28, i32 %32, i32 %31
  %34 = zext i32 %33 to i64
  %35 = shl nuw i64 %34, 32
  %36 = zext i32 %24 to i64
  %37 = or i64 %35, %36
  store i64 %37, i64* %4, align 8
  call void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"* %0, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8, i32 %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %85

38:                                               ; preds = %3
  tail call void @_ZN5blink14TransformState22ApplyAccumulatedOffsetEv(%"class.blink::TransformState"* %0)
  %39 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 2
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %40, align 8
  %42 = icmp eq %"class.blink::TransformationMatrix"* %41, null
  br i1 %42, label %61, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 8
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %43
  %48 = bitcast %"class.blink::TransformationMatrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %48) #9
  %49 = bitcast %"class.blink::TransformationMatrix"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 8 %49, i64 128, i1 false) #9
  %50 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %5, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %41) #9
  %51 = call noalias i8* @malloc(i64 128) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %48, i64 128, i1 false) #9
  %52 = ptrtoint i8* %51 to i64
  %53 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %40, align 8
  %54 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  store i64 %52, i64* %54, align 8
  %55 = icmp eq %"class.blink::TransformationMatrix"* %53, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %47
  %57 = bitcast %"class.blink::TransformationMatrix"* %53 to i8*
  call void @free(i8* %57) #9
  br label %58

58:                                               ; preds = %56, %47
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %48) #9
  br label %67

59:                                               ; preds = %43
  %60 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %41, %"class.blink::TransformationMatrix"* dereferenceable(128) %1) #9
  br label %67

61:                                               ; preds = %38
  switch i32 %2, label %79 [
    i32 1, label %62
    i32 0, label %70
  ]

62:                                               ; preds = %61
  %63 = tail call noalias i8* @malloc(i64 128) #9
  %64 = bitcast %"class.blink::TransformationMatrix"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 128, i1 false) #9
  %65 = ptrtoint i8* %63 to i64
  %66 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  store i64 %65, i64* %66, align 8
  br label %82

67:                                               ; preds = %58, %59
  switch i32 %2, label %79 [
    i32 0, label %68
    i32 1, label %82
  ]

68:                                               ; preds = %67
  %69 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %40, align 8
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi %"class.blink::TransformationMatrix"* [ %69, %68 ], [ null, %61 ]
  %72 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 5
  %73 = load i8, i8* %72, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %70
  call void @_ZN5blink20TransformationMatrix11FlattenTo2dEv(%"class.blink::TransformationMatrix"* %71) #9
  br label %79

76:                                               ; preds = %70
  %77 = icmp eq %"class.blink::TransformationMatrix"* %71, null
  %78 = select i1 %77, %"class.blink::TransformationMatrix"* %1, %"class.blink::TransformationMatrix"* %71
  call void @_ZN5blink14TransformState20FlattenWithTransformERKNS_20TransformationMatrixE(%"class.blink::TransformState"* %0, %"class.blink::TransformationMatrix"* dereferenceable(128) %78)
  br label %79

79:                                               ; preds = %76, %75, %61, %67
  %80 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 5
  %81 = load i8, i8* %80, align 1, !range !2
  br label %82

82:                                               ; preds = %62, %67, %79
  %83 = phi i8 [ %81, %79 ], [ 1, %67 ], [ 1, %62 ]
  %84 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 4
  store i8 %83, i8* %84, align 8
  br label %85

85:                                               ; preds = %82, %7
  ret void
}

declare void @_ZNK5blink15AffineTransform22ToTransformationMatrixEv(%"class.blink::TransformationMatrix"* sret, %"class.blink::AffineTransform"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20TransformationMatrix20IsIntegerTranslationEv(%"class.blink::TransformationMatrix"*) local_unnamed_addr #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

declare void @_ZN5blink20TransformationMatrix11FlattenTo2dEv(%"class.blink::TransformationMatrix"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14TransformState20FlattenWithTransformERKNS_20TransformationMatrixE(%"class.blink::TransformState"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::FloatQuad", align 4
  %4 = alloca %"class.blink::TransformationMatrix", align 8
  %5 = alloca %"class.blink::FloatQuad", align 4
  %6 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %25

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 2, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 0
  %15 = tail call <2 x float> @_ZNK5blink20TransformationMatrix8MapPointERKNS_10FloatPointE(%"class.blink::TransformationMatrix"* %1, %"class.blink::FloatPoint"* dereferenceable(8) %14) #9
  %16 = bitcast %"class.blink::TransformState"* %0 to <2 x float>*
  store <2 x float> %15, <2 x float>* %16, align 8
  br label %17

17:                                               ; preds = %9, %13
  %18 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 7
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::FloatQuad"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 1
  call void @_ZNK5blink20TransformationMatrix7MapQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* nonnull sret %3, %"class.blink::TransformationMatrix"* %1, %"class.blink::FloatQuad"* dereferenceable(32) %23) #9
  %24 = bitcast %"class.blink::FloatQuad"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 4 %22, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #9
  br label %43

25:                                               ; preds = %2
  %26 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %26) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -1, i64 128, i1 false)
  call void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* nonnull sret %4, %"class.blink::TransformationMatrix"* %1) #9
  %27 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 6
  %28 = load i8, i8* %27, align 2, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 0
  %32 = call <2 x float> @_ZNK5blink20TransformationMatrix12ProjectPointERKNS_10FloatPointEPb(%"class.blink::TransformationMatrix"* nonnull %4, %"class.blink::FloatPoint"* dereferenceable(8) %31, i8* null) #9
  %33 = bitcast %"class.blink::TransformState"* %0 to <2 x float>*
  store <2 x float> %32, <2 x float>* %33, align 8
  br label %34

34:                                               ; preds = %25, %30
  %35 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 7
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 1
  call void @_ZNK5blink20TransformationMatrix11ProjectQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* nonnull sret %5, %"class.blink::TransformationMatrix"* nonnull %4, %"class.blink::FloatQuad"* dereferenceable(32) %40) #9
  %41 = bitcast %"class.blink::FloatQuad"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 4 %39, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #9
  br label %42

42:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %26) #9
  br label %43

43:                                               ; preds = %17, %21, %42
  %44 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %44, align 8
  %46 = icmp eq %"class.blink::TransformationMatrix"* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %45, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %48, align 8
  %49 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %45, i64 0, i32 0, i32 0, i64 0, i64 1
  %50 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %45, i64 0, i32 0, i32 0, i64 1, i64 1
  %51 = bitcast double* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 32, i1 false) #9
  store double 1.000000e+00, double* %50, align 8
  %52 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %45, i64 0, i32 0, i32 0, i64 1, i64 2
  %53 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %45, i64 0, i32 0, i32 0, i64 2, i64 2
  %54 = bitcast double* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #9
  store double 1.000000e+00, double* %53, align 8
  %55 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %45, i64 0, i32 0, i32 0, i64 2, i64 3
  %56 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %45, i64 0, i32 0, i32 0, i64 3, i64 3
  %57 = bitcast double* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #9
  store double 1.000000e+00, double* %56, align 8
  br label %58

58:                                               ; preds = %43, %47
  %59 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 4
  store i8 0, i8* %59, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14TransformState11MappedPointEv(%"class.blink::TransformState"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.blink::FloatPoint"*
  %4 = alloca %"class.blink::TransformationMatrix", align 8
  %5 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = bitcast i64* %2 to float*
  %7 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %3, i64 0, i32 1
  %8 = bitcast %"class.blink::TransformState"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %2, align 8
  %10 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 3
  %14 = trunc i64 %9 to i32
  %15 = bitcast i32 %14 to float
  %16 = lshr i64 %9, 32
  %17 = trunc i64 %16 to i32
  %18 = bitcast i32 %17 to float
  br i1 %12, label %19, label %22

19:                                               ; preds = %1
  %20 = bitcast %"struct.blink::PhysicalOffset"* %13 to i64*
  %21 = load i64, i64* %20, align 8
  br label %55

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %13, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = tail call i1 @llvm.is.constant.i32(i32 %24) #9
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = sub i32 0, %24
  %28 = icmp eq i32 %27, -2147483648
  %29 = select i1 %28, i32 2147483647, i32 %27
  br label %35

30:                                               ; preds = %22
  %31 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %24) #9
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 2147483647, i32 %33
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi i32 [ %29, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 3, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = tail call i1 @llvm.is.constant.i32(i32 %38) #9
  br i1 %39, label %40, label %44

40:                                               ; preds = %35
  %41 = sub i32 0, %38
  %42 = icmp eq i32 %41, -2147483648
  %43 = select i1 %42, i32 2147483647, i32 %41
  br label %49

44:                                               ; preds = %35
  %45 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %38) #9
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 2147483647, i32 %47
  br label %49

49:                                               ; preds = %40, %44
  %50 = phi i32 [ %43, %40 ], [ %48, %44 ]
  %51 = zext i32 %50 to i64
  %52 = shl nuw i64 %51, 32
  %53 = zext i32 %36 to i64
  %54 = or i64 %52, %53
  br label %55

55:                                               ; preds = %49, %19
  %56 = phi i64 [ %21, %19 ], [ %54, %49 ]
  %57 = trunc i64 %56 to i32
  %58 = lshr i64 %56, 32
  %59 = trunc i64 %58 to i32
  %60 = sitofp i32 %57 to float
  %61 = fmul float %60, 1.562500e-02
  %62 = sitofp i32 %59 to float
  %63 = fmul float %62, 1.562500e-02
  %64 = fadd float %61, %15
  store float %64, float* %6, align 8
  %65 = fadd float %63, %18
  store float %65, float* %7, align 4
  %66 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %67 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %66, align 8
  %68 = icmp eq %"class.blink::TransformationMatrix"* %67, null
  br i1 %68, label %80, label %69

69:                                               ; preds = %55
  %70 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %70) #9
  br i1 %12, label %71, label %73

71:                                               ; preds = %69
  %72 = call <2 x float> @_ZNK5blink20TransformationMatrix8MapPointERKNS_10FloatPointE(%"class.blink::TransformationMatrix"* nonnull %67, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %3) #9
  br label %75

73:                                               ; preds = %69
  call void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* nonnull sret %4, %"class.blink::TransformationMatrix"* nonnull %67) #9
  %74 = call <2 x float> @_ZNK5blink20TransformationMatrix12ProjectPointERKNS_10FloatPointEPb(%"class.blink::TransformationMatrix"* nonnull %4, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %3, i8* null) #9
  br label %75

75:                                               ; preds = %73, %71
  %76 = phi <2 x float> [ %72, %71 ], [ %74, %73 ]
  %77 = bitcast i64* %2 to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %70) #9
  %78 = extractelement <2 x float> %76, i32 0
  %79 = extractelement <2 x float> %76, i32 1
  br label %80

80:                                               ; preds = %55, %75
  %81 = phi float [ %65, %55 ], [ %79, %75 ]
  %82 = phi float [ %64, %55 ], [ %78, %75 ]
  %83 = fmul float %82, 6.400000e+01
  %84 = call float @llvm.round.f32(float %83) #9
  %85 = fcmp ult float %84, 0xC1E0000000000000
  %86 = fcmp ugt float %84, 0x41DFFFFFE0000000
  %87 = fcmp ogt float %84, 0xC1E0000000000000
  %88 = select i1 %87, float %84, float 0xC1E0000000000000
  %89 = fptosi float %88 to i32
  %90 = select i1 %85, i32 0, i32 2147483647
  %91 = select i1 %86, i32 %90, i32 %89
  %92 = fmul float %81, 6.400000e+01
  %93 = call float @llvm.round.f32(float %92) #9
  %94 = fcmp ult float %93, 0xC1E0000000000000
  %95 = fcmp ugt float %93, 0x41DFFFFFE0000000
  %96 = fcmp ogt float %93, 0xC1E0000000000000
  %97 = select i1 %96, float %93, float 0xC1E0000000000000
  %98 = fptosi float %97 to i32
  %99 = select i1 %94, i32 0, i32 2147483647
  %100 = select i1 %95, i32 %99, i32 %98
  %101 = zext i32 %100 to i64
  %102 = shl nuw i64 %101, 32
  %103 = zext i32 %91 to i64
  %104 = or i64 %102, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i64 %104
}

declare <2 x float> @_ZNK5blink20TransformationMatrix8MapPointERKNS_10FloatPointE(%"class.blink::TransformationMatrix"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* sret, %"class.blink::TransformationMatrix"*) local_unnamed_addr #2

declare <2 x float> @_ZNK5blink20TransformationMatrix12ProjectPointERKNS_10FloatPointEPb(%"class.blink::TransformationMatrix"*, %"class.blink::FloatPoint"* dereferenceable(8), i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14TransformState10MappedQuadEv(%"class.blink::FloatQuad"* noalias sret, %"class.blink::TransformState"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::FloatQuad", align 16
  %4 = alloca %"class.blink::TransformationMatrix", align 8
  %5 = bitcast %"class.blink::FloatQuad"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1
  %8 = bitcast %"class.blink::FloatQuad"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* align 8 %8, i64 32, i1 false)
  %9 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 8
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 3
  br i1 %11, label %13, label %16

13:                                               ; preds = %2
  %14 = bitcast %"struct.blink::PhysicalOffset"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  br label %49

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %12, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = tail call i1 @llvm.is.constant.i32(i32 %18) #9
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = sub i32 0, %18
  %22 = icmp eq i32 %21, -2147483648
  %23 = select i1 %22, i32 2147483647, i32 %21
  br label %29

24:                                               ; preds = %16
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %18) #9
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 2147483647, i32 %27
  br label %29

29:                                               ; preds = %24, %20
  %30 = phi i32 [ %23, %20 ], [ %28, %24 ]
  %31 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 3, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = tail call i1 @llvm.is.constant.i32(i32 %32) #9
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = sub i32 0, %32
  %36 = icmp eq i32 %35, -2147483648
  %37 = select i1 %36, i32 2147483647, i32 %35
  br label %43

38:                                               ; preds = %29
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %32) #9
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 2147483647, i32 %41
  br label %43

43:                                               ; preds = %34, %38
  %44 = phi i32 [ %37, %34 ], [ %42, %38 ]
  %45 = zext i32 %44 to i64
  %46 = shl nuw i64 %45, 32
  %47 = zext i32 %30 to i64
  %48 = or i64 %46, %47
  br label %49

49:                                               ; preds = %43, %13
  %50 = phi i64 [ %15, %13 ], [ %48, %43 ]
  %51 = lshr i64 %50, 32
  %52 = insertelement <2 x i64> undef, i64 %50, i32 0
  %53 = insertelement <2 x i64> %52, i64 %51, i32 1
  %54 = trunc <2 x i64> %53 to <2 x i32>
  %55 = sitofp <2 x i32> %54 to <2 x float>
  %56 = fmul <2 x float> %55, <float 1.562500e-02, float 1.562500e-02>
  %57 = shufflevector <2 x float> %56, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %58 = bitcast %"class.blink::FloatQuad"* %3 to <4 x float>*
  %59 = load <4 x float>, <4 x float>* %58, align 16
  %60 = fadd <4 x float> %59, %57
  %61 = bitcast %"class.blink::FloatQuad"* %3 to <4 x float>*
  store <4 x float> %60, <4 x float>* %61, align 16
  %62 = bitcast float* %6 to <4 x float>*
  %63 = load <4 x float>, <4 x float>* %62, align 16
  %64 = shufflevector <2 x float> %56, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %65 = fadd <4 x float> %64, %63
  %66 = bitcast float* %6 to <4 x float>*
  store <4 x float> %65, <4 x float>* %66, align 16
  %67 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %68 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %67, align 8
  %69 = icmp eq %"class.blink::TransformationMatrix"* %68, null
  br i1 %69, label %70, label %72

70:                                               ; preds = %49
  %71 = bitcast %"class.blink::FloatQuad"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* nonnull align 16 %5, i64 32, i1 false)
  br label %76

72:                                               ; preds = %49
  br i1 %11, label %73, label %74

73:                                               ; preds = %72
  call void @_ZNK5blink20TransformationMatrix7MapQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* sret %0, %"class.blink::TransformationMatrix"* nonnull %68, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %3) #9
  br label %76

74:                                               ; preds = %72
  %75 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %75) #9
  call void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* nonnull sret %4, %"class.blink::TransformationMatrix"* nonnull %68) #9
  call void @_ZNK5blink20TransformationMatrix11ProjectQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* sret %0, %"class.blink::TransformationMatrix"* nonnull %4, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %75) #9
  br label %76

76:                                               ; preds = %74, %73, %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  ret void
}

declare void @_ZNK5blink20TransformationMatrix7MapQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* sret, %"class.blink::TransformationMatrix"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZNK5blink20TransformationMatrix11ProjectQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* sret, %"class.blink::TransformationMatrix"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZNK5blink14TransformState20AccumulatedTransformEv(%"class.blink::TransformState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %2, align 8
  ret %"class.blink::TransformationMatrix"* %3
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
