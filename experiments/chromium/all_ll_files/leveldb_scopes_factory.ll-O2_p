; ModuleID = '../../components/services/storage/indexed_db/scopes/leveldb_scopes_factory.cc'
source_filename = "../../components/services/storage/indexed_db/scopes/leveldb_scopes_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::LevelDBScopesOptions" = type { %"class.std::__1::vector", i64, %"class.content::ScopesLockManager"*, %"class.base::RepeatingCallback" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.content::ScopesLockManager" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.52" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.content::LevelDBScopes"* }
%"class.content::LevelDBScopes" = type { %"class.std::__1::vector", i64, %"class.std::__1::vector.25", %"class.std::__1::vector.32", %class.scoped_refptr.40, %class.scoped_refptr.40, i8, i32, %class.scoped_refptr.2, %"class.content::ScopesLockManager"*, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.std::__1::pair.34"*, %"struct.std::__1::pair.34"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair.34"* }
%class.scoped_refptr.40 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.41" }>
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.2 = type { %"class.content::LevelDBState"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.42 }
%class.scoped_refptr.42 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.43", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.43" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.44" }
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i8 }
%"class.std::__1::__tuple_leaf.52" = type { %"class.leveldb::Status" }
%"class.leveldb::Status" = type { i8* }
%"class.content::DefaultLevelDBScopesFactory" = type { %"class.content::LevelDBScopesFactory" }
%"class.content::LevelDBScopesFactory" = type { i32 (...)** }
%"class.content::LevelDBState" = type { %"class.base::RefCountedThreadSafe.3", %"class.std::__1::unique_ptr", %"class.leveldb::Comparator"*, %"class.std::__1::unique_ptr.7", %"class.base::FilePath", %"class.std::__1::basic_string", %"struct.std::__1::atomic.18", %"class.base::WaitableEvent"* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.leveldb::Env"* }
%"class.leveldb::Env" = type opaque
%"class.leveldb::Comparator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.leveldb::DB"* }
%"class.leveldb::DB" = type { i32 (...)** }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%"class.base::WaitableEvent" = type opaque

$_ZN7content20LevelDBScopesFactoryD2Ev = comdat any

$_ZN7content27DefaultLevelDBScopesFactoryD0Ev = comdat any

@_ZTVN7content27DefaultLevelDBScopesFactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::LevelDBScopesFactory"*)* @_ZN7content20LevelDBScopesFactoryD2Ev to i8*), i8* bitcast (void (%"class.content::DefaultLevelDBScopesFactory"*)* @_ZN7content27DefaultLevelDBScopesFactoryD0Ev to i8*), i8* bitcast (void (%"class.std::__1::tuple"*, %"class.content::DefaultLevelDBScopesFactory"*, %"struct.content::LevelDBScopesOptions"*, %"class.content::LevelDBState"*)* @_ZN7content27DefaultLevelDBScopesFactory32CreateAndInitializeLevelDBScopesENS_20LevelDBScopesOptionsE13scoped_refptrINS_12LevelDBStateEE to i8*)] }, align 8

@_ZN7content20LevelDBScopesOptionsC1Ev = hidden unnamed_addr alias void (%"struct.content::LevelDBScopesOptions"*), void (%"struct.content::LevelDBScopesOptions"*)* @_ZN7content20LevelDBScopesOptionsC2Ev
@_ZN7content20LevelDBScopesOptionsD1Ev = hidden unnamed_addr alias void (%"struct.content::LevelDBScopesOptions"*), void (%"struct.content::LevelDBScopesOptions"*)* @_ZN7content20LevelDBScopesOptionsD2Ev
@_ZN7content20LevelDBScopesOptionsC1EOS0_ = hidden unnamed_addr alias void (%"struct.content::LevelDBScopesOptions"*, %"struct.content::LevelDBScopesOptions"*), void (%"struct.content::LevelDBScopesOptions"*, %"struct.content::LevelDBScopesOptions"*)* @_ZN7content20LevelDBScopesOptionsC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20LevelDBScopesOptionsC2Ev(%"struct.content::LevelDBScopesOptions"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.content::LevelDBScopesOptions"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #6
  %3 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 1
  store i64 1048576, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 2
  %5 = bitcast %"class.content::ScopesLockManager"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20LevelDBScopesOptionsD2Ev(%"struct.content::LevelDBScopesOptions"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #6
  %3 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #7
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20LevelDBScopesOptionsC2EOS0_(%"struct.content::LevelDBScopesOptions"* nocapture, %"struct.content::LevelDBScopesOptions"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::LevelDBScopesOptions"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #6
  %4 = bitcast %"struct.content::LevelDBScopesOptions"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.content::LevelDBScopesOptions"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.content::LevelDBScopesOptions"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #6
  %18 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %1, i64 0, i32 1
  %20 = bitcast i64* %18 to i8*
  %21 = bitcast i64* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false)
  %22 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %1, i64 0, i32 3
  %24 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::RepeatingCallback"* %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::RepeatingCallback"* %22 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.content::LevelDBScopesOptions"* @_ZN7content20LevelDBScopesOptionsaSEOS0_(%"struct.content::LevelDBScopesOptions"* returned, %"struct.content::LevelDBScopesOptions"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #7
  %10 = bitcast %"struct.content::LevelDBScopesOptions"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #6
  br label %11

11:                                               ; preds = %2, %6
  %12 = bitcast %"struct.content::LevelDBScopesOptions"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"struct.content::LevelDBScopesOptions"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast i8** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"struct.content::LevelDBScopesOptions"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #6
  %26 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %1, i64 0, i32 1
  %28 = bitcast i64* %26 to i8*
  %29 = bitcast i64* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  %30 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %0, i64 0, i32 3, i32 0
  %31 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %1, i64 0, i32 3, i32 0
  %32 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %30, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %31) #6
  ret %"struct.content::LevelDBScopesOptions"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content27DefaultLevelDBScopesFactory32CreateAndInitializeLevelDBScopesENS_20LevelDBScopesOptionsE13scoped_refptrINS_12LevelDBStateEE(%"class.std::__1::tuple"* noalias nocapture sret, %"class.content::DefaultLevelDBScopesFactory"* nocapture readnone, %"struct.content::LevelDBScopesOptions"* nocapture, %"class.content::LevelDBState"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca %"class.leveldb::Status", align 8
  %8 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %2, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %2, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %2, i64 0, i32 3
  %11 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11)
  %12 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = tail call i8* @_Znwm(i64 144) #7
  %14 = bitcast i8* %13 to %"class.content::LevelDBScopes"*
  %15 = bitcast %"struct.content::LevelDBScopesOptions"* %2 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %17, align 16
  %18 = getelementptr inbounds %"struct.content::LevelDBScopesOptions", %"struct.content::LevelDBScopesOptions"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast i8** %21 to i64*
  store i64 %20, i64* %22, align 16
  %23 = bitcast %"struct.content::LevelDBScopesOptions"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #6
  %24 = load i64, i64* %8, align 8
  %25 = load %"class.content::ScopesLockManager"*, %"class.content::ScopesLockManager"** %9, align 8
  %26 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::RepeatingCallback"* %10 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::RepeatingCallback"* %6 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  call void @_ZN7content13LevelDBScopesC1ENSt3__16vectorIhNS1_9allocatorIhEEEEm13scoped_refptrINS_12LevelDBStateEEPNS_17ScopesLockManagerEN4base17RepeatingCallbackIFvN7leveldb6StatusEEEE(%"class.content::LevelDBScopes"* nonnull %14, %"class.std::__1::vector"* nonnull %5, i64 %24, %"class.content::LevelDBState"* %3, %"class.content::ScopesLockManager"* %25, %"class.base::RepeatingCallback"* nonnull %6) #6
  %30 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #6
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 16
  %33 = icmp eq i8* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %36 = bitcast i8** %35 to i64*
  %37 = ptrtoint i8* %32 to i64
  store i64 %37, i64* %36, align 8
  call void @_ZdlPv(i8* nonnull %32) #7
  br label %38

38:                                               ; preds = %4, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  %39 = bitcast %"class.leveldb::Status"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6
  %40 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  call void @_ZN7content13LevelDBScopes10InitializeEv(%"class.leveldb::Status"* nonnull sret %7, %"class.content::LevelDBScopes"* nonnull %14) #6
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  %43 = bitcast %"class.std::__1::tuple"* %0 to i64*
  br i1 %42, label %44, label %47

44:                                               ; preds = %38
  %45 = ptrtoint i8* %13 to i64
  store i64 %45, i64* %43, align 8
  %46 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i8* null, i8** %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  br label %54

47:                                               ; preds = %38
  store i64 0, i64* %43, align 8
  %48 = call i8* @_ZN7leveldb6Status9CopyStateEPKc(i8* nonnull %41) #6
  %49 = load i8*, i8** %40, align 8
  %50 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = icmp eq i8* %49, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  call void @_ZdaPv(i8* nonnull %49) #7
  br label %53

53:                                               ; preds = %47, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  call void @_ZN7content13LevelDBScopesD1Ev(%"class.content::LevelDBScopes"* nonnull %14) #6
  call void @_ZdlPv(i8* nonnull %13) #7
  br label %54

54:                                               ; preds = %53, %44
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7content13LevelDBScopes10InitializeEv(%"class.leveldb::Status"* sret, %"class.content::LevelDBScopes"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content20LevelDBScopesFactoryD2Ev(%"class.content::LevelDBScopesFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content27DefaultLevelDBScopesFactoryD0Ev(%"class.content::DefaultLevelDBScopesFactory"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.content::DefaultLevelDBScopesFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #1

declare i8* @_ZN7leveldb6Status9CopyStateEPKc(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN7content13LevelDBScopesC1ENSt3__16vectorIhNS1_9allocatorIhEEEEm13scoped_refptrINS_12LevelDBStateEEPNS_17ScopesLockManagerEN4base17RepeatingCallbackIFvN7leveldb6StatusEEEE(%"class.content::LevelDBScopes"*, %"class.std::__1::vector"*, i64, %"class.content::LevelDBState"*, %"class.content::ScopesLockManager"*, %"class.base::RepeatingCallback"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7content13LevelDBScopesD1Ev(%"class.content::LevelDBScopes"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
