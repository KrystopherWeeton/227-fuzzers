; ModuleID = 'gen/extensions/common/api/incognito.cc'
source_filename = "gen/extensions/common/api/incognito.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::api::incognito::ManifestKeys" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.31 }
%union.anon.31 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.39" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::BasicStringPiece"* }

$_ZN20json_schema_compiler19manifest_parse_util23ParseEnumFromDictionaryIN10extensions3api9incognito13IncognitoModeEEEbRKN4base15DictionaryValueENS6_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPFT_RKNSB_12basic_stringIcSD_NSB_9allocatorIcEEEEEbSF_PSF_PNSG_IDsNSC_IDsEENSH_IDsEEEEPNSB_6vectorISE_NSH_ISE_EEEE = comdat any

@.str = private unnamed_addr constant [6 x i8] c"split\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"spanning\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"not_allowed\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN10extensions3api9incognito12ManifestKeys10kIncognitoE = hidden constant [10 x i8] c"incognito\00", align 1
@switch.table._ZN10extensions3api9incognito8ToStringENS1_13IncognitoModeE = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)], align 8

@_ZN10extensions3api9incognito12ManifestKeysC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::incognito::ManifestKeys"*), void (%"struct.extensions::api::incognito::ManifestKeys"*)* @_ZN10extensions3api9incognito12ManifestKeysC2Ev
@_ZN10extensions3api9incognito12ManifestKeysD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::incognito::ManifestKeys"*), void (%"struct.extensions::api::incognito::ManifestKeys"*)* @_ZN10extensions3api9incognito12ManifestKeysD2Ev
@_ZN10extensions3api9incognito12ManifestKeysC1EOS2_ = hidden unnamed_addr alias void (%"struct.extensions::api::incognito::ManifestKeys"*, %"struct.extensions::api::incognito::ManifestKeys"*), void (%"struct.extensions::api::incognito::ManifestKeys"*, %"struct.extensions::api::incognito::ManifestKeys"*)* @_ZN10extensions3api9incognito12ManifestKeysC2EOS2_

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN10extensions3api9incognito8ToStringENS1_13IncognitoModeE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZN10extensions3api9incognito8ToStringENS1_13IncognitoModeE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions3api9incognito18ParseIncognitoModeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) #1 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 5
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5) #7
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %43, label %14

14:                                               ; preds = %11
  %15 = load i8, i8* %3, align 1
  %16 = load i64, i64* %6, align 8
  %17 = zext i8 %15 to i64
  br label %18

18:                                               ; preds = %14, %1
  %19 = phi i64 [ %17, %14 ], [ %8, %1 ]
  %20 = phi i64 [ %16, %14 ], [ %7, %1 ]
  %21 = phi i8 [ %15, %14 ], [ %4, %1 ]
  %22 = icmp slt i8 %21, 0
  %23 = select i1 %22, i64 %20, i64 %19
  %24 = icmp eq i64 %23, 8
  br i1 %24, label %25, label %32

25:                                               ; preds = %18
  %26 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8) #7
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %43, label %28

28:                                               ; preds = %25
  %29 = load i8, i8* %3, align 1
  %30 = load i64, i64* %6, align 8
  %31 = zext i8 %29 to i64
  br label %32

32:                                               ; preds = %28, %18
  %33 = phi i64 [ %31, %28 ], [ %19, %18 ]
  %34 = phi i64 [ %30, %28 ], [ %20, %18 ]
  %35 = phi i8 [ %29, %28 ], [ %21, %18 ]
  %36 = icmp slt i8 %35, 0
  %37 = select i1 %36, i64 %34, i64 %33
  %38 = icmp eq i64 %37, 11
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #7
  %41 = icmp eq i32 %40, 0
  %42 = select i1 %41, i32 3, i32 0
  ret i32 %42

43:                                               ; preds = %32, %25, %11
  %44 = phi i32 [ 1, %11 ], [ 2, %25 ], [ 0, %32 ]
  ret i32 %44
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions3api9incognito12ManifestKeysC2Ev(%"struct.extensions::api::incognito::ManifestKeys"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::incognito::ManifestKeys", %"struct.extensions::api::incognito::ManifestKeys"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions3api9incognito12ManifestKeysD2Ev(%"struct.extensions::api::incognito::ManifestKeys"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10extensions3api9incognito12ManifestKeysC2EOS2_(%"struct.extensions::api::incognito::ManifestKeys"* nocapture, %"struct.extensions::api::incognito::ManifestKeys"* nocapture readonly dereferenceable(4)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::incognito::ManifestKeys", %"struct.extensions::api::incognito::ManifestKeys"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.extensions::api::incognito::ManifestKeys", %"struct.extensions::api::incognito::ManifestKeys"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(4) %"struct.extensions::api::incognito::ManifestKeys"* @_ZN10extensions3api9incognito12ManifestKeysaSEOS2_(%"struct.extensions::api::incognito::ManifestKeys"* returned, %"struct.extensions::api::incognito::ManifestKeys"* nocapture readonly dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::incognito::ManifestKeys", %"struct.extensions::api::incognito::ManifestKeys"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.extensions::api::incognito::ManifestKeys", %"struct.extensions::api::incognito::ManifestKeys"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 4
  ret %"struct.extensions::api::incognito::ManifestKeys"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions3api9incognito12ManifestKeys19ParseFromDictionaryERKN4base15DictionaryValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::DictionaryValue"* dereferenceable(32), %"struct.extensions::api::incognito::ManifestKeys"*, %"class.std::__1::basic_string.28"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::vector.37", align 8
  %5 = bitcast %"class.std::__1::vector.37"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #7
  %8 = getelementptr inbounds %"struct.extensions::api::incognito::ManifestKeys", %"struct.extensions::api::incognito::ManifestKeys"* %1, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util23ParseEnumFromDictionaryIN10extensions3api9incognito13IncognitoModeEEEbRKN4base15DictionaryValueENS6_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPFT_RKNSB_12basic_stringIcSD_NSB_9allocatorIcEEEEEbSF_PSF_PNSG_IDsNSC_IDsEENSH_IDsEEEEPNSB_6vectorISE_NSH_ISE_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api9incognito12ManifestKeys10kIncognitoE, i64 0, i64 0), i64 9, i32 (%"class.std::__1::basic_string"*)* nonnull @_ZN10extensions3api9incognito18ParseIncognitoModeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, i1 zeroext true, i32 0, i32* %8, %"class.std::__1::basic_string.28"* %2, %"class.std::__1::vector.37"* nonnull %4)
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  call void @_ZN20json_schema_compiler19manifest_parse_util18PopulateFinalErrorEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN4base16BasicStringPieceIcNS3_IcEEEENS5_ISD_EEEE(%"class.std::__1::basic_string.28"* %2, %"class.std::__1::vector.37"* nonnull %4) #7
  br label %11

11:                                               ; preds = %3, %10
  %12 = phi i1 [ false, %10 ], [ true, %3 ]
  %13 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %14 = icmp eq %"class.base::BasicStringPiece"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.base::BasicStringPiece"* %13 to i64
  %17 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret i1 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util23ParseEnumFromDictionaryIN10extensions3api9incognito13IncognitoModeEEEbRKN4base15DictionaryValueENS6_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPFT_RKNSB_12basic_stringIcSD_NSB_9allocatorIcEEEEEbSF_PSF_PNSG_IDsNSC_IDsEENSH_IDsEEEEPNSB_6vectorISE_NSH_ISE_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, i32 (%"class.std::__1::basic_string"*)*, i1 zeroext, i32, i32*, %"class.std::__1::basic_string.28"*, %"class.std::__1::vector.37"*) local_unnamed_addr #1 comdat {
  %10 = alloca %"class.std::__1::basic_string", align 8
  br i1 %4, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %0, i64 0, i32 0
  %13 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %12, i8* %1, i64 %2) #7
  %14 = icmp eq %"class.base::Value"* %13, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %11, %9
  %16 = tail call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %0, i8* %1, i64 %2, i8 zeroext 4, %"class.std::__1::basic_string.28"* %7, %"class.std::__1::vector.37"* %8) #7
  %17 = icmp eq %"class.base::Value"* %16, null
  br i1 %17, label %48, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"* nonnull %16) #7
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %28, i64 24, i1 false) #7
  br label %34

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %31, i64 %33) #7
  br label %34

34:                                               ; preds = %27, %29
  %35 = call i32 %3(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #7
  %36 = icmp eq i32 %35, %5
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZN20json_schema_compiler19manifest_parse_util29PopulateInvalidEnumValueErrorEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_12basic_stringIcS5_NS3_9allocatorIcEEEEPNS7_IDsNS4_IDsEENS8_IDsEEEEPNS3_6vectorIS6_NS8_IS6_EEEE(i8* %1, i64 %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string.28"* %7, %"class.std::__1::vector.37"* %8) #7
  br label %39

38:                                               ; preds = %34
  store i32 %35, i32* %6, align 4
  br label %39

39:                                               ; preds = %38, %37
  %40 = phi i1 [ false, %37 ], [ true, %38 ]
  %41 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %46) #8
  br label %47

47:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #7
  br label %48

48:                                               ; preds = %47, %15, %11
  %49 = phi i1 [ true, %11 ], [ %40, %47 ], [ false, %15 ]
  ret i1 %49
}

declare void @_ZN20json_schema_compiler19manifest_parse_util18PopulateFinalErrorEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN4base16BasicStringPieceIcNS3_IcEEEENS5_ISD_EEEE(%"class.std::__1::basic_string.28"*, %"class.std::__1::vector.37"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, i8 zeroext, %"class.std::__1::basic_string.28"*, %"class.std::__1::vector.37"*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"*) local_unnamed_addr #5

declare void @_ZN20json_schema_compiler19manifest_parse_util29PopulateInvalidEnumValueErrorEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_12basic_stringIcS5_NS3_9allocatorIcEEEEPNS7_IDsNS4_IDsEENS8_IDsEEEEPNS3_6vectorIS6_NS8_IS6_EEEE(i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string.28"*, %"class.std::__1::vector.37"*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
