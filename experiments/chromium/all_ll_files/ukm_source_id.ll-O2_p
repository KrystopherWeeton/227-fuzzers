; ModuleID = '../../services/metrics/public/cpp/ukm_source_id.cc'
source_filename = "../../services/metrics/public/cpp/ukm_source_id.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ukm::SourceIdObj" = type { i64 }

@_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits = internal global i64 0, align 8
@_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits = internal global i64 0, align 8
@_ZZN3ukm11SourceIdObj3NewEvE3seq = internal global { { { i32 } } } zeroinitializer, align 4
@_ZZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE12kNumTypeBits = internal global i64 0, align 8
@_ZGVZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE12kNumTypeBits = internal global i64 0, align 8
@_ZZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE9kTypeMask = internal global i64 0, align 8
@_ZGVZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE9kTypeMask = internal global i64 0, align 8
@_ZZNK3ukm11SourceIdObj7GetTypeEvE12kNumTypeBits = internal global i64 0, align 8
@_ZGVZNK3ukm11SourceIdObj7GetTypeEvE12kNumTypeBits = internal global i64 0, align 8
@_ZZNK3ukm11SourceIdObj7GetTypeEvE9kTypeMask = internal global i64 0, align 8
@_ZGVZNK3ukm11SourceIdObj7GetTypeEvE9kTypeMask = internal global i64 0, align 8
@_ZZN3ukm13NoURLSourceIdEvE9source_id = internal global i64 0, align 8
@_ZGVZN3ukm13NoURLSourceIdEvE9source_id = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm11SourceIdObj3NewEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @_ZN4base10RandUint64Ev() #6
  %8 = and i64 %7, -4294967296
  store i64 %8, i64* @_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits, align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (i64* @_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits) #6
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN3ukm11SourceIdObj3NewEvE3seq, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %12 = add nsw i32 %11, 1
  %13 = sext i32 %12 to i64
  %14 = tail call i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64 %13, i64 0)
  %15 = and i64 %14, 4294967295
  %16 = load i64, i64* @_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits, align 8
  %17 = or i64 %15, %16
  ret i64 %17
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

declare i64 @_ZN4base10RandUint64Ev() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64, i64) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE12kNumTypeBits to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE12kNumTypeBits) #6
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = tail call double @log2(double 9.000000e+00) #6
  %10 = tail call double @llvm.ceil.f64(double %9) #6
  %11 = fptosi double %10 to i64
  store i64 %11, i64* @_ZZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE12kNumTypeBits, align 8
  %12 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (i64* @_ZZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE12kNumTypeBits to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE12kNumTypeBits) #6
  br label %13

13:                                               ; preds = %5, %8, %2
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE9kTypeMask to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %24, !prof !2

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE9kTypeMask) #6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = load i64, i64* @_ZZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE12kNumTypeBits, align 8
  %21 = shl nsw i64 -1, %20
  %22 = xor i64 %21, -1
  store i64 %22, i64* @_ZZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE9kTypeMask, align 8
  %23 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (i64* @_ZZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE9kTypeMask to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE9kTypeMask) #6
  br label %24

24:                                               ; preds = %16, %19, %13
  %25 = load i64, i64* @_ZZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeEE12kNumTypeBits, align 8
  %26 = shl i64 %0, %25
  %27 = or i64 %26, %1
  ret i64 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3ukm11SourceIdObj7GetTypeEv(%"class.ukm::SourceIdObj"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3ukm11SourceIdObj7GetTypeEvE12kNumTypeBits to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3ukm11SourceIdObj7GetTypeEvE12kNumTypeBits) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = tail call double @log2(double 9.000000e+00) #6
  %9 = tail call double @llvm.ceil.f64(double %8) #6
  %10 = fptosi double %9 to i64
  store i64 %10, i64* @_ZZNK3ukm11SourceIdObj7GetTypeEvE12kNumTypeBits, align 8
  %11 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (i64* @_ZZNK3ukm11SourceIdObj7GetTypeEvE12kNumTypeBits to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3ukm11SourceIdObj7GetTypeEvE12kNumTypeBits) #6
  br label %12

12:                                               ; preds = %4, %7, %1
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3ukm11SourceIdObj7GetTypeEvE9kTypeMask to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %23, !prof !2

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3ukm11SourceIdObj7GetTypeEvE9kTypeMask) #6
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = load i64, i64* @_ZZNK3ukm11SourceIdObj7GetTypeEvE12kNumTypeBits, align 8
  %20 = shl nsw i64 -1, %19
  %21 = xor i64 %20, -1
  store i64 %21, i64* @_ZZNK3ukm11SourceIdObj7GetTypeEvE9kTypeMask, align 8
  %22 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (i64* @_ZZNK3ukm11SourceIdObj7GetTypeEvE9kTypeMask to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3ukm11SourceIdObj7GetTypeEvE9kTypeMask) #6
  br label %23

23:                                               ; preds = %15, %18, %12
  %24 = getelementptr inbounds %"class.ukm::SourceIdObj", %"class.ukm::SourceIdObj"* %0, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* @_ZZNK3ukm11SourceIdObj7GetTypeEvE9kTypeMask, align 8
  %27 = and i64 %26, %25
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm17AssignNewSourceIdEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @_ZN4base10RandUint64Ev() #6
  %8 = and i64 %7, -4294967296
  store i64 %8, i64* @_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits, align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (i64* @_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits to i8*)) #6
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits) #6
  br label %10

10:                                               ; preds = %0, %3, %6
  %11 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN3ukm11SourceIdObj3NewEvE3seq, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %12 = add nsw i32 %11, 1
  %13 = sext i32 %12 to i64
  %14 = tail call i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64 %13, i64 0) #6
  %15 = and i64 %14, 4294967295
  %16 = load i64, i64* @_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits, align 8
  %17 = or i64 %15, %16
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm17ConvertToSourceIdElNS_11SourceIdObj4TypeE(i64, i64) local_unnamed_addr #0 {
  %3 = tail call i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64 %0, i64 %1)
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm15GetSourceIdTypeEl(i64) local_unnamed_addr #0 {
  %2 = alloca %"class.ukm::SourceIdObj", align 8
  %3 = bitcast %"class.ukm::SourceIdObj"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6
  %4 = getelementptr inbounds %"class.ukm::SourceIdObj", %"class.ukm::SourceIdObj"* %2, i64 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = call i64 @_ZNK3ukm11SourceIdObj7GetTypeEv(%"class.ukm::SourceIdObj"* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm13NoURLSourceIdEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN3ukm13NoURLSourceIdEvE9source_id to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %26, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3ukm13NoURLSourceIdEvE9source_id) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %3
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %16, !prof !2

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits) #6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = tail call i64 @_ZN4base10RandUint64Ev() #6
  %14 = and i64 %13, -4294967296
  store i64 %14, i64* @_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits, align 8
  %15 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (i64* @_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits to i8*)) #6
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3ukm11SourceIdObj3NewEvE15process_id_bits) #6
  br label %16

16:                                               ; preds = %6, %9, %12
  %17 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN3ukm11SourceIdObj3NewEvE3seq, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %18 = add nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = tail call i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64 %19, i64 0) #6
  %21 = and i64 %20, 4294967295
  %22 = load i64, i64* @_ZZN3ukm11SourceIdObj3NewEvE15process_id_bits, align 8
  %23 = or i64 %21, %22
  %24 = tail call i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64 %23, i64 8)
  store i64 %24, i64* @_ZZN3ukm13NoURLSourceIdEvE9source_id, align 8
  %25 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (i64* @_ZZN3ukm13NoURLSourceIdEvE9source_id to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3ukm13NoURLSourceIdEvE9source_id) #6
  br label %26

26:                                               ; preds = %3, %16, %0
  %27 = load i64, i64* @_ZZN3ukm13NoURLSourceIdEvE9source_id, align 8
  ret i64 %27
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #4

; Function Attrs: nofree nounwind
declare double @log2(double) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
