; ModuleID = '../../third_party/vulkan-deps/glslang/src/SPIRV/InReadableOrder.cpp'
source_filename = "../../third_party/vulkan-deps/glslang/src/SPIRV/InReadableOrder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spv::Block" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.17", %"class.std::__1::vector.17", %"class.std::__1::vector", %"class.spv::Function"*, i8, [7 x i8] }>
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.spv::Block"**, %"class.spv::Block"**, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.spv::Block"** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spv::Instruction"* }
%"class.spv::Instruction" = type { i32 (...)**, i32, i32, i32, %"class.std::__1::vector.0", %"class.std::__1::vector.5", %"class.spv::Block"* }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i32* }
%"class.std::__1::vector.5" = type { i64*, i64, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr"* }
%"class.spv::Function" = type { i32 (...)**, %"class.spv::Module"*, %"class.spv::Instruction", %"class.std::__1::vector.31", %"class.std::__1::vector.17", i8, i8, %"class.std::__1::set" }
%"class.spv::Module" = type { i32 (...)**, %"class.std::__1::vector.24", %"class.std::__1::vector.31" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.spv::Function"**, %"class.spv::Function"**, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.spv::Function"** }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.spv::Instruction"**, %"class.spv::Instruction"**, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.spv::Instruction"** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spv::Block"*, i32, %"class.spv::Block"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.(anonymous namespace)::ReadableOrderTraverser" = type { %"class.std::__1::function", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.45", %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.60", [4 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { float }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.spv::Block"* }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.56"*, i8, [7 x i8] }>
%"class.std::__1::allocator.56" = type { i8 }

$_ZNSt3__113unordered_setIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseERKS3_ = comdat any

$_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE = comdat any

@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv15inReadableOrderEPNS_5BlockENSt3__18functionIFvS1_NS_11ReachReasonES1_EEE(%"class.spv::Block"*, %"class.std::__1::function"* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %"class.(anonymous namespace)::ReadableOrderTraverser", align 8
  %4 = bitcast %"class.(anonymous namespace)::ReadableOrderTraverser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast [8 x i8]* %7 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %11 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 0
  %13 = load i8* (i8*)*, i8* (i8*)** %12, align 8
  %14 = icmp eq i8* (i8*)* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = tail call i8* %13(i8* %6) #7
  br label %17

17:                                               ; preds = %2, %15
  %18 = phi i8* [ %6, %2 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast [8 x i8]* %20 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %21, align 8
  %22 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* %11, %"struct.std::__1::__function::__policy"** %22, align 8
  %23 = load i8* (i8*)*, i8* (i8*)** %12, align 8
  %24 = icmp eq i8* (i8*)* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %17
  %26 = tail call i8* %23(i8* %18) #7
  store i8* %26, i8** %19, align 8
  br label %27

27:                                               ; preds = %17, %25
  %28 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 1, i32 0, i32 3
  %30 = bitcast %"class.std::__1::__compressed_pair.60"* %29 to i32*
  %31 = bitcast %"class.std::__1::unordered_set"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #7
  store i32 1065353216, i32* %30, align 8
  %32 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 2
  %33 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 2, i32 0, i32 3
  %34 = bitcast %"class.std::__1::__compressed_pair.60"* %33 to i32*
  %35 = bitcast %"class.std::__1::unordered_set"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false) #7
  store i32 1065353216, i32* %34, align 8
  %36 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 3
  %37 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 3, i32 0, i32 3
  %38 = bitcast %"class.std::__1::__compressed_pair.60"* %37 to i32*
  %39 = bitcast %"class.std::__1::unordered_set"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 32, i1 false) #7
  store i32 1065353216, i32* %38, align 8
  call fastcc void @_ZN12_GLOBAL__N_122ReadableOrderTraverser5visitEPN3spv5BlockENS1_11ReachReasonES3_(%"class.(anonymous namespace)::ReadableOrderTraverser"* nonnull %3, %"class.spv::Block"* %0, i32 0, %"class.spv::Block"* null)
  %40 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %27, %43
  %44 = phi %"struct.std::__1::__hash_node_base"* [ %46, %43 ], [ %41, %27 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %44 to i8*
  call void @_ZdlPv(i8* %47) #8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %48, label %49, label %43

49:                                               ; preds = %43, %27
  %50 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %50, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base"** %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.std::__1::__hash_node_base"** %51 to i8*
  call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %55, %59
  %60 = phi %"struct.std::__1::__hash_node_base"* [ %62, %59 ], [ %57, %55 ]
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %61, align 8
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i8*
  call void @_ZdlPv(i8* %63) #8
  %64 = icmp eq %"struct.std::__1::__hash_node_base"* %62, null
  br i1 %64, label %65, label %59

65:                                               ; preds = %59, %55
  %66 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %66, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base"** %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = bitcast %"struct.std::__1::__hash_node_base"** %67 to i8*
  call void @_ZdlPv(i8* %70) #8
  br label %71

71:                                               ; preds = %69, %65
  %72 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base"* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %71, %75
  %76 = phi %"struct.std::__1::__hash_node_base"* [ %78, %75 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %76, i64 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %77, align 8
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %76 to i8*
  call void @_ZdlPv(i8* %79) #8
  %80 = icmp eq %"struct.std::__1::__hash_node_base"* %78, null
  br i1 %80, label %81, label %75

81:                                               ; preds = %75, %71
  %82 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %82, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base"** %83 to i8*
  call void @_ZdlPv(i8* %86) #8
  br label %87

87:                                               ; preds = %85, %81
  %88 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %89 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %88, i64 0, i32 1
  %90 = load void (i8*)*, void (i8*)** %89, align 8
  %91 = icmp eq void (i8*)* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = load i8*, i8** %19, align 8
  call void %90(i8* %93) #7
  br label %94

94:                                               ; preds = %87, %92
  %95 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 1
  %96 = load void (i8*)*, void (i8*)** %95, align 8
  %97 = icmp eq void (i8*)* %96, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  call void %96(i8* %18) #7
  br label %99

99:                                               ; preds = %94, %98
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %4) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_122ReadableOrderTraverser5visitEPN3spv5BlockENS1_11ReachReasonES3_(%"class.(anonymous namespace)::ReadableOrderTraverser"*, %"class.spv::Block"*, i32, %"class.spv::Block"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.spv::Block"*, align 8
  %6 = alloca %"class.spv::Block"*, align 8
  %7 = alloca %"class.spv::Block"*, align 8
  store %"class.spv::Block"* %1, %"class.spv::Block"** %5, align 8
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 3, i32 0
  %11 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %10, %"class.spv::Block"** nonnull dereferenceable(8) %5, %"class.spv::Block"** nonnull dereferenceable(8) %5) #7
  %12 = load %"class.spv::Block"*, %"class.spv::Block"** %5, align 8
  br label %13

13:                                               ; preds = %9, %4
  %14 = phi %"class.spv::Block"* [ %12, %9 ], [ %1, %4 ]
  %15 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 1
  %16 = ptrtoint %"class.spv::Block"* %14 to i64
  %17 = lshr i64 %16, 32
  %18 = shl i64 %16, 3
  %19 = and i64 %18, 4294967288
  %20 = add nuw nsw i64 %19, 8
  %21 = xor i64 %20, %17
  %22 = mul i64 %21, -7070675565921424023
  %23 = lshr i64 %22, 47
  %24 = xor i64 %22, %17
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = lshr i64 %26, 47
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, -7070675565921424023
  %30 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %81, label %33

33:                                               ; preds = %13
  %34 = call i64 @llvm.ctpop.i64(i64 %31) #7, !range !2
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = add i64 %31, -1
  %38 = and i64 %29, %37
  br label %43

39:                                               ; preds = %33
  %40 = icmp ult i64 %29, %31
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %29, %31
  br label %43

43:                                               ; preds = %41, %39, %36
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %29, %39 ]
  %45 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %44
  %48 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"* %52, null
  br i1 %53, label %81, label %54

54:                                               ; preds = %50
  %55 = add i64 %31, -1
  br label %56

56:                                               ; preds = %77, %54
  %57 = phi %"struct.std::__1::__hash_node_base"* [ %52, %54 ], [ %79, %77 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %29, %60
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %35, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %55
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %31
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %31
  br label %69

69:                                               ; preds = %67, %65, %63
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %44
  br i1 %71, label %77, label %81

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to %"class.spv::Block"**
  %75 = load %"class.spv::Block"*, %"class.spv::Block"** %74, align 8
  %76 = icmp eq %"class.spv::Block"* %75, %14
  br i1 %76, label %369, label %77

77:                                               ; preds = %72, %69
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base"* %79, null
  br i1 %80, label %81, label %56

81:                                               ; preds = %77, %69, %43, %13, %50
  %82 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 2
  %83 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %134, label %86

86:                                               ; preds = %81
  %87 = call i64 @llvm.ctpop.i64(i64 %84) #7, !range !2
  %88 = icmp ugt i64 %87, 1
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = add i64 %84, -1
  %91 = and i64 %90, %29
  br label %96

92:                                               ; preds = %86
  %93 = icmp ult i64 %29, %84
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = urem i64 %29, %84
  br label %96

96:                                               ; preds = %94, %92, %89
  %97 = phi i64 [ %91, %89 ], [ %95, %94 ], [ %29, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base"* %101, null
  br i1 %102, label %134, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %101, i64 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %134, label %107

107:                                              ; preds = %103
  %108 = add i64 %84, -1
  br label %109

109:                                              ; preds = %130, %107
  %110 = phi %"struct.std::__1::__hash_node_base"* [ %105, %107 ], [ %132, %130 ]
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 1
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %29, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %109
  br i1 %88, label %118, label %116

116:                                              ; preds = %115
  %117 = and i64 %113, %108
  br label %122

118:                                              ; preds = %115
  %119 = icmp ult i64 %113, %84
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = urem i64 %113, %84
  br label %122

122:                                              ; preds = %120, %118, %116
  %123 = phi i64 [ %117, %116 ], [ %121, %120 ], [ %113, %118 ]
  %124 = icmp eq i64 %123, %97
  br i1 %124, label %130, label %134

125:                                              ; preds = %109
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 2
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to %"class.spv::Block"**
  %128 = load %"class.spv::Block"*, %"class.spv::Block"** %127, align 8
  %129 = icmp eq %"class.spv::Block"* %128, %14
  br i1 %129, label %369, label %130

130:                                              ; preds = %125, %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %134, label %109

134:                                              ; preds = %130, %122, %96, %81, %103
  %135 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %136 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spv::Block"*, i32, %"class.spv::Block"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spv::Block"*, i32, %"class.spv::Block"*)** %135, align 8
  %137 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 0, i32 0, i32 0
  call void %136(%"union.std::__1::__function::__policy_storage"* %137, %"class.spv::Block"* %14, i32 %2, %"class.spv::Block"* %3) #7
  %138 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %15, i64 0, i32 0
  %139 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %138, %"class.spv::Block"** nonnull dereferenceable(8) %5, %"class.spv::Block"** nonnull dereferenceable(8) %5) #7
  %140 = bitcast %"class.spv::Block"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #7
  store %"class.spv::Block"* null, %"class.spv::Block"** %6, align 8
  %141 = bitcast %"class.spv::Block"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #7
  store %"class.spv::Block"* null, %"class.spv::Block"** %7, align 8
  %142 = load %"class.spv::Block"*, %"class.spv::Block"** %5, align 8
  %143 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %142, i64 0, i32 1
  %144 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %142, i64 0, i32 1, i32 0, i32 1
  %145 = bitcast %"class.std::__1::unique_ptr"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.std::__1::vector"* %143 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 %146, %148
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 2
  br i1 %151, label %202, label %152

152:                                              ; preds = %134
  %153 = inttoptr i64 %146 to %"class.std::__1::unique_ptr"*
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 -2, i32 0, i32 0, i32 0
  %155 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %154, align 8
  %156 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %155, i64 0, i32 3
  %157 = load i32, i32* %156, align 8
  %158 = and i32 %157, -2
  %159 = icmp ne i32 %158, 246
  %160 = icmp eq %"class.spv::Instruction"* %155, null
  %161 = or i1 %160, %159
  br i1 %161, label %202, label %162

162:                                              ; preds = %152
  %163 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %155, i64 0, i32 4, i32 0, i32 0
  %164 = load i32*, i32** %163, align 8
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %142, i64 0, i32 5
  %167 = load %"class.spv::Function"*, %"class.spv::Function"** %166, align 8
  %168 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %167, i64 0, i32 1
  %169 = load %"class.spv::Module"*, %"class.spv::Module"** %168, align 8
  %170 = zext i32 %165 to i64
  %171 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %169, i64 0, i32 2, i32 0, i32 0
  %172 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %171, align 8
  %173 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %172, i64 %170
  %174 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %173, align 8
  %175 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %174, i64 0, i32 6
  %176 = bitcast %"class.spv::Block"** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"class.spv::Block"** %6 to i64*
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %82, i64 0, i32 0
  %180 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %179, %"class.spv::Block"** nonnull dereferenceable(8) %6, %"class.spv::Block"** nonnull dereferenceable(8) %6) #7
  %181 = load i32, i32* %156, align 8
  %182 = icmp eq i32 %181, 246
  br i1 %182, label %183, label %202

183:                                              ; preds = %162
  %184 = load i32*, i32** %163, align 8
  %185 = getelementptr inbounds i32, i32* %184, i64 1
  %186 = load i32, i32* %185, align 4
  %187 = load %"class.spv::Block"*, %"class.spv::Block"** %5, align 8
  %188 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %187, i64 0, i32 5
  %189 = load %"class.spv::Function"*, %"class.spv::Function"** %188, align 8
  %190 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %189, i64 0, i32 1
  %191 = load %"class.spv::Module"*, %"class.spv::Module"** %190, align 8
  %192 = zext i32 %186 to i64
  %193 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %191, i64 0, i32 2, i32 0, i32 0
  %194 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %193, align 8
  %195 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %194, i64 %192
  %196 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %195, align 8
  %197 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %196, i64 0, i32 6
  %198 = bitcast %"class.spv::Block"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.spv::Block"** %7 to i64*
  store i64 %199, i64* %200, align 8
  %201 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %179, %"class.spv::Block"** nonnull dereferenceable(8) %7, %"class.spv::Block"** nonnull dereferenceable(8) %7) #7
  br label %202

202:                                              ; preds = %152, %134, %162, %183
  br i1 %8, label %203, label %216

203:                                              ; preds = %202
  %204 = load %"class.spv::Block"*, %"class.spv::Block"** %5, align 8
  %205 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %204, i64 0, i32 3, i32 0, i32 0
  %206 = load %"class.spv::Block"**, %"class.spv::Block"*** %205, align 8
  %207 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %204, i64 0, i32 3, i32 0, i32 1
  %208 = load %"class.spv::Block"**, %"class.spv::Block"*** %207, align 8
  %209 = icmp eq %"class.spv::Block"** %206, %208
  br i1 %209, label %216, label %210

210:                                              ; preds = %203, %210
  %211 = phi %"class.spv::Block"** [ %213, %210 ], [ %206, %203 ]
  %212 = load %"class.spv::Block"*, %"class.spv::Block"** %211, align 8
  call fastcc void @_ZN12_GLOBAL__N_122ReadableOrderTraverser5visitEPN3spv5BlockENS1_11ReachReasonES3_(%"class.(anonymous namespace)::ReadableOrderTraverser"* %0, %"class.spv::Block"* %212, i32 0, %"class.spv::Block"* null)
  %213 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %211, i64 1
  %214 = load %"class.spv::Block"**, %"class.spv::Block"*** %207, align 8
  %215 = icmp eq %"class.spv::Block"** %213, %214
  br i1 %215, label %216, label %210

216:                                              ; preds = %210, %203, %202
  %217 = load %"class.spv::Block"*, %"class.spv::Block"** %7, align 8
  %218 = icmp eq %"class.spv::Block"* %217, null
  br i1 %218, label %292, label %219

219:                                              ; preds = %216
  %220 = ptrtoint %"class.spv::Block"* %217 to i64
  %221 = lshr i64 %220, 32
  %222 = shl i64 %220, 3
  %223 = and i64 %222, 4294967288
  %224 = add nuw nsw i64 %223, 8
  %225 = xor i64 %224, %221
  %226 = mul i64 %225, -7070675565921424023
  %227 = lshr i64 %226, 47
  %228 = xor i64 %226, %221
  %229 = xor i64 %228, %227
  %230 = mul i64 %229, -7070675565921424023
  %231 = lshr i64 %230, 47
  %232 = xor i64 %231, %230
  %233 = mul i64 %232, -7070675565921424023
  %234 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %235 = load i64, i64* %234, align 8
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %285, label %237

237:                                              ; preds = %219
  %238 = call i64 @llvm.ctpop.i64(i64 %235) #7, !range !2
  %239 = icmp ugt i64 %238, 1
  br i1 %239, label %243, label %240

240:                                              ; preds = %237
  %241 = add i64 %235, -1
  %242 = and i64 %241, %233
  br label %247

243:                                              ; preds = %237
  %244 = icmp ult i64 %233, %235
  br i1 %244, label %247, label %245

245:                                              ; preds = %243
  %246 = urem i64 %233, %235
  br label %247

247:                                              ; preds = %245, %243, %240
  %248 = phi i64 [ %242, %240 ], [ %246, %245 ], [ %233, %243 ]
  %249 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %249, align 8
  %251 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %250, i64 %248
  %252 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %251, align 8
  %253 = icmp eq %"struct.std::__1::__hash_node_base"* %252, null
  br i1 %253, label %285, label %254

254:                                              ; preds = %247
  %255 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %252, i64 0, i32 0
  %256 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %255, align 8
  %257 = icmp eq %"struct.std::__1::__hash_node_base"* %256, null
  br i1 %257, label %285, label %258

258:                                              ; preds = %254
  %259 = add i64 %235, -1
  br label %260

260:                                              ; preds = %281, %258
  %261 = phi %"struct.std::__1::__hash_node_base"* [ %256, %258 ], [ %283, %281 ]
  %262 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %261, i64 1
  %263 = bitcast %"struct.std::__1::__hash_node_base"* %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = icmp eq i64 %233, %264
  br i1 %265, label %276, label %266

266:                                              ; preds = %260
  br i1 %239, label %269, label %267

267:                                              ; preds = %266
  %268 = and i64 %264, %259
  br label %273

269:                                              ; preds = %266
  %270 = icmp ult i64 %264, %235
  br i1 %270, label %273, label %271

271:                                              ; preds = %269
  %272 = urem i64 %264, %235
  br label %273

273:                                              ; preds = %271, %269, %267
  %274 = phi i64 [ %268, %267 ], [ %272, %271 ], [ %264, %269 ]
  %275 = icmp eq i64 %274, %248
  br i1 %275, label %281, label %285

276:                                              ; preds = %260
  %277 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %261, i64 2
  %278 = bitcast %"struct.std::__1::__hash_node_base"* %277 to %"class.spv::Block"**
  %279 = load %"class.spv::Block"*, %"class.spv::Block"** %278, align 8
  %280 = icmp eq %"class.spv::Block"* %279, %217
  br i1 %280, label %285, label %281

281:                                              ; preds = %276, %273
  %282 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %261, i64 0, i32 0
  %283 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %282, align 8
  %284 = icmp eq %"struct.std::__1::__hash_node_base"* %283, null
  br i1 %284, label %285, label %260

285:                                              ; preds = %273, %276, %281, %219, %247, %254
  %286 = phi %"struct.std::__1::__hash_node_base"* [ null, %247 ], [ null, %219 ], [ null, %254 ], [ null, %273 ], [ null, %281 ], [ %261, %276 ]
  %287 = icmp eq %"struct.std::__1::__hash_node_base"* %286, null
  %288 = zext i1 %287 to i32
  %289 = call i64 @_ZNSt3__113unordered_setIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseERKS3_(%"class.std::__1::unordered_set"* %82, %"class.spv::Block"** nonnull dereferenceable(8) %7)
  %290 = load %"class.spv::Block"*, %"class.spv::Block"** %7, align 8
  %291 = load %"class.spv::Block"*, %"class.spv::Block"** %5, align 8
  call fastcc void @_ZN12_GLOBAL__N_122ReadableOrderTraverser5visitEPN3spv5BlockENS1_11ReachReasonES3_(%"class.(anonymous namespace)::ReadableOrderTraverser"* %0, %"class.spv::Block"* %290, i32 %288, %"class.spv::Block"* %291)
  br label %292

292:                                              ; preds = %216, %285
  %293 = load %"class.spv::Block"*, %"class.spv::Block"** %6, align 8
  %294 = icmp eq %"class.spv::Block"* %293, null
  br i1 %294, label %368, label %295

295:                                              ; preds = %292
  %296 = ptrtoint %"class.spv::Block"* %293 to i64
  %297 = lshr i64 %296, 32
  %298 = shl i64 %296, 3
  %299 = and i64 %298, 4294967288
  %300 = add nuw nsw i64 %299, 8
  %301 = xor i64 %300, %297
  %302 = mul i64 %301, -7070675565921424023
  %303 = lshr i64 %302, 47
  %304 = xor i64 %302, %297
  %305 = xor i64 %304, %303
  %306 = mul i64 %305, -7070675565921424023
  %307 = lshr i64 %306, 47
  %308 = xor i64 %307, %306
  %309 = mul i64 %308, -7070675565921424023
  %310 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %311 = load i64, i64* %310, align 8
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %361, label %313

313:                                              ; preds = %295
  %314 = call i64 @llvm.ctpop.i64(i64 %311) #7, !range !2
  %315 = icmp ugt i64 %314, 1
  br i1 %315, label %319, label %316

316:                                              ; preds = %313
  %317 = add i64 %311, -1
  %318 = and i64 %317, %309
  br label %323

319:                                              ; preds = %313
  %320 = icmp ult i64 %309, %311
  br i1 %320, label %323, label %321

321:                                              ; preds = %319
  %322 = urem i64 %309, %311
  br label %323

323:                                              ; preds = %321, %319, %316
  %324 = phi i64 [ %318, %316 ], [ %322, %321 ], [ %309, %319 ]
  %325 = getelementptr inbounds %"class.(anonymous namespace)::ReadableOrderTraverser", %"class.(anonymous namespace)::ReadableOrderTraverser"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %325, align 8
  %327 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %326, i64 %324
  %328 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %327, align 8
  %329 = icmp eq %"struct.std::__1::__hash_node_base"* %328, null
  br i1 %329, label %361, label %330

330:                                              ; preds = %323
  %331 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %328, i64 0, i32 0
  %332 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %331, align 8
  %333 = icmp eq %"struct.std::__1::__hash_node_base"* %332, null
  br i1 %333, label %361, label %334

334:                                              ; preds = %330
  %335 = add i64 %311, -1
  br label %336

336:                                              ; preds = %357, %334
  %337 = phi %"struct.std::__1::__hash_node_base"* [ %332, %334 ], [ %359, %357 ]
  %338 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %337, i64 1
  %339 = bitcast %"struct.std::__1::__hash_node_base"* %338 to i64*
  %340 = load i64, i64* %339, align 8
  %341 = icmp eq i64 %309, %340
  br i1 %341, label %352, label %342

342:                                              ; preds = %336
  br i1 %315, label %345, label %343

343:                                              ; preds = %342
  %344 = and i64 %340, %335
  br label %349

345:                                              ; preds = %342
  %346 = icmp ult i64 %340, %311
  br i1 %346, label %349, label %347

347:                                              ; preds = %345
  %348 = urem i64 %340, %311
  br label %349

349:                                              ; preds = %347, %345, %343
  %350 = phi i64 [ %344, %343 ], [ %348, %347 ], [ %340, %345 ]
  %351 = icmp eq i64 %350, %324
  br i1 %351, label %357, label %361

352:                                              ; preds = %336
  %353 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %337, i64 2
  %354 = bitcast %"struct.std::__1::__hash_node_base"* %353 to %"class.spv::Block"**
  %355 = load %"class.spv::Block"*, %"class.spv::Block"** %354, align 8
  %356 = icmp eq %"class.spv::Block"* %355, %293
  br i1 %356, label %361, label %357

357:                                              ; preds = %352, %349
  %358 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %337, i64 0, i32 0
  %359 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %358, align 8
  %360 = icmp eq %"struct.std::__1::__hash_node_base"* %359, null
  br i1 %360, label %361, label %336

361:                                              ; preds = %349, %352, %357, %295, %323, %330
  %362 = phi %"struct.std::__1::__hash_node_base"* [ null, %323 ], [ null, %295 ], [ null, %330 ], [ null, %349 ], [ null, %357 ], [ %337, %352 ]
  %363 = icmp eq %"struct.std::__1::__hash_node_base"* %362, null
  %364 = select i1 %363, i32 2, i32 0
  %365 = call i64 @_ZNSt3__113unordered_setIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseERKS3_(%"class.std::__1::unordered_set"* %82, %"class.spv::Block"** nonnull dereferenceable(8) %6)
  %366 = load %"class.spv::Block"*, %"class.spv::Block"** %6, align 8
  %367 = load %"class.spv::Block"*, %"class.spv::Block"** %5, align 8
  call fastcc void @_ZN12_GLOBAL__N_122ReadableOrderTraverser5visitEPN3spv5BlockENS1_11ReachReasonES3_(%"class.(anonymous namespace)::ReadableOrderTraverser"* %0, %"class.spv::Block"* %366, i32 %364, %"class.spv::Block"* %367)
  br label %368

368:                                              ; preds = %292, %361
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #7
  br label %369

369:                                              ; preds = %72, %125, %368
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__113unordered_setIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseERKS3_(%"class.std::__1::unordered_set"*, %"class.spv::Block"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.66", align 8
  %4 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0
  %5 = load %"class.spv::Block"*, %"class.spv::Block"** %1, align 8
  %6 = ptrtoint %"class.spv::Block"* %5 to i64
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %79, label %23

23:                                               ; preds = %2
  %24 = tail call i64 @llvm.ctpop.i64(i64 %21) #7, !range !2
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %19, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %31, %29, %26
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %79, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %79, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  br label %46

46:                                               ; preds = %67, %44
  %47 = phi %"struct.std::__1::__hash_node_base"* [ %42, %44 ], [ %69, %67 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %19
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %21
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %21
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %67, label %79

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to %"class.spv::Block"**
  %65 = load %"class.spv::Block"*, %"class.spv::Block"** %64, align 8
  %66 = icmp eq %"class.spv::Block"* %65, %5
  br i1 %66, label %71, label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base"* %69, null
  br i1 %70, label %79, label %46

71:                                               ; preds = %62
  %72 = bitcast %"class.std::__1::unique_ptr.66"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #7
  call void @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.66"* nonnull sret %3, %"class.std::__1::__hash_table"* %4, %"struct.std::__1::__hash_node_base"* nonnull %47) #7
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %73, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = bitcast %"struct.std::__1::__hash_node"* %74 to i8*
  call void @_ZdlPv(i8* %77) #8
  br label %78

78:                                               ; preds = %76, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #7
  br label %79

79:                                               ; preds = %59, %67, %40, %2, %33, %78
  %80 = phi i64 [ 1, %78 ], [ 0, %33 ], [ 0, %2 ], [ 0, %40 ], [ 0, %67 ], [ 0, %59 ]
  ret i64 %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.spv::Block"** dereferenceable(8), %"class.spv::Block"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spv::Block"*, %"class.spv::Block"** %1, align 8
  %5 = ptrtoint %"class.spv::Block"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #7, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.spv::Block"**
  %64 = load %"class.spv::Block"*, %"class.spv::Block"** %63, align 8
  %65 = icmp eq %"class.spv::Block"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #8, !noalias !3
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spv::Block"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !3
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !3
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !3
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !3
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #7, !range !2
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #7
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #7, !range !2
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #7, !range !2
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #7
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #7, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #7
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #7, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #7
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #9
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #8
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !6

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #7, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.spv::Block"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to %"class.spv::Block"**
  %112 = load %"class.spv::Block"*, %"class.spv::Block"** %102, align 8
  %113 = load %"class.spv::Block"*, %"class.spv::Block"** %111, align 8
  %114 = icmp eq %"class.spv::Block"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #8
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.66"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #7, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.53"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.66"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.56"** %98 to %"class.std::__1::__compressed_pair.53"**
  store %"class.std::__1::__compressed_pair.53"* %30, %"class.std::__1::__compressed_pair.53"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__112__hash_tableIPN3spv5BlockENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
