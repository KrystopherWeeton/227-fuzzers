; ModuleID = '../../ui/base/models/image_model.cc'
source_filename = "../../ui/base/models/image_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant", %"struct.gfx::VectorIcon"* }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"struct.gfx::VectorIcon" = type opaque
%"class.ui::ImageModel" = type { %"class.absl::variant.5" }
%"class.absl::variant.5" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase.6" }
%"class.absl::variant_internal::VariantStateBase.6" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"class.ui::VectorIconModel" }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"*, %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11", %"class.std::__1::vector", i32, %"class.std::__1::map", %"class.gfx::Image", %"class.std::__1::map.28", %"class.base::FilePath", %"class.std::__1::unordered_map", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::Lock"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::unique_ptr.11"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.std::__1::map.28" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.44", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.59", [4 x i8] }>
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess17MoveAssignVisitorINS0_31VariantMoveAssignBaseNontrivialIJN2ui15VectorIconModelEN3gfx5ImageEEEEEEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSE_m = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN2ui15VectorIconModelEEET_v = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN3gfx5ImageEEET_v = comdat any

@_ZN2ui15VectorIconModelC1Ev = hidden unnamed_addr alias void (%"class.ui::VectorIconModel"*), void (%"class.ui::VectorIconModel"*)* @_ZN2ui15VectorIconModelC2Ev
@_ZN2ui15VectorIconModelC1ERKN3gfx10VectorIconEiiPS3_ = hidden unnamed_addr alias void (%"class.ui::VectorIconModel"*, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*), void (%"class.ui::VectorIconModel"*, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*)* @_ZN2ui15VectorIconModelC2ERKN3gfx10VectorIconEiiPS3_
@_ZN2ui15VectorIconModelC1ERKN3gfx10VectorIconEjiPS3_ = hidden unnamed_addr alias void (%"class.ui::VectorIconModel"*, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*), void (%"class.ui::VectorIconModel"*, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*)* @_ZN2ui15VectorIconModelC2ERKN3gfx10VectorIconEjiPS3_
@_ZN2ui15VectorIconModelD1Ev = hidden unnamed_addr alias void (%"class.ui::VectorIconModel"*), void (%"class.ui::VectorIconModel"*)* @_ZN2ui15VectorIconModelD2Ev
@_ZN2ui15VectorIconModelC1ERKS0_ = hidden unnamed_addr alias void (%"class.ui::VectorIconModel"*, %"class.ui::VectorIconModel"*), void (%"class.ui::VectorIconModel"*, %"class.ui::VectorIconModel"*)* @_ZN2ui15VectorIconModelC2ERKS0_
@_ZN2ui15VectorIconModelC1EOS0_ = hidden unnamed_addr alias void (%"class.ui::VectorIconModel"*, %"class.ui::VectorIconModel"*), void (%"class.ui::VectorIconModel"*, %"class.ui::VectorIconModel"*)* @_ZN2ui15VectorIconModelC2EOS0_
@_ZN2ui10ImageModelC1Ev = hidden unnamed_addr alias void (%"class.ui::ImageModel"*), void (%"class.ui::ImageModel"*)* @_ZN2ui10ImageModelC2Ev
@_ZN2ui10ImageModelC1ERKNS_15VectorIconModelE = hidden unnamed_addr alias void (%"class.ui::ImageModel"*, %"class.ui::VectorIconModel"*), void (%"class.ui::ImageModel"*, %"class.ui::VectorIconModel"*)* @_ZN2ui10ImageModelC2ERKNS_15VectorIconModelE
@_ZN2ui10ImageModelC1ERKN3gfx5ImageE = hidden unnamed_addr alias void (%"class.ui::ImageModel"*, %"class.gfx::Image"*), void (%"class.ui::ImageModel"*, %"class.gfx::Image"*)* @_ZN2ui10ImageModelC2ERKN3gfx5ImageE
@_ZN2ui10ImageModelC1ERKN3gfx9ImageSkiaE = hidden unnamed_addr alias void (%"class.ui::ImageModel"*, %"class.gfx::ImageSkia"*), void (%"class.ui::ImageModel"*, %"class.gfx::ImageSkia"*)* @_ZN2ui10ImageModelC2ERKN3gfx9ImageSkiaE
@_ZN2ui10ImageModelD1Ev = hidden unnamed_addr alias void (%"class.ui::ImageModel"*), void (%"class.ui::ImageModel"*)* @_ZN2ui10ImageModelD2Ev
@_ZN2ui10ImageModelC1ERKS0_ = hidden unnamed_addr alias void (%"class.ui::ImageModel"*, %"class.ui::ImageModel"*), void (%"class.ui::ImageModel"*, %"class.ui::ImageModel"*)* @_ZN2ui10ImageModelC2ERKS0_
@_ZN2ui10ImageModelC1EOS0_ = hidden unnamed_addr alias void (%"class.ui::ImageModel"*, %"class.ui::ImageModel"*), void (%"class.ui::ImageModel"*, %"class.ui::ImageModel"*)* @_ZN2ui10ImageModelC2EOS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui15VectorIconModelC2Ev(%"class.ui::VectorIconModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 0
  store %"struct.gfx::VectorIcon"* null, %"struct.gfx::VectorIcon"** %2, align 8
  %3 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i32 -65536, i32* %4, align 4
  %5 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 3
  store %"struct.gfx::VectorIcon"* null, %"struct.gfx::VectorIcon"** %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui15VectorIconModelC2ERKN3gfx10VectorIconEiiPS3_(%"class.ui::VectorIconModel"* nocapture, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 0
  store %"struct.gfx::VectorIcon"* %1, %"struct.gfx::VectorIcon"** %6, align 8
  %7 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 1
  store i32 %3, i32* %7, align 8
  %8 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 3
  store %"struct.gfx::VectorIcon"* %4, %"struct.gfx::VectorIcon"** %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui15VectorIconModelC2ERKN3gfx10VectorIconEjiPS3_(%"class.ui::VectorIconModel"* nocapture, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 0
  store %"struct.gfx::VectorIcon"* %1, %"struct.gfx::VectorIcon"** %6, align 8
  %7 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 1
  store i32 %3, i32* %7, align 8
  %8 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 1, i64* %9, align 8
  %10 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 3
  store %"struct.gfx::VectorIcon"* %4, %"struct.gfx::VectorIcon"** %10, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui15VectorIconModelD2Ev(%"class.ui::VectorIconModel"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15VectorIconModelC2ERKS0_(%"class.ui::VectorIconModel"* nocapture, %"class.ui::VectorIconModel"* nocapture readonly dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::VectorIconModel"* %0 to i8*
  %4 = bitcast %"class.ui::VectorIconModel"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.ui::VectorIconModel"* @_ZN2ui15VectorIconModelaSERKS0_(%"class.ui::VectorIconModel"* returned, %"class.ui::VectorIconModel"* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::VectorIconModel"* %0 to i8*
  %4 = bitcast %"class.ui::VectorIconModel"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret %"class.ui::VectorIconModel"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15VectorIconModelC2EOS0_(%"class.ui::VectorIconModel"* nocapture, %"class.ui::VectorIconModel"* nocapture readonly dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::VectorIconModel"* %0 to i8*
  %4 = bitcast %"class.ui::VectorIconModel"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.ui::VectorIconModel"* @_ZN2ui15VectorIconModelaSEOS0_(%"class.ui::VectorIconModel"* returned, %"class.ui::VectorIconModel"* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::VectorIconModel"* %0 to i8*
  %4 = bitcast %"class.ui::VectorIconModel"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret %"class.ui::VectorIconModel"* %0
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui15VectorIconModeleqERKS0_(%"class.ui::VectorIconModel"*, %"class.ui::VectorIconModel"* dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 3
  %9 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %3, align 8
  %10 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %6, align 8
  %11 = icmp eq %"struct.gfx::VectorIcon"* %9, %10
  br i1 %11, label %12, label %41

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %13, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %41

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 2, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  br i1 %23, label %24, label %41

24:                                               ; preds = %18
  switch i64 %20, label %37 [
    i64 0, label %31
    i64 1, label %25
  ]

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %7, i64 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %37, label %41

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %4, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %7, i64 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %31, %25, %24
  %38 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %5, align 8
  %39 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %8, align 8
  %40 = icmp eq %"struct.gfx::VectorIcon"* %38, %39
  br label %41

41:                                               ; preds = %2, %12, %18, %25, %31, %37
  %42 = phi i1 [ false, %31 ], [ %40, %37 ], [ false, %25 ], [ false, %12 ], [ false, %18 ], [ false, %2 ]
  ret i1 %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui15VectorIconModelneERKS0_(%"class.ui::VectorIconModel"* nocapture readonly, %"class.ui::VectorIconModel"* nocapture readonly dereferenceable(40)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 3
  %9 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %3, align 8
  %10 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %6, align 8
  %11 = icmp eq %"struct.gfx::VectorIcon"* %9, %10
  br i1 %11, label %12, label %41

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %13, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %41

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %0, i64 0, i32 2, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.ui::VectorIconModel", %"class.ui::VectorIconModel"* %1, i64 0, i32 2, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  br i1 %23, label %24, label %41

24:                                               ; preds = %18
  switch i64 %20, label %37 [
    i64 0, label %31
    i64 1, label %25
  ]

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %7, i64 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %37, label %41

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %4, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %7, i64 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %31, %25, %24
  %38 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %5, align 8
  %39 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %8, align 8
  %40 = icmp ne %"struct.gfx::VectorIcon"* %38, %39
  br label %41

41:                                               ; preds = %2, %12, %18, %25, %31, %37
  %42 = phi i1 [ true, %31 ], [ %40, %37 ], [ true, %25 ], [ true, %12 ], [ true, %18 ], [ true, %2 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModelC2Ev(%"class.ui::ImageModel"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.gfx::VectorIcon"* null, %"struct.gfx::VectorIcon"** %2, align 8
  %3 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store i32 -65536, i32* %4, align 4
  %5 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %7 = bitcast %"struct.gfx::VectorIcon"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModelC2ERKNS_15VectorIconModelE(%"class.ui::ImageModel"* nocapture, %"class.ui::VectorIconModel"* nocapture readonly dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::ImageModel"* %0 to i8*
  %4 = bitcast %"class.ui::VectorIconModel"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false) #10
  %5 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModelC2ERKN3gfx5ImageE(%"class.ui::ImageModel"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %3, %"class.gfx::Image"* dereferenceable(8) %1) #10
  %4 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 1, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModelC2ERKN3gfx9ImageSkiaE(%"class.ui::ImageModel"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = alloca %"class.gfx::Image", align 8
  %4 = bitcast %"class.gfx::Image"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  call void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"* nonnull %3, %"class.gfx::ImageSkia"* dereferenceable(8) %1) #10
  %5 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %5, %"class.gfx::Image"* nonnull dereferenceable(8) %3) #10
  %6 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 1, i64* %6, align 8
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

declare void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModelD2Ev(%"class.ui::ImageModel"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModelC2ERKS0_(%"class.ui::ImageModel"*, %"class.ui::ImageModel"* dereferenceable(48)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 -1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  switch i64 %5, label %12 [
    i64 0, label %6
    i64 1, label %9
  ]

6:                                                ; preds = %2
  %7 = bitcast %"class.ui::ImageModel"* %0 to i8*
  %8 = bitcast %"class.ui::ImageModel"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false) #10
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  %11 = bitcast %"class.ui::ImageModel"* %1 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %10, %"class.gfx::Image"* dereferenceable(8) %11) #10
  br label %12

12:                                               ; preds = %2, %6, %9
  %13 = load i64, i64* %4, align 8
  store i64 %13, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.ui::ImageModel"* @_ZN2ui10ImageModelaSERKS0_(%"class.ui::ImageModel"* returned, %"class.ui::ImageModel"* dereferenceable(48)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", align 8
  %4 = alloca %"class.absl::variant.5", align 8
  %5 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.ui::ImageModel"* %1 to i8*
  switch i64 %6, label %41 [
    i64 0, label %8
    i64 1, label %17
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  switch i64 %10, label %15 [
    i64 0, label %11
    i64 1, label %13
  ]

11:                                               ; preds = %8
  %12 = bitcast %"class.ui::ImageModel"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %7, i64 40, i1 false) #10
  br label %48

13:                                               ; preds = %8
  %14 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  store i64 -1, i64* %9, align 8
  %16 = bitcast %"class.ui::ImageModel"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %7, i64 40, i1 false) #10
  store i64 0, i64* %9, align 8
  br label %48

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  %23 = bitcast %"class.ui::ImageModel"* %1 to %"class.gfx::Image"*
  %24 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %22, %"class.gfx::Image"* dereferenceable(8) %23) #10
  br label %48

25:                                               ; preds = %17
  %26 = bitcast %"class.absl::variant.5"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.absl::variant.5", %"class.absl::variant.5"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 -1, i64* %27, align 8
  %28 = bitcast %"class.absl::variant.5"* %4 to %"class.gfx::Image"*
  %29 = bitcast %"class.ui::ImageModel"* %1 to %"class.gfx::Image"*
  call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* nonnull %28, %"class.gfx::Image"* dereferenceable(8) %29) #10
  %30 = load i64, i64* %5, align 8
  store i64 %30, i64* %27, align 8
  %31 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.absl::variant.5", %"class.absl::variant.5"* %4, i64 0, i32 0, i32 0
  %33 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %3, i64 0, i32 0
  store %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %31, %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"** %34, align 8
  %35 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %3, i64 0, i32 1
  store %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %32, %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"** %35, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess17MoveAssignVisitorINS0_31VariantMoveAssignBaseNontrivialIJN2ui15VectorIconModelEN3gfx5ImageEEEEEEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSE_m(%"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* nonnull dereferenceable(16) %3, i64 %30) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #10
  %36 = load i64, i64* %27, align 8
  %37 = icmp eq i64 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %25
  %39 = bitcast %"class.absl::variant.5"* %4 to %"class.gfx::Image"*
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %39) #10
  br label %40

40:                                               ; preds = %38, %25
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %26) #10
  br label %48

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %46) #10
  br label %47

47:                                               ; preds = %45, %41
  store i64 -1, i64* %42, align 8
  br label %48

48:                                               ; preds = %40, %21, %11, %15, %47
  ret %"class.ui::ImageModel"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModelC2EOS0_(%"class.ui::ImageModel"*, %"class.ui::ImageModel"* dereferenceable(48)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 -1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  switch i64 %5, label %12 [
    i64 0, label %6
    i64 1, label %9
  ]

6:                                                ; preds = %2
  %7 = bitcast %"class.ui::ImageModel"* %0 to i8*
  %8 = bitcast %"class.ui::ImageModel"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false) #10
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  %11 = bitcast %"class.ui::ImageModel"* %1 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"* %10, %"class.gfx::Image"* dereferenceable(8) %11) #10
  br label %12

12:                                               ; preds = %2, %6, %9
  %13 = load i64, i64* %4, align 8
  store i64 %13, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.ui::ImageModel"* @_ZN2ui10ImageModelaSEOS0_(%"class.ui::ImageModel"* returned, %"class.ui::ImageModel"* dereferenceable(48)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", align 8
  %4 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %3, i64 0, i32 0
  store %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %4, %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"** %7, align 8
  %8 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %3, i64 0, i32 1
  store %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %5, %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"** %8, align 8
  %9 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess17MoveAssignVisitorINS0_31VariantMoveAssignBaseNontrivialIJN2ui15VectorIconModelEN3gfx5ImageEEEEEEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSE_m(%"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* nonnull dereferenceable(16) %3, i64 %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.ui::ImageModel"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModel14FromVectorIconERKN3gfx10VectorIconEiiPS3_(%"class.ui::ImageModel"* noalias nocapture sret, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*) local_unnamed_addr #2 align 2 {
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* %1) #10
  br label %9

9:                                                ; preds = %5, %7
  %10 = phi i32 [ %3, %5 ], [ %8, %7 ]
  %11 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.gfx::VectorIcon"* %1, %"struct.gfx::VectorIcon"** %11, align 8
  %12 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  %13 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  store %"struct.gfx::VectorIcon"* %4, %"struct.gfx::VectorIcon"** %15, align 8
  %16 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %16, align 8
  ret void
}

declare i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModel14FromVectorIconERKN3gfx10VectorIconEjiPS3_(%"class.ui::ImageModel"* noalias nocapture sret, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*) local_unnamed_addr #2 align 2 {
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* %1) #10
  br label %9

9:                                                ; preds = %5, %7
  %10 = phi i32 [ %3, %5 ], [ %8, %7 ]
  %11 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.gfx::VectorIcon"* %1, %"struct.gfx::VectorIcon"** %11, align 8
  %12 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  %13 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  store i64 1, i64* %14, align 8
  %15 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  store %"struct.gfx::VectorIcon"* %4, %"struct.gfx::VectorIcon"** %15, align 8
  %16 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModel9FromImageERKN3gfx5ImageE(%"class.ui::ImageModel"* noalias sret, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %3, %"class.gfx::Image"* dereferenceable(8) %1) #10
  %4 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 1, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModel13FromImageSkiaERKN3gfx9ImageSkiaE(%"class.ui::ImageModel"* noalias sret, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.gfx::Image", align 8
  %4 = bitcast %"class.gfx::Image"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  call void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"* nonnull %3, %"class.gfx::ImageSkia"* dereferenceable(8) %1) #10
  %5 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %5, %"class.gfx::Image"* nonnull dereferenceable(8) %3) #10
  %6 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 1, i64* %6, align 8
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10ImageModel14FromResourceIdEi(%"class.ui::ImageModel"* noalias sret, i32) local_unnamed_addr #2 align 2 {
  %3 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #10
  %4 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN2ui14ResourceBundle13GetImageNamedEi(%"class.ui::ResourceBundle"* %3, i32 %1) #10
  %5 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %5, %"class.gfx::Image"* dereferenceable(8) %4) #10
  %6 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 1, i64* %6, align 8, !alias.scope !2
  ret void
}

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #6

declare dereferenceable(8) %"class.gfx::Image"* @_ZN2ui14ResourceBundle13GetImageNamedEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui10ImageModel7IsEmptyEv(%"class.ui::ImageModel"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %11 [
    i64 0, label %4
    i64 1, label %8
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %5, align 8
  %7 = icmp eq %"struct.gfx::VectorIcon"* %6, null
  br i1 %7, label %11, label %13

8:                                                ; preds = %1
  %9 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  %10 = tail call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %9) #10
  br label %11

11:                                               ; preds = %4, %1, %8
  %12 = phi i1 [ %10, %8 ], [ true, %4 ], [ true, %1 ]
  br label %13

13:                                               ; preds = %4, %11
  %14 = phi i1 [ false, %4 ], [ %12, %11 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui10ImageModel12IsVectorIconEv(%"class.ui::ImageModel"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %6, align 8
  %8 = icmp ne %"struct.gfx::VectorIcon"* %7, null
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui10ImageModel7IsImageEv(%"class.ui::ImageModel"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 1
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  %7 = tail call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %6) #10
  %8 = xor i1 %7, true
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

declare zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui10ImageModel4SizeEv(%"class.ui::ImageModel"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.gfx::Image", align 8
  %3 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  switch i64 %4, label %28 [
    i64 0, label %5
    i64 1, label %14
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %6, align 8
  %8 = icmp eq %"struct.gfx::VectorIcon"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  %13 = select i1 %12, i32 %11, i32 0
  br label %28

14:                                               ; preds = %1
  %15 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  %16 = tail call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %15) #10
  br i1 %16, label %28, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.gfx::Image"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = load i64, i64* %3, align 8, !noalias !5
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %23, label %21, !prof !8

21:                                               ; preds = %17
  %22 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN3gfx5ImageEEET_v() #11
  unreachable

23:                                               ; preds = %17
  call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* nonnull %2, %"class.gfx::Image"* dereferenceable(8) %15) #10
  %24 = call i64 @_ZNK3gfx5Image4SizeEv(%"class.gfx::Image"* nonnull %2) #10
  %25 = trunc i64 %24 to i32
  %26 = lshr i64 %24, 32
  %27 = trunc i64 %26 to i32
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %28

28:                                               ; preds = %5, %14, %1, %23, %9
  %29 = phi i32 [ %13, %9 ], [ %25, %23 ], [ 0, %14 ], [ 0, %5 ], [ 0, %1 ]
  %30 = phi i32 [ %13, %9 ], [ %27, %23 ], [ 0, %14 ], [ 0, %5 ], [ 0, %1 ]
  %31 = zext i32 %30 to i64
  %32 = shl nuw i64 %31, 32
  %33 = zext i32 %29 to i64
  %34 = or i64 %32, %33
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui10ImageModel13GetVectorIconEv(%"class.ui::VectorIconModel"* noalias nocapture sret, %"class.ui::ImageModel"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6, !prof !8

6:                                                ; preds = %2
  %7 = tail call dereferenceable(40) %"class.ui::VectorIconModel"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN2ui15VectorIconModelEEET_v() #11
  unreachable

8:                                                ; preds = %2
  %9 = bitcast %"class.ui::VectorIconModel"* %0 to i8*
  %10 = bitcast %"class.ui::ImageModel"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 40, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui10ImageModel8GetImageEv(%"class.gfx::Image"* noalias sret, %"class.ui::ImageModel"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %8, label %6, !prof !8

6:                                                ; preds = %2
  %7 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN3gfx5ImageEEET_v() #11
  unreachable

8:                                                ; preds = %2
  %9 = bitcast %"class.ui::ImageModel"* %1 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %0, %"class.gfx::Image"* dereferenceable(8) %9) #10
  ret void
}

declare i64 @_ZNK3gfx5Image4SizeEv(%"class.gfx::Image"*) local_unnamed_addr #6

declare void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui10ImageModeleqERKS0_(%"class.ui::ImageModel"*, %"class.ui::ImageModel"* dereferenceable(48)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %52

8:                                                ; preds = %2
  switch i64 %4, label %52 [
    i64 0, label %9
    i64 1, label %48
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %13 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %16 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %10, align 8
  %17 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %13, align 8
  %18 = icmp eq %"struct.gfx::VectorIcon"* %16, %17
  br i1 %18, label %19, label %52

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* %20, align 4
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %25, label %52

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %27, %29
  br i1 %30, label %31, label %52

31:                                               ; preds = %25
  switch i64 %27, label %44 [
    i64 0, label %38
    i64 1, label %32
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %11, i64 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %14, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %44, label %52

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %11, i64 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %14, i64 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %52

44:                                               ; preds = %38, %32, %31
  %45 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %12, align 8
  %46 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %15, align 8
  %47 = icmp eq %"struct.gfx::VectorIcon"* %45, %46
  br label %52

48:                                               ; preds = %8
  %49 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  %50 = bitcast %"class.ui::ImageModel"* %1 to %"class.gfx::Image"*
  %51 = tail call zeroext i1 @_ZNK3gfx5ImageeqERKS0_(%"class.gfx::Image"* %49, %"class.gfx::Image"* dereferenceable(8) %50) #10
  br label %52

52:                                               ; preds = %2, %8, %9, %19, %25, %32, %38, %44, %48
  %53 = phi i1 [ false, %2 ], [ %51, %48 ], [ false, %38 ], [ %47, %44 ], [ false, %32 ], [ false, %19 ], [ false, %25 ], [ false, %9 ], [ true, %8 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui10ImageModelneERKS0_(%"class.ui::ImageModel"*, %"class.ui::ImageModel"* dereferenceable(48)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %52

8:                                                ; preds = %2
  switch i64 %4, label %52 [
    i64 0, label %9
    i64 1, label %48
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %13 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %16 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %10, align 8
  %17 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %13, align 8
  %18 = icmp eq %"struct.gfx::VectorIcon"* %16, %17
  br i1 %18, label %19, label %52

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* %20, align 4
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %25, label %52

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.ui::ImageModel", %"class.ui::ImageModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %27, %29
  br i1 %30, label %31, label %52

31:                                               ; preds = %25
  switch i64 %27, label %44 [
    i64 0, label %38
    i64 1, label %32
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %11, i64 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %14, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %44, label %52

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %11, i64 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %14, i64 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %52

44:                                               ; preds = %38, %32, %31
  %45 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %12, align 8
  %46 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %15, align 8
  %47 = icmp eq %"struct.gfx::VectorIcon"* %45, %46
  br label %52

48:                                               ; preds = %8
  %49 = bitcast %"class.ui::ImageModel"* %0 to %"class.gfx::Image"*
  %50 = bitcast %"class.ui::ImageModel"* %1 to %"class.gfx::Image"*
  %51 = tail call zeroext i1 @_ZNK3gfx5ImageeqERKS0_(%"class.gfx::Image"* %49, %"class.gfx::Image"* dereferenceable(8) %50) #10
  br label %52

52:                                               ; preds = %2, %8, %9, %19, %25, %32, %38, %44, %48
  %53 = phi i1 [ false, %2 ], [ %51, %48 ], [ false, %38 ], [ %47, %44 ], [ false, %32 ], [ false, %19 ], [ false, %25 ], [ false, %9 ], [ true, %8 ]
  %54 = xor i1 %53, true
  ret i1 %54
}

declare dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess17MoveAssignVisitorINS0_31VariantMoveAssignBaseNontrivialIJN2ui15VectorIconModelEN3gfx5ImageEEEEEEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSE_m(%"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* dereferenceable(16), i64) local_unnamed_addr #2 comdat align 2 {
  switch i64 %1, label %30 [
    i64 0, label %3
    i64 1, label %17
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %0, i64 0, i32 0
  %5 = load %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"*, %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"** %4, align 8
  %6 = getelementptr inbounds %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial", %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %0, i64 0, i32 1
  %9 = bitcast %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  switch i64 %7, label %15 [
    i64 0, label %11
    i64 1, label %13
  ]

11:                                               ; preds = %3
  %12 = bitcast %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %10, i64 40, i1 false) #10
  br label %39

13:                                               ; preds = %3
  %14 = bitcast %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %5 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %14) #10
  br label %15

15:                                               ; preds = %13, %3
  store i64 -1, i64* %6, align 8
  %16 = bitcast %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %10, i64 40, i1 false) #10
  store i64 0, i64* %6, align 8
  br label %39

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %0, i64 0, i32 0
  %19 = load %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"*, %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"** %18, align 8
  %20 = getelementptr inbounds %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial", %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 1
  %23 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %0, i64 0, i32 1
  %24 = bitcast %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"** %23 to %"class.gfx::Image"**
  %25 = load %"class.gfx::Image"*, %"class.gfx::Image"** %24, align 8
  %26 = bitcast %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %19 to %"class.gfx::Image"*
  br i1 %22, label %27, label %29

27:                                               ; preds = %17
  %28 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSEOS0_(%"class.gfx::Image"* %26, %"class.gfx::Image"* dereferenceable(8) %25) #10
  br label %39

29:                                               ; preds = %17
  store i64 -1, i64* %20, align 8
  tail call void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"* %26, %"class.gfx::Image"* dereferenceable(8) %25) #10
  store i64 1, i64* %20, align 8
  br label %39

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::MoveAssignVisitor"* %0, i64 0, i32 0
  %32 = load %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"*, %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"** %31, align 8
  %33 = getelementptr inbounds %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial", %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = bitcast %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial"* %32 to %"class.gfx::Image"*
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %37) #10
  br label %38

38:                                               ; preds = %30, %36
  store i64 -1, i64* %33, align 8
  br label %39

39:                                               ; preds = %29, %27, %15, %11, %38
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSEOS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #7

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.ui::VectorIconModel"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN2ui15VectorIconModelEEET_v() local_unnamed_addr #8 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #11
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #9

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.gfx::Image"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN3gfx5ImageEEET_v() local_unnamed_addr #8 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #11
  unreachable
}

declare zeroext i1 @_ZNK3gfx5ImageeqERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2ui10ImageModel9FromImageERKN3gfx5ImageE: argument 0"}
!4 = distinct !{!4, !"_ZN2ui10ImageModel9FromImageERKN3gfx5ImageE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK2ui10ImageModel8GetImageEv: argument 0"}
!7 = distinct !{!7, !"_ZNK2ui10ImageModel8GetImageEv"}
!8 = !{!"branch_weights", i32 2000, i32 1}
