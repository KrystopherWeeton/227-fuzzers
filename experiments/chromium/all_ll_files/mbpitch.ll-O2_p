; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/mbpitch.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/mbpitch.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.macroblockd = type { [384 x i8], [400 x i16], [400 x i16], [25 x i8], [7 x i8], [16 x i16], [16 x i16], [16 x i16], [16 x i16], [25 x %struct.blockd], i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.modeinfo*, i32, i32, i32, i32, [3 x i8*], [3 x i8*], [2 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES*, i8, i8, i8, i8, [3 x i8], [2 x [4 x i8]], i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], i32, i32, i32, i32, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, i8*, i32, %struct.vpx_internal_error_info, [16 x i8], [704 x i8] }
%struct.blockd = type { i16*, i16*, i8*, i16*, i32, i8*, %union.b_mode_info }
%union.b_mode_info = type { i32 }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.modeinfo = type { %struct.MB_MODE_INFO, [16 x %union.b_mode_info] }
%struct.MB_MODE_INFO = type { i8, i8, i8, i8, %union.int_mv, i8, i8, i8, i8 }
%union.int_mv = type { i32 }
%struct.ENTROPY_CONTEXT_PLANES = type { [4 x i8], [2 x i8], [2 x i8], i8 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @vp8_setup_block_dptrs(%struct.macroblockd*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 0
  %3 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 0, i32 2
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 4
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 1, i32 2
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 8
  %7 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 2, i32 2
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 12
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 3, i32 2
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 64
  %11 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 4, i32 2
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 68
  %13 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 5, i32 2
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 72
  %15 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 6, i32 2
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 76
  %17 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 7, i32 2
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 128
  %19 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 8, i32 2
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 132
  %21 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 9, i32 2
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 136
  %23 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 10, i32 2
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 140
  %25 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 11, i32 2
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 192
  %27 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 12, i32 2
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 196
  %29 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 13, i32 2
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 200
  %31 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 14, i32 2
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 204
  %33 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 15, i32 2
  store i8* %32, i8** %33, align 8
  %34 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 256
  %35 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 2
  store i8* %34, i8** %35, align 8
  %36 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 260
  %37 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 17, i32 2
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 288
  %39 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 2
  store i8* %38, i8** %39, align 8
  %40 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 292
  %41 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 19, i32 2
  store i8* %40, i8** %41, align 8
  %42 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 320
  %43 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 2
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 324
  %45 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 21, i32 2
  store i8* %44, i8** %45, align 8
  %46 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 352
  %47 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 2
  store i8* %46, i8** %47, align 8
  %48 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 356
  %49 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 23, i32 2
  store i8* %48, i8** %49, align 8
  br label %50

50:                                               ; preds = %62, %1
  %51 = phi i64 [ 0, %1 ], [ %70, %62 ]
  %52 = shl nsw i64 %51, 4
  %53 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 1, i64 %52
  %54 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %51, i32 0
  store i16* %53, i16** %54, align 8
  %55 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 2, i64 %52
  %56 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %51, i32 1
  store i16* %55, i16** %56, align 8
  %57 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 3, i64 %51
  %58 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %51, i32 5
  store i8* %57, i8** %58, align 8
  %59 = or i64 %51, 1
  %60 = icmp eq i64 %59, 25
  br i1 %60, label %61, label %62

61:                                               ; preds = %50
  ret void

62:                                               ; preds = %50
  %63 = shl nsw i64 %59, 4
  %64 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 1, i64 %63
  %65 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %59, i32 0
  store i16* %64, i16** %65, align 8
  %66 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 2, i64 %63
  %67 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %59, i32 1
  store i16* %66, i16** %67, align 8
  %68 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 3, i64 %59
  %69 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %59, i32 5
  store i8* %68, i8** %69, align 8
  %70 = add nuw nsw i64 %51, 2
  br label %50
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_build_block_doffsets(%struct.macroblockd* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 4
  br label %16

3:                                                ; preds = %16
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 4
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 4
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 17, i32 4
  store i32 4, i32* %8, align 8
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 21, i32 4
  store i32 4, i32* %9, align 8
  %10 = shl nsw i32 %5, 2
  %11 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 4
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 4
  store i32 %10, i32* %12, align 8
  %13 = add nsw i32 %10, 4
  %14 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 19, i32 4
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 23, i32 4
  store i32 %13, i32* %15, align 8
  ret void

16:                                               ; preds = %16, %1
  %17 = phi i64 [ 0, %1 ], [ %37, %16 ]
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 2147483644
  %20 = load i32, i32* %2, align 16
  %21 = mul nsw i32 %20, %19
  %22 = trunc i64 %17 to i32
  %23 = shl i32 %22, 2
  %24 = and i32 %23, 8
  %25 = add nsw i32 %21, %24
  %26 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %17, i32 4
  store i32 %25, i32* %26, align 8
  %27 = or i64 %17, 1
  %28 = trunc i64 %17 to i32
  %29 = and i32 %28, 2147483644
  %30 = load i32, i32* %2, align 16
  %31 = mul nsw i32 %30, %29
  %32 = trunc i64 %27 to i32
  %33 = shl i32 %32, 2
  %34 = and i32 %33, 12
  %35 = add nsw i32 %31, %34
  %36 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %27, i32 4
  store i32 %35, i32* %36, align 8
  %37 = add nuw nsw i64 %17, 2
  %38 = icmp eq i64 %37, 16
  br i1 %38, label %3, label %16
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
