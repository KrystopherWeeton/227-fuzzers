; ModuleID = '../../components/subresource_filter/core/common/first_party_origin.cc'
source_filename = "../../components/subresource_filter/core/common/first_party_origin.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.subresource_filter::FirstPartyOrigin" = type <{ %"class.url::Origin", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN18subresource_filter16FirstPartyOriginC1EN3url6OriginE = hidden unnamed_addr alias void (%"class.subresource_filter::FirstPartyOrigin"*, %"class.url::Origin"*), void (%"class.subresource_filter::FirstPartyOrigin"*, %"class.url::Origin"*)* @_ZN18subresource_filter16FirstPartyOriginC2EN3url6OriginE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter16FirstPartyOriginC2EN3url6OriginE(%"class.subresource_filter::FirstPartyOrigin"*, %"class.url::Origin"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 0
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %1) #6
  %4 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18subresource_filter16FirstPartyOrigin12IsThirdPartyERK4GURL(%"class.subresource_filter::FirstPartyOrigin"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %83

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %25, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = bitcast %class.GURL* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %class.GURL* %1 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  %23 = getelementptr inbounds i8, i8* %22, i64 %14
  %24 = sext i32 %9 to i64
  br label %25

25:                                               ; preds = %7, %11
  %26 = phi i8* [ %23, %11 ], [ null, %7 ]
  %27 = phi i64 [ %24, %11 ], [ 0, %7 ]
  %28 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %38

36:                                               ; preds = %25
  %37 = zext i8 %31 to i64
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i64 [ %35, %33 ], [ %37, %36 ]
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %58, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %31 to i64
  %45 = select i1 %32, i64 %43, i64 %44
  %46 = icmp eq i64 %27, %45
  br i1 %46, label %47, label %58

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %51 = select i1 %32, i8* %49, i8* %50
  %52 = tail call i32 @bcmp(i8* %26, i8* %51, i64 %27) #6
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 2
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp ne i8 %56, 0
  br label %83

58:                                               ; preds = %41, %38, %47
  %59 = tail call i1 @llvm.is.constant.i64(i64 %27) #6
  %60 = icmp ult i64 %27, 23
  %61 = and i1 %60, %59
  br i1 %61, label %62, label %76

62:                                               ; preds = %58
  br i1 %32, label %63, label %67

63:                                               ; preds = %62
  %64 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  br label %70

67:                                               ; preds = %62
  %68 = trunc i64 %27 to i8
  store i8 %68, i8* %30, align 1
  %69 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  br label %70

70:                                               ; preds = %67, %63
  %71 = phi i8* [ %66, %63 ], [ %69, %67 ]
  %72 = icmp eq i64 %27, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %26, i64 %27, i1 false) #6
  br label %74

74:                                               ; preds = %73, %70
  %75 = getelementptr inbounds i8, i8* %71, i64 %27
  store i8 0, i8* %75, align 1
  br label %78

76:                                               ; preds = %58
  %77 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %26, i64 %27) #6
  br label %78

78:                                               ; preds = %74, %76
  %79 = tail call zeroext i1 @_ZN3net27registry_controlled_domains16SameDomainOrHostERK4GURLRKN3url6OriginENS0_21PrivateRegistryFilterE(%class.GURL* dereferenceable(120) %1, %"class.url::Origin"* dereferenceable(80) %3, i32 1) #6
  %80 = xor i1 %79, true
  %81 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %0, i64 0, i32 2
  %82 = zext i1 %80 to i8
  store i8 %82, i8* %81, align 8
  br label %83

83:                                               ; preds = %2, %54, %78
  %84 = phi i1 [ true, %2 ], [ %80, %78 ], [ %57, %54 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18subresource_filter16FirstPartyOrigin12IsThirdPartyERK4GURLRKN3url6OriginE(%class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN3net27registry_controlled_domains16SameDomainOrHostERK4GURLRKN3url6OriginENS0_21PrivateRegistryFilterE(%class.GURL* dereferenceable(120) %0, %"class.url::Origin"* dereferenceable(80) %1, i32 1) #6
  %8 = xor i1 %7, true
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i1 [ true, %2 ], [ %8, %6 ]
  ret i1 %10
}

declare zeroext i1 @_ZN3net27registry_controlled_domains16SameDomainOrHostERK4GURLRKN3url6OriginENS0_21PrivateRegistryFilterE(%class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
