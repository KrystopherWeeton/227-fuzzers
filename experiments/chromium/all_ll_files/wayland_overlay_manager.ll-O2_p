; ModuleID = '../../ui/ozone/platform/wayland/gpu/wayland_overlay_manager.cc'
source_filename = "../../ui/ozone/platform/wayland/gpu/wayland_overlay_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::WaylandOverlayManager" = type { %"class.ui::OverlayManagerOzone.base", [7 x i8] }
%"class.ui::OverlayManagerOzone.base" = type <{ i32 (...)**, i8 }>
%"class.ui::OverlayCandidatesOzone" = type { i32 (...)** }
%"class.ui::WaylandOverlayCandidates" = type <{ %"class.ui::OverlayCandidatesOzone", %"class.ui::WaylandOverlayManager"*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::OverlaySurfaceCandidate"*, %"class.ui::OverlaySurfaceCandidate"*, %"class.std::__1::__compressed_pair.8" }
%"class.ui::OverlaySurfaceCandidate" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::RectF", %"class.gfx::RectF", %"class.absl::optional", i8, [7 x i8], %class.scoped_refptr, i32, i8, i8, [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.scoped_refptr = type { %"class.gfx::NativePixmap"* }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.ui::OverlaySurfaceCandidate"* }

@_ZTVN2ui21WaylandOverlayManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::WaylandOverlayManager"*)* @_ZN2ui21WaylandOverlayManagerD2Ev to i8*), i8* bitcast (void (%"class.ui::WaylandOverlayManager"*)* @_ZN2ui21WaylandOverlayManagerD0Ev to i8*), i8* bitcast (%"class.ui::OverlayCandidatesOzone"* (%"class.ui::WaylandOverlayManager"*, i32)* @_ZN2ui21WaylandOverlayManager23CreateOverlayCandidatesEj to i8*)] }, align 8

@_ZN2ui21WaylandOverlayManagerC1Ev = hidden unnamed_addr alias void (%"class.ui::WaylandOverlayManager"*), void (%"class.ui::WaylandOverlayManager"*)* @_ZN2ui21WaylandOverlayManagerC2Ev
@_ZN2ui21WaylandOverlayManagerD1Ev = hidden unnamed_addr alias void (%"class.ui::WaylandOverlayManager"*), void (%"class.ui::WaylandOverlayManager"*)* @_ZN2ui21WaylandOverlayManagerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui21WaylandOverlayManagerC2Ev(%"class.ui::WaylandOverlayManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandOverlayManager", %"class.ui::WaylandOverlayManager"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.ui::WaylandOverlayManager", %"class.ui::WaylandOverlayManager"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21WaylandOverlayManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui21WaylandOverlayManagerD2Ev(%"class.ui::WaylandOverlayManager"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21WaylandOverlayManagerD0Ev(%"class.ui::WaylandOverlayManager"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::WaylandOverlayManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::OverlayCandidatesOzone"* @_ZN2ui21WaylandOverlayManager23CreateOverlayCandidatesEj(%"class.ui::WaylandOverlayManager"*, i32) unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 24) #7
  %4 = bitcast i8* %3 to %"class.ui::WaylandOverlayCandidates"*
  tail call void @_ZN2ui24WaylandOverlayCandidatesC1EPNS_21WaylandOverlayManagerEj(%"class.ui::WaylandOverlayCandidates"* nonnull %4, %"class.ui::WaylandOverlayManager"* %0, i32 %1) #8
  %5 = bitcast i8* %3 to %"class.ui::OverlayCandidatesOzone"*
  ret %"class.ui::OverlayCandidatesOzone"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21WaylandOverlayManager19CheckOverlaySupportEPNSt3__16vectorINS_23OverlaySurfaceCandidateENS1_9allocatorIS3_EEEEj(%"class.ui::WaylandOverlayManager"* nocapture readnone, %"class.std::__1::vector"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.ui::OverlaySurfaceCandidate"*, %"class.ui::OverlaySurfaceCandidate"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = load %"class.ui::OverlaySurfaceCandidate"*, %"class.ui::OverlaySurfaceCandidate"** %7, align 8
  %9 = icmp eq %"class.ui::OverlaySurfaceCandidate"* %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %12 = bitcast { i64, i64 }* %4 to i8*
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  br label %16

15:                                               ; preds = %44, %3
  ret void

16:                                               ; preds = %10, %44
  %17 = phi %"class.ui::OverlaySurfaceCandidate"* [ %6, %10 ], [ %47, %44 ]
  %18 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %17, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %44, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %17, i64 0, i32 3, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %44, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %17, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %44, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %17, i64 0, i32 4
  %31 = call zeroext i1 @_ZN3gfx27IsNearestRectWithinDistanceERKNS_5RectFEf(%"class.gfx::RectF"* dereferenceable(16) %30, float 0x3F847AE140000000) #8
  br i1 %31, label %32, label %44

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %17, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %17, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = call { i64, i64 } @_ZN3gfx13ToNearestRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %30) #8
  %39 = extractvalue { i64, i64 } %38, 0
  store i64 %39, i64* %13, align 8
  %40 = extractvalue { i64, i64 } %38, 1
  store i64 %40, i64* %14, align 8
  %41 = call zeroext i1 @_ZNK3gfx4Rect8ContainsERKS0_(%"class.gfx::Rect"* %37, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  br i1 %41, label %43, label %44

42:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  br label %43

43:                                               ; preds = %42, %36
  br label %44

44:                                               ; preds = %16, %21, %25, %29, %36, %43
  %45 = phi i8 [ 1, %43 ], [ 0, %21 ], [ 0, %25 ], [ 0, %29 ], [ 0, %36 ], [ 0, %16 ]
  %46 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %17, i64 0, i32 11
  store i8 %45, i8* %46, align 4
  %47 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %17, i64 1
  %48 = icmp eq %"class.ui::OverlaySurfaceCandidate"* %47, %8
  br i1 %48, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui21WaylandOverlayManager18CanHandleCandidateERKNS_23OverlaySurfaceCandidateEj(%"class.ui::WaylandOverlayManager"* nocapture readnone, %"class.ui::OverlaySurfaceCandidate"* dereferenceable(96), i32) local_unnamed_addr #2 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %1, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %1, i64 0, i32 3, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %35, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %1, i64 0, i32 4
  %19 = tail call zeroext i1 @_ZN3gfx27IsNearestRectWithinDistanceERKNS_5RectFEf(%"class.gfx::RectF"* dereferenceable(16) %18, float 0x3F847AE140000000) #8
  br i1 %19, label %20, label %35

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8
  br i1 %23, label %33, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.ui::OverlaySurfaceCandidate", %"class.ui::OverlaySurfaceCandidate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = tail call { i64, i64 } @_ZN3gfx13ToNearestRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %18) #8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %29 = extractvalue { i64, i64 } %27, 0
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %31 = extractvalue { i64, i64 } %27, 1
  store i64 %31, i64* %30, align 8
  %32 = call zeroext i1 @_ZNK3gfx4Rect8ContainsERKS0_(%"class.gfx::Rect"* %26, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8
  br i1 %32, label %34, label %35

33:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8
  br label %34

34:                                               ; preds = %25, %33
  br label %35

35:                                               ; preds = %3, %25, %17, %13, %9, %34
  %36 = phi i1 [ true, %34 ], [ false, %9 ], [ false, %13 ], [ false, %17 ], [ false, %25 ], [ false, %3 ]
  ret i1 %36
}

declare zeroext i1 @_ZN3gfx27IsNearestRectWithinDistanceERKNS_5RectFEf(%"class.gfx::RectF"* dereferenceable(16), float) local_unnamed_addr #5

declare zeroext i1 @_ZNK3gfx4Rect8ContainsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #5

declare { i64, i64 } @_ZN3gfx13ToNearestRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN2ui24WaylandOverlayCandidatesC1EPNS_21WaylandOverlayManagerEj(%"class.ui::WaylandOverlayCandidates"*, %"class.ui::WaylandOverlayManager"*, i32) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
