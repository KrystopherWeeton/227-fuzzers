; ModuleID = '../../ui/events/gesture_detection/motion_event_generic.cc'
source_filename = "../../ui/events/gesture_detection/motion_event_generic.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::PointerProperties" = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i32 }
%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.ui::MotionEventGeneric" = type { %"class.ui::MotionEvent", i32, %"class.base::TimeTicks", i32, i32, i32, i32, %"class.base::StackVector", %"class.std::__1::vector.1" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<ui::PointerProperties, 5>::Source" = type { [300 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::PointerProperties"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.base::StackAllocator" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.ui::MotionEvent"* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2ui17PointerPropertiesEN4base14StackAllocatorIS2_Lm5EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2ui11MotionEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTVN2ui18MotionEventGenericE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::MotionEventGeneric"*)* @_ZN2ui18MotionEventGenericD2Ev to i8*), i8* bitcast (void (%"class.ui::MotionEventGeneric"*)* @_ZN2ui18MotionEventGenericD0Ev to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric16GetUniqueEventIdEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric9GetActionEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric14GetActionIndexEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric15GetPointerCountEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric12GetPointerIdEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric4GetXEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric4GetYEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric7GetRawXEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric7GetRawYEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric13GetTouchMajorEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric13GetTouchMinorEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric14GetOrientationEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric11GetPressureEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric8GetTiltXEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric8GetTiltYEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric8GetTwistEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric21GetTangentialPressureEm to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric11GetToolTypeEm to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric14GetButtonStateEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric8GetFlagsEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric12GetEventTimeEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEvent"*)* @_ZNK2ui11MotionEvent17GetClassificationEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric14GetHistorySizeEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric22GetHistoricalEventTimeEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64, i64)* @_ZNK2ui18MotionEventGeneric23GetHistoricalTouchMajorEmm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64, i64)* @_ZNK2ui18MotionEventGeneric14GetHistoricalXEmm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64, i64)* @_ZNK2ui18MotionEventGeneric14GetHistoricalYEmm to i8*), i8* bitcast (i32 (%"class.ui::MotionEvent"*, i64)* @_ZNK2ui11MotionEvent17GetSourceDeviceIdEm to i8*)] }, align 8

@_ZN2ui17PointerPropertiesC1Ev = hidden unnamed_addr alias void (%"struct.ui::PointerProperties"*), void (%"struct.ui::PointerProperties"*)* @_ZN2ui17PointerPropertiesC2Ev
@_ZN2ui17PointerPropertiesC1Efff = hidden unnamed_addr alias void (%"struct.ui::PointerProperties"*, float, float, float), void (%"struct.ui::PointerProperties"*, float, float, float)* @_ZN2ui17PointerPropertiesC2Efff
@_ZN2ui17PointerPropertiesC1ERKNS_11MotionEventEm = hidden unnamed_addr alias void (%"struct.ui::PointerProperties"*, %"class.ui::MotionEvent"*, i64), void (%"struct.ui::PointerProperties"*, %"class.ui::MotionEvent"*, i64)* @_ZN2ui17PointerPropertiesC2ERKNS_11MotionEventEm
@_ZN2ui17PointerPropertiesC1ERKS0_ = hidden unnamed_addr alias void (%"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"*), void (%"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"*)* @_ZN2ui17PointerPropertiesC2ERKS0_
@_ZN2ui18MotionEventGenericC1ENS_11MotionEvent6ActionEN4base9TimeTicksERKNS_17PointerPropertiesE = hidden unnamed_addr alias void (%"class.ui::MotionEventGeneric"*, i32, i64, %"struct.ui::PointerProperties"*), void (%"class.ui::MotionEventGeneric"*, i32, i64, %"struct.ui::PointerProperties"*)* @_ZN2ui18MotionEventGenericC2ENS_11MotionEvent6ActionEN4base9TimeTicksERKNS_17PointerPropertiesE
@_ZN2ui18MotionEventGenericC1ERKS0_ = hidden unnamed_addr alias void (%"class.ui::MotionEventGeneric"*, %"class.ui::MotionEventGeneric"*), void (%"class.ui::MotionEventGeneric"*, %"class.ui::MotionEventGeneric"*)* @_ZN2ui18MotionEventGenericC2ERKS0_
@_ZN2ui18MotionEventGenericD1Ev = hidden unnamed_addr alias void (%"class.ui::MotionEventGeneric"*), void (%"class.ui::MotionEventGeneric"*)* @_ZN2ui18MotionEventGenericD2Ev
@_ZN2ui18MotionEventGenericC1Ev = hidden unnamed_addr alias void (%"class.ui::MotionEventGeneric"*), void (%"class.ui::MotionEventGeneric"*)* @_ZN2ui18MotionEventGenericC2Ev
@_ZN2ui18MotionEventGenericC1ERKNS_11MotionEventEb = hidden unnamed_addr alias void (%"class.ui::MotionEventGeneric"*, %"class.ui::MotionEvent"*, i1), void (%"class.ui::MotionEventGeneric"*, %"class.ui::MotionEvent"*, i1)* @_ZN2ui18MotionEventGenericC2ERKNS_11MotionEventEb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17PointerPropertiesC2Ev(%"struct.ui::PointerProperties"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.ui::PointerProperties"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 60, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui17PointerPropertiesC2Efff(%"struct.ui::PointerProperties"* nocapture, float, float, float) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 2
  store float %1, float* %7, align 4
  %8 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 3
  store float %2, float* %8, align 4
  %9 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 4
  store float %1, float* %9, align 4
  %10 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 5
  store float %2, float* %10, align 4
  %11 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 6
  store float 0.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 7
  store float %3, float* %12, align 4
  %13 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 8
  %14 = bitcast float* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17PointerPropertiesC2ERKNS_11MotionEventEm(%"struct.ui::PointerProperties"* nocapture, %"class.ui::MotionEvent"* dereferenceable(8), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 0
  %5 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %6 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %6, i64 6
  %8 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %7, align 8
  %9 = tail call i32 %8(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store i32 %9, i32* %4, align 4
  %10 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 1
  %11 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %5, align 8
  %12 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %11, i64 19
  %13 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %12, align 8
  %14 = tail call i32 %13(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store i32 %14, i32* %10, align 4
  %15 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 2
  %16 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %17 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %18 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %17, i64 7
  %19 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %18, align 8
  %20 = tail call float %19(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %20, float* %15, align 4
  %21 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 3
  %22 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %23 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %22, i64 8
  %24 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %23, align 8
  %25 = tail call float %24(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %25, float* %21, align 4
  %26 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 4
  %27 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %28 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %27, i64 9
  %29 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %28, align 8
  %30 = tail call float %29(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %30, float* %26, align 4
  %31 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 5
  %32 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %33 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %32, i64 10
  %34 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %33, align 8
  %35 = tail call float %34(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %35, float* %31, align 4
  %36 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 6
  %37 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %38 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %37, i64 14
  %39 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %38, align 8
  %40 = tail call float %39(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %40, float* %36, align 4
  %41 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 7
  %42 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %43 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %42, i64 11
  %44 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %43, align 8
  %45 = tail call float %44(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %45, float* %41, align 4
  %46 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 8
  %47 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %48 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %47, i64 12
  %49 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %48, align 8
  %50 = tail call float %49(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %50, float* %46, align 4
  %51 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 9
  %52 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %53 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %52, i64 13
  %54 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %53, align 8
  %55 = tail call float %54(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %55, float* %51, align 4
  %56 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 10
  %57 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %58 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %57, i64 15
  %59 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %58, align 8
  %60 = tail call float %59(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %60, float* %56, align 4
  %61 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 11
  %62 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %63 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %62, i64 16
  %64 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %63, align 8
  %65 = tail call float %64(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %65, float* %61, align 4
  %66 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 12
  %67 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %68 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %67, i64 17
  %69 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %68, align 8
  %70 = tail call float %69(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %70, float* %66, align 4
  %71 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 13
  %72 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %16, align 8
  %73 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %72, i64 18
  %74 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %73, align 8
  %75 = tail call float %74(%"class.ui::MotionEvent"* %1, i64 %2) #11
  store float %75, float* %71, align 4
  %76 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 14
  store i32 0, i32* %76, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17PointerPropertiesC2ERKS0_(%"struct.ui::PointerProperties"* nocapture, %"struct.ui::PointerProperties"* nocapture readonly dereferenceable(60)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::PointerProperties"* %0 to i8*
  %4 = bitcast %"struct.ui::PointerProperties"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 60, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui17PointerProperties21SetAxesAndOrientationEfff(%"struct.ui::PointerProperties"* nocapture, float, float, float) local_unnamed_addr #1 align 2 {
  %5 = bitcast float %1 to i32
  %6 = bitcast float %2 to i32
  %7 = fmul float %3, 0x400921FB60000000
  %8 = fdiv float %7, 1.800000e+02
  %9 = fcmp ult float %8, 0x3FF921FB60000000
  %10 = fadd float %8, 0xBFF921FB60000000
  %11 = select i1 %9, i32 %5, i32 %6
  %12 = select i1 %9, i32 %6, i32 %5
  %13 = select i1 %9, float %8, float %10
  %14 = bitcast i32 %11 to float
  %15 = bitcast i32 %12 to float
  %16 = fcmp ogt float %14, %15
  %17 = fadd float %13, 0xBFF921FB60000000
  %18 = select i1 %16, float %14, float %15
  %19 = select i1 %16, float %15, float %14
  %20 = select i1 %16, float %17, float %13
  %21 = fmul float %19, 2.000000e+00
  %22 = fmul float %18, 2.000000e+00
  %23 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 7
  store float %22, float* %23, align 4
  %24 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 8
  store float %21, float* %24, align 4
  %25 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 9
  store float %20, float* %25, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18MotionEventGenericC2ENS_11MotionEvent6ActionEN4base9TimeTicksERKNS_17PointerPropertiesE(%"class.ui::MotionEventGeneric"*, i32, i64, %"struct.ui::PointerProperties"* nocapture readonly dereferenceable(60)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2ui18MotionEventGenericE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 1
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 3
  %9 = tail call i32 @_ZN2ui19GetNextTouchEventIdEv() #11
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 5
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 6
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7
  %14 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %13, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %14, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %16, align 8
  %17 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2
  %18 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 1
  %19 = bitcast %"class.std::__1::vector"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = ptrtoint %"class.base::StackVector"* %13 to i64
  %21 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %18 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"struct.ui::PointerProperties"** %22 to i64*
  %24 = bitcast %"class.std::__1::vector"* %17 to i64*
  %25 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %26 = bitcast %"struct.ui::PointerProperties"** %25 to i64*
  %27 = icmp eq %"class.base::StackVector"* %13, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %4
  %29 = tail call i8* @_Znwm(i64 300) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 300
  br label %33

32:                                               ; preds = %4
  store i8 1, i8* %15, align 4
  br label %33

33:                                               ; preds = %28, %32
  %34 = phi i8* [ %31, %28 ], [ %15, %32 ]
  %35 = phi i64 [ %30, %28 ], [ %20, %32 ]
  %36 = ptrtoint i8* %34 to i64
  store i64 %35, i64* %24, align 8
  store i64 %35, i64* %26, align 8
  store i64 %36, i64* %23, align 8
  %37 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8
  %38 = bitcast %"class.std::__1::vector.1"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = tail call i64 @_ZN2ui18MotionEventGeneric11PushPointerERKNS_17PointerPropertiesE(%"class.ui::MotionEventGeneric"* %0, %"struct.ui::PointerProperties"* dereferenceable(60) %3)
  ret void
}

declare i32 @_ZN2ui19GetNextTouchEventIdEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui18MotionEventGeneric11PushPointerERKNS_17PointerPropertiesE(%"class.ui::MotionEventGeneric"*, %"struct.ui::PointerProperties"* nocapture readonly dereferenceable(60)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2
  %4 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %5 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %4, align 8
  %6 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %7 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %6, align 8
  %8 = icmp eq %"struct.ui::PointerProperties"* %5, %7
  %9 = ptrtoint %"struct.ui::PointerProperties"* %7 to i64
  br i1 %8, label %17, label %10

10:                                               ; preds = %2
  %11 = bitcast %"struct.ui::PointerProperties"* %5 to i8*
  %12 = bitcast %"struct.ui::PointerProperties"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 60, i1 false) #11
  %13 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 1
  %14 = ptrtoint %"struct.ui::PointerProperties"* %13 to i64
  %15 = bitcast %"struct.ui::PointerProperties"** %4 to i64*
  store i64 %14, i64* %15, align 8
  %16 = bitcast %"class.std::__1::vector"* %3 to i64*
  br label %100

17:                                               ; preds = %2
  %18 = ptrtoint %"struct.ui::PointerProperties"* %5 to i64
  %19 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0
  %20 = bitcast %"struct.ui::PointerProperties"** %4 to i64*
  %21 = bitcast %"class.std::__1::vector"* %3 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %18, %22
  %24 = sdiv exact i64 %23, 60
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 307445734561825860
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #13
  unreachable

29:                                               ; preds = %17
  %30 = bitcast %"struct.ui::PointerProperties"** %6 to i64*
  %31 = sub i64 %9, %22
  %32 = sdiv exact i64 %31, 60
  %33 = icmp ult i64 %32, 153722867280912930
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = shl nsw i64 %32, 1
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %57, label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ %37, %34 ], [ 307445734561825860, %29 ]
  %41 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %19, i64 0, i32 0
  %42 = load %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"*, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %41, align 8
  %43 = icmp eq %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %42, null
  br i1 %43, label %53, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %42, i64 0, i32 1
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = icmp ult i64 %40, 6
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  store i8 1, i8* %45, align 4
  %51 = bitcast %"class.base::StackAllocator"* %19 to %"struct.ui::PointerProperties"**
  %52 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %51, align 8
  br label %57

53:                                               ; preds = %44, %39
  %54 = mul i64 %40, 60
  %55 = tail call i8* @_Znwm(i64 %54) #12
  %56 = bitcast i8* %55 to %"struct.ui::PointerProperties"*
  br label %57

57:                                               ; preds = %53, %50, %34
  %58 = phi i64 [ 0, %34 ], [ %40, %50 ], [ %40, %53 ]
  %59 = phi %"struct.ui::PointerProperties"* [ null, %34 ], [ %52, %50 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %59, i64 %24
  %61 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %59, i64 %58
  %62 = ptrtoint %"struct.ui::PointerProperties"* %61 to i64
  %63 = bitcast %"struct.ui::PointerProperties"* %60 to i8*
  %64 = bitcast %"struct.ui::PointerProperties"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 60, i1 false) #11
  %65 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %60, i64 1
  %66 = ptrtoint %"struct.ui::PointerProperties"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %68 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %67, align 8
  %69 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %4, align 8
  %70 = icmp eq %"struct.ui::PointerProperties"* %69, %68
  br i1 %70, label %71, label %73

71:                                               ; preds = %57
  %72 = ptrtoint %"struct.ui::PointerProperties"* %68 to i64
  br label %83

73:                                               ; preds = %57, %73
  %74 = phi %"struct.ui::PointerProperties"* [ %76, %73 ], [ %60, %57 ]
  %75 = phi %"struct.ui::PointerProperties"* [ %77, %73 ], [ %69, %57 ]
  %76 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %74, i64 -1
  %77 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %75, i64 -1
  %78 = bitcast %"struct.ui::PointerProperties"* %76 to i8*
  %79 = bitcast %"struct.ui::PointerProperties"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 60, i1 false) #11
  %80 = icmp eq %"struct.ui::PointerProperties"* %77, %68
  br i1 %80, label %81, label %73

81:                                               ; preds = %73
  %82 = load i64, i64* %21, align 8
  br label %83

83:                                               ; preds = %81, %71
  %84 = phi %"struct.ui::PointerProperties"* [ %60, %71 ], [ %76, %81 ]
  %85 = phi i64 [ %72, %71 ], [ %82, %81 ]
  %86 = ptrtoint %"struct.ui::PointerProperties"* %84 to i64
  store i64 %86, i64* %21, align 8
  store i64 %66, i64* %20, align 8
  store i64 %62, i64* %30, align 8
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %83
  %89 = inttoptr i64 %85 to %"struct.ui::PointerProperties"*
  %90 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %19, i64 0, i32 0
  %91 = load %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"*, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %90, align 8
  %92 = icmp ne %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %91, null
  %93 = bitcast %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %91 to %"struct.ui::PointerProperties"*
  %94 = icmp eq %"struct.ui::PointerProperties"* %89, %93
  %95 = and i1 %92, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %91, i64 0, i32 1
  store i8 0, i8* %97, align 4
  br label %100

98:                                               ; preds = %88
  %99 = inttoptr i64 %85 to i8*
  tail call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %98, %96, %83, %10
  %101 = phi i64* [ %21, %98 ], [ %21, %96 ], [ %21, %83 ], [ %16, %10 ]
  %102 = phi i64* [ %20, %98 ], [ %20, %96 ], [ %20, %83 ], [ %15, %10 ]
  %103 = load i64, i64* %102, align 8
  %104 = load i64, i64* %101, align 8
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, 60
  %107 = add nsw i64 %106, -1
  ret i64 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18MotionEventGenericC2ERKS0_(%"class.ui::MotionEventGeneric"*, %"class.ui::MotionEventGeneric"* dereferenceable(408)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2ui18MotionEventGenericE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 5
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 6
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7
  %24 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %24, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %26, align 8
  %27 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2
  %28 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 1
  %29 = bitcast %"class.std::__1::vector"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #11
  %30 = ptrtoint %"class.base::StackVector"* %23 to i64
  %31 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %28 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"struct.ui::PointerProperties"** %32 to i64*
  %34 = bitcast %"class.std::__1::vector"* %27 to i64*
  %35 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %36 = bitcast %"struct.ui::PointerProperties"** %35 to i64*
  %37 = icmp eq %"class.base::StackVector"* %23, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %2
  %39 = tail call i8* @_Znwm(i64 300) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 300
  br label %43

42:                                               ; preds = %2
  store i8 1, i8* %25, align 4
  br label %43

43:                                               ; preds = %38, %42
  %44 = phi i8* [ %41, %38 ], [ %25, %42 ]
  %45 = phi i64 [ %40, %38 ], [ %30, %42 ]
  %46 = ptrtoint i8* %44 to i64
  store i64 %45, i64* %34, align 8
  store i64 %45, i64* %36, align 8
  store i64 %46, i64* %33, align 8
  %47 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %48 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %47, align 8
  %49 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %50 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %49, align 8
  tail call void @_ZNSt3__16vectorIN2ui17PointerPropertiesEN4base14StackAllocatorIS2_Lm5EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector"* %27, %"struct.ui::PointerProperties"* %48, %"struct.ui::PointerProperties"* %50) #11
  %51 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8
  %52 = bitcast %"class.std::__1::vector.1"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #11
  %53 = bitcast %"class.ui::MotionEventGeneric"* %1 to i64 (%"class.ui::MotionEventGeneric"*)***
  %54 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %53, align 8
  %55 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %54, i64 24
  %56 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %55, align 8
  %57 = tail call i64 %56(%"class.ui::MotionEventGeneric"* %1) #11
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 8, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 1
  %64 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.std::__1::unique_ptr"** %63 to i64*
  br label %67

66:                                               ; preds = %90, %43
  ret void

67:                                               ; preds = %90, %59
  %68 = phi i64 [ 0, %59 ], [ %91, %90 ]
  %69 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %60, align 8
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 %68, i32 0, i32 0, i32 0
  %71 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %70, align 8
  %72 = call %"class.ui::MotionEvent"* @_ZNK2ui11MotionEvent5CloneEv(%"class.ui::MotionEvent"* %71) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  store %"class.ui::MotionEvent"* %72, %"class.ui::MotionEvent"** %62, align 8
  %73 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %63, align 8
  %74 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %64, align 8
  %75 = icmp ult %"class.std::__1::unique_ptr"* %73, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %67
  %77 = ptrtoint %"class.ui::MotionEvent"* %72 to i64
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %62, align 8
  %78 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %73, i64 1
  %80 = ptrtoint %"class.std::__1::unique_ptr"* %79 to i64
  store i64 %80, i64* %65, align 8
  br label %82

81:                                               ; preds = %67
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2ui11MotionEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"* %51, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #11
  br label %82

82:                                               ; preds = %81, %76
  %83 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %62, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %62, align 8
  %84 = icmp eq %"class.ui::MotionEvent"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.ui::MotionEvent"* %83 to void (%"class.ui::MotionEvent"*)***
  %87 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %87, i64 1
  %89 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %88, align 8
  call void %89(%"class.ui::MotionEvent"* nonnull %83) #11
  br label %90

90:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %91 = add nuw i64 %68, 1
  %92 = icmp eq i64 %91, %57
  br i1 %92, label %66, label %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18MotionEventGeneric19PushHistoricalEventENSt3__110unique_ptrINS_11MotionEventENS1_14default_deleteIS3_EEEE(%"class.ui::MotionEventGeneric"*, %"class.ui::MotionEvent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.ui::MotionEvent"* %1, %"class.ui::MotionEvent"** %4, align 8
  %5 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp ult %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = ptrtoint %"class.ui::MotionEvent"* %1 to i64
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 1
  %14 = ptrtoint %"class.std::__1::unique_ptr"* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2ui11MotionEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"* %17, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #11
  br label %18

18:                                               ; preds = %10, %16
  %19 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %4, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %4, align 8
  %20 = icmp eq %"class.ui::MotionEvent"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.ui::MotionEvent"* %19 to void (%"class.ui::MotionEvent"*)***
  %23 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %23, i64 1
  %25 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %24, align 8
  call void %25(%"class.ui::MotionEvent"* nonnull %19) #11
  br label %26

26:                                               ; preds = %18, %21
  ret void
}

declare %"class.ui::MotionEvent"* @_ZNK2ui11MotionEvent5CloneEv(%"class.ui::MotionEvent"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18MotionEventGenericD2Ev(%"class.ui::MotionEventGeneric"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2ui18MotionEventGenericE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %15, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %15, align 8
  %17 = icmp eq %"class.ui::MotionEvent"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.ui::MotionEvent"* %16 to void (%"class.ui::MotionEvent"*)***
  %20 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %20, i64 1
  %22 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %21, align 8
  tail call void %22(%"class.ui::MotionEvent"* nonnull %16) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.1"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %32 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %31, align 8
  %33 = icmp eq %"struct.ui::PointerProperties"* %32, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %"struct.ui::PointerProperties"* %32 to i64
  %36 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %37 = bitcast %"struct.ui::PointerProperties"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %39 = load %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"*, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %38, align 8
  %40 = icmp ne %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %39, null
  %41 = bitcast %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %39 to %"struct.ui::PointerProperties"*
  %42 = icmp eq %"struct.ui::PointerProperties"* %32, %41
  %43 = and i1 %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %39, i64 0, i32 1
  store i8 0, i8* %45, align 4
  br label %48

46:                                               ; preds = %34
  %47 = bitcast %"struct.ui::PointerProperties"* %32 to i8*
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %30, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18MotionEventGenericD0Ev(%"class.ui::MotionEventGeneric"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2ui18MotionEventGenericE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %15, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %15, align 8
  %17 = icmp eq %"class.ui::MotionEvent"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.ui::MotionEvent"* %16 to void (%"class.ui::MotionEvent"*)***
  %20 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %20, i64 1
  %22 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %21, align 8
  tail call void %22(%"class.ui::MotionEvent"* nonnull %16) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.1"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %32 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %31, align 8
  %33 = icmp eq %"struct.ui::PointerProperties"* %32, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %"struct.ui::PointerProperties"* %32 to i64
  %36 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %37 = bitcast %"struct.ui::PointerProperties"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %39 = load %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"*, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %38, align 8
  %40 = icmp ne %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %39, null
  %41 = bitcast %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %39 to %"struct.ui::PointerProperties"*
  %42 = icmp eq %"struct.ui::PointerProperties"* %32, %41
  %43 = and i1 %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %39, i64 0, i32 1
  store i8 0, i8* %45, align 4
  br label %48

46:                                               ; preds = %34
  %47 = bitcast %"struct.ui::PointerProperties"* %32 to i8*
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %30, %44, %46
  %49 = bitcast %"class.ui::MotionEventGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui18MotionEventGeneric16GetUniqueEventIdEv(%"class.ui::MotionEventGeneric"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui18MotionEventGeneric9GetActionEv(%"class.ui::MotionEventGeneric"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui18MotionEventGeneric14GetActionIndexEv(%"class.ui::MotionEventGeneric"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui18MotionEventGeneric15GetPointerCountEv(%"class.ui::MotionEventGeneric"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %4 = bitcast %"struct.ui::PointerProperties"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 60
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui18MotionEventGeneric12GetPointerIdEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 0
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric4GetXEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 2
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric4GetYEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 3
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric7GetRawXEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 4
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric7GetRawYEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 5
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric13GetTouchMajorEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 7
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric13GetTouchMinorEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 8
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric14GetOrientationEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 9
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric11GetPressureEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 6
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric8GetTiltXEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 10
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric8GetTiltYEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 11
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric8GetTwistEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 12
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric21GetTangentialPressureEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 13
  %6 = load float, float* %5, align 4
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui18MotionEventGeneric11GetToolTypeEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 1
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui18MotionEventGeneric14GetButtonStateEv(%"class.ui::MotionEventGeneric"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui18MotionEventGeneric8GetFlagsEv(%"class.ui::MotionEventGeneric"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui18MotionEventGeneric12GetEventTimeEv(%"class.ui::MotionEventGeneric"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui18MotionEventGeneric14GetHistorySizeEv(%"class.ui::MotionEventGeneric"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui18MotionEventGeneric22GetHistoricalEventTimeEm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %1, i32 0, i32 0, i32 0
  %6 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %5, align 8
  %7 = bitcast %"class.ui::MotionEvent"* %6 to i64 (%"class.ui::MotionEvent"*)***
  %8 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %8, i64 22
  %10 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %9, align 8
  %11 = tail call i64 %10(%"class.ui::MotionEvent"* %6) #11
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric23GetHistoricalTouchMajorEmm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 %2, i32 0, i32 0, i32 0
  %7 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %6, align 8
  %8 = bitcast %"class.ui::MotionEvent"* %7 to float (%"class.ui::MotionEvent"*, i64)***
  %9 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %8, align 8
  %10 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %9, i64 11
  %11 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %10, align 8
  %12 = tail call float %11(%"class.ui::MotionEvent"* %7, i64 %1) #11
  ret float %12
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric14GetHistoricalXEmm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 %2, i32 0, i32 0, i32 0
  %7 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %6, align 8
  %8 = bitcast %"class.ui::MotionEvent"* %7 to float (%"class.ui::MotionEvent"*, i64)***
  %9 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %8, align 8
  %10 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %9, i64 7
  %11 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %10, align 8
  %12 = tail call float %11(%"class.ui::MotionEvent"* %7, i64 %1) #11
  ret float %12
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK2ui18MotionEventGeneric14GetHistoricalYEmm(%"class.ui::MotionEventGeneric"* nocapture readonly, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 %2, i32 0, i32 0, i32 0
  %7 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %6, align 8
  %8 = bitcast %"class.ui::MotionEvent"* %7 to float (%"class.ui::MotionEvent"*, i64)***
  %9 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %8, align 8
  %10 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %9, i64 8
  %11 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %10, align 8
  %12 = tail call float %11(%"class.ui::MotionEvent"* %7, i64 %1) #11
  ret float %12
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.ui::MotionEventGeneric"* @_ZN2ui18MotionEventGeneric10CloneEventERKNS_11MotionEventE(%"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 408) #12
  %3 = bitcast i8* %2 to %"class.ui::MotionEventGeneric"*
  tail call void @_ZN2ui18MotionEventGenericC2ERKNS_11MotionEventEb(%"class.ui::MotionEventGeneric"* nonnull %3, %"class.ui::MotionEvent"* dereferenceable(8) %0, i1 zeroext true)
  ret %"class.ui::MotionEventGeneric"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::MotionEventGeneric"* @_ZN2ui18MotionEventGeneric11CancelEventERKNS_11MotionEventE(%"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 408) #12
  %3 = bitcast i8* %2 to %"class.ui::MotionEventGeneric"*
  tail call void @_ZN2ui18MotionEventGenericC2ERKNS_11MotionEventEb(%"class.ui::MotionEventGeneric"* nonnull %3, %"class.ui::MotionEvent"* dereferenceable(8) %0, i1 zeroext false)
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 4, i32* %5, align 8
  %6 = tail call i32 @_ZN2ui19GetNextTouchEventIdEv() #11
  %7 = getelementptr inbounds i8, i8* %2, i64 24
  %8 = bitcast i8* %7 to i32*
  store i32 %6, i32* %8, align 8
  ret %"class.ui::MotionEventGeneric"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18MotionEventGeneric15RemovePointerAtEm(%"class.ui::MotionEventGeneric"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1
  %6 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 1
  %7 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %8 = bitcast %"struct.ui::PointerProperties"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"struct.ui::PointerProperties"* %6 to i64
  %11 = sub i64 %9, %10
  %12 = sdiv exact i64 %11, 60
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast %"struct.ui::PointerProperties"* %5 to i8*
  %16 = bitcast %"struct.ui::PointerProperties"* %6 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 %11, i1 false) #11
  br label %17

17:                                               ; preds = %2, %14
  %18 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 %12
  store %"struct.ui::PointerProperties"* %18, %"struct.ui::PointerProperties"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18MotionEventGenericC2Ev(%"class.ui::MotionEventGeneric"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2ui18MotionEventGenericE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 3
  %6 = tail call i32 @_ZN2ui19GetNextTouchEventIdEv() #11
  store i32 %6, i32* %5, align 8
  %7 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 4
  store i32 -1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 5
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %9, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %10, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %12, align 8
  %13 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2
  %14 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 1
  %15 = bitcast %"class.std::__1::vector"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #11
  %16 = ptrtoint %"class.base::StackVector"* %9 to i64
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %14 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"struct.ui::PointerProperties"** %18 to i64*
  %20 = bitcast %"class.std::__1::vector"* %13 to i64*
  %21 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %22 = bitcast %"struct.ui::PointerProperties"** %21 to i64*
  %23 = icmp eq %"class.base::StackVector"* %9, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %1
  %25 = tail call i8* @_Znwm(i64 300) #12
  %26 = ptrtoint i8* %25 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 300
  br label %29

28:                                               ; preds = %1
  store i8 1, i8* %11, align 4
  br label %29

29:                                               ; preds = %24, %28
  %30 = phi i8* [ %27, %24 ], [ %11, %28 ]
  %31 = phi i64 [ %26, %24 ], [ %16, %28 ]
  %32 = ptrtoint i8* %30 to i64
  store i64 %31, i64* %20, align 8
  store i64 %31, i64* %22, align 8
  store i64 %32, i64* %19, align 8
  %33 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8
  %34 = bitcast %"class.std::__1::vector.1"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18MotionEventGenericC2ERKNS_11MotionEventEb(%"class.ui::MotionEventGeneric"*, %"class.ui::MotionEvent"* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"struct.ui::PointerProperties", align 4
  %6 = alloca %"struct.ui::PointerProperties", align 4
  %7 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2ui18MotionEventGenericE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 1
  %9 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*)***
  %10 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %10, i64 3
  %12 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %11, align 8
  %13 = tail call i32 %12(%"class.ui::MotionEvent"* %1) #11
  store i32 %13, i32* %8, align 8
  %14 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*)***
  %15 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %15, i64 22
  %17 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %16, align 8
  %18 = tail call i64 %17(%"class.ui::MotionEvent"* %1) #11
  %19 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 3
  %21 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8
  %22 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %21, i64 2
  %23 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %22, align 8
  %24 = tail call i32 %23(%"class.ui::MotionEvent"* %1) #11
  store i32 %24, i32* %20, align 8
  %25 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 4
  %26 = load i32, i32* %8, align 8
  %27 = add i32 %26, -5
  %28 = icmp ult i32 %27, 2
  br i1 %28, label %29, label %34

29:                                               ; preds = %3
  %30 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8
  %31 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %30, i64 4
  %32 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %31, align 8
  %33 = tail call i32 %32(%"class.ui::MotionEvent"* %1) #11
  br label %34

34:                                               ; preds = %3, %29
  %35 = phi i32 [ %33, %29 ], [ 0, %3 ]
  store i32 %35, i32* %25, align 4
  %36 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 5
  %37 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8
  %38 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %37, i64 20
  %39 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %38, align 8
  %40 = tail call i32 %39(%"class.ui::MotionEvent"* %1) #11
  store i32 %40, i32* %36, align 8
  %41 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 6
  %42 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8
  %43 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %42, i64 21
  %44 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %43, align 8
  %45 = tail call i32 %44(%"class.ui::MotionEvent"* %1) #11
  store i32 %45, i32* %41, align 4
  %46 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7
  %47 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %46, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  store i8 0, i8* %48, align 4
  %49 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %47, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %49, align 8
  %50 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2
  %51 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::vector"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #11
  %53 = ptrtoint %"class.base::StackVector"* %46 to i64
  %54 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %51 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"struct.ui::PointerProperties"** %55 to i64*
  %57 = bitcast %"class.std::__1::vector"* %50 to i64*
  %58 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %59 = bitcast %"struct.ui::PointerProperties"** %58 to i64*
  %60 = icmp eq %"class.base::StackVector"* %46, null
  br i1 %60, label %61, label %65

61:                                               ; preds = %34
  %62 = tail call i8* @_Znwm(i64 300) #12
  %63 = ptrtoint i8* %62 to i64
  %64 = getelementptr inbounds i8, i8* %62, i64 300
  br label %66

65:                                               ; preds = %34
  store i8 1, i8* %48, align 4
  br label %66

66:                                               ; preds = %61, %65
  %67 = phi i8* [ %64, %61 ], [ %48, %65 ]
  %68 = phi i64 [ %63, %61 ], [ %53, %65 ]
  %69 = ptrtoint i8* %67 to i64
  store i64 %68, i64* %57, align 8
  store i64 %68, i64* %59, align 8
  store i64 %69, i64* %56, align 8
  %70 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8
  %71 = bitcast %"class.std::__1::vector.1"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #11
  %72 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %14, align 8
  %73 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %72, i64 5
  %74 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %73, align 8
  %75 = tail call i64 %74(%"class.ui::MotionEvent"* %1) #11
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %96, label %77

77:                                               ; preds = %66
  %78 = bitcast %"struct.ui::PointerProperties"* %5 to i8*
  %79 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 0
  %80 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %81 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 2
  %83 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %84 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 3
  %85 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 4
  %86 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 5
  %87 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 6
  %88 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 7
  %89 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 8
  %90 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 9
  %91 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 10
  %92 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 11
  %93 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 12
  %94 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 13
  %95 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %5, i64 0, i32 14
  br label %97

96:                                               ; preds = %97, %66
  br i1 %2, label %158, label %257

97:                                               ; preds = %97, %77
  %98 = phi i64 [ 0, %77 ], [ %156, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %78) #11
  %99 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %80, align 8
  %100 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %99, i64 6
  %101 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %100, align 8
  %102 = tail call i32 %101(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store i32 %102, i32* %79, align 4
  %103 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %80, align 8
  %104 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %103, i64 19
  %105 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %104, align 8
  %106 = tail call i32 %105(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store i32 %106, i32* %81, align 4
  %107 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %108 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %107, i64 7
  %109 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %108, align 8
  %110 = tail call float %109(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %110, float* %82, align 4
  %111 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %112 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %111, i64 8
  %113 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %112, align 8
  %114 = tail call float %113(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %114, float* %84, align 4
  %115 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %116 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %115, i64 9
  %117 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %116, align 8
  %118 = tail call float %117(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %118, float* %85, align 4
  %119 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %120 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %119, i64 10
  %121 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %120, align 8
  %122 = tail call float %121(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %122, float* %86, align 4
  %123 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %124 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %123, i64 14
  %125 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %124, align 8
  %126 = tail call float %125(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %126, float* %87, align 4
  %127 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %128 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %127, i64 11
  %129 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %128, align 8
  %130 = tail call float %129(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %130, float* %88, align 4
  %131 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %132 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %131, i64 12
  %133 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %132, align 8
  %134 = tail call float %133(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %134, float* %89, align 4
  %135 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %136 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %135, i64 13
  %137 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %136, align 8
  %138 = tail call float %137(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %138, float* %90, align 4
  %139 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %140 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %139, i64 15
  %141 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %140, align 8
  %142 = tail call float %141(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %142, float* %91, align 4
  %143 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %144 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %143, i64 16
  %145 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %144, align 8
  %146 = tail call float %145(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %146, float* %92, align 4
  %147 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %148 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %147, i64 17
  %149 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %148, align 8
  %150 = tail call float %149(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %150, float* %93, align 4
  %151 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %83, align 8
  %152 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %151, i64 18
  %153 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %152, align 8
  %154 = tail call float %153(%"class.ui::MotionEvent"* %1, i64 %98) #11
  store float %154, float* %94, align 4
  store i32 0, i32* %95, align 4
  %155 = call i64 @_ZN2ui18MotionEventGeneric11PushPointerERKNS_17PointerPropertiesE(%"class.ui::MotionEventGeneric"* %0, %"struct.ui::PointerProperties"* nonnull dereferenceable(60) %5)
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %78) #11
  %156 = add nuw i64 %98, 1
  %157 = icmp eq i64 %156, %75
  br i1 %157, label %96, label %97

158:                                              ; preds = %96
  %159 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %14, align 8
  %160 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %159, i64 24
  %161 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %160, align 8
  %162 = tail call i64 %161(%"class.ui::MotionEvent"* %1) #11
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %257, label %164

164:                                              ; preds = %158
  %165 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*, i64)***
  %166 = bitcast %"struct.ui::PointerProperties"* %6 to i8*
  %167 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64, i64)***
  %168 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %6, i64 0, i32 0
  %169 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %6, i64 0, i32 1
  %170 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %6, i64 0, i32 2
  %171 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %6, i64 0, i32 3
  %172 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %6, i64 0, i32 4
  %173 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %6, i64 0, i32 5
  %174 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %6, i64 0, i32 6
  %175 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %6, i64 0, i32 7
  %176 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %6, i64 0, i32 8
  %177 = bitcast float* %176 to i8*
  %178 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %180 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  %181 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 1
  %182 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr"** %181 to i64*
  br label %184

184:                                              ; preds = %237, %164
  %185 = phi i64 [ 0, %164 ], [ %238, %237 ]
  %186 = call i8* @_Znwm(i64 408) #12
  %187 = bitcast i8* %186 to %"class.ui::MotionEventGeneric"*
  %188 = bitcast i8* %186 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2ui18MotionEventGenericE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %188, align 8
  %189 = getelementptr inbounds i8, i8* %186, i64 8
  %190 = bitcast i8* %189 to i32*
  store i32 0, i32* %190, align 8
  %191 = getelementptr inbounds i8, i8* %186, i64 16
  %192 = bitcast i8* %191 to i64*
  store i64 0, i64* %192, align 8
  %193 = getelementptr inbounds i8, i8* %186, i64 24
  %194 = bitcast i8* %193 to i32*
  %195 = call i32 @_ZN2ui19GetNextTouchEventIdEv() #11
  store i32 %195, i32* %194, align 8
  %196 = getelementptr inbounds i8, i8* %186, i64 28
  %197 = bitcast i8* %196 to i32*
  store i32 -1, i32* %197, align 4
  %198 = getelementptr inbounds i8, i8* %186, i64 32
  %199 = bitcast i8* %198 to i32*
  store i32 0, i32* %199, align 8
  %200 = getelementptr inbounds i8, i8* %186, i64 40
  %201 = getelementptr inbounds i8, i8* %186, i64 340
  %202 = getelementptr inbounds i8, i8* %186, i64 344
  %203 = bitcast i8* %202 to i8**
  store i8* %200, i8** %203, align 8
  %204 = getelementptr inbounds i8, i8* %186, i64 352
  %205 = getelementptr inbounds i8, i8* %186, i64 376
  %206 = ptrtoint i8* %200 to i64
  %207 = bitcast i8* %205 to i64*
  store i64 %206, i64* %207, align 8
  %208 = getelementptr inbounds i8, i8* %186, i64 368
  %209 = bitcast i8* %208 to i64*
  %210 = bitcast i8* %204 to i64*
  %211 = getelementptr inbounds i8, i8* %186, i64 360
  %212 = bitcast i8* %211 to i64*
  store i8 1, i8* %201, align 4
  %213 = ptrtoint i8* %201 to i64
  store i64 %206, i64* %210, align 8
  store i64 %206, i64* %212, align 8
  store i64 %213, i64* %209, align 8
  %214 = getelementptr inbounds i8, i8* %186, i64 384
  call void @llvm.memset.p0i8.i64(i8* align 8 %214, i8 0, i64 24, i1 false) #11
  %215 = ptrtoint i8* %186 to i64
  store i32 3, i32* %190, align 8
  %216 = load i64 (%"class.ui::MotionEvent"*, i64)**, i64 (%"class.ui::MotionEvent"*, i64)*** %165, align 8
  %217 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*, i64)*, i64 (%"class.ui::MotionEvent"*, i64)** %216, i64 25
  %218 = load i64 (%"class.ui::MotionEvent"*, i64)*, i64 (%"class.ui::MotionEvent"*, i64)** %217, align 8
  %219 = call i64 %218(%"class.ui::MotionEvent"* %1, i64 %185) #11
  store i64 %219, i64* %192, align 8
  br i1 %76, label %220, label %240

220:                                              ; preds = %240, %184
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178)
  store i8* %186, i8** %180, align 8
  %221 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %181, align 8
  %222 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %182, align 8
  %223 = icmp ult %"class.std::__1::unique_ptr"* %221, %222
  br i1 %223, label %224, label %228

224:                                              ; preds = %220
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %179, align 8
  %225 = bitcast %"class.std::__1::unique_ptr"* %221 to i64*
  store i64 %215, i64* %225, align 8
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 1
  %227 = ptrtoint %"class.std::__1::unique_ptr"* %226 to i64
  store i64 %227, i64* %183, align 8
  br label %229

228:                                              ; preds = %220
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2ui11MotionEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"* %70, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #11
  br label %229

229:                                              ; preds = %228, %224
  %230 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %179, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %179, align 8
  %231 = icmp eq %"class.ui::MotionEvent"* %230, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %229
  %233 = bitcast %"class.ui::MotionEvent"* %230 to void (%"class.ui::MotionEvent"*)***
  %234 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %234, i64 1
  %236 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %235, align 8
  call void %236(%"class.ui::MotionEvent"* nonnull %230) #11
  br label %237

237:                                              ; preds = %232, %229
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178)
  %238 = add nuw i64 %185, 1
  %239 = icmp eq i64 %238, %162
  br i1 %239, label %257, label %184

240:                                              ; preds = %184, %240
  %241 = phi i64 [ %255, %240 ], [ 0, %184 ]
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %166) #11
  %242 = load float (%"class.ui::MotionEvent"*, i64, i64)**, float (%"class.ui::MotionEvent"*, i64, i64)*** %167, align 8
  %243 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %242, i64 27
  %244 = load float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %243, align 8
  %245 = call float %244(%"class.ui::MotionEvent"* %1, i64 %241, i64 %185) #11
  %246 = load float (%"class.ui::MotionEvent"*, i64, i64)**, float (%"class.ui::MotionEvent"*, i64, i64)*** %167, align 8
  %247 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %246, i64 28
  %248 = load float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %247, align 8
  %249 = call float %248(%"class.ui::MotionEvent"* %1, i64 %241, i64 %185) #11
  %250 = load float (%"class.ui::MotionEvent"*, i64, i64)**, float (%"class.ui::MotionEvent"*, i64, i64)*** %167, align 8
  %251 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %250, i64 26
  %252 = load float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %251, align 8
  %253 = call float %252(%"class.ui::MotionEvent"* %1, i64 %241, i64 %185) #11
  store i32 0, i32* %168, align 4
  store i32 0, i32* %169, align 4
  store float %245, float* %170, align 4
  store float %249, float* %171, align 4
  store float %245, float* %172, align 4
  store float %249, float* %173, align 4
  store float 0.000000e+00, float* %174, align 4
  store float %253, float* %175, align 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 28, i1 false) #11
  %254 = call i64 @_ZN2ui18MotionEventGeneric11PushPointerERKNS_17PointerPropertiesE(%"class.ui::MotionEventGeneric"* nonnull %187, %"struct.ui::PointerProperties"* nonnull dereferenceable(60) %6)
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %166) #11
  %255 = add nuw i64 %241, 1
  %256 = icmp eq i64 %255, %75
  br i1 %256, label %220, label %240

257:                                              ; preds = %237, %158, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(408) %"class.ui::MotionEventGeneric"* @_ZN2ui18MotionEventGenericaSERKS0_(%"class.ui::MotionEventGeneric"* returned, %"class.ui::MotionEventGeneric"* dereferenceable(408)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 1
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 3
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 4
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 5
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 6
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2
  %23 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %24 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %23, align 8
  %25 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %26 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %25, align 8
  tail call void @_ZNSt3__16vectorIN2ui17PointerPropertiesEN4base14StackAllocatorIS2_Lm5EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector"* %22, %"struct.ui::PointerProperties"* %24, %"struct.ui::PointerProperties"* %26) #11
  %27 = bitcast %"class.ui::MotionEventGeneric"* %1 to i64 (%"class.ui::MotionEventGeneric"*)***
  %28 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %28, i64 24
  %30 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %29, align 8
  %31 = tail call i64 %30(%"class.ui::MotionEventGeneric"* %1) #11
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %1, i64 0, i32 8, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 1
  %38 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %39 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 8
  %40 = bitcast %"class.std::__1::unique_ptr"** %37 to i64*
  br label %42

41:                                               ; preds = %65, %2
  ret %"class.ui::MotionEventGeneric"* %0

42:                                               ; preds = %65, %33
  %43 = phi i64 [ 0, %33 ], [ %66, %65 ]
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %34, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 %43, i32 0, i32 0, i32 0
  %46 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %45, align 8
  %47 = call %"class.ui::MotionEvent"* @_ZNK2ui11MotionEvent5CloneEv(%"class.ui::MotionEvent"* %46) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  store %"class.ui::MotionEvent"* %47, %"class.ui::MotionEvent"** %36, align 8
  %48 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %38, align 8
  %50 = icmp ult %"class.std::__1::unique_ptr"* %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %42
  %52 = ptrtoint %"class.ui::MotionEvent"* %47 to i64
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %36, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 1
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %54 to i64
  store i64 %55, i64* %40, align 8
  br label %57

56:                                               ; preds = %42
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2ui11MotionEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"* %39, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #11
  br label %57

57:                                               ; preds = %56, %51
  %58 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %36, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %36, align 8
  %59 = icmp eq %"class.ui::MotionEvent"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.ui::MotionEvent"* %58 to void (%"class.ui::MotionEvent"*)***
  %62 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %62, i64 1
  %64 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %63, align 8
  call void %64(%"class.ui::MotionEvent"* nonnull %58) #11
  br label %65

65:                                               ; preds = %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %66 = add nuw i64 %43, 1
  %67 = icmp eq i64 %66, %31
  br i1 %67, label %41, label %42
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui18MotionEventGeneric10PopPointerEv(%"class.ui::MotionEventGeneric"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 1
  %3 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %3, i64 -1
  store %"struct.ui::PointerProperties"* %4, %"struct.ui::PointerProperties"** %2, align 8
  ret void
}

declare i32 @_ZNK2ui11MotionEvent17GetClassificationEv(%"class.ui::MotionEvent"*) unnamed_addr #3

declare i32 @_ZNK2ui11MotionEvent17GetSourceDeviceIdEm(%"class.ui::MotionEvent"*, i64) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui17PointerPropertiesEN4base14StackAllocatorIS2_Lm5EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector"*, %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.ui::PointerProperties"* %1 to i64
  %5 = ptrtoint %"struct.ui::PointerProperties"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 60
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.ui::PointerProperties"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 60
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.ui::PointerProperties"*
  br i1 %15, label %56, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.ui::PointerProperties"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 60
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %1, i64 %22
  %25 = select i1 %23, %"struct.ui::PointerProperties"* %24, %"struct.ui::PointerProperties"* %2
  %26 = ptrtoint %"struct.ui::PointerProperties"* %25 to i64
  %27 = sub i64 %26, %4
  %28 = sdiv exact i64 %27, 60
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.ui::PointerProperties"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %54

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"struct.ui::PointerProperties"* %25, %2
  br i1 %36, label %52, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to i8*
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ %35, %37 ], [ %47, %39 ]
  %41 = phi i8* [ %38, %37 ], [ %49, %39 ]
  %42 = phi %"struct.ui::PointerProperties"* [ %24, %37 ], [ %44, %39 ]
  %43 = bitcast %"struct.ui::PointerProperties"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %43, i64 60, i1 false) #11
  %44 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %42, i64 1
  %45 = inttoptr i64 %40 to %"struct.ui::PointerProperties"*
  %46 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %45, i64 1
  %47 = ptrtoint %"struct.ui::PointerProperties"* %46 to i64
  %48 = icmp eq %"struct.ui::PointerProperties"* %44, %2
  %49 = bitcast %"struct.ui::PointerProperties"* %46 to i8*
  br i1 %48, label %50, label %39

50:                                               ; preds = %39
  %51 = ptrtoint %"struct.ui::PointerProperties"* %46 to i64
  br label %52

52:                                               ; preds = %50, %34
  %53 = phi i64 [ %35, %34 ], [ %51, %50 ]
  store i64 %53, i64* %19, align 8
  br label %125

54:                                               ; preds = %33
  %55 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %16, i64 %28
  store %"struct.ui::PointerProperties"* %55, %"struct.ui::PointerProperties"** %18, align 8
  br label %125

56:                                               ; preds = %3
  %57 = icmp eq i64 %12, 0
  br i1 %57, label %73, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %60 = bitcast %"struct.ui::PointerProperties"** %59 to i64*
  store i64 %12, i64* %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %62 = load %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"*, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %61, align 8
  %63 = icmp ne %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %62, null
  %64 = bitcast %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %62 to %"struct.ui::PointerProperties"*
  %65 = icmp eq %"struct.ui::PointerProperties"* %16, %64
  %66 = and i1 %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %62, i64 0, i32 1
  store i8 0, i8* %68, align 4
  br label %71

69:                                               ; preds = %58
  %70 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %69, %67
  %72 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #11
  br label %73

73:                                               ; preds = %56, %71
  %74 = phi i64 [ %10, %56 ], [ 0, %71 ]
  %75 = icmp ugt i64 %7, 307445734561825860
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %77) #13
  unreachable

78:                                               ; preds = %73
  %79 = sdiv exact i64 %74, 60
  %80 = icmp ult i64 %79, 153722867280912930
  br i1 %80, label %81, label %85

81:                                               ; preds = %78
  %82 = shl nsw i64 %79, 1
  %83 = icmp ult i64 %82, %7
  %84 = select i1 %83, i64 %7, i64 %82
  br label %85

85:                                               ; preds = %81, %78
  %86 = phi i64 [ %84, %81 ], [ 307445734561825860, %78 ]
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %88 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %87, i64 0, i32 0
  %89 = load %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"*, %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"** %88, align 8
  %90 = icmp eq %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %89, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* %89, i64 0, i32 1
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = icmp eq i8 %93, 0
  %95 = icmp ult i64 %86, 6
  %96 = and i1 %95, %94
  br i1 %96, label %97, label %101

97:                                               ; preds = %91
  store i8 1, i8* %92, align 4
  %98 = bitcast %"class.base::StackAllocator"* %87 to %"struct.ui::PointerProperties"**
  %99 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %98, align 8
  %100 = bitcast %"struct.ui::PointerProperties"* %99 to i8*
  br label %105

101:                                              ; preds = %91, %85
  %102 = mul i64 %86, 60
  %103 = tail call i8* @_Znwm(i64 %102) #12
  %104 = bitcast i8* %103 to %"struct.ui::PointerProperties"*
  br label %105

105:                                              ; preds = %97, %101
  %106 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %107 = phi %"struct.ui::PointerProperties"* [ %99, %97 ], [ %104, %101 ]
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store %"struct.ui::PointerProperties"* %107, %"struct.ui::PointerProperties"** %108, align 8
  %109 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %106, i8** %109, align 8
  %110 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %107, i64 %86
  store %"struct.ui::PointerProperties"* %110, %"struct.ui::PointerProperties"** %8, align 8
  %111 = bitcast %"struct.ui::PointerProperties"** %108 to i64*
  %112 = icmp eq %"struct.ui::PointerProperties"* %1, %2
  br i1 %112, label %122, label %113

113:                                              ; preds = %105, %113
  %114 = phi %"struct.ui::PointerProperties"* [ %119, %113 ], [ %107, %105 ]
  %115 = phi i8* [ %121, %113 ], [ %106, %105 ]
  %116 = phi %"struct.ui::PointerProperties"* [ %118, %113 ], [ %1, %105 ]
  %117 = bitcast %"struct.ui::PointerProperties"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %117, i64 60, i1 false) #11
  %118 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %116, i64 1
  %119 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %114, i64 1
  %120 = icmp eq %"struct.ui::PointerProperties"* %118, %2
  %121 = bitcast %"struct.ui::PointerProperties"* %119 to i8*
  br i1 %120, label %122, label %113

122:                                              ; preds = %113, %105
  %123 = phi %"struct.ui::PointerProperties"* [ %107, %105 ], [ %119, %113 ]
  %124 = ptrtoint %"struct.ui::PointerProperties"* %123 to i64
  store i64 %124, i64* %111, align 8
  br label %125

125:                                              ; preds = %52, %54, %122
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2ui11MotionEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.ui::MotionEvent"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !3

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %142, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %142, align 8
  %144 = icmp eq %"class.ui::MotionEvent"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.ui::MotionEvent"* %143 to void (%"class.ui::MotionEvent"*)***
  %147 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %147, i64 1
  %149 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %148, align 8
  tail call void %149(%"class.ui::MotionEvent"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
