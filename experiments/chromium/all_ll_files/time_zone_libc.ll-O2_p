; ModuleID = '../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc'
source_filename = "../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.absl::time_internal::cctz::detail::civil_time" = type { %"struct.absl::time_internal::cctz::detail::fields" }
%"struct.absl::time_internal::cctz::detail::fields" = type <{ i64, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.absl::time_internal::cctz::TimeZoneLibC" = type <{ %"class.absl::time_internal::cctz::TimeZoneIf", i8, [7 x i8] }>
%"class.absl::time_internal::cctz::TimeZoneIf" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.absl::time_internal::cctz::time_zone::absolute_lookup" = type { %"class.absl::time_internal::cctz::detail::civil_time", i32, i8, i8* }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%"struct.absl::time_internal::cctz::time_zone::civil_lookup" = type { i32, %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point" }
%"struct.absl::time_internal::cctz::time_zone::civil_transition" = type { %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time" }

$_ZN4absl13time_internal4cctz12TimeZoneLibCD0Ev = comdat any

$_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll = comdat any

$_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa = comdat any

$_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa = comdat any

@_ZTVN4absl13time_internal4cctz12TimeZoneLibCE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.absl::time_internal::cctz::TimeZoneIf"*)* @_ZN4absl13time_internal4cctz10TimeZoneIfD2Ev to i8*), i8* bitcast (void (%"class.absl::time_internal::cctz::TimeZoneLibC"*)* @_ZN4absl13time_internal4cctz12TimeZoneLibCD0Ev to i8*), i8* bitcast (void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneLibC"*, %"class.std::__1::chrono::time_point"*)* @_ZNK4absl13time_internal4cctz12TimeZoneLibC9BreakTimeERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE to i8*), i8* bitcast (void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneLibC"*, %"class.absl::time_internal::cctz::detail::civil_time"*)* @_ZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEE to i8*), i8* bitcast (i1 (%"class.absl::time_internal::cctz::TimeZoneLibC"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)* @_ZNK4absl13time_internal4cctz12TimeZoneLibC14NextTransitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS1_9time_zone16civil_transitionE to i8*), i8* bitcast (i1 (%"class.absl::time_internal::cctz::TimeZoneLibC"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)* @_ZNK4absl13time_internal4cctz12TimeZoneLibC14PrevTransitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS1_9time_zone16civil_transitionE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneLibC"*)* @_ZNK4absl13time_internal4cctz12TimeZoneLibC7VersionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneLibC"*)* @_ZNK4absl13time_internal4cctz12TimeZoneLibC11DescriptionEv to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"-00\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"UTC\00", align 1
@_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs = internal global %"class.absl::time_internal::cctz::detail::civil_time" zeroinitializer, align 8
@_ZGVZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs = internal global i64 0, align 8
@_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs = internal global %"class.absl::time_internal::cctz::detail::civil_time" zeroinitializer, align 8
@_ZGVZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs = internal global i64 0, align 8
@_ZZN4absl13time_internal4cctz6detail4impl14days_per_monthElaE16k_days_per_month = internal unnamed_addr constant [13 x i32] [i32 -1, i32 31, i32 28, i32 31, i32 30, i32 31, i32 30, i32 31, i32 31, i32 30, i32 31, i32 30, i32 31], align 16

@_ZN4absl13time_internal4cctz12TimeZoneLibCC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.absl::time_internal::cctz::TimeZoneLibC"*, %"class.std::__1::basic_string"*), void (%"class.absl::time_internal::cctz::TimeZoneLibC"*, %"class.std::__1::basic_string"*)* @_ZN4absl13time_internal4cctz12TimeZoneLibCC2ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13time_internal4cctz12TimeZoneLibCC2ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::time_internal::cctz::TimeZoneLibC"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneLibC", %"class.absl::time_internal::cctz::TimeZoneLibC"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4absl13time_internal4cctz12TimeZoneLibCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneLibC", %"class.absl::time_internal::cctz::TimeZoneLibC"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, 9
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9) #9
  %16 = icmp eq i32 %15, 0
  %17 = zext i1 %16 to i8
  br label %18

18:                                               ; preds = %2, %14
  %19 = phi i8 [ %17, %14 ], [ 0, %2 ]
  store i8 %19, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneLibC9BreakTimeERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE(%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* noalias nocapture sret, %"class.absl::time_internal::cctz::TimeZoneLibC"* nocapture readonly, %"class.std::__1::chrono::time_point"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm, align 8
  %6 = bitcast %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  %7 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 1970, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 1
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 3
  store i8 0, i8* %10, align 2
  %11 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 4
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 2
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 3
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %15, align 8
  %16 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %17 = sdiv i64 %16, 1000000
  %18 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %2, i64 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %19, %17
  %21 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  store i64 %20, i64* %4, align 8
  %22 = bitcast %struct.tm* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 56, i1 false)
  %23 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneLibC", %"class.absl::time_internal::cctz::TimeZoneLibC"* %1, i64 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %3
  %27 = call %struct.tm* @localtime_r(i64* nonnull %4, %struct.tm* nonnull %5) #9
  br label %30

28:                                               ; preds = %3
  %29 = call %struct.tm* @gmtime_r(i64* nonnull %4, %struct.tm* nonnull %5) #9
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi %struct.tm* [ %27, %26 ], [ %29, %28 ]
  %32 = icmp eq %struct.tm* %31, null
  br i1 %32, label %33, label %43

33:                                               ; preds = %30
  %34 = icmp slt i64 %20, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %33
  %36 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64 9223372036854775807, i8 signext 12, i64 31, i64 0, i8 signext 23, i8 signext 59, i8 signext 59) #9
  %37 = extractvalue { i64, i64 } %36, 0
  %38 = extractvalue { i64, i64 } %36, 1
  br label %39

39:                                               ; preds = %33, %35
  %40 = phi i64 [ %38, %35 ], [ 257, %33 ]
  %41 = phi i64 [ %37, %35 ], [ -9223372036854775808, %33 ]
  store i64 %41, i64* %7, align 8
  %42 = bitcast i8* %8 to i64*
  store i64 %40, i64* %42, align 8
  br label %82

43:                                               ; preds = %30
  %44 = getelementptr inbounds %struct.tm, %struct.tm* %31, i64 0, i32 5
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = add nsw i64 %46, 1900
  %48 = getelementptr inbounds %struct.tm, %struct.tm* %31, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = add nsw i32 %49, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %struct.tm, %struct.tm* %31, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.tm, %struct.tm* %31, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.tm, %struct.tm* %31, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.tm, %struct.tm* %31, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %47, i64 %51, i64 %54, i64 %57, i64 %60, i64 %63) #9
  %65 = extractvalue { i64, i64 } %64, 0
  %66 = extractvalue { i64, i64 } %64, 1
  store i64 %65, i64* %7, align 8
  %67 = bitcast i8* %8 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %struct.tm, %struct.tm* %31, i64 0, i32 9
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  store i32 %70, i32* %13, align 8
  %71 = load i8, i8* %23, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %43
  %74 = getelementptr inbounds %struct.tm, %struct.tm* %31, i64 0, i32 10
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %43, %73
  %77 = phi i8* [ %75, %73 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), %43 ]
  store i8* %77, i8** %15, align 8
  %78 = getelementptr inbounds %struct.tm, %struct.tm* %31, i64 0, i32 8
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, 0
  %81 = zext i1 %80 to i8
  store i8 %81, i8* %14, align 4
  br label %82

82:                                               ; preds = %39, %76
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEE(%"struct.absl::time_internal::cctz::time_zone::civil_lookup"* noalias sret, %"class.absl::time_internal::cctz::TimeZoneLibC"* nocapture readonly, %"class.absl::time_internal::cctz::detail::civil_time"* readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneLibC", %"class.absl::time_internal::cctz::TimeZoneLibC"* %1, i64 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %160

14:                                               ; preds = %3
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %30, !prof !3

17:                                               ; preds = %14
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs) #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %30, label %20

20:                                               ; preds = %17
  %21 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %22 = sdiv i64 %21, 1000000
  %23 = sub nsw i64 -9223372036854775808, %22
  %24 = sdiv i64 %23, 60
  %25 = srem i64 %23, 60
  %26 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 %24, i64 %25) #9
  %27 = extractvalue { i64, i64 } %26, 0
  store i64 %27, i64* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs, i64 0, i32 0, i32 0), align 8
  %28 = extractvalue { i64, i64 } %26, 1
  store i64 %28, i64* bitcast (i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs, i64 0, i32 0, i32 1) to i64*), align 8
  %29 = tail call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs) #9
  br label %30

30:                                               ; preds = %17, %20, %14
  %31 = load atomic i8, i8* bitcast (i64* @_ZGVZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs to i8*) acquire, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %46, !prof !3

33:                                               ; preds = %30
  %34 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %33
  %37 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %38 = sdiv i64 %37, 1000000
  %39 = sub nsw i64 9223372036854775807, %38
  %40 = sdiv i64 %39, 60
  %41 = srem i64 %39, 60
  %42 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 %40, i64 %41) #9
  %43 = extractvalue { i64, i64 } %42, 0
  store i64 %43, i64* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs, i64 0, i32 0, i32 0), align 8
  %44 = extractvalue { i64, i64 } %42, 1
  store i64 %44, i64* bitcast (i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs, i64 0, i32 0, i32 1) to i64*), align 8
  %45 = tail call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs) #9
  br label %46

46:                                               ; preds = %33, %36, %30
  %47 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = load i64, i64* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs, i64 0, i32 0, i32 0), align 8
  %50 = icmp slt i64 %48, %49
  br i1 %50, label %154, label %51

51:                                               ; preds = %46
  %52 = icmp eq i64 %48, %49
  br i1 %52, label %53, label %86

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %55 = load i8, i8* %54, align 8
  %56 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs, i64 0, i32 0, i32 1), align 8
  %57 = icmp slt i8 %55, %56
  br i1 %57, label %154, label %58

58:                                               ; preds = %53
  %59 = icmp eq i8 %55, %56
  br i1 %59, label %60, label %86

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs, i64 0, i32 0, i32 2), align 1
  %64 = icmp slt i8 %62, %63
  br i1 %64, label %154, label %65

65:                                               ; preds = %60
  %66 = icmp eq i8 %62, %63
  br i1 %66, label %67, label %86

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %69 = load i8, i8* %68, align 2
  %70 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs, i64 0, i32 0, i32 3), align 2
  %71 = icmp slt i8 %69, %70
  br i1 %71, label %154, label %72

72:                                               ; preds = %67
  %73 = icmp eq i8 %69, %70
  br i1 %73, label %74, label %86

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %76 = load i8, i8* %75, align 1
  %77 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs, i64 0, i32 0, i32 4), align 1
  %78 = icmp slt i8 %76, %77
  br i1 %78, label %154, label %79

79:                                               ; preds = %74
  %80 = icmp eq i8 %76, %77
  br i1 %80, label %81, label %86

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %83 = load i8, i8* %82, align 4
  %84 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9min_tp_cs, i64 0, i32 0, i32 5), align 4
  %85 = icmp slt i8 %83, %84
  br i1 %85, label %154, label %86

86:                                               ; preds = %79, %72, %65, %58, %51, %81
  %87 = load i64, i64* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs, i64 0, i32 0, i32 0), align 8
  %88 = icmp slt i64 %87, %48
  br i1 %88, label %154, label %89

89:                                               ; preds = %86
  %90 = icmp eq i64 %87, %48
  br i1 %90, label %91, label %124

91:                                               ; preds = %89
  %92 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs, i64 0, i32 0, i32 1), align 8
  %93 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %94 = load i8, i8* %93, align 8
  %95 = icmp slt i8 %92, %94
  br i1 %95, label %154, label %96

96:                                               ; preds = %91
  %97 = icmp eq i8 %92, %94
  br i1 %97, label %98, label %124

98:                                               ; preds = %96
  %99 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs, i64 0, i32 0, i32 2), align 1
  %100 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %99, %101
  br i1 %102, label %154, label %103

103:                                              ; preds = %98
  %104 = icmp eq i8 %99, %101
  br i1 %104, label %105, label %124

105:                                              ; preds = %103
  %106 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs, i64 0, i32 0, i32 3), align 2
  %107 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %108 = load i8, i8* %107, align 2
  %109 = icmp slt i8 %106, %108
  br i1 %109, label %154, label %110

110:                                              ; preds = %105
  %111 = icmp eq i8 %106, %108
  br i1 %111, label %112, label %124

112:                                              ; preds = %110
  %113 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs, i64 0, i32 0, i32 4), align 1
  %114 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %113, %115
  br i1 %116, label %154, label %117

117:                                              ; preds = %112
  %118 = icmp eq i8 %113, %115
  br i1 %118, label %119, label %124

119:                                              ; preds = %117
  %120 = load i8, i8* getelementptr inbounds (%"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* @_ZZNK4absl13time_internal4cctz12TimeZoneLibC8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEEE9max_tp_cs, i64 0, i32 0, i32 5), align 4
  %121 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %122 = load i8, i8* %121, align 4
  %123 = icmp slt i8 %120, %122
  br i1 %123, label %154, label %124

124:                                              ; preds = %117, %110, %103, %96, %89, %119
  %125 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %126 = bitcast i8* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = lshr i64 %127, 32
  %129 = lshr i64 %127, 16
  %130 = trunc i64 %127 to i8
  %131 = lshr i64 %127, 8
  %132 = trunc i64 %131 to i8
  %133 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %48, i8 signext %130, i8 signext %132, i64 1970, i8 signext 1, i8 signext 1) #9
  %134 = shl i64 %129, 24
  %135 = trunc i64 %134 to i32
  %136 = ashr exact i32 %135, 24
  %137 = sext i32 %136 to i64
  %138 = mul i64 %133, 24
  %139 = add i64 %138, %137
  %140 = trunc i64 %127 to i32
  %141 = ashr i32 %140, 24
  %142 = sext i32 %141 to i64
  %143 = mul i64 %139, 60
  %144 = add i64 %143, %142
  %145 = shl nuw nsw i64 %128, 24
  %146 = trunc i64 %145 to i32
  %147 = ashr exact i32 %146, 24
  %148 = sext i32 %147 to i64
  %149 = mul i64 %144, 60
  %150 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %151 = sdiv i64 %150, 1000000
  %152 = add nsw i64 %151, %148
  %153 = add i64 %152, %149
  br label %154

154:                                              ; preds = %112, %105, %98, %91, %86, %74, %67, %60, %53, %46, %119, %81, %124
  %155 = phi i64 [ %153, %124 ], [ -9223372036854775808, %81 ], [ 9223372036854775807, %119 ], [ -9223372036854775808, %46 ], [ -9223372036854775808, %53 ], [ -9223372036854775808, %60 ], [ -9223372036854775808, %67 ], [ -9223372036854775808, %74 ], [ 9223372036854775807, %86 ], [ 9223372036854775807, %91 ], [ 9223372036854775807, %98 ], [ 9223372036854775807, %105 ], [ 9223372036854775807, %112 ]
  %156 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 0
  store i32 0, i32* %156, align 8
  %157 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %155, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %155, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %155, i64* %159, align 8
  br label %317

160:                                              ; preds = %3
  %161 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = icmp slt i64 %162, 0
  br i1 %163, label %164, label %171

164:                                              ; preds = %160
  %165 = icmp slt i64 %162, -2147481748
  br i1 %165, label %166, label %178

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 0
  store i32 0, i32* %167, align 8
  %168 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %169 = bitcast i64* %168 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %169, align 8
  %170 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 -9223372036854775808, i64* %170, align 8
  br label %317

171:                                              ; preds = %160
  %172 = icmp sgt i64 %162, 2147485547
  br i1 %172, label %173, label %178

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 0
  store i32 0, i32* %174, align 8
  %175 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %176 = bitcast i64* %175 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %176, align 8
  %177 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 9223372036854775807, i64* %177, align 8
  br label %317

178:                                              ; preds = %171, %164
  %179 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #9
  store i64 -6148914691236517206, i64* %7, align 8
  %180 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #9
  store i64 -6148914691236517206, i64* %8, align 8
  %181 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %181) #9
  store i32 -1431655766, i32* %9, align 4
  %182 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %182) #9
  store i32 -1431655766, i32* %10, align 4
  %183 = call fastcc zeroext i1 @_ZN4absl13time_internal4cctz12_GLOBAL__N_19make_timeERKNS1_6detail10civil_timeINS3_10second_tagEEEiPlPi(%"class.absl::time_internal::cctz::detail::civil_time"* dereferenceable(16) %2, i32 0, i64* nonnull %7, i32* nonnull %9)
  br i1 %183, label %184, label %274

184:                                              ; preds = %178
  %185 = call fastcc zeroext i1 @_ZN4absl13time_internal4cctz12_GLOBAL__N_19make_timeERKNS1_6detail10civil_timeINS3_10second_tagEEEiPlPi(%"class.absl::time_internal::cctz::detail::civil_time"* dereferenceable(16) %2, i32 1, i64* nonnull %8, i32* nonnull %10)
  br i1 %185, label %186, label %274

186:                                              ; preds = %184
  %187 = load i64, i64* %7, align 8
  %188 = load i64, i64* %8, align 8
  %189 = icmp eq i64 %187, %188
  br i1 %189, label %190, label %194

190:                                              ; preds = %186
  %191 = call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %192 = sdiv i64 %191, 1000000
  %193 = add nsw i64 %192, %187
  br label %308

194:                                              ; preds = %186
  %195 = icmp sgt i64 %187, %188
  br i1 %195, label %198, label %196

196:                                              ; preds = %194
  %197 = load i32, i32* %10, align 4
  br label %201

198:                                              ; preds = %194
  store i64 %188, i64* %7, align 8
  store i64 %187, i64* %8, align 8
  %199 = load i32, i32* %9, align 4
  %200 = load i32, i32* %10, align 4
  store i32 %200, i32* %9, align 4
  store i32 %199, i32* %10, align 4
  br label %201

201:                                              ; preds = %196, %198
  %202 = phi i32 [ %199, %198 ], [ %197, %196 ]
  %203 = phi i64 [ %187, %198 ], [ %188, %196 ]
  %204 = phi i64 [ %188, %198 ], [ %187, %196 ]
  %205 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205)
  store i64 %204, i64* %4, align 8
  %206 = bitcast %struct.tm* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %206) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 -86, i64 56, i1 false) #9
  %207 = add nsw i64 %204, 1
  %208 = icmp eq i64 %207, %203
  br i1 %208, label %249, label %209

209:                                              ; preds = %201
  %210 = bitcast i64* %6 to i8*
  %211 = sext i32 %202 to i64
  br label %212

212:                                              ; preds = %244, %209
  %213 = phi i64 [ %204, %209 ], [ %245, %244 ]
  %214 = phi i64 [ %203, %209 ], [ %246, %244 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #9
  %215 = sub nsw i64 %214, %213
  %216 = sdiv i64 %215, 2
  %217 = add nsw i64 %216, %213
  store i64 %217, i64* %6, align 8
  %218 = call %struct.tm* @localtime_r(i64* nonnull %6, %struct.tm* nonnull %5) #9
  %219 = icmp eq %struct.tm* %218, null
  br i1 %219, label %220, label %223

220:                                              ; preds = %212
  %221 = add nsw i64 %213, 1
  store i64 %221, i64* %4, align 8
  %222 = icmp eq i64 %221, %214
  br i1 %222, label %242, label %229

223:                                              ; preds = %212
  %224 = getelementptr inbounds %struct.tm, %struct.tm* %218, i64 0, i32 9
  %225 = load i64, i64* %224, align 8
  %226 = icmp eq i64 %225, %211
  %227 = load i64, i64* %6, align 8
  br i1 %226, label %244, label %228

228:                                              ; preds = %223
  store i64 %227, i64* %4, align 8
  br label %244

229:                                              ; preds = %220, %238
  %230 = call %struct.tm* @localtime_r(i64* nonnull %4, %struct.tm* nonnull %5) #9
  %231 = icmp eq %struct.tm* %230, null
  br i1 %231, label %238, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %struct.tm, %struct.tm* %230, i64 0, i32 9
  %234 = load i64, i64* %233, align 8
  %235 = icmp eq i64 %234, %211
  br i1 %235, label %236, label %238

236:                                              ; preds = %232
  %237 = load i64, i64* %4, align 8
  br label %242

238:                                              ; preds = %232, %229
  %239 = load i64, i64* %4, align 8
  %240 = add nsw i64 %239, 1
  store i64 %240, i64* %4, align 8
  %241 = icmp eq i64 %240, %214
  br i1 %241, label %242, label %229

242:                                              ; preds = %238, %236, %220
  %243 = phi i64 [ %214, %220 ], [ %237, %236 ], [ %214, %238 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #9
  br label %249

244:                                              ; preds = %228, %223
  %245 = phi i64 [ %227, %228 ], [ %213, %223 ]
  %246 = phi i64 [ %214, %228 ], [ %227, %223 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #9
  %247 = add nsw i64 %245, 1
  %248 = icmp eq i64 %247, %246
  br i1 %248, label %249, label %212

249:                                              ; preds = %244, %201, %242
  %250 = phi i64 [ %243, %242 ], [ %203, %201 ], [ %246, %244 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %206) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205)
  %251 = call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %252 = sdiv i64 %251, 1000000
  %253 = add nsw i64 %252, %250
  %254 = load i32, i32* %9, align 4
  %255 = icmp slt i32 %254, %202
  br i1 %255, label %256, label %265

256:                                              ; preds = %249
  %257 = load i64, i64* %8, align 8
  %258 = call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %259 = sdiv i64 %258, 1000000
  %260 = add nsw i64 %259, %257
  %261 = load i64, i64* %7, align 8
  %262 = call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %263 = sdiv i64 %262, 1000000
  %264 = add nsw i64 %263, %261
  br label %308

265:                                              ; preds = %249
  %266 = load i64, i64* %7, align 8
  %267 = call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %268 = sdiv i64 %267, 1000000
  %269 = add nsw i64 %268, %266
  %270 = load i64, i64* %8, align 8
  %271 = call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #9
  %272 = sdiv i64 %271, 1000000
  %273 = add nsw i64 %272, %270
  br label %308

274:                                              ; preds = %184, %178
  %275 = load i64, i64* %161, align 8
  %276 = icmp slt i64 %275, 1970
  br i1 %276, label %308, label %277

277:                                              ; preds = %274
  %278 = icmp eq i64 %275, 1970
  br i1 %278, label %279, label %307

279:                                              ; preds = %277
  %280 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %281 = load i8, i8* %280, align 8
  %282 = icmp slt i8 %281, 1
  br i1 %282, label %308, label %283

283:                                              ; preds = %279
  %284 = icmp eq i8 %281, 1
  br i1 %284, label %285, label %307

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %287 = load i8, i8* %286, align 1
  %288 = icmp slt i8 %287, 1
  br i1 %288, label %308, label %289

289:                                              ; preds = %285
  %290 = icmp eq i8 %287, 1
  br i1 %290, label %291, label %307

291:                                              ; preds = %289
  %292 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %293 = load i8, i8* %292, align 2
  %294 = icmp slt i8 %293, 0
  br i1 %294, label %308, label %295

295:                                              ; preds = %291
  %296 = icmp eq i8 %293, 0
  br i1 %296, label %297, label %307

297:                                              ; preds = %295
  %298 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %299 = load i8, i8* %298, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %308, label %301

301:                                              ; preds = %297
  %302 = icmp eq i8 %299, 0
  br i1 %302, label %303, label %307

303:                                              ; preds = %301
  %304 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %305 = load i8, i8* %304, align 4
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %308, label %307

307:                                              ; preds = %301, %295, %289, %283, %277, %303
  br label %308

308:                                              ; preds = %307, %303, %274, %279, %285, %291, %297, %256, %265, %190
  %309 = phi i32 [ 1, %256 ], [ 2, %265 ], [ 0, %190 ], [ 0, %297 ], [ 0, %291 ], [ 0, %285 ], [ 0, %279 ], [ 0, %274 ], [ 0, %303 ], [ 0, %307 ]
  %310 = phi i64 [ %260, %256 ], [ %269, %265 ], [ %193, %190 ], [ -9223372036854775808, %297 ], [ -9223372036854775808, %291 ], [ -9223372036854775808, %285 ], [ -9223372036854775808, %279 ], [ -9223372036854775808, %274 ], [ -9223372036854775808, %303 ], [ 9223372036854775807, %307 ]
  %311 = phi i64 [ %253, %256 ], [ %253, %265 ], [ %193, %190 ], [ -9223372036854775808, %297 ], [ -9223372036854775808, %291 ], [ -9223372036854775808, %285 ], [ -9223372036854775808, %279 ], [ -9223372036854775808, %274 ], [ -9223372036854775808, %303 ], [ 9223372036854775807, %307 ]
  %312 = phi i64 [ %264, %256 ], [ %273, %265 ], [ %193, %190 ], [ -9223372036854775808, %297 ], [ -9223372036854775808, %291 ], [ -9223372036854775808, %285 ], [ -9223372036854775808, %279 ], [ -9223372036854775808, %274 ], [ -9223372036854775808, %303 ], [ 9223372036854775807, %307 ]
  %313 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 0
  store i32 %309, i32* %313, align 8
  %314 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %310, i64* %314, align 8
  %315 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %311, i64* %315, align 8
  %316 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %312, i64* %316, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %182) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %181) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #9
  br label %317

317:                                              ; preds = %308, %173, %166, %154
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4absl13time_internal4cctz12_GLOBAL__N_19make_timeERKNS1_6detail10civil_timeINS3_10second_tagEEEiPlPi(%"class.absl::time_internal::cctz::detail::civil_time"* nocapture readonly dereferenceable(16), i32, i64*, i32* nocapture) unnamed_addr #0 {
  %5 = alloca %struct.tm, align 16
  %6 = alloca %struct.tm, align 8
  %7 = bitcast %struct.tm* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #9
  %8 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 6
  %9 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %0, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = add i32 %12, -1900
  %14 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 5
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %0, i64 0, i32 0, i32 1
  %16 = load i8, i8* %15, align 8
  %17 = sext i8 %16 to i32
  %18 = add nsw i32 %17, -1
  %19 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 4
  store i32 %18, i32* %19, align 16
  %20 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %0, i64 0, i32 0, i32 2
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 3
  %22 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 2
  %23 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 1
  %24 = bitcast i8* %20 to <4 x i8>*
  %25 = load <4 x i8>, <4 x i8>* %24, align 1
  %26 = shufflevector <4 x i8> %25, <4 x i8> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %27 = sext <4 x i8> %26 to <4 x i32>
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 0
  %29 = bitcast %struct.tm* %5 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %29, align 16
  %30 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 8
  store i32 %1, i32* %30, align 16
  %31 = call i64 @mktime(%struct.tm* nonnull %5) #9
  store i64 %31, i64* %2, align 8
  %32 = icmp eq i64 %31, -1
  br i1 %32, label %33, label %69

33:                                               ; preds = %4
  %34 = bitcast %struct.tm* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %34) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 56, i1 false)
  %35 = call %struct.tm* @localtime_r(i64* %2, %struct.tm* nonnull %6) #9
  %36 = icmp eq %struct.tm* %35, null
  br i1 %36, label %67, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.tm, %struct.tm* %35, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %14, align 4
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %42, label %67

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.tm, %struct.tm* %35, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = load i32, i32* %19, align 16
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %67

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.tm, %struct.tm* %35, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = load i32, i32* %21, align 4
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %52, label %67

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.tm, %struct.tm* %35, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = load i32, i32* %22, align 8
  %56 = icmp eq i32 %54, %55
  br i1 %56, label %57, label %67

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.tm, %struct.tm* %35, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %23, align 4
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.tm, %struct.tm* %35, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = load i32, i32* %28, align 16
  %66 = icmp eq i32 %64, %65
  br i1 %66, label %68, label %67

67:                                               ; preds = %33, %37, %42, %47, %52, %57, %62
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %34) #9
  br label %73

68:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %34) #9
  br label %69

69:                                               ; preds = %68, %4
  %70 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 9
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* %3, align 4
  br label %73

73:                                               ; preds = %67, %69
  %74 = phi i1 [ true, %69 ], [ false, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #9
  ret i1 %74
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK4absl13time_internal4cctz12TimeZoneLibC14NextTransitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS1_9time_zone16civil_transitionE(%"class.absl::time_internal::cctz::TimeZoneLibC"* nocapture readnone, %"class.std::__1::chrono::time_point"* nocapture readnone dereferenceable(8), %"struct.absl::time_internal::cctz::time_zone::civil_transition"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK4absl13time_internal4cctz12TimeZoneLibC14PrevTransitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS1_9time_zone16civil_transitionE(%"class.absl::time_internal::cctz::TimeZoneLibC"* nocapture readnone, %"class.std::__1::chrono::time_point"* nocapture readnone dereferenceable(8), %"struct.absl::time_internal::cctz::time_zone::civil_transition"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneLibC7VersionEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.absl::time_internal::cctz::TimeZoneLibC"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneLibC11DescriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.absl::time_internal::cctz::TimeZoneLibC"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneLibC", %"class.absl::time_internal::cctz::TimeZoneLibC"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)
  %7 = select i1 %5, i64 3, i64 9
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #9
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4absl13time_internal4cctz10TimeZoneIfD2Ev(%"class.absl::time_internal::cctz::TimeZoneIf"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl13time_internal4cctz12TimeZoneLibCD0Ev(%"class.absl::time_internal::cctz::TimeZoneLibC"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneLibC", %"class.absl::time_internal::cctz::TimeZoneLibC"* %0, i64 0, i32 0
  tail call void @_ZN4absl13time_internal4cctz10TimeZoneIfD2Ev(%"class.absl::time_internal::cctz::TimeZoneIf"* %2) #9
  %3 = bitcast %"class.absl::time_internal::cctz::TimeZoneLibC"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind
declare i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare %struct.tm* @localtime_r(i64*, %struct.tm*) local_unnamed_addr #4

; Function Attrs: nounwind
declare %struct.tm* @gmtime_r(i64*, %struct.tm*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat {
  %7 = icmp ult i64 %5, 60
  br i1 %7, label %8, label %118

8:                                                ; preds = %6
  %9 = trunc i64 %5 to i8
  %10 = icmp ult i64 %4, 60
  br i1 %10, label %11, label %73

11:                                               ; preds = %8
  %12 = trunc i64 %4 to i8
  %13 = icmp ult i64 %3, 24
  br i1 %13, label %14, label %43

14:                                               ; preds = %11
  %15 = trunc i64 %3 to i8
  %16 = add i64 %2, -1
  %17 = icmp ult i64 %16, 28
  %18 = add i64 %1, -1
  %19 = icmp ult i64 %18, 12
  %20 = and i1 %19, %17
  br i1 %20, label %178, label %21

21:                                               ; preds = %14
  %22 = icmp eq i64 %1, 12
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = sdiv i64 %1, 12
  %25 = add nsw i64 %24, %0
  %26 = srem i64 %1, 12
  %27 = icmp slt i64 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = add nsw i64 %25, -1
  %30 = add nsw i64 %26, 12
  br label %31

31:                                               ; preds = %21, %23, %28
  %32 = phi i64 [ %30, %28 ], [ %26, %23 ], [ 12, %21 ]
  %33 = phi i64 [ %29, %28 ], [ %25, %23 ], [ %0, %21 ]
  %34 = trunc i64 %32 to i8
  %35 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64 %33, i8 signext %34, i64 %2, i64 0, i8 signext %15, i8 signext %12, i8 signext %9) #9
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = extractvalue { i64, i64 } %35, 1
  %38 = lshr i64 %37, 8
  %39 = lshr i64 %37, 16
  %40 = lshr i64 %37, 24
  %41 = lshr i64 %37, 32
  %42 = and i64 %37, -1099511627776
  br label %178

43:                                               ; preds = %11
  %44 = sdiv i64 %3, 24
  %45 = srem i64 %3, 24
  %46 = icmp slt i64 %45, 0
  %47 = add nsw i64 %45, 24
  %48 = select i1 %46, i64 %47, i64 %45
  %49 = ashr i64 %45, 63
  %50 = add nsw i64 %49, %44
  %51 = trunc i64 %48 to i8
  %52 = icmp eq i64 %1, 12
  br i1 %52, label %61, label %53

53:                                               ; preds = %43
  %54 = sdiv i64 %1, 12
  %55 = add nsw i64 %54, %0
  %56 = srem i64 %1, 12
  %57 = icmp slt i64 %56, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = add nsw i64 %55, -1
  %60 = add nsw i64 %56, 12
  br label %61

61:                                               ; preds = %43, %53, %58
  %62 = phi i64 [ %60, %58 ], [ %56, %53 ], [ 12, %43 ]
  %63 = phi i64 [ %59, %58 ], [ %55, %53 ], [ %0, %43 ]
  %64 = trunc i64 %62 to i8
  %65 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64 %63, i8 signext %64, i64 %2, i64 %50, i8 signext %51, i8 signext %12, i8 signext %9) #9
  %66 = extractvalue { i64, i64 } %65, 0
  %67 = extractvalue { i64, i64 } %65, 1
  %68 = lshr i64 %67, 8
  %69 = lshr i64 %67, 16
  %70 = lshr i64 %67, 24
  %71 = lshr i64 %67, 32
  %72 = and i64 %67, -1099511627776
  br label %178

73:                                               ; preds = %8
  %74 = sdiv i64 %4, 60
  %75 = srem i64 %4, 60
  %76 = icmp slt i64 %75, 0
  %77 = add nsw i64 %75, 60
  %78 = select i1 %76, i64 %77, i64 %75
  %79 = ashr i64 %75, 63
  %80 = add nsw i64 %79, %74
  %81 = sdiv i64 %3, 24
  %82 = sdiv i64 %80, 24
  %83 = add nsw i64 %82, %81
  %84 = srem i64 %3, 24
  %85 = srem i64 %80, 24
  %86 = add nsw i64 %85, %84
  %87 = trunc i64 %78 to i8
  %88 = sdiv i64 %86, 24
  %89 = add nsw i64 %83, %88
  %90 = srem i64 %86, 24
  %91 = icmp slt i64 %90, 0
  %92 = add nsw i64 %90, 24
  %93 = select i1 %91, i64 %92, i64 %90
  %94 = ashr i64 %90, 63
  %95 = add nsw i64 %89, %94
  %96 = trunc i64 %93 to i8
  %97 = icmp eq i64 %1, 12
  br i1 %97, label %106, label %98

98:                                               ; preds = %73
  %99 = sdiv i64 %1, 12
  %100 = add nsw i64 %99, %0
  %101 = srem i64 %1, 12
  %102 = icmp slt i64 %101, 1
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = add nsw i64 %100, -1
  %105 = add nsw i64 %101, 12
  br label %106

106:                                              ; preds = %73, %98, %103
  %107 = phi i64 [ %105, %103 ], [ %101, %98 ], [ 12, %73 ]
  %108 = phi i64 [ %104, %103 ], [ %100, %98 ], [ %0, %73 ]
  %109 = trunc i64 %107 to i8
  %110 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64 %108, i8 signext %109, i64 %2, i64 %95, i8 signext %96, i8 signext %87, i8 signext %9) #9
  %111 = extractvalue { i64, i64 } %110, 0
  %112 = extractvalue { i64, i64 } %110, 1
  %113 = lshr i64 %112, 8
  %114 = lshr i64 %112, 16
  %115 = lshr i64 %112, 24
  %116 = lshr i64 %112, 32
  %117 = and i64 %112, -1099511627776
  br label %178

118:                                              ; preds = %6
  %119 = sdiv i64 %5, 60
  %120 = srem i64 %5, 60
  %121 = icmp slt i64 %120, 0
  %122 = add nsw i64 %120, 60
  %123 = select i1 %121, i64 %122, i64 %120
  %124 = ashr i64 %120, 63
  %125 = add nsw i64 %124, %119
  %126 = sdiv i64 %4, 60
  %127 = sdiv i64 %125, 60
  %128 = add nsw i64 %127, %126
  %129 = srem i64 %4, 60
  %130 = srem i64 %125, 60
  %131 = add nsw i64 %130, %129
  %132 = trunc i64 %123 to i8
  %133 = sdiv i64 %131, 60
  %134 = add nsw i64 %128, %133
  %135 = srem i64 %131, 60
  %136 = icmp slt i64 %135, 0
  %137 = add nsw i64 %135, 60
  %138 = select i1 %136, i64 %137, i64 %135
  %139 = ashr i64 %135, 63
  %140 = add nsw i64 %134, %139
  %141 = sdiv i64 %3, 24
  %142 = sdiv i64 %140, 24
  %143 = add nsw i64 %142, %141
  %144 = srem i64 %3, 24
  %145 = srem i64 %140, 24
  %146 = add nsw i64 %145, %144
  %147 = trunc i64 %138 to i8
  %148 = sdiv i64 %146, 24
  %149 = add nsw i64 %143, %148
  %150 = srem i64 %146, 24
  %151 = icmp slt i64 %150, 0
  %152 = add nsw i64 %150, 24
  %153 = select i1 %151, i64 %152, i64 %150
  %154 = ashr i64 %150, 63
  %155 = add nsw i64 %149, %154
  %156 = trunc i64 %153 to i8
  %157 = icmp eq i64 %1, 12
  br i1 %157, label %166, label %158

158:                                              ; preds = %118
  %159 = sdiv i64 %1, 12
  %160 = add nsw i64 %159, %0
  %161 = srem i64 %1, 12
  %162 = icmp slt i64 %161, 1
  br i1 %162, label %163, label %166

163:                                              ; preds = %158
  %164 = add nsw i64 %160, -1
  %165 = add nsw i64 %161, 12
  br label %166

166:                                              ; preds = %118, %158, %163
  %167 = phi i64 [ %165, %163 ], [ %161, %158 ], [ 12, %118 ]
  %168 = phi i64 [ %164, %163 ], [ %160, %158 ], [ %0, %118 ]
  %169 = trunc i64 %167 to i8
  %170 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64 %168, i8 signext %169, i64 %2, i64 %155, i8 signext %156, i8 signext %147, i8 signext %132) #9
  %171 = extractvalue { i64, i64 } %170, 0
  %172 = extractvalue { i64, i64 } %170, 1
  %173 = lshr i64 %172, 8
  %174 = lshr i64 %172, 16
  %175 = lshr i64 %172, 24
  %176 = lshr i64 %172, 32
  %177 = and i64 %172, -1099511627776
  br label %178

178:                                              ; preds = %14, %106, %31, %61, %166
  %179 = phi i64 [ %42, %31 ], [ %72, %61 ], [ %117, %106 ], [ %177, %166 ], [ 0, %14 ]
  %180 = phi i64 [ %41, %31 ], [ %71, %61 ], [ %116, %106 ], [ %176, %166 ], [ %5, %14 ]
  %181 = phi i64 [ %40, %31 ], [ %70, %61 ], [ %115, %106 ], [ %175, %166 ], [ %4, %14 ]
  %182 = phi i64 [ %39, %31 ], [ %69, %61 ], [ %114, %106 ], [ %174, %166 ], [ %3, %14 ]
  %183 = phi i64 [ %38, %31 ], [ %68, %61 ], [ %113, %106 ], [ %173, %166 ], [ %2, %14 ]
  %184 = phi i64 [ %37, %31 ], [ %67, %61 ], [ %112, %106 ], [ %172, %166 ], [ %1, %14 ]
  %185 = phi i64 [ %36, %31 ], [ %66, %61 ], [ %111, %106 ], [ %171, %166 ], [ %0, %14 ]
  %186 = insertvalue { i64, i64 } undef, i64 %185, 0
  %187 = shl i64 %180, 32
  %188 = and i64 %187, 1095216660480
  %189 = or i64 %188, %179
  %190 = shl i64 %181, 24
  %191 = and i64 %190, 4278190080
  %192 = or i64 %189, %191
  %193 = shl i64 %182, 16
  %194 = and i64 %193, 16711680
  %195 = or i64 %192, %194
  %196 = shl i64 %183, 8
  %197 = and i64 %196, 65280
  %198 = or i64 %195, %197
  %199 = and i64 %184, 255
  %200 = or i64 %198, %199
  %201 = insertvalue { i64, i64 } %186, i64 %200, 1
  ret { i64, i64 } %201
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64, i8 signext, i64, i64, i8 signext, i8 signext, i8 signext) local_unnamed_addr #0 comdat {
  %8 = srem i64 %0, 400
  %9 = sdiv i64 %3, 146097
  %10 = mul nsw i64 %9, 400
  %11 = add nsw i64 %10, %8
  %12 = srem i64 %3, 146097
  %13 = icmp slt i64 %12, 0
  %14 = add nsw i64 %11, -400
  %15 = add nsw i64 %12, 146097
  %16 = select i1 %13, i64 %15, i64 %12
  %17 = select i1 %13, i64 %14, i64 %11
  %18 = sdiv i64 %2, 146097
  %19 = mul nsw i64 %18, 400
  %20 = add nsw i64 %17, %19
  %21 = srem i64 %2, 146097
  %22 = add nsw i64 %16, %21
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %7
  %25 = icmp sgt i64 %22, 146097
  br i1 %25, label %26, label %51

26:                                               ; preds = %24
  %27 = add nsw i64 %20, 400
  %28 = add nsw i64 %22, -146097
  br label %51

29:                                               ; preds = %7
  %30 = icmp sgt i64 %22, -365
  br i1 %30, label %31, label %48

31:                                               ; preds = %29
  %32 = add nsw i64 %20, -1
  %33 = icmp sgt i8 %1, 2
  %34 = zext i1 %33 to i64
  %35 = add nsw i64 %32, %34
  %36 = and i64 %35, 3
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %31
  %39 = srem i64 %35, 100
  %40 = icmp ne i64 %39, 0
  %41 = srem i64 %35, 400
  %42 = icmp eq i64 %41, 0
  %43 = or i1 %40, %42
  %44 = select i1 %43, i64 366, i64 365
  br label %45

45:                                               ; preds = %31, %38
  %46 = phi i64 [ %44, %38 ], [ 365, %31 ]
  %47 = add nsw i64 %46, %22
  br label %51

48:                                               ; preds = %29
  %49 = add nsw i64 %20, -400
  %50 = add nsw i64 %22, 146097
  br label %51

51:                                               ; preds = %45, %48, %24, %26
  %52 = phi i64 [ %28, %26 ], [ %22, %24 ], [ %47, %45 ], [ %50, %48 ]
  %53 = phi i64 [ %27, %26 ], [ %20, %24 ], [ %32, %45 ], [ %49, %48 ]
  %54 = icmp sgt i64 %52, 365
  br i1 %54, label %55, label %116

55:                                               ; preds = %51
  %56 = icmp sgt i8 %1, 2
  %57 = zext i1 %56 to i64
  br label %58

58:                                               ; preds = %55, %58
  %59 = phi i64 [ %73, %58 ], [ %52, %55 ]
  %60 = phi i64 [ %71, %58 ], [ %53, %55 ]
  %61 = add nsw i64 %60, %57
  %62 = srem i64 %61, 400
  %63 = trunc i64 %62 to i32
  %64 = add nsw i32 %63, 400
  %65 = srem i32 %64, 400
  %66 = icmp eq i32 %65, 0
  %67 = icmp sgt i32 %65, 300
  %68 = or i1 %66, %67
  %69 = select i1 %68, i64 36525, i64 36524
  %70 = icmp sgt i64 %59, %69
  %71 = add nsw i64 %60, 100
  %72 = select i1 %70, i64 %69, i64 0
  %73 = sub nsw i64 %59, %72
  br i1 %70, label %58, label %74

74:                                               ; preds = %58, %90
  %75 = phi i64 [ %95, %90 ], [ %73, %58 ]
  %76 = phi i64 [ %93, %90 ], [ %60, %58 ]
  %77 = add nsw i64 %76, %57
  %78 = srem i64 %77, 400
  %79 = trunc i64 %78 to i32
  %80 = add nsw i32 %79, 400
  %81 = srem i32 %80, 400
  %82 = icmp eq i32 %81, 0
  %83 = icmp sgt i32 %81, 300
  %84 = or i1 %82, %83
  br i1 %84, label %90, label %85

85:                                               ; preds = %74
  %86 = add nsw i32 %81, -1
  %87 = srem i32 %86, 100
  %88 = icmp slt i32 %87, 96
  %89 = select i1 %88, i64 1461, i64 1460
  br label %90

90:                                               ; preds = %74, %85
  %91 = phi i64 [ 1461, %74 ], [ %89, %85 ]
  %92 = icmp sgt i64 %75, %91
  %93 = add nsw i64 %76, 4
  %94 = select i1 %92, i64 %91, i64 0
  %95 = sub nsw i64 %75, %94
  br i1 %92, label %74, label %96

96:                                               ; preds = %90, %109
  %97 = phi i64 [ %113, %109 ], [ %95, %90 ]
  %98 = phi i64 [ %115, %109 ], [ %76, %90 ]
  %99 = add nsw i64 %98, %57
  %100 = and i64 %99, 3
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %96
  %103 = srem i64 %99, 100
  %104 = icmp ne i64 %103, 0
  %105 = srem i64 %99, 400
  %106 = icmp eq i64 %105, 0
  %107 = or i1 %104, %106
  %108 = select i1 %107, i64 366, i64 365
  br label %109

109:                                              ; preds = %96, %102
  %110 = phi i64 [ %108, %102 ], [ 365, %96 ]
  %111 = icmp sgt i64 %97, %110
  %112 = select i1 %111, i64 %110, i64 0
  %113 = sub nsw i64 %97, %112
  %114 = zext i1 %111 to i64
  %115 = add nsw i64 %98, %114
  br i1 %111, label %96, label %116

116:                                              ; preds = %109, %51
  %117 = phi i64 [ %52, %51 ], [ %113, %109 ]
  %118 = phi i64 [ %53, %51 ], [ %115, %109 ]
  %119 = icmp sgt i64 %117, 28
  br i1 %119, label %120, label %150

120:                                              ; preds = %116, %143
  %121 = phi i64 [ %144, %143 ], [ %117, %116 ]
  %122 = phi i8 [ %147, %143 ], [ %1, %116 ]
  %123 = phi i64 [ %149, %143 ], [ %118, %116 ]
  %124 = sext i8 %122 to i64
  %125 = getelementptr inbounds [13 x i32], [13 x i32]* @_ZZN4absl13time_internal4cctz6detail4impl14days_per_monthElaE16k_days_per_month, i64 0, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i8 %122, 2
  %128 = and i64 %123, 3
  %129 = icmp eq i64 %128, 0
  %130 = and i1 %127, %129
  br i1 %130, label %131, label %138

131:                                              ; preds = %120
  %132 = srem i64 %123, 100
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %131
  %135 = srem i64 %123, 400
  %136 = icmp eq i64 %135, 0
  %137 = zext i1 %136 to i32
  br label %138

138:                                              ; preds = %120, %131, %134
  %139 = phi i32 [ 0, %120 ], [ 1, %131 ], [ %137, %134 ]
  %140 = add nsw i32 %139, %126
  %141 = sext i32 %140 to i64
  %142 = icmp sgt i64 %121, %141
  br i1 %142, label %143, label %150

143:                                              ; preds = %138
  %144 = sub nsw i64 %121, %141
  %145 = add i8 %122, 1
  %146 = icmp sgt i8 %145, 12
  %147 = select i1 %146, i8 1, i8 %145
  %148 = zext i1 %146 to i64
  %149 = add nsw i64 %123, %148
  br label %120

150:                                              ; preds = %138, %116
  %151 = phi i64 [ %117, %116 ], [ %121, %138 ]
  %152 = phi i8 [ %1, %116 ], [ %122, %138 ]
  %153 = phi i64 [ %118, %116 ], [ %123, %138 ]
  %154 = sub i64 %0, %8
  %155 = add i64 %154, %153
  %156 = insertvalue { i64, i64 } undef, i64 %155, 0
  %157 = zext i8 %6 to i64
  %158 = shl nuw nsw i64 %157, 32
  %159 = zext i8 %5 to i64
  %160 = shl nuw nsw i64 %159, 24
  %161 = zext i8 %4 to i64
  %162 = shl nuw nsw i64 %161, 16
  %163 = shl i64 %151, 8
  %164 = and i64 %163, 65280
  %165 = zext i8 %152 to i64
  %166 = or i64 %160, %162
  %167 = or i64 %166, %158
  %168 = or i64 %167, %164
  %169 = or i64 %168, %165
  %170 = insertvalue { i64, i64 } %156, i64 %169, 1
  ret { i64, i64 } %170
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64, i8 signext, i8 signext, i64, i8 signext, i8 signext) local_unnamed_addr #0 comdat {
  %7 = srem i64 %0, 400
  %8 = srem i64 %3, 400
  %9 = sub nsw i64 %0, %7
  %10 = sub i64 %8, %3
  %11 = add i64 %10, %9
  %12 = sext i8 %1 to i32
  %13 = icmp slt i8 %1, 3
  %14 = zext i1 %13 to i64
  %15 = sub nsw i64 %7, %14
  %16 = icmp sgt i64 %15, -1
  %17 = add nsw i64 %15, -399
  %18 = select i1 %16, i64 %15, i64 %17
  %19 = sdiv i64 %18, 400
  %20 = mul nsw i64 %19, -400
  %21 = add nsw i64 %20, %15
  %22 = icmp sgt i8 %1, 2
  %23 = select i1 %22, i32 -3, i32 9
  %24 = add nsw i32 %23, %12
  %25 = mul nsw i32 %24, 153
  %26 = add nsw i32 %25, 2
  %27 = sdiv i32 %26, 5
  %28 = sext i8 %2 to i32
  %29 = add nsw i32 %28, -1
  %30 = add nsw i32 %29, %27
  %31 = sext i32 %30 to i64
  %32 = sdiv i64 %21, 4
  %33 = sdiv i64 %21, -100
  %34 = sext i8 %4 to i32
  %35 = icmp slt i8 %4, 3
  %36 = zext i1 %35 to i64
  %37 = sub nsw i64 %8, %36
  %38 = icmp sgt i64 %37, -1
  %39 = add nsw i64 %37, -399
  %40 = select i1 %38, i64 %37, i64 %39
  %41 = sdiv i64 %40, 400
  %42 = mul nsw i64 %41, -400
  %43 = add nsw i64 %42, %37
  %44 = icmp sgt i8 %4, 2
  %45 = select i1 %44, i32 -3, i32 9
  %46 = add nsw i32 %45, %34
  %47 = mul nsw i32 %46, 153
  %48 = add nsw i32 %47, 2
  %49 = sdiv i32 %48, 5
  %50 = sext i8 %5 to i32
  %51 = add nsw i32 %50, -1
  %52 = add nsw i32 %51, %49
  %53 = sdiv i64 %43, 100
  %54 = sub nsw i32 0, %52
  %55 = sext i32 %54 to i64
  %56 = sdiv i64 %43, -4
  %57 = sub nsw i64 %21, %43
  %58 = mul i64 %57, 365
  %59 = sub nsw i64 %19, %41
  %60 = mul nsw i64 %59, 146097
  %61 = add nsw i64 %32, %31
  %62 = add nsw i64 %61, %33
  %63 = add nsw i64 %62, %55
  %64 = add nsw i64 %63, %60
  %65 = add nsw i64 %64, %56
  %66 = add nsw i64 %65, %53
  %67 = add nsw i64 %66, %58
  %68 = icmp sgt i64 %11, 0
  %69 = icmp slt i64 %67, 0
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %6
  %72 = add nsw i64 %67, 292194
  %73 = add nsw i64 %11, -800
  br label %81

74:                                               ; preds = %6
  %75 = icmp slt i64 %11, 0
  %76 = icmp sgt i64 %67, 0
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %81

78:                                               ; preds = %74
  %79 = add nsw i64 %67, -292194
  %80 = add nsw i64 %11, 800
  br label %81

81:                                               ; preds = %74, %78, %71
  %82 = phi i64 [ %73, %71 ], [ %80, %78 ], [ %11, %74 ]
  %83 = phi i64 [ %72, %71 ], [ %79, %78 ], [ %67, %74 ]
  %84 = sdiv i64 %82, 400
  %85 = mul nsw i64 %84, 146097
  %86 = add nsw i64 %85, %83
  ret i64 %86
}

; Function Attrs: nofree nounwind
declare i64 @mktime(%struct.tm* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
