; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceInstX8664.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceInstX8664.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" = type { i32, i8*, i8* }
%"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType" = type { i8* }
%"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterOneOp" = type { { i64, i64 }, { i64, i64 } }
%"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" = type { { i64, i64 }, { i64, i64 }, { i64, i64 } }
%"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" = type { { i64, i64 }, { i64, i64 } }
%"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterAddrOp" = type { { i64, i64 }, { i64, i64 } }
%"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterShiftOp" = type { { i64, i64 }, { i64, i64 } }
%"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterShiftOp" = type { { i64, i64 }, { i64, i64 }, { i64, i64 } }
%"class.Ice::X8664::TargetX8664Traits::X86OperandMem" = type <{ %"class.Ice::X8664::TargetX8664Traits::X86Operand", %"class.Ice::Variable"*, %"class.Ice::Constant"*, %"class.Ice::Variable"*, i16, i8, [5 x i8] }>
%"class.Ice::X8664::TargetX8664Traits::X86Operand" = type { %"class.Ice::Operand" }
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr.25", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID.31", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.290", i32, [4 x i8], %"class.std::__1::vector.296", %"class.std::__1::vector.296", %"class.std::__1::vector.296", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.233", %"class.std::__1::vector.363", %"class.Ice::CfgNode"*, %"class.std::__1::vector.369", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.1", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.1" = type <{ %"class.llvm::SmallVectorImpl.2", %"struct.llvm::SmallVectorStorage.7", [7 x i8] }>
%"class.llvm::SmallVectorImpl.2" = type { %"class.llvm::SmallVectorTemplateBase.3" }
%"class.llvm::SmallVectorTemplateBase.3" = type { %"class.llvm::SmallVectorTemplateCommon.4" }
%"class.llvm::SmallVectorTemplateCommon.4" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.5" }
%"struct.llvm::AlignedCharArrayUnion.5" = type { %"struct.llvm::AlignedCharArray.6" }
%"struct.llvm::AlignedCharArray.6" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.7" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.42", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.56", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.90", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.96", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.157", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.229", %"class.std::__1::unique_ptr.265", i8, %"class.std::__1::unique_ptr.271", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.277", %"class.llvm::SmallVector.283", %"class.llvm::SmallVector.283" }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr.25", %"class.std::__1::vector.29", %"class.std::__1::vector.42", %"class.std::__1::vector.49" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.37" }
%"class.Ice::VariableDeclaration" = type <{ %"class.Ice::GlobalDeclaration", %"class.std::__1::vector.32", i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.Ice::GlobalDeclaration" = type { i32 (...)**, i32, i32, %"class.Ice::StringID.31" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.Ice::VariableDeclaration::Initializer"**, %"class.Ice::VariableDeclaration::Initializer"**, %"class.std::__1::__compressed_pair.34" }
%"class.Ice::VariableDeclaration::Initializer" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.Ice::VariableDeclaration::Initializer"** }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::unique_ptr.25"* }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.105" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID.31", %"class.Ice::StringID.31", i32, %"class.std::__1::vector.98" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { i64*, i64*, %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64* }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.110" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.152" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.124", %"class.std::__1::vector.131", %"class.std::__1::vector.145", %"class.std::__1::vector.133", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.140" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.133", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { double*, double*, %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { double* }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { i64*, i64*, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { i64* }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type { %"class.Ice::GlobalContext"*, %"class.Ice::ELFStreamer"*, i8, i8, %"class.std::__1::vector.160", %"class.std::__1::vector.167", %"class.std::__1::vector.182", %"class.std::__1::vector.167", %"class.std::__1::vector.182", %"class.std::__1::vector.167", %"class.std::__1::vector.182", %"class.Ice::ELFSection"*, %"class.Ice::ELFStringTableSection"*, %"class.Ice::ELFSymbolTableSection"*, %"class.Ice::ELFStringTableSection"* }
%"class.Ice::ELFStreamer" = type { i32 (...)** }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"class.Ice::ELFTextSection"**, %"class.Ice::ELFTextSection"**, %"class.std::__1::__compressed_pair.162" }
%"class.Ice::ELFTextSection" = type { %"class.Ice::ELFSection.base", [4 x i8] }
%"class.Ice::ELFSection.base" = type <{ i32 (...)**, %"class.std::__1::basic_string", %"struct.llvm::ELF::Elf64_Shdr", i32 }>
%"struct.llvm::ELF::Elf64_Shdr" = type { i32, i32, i64, i64, i64, i64, i32, i32, i64, i64 }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.Ice::ELFTextSection"** }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"class.Ice::ELFRelocationSection"**, %"class.Ice::ELFRelocationSection"**, %"class.std::__1::__compressed_pair.177" }
%"class.Ice::ELFRelocationSection" = type { %"class.Ice::ELFSection.base", %"class.Ice::ELFSection"*, %"class.std::__1::vector.169" }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"class.Ice::AssemblerFixup"*, %"class.Ice::AssemblerFixup"*, %"class.std::__1::__compressed_pair.172" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.171 }
%union.anon.171 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.Ice::AssemblerFixup"* }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.Ice::ELFRelocationSection"** }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"class.Ice::ELFDataSection"**, %"class.Ice::ELFDataSection"**, %"class.std::__1::__compressed_pair.184" }
%"class.Ice::ELFDataSection" = type { %"class.Ice::ELFSection.base", [4 x i8] }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.Ice::ELFDataSection"** }
%"class.Ice::ELFSection" = type <{ i32 (...)**, %"class.std::__1::basic_string", %"struct.llvm::ELF::Elf64_Shdr", i32, [4 x i8] }>
%"class.Ice::ELFSymbolTableSection" = type { %"class.Ice::ELFSection.base", %"class.Ice::StringID.31", %"struct.Ice::ELFSym"*, %"class.std::__1::map.205", %"class.std::__1::map.205" }
%"struct.Ice::ELFSym" = type { %"struct.llvm::ELF::Elf64_Sym", %"class.Ice::ELFSection"*, i32 }
%"struct.llvm::ELF::Elf64_Sym" = type { i32, i8, i8, i16, i64, i64 }
%"class.std::__1::map.205" = type { %"class.std::__1::__tree.206" }
%"class.std::__1::__tree.206" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.207", %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.Ice::ELFStringTableSection" = type { %"class.Ice::ELFSection.base", %"class.std::__1::map.189", %"class.std::__1::vector.198" }
%"class.std::__1::map.189" = type { %"class.std::__1::__tree.190" }
%"class.std::__1::__tree.190" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { i8*, i8*, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { i8* }
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.219"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.225, %union.anon.227, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.225 = type { i64 }
%union.anon.227 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.229" = type <{ [128 x %"class.std::__1::unique_ptr.230"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.255" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type { i32 (...)**, %"class.Ice::GlobalContext"* }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.llvm::SmallVector.277" = type { %"class.llvm::SmallVectorImpl.278", %"struct.llvm::SmallVectorStorage.282" }
%"class.llvm::SmallVectorImpl.278" = type { %"class.llvm::SmallVectorTemplateBase.279" }
%"class.llvm::SmallVectorTemplateBase.279" = type { %"class.llvm::SmallVectorTemplateCommon.280" }
%"class.llvm::SmallVectorTemplateCommon.280" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.281" }
%"struct.llvm::AlignedCharArrayUnion.281" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.282" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.281"] }
%"class.llvm::SmallVector.283" = type { %"class.llvm::SmallVectorImpl.284", %"struct.llvm::SmallVectorStorage.288" }
%"class.llvm::SmallVectorImpl.284" = type { %"class.llvm::SmallVectorTemplateBase.285" }
%"class.llvm::SmallVectorTemplateBase.285" = type { %"class.llvm::SmallVectorTemplateCommon.286" }
%"class.llvm::SmallVectorTemplateCommon.286" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.287" }
%"struct.llvm::AlignedCharArrayUnion.287" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.288" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.287"] }
%"class.Ice::StringID.31" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.Ice::sz_allocator.295" }
%"struct.Ice::sz_allocator.295" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299", %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.Ice::sz_allocator.301" }
%"struct.Ice::sz_allocator.301" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map.59" }
%"class.std::__1::unordered_map.59" = type { %"class.std::__1::__hash_table.60" }
%"class.std::__1::__hash_table.60" = type <{ %"class.std::__1::unique_ptr.61", %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63", %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base.64"** }
%"struct.std::__1::__hash_node_base.64" = type { %"struct.std::__1::__hash_node_base.64"* }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::__bucket_list_deallocator.66" }
%"class.std::__1::__bucket_list_deallocator.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::__hash_node_base.64" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { float }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type { %"class.std::__1::unique_ptr.25", %"struct.Ice::sz_allocator_scope", %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.305", %"class.std::__1::vector.324", %"class.std::__1::vector.307", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", i32, i32 }
%"struct.Ice::sz_allocator_scope" = type { i8 }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"*, %"class.std::__1::__compressed_pair.320" }
%"class.Ice::Liveness::LivenessNode" = type { i32, i32, %"class.std::__1::vector.307", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", %"class.std::__1::vector.313", %"class.std::__1::vector.313" }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"struct.std::__1::pair.315"*, %"struct.std::__1::pair.315"*, %"class.std::__1::__compressed_pair.316" }
%"struct.std::__1::pair.315" = type { i32, i32 }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317", %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::pair.315"* }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.Ice::sz_allocator.319" }
%"struct.Ice::sz_allocator.319" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321", %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.Ice::Liveness::LivenessNode"* }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.Ice::sz_allocator.323" }
%"struct.Ice::sz_allocator.323" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { i32*, i32*, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327", %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.327" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.Ice::sz_allocator.329" }
%"struct.Ice::sz_allocator.329" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.299", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.Ice::sz_allocator.311" }
%"struct.Ice::sz_allocator.311" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::BitVectorTmpl" = type { i64*, i32, i32, %"struct.Ice::sz_allocator.312" }
%"struct.Ice::sz_allocator.312" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.Ice::TargetLowering"* }
%"class.Ice::TargetLowering" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.Ice::LoweringContext", i32, [4 x i8] }>
%"class.Ice::LoweringContext" = type { %"class.Ice::CfgNode"*, %"class.Ice::Inst"*, %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.Ice::Variable"*, %"class.Ice::Variable"* }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.336", i32, [4 x i8] }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339", %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.Ice::sz_allocator.341" }
%"struct.Ice::sz_allocator.341" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::ilist_iterator" = type { %"class.llvm::ilist_node_impl"* }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.348" }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.356" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.350", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353", %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.Ice::sz_allocator.355" }
%"struct.Ice::sz_allocator.355" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357", %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"struct.Ice::sz_allocator.359" }
%"struct.Ice::sz_allocator.359" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.242", %"class.Ice::StringID.31", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.242" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.1", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.245", i8, [7 x i8] }>
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::vector.363" = type { %"class.std::__1::__vector_base.364" }
%"class.std::__1::__vector_base.364" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.365" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID.31", %"class.Ice::StringID.31" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.336", i32 }>
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366", %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"struct.Ice::sz_allocator.368" }
%"struct.Ice::sz_allocator.368" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.289", i32, i8, i8, i8, i32, %"class.std::__1::vector.290", %"class.std::__1::vector.290", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::StringID.289" = type { i64 }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::vector.369" = type { %"class.std::__1::__vector_base.370" }
%"class.std::__1::__vector_base.370" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.394" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.371" }
%"class.std::__1::__hash_table.371" = type <{ %"class.std::__1::unique_ptr.372", %"class.std::__1::__compressed_pair.381", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.389", [4 x i8] }>
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374", %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base.375"** }
%"struct.std::__1::__hash_node_base.375" = type { %"struct.std::__1::__hash_node_base.375"* }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.std::__1::__bucket_list_deallocator.377" }
%"class.std::__1::__bucket_list_deallocator.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"struct.Ice::sz_allocator.380" }
%"struct.Ice::sz_allocator.380" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.375" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"struct.Ice::sz_allocator.384" }
%"struct.Ice::sz_allocator.384" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395", %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"struct.Ice::sz_allocator.397" }
%"struct.Ice::sz_allocator.397" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID.31", i8, i8, [6 x i8] }>
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::StringID" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.Ice::LiveRange" = type { %"class.std::__1::vector", %"class.std::__1::unordered_map", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.22", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.Ice::sz_allocator.15" }
%"struct.Ice::sz_allocator.15" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.Ice::sz_allocator.19" }
%"struct.Ice::sz_allocator.19" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"class.Ice::X8664::AssemblerX86Base" = type { %"class.Ice::Assembler", i8, %"class.std::__1::vector.421", %"class.std::__1::vector.421" }
%"class.std::__1::vector.421" = type { %"class.std::__1::__vector_base.422" }
%"class.std::__1::__vector_base.422" = type { %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Label"**, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Label"**, %"class.std::__1::__compressed_pair.423" }
%"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Label" = type { %"class.Ice::Label", %"class.llvm::SmallVector.434" }
%"class.Ice::Label" = type { i32 (...)**, i64 }
%"class.llvm::SmallVector.434" = type { %"class.llvm::SmallVectorImpl.435", %"struct.llvm::SmallVectorStorage.439" }
%"class.llvm::SmallVectorImpl.435" = type { %"class.llvm::SmallVectorTemplateBase.436" }
%"class.llvm::SmallVectorTemplateBase.436" = type { %"class.llvm::SmallVectorTemplateCommon.437" }
%"class.llvm::SmallVectorTemplateCommon.437" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.438" }
%"struct.llvm::AlignedCharArrayUnion.438" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.439" = type { [19 x %"struct.llvm::AlignedCharArrayUnion.438"] }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Label"** }
%"class.Ice::X8664::TargetX8664Traits::Address" = type { %"class.Ice::X8664::TargetX8664Traits::Operand" }
%"class.Ice::X8664::TargetX8664Traits::Operand" = type { %"class.Ice::AssemblerFixup"*, i8, [6 x i8], i8 }
%"class.Ice::X8664::TargetX86Base" = type <{ %"class.Ice::TargetLowering.base", i8, [3 x i8], i32, i8, [3 x i8], i64, i64, i64, i64, i8, [3 x i8], i32, %"class.Ice::SmallBitVector", %"struct.std::__1::array.398", %"class.Ice::Variable"*, %"class.Ice::X8664::BoolFolding", i32, [4 x i8] }>
%"class.Ice::TargetLowering.base" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.Ice::LoweringContext", i32 }>
%"class.Ice::SmallBitVector" = type <{ [2 x i64], i32, [4 x i8] }>
%"struct.std::__1::array.398" = type { [15 x %"class.std::__1::vector.296"] }
%"class.Ice::X8664::BoolFolding" = type { %"class.std::__1::unordered_map.399" }
%"class.std::__1::unordered_map.399" = type { %"class.std::__1::__hash_table.400" }
%"class.std::__1::__hash_table.400" = type <{ %"class.std::__1::unique_ptr.401", %"class.std::__1::__compressed_pair.410", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.417", [4 x i8] }>
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403", %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.std::__1::__hash_node_base.404"** }
%"struct.std::__1::__hash_node_base.404" = type { %"struct.std::__1::__hash_node_base.404"* }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.std::__1::__bucket_list_deallocator.406" }
%"class.std::__1::__bucket_list_deallocator.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.Ice::sz_allocator.409" }
%"struct.Ice::sz_allocator.409" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411", %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"struct.std::__1::__hash_node_base.404" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.Ice::sz_allocator.413" }
%"struct.Ice::sz_allocator.413" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.Ice::RelocOffset" = type { i8, i8, i32 }
%"class.Ice::X8664::TargetX8664Traits::VariableSplit" = type <{ %"class.Ice::X8664::TargetX8664Traits::X86Operand", %"class.Ice::Variable"*, i32, [4 x i8] }>
%"class.Ice::AssemblerBuffer::EnsureCapacity" = type { %"class.Ice::AssemblerBuffer"*, i64 }
%"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate" = type { i32, %"class.Ice::AssemblerFixup"* }
%"struct.std::__1::pair.440" = type { i8*, i64 }

$_ZN3Ice5X866417TargetX8664Traits7AddressC2ENS_8RegX866411GPRRegisterES4_NS1_11ScaleFactorEiPNS_14AssemblerFixupE = comdat any

$_ZN3Ice5X866417TargetX8664Traits7AddressC2ENS_8RegX866411GPRRegisterEiPNS_14AssemblerFixupE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5bswapENS_4TypeENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3negENS_4TypeENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3negENS_4TypeERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsfENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsfENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsrENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsrENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3leaENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movsxENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movsxENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movzxENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movzxENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4sqrtENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4sqrtENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3rolENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3rolENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sarENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sarENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shlENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shlENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shrENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shrENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addssENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divssENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulssENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4paddENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4paddENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5paddsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5paddsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6paddusENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6paddusENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pandENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pandENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pandnENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pandnENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpeqENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpeqENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpgtENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpgtENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pmullENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pmullENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pmulhwENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pmulhwENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmulhuwENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmulhuwENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmaddwdENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmaddwdENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmuludqENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmuludqENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3porENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3porENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psubENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psubENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5psubsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5psubsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6psubusENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6psubusENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pxorENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pxorENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subssENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6andnpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6andnpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5andpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5andpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxssENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minssENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4orpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4orpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5xorpsENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5xorpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psllENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psllENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psllENS_4TypeENS_8RegX866411XmmRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psraENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psraENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psraENS_4TypeENS_8RegX866411XmmRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psrlENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psrlENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psrlENS_4TypeENS_8RegX866411XmmRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pshufbENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pshufbENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpcklENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpcklENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpckhENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpckhENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packssENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packusENS_4TypeENS_8RegX866411XmmRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packusENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866417TargetX8664Traits10X86OperandD0Ev = comdat any

$_ZN3Ice7Operand9asBooleanEv = comdat any

$_ZNK3Ice7Operand9hashValueEv = comdat any

$_ZN3Ice5X866417TargetX8664Traits13VariableSplitD0Ev = comdat any

$_ZN3Ice5X866417TargetX8664Traits13X86OperandMemD0Ev = comdat any

$_ZN3Ice7OperandD2Ev = comdat any

$_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3movENS_4TypeENS_8RegX866411GPRRegisterES6_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3movENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitImmediateENS_4TypeERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_ = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeERKNS2_7OperandENS_8RegX866411GPRRegisterE = comdat any

$_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE = comdat any

$_ZZN3Ice5X866417TargetX8664Traits13getEncodedGPRENS_7RegNumTEE7GPRRegs = comdat any

@.str = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"jo\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"jno\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"jb\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"ae\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"jae\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"je\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"jne\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"be\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"jbe\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"ja\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"js\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"ns\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"jns\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"jp\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"np\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"jnp\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"jl\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"ge\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"jge\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"le\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"jle\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"jg\00", align 1
@_ZN3Ice5X866417TargetX8664Traits16InstBrAttributesE = hidden local_unnamed_addr constant [16 x %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType"] [%"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstBrAttributesType" { i32 14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0) }], align 16
@.str.32 = private unnamed_addr constant [3 x i8] c"eq\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"unord\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"neq\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"nlt\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"nle\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"ord\00", align 1
@_ZN3Ice5X866417TargetX8664Traits19InstCmppsAttributesE = hidden local_unnamed_addr constant [8 x %"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType"] [%"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::InstCmppsAttributesType" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0) }], align 16
@.str.39 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.40 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"ss\00", align 1
@.str.45 = private unnamed_addr constant [3 x i8] c"ps\00", align 1
@.str.46 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"sd\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"pd\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"dq\00", align 1
@.str.50 = private unnamed_addr constant [3 x i8] c"wd\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"bw\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c"dw\00", align 1
@_ZN3Ice5X866417TargetX8664Traits14TypeAttributesE = hidden local_unnamed_addr constant [15 x %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType"] [%"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }, %"struct.Ice::X8664::TargetX8664Traits::TypeAttributesType" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i32 0, i32 0) }], align 16
@_ZTVN3Ice5X866417TargetX8664Traits13X86OperandMemE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"*, %"class.Ice::Cfg"*)* @_ZNK3Ice5X866417TargetX8664Traits13X86OperandMem4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"*, %"class.Ice::Cfg"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice5X866417TargetX8664Traits13X86OperandMem4dumpEPKNS_3CfgERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::Operand"*)* @_ZN3Ice7OperandD2Ev to i8*), i8* bitcast (void (%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"*)* @_ZN3Ice5X866417TargetX8664Traits13X86OperandMemD0Ev to i8*), i8* bitcast (%"class.Ice::Variable"* (%"class.Ice::Operand"*)* @_ZN3Ice7Operand9asBooleanEv to i8*), i8* bitcast (i32 (%"class.Ice::Operand"*)* @_ZNK3Ice7Operand9hashValueEv to i8*)] }, align 8
@.str.54 = private unnamed_addr constant [6 x i8] c"bswap\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE23InstX86BaseInplaceopGPRILNS3_11InstX86Base11InstKindX86E41EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0), align 8
@.str.55 = private unnamed_addr constant [4 x i8] c"neg\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE23InstX86BaseInplaceopGPRILNS3_11InstX86Base11InstKindX86E82EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), align 8
@.str.56 = private unnamed_addr constant [4 x i8] c"bsf\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E39EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0), align 8
@.str.57 = private unnamed_addr constant [4 x i8] c"bsr\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E40EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0), align 8
@.str.58 = private unnamed_addr constant [4 x i8] c"lea\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E64EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0), align 8
@.str.59 = private unnamed_addr constant [5 x i8] c"movd\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopXmmILNS3_11InstX86Base11InstKindX86E72EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), align 8
@.str.60 = private unnamed_addr constant [5 x i8] c"movs\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E77EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), align 8
@.str.61 = private unnamed_addr constant [5 x i8] c"movz\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E78EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), align 8
@.str.62 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopXmmILNS3_11InstX86Base11InstKindX86E130EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), align 8
@.str.63 = private unnamed_addr constant [12 x i8] c"cbw/cwd/cdq\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E43EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.63, i64 0, i64 0), align 8
@.str.64 = private unnamed_addr constant [4 x i8] c"mov\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE18InstX86BaseMovlikeILNS3_11InstX86Base11InstKindX86E71EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0), align 8
@.str.65 = private unnamed_addr constant [7 x i8] c"movups\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE18InstX86BaseMovlikeILNS3_11InstX86Base11InstKindX86E74EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i64 0, i64 0), align 8
@.str.66 = private unnamed_addr constant [5 x i8] c"movq\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE18InstX86BaseMovlikeILNS3_11InstX86Base11InstKindX86E75EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), align 8
@.str.67 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E29EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E30EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E31ELb1ELNS5_9SseSuffixE1EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), align 8
@.str.68 = private unnamed_addr constant [4 x i8] c"adc\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E27EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E28EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E32ELb0ELNS5_9SseSuffixE3EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), align 8
@.str.69 = private unnamed_addr constant [5 x i8] c"andn\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E34ELb1ELNS5_9SseSuffixE1EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i64 0, i64 0), align 8
@.str.70 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E35ELb1ELNS5_9SseSuffixE1EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), align 8
@.str.71 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E70ELb1ELNS5_9SseSuffixE3EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0), align 8
@.str.72 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E69ELb1ELNS5_9SseSuffixE3EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E68ELb1ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E67ELb1ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), align 8
@.str.73 = private unnamed_addr constant [5 x i8] c"padd\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E87ELb1ELNS5_9SseSuffixE4EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), align 8
@.str.74 = private unnamed_addr constant [6 x i8] c"padds\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E88ELb1ELNS5_9SseSuffixE4EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0), align 8
@.str.75 = private unnamed_addr constant [7 x i8] c"paddus\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E89ELb1ELNS5_9SseSuffixE4EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.75, i64 0, i64 0), align 8
@.str.76 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E135EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E136EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E137ELb1ELNS5_9SseSuffixE1EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E138ELb0ELNS5_9SseSuffixE3EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), align 8
@.str.77 = private unnamed_addr constant [4 x i8] c"sbb\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E122EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E123EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i64 0, i64 0), align 8
@.str.78 = private unnamed_addr constant [5 x i8] c"psub\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E113ELb1ELNS5_9SseSuffixE4EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), align 8
@.str.79 = private unnamed_addr constant [6 x i8] c"psubs\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E114ELb1ELNS5_9SseSuffixE4EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), align 8
@.str.80 = private unnamed_addr constant [7 x i8] c"psubus\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E115ELb1ELNS5_9SseSuffixE4EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E33EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E36EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), align 8
@.str.81 = private unnamed_addr constant [5 x i8] c"pand\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E90ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), align 8
@.str.82 = private unnamed_addr constant [6 x i8] c"pandn\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E91ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0), align 8
@.str.83 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E84EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E85ELb1ELNS5_9SseSuffixE1EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E86EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), align 8
@.str.84 = private unnamed_addr constant [4 x i8] c"por\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E103ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i64 0, i64 0), align 8
@.str.85 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E144EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E145ELb1ELNS5_9SseSuffixE1EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E146EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i64 0, i64 0), align 8
@.str.86 = private unnamed_addr constant [5 x i8] c"pxor\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E117ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0), align 8
@.str.87 = private unnamed_addr constant [5 x i8] c"imul\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E58EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE25InstX86BaseThreeAddressopILNS3_11InstX86Base11InstKindX86E59EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), align 8
@.str.88 = private unnamed_addr constant [4 x i8] c"mul\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E80ELb1ELNS5_9SseSuffixE1EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E81ELb0ELNS5_9SseSuffixE3EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i64 0, i64 0), align 8
@.str.89 = private unnamed_addr constant [6 x i8] c"pmull\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E97ELb1ELNS5_9SseSuffixE4EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0), align 8
@.str.90 = private unnamed_addr constant [7 x i8] c"pmulhw\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E98ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), align 8
@.str.91 = private unnamed_addr constant [8 x i8] c"pmulhuw\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E99ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i64 0, i64 0), align 8
@.str.92 = private unnamed_addr constant [8 x i8] c"pmaddwd\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E100ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), align 8
@.str.93 = private unnamed_addr constant [8 x i8] c"pmuludq\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E101ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i64 0, i64 0), align 8
@.str.94 = private unnamed_addr constant [4 x i8] c"div\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE17InstX86BaseTernopILNS3_11InstX86Base11InstKindX86E49EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E50ELb1ELNS5_9SseSuffixE1EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E51ELb0ELNS5_9SseSuffixE3EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0), align 8
@.str.95 = private unnamed_addr constant [5 x i8] c"idiv\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE17InstX86BaseTernopILNS3_11InstX86Base11InstKindX86E57EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i64 0, i64 0), align 8
@.str.96 = private unnamed_addr constant [4 x i8] c"rol\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopGPRShiftILNS3_11InstX86Base11InstKindX86E119EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i64 0, i64 0), align 8
@.str.97 = private unnamed_addr constant [4 x i8] c"shl\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopGPRShiftILNS3_11InstX86Base11InstKindX86E125EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), align 8
@.str.98 = private unnamed_addr constant [5 x i8] c"psll\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopXmmShiftILNS3_11InstX86Base11InstKindX86E110ELb0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i64 0, i64 0), align 8
@.str.99 = private unnamed_addr constant [4 x i8] c"shr\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopGPRShiftILNS3_11InstX86Base11InstKindX86E127EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i64 0, i64 0), align 8
@.str.100 = private unnamed_addr constant [4 x i8] c"sar\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopGPRShiftILNS3_11InstX86Base11InstKindX86E121EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100, i64 0, i64 0), align 8
@.str.101 = private unnamed_addr constant [5 x i8] c"psra\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopXmmShiftILNS3_11InstX86Base11InstKindX86E111ELb0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0), align 8
@.str.102 = private unnamed_addr constant [5 x i8] c"psrl\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopXmmShiftILNS3_11InstX86Base11InstKindX86E112ELb1EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i64 0, i64 0), align 8
@.str.103 = private unnamed_addr constant [7 x i8] c"pcmpeq\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E93ELb1ELNS5_9SseSuffixE4EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.103, i64 0, i64 0), align 8
@.str.104 = private unnamed_addr constant [7 x i8] c"pcmpgt\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E94ELb1ELNS5_9SseSuffixE4EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.104, i64 0, i64 0), align 8
@.str.105 = private unnamed_addr constant [6 x i8] c"movss\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E76ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), align 8
@.str.106 = private unnamed_addr constant [9 x i8] c"insertps\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE17InstX86BaseTernopILNS3_11InstX86Base11InstKindX86E60EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i64 0, i64 0), align 8
@.str.107 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE25InstX86BaseThreeAddressopILNS3_11InstX86Base11InstKindX86E120EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), align 8
@.str.108 = private unnamed_addr constant [7 x i8] c"shufps\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE17InstX86BaseTernopILNS3_11InstX86Base11InstKindX86E129EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i64 0, i64 0), align 8
@.str.109 = private unnamed_addr constant [6 x i8] c"pinsr\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE17InstX86BaseTernopILNS3_11InstX86Base11InstKindX86E96EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0), align 8
@.str.110 = private unnamed_addr constant [9 x i8] c"blendvps\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE17InstX86BaseTernopILNS3_11InstX86Base11InstKindX86E37EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i64 0, i64 0), align 8
@.str.111 = private unnamed_addr constant [9 x i8] c"pblendvb\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE17InstX86BaseTernopILNS3_11InstX86Base11InstKindX86E92EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.111, i64 0, i64 0), align 8
@.str.112 = private unnamed_addr constant [6 x i8] c"pextr\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE25InstX86BaseThreeAddressopILNS3_11InstX86Base11InstKindX86E95EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0), align 8
@.str.113 = private unnamed_addr constant [7 x i8] c"pshufd\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE25InstX86BaseThreeAddressopILNS3_11InstX86Base11InstKindX86E105EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0), align 8
@.str.114 = private unnamed_addr constant [7 x i8] c"pshufb\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E104ELb0ELNS5_9SseSuffixE0EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i64 0, i64 0), align 8
@.str.115 = private unnamed_addr constant [8 x i8] c"punpckl\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E106ELb0ELNS5_9SseSuffixE2EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.115, i64 0, i64 0), align 8
@.str.116 = private unnamed_addr constant [8 x i8] c"punpckh\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E107ELb0ELNS5_9SseSuffixE2EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i64 0, i64 0), align 8
@.str.117 = private unnamed_addr constant [7 x i8] c"packss\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E108ELb0ELNS5_9SseSuffixE5EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i64 0, i64 0), align 8
@.str.118 = private unnamed_addr constant [7 x i8] c"packus\00", align 1
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E109ELb0ELNS5_9SseSuffixE5EE6OpcodeE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i64 0, i64 0), align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE23InstX86BaseInplaceopGPRILNS3_11InstX86Base11InstKindX86E41EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterOneOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5bswapENS_4TypeENS_8RegX866411GPRRegisterE to i64), i64 0 }, { i64, i64 } zeroinitializer }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE23InstX86BaseInplaceopGPRILNS3_11InstX86Base11InstKindX86E82EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterOneOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3negENS_4TypeENS_8RegX866411GPRRegisterE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3negENS_4TypeERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E43EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" zeroinitializer, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E39EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsfENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsfENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } zeroinitializer }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E40EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsrENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsrENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } zeroinitializer }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E64EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } zeroinitializer, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3leaENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } zeroinitializer }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E77EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movsxENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movsxENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } zeroinitializer }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopGPRILNS3_11InstX86Base11InstKindX86E78EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movzxENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movzxENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } zeroinitializer }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopXmmILNS3_11InstX86Base11InstKindX86E72EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" zeroinitializer, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE21InstX86BaseUnaryopXmmILNS3_11InstX86Base11InstKindX86E130EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4sqrtENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4sqrtENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E58EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" zeroinitializer, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E29EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E30EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterAddrOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E27EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E28EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterAddrOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E33EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E36EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterAddrOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E84EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E86EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterAddrOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E122EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E123EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterAddrOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E135EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E136EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterAddrOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopGPRILNS3_11InstX86Base11InstKindX86E144EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopRMWILNS3_11InstX86Base11InstKindX86E146EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterAddrOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopGPRShiftILNS3_11InstX86Base11InstKindX86E119EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterShiftOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3rolENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3rolENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopGPRShiftILNS3_11InstX86Base11InstKindX86E121EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterShiftOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sarENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sarENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopGPRShiftILNS3_11InstX86Base11InstKindX86E125EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterShiftOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shlENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shlENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopGPRShiftILNS3_11InstX86Base11InstKindX86E127EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::GPREmitterShiftOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shrENS_4TypeENS_8RegX866411GPRRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shrENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E76ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" zeroinitializer, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E32ELb0ELNS5_9SseSuffixE3EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addssENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E31ELb1ELNS5_9SseSuffixE1EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E51ELb0ELNS5_9SseSuffixE3EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divssENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E50ELb1ELNS5_9SseSuffixE1EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E81ELb0ELNS5_9SseSuffixE3EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulssENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E80ELb1ELNS5_9SseSuffixE1EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E87ELb1ELNS5_9SseSuffixE4EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4paddENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4paddENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E88ELb1ELNS5_9SseSuffixE4EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5paddsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5paddsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E89ELb1ELNS5_9SseSuffixE4EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6paddusENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6paddusENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E90ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pandENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pandENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E91ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pandnENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pandnENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E93ELb1ELNS5_9SseSuffixE4EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpeqENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpeqENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E94ELb1ELNS5_9SseSuffixE4EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpgtENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpgtENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E97ELb1ELNS5_9SseSuffixE4EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pmullENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pmullENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E98ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pmulhwENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pmulhwENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E99ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmulhuwENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmulhuwENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E100ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmaddwdENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmaddwdENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E101ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmuludqENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmuludqENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E103ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3porENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3porENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E113ELb1ELNS5_9SseSuffixE4EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psubENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psubENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E114ELb1ELNS5_9SseSuffixE4EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5psubsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5psubsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E115ELb1ELNS5_9SseSuffixE4EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6psubusENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6psubusENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E117ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pxorENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pxorENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E138ELb0ELNS5_9SseSuffixE3EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subssENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E137ELb1ELNS5_9SseSuffixE1EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E34ELb1ELNS5_9SseSuffixE1EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6andnpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6andnpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E35ELb1ELNS5_9SseSuffixE1EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5andpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5andpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E70ELb1ELNS5_9SseSuffixE3EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxssENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E69ELb1ELNS5_9SseSuffixE3EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minssENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E68ELb1ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E67ELb1ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E85ELb1ELNS5_9SseSuffixE1EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4orpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4orpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E145ELb1ELNS5_9SseSuffixE1EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5xorpsENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5xorpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopXmmShiftILNS3_11InstX86Base11InstKindX86E110ELb0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterShiftOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psllENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psllENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psllENS_4TypeENS_8RegX866411XmmRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopXmmShiftILNS3_11InstX86Base11InstKindX86E111ELb0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterShiftOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psraENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psraENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psraENS_4TypeENS_8RegX866411XmmRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE24InstX86BaseBinopXmmShiftILNS3_11InstX86Base11InstKindX86E112ELb1EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterShiftOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psrlENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psrlENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psrlENS_4TypeENS_8RegX866411XmmRegisterERKNS3_9ImmediateE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E104ELb0ELNS5_9SseSuffixE0EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pshufbENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pshufbENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E106ELb0ELNS5_9SseSuffixE2EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpcklENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpcklENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E107ELb0ELNS5_9SseSuffixE2EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpckhENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpckhENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E108ELb0ELNS5_9SseSuffixE5EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packssENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZN3Ice5X86648InstImplINS0_17TargetX8664TraitsEE19InstX86BaseBinopXmmILNS3_11InstX86Base11InstKindX86E109ELb0ELNS5_9SseSuffixE5EE7EmitterE = hidden local_unnamed_addr constant %"struct.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::XmmEmitterRegOp" { { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packusENS_4TypeENS_8RegX866411XmmRegisterES6_ to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*)* @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packusENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE to i64), i64 0 } }, align 8
@_ZTVN3Ice5X866417TargetX8664Traits10X86OperandE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Ice::X8664::TargetX8664Traits::X86Operand"*, %"class.Ice::Cfg"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice5X866417TargetX8664Traits10X86Operand4dumpEPKNS_3CfgERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::Operand"*)* @_ZN3Ice7OperandD2Ev to i8*), i8* bitcast (void (%"class.Ice::X8664::TargetX8664Traits::X86Operand"*)* @_ZN3Ice5X866417TargetX8664Traits10X86OperandD0Ev to i8*), i8* bitcast (%"class.Ice::Variable"* (%"class.Ice::Operand"*)* @_ZN3Ice7Operand9asBooleanEv to i8*), i8* bitcast (i32 (%"class.Ice::Operand"*)* @_ZNK3Ice7Operand9hashValueEv to i8*)] }, align 8
@_ZTVN3Ice5X866417TargetX8664Traits13VariableSplitE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::X8664::TargetX8664Traits::VariableSplit"*, %"class.Ice::Cfg"*)* @_ZNK3Ice5X866417TargetX8664Traits13VariableSplit4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::X8664::TargetX8664Traits::VariableSplit"*, %"class.Ice::Cfg"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice5X866417TargetX8664Traits13VariableSplit4dumpEPKNS_3CfgERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::Operand"*)* @_ZN3Ice7OperandD2Ev to i8*), i8* bitcast (void (%"class.Ice::X8664::TargetX8664Traits::VariableSplit"*)* @_ZN3Ice5X866417TargetX8664Traits13VariableSplitD0Ev to i8*), i8* bitcast (%"class.Ice::Variable"* (%"class.Ice::Operand"*)* @_ZN3Ice7Operand9asBooleanEv to i8*), i8* bitcast (i32 (%"class.Ice::Operand"*)* @_ZNK3Ice7Operand9hashValueEv to i8*)] }, align 8
@.str.119 = private unnamed_addr constant [42 x i8] c"Unexpected rematerializable register type\00", align 1
@_ZZN3Ice5X866417TargetX8664Traits13getEncodedGPRENS_7RegNumTEE7GPRRegs = linkonce_odr hidden local_unnamed_addr constant [84 x i32] [i32 0, i32 1, i32 2, i32 8, i32 9, i32 10, i32 11, i32 6, i32 7, i32 3, i32 4, i32 5, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 8, i32 9, i32 10, i32 11, i32 6, i32 7, i32 3, i32 4, i32 5, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 8, i32 9, i32 10, i32 11, i32 6, i32 7, i32 3, i32 4, i32 5, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 8, i32 9, i32 10, i32 11, i32 6, i32 7, i32 3, i32 4, i32 5, i32 12, i32 13, i32 14, i32 15, i32 4, i32 5, i32 6, i32 7, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], comdat, align 16
@.str.120 = private unnamed_addr constant [42 x i8] c"Tried to hash unsupported operand type : \00", align 1

@_ZN3Ice5X866417TargetX8664Traits13X86OperandMemC1EPNS_3CfgENS_4TypeEPNS_8VariableEPNS_8ConstantES7_tb = hidden unnamed_addr alias void (%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Constant"*, %"class.Ice::Variable"*, i16, i1), void (%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Constant"*, %"class.Ice::Variable"*, i16, i1)* @_ZN3Ice5X866417TargetX8664Traits13X86OperandMemC2EPNS_3CfgENS_4TypeEPNS_8VariableEPNS_8ConstantES7_tb

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice5X866417TargetX8664Traits10X86Operand4dumpEPKNS_3CfgERN4llvm11raw_ostreamE(%"class.Ice::X8664::TargetX8664Traits::X86Operand"* nocapture, %"class.Ice::Cfg"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice5X866417TargetX8664Traits13X86OperandMemC2EPNS_3CfgENS_4TypeEPNS_8VariableEPNS_8ConstantES7_tb(%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* nocapture, %"class.Ice::Cfg"* nocapture readonly, i32, %"class.Ice::Variable"*, %"class.Ice::Constant"*, %"class.Ice::Variable"*, i16 zeroext, i1 zeroext) unnamed_addr #1 align 2 {
  %9 = zext i1 %7 to i8
  %10 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 34, i32* %11, align 4
  %12 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 0, i32 0, i32 3
  %13 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = getelementptr inbounds %"class.Ice::Variable"**, %"class.Ice::Variable"*** %13, i64 1
  %15 = bitcast %"class.Ice::Variable"*** %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3Ice5X866417TargetX8664Traits13X86OperandMemE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 1
  store %"class.Ice::Variable"* %3, %"class.Ice::Variable"** %17, align 8
  %18 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 2
  store %"class.Ice::Constant"* %4, %"class.Ice::Constant"** %18, align 8
  %19 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 3
  store %"class.Ice::Variable"* %5, %"class.Ice::Variable"** %19, align 8
  %20 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 4
  store i16 %6, i16* %20, align 8
  %21 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 5
  store i8 %9, i8* %21, align 2
  store %"class.Ice::Variable"** null, %"class.Ice::Variable"*** %13, align 8
  %22 = icmp ne %"class.Ice::Variable"* %3, null
  %23 = zext i1 %22 to i32
  store i32 %23, i32* %12, align 8
  %24 = icmp ne %"class.Ice::Variable"* %5, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %8
  %26 = select i1 %22, i32 2, i32 1
  store i32 %26, i32* %12, align 8
  %27 = shl nuw nsw i32 %26, 3
  %28 = zext i32 %27 to i64
  br label %30

29:                                               ; preds = %8
  br i1 %22, label %30, label %42

30:                                               ; preds = %29, %25
  %31 = phi i64 [ %28, %25 ], [ 8, %29 ]
  %32 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %32, align 8
  %34 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %33, i64 %31, i64 8) #11
  %35 = bitcast i8* %34 to %"class.Ice::Variable"**
  %36 = bitcast %"class.Ice::Variable"*** %13 to i8**
  store i8* %34, i8** %36, align 8
  br i1 %22, label %37, label %38

37:                                               ; preds = %30
  store %"class.Ice::Variable"* %3, %"class.Ice::Variable"** %35, align 8
  br label %38

38:                                               ; preds = %37, %30
  %39 = phi i64 [ 1, %37 ], [ 0, %30 ]
  br i1 %24, label %40, label %42

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %35, i64 %39
  store %"class.Ice::Variable"* %5, %"class.Ice::Variable"** %41, align 8
  br label %42

42:                                               ; preds = %29, %38, %40
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice5X866417TargetX8664Traits13X86OperandMem4emitEPKNS_3CfgE(%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice5X866417TargetX8664Traits13X86OperandMem4dumpEPKNS_3CfgERN4llvm11raw_ostreamE(%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* nocapture, %"class.Ice::Cfg"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { %"class.Ice::AssemblerFixup"*, i64 } @_ZNK3Ice5X866417TargetX8664Traits13X86OperandMem12toAsmAddressEPNS0_16AssemblerX86BaseIS1_EEPKNS_14TargetLoweringEb(%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* nocapture readonly, %"class.Ice::X8664::AssemblerX86Base"*, %"class.Ice::TargetLowering"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.Ice::X8664::TargetX8664Traits::Address", align 8
  %6 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 1
  %7 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, align 8
  %8 = icmp eq %"class.Ice::Variable"* %7, null
  br i1 %8, label %36, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %7, i64 0, i32 6
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %7, i64 0, i32 11
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %7, i64 0, i32 9, i32 0
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %35 [
    i32 11, label %18
    i32 10, label %36
  ]

18:                                               ; preds = %13
  %19 = bitcast %"class.Ice::TargetLowering"* %2 to %"class.Ice::X8664::TargetX86Base"*
  %20 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %2, i64 1, i32 5
  %21 = bitcast %"class.Ice::GlobalContext"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %2, i64 1, i32 4
  %24 = bitcast %"class.Ice::Cfg"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.Ice::TargetLowering"* %2 to i32 (%"class.Ice::X8664::TargetX86Base"*)***
  %27 = load i32 (%"class.Ice::X8664::TargetX86Base"*)**, i32 (%"class.Ice::X8664::TargetX86Base"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.Ice::X8664::TargetX86Base"*)*, i32 (%"class.Ice::X8664::TargetX86Base"*)** %27, i64 20
  %29 = load i32 (%"class.Ice::X8664::TargetX86Base"*)*, i32 (%"class.Ice::X8664::TargetX86Base"*)** %28, align 8
  %30 = tail call i32 %29(%"class.Ice::X8664::TargetX86Base"* %19) #11
  %31 = sub i64 %22, %25
  %32 = trunc i64 %31 to i32
  %33 = add i32 %15, %32
  %34 = add i32 %33, %30
  br label %36

35:                                               ; preds = %13
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.119, i64 0, i64 0), i1 zeroext true) #12
  unreachable

36:                                               ; preds = %9, %18, %13, %4
  %37 = phi i32 [ 0, %9 ], [ 0, %4 ], [ %34, %18 ], [ %15, %13 ]
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 3
  %39 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 2
  %40 = load %"class.Ice::Constant"*, %"class.Ice::Constant"** %39, align 8
  %41 = icmp eq %"class.Ice::Constant"* %40, null
  br i1 %41, label %85, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %40, i64 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %51

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %40, i64 0, i32 4, i64 2
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, %37
  br label %85

51:                                               ; preds = %42
  %52 = icmp eq i32 %44, 5
  tail call void @llvm.assume(i1 %52)
  %53 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, align 8
  %54 = icmp eq %"class.Ice::Variable"* %53, null
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %38, align 8
  %57 = icmp eq %"class.Ice::Variable"* %56, null
  %58 = select i1 %57, i32 2, i32 11
  %59 = select i1 %57, i32 -4, i32 0
  br label %60

60:                                               ; preds = %55, %51
  %61 = phi i32 [ 11, %51 ], [ %58, %55 ]
  %62 = phi i32 [ 0, %51 ], [ %59, %55 ]
  %63 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %1, i64 0, i32 0, i32 8
  %64 = tail call %"class.Ice::AssemblerFixup"* @_ZN3Ice15AssemblerBuffer11createFixupEjPKNS_8ConstantE(%"class.Ice::AssemblerBuffer"* %63, i32 %61, %"class.Ice::Constant"* nonnull %40) #11
  %65 = getelementptr inbounds %"class.Ice::AssemblerFixup", %"class.Ice::AssemblerFixup"* %64, i64 0, i32 3
  store i32 %62, i32* %65, align 4
  %66 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %40, i64 0, i32 4, i64 2
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %40, i64 1
  %70 = bitcast %"class.Ice::Constant"* %69 to %"class.Ice::RelocOffset"***
  %71 = load %"class.Ice::RelocOffset"**, %"class.Ice::RelocOffset"*** %70, align 8
  %72 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %40, i64 1, i32 0, i32 1
  %73 = bitcast i32* %72 to %"class.Ice::RelocOffset"***
  %74 = load %"class.Ice::RelocOffset"**, %"class.Ice::RelocOffset"*** %73, align 8
  %75 = icmp eq %"class.Ice::RelocOffset"** %71, %74
  br i1 %75, label %85, label %76

76:                                               ; preds = %60, %76
  %77 = phi i32 [ %82, %76 ], [ %68, %60 ]
  %78 = phi %"class.Ice::RelocOffset"** [ %83, %76 ], [ %71, %60 ]
  %79 = load %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %78, align 8
  %80 = getelementptr inbounds %"class.Ice::RelocOffset", %"class.Ice::RelocOffset"* %79, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add nsw i32 %81, %77
  %83 = getelementptr inbounds %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %78, i64 1
  %84 = icmp eq %"class.Ice::RelocOffset"** %83, %74
  br i1 %84, label %85, label %76

85:                                               ; preds = %76, %60, %46, %36
  %86 = phi %"class.Ice::AssemblerFixup"* [ null, %36 ], [ null, %46 ], [ %64, %60 ], [ %64, %76 ]
  %87 = phi i32 [ %37, %36 ], [ %50, %46 ], [ %68, %60 ], [ %82, %76 ]
  %88 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, align 8
  %89 = icmp eq %"class.Ice::Variable"* %88, null
  %90 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %38, align 8
  %91 = icmp eq %"class.Ice::Variable"* %90, null
  br i1 %89, label %108, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %88, i64 0, i32 9, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [84 x i32], [84 x i32]* @_ZZN3Ice5X866417TargetX8664Traits13getEncodedGPRENS_7RegNumTEE7GPRRegs, i64 0, i64 %95
  %97 = load i32, i32* %96, align 4
  br i1 %91, label %107, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %90, i64 0, i32 9, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds [84 x i32], [84 x i32]* @_ZZN3Ice5X866417TargetX8664Traits13getEncodedGPRENS_7RegNumTEE7GPRRegs, i64 0, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 4
  %105 = load i16, i16* %104, align 8
  %106 = zext i16 %105 to i32
  call void @_ZN3Ice5X866417TargetX8664Traits7AddressC2ENS_8RegX866411GPRRegisterES4_NS1_11ScaleFactorEiPNS_14AssemblerFixupE(%"class.Ice::X8664::TargetX8664Traits::Address"* nonnull %5, i32 %97, i32 %103, i32 %106, i32 %87, %"class.Ice::AssemblerFixup"* %86) #13
  br label %151

107:                                              ; preds = %92
  call void @_ZN3Ice5X866417TargetX8664Traits7AddressC2ENS_8RegX866411GPRRegisterEiPNS_14AssemblerFixupE(%"class.Ice::X8664::TargetX8664Traits::Address"* nonnull %5, i32 %97, i32 %87, %"class.Ice::AssemblerFixup"* %86) #13
  br label %151

108:                                              ; preds = %85
  br i1 %91, label %136, label %109

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %90, i64 0, i32 9, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds [84 x i32], [84 x i32]* @_ZZN3Ice5X866417TargetX8664Traits13getEncodedGPRENS_7RegNumTEE7GPRRegs, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::X86OperandMem", %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0, i64 0, i32 4
  %116 = load i16, i16* %115, align 8
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %118, align 8
  %119 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 1
  %120 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 3
  %121 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 2, i64 0
  store i8 4, i8* %121, align 1
  %122 = shl nuw nsw i32 %117, 6
  %123 = shl i32 %114, 3
  %124 = and i32 %123, 56
  %125 = or i32 %122, %124
  %126 = trunc i32 %125 to i8
  %127 = or i8 %126, 5
  %128 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 2, i64 1
  store i8 %127, i8* %128, align 1
  %129 = and i32 %114, 8
  %130 = icmp eq i32 %129, 0
  %131 = select i1 %130, i8 0, i8 66
  store i8 %131, i8* %119, align 8
  %132 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 2, i64 2
  %133 = bitcast i8* %132 to i32*
  store i32 %87, i32* %133, align 1
  store i8 6, i8* %120, align 1
  %134 = icmp eq %"class.Ice::AssemblerFixup"* %86, null
  br i1 %134, label %151, label %135

135:                                              ; preds = %109
  store %"class.Ice::AssemblerFixup"* %86, %"class.Ice::AssemblerFixup"** %118, align 8
  br label %151

136:                                              ; preds = %108
  %137 = icmp eq %"class.Ice::AssemblerFixup"* %86, null
  %138 = zext i32 %87 to i64
  br i1 %137, label %139, label %145

139:                                              ; preds = %136
  %140 = shl nuw nsw i64 %138, 24
  %141 = or i64 %140, 432345564229993472
  %142 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %142, align 8
  %143 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 1
  %144 = bitcast i8* %143 to i64*
  store i64 %141, i64* %144, align 8
  br label %151

145:                                              ; preds = %136
  %146 = shl nuw nsw i64 %138, 16
  %147 = or i64 %146, 408138716230452480
  %148 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 0
  store %"class.Ice::AssemblerFixup"* %86, %"class.Ice::AssemblerFixup"** %148, align 8
  %149 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 1
  %150 = bitcast i8* %149 to i64*
  store i64 %147, i64* %150, align 8
  br label %151

151:                                              ; preds = %135, %109, %145, %139, %107, %98
  %152 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 0
  %153 = load %"class.Ice::AssemblerFixup"*, %"class.Ice::AssemblerFixup"** %152, align 8
  %154 = insertvalue { %"class.Ice::AssemblerFixup"*, i64 } undef, %"class.Ice::AssemblerFixup"* %153, 0
  %155 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 1
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = insertvalue { %"class.Ice::AssemblerFixup"*, i64 } %154, i64 %157, 1
  ret { %"class.Ice::AssemblerFixup"*, i64 } %158
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866417TargetX8664Traits7AddressC2ENS_8RegX866411GPRRegisterES4_NS1_11ScaleFactorEiPNS_14AssemblerFixupE(%"class.Ice::X8664::TargetX8664Traits::Address"*, i32, i32, i32, i32, %"class.Ice::AssemblerFixup"*) unnamed_addr #1 comdat align 2 {
  %7 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %9, align 1
  %10 = icmp eq %"class.Ice::AssemblerFixup"* %5, null
  %11 = icmp eq i32 %4, 0
  %12 = and i1 %11, %10
  %13 = xor i1 %12, true
  %14 = and i32 %1, 7
  %15 = icmp eq i32 %14, 5
  %16 = or i1 %15, %13
  br i1 %16, label %33, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 0
  store i8 4, i8* %18, align 1
  %19 = shl i32 %3, 6
  %20 = shl i32 %2, 3
  %21 = and i32 %20, 56
  %22 = or i32 %19, %14
  %23 = or i32 %22, %21
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %1, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = and i32 %2, 8
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i8 0, i8 66
  %32 = or i8 %31, %28
  store i8 %32, i8* %8, align 8
  store i8 2, i8* %9, align 1
  br label %73

33:                                               ; preds = %6
  %34 = add i32 %4, 128
  %35 = icmp ult i32 %34, 256
  %36 = and i1 %10, %35
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 0
  br i1 %36, label %38, label %55

38:                                               ; preds = %33
  store i8 68, i8* %37, align 1
  %39 = shl i32 %3, 6
  %40 = shl i32 %2, 3
  %41 = and i32 %40, 56
  %42 = or i32 %39, %14
  %43 = or i32 %42, %41
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 1
  store i8 %44, i8* %45, align 1
  %46 = and i32 %1, 8
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, i8 0, i8 65
  %49 = and i32 %2, 8
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i8 0, i8 66
  %52 = or i8 %51, %48
  store i8 %52, i8* %8, align 8
  %53 = trunc i32 %4 to i8
  store i8 3, i8* %9, align 1
  %54 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 2
  store i8 %53, i8* %54, align 1
  br label %73

55:                                               ; preds = %33
  store i8 -124, i8* %37, align 1
  %56 = shl i32 %3, 6
  %57 = shl i32 %2, 3
  %58 = and i32 %57, 56
  %59 = or i32 %56, %14
  %60 = or i32 %59, %58
  %61 = trunc i32 %60 to i8
  %62 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 1
  store i8 %61, i8* %62, align 1
  %63 = and i32 %1, 8
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, i8 0, i8 65
  %66 = and i32 %2, 8
  %67 = icmp eq i32 %66, 0
  %68 = select i1 %67, i8 0, i8 66
  %69 = or i8 %68, %65
  store i8 %69, i8* %8, align 8
  %70 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 2
  %71 = bitcast i8* %70 to i32*
  store i32 %4, i32* %71, align 1
  store i8 6, i8* %9, align 1
  br i1 %10, label %73, label %72

72:                                               ; preds = %55
  store %"class.Ice::AssemblerFixup"* %5, %"class.Ice::AssemblerFixup"** %7, align 8
  br label %73

73:                                               ; preds = %55, %38, %72, %17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866417TargetX8664Traits7AddressC2ENS_8RegX866411GPRRegisterEiPNS_14AssemblerFixupE(%"class.Ice::X8664::TargetX8664Traits::Address"*, i32, i32, %"class.Ice::AssemblerFixup"*) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %5, align 8
  %6 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %7, align 1
  %8 = icmp eq %"class.Ice::AssemblerFixup"* %3, null
  %9 = icmp eq i32 %2, 0
  %10 = and i1 %9, %8
  %11 = and i32 %1, 7
  br i1 %10, label %12, label %23

12:                                               ; preds = %4
  %13 = icmp eq i32 %11, 5
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = trunc i32 %11 to i8
  %16 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 0
  store i8 %15, i8* %16, align 1
  %17 = and i32 %1, 8
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i8 0, i8 65
  store i8 %19, i8* %6, align 8
  store i8 1, i8* %7, align 1
  %20 = icmp eq i32 %11, 4
  br i1 %20, label %21, label %60

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 1
  store i8 36, i8* %22, align 1
  store i8 %19, i8* %6, align 8
  store i8 2, i8* %7, align 1
  br label %60

23:                                               ; preds = %4, %12
  %24 = phi i32 [ 5, %12 ], [ %11, %4 ]
  %25 = add i32 %2, 128
  %26 = icmp ult i32 %25, 256
  %27 = and i1 %8, %26
  %28 = trunc i32 %24 to i8
  br i1 %27, label %29, label %44

29:                                               ; preds = %23
  %30 = or i8 %28, 64
  %31 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 0
  store i8 %30, i8* %31, align 1
  %32 = and i32 %1, 8
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, i8 0, i8 65
  store i8 %34, i8* %6, align 8
  store i8 1, i8* %7, align 1
  %35 = icmp eq i32 %24, 4
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 1
  store i8 36, i8* %37, align 1
  store i8 %34, i8* %6, align 8
  store i8 2, i8* %7, align 1
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i8 [ 2, %36 ], [ 1, %29 ]
  %40 = trunc i32 %2 to i8
  %41 = add nuw nsw i8 %39, 1
  store i8 %41, i8* %7, align 1
  %42 = zext i8 %39 to i64
  %43 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 %42
  store i8 %40, i8* %43, align 1
  br label %60

44:                                               ; preds = %23
  %45 = or i8 %28, -128
  %46 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 0
  store i8 %45, i8* %46, align 1
  %47 = and i32 %1, 8
  %48 = icmp eq i32 %47, 0
  %49 = select i1 %48, i8 0, i8 65
  store i8 %49, i8* %6, align 8
  store i8 1, i8* %7, align 1
  %50 = icmp eq i32 %24, 4
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 1
  store i8 36, i8* %52, align 1
  store i8 %49, i8* %6, align 8
  store i8 2, i8* %7, align 1
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i64 [ 2, %51 ], [ 1, %44 ]
  %55 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %0, i64 0, i32 0, i32 2, i64 %54
  %56 = bitcast i8* %55 to i32*
  store i32 %2, i32* %56, align 1
  %57 = load i8, i8* %7, align 1
  %58 = add i8 %57, 4
  store i8 %58, i8* %7, align 1
  br i1 %8, label %60, label %59

59:                                               ; preds = %53
  store %"class.Ice::AssemblerFixup"* %3, %"class.Ice::AssemblerFixup"** %5, align 8
  br label %60

60:                                               ; preds = %53, %38, %59, %14, %21
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { %"class.Ice::AssemblerFixup"*, i64 } @_ZNK3Ice5X866417TargetX8664Traits13VariableSplit12toAsmAddressEPKNS_3CfgE(%"class.Ice::X8664::TargetX8664Traits::VariableSplit"* nocapture readonly, %"class.Ice::Cfg"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.Ice::X8664::TargetX8664Traits::Address", align 8
  %4 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 23, i32 0, i32 0, i32 0
  %5 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::VariableSplit", %"class.Ice::X8664::TargetX8664Traits::VariableSplit"* %0, i64 0, i32 1
  %7 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, align 8
  %8 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::VariableSplit", %"class.Ice::X8664::TargetX8664Traits::VariableSplit"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  %13 = select i1 %12, i32 4, i32 0
  %14 = add nsw i32 %13, %9
  %15 = bitcast %"class.Ice::TargetLowering"* %5 to i32 (%"class.Ice::TargetLowering"*)***
  %16 = load i32 (%"class.Ice::TargetLowering"*)**, i32 (%"class.Ice::TargetLowering"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.Ice::TargetLowering"*)*, i32 (%"class.Ice::TargetLowering"*)** %16, i64 14
  %18 = load i32 (%"class.Ice::TargetLowering"*)*, i32 (%"class.Ice::TargetLowering"*)** %17, align 8
  %19 = tail call i32 %18(%"class.Ice::TargetLowering"* %5) #11
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [84 x i32], [84 x i32]* @_ZZN3Ice5X866417TargetX8664Traits13getEncodedGPRENS_7RegNumTEE7GPRRegs, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  call void @_ZN3Ice5X866417TargetX8664Traits7AddressC2ENS_8RegX866411GPRRegisterEiPNS_14AssemblerFixupE(%"class.Ice::X8664::TargetX8664Traits::Address"* nonnull %3, i32 %22, i32 %14, %"class.Ice::AssemblerFixup"* null) #13
  %23 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 0
  %24 = load %"class.Ice::AssemblerFixup"*, %"class.Ice::AssemblerFixup"** %23, align 8
  %25 = insertvalue { %"class.Ice::AssemblerFixup"*, i64 } undef, %"class.Ice::AssemblerFixup"* %24, 0
  %26 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = insertvalue { %"class.Ice::AssemblerFixup"*, i64 } %25, i64 %28, 1
  ret { %"class.Ice::AssemblerFixup"*, i64 } %29
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice5X866417TargetX8664Traits13VariableSplit4emitEPKNS_3CfgE(%"class.Ice::X8664::TargetX8664Traits::VariableSplit"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice5X866417TargetX8664Traits13VariableSplit4dumpEPKNS_3CfgERN4llvm11raw_ostreamE(%"class.Ice::X8664::TargetX8664Traits::VariableSplit"* nocapture, %"class.Ice::Cfg"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5bswapENS_4TypeENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32) #1 comdat align 2 {
  %4 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %5 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %8, %"class.Ice::AssemblerBuffer"** %6, align 8
  store i64 0, i64* %7, align 8
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %8) #11
  br label %15

15:                                               ; preds = %3, %14
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %16 = bitcast i64* %9 to i8**
  %17 = load i8*, i8** %16, align 8
  store i8 15, i8* %17, align 1
  %18 = load i64, i64* %9, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %9, align 8
  %20 = trunc i32 %2 to i8
  %21 = or i8 %20, -56
  %22 = inttoptr i64 %19 to i8*
  store i8 %21, i8* %22, align 1
  %23 = load i64, i64* %9, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %9, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3negENS_4TypeENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32) #1 comdat align 2 {
  %4 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %5 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %8, %"class.Ice::AssemblerBuffer"** %6, align 8
  store i64 0, i64* %7, align 8
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %8) #11
  br label %15

15:                                               ; preds = %3, %14
  %16 = icmp eq i32 %1, 3
  br i1 %16, label %17, label %22

17:                                               ; preds = %15
  %18 = bitcast i64* %9 to i8**
  %19 = load i8*, i8** %18, align 8
  store i8 102, i8* %19, align 1
  %20 = load i64, i64* %9, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %9, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 0, i32 3, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %25

22:                                               ; preds = %15
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %23 = icmp eq i32 %1, 2
  %24 = bitcast i64* %9 to i8**
  br i1 %23, label %27, label %25

25:                                               ; preds = %22, %17
  %26 = phi i8** [ %18, %17 ], [ %24, %22 ]
  br label %27

27:                                               ; preds = %22, %25
  %28 = phi i8** [ %26, %25 ], [ %24, %22 ]
  %29 = phi i8 [ -9, %25 ], [ -10, %22 ]
  %30 = load i8*, i8** %28, align 8
  store i8 %29, i8* %30, align 1
  %31 = load i64, i64* %9, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %9, align 8
  %33 = inttoptr i64 %32 to i8*
  %34 = trunc i32 %2 to i8
  %35 = and i8 %34, -9
  %36 = add i8 %35, -40
  store i8 %36, i8* %33, align 1
  %37 = load i64, i64* %9, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %9, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3negENS_4TypeERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %4 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %5 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %8, %"class.Ice::AssemblerBuffer"** %6, align 8
  store i64 0, i64* %7, align 8
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %8) #11
  br label %15

15:                                               ; preds = %3, %14
  %16 = icmp eq i32 %1, 3
  br i1 %16, label %17, label %22

17:                                               ; preds = %15
  %18 = bitcast i64* %9 to i8**
  %19 = load i8*, i8** %18, align 8
  store i8 102, i8* %19, align 1
  %20 = load i64, i64* %9, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %9, align 8
  br label %22

22:                                               ; preds = %17, %15
  %23 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = bitcast i64* %9 to i8**
  br i1 %25, label %31, label %27

27:                                               ; preds = %22
  %28 = load i8*, i8** %26, align 8
  store i8 103, i8* %28, align 1
  %29 = load i64, i64* %9, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %9, align 8
  br label %31

31:                                               ; preds = %22, %27
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %32 = icmp eq i32 %1, 2
  %33 = load i8*, i8** %26, align 8
  %34 = select i1 %32, i8 -10, i8 -9
  store i8 %34, i8* %33, align 1
  %35 = load i64, i64* %9, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %9, align 8
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %37, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsfENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  %18 = bitcast i64* %10 to i8**
  br i1 %17, label %19, label %23

19:                                               ; preds = %16
  %20 = load i8*, i8** %18, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %16, %19
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = load i8*, i8** %18, align 8
  store i8 15, i8* %24, align 1
  %25 = load i64, i64* %10, align 8
  %26 = add i64 %25, 1
  store i64 %26, i64* %10, align 8
  %27 = inttoptr i64 %26 to i8*
  store i8 -68, i8* %27, align 1
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = and i32 %3, 247
  %31 = shl i32 %2, 3
  %32 = and i32 %31, 184
  %33 = add nuw nsw i32 %32, 192
  %34 = add nuw nsw i32 %33, %30
  %35 = trunc i32 %34 to i8
  %36 = inttoptr i64 %29 to i8*
  store i8 %35, i8* %36, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsfENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = load i8*, i8** %27, align 8
  store i8 15, i8* %33, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  store i8 -68, i8* %36, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsrENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  %18 = bitcast i64* %10 to i8**
  br i1 %17, label %19, label %23

19:                                               ; preds = %16
  %20 = load i8*, i8** %18, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %16, %19
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = load i8*, i8** %18, align 8
  store i8 15, i8* %24, align 1
  %25 = load i64, i64* %10, align 8
  %26 = add i64 %25, 1
  store i64 %26, i64* %10, align 8
  %27 = inttoptr i64 %26 to i8*
  store i8 -67, i8* %27, align 1
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = and i32 %3, 247
  %31 = shl i32 %2, 3
  %32 = and i32 %31, 184
  %33 = add nuw nsw i32 %32, 192
  %34 = add nuw nsw i32 %33, %30
  %35 = trunc i32 %34 to i8
  %36 = inttoptr i64 %29 to i8*
  store i8 %35, i8* %36, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3bsrENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = load i8*, i8** %27, align 8
  store i8 15, i8* %33, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  store i8 -67, i8* %36, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3leaENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = load i8*, i8** %27, align 8
  store i8 -115, i8* %33, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = and i32 %2, 247
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %36, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %37, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movsxENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 5, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %17 = add i32 %1, -1
  %18 = icmp ult i32 %17, 3
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  br i1 %18, label %21, label %27

21:                                               ; preds = %16
  %22 = icmp eq i32 %17, 2
  store i8 15, i8* %20, align 1
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %10, align 8
  %25 = select i1 %22, i8 -65, i8 -66
  %26 = inttoptr i64 %24 to i8*
  store i8 %25, i8* %26, align 1
  br label %28

27:                                               ; preds = %16
  store i8 99, i8* %20, align 1
  br label %28

28:                                               ; preds = %27, %21
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = and i32 %3, 247
  %32 = shl i32 %2, 3
  %33 = and i32 %32, 184
  %34 = add nuw nsw i32 %33, 192
  %35 = add nuw nsw i32 %34, %31
  %36 = trunc i32 %35 to i8
  %37 = inttoptr i64 %30 to i8*
  store i8 %36, i8* %37, align 1
  %38 = load i64, i64* %10, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movsxENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = add i32 %1, -1
  %18 = icmp ult i32 %17, 2
  %19 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = bitcast i64* %10 to i8**
  br i1 %21, label %27, label %23

23:                                               ; preds = %16
  %24 = load i8*, i8** %22, align 8
  store i8 103, i8* %24, align 1
  %25 = load i64, i64* %10, align 8
  %26 = add i64 %25, 1
  store i64 %26, i64* %10, align 8
  br label %27

27:                                               ; preds = %16, %23
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 5, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %28 = icmp ult i32 %17, 3
  %29 = load i8*, i8** %22, align 8
  br i1 %28, label %30, label %35

30:                                               ; preds = %27
  store i8 15, i8* %29, align 1
  %31 = load i64, i64* %10, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %10, align 8
  %33 = select i1 %18, i8 -66, i8 -65
  %34 = inttoptr i64 %32 to i8*
  store i8 %33, i8* %34, align 1
  br label %36

35:                                               ; preds = %27
  store i8 99, i8* %29, align 1
  br label %36

36:                                               ; preds = %35, %30
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movzxENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = icmp eq i32 %1, 4
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3movENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 4, i32 %2, i32 %3) #13
  br label %39

8:                                                ; preds = %4
  %9 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %12, %"class.Ice::AssemblerBuffer"** %10, align 8
  store i64 0, i64* %11, align 8
  %13 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %8
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %12) #11
  br label %19

19:                                               ; preds = %8, %18
  %20 = add i32 %1, -1
  %21 = icmp ult i32 %20, 2
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 4, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %22 = bitcast i64* %13 to i8**
  %23 = load i8*, i8** %22, align 8
  store i8 15, i8* %23, align 1
  %24 = load i64, i64* %13, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %13, align 8
  %26 = select i1 %21, i8 -74, i8 -73
  %27 = inttoptr i64 %25 to i8*
  store i8 %26, i8* %27, align 1
  %28 = load i64, i64* %13, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %13, align 8
  %30 = and i32 %3, 247
  %31 = shl i32 %2, 3
  %32 = and i32 %31, 184
  %33 = add nuw nsw i32 %32, 192
  %34 = add nuw nsw i32 %33, %30
  %35 = trunc i32 %34 to i8
  %36 = inttoptr i64 %29 to i8*
  store i8 %35, i8* %36, align 1
  %37 = load i64, i64* %13, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %13, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  br label %39

39:                                               ; preds = %19, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5movzxENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = icmp eq i32 %1, 4
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3movENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 4, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %3) #13
  br label %40

8:                                                ; preds = %4
  %9 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %12, %"class.Ice::AssemblerBuffer"** %10, align 8
  store i64 0, i64* %11, align 8
  %13 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %8
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %12) #11
  br label %19

19:                                               ; preds = %8, %18
  %20 = add i32 %1, -1
  %21 = icmp ult i32 %20, 2
  %22 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = bitcast i64* %13 to i8**
  br i1 %24, label %30, label %26

26:                                               ; preds = %19
  %27 = load i8*, i8** %25, align 8
  store i8 103, i8* %27, align 1
  %28 = load i64, i64* %13, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %13, align 8
  br label %30

30:                                               ; preds = %19, %26
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 4, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %31 = load i8*, i8** %25, align 8
  store i8 15, i8* %31, align 1
  %32 = load i64, i64* %13, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %13, align 8
  %34 = select i1 %21, i8 -74, i8 -73
  %35 = inttoptr i64 %33 to i8*
  store i8 %34, i8* %35, align 1
  %36 = load i64, i64* %13, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %13, align 8
  %38 = and i32 %2, 247
  %39 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %38, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %39, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  br label %40

40:                                               ; preds = %30, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4sqrtENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = tail call zeroext i1 @_ZN3Ice20isScalarFloatingTypeENS_4TypeE(i32 %1) #11
  br i1 %17, label %18, label %25

18:                                               ; preds = %16
  %19 = icmp eq i32 %1, 6
  %20 = select i1 %19, i8 -13, i8 -14
  %21 = bitcast i64* %10 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 %20, i8* %22, align 1
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %18, %16
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %3, 8
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i8 0, i8 65
  %31 = select i1 %27, i8 0, i8 68
  %32 = or i8 %30, %31
  %33 = icmp eq i8 %32, 0
  %34 = bitcast i64* %10 to i8**
  %35 = load i8*, i8** %34, align 8
  br i1 %33, label %40, label %36

36:                                               ; preds = %25
  store i8 %32, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = inttoptr i64 %38 to i8*
  br label %40

40:                                               ; preds = %25, %36
  %41 = phi i8* [ %39, %36 ], [ %35, %25 ]
  store i8 15, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = inttoptr i64 %43 to i8*
  store i8 81, i8* %44, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  %47 = and i32 %3, 247
  %48 = shl i32 %2, 3
  %49 = and i32 %48, 184
  %50 = add nuw nsw i32 %49, 192
  %51 = add nuw nsw i32 %50, %47
  %52 = trunc i32 %51 to i8
  %53 = inttoptr i64 %46 to i8*
  store i8 %52, i8* %53, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4sqrtENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = tail call zeroext i1 @_ZN3Ice20isScalarFloatingTypeENS_4TypeE(i32 %1) #11
  br i1 %17, label %18, label %25

18:                                               ; preds = %16
  %19 = icmp eq i32 %1, 6
  %20 = select i1 %19, i8 -13, i8 -14
  %21 = bitcast i64* %10 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 %20, i8* %22, align 1
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %18, %16
  %26 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast i64* %10 to i8**
  %31 = load i8*, i8** %30, align 8
  store i8 103, i8* %31, align 1
  %32 = load i64, i64* %10, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %10, align 8
  br label %34

34:                                               ; preds = %25, %29
  %35 = and i32 %2, 8
  %36 = icmp eq i32 %35, 0
  %37 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %37, label %47, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %40 = load i8, i8* %39, align 8
  %41 = and i8 %40, 66
  %42 = icmp eq i8 %41, 66
  %43 = select i1 %42, i8 66, i8 0
  %44 = and i8 %40, 65
  %45 = icmp eq i8 %44, 65
  %46 = select i1 %45, i8 65, i8 0
  br label %47

47:                                               ; preds = %34, %38
  %48 = phi i8 [ %43, %38 ], [ 0, %34 ]
  %49 = phi i8 [ %46, %38 ], [ 0, %34 ]
  %50 = select i1 %36, i8 0, i8 68
  %51 = or i8 %48, %50
  %52 = or i8 %51, %49
  %53 = icmp eq i8 %52, 0
  %54 = bitcast i64* %10 to i8**
  %55 = load i8*, i8** %54, align 8
  br i1 %53, label %60, label %56

56:                                               ; preds = %47
  store i8 %52, i8* %55, align 1
  %57 = load i64, i64* %10, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %10, align 8
  %59 = inttoptr i64 %58 to i8*
  br label %60

60:                                               ; preds = %47, %56
  %61 = phi i8* [ %59, %56 ], [ %55, %47 ]
  store i8 15, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = inttoptr i64 %63 to i8*
  store i8 81, i8* %64, align 1
  %65 = load i64, i64* %10, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %10, align 8
  %67 = and i32 %2, 247
  %68 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %67, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %68, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3addENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3adcENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3AndENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE2OrENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sbbENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3subENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3XorENS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16) %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3rolENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %6 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 3
  %10 = trunc i32 %2 to i8
  %11 = and i8 %10, 7
  %12 = or i8 %11, -64
  %13 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 2, i64 0
  store i8 %12, i8* %13, align 1
  %14 = and i32 %2, 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i8 0, i8 65
  store i8 %16, i8* %8, align 8
  store i8 1, i8* %9, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeERKNS2_7OperandENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %5, i32 %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3rolENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sarENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %6 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 3
  %10 = trunc i32 %2 to i8
  %11 = and i8 %10, 7
  %12 = or i8 %11, -64
  %13 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 2, i64 0
  store i8 %12, i8* %13, align 1
  %14 = and i32 %2, 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i8 0, i8 65
  store i8 %16, i8* %8, align 8
  store i8 1, i8* %9, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeERKNS2_7OperandENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 7, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %5, i32 %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3sarENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 7, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shlENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %6 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 3
  %10 = trunc i32 %2 to i8
  %11 = and i8 %10, 7
  %12 = or i8 %11, -64
  %13 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 2, i64 0
  store i8 %12, i8* %13, align 1
  %14 = and i32 %2, 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i8 0, i8 65
  store i8 %16, i8* %8, align 8
  store i8 1, i8* %9, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeERKNS2_7OperandENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 4, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %5, i32 %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shlENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 4, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shrENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %6 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 3
  %10 = trunc i32 %2 to i8
  %11 = and i8 %10, 7
  %12 = or i8 %11, -64
  %13 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %5, i64 0, i32 2, i64 0
  store i8 %12, i8* %13, align 1
  %14 = and i32 %2, 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i8 0, i8 65
  store i8 %16, i8* %8, align 8
  store i8 1, i8* %9, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeERKNS2_7OperandENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 5, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %5, i32 %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3shrENS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 5, i32 %1, i32 %2, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addssENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %3, 8
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i8 0, i8 65
  %31 = select i1 %27, i8 0, i8 68
  %32 = or i8 %30, %31
  %33 = icmp eq i8 %32, 0
  %34 = inttoptr i64 %25 to i8*
  br i1 %33, label %39, label %35

35:                                               ; preds = %20
  store i8 %32, i8* %34, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = inttoptr i64 %37 to i8*
  br label %39

39:                                               ; preds = %20, %35
  %40 = phi i8* [ %34, %20 ], [ %38, %35 ]
  store i8 15, i8* %40, align 1
  %41 = load i64, i64* %10, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %10, align 8
  %43 = inttoptr i64 %42 to i8*
  store i8 88, i8* %43, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = and i32 %3, 247
  %47 = shl i32 %2, 3
  %48 = and i32 %47, 184
  %49 = add nuw nsw i32 %48, 192
  %50 = add nuw nsw i32 %49, %46
  %51 = trunc i32 %50 to i8
  %52 = inttoptr i64 %45 to i8*
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = inttoptr i64 %25 to i8*
  br i1 %28, label %34, label %30

30:                                               ; preds = %20
  store i8 103, i8* %29, align 1
  %31 = load i64, i64* %10, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %10, align 8
  %33 = inttoptr i64 %32 to i8*
  br label %34

34:                                               ; preds = %20, %30
  %35 = phi i8* [ %29, %20 ], [ %33, %30 ]
  %36 = and i32 %2, 8
  %37 = icmp eq i32 %36, 0
  %38 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %41 = load i8, i8* %40, align 8
  %42 = and i8 %41, 66
  %43 = icmp eq i8 %42, 66
  %44 = select i1 %43, i8 66, i8 0
  %45 = and i8 %41, 65
  %46 = icmp eq i8 %45, 65
  %47 = select i1 %46, i8 65, i8 0
  br label %48

48:                                               ; preds = %34, %39
  %49 = phi i8 [ %44, %39 ], [ 0, %34 ]
  %50 = phi i8 [ %47, %39 ], [ 0, %34 ]
  %51 = select i1 %37, i8 0, i8 68
  %52 = or i8 %49, %51
  %53 = or i8 %52, %50
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %48
  store i8 %53, i8* %35, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = inttoptr i64 %57 to i8*
  br label %59

59:                                               ; preds = %48, %55
  %60 = phi i8* [ %35, %48 ], [ %58, %55 ]
  store i8 15, i8* %60, align 1
  %61 = load i64, i64* %10, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %10, align 8
  %63 = inttoptr i64 %62 to i8*
  store i8 88, i8* %63, align 1
  %64 = load i64, i64* %10, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %10, align 8
  %66 = and i32 %2, 247
  %67 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %66, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %67, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = and i32 %2, 8
  %18 = icmp eq i32 %17, 0
  %19 = and i32 %3, 8
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i8 0, i8 65
  %22 = select i1 %18, i8 0, i8 68
  %23 = or i8 %21, %22
  %24 = icmp eq i8 %23, 0
  %25 = bitcast i64* %10 to i8**
  %26 = load i8*, i8** %25, align 8
  br i1 %24, label %31, label %27

27:                                               ; preds = %16
  store i8 %23, i8* %26, align 1
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = inttoptr i64 %29 to i8*
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi i8* [ %30, %27 ], [ %26, %16 ]
  store i8 15, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  store i8 88, i8* %35, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = and i32 %3, 247
  %39 = shl i32 %2, 3
  %40 = and i32 %39, 184
  %41 = add nuw nsw i32 %40, 192
  %42 = add nuw nsw i32 %41, %38
  %43 = trunc i32 %42 to i8
  %44 = inttoptr i64 %37 to i8*
  store i8 %43, i8* %44, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5addpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast i64* %10 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 103, i8* %22, align 1
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %16, %20
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 66
  %33 = icmp eq i8 %32, 66
  %34 = select i1 %33, i8 66, i8 0
  %35 = and i8 %31, 65
  %36 = icmp eq i8 %35, 65
  %37 = select i1 %36, i8 65, i8 0
  br label %38

38:                                               ; preds = %25, %29
  %39 = phi i8 [ %34, %29 ], [ 0, %25 ]
  %40 = phi i8 [ %37, %29 ], [ 0, %25 ]
  %41 = select i1 %27, i8 0, i8 68
  %42 = or i8 %39, %41
  %43 = or i8 %42, %40
  %44 = icmp eq i8 %43, 0
  %45 = bitcast i64* %10 to i8**
  %46 = load i8*, i8** %45, align 8
  br i1 %44, label %51, label %47

47:                                               ; preds = %38
  store i8 %43, i8* %46, align 1
  %48 = load i64, i64* %10, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %10, align 8
  %50 = inttoptr i64 %49 to i8*
  br label %51

51:                                               ; preds = %38, %47
  %52 = phi i8* [ %50, %47 ], [ %46, %38 ]
  store i8 15, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  %55 = inttoptr i64 %54 to i8*
  store i8 88, i8* %55, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = and i32 %2, 247
  %59 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %58, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %59, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divssENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %3, 8
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i8 0, i8 65
  %31 = select i1 %27, i8 0, i8 68
  %32 = or i8 %30, %31
  %33 = icmp eq i8 %32, 0
  %34 = inttoptr i64 %25 to i8*
  br i1 %33, label %39, label %35

35:                                               ; preds = %20
  store i8 %32, i8* %34, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = inttoptr i64 %37 to i8*
  br label %39

39:                                               ; preds = %20, %35
  %40 = phi i8* [ %34, %20 ], [ %38, %35 ]
  store i8 15, i8* %40, align 1
  %41 = load i64, i64* %10, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %10, align 8
  %43 = inttoptr i64 %42 to i8*
  store i8 94, i8* %43, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = and i32 %3, 247
  %47 = shl i32 %2, 3
  %48 = and i32 %47, 184
  %49 = add nuw nsw i32 %48, 192
  %50 = add nuw nsw i32 %49, %46
  %51 = trunc i32 %50 to i8
  %52 = inttoptr i64 %45 to i8*
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = inttoptr i64 %25 to i8*
  br i1 %28, label %34, label %30

30:                                               ; preds = %20
  store i8 103, i8* %29, align 1
  %31 = load i64, i64* %10, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %10, align 8
  %33 = inttoptr i64 %32 to i8*
  br label %34

34:                                               ; preds = %20, %30
  %35 = phi i8* [ %29, %20 ], [ %33, %30 ]
  %36 = and i32 %2, 8
  %37 = icmp eq i32 %36, 0
  %38 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %41 = load i8, i8* %40, align 8
  %42 = and i8 %41, 66
  %43 = icmp eq i8 %42, 66
  %44 = select i1 %43, i8 66, i8 0
  %45 = and i8 %41, 65
  %46 = icmp eq i8 %45, 65
  %47 = select i1 %46, i8 65, i8 0
  br label %48

48:                                               ; preds = %34, %39
  %49 = phi i8 [ %44, %39 ], [ 0, %34 ]
  %50 = phi i8 [ %47, %39 ], [ 0, %34 ]
  %51 = select i1 %37, i8 0, i8 68
  %52 = or i8 %49, %51
  %53 = or i8 %52, %50
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %48
  store i8 %53, i8* %35, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = inttoptr i64 %57 to i8*
  br label %59

59:                                               ; preds = %48, %55
  %60 = phi i8* [ %35, %48 ], [ %58, %55 ]
  store i8 15, i8* %60, align 1
  %61 = load i64, i64* %10, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %10, align 8
  %63 = inttoptr i64 %62 to i8*
  store i8 94, i8* %63, align 1
  %64 = load i64, i64* %10, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %10, align 8
  %66 = and i32 %2, 247
  %67 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %66, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %67, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = and i32 %2, 8
  %18 = icmp eq i32 %17, 0
  %19 = and i32 %3, 8
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i8 0, i8 65
  %22 = select i1 %18, i8 0, i8 68
  %23 = or i8 %21, %22
  %24 = icmp eq i8 %23, 0
  %25 = bitcast i64* %10 to i8**
  %26 = load i8*, i8** %25, align 8
  br i1 %24, label %31, label %27

27:                                               ; preds = %16
  store i8 %23, i8* %26, align 1
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = inttoptr i64 %29 to i8*
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi i8* [ %30, %27 ], [ %26, %16 ]
  store i8 15, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  store i8 94, i8* %35, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = and i32 %3, 247
  %39 = shl i32 %2, 3
  %40 = and i32 %39, 184
  %41 = add nuw nsw i32 %40, 192
  %42 = add nuw nsw i32 %41, %38
  %43 = trunc i32 %42 to i8
  %44 = inttoptr i64 %37 to i8*
  store i8 %43, i8* %44, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5divpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast i64* %10 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 103, i8* %22, align 1
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %16, %20
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 66
  %33 = icmp eq i8 %32, 66
  %34 = select i1 %33, i8 66, i8 0
  %35 = and i8 %31, 65
  %36 = icmp eq i8 %35, 65
  %37 = select i1 %36, i8 65, i8 0
  br label %38

38:                                               ; preds = %25, %29
  %39 = phi i8 [ %34, %29 ], [ 0, %25 ]
  %40 = phi i8 [ %37, %29 ], [ 0, %25 ]
  %41 = select i1 %27, i8 0, i8 68
  %42 = or i8 %39, %41
  %43 = or i8 %42, %40
  %44 = icmp eq i8 %43, 0
  %45 = bitcast i64* %10 to i8**
  %46 = load i8*, i8** %45, align 8
  br i1 %44, label %51, label %47

47:                                               ; preds = %38
  store i8 %43, i8* %46, align 1
  %48 = load i64, i64* %10, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %10, align 8
  %50 = inttoptr i64 %49 to i8*
  br label %51

51:                                               ; preds = %38, %47
  %52 = phi i8* [ %50, %47 ], [ %46, %38 ]
  store i8 15, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  %55 = inttoptr i64 %54 to i8*
  store i8 94, i8* %55, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = and i32 %2, 247
  %59 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %58, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %59, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulssENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %3, 8
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i8 0, i8 65
  %31 = select i1 %27, i8 0, i8 68
  %32 = or i8 %30, %31
  %33 = icmp eq i8 %32, 0
  %34 = inttoptr i64 %25 to i8*
  br i1 %33, label %39, label %35

35:                                               ; preds = %20
  store i8 %32, i8* %34, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = inttoptr i64 %37 to i8*
  br label %39

39:                                               ; preds = %20, %35
  %40 = phi i8* [ %34, %20 ], [ %38, %35 ]
  store i8 15, i8* %40, align 1
  %41 = load i64, i64* %10, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %10, align 8
  %43 = inttoptr i64 %42 to i8*
  store i8 89, i8* %43, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = and i32 %3, 247
  %47 = shl i32 %2, 3
  %48 = and i32 %47, 184
  %49 = add nuw nsw i32 %48, 192
  %50 = add nuw nsw i32 %49, %46
  %51 = trunc i32 %50 to i8
  %52 = inttoptr i64 %45 to i8*
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = inttoptr i64 %25 to i8*
  br i1 %28, label %34, label %30

30:                                               ; preds = %20
  store i8 103, i8* %29, align 1
  %31 = load i64, i64* %10, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %10, align 8
  %33 = inttoptr i64 %32 to i8*
  br label %34

34:                                               ; preds = %20, %30
  %35 = phi i8* [ %29, %20 ], [ %33, %30 ]
  %36 = and i32 %2, 8
  %37 = icmp eq i32 %36, 0
  %38 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %41 = load i8, i8* %40, align 8
  %42 = and i8 %41, 66
  %43 = icmp eq i8 %42, 66
  %44 = select i1 %43, i8 66, i8 0
  %45 = and i8 %41, 65
  %46 = icmp eq i8 %45, 65
  %47 = select i1 %46, i8 65, i8 0
  br label %48

48:                                               ; preds = %34, %39
  %49 = phi i8 [ %44, %39 ], [ 0, %34 ]
  %50 = phi i8 [ %47, %39 ], [ 0, %34 ]
  %51 = select i1 %37, i8 0, i8 68
  %52 = or i8 %49, %51
  %53 = or i8 %52, %50
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %48
  store i8 %53, i8* %35, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = inttoptr i64 %57 to i8*
  br label %59

59:                                               ; preds = %48, %55
  %60 = phi i8* [ %35, %48 ], [ %58, %55 ]
  store i8 15, i8* %60, align 1
  %61 = load i64, i64* %10, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %10, align 8
  %63 = inttoptr i64 %62 to i8*
  store i8 89, i8* %63, align 1
  %64 = load i64, i64* %10, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %10, align 8
  %66 = and i32 %2, 247
  %67 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %66, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %67, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = and i32 %2, 8
  %18 = icmp eq i32 %17, 0
  %19 = and i32 %3, 8
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i8 0, i8 65
  %22 = select i1 %18, i8 0, i8 68
  %23 = or i8 %21, %22
  %24 = icmp eq i8 %23, 0
  %25 = bitcast i64* %10 to i8**
  %26 = load i8*, i8** %25, align 8
  br i1 %24, label %31, label %27

27:                                               ; preds = %16
  store i8 %23, i8* %26, align 1
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = inttoptr i64 %29 to i8*
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi i8* [ %30, %27 ], [ %26, %16 ]
  store i8 15, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  store i8 89, i8* %35, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = and i32 %3, 247
  %39 = shl i32 %2, 3
  %40 = and i32 %39, 184
  %41 = add nuw nsw i32 %40, 192
  %42 = add nuw nsw i32 %41, %38
  %43 = trunc i32 %42 to i8
  %44 = inttoptr i64 %37 to i8*
  store i8 %43, i8* %44, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5mulpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast i64* %10 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 103, i8* %22, align 1
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %16, %20
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 66
  %33 = icmp eq i8 %32, 66
  %34 = select i1 %33, i8 66, i8 0
  %35 = and i8 %31, 65
  %36 = icmp eq i8 %35, 65
  %37 = select i1 %36, i8 65, i8 0
  br label %38

38:                                               ; preds = %25, %29
  %39 = phi i8 [ %34, %29 ], [ 0, %25 ]
  %40 = phi i8 [ %37, %29 ], [ 0, %25 ]
  %41 = select i1 %27, i8 0, i8 68
  %42 = or i8 %39, %41
  %43 = or i8 %42, %40
  %44 = icmp eq i8 %43, 0
  %45 = bitcast i64* %10 to i8**
  %46 = load i8*, i8** %45, align 8
  br i1 %44, label %51, label %47

47:                                               ; preds = %38
  store i8 %43, i8* %46, align 1
  %48 = load i64, i64* %10, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %10, align 8
  %50 = inttoptr i64 %49 to i8*
  br label %51

51:                                               ; preds = %38, %47
  %52 = phi i8* [ %50, %47 ], [ %46, %38 ]
  store i8 15, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  %55 = inttoptr i64 %54 to i8*
  store i8 89, i8* %55, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = and i32 %2, 247
  %59 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %58, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %59, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4paddENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  %42 = icmp eq i32 %1, 3
  %43 = select i1 %42, i8 -3, i8 -2
  %44 = icmp eq i32 %1, 2
  %45 = select i1 %44, i8 -4, i8 %43
  store i8 %45, i8* %41, align 1
  %46 = load i64, i64* %10, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %10, align 8
  %48 = inttoptr i64 %47 to i8*
  %49 = and i32 %3, 247
  %50 = shl i32 %2, 3
  %51 = and i32 %50, 184
  %52 = add nuw nsw i32 %51, 192
  %53 = add nuw nsw i32 %52, %49
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %48, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4paddENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  %62 = icmp eq i32 %1, 3
  %63 = select i1 %62, i8 -3, i8 -2
  %64 = icmp eq i32 %1, 2
  %65 = select i1 %64, i8 -4, i8 %63
  store i8 %65, i8* %61, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %10, align 8
  %68 = and i32 %2, 247
  %69 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %68, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %69, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5paddsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  switch i32 %1, label %48 [
    i32 2, label %43
    i32 3, label %42
  ]

42:                                               ; preds = %37
  br label %43

43:                                               ; preds = %37, %42
  %44 = phi i8 [ -19, %42 ], [ -20, %37 ]
  store i8 %44, i8* %41, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  %47 = inttoptr i64 %46 to i8*
  br label %48

48:                                               ; preds = %43, %37
  %49 = phi i8* [ %41, %37 ], [ %47, %43 ]
  %50 = and i32 %3, 247
  %51 = shl i32 %2, 3
  %52 = and i32 %51, 184
  %53 = add nuw nsw i32 %52, 192
  %54 = add nuw nsw i32 %53, %50
  %55 = trunc i32 %54 to i8
  store i8 %55, i8* %49, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5paddsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  switch i32 %1, label %67 [
    i32 2, label %63
    i32 3, label %62
  ]

62:                                               ; preds = %57
  br label %63

63:                                               ; preds = %57, %62
  %64 = phi i8 [ -19, %62 ], [ -20, %57 ]
  store i8 %64, i8* %61, align 1
  %65 = load i64, i64* %10, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %10, align 8
  br label %67

67:                                               ; preds = %63, %57
  %68 = and i32 %2, 247
  %69 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %68, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %69, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6paddusENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  switch i32 %1, label %48 [
    i32 2, label %43
    i32 3, label %42
  ]

42:                                               ; preds = %37
  br label %43

43:                                               ; preds = %37, %42
  %44 = phi i8 [ -35, %42 ], [ -36, %37 ]
  store i8 %44, i8* %41, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  %47 = inttoptr i64 %46 to i8*
  br label %48

48:                                               ; preds = %43, %37
  %49 = phi i8* [ %41, %37 ], [ %47, %43 ]
  %50 = and i32 %3, 247
  %51 = shl i32 %2, 3
  %52 = and i32 %51, 184
  %53 = add nuw nsw i32 %52, 192
  %54 = add nuw nsw i32 %53, %50
  %55 = trunc i32 %54 to i8
  store i8 %55, i8* %49, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6paddusENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  switch i32 %1, label %67 [
    i32 2, label %63
    i32 3, label %62
  ]

62:                                               ; preds = %57
  br label %63

63:                                               ; preds = %57, %62
  %64 = phi i8 [ -35, %62 ], [ -36, %57 ]
  store i8 %64, i8* %61, align 1
  %65 = load i64, i64* %10, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %10, align 8
  br label %67

67:                                               ; preds = %63, %57
  %68 = and i32 %2, 247
  %69 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %68, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %69, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pandENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8 -37, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = and i32 %3, 247
  %45 = shl i32 %2, 3
  %46 = and i32 %45, 184
  %47 = add nuw nsw i32 %46, 192
  %48 = add nuw nsw i32 %47, %44
  %49 = trunc i32 %48 to i8
  %50 = inttoptr i64 %43 to i8*
  store i8 %49, i8* %50, align 1
  %51 = load i64, i64* %10, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pandENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  store i8 -37, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = and i32 %2, 247
  %65 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %64, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %65, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pandnENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8 -33, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = and i32 %3, 247
  %45 = shl i32 %2, 3
  %46 = and i32 %45, 184
  %47 = add nuw nsw i32 %46, 192
  %48 = add nuw nsw i32 %47, %44
  %49 = trunc i32 %48 to i8
  %50 = inttoptr i64 %43 to i8*
  store i8 %49, i8* %50, align 1
  %51 = load i64, i64* %10, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pandnENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  store i8 -33, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = and i32 %2, 247
  %65 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %64, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %65, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpeqENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  %42 = icmp eq i32 %1, 3
  %43 = select i1 %42, i8 117, i8 118
  %44 = icmp eq i32 %1, 2
  %45 = select i1 %44, i8 116, i8 %43
  store i8 %45, i8* %41, align 1
  %46 = load i64, i64* %10, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %10, align 8
  %48 = inttoptr i64 %47 to i8*
  %49 = and i32 %3, 247
  %50 = shl i32 %2, 3
  %51 = and i32 %50, 184
  %52 = add nuw nsw i32 %51, 192
  %53 = add nuw nsw i32 %52, %49
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %48, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpeqENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  %62 = icmp eq i32 %1, 3
  %63 = select i1 %62, i8 117, i8 118
  %64 = icmp eq i32 %1, 2
  %65 = select i1 %64, i8 116, i8 %63
  store i8 %65, i8* %61, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %10, align 8
  %68 = and i32 %2, 247
  %69 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %68, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %69, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpgtENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  %42 = icmp eq i32 %1, 3
  %43 = select i1 %42, i8 101, i8 102
  %44 = icmp eq i32 %1, 2
  %45 = select i1 %44, i8 100, i8 %43
  store i8 %45, i8* %41, align 1
  %46 = load i64, i64* %10, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %10, align 8
  %48 = inttoptr i64 %47 to i8*
  %49 = and i32 %3, 247
  %50 = shl i32 %2, 3
  %51 = and i32 %50, 184
  %52 = add nuw nsw i32 %51, 192
  %53 = add nuw nsw i32 %52, %49
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %48, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pcmpgtENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  %62 = icmp eq i32 %1, 3
  %63 = select i1 %62, i8 101, i8 102
  %64 = icmp eq i32 %1, 2
  %65 = select i1 %64, i8 100, i8 %63
  store i8 %65, i8* %61, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %10, align 8
  %68 = and i32 %2, 247
  %69 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %68, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %69, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pmullENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = icmp eq i32 %1, 3
  %42 = inttoptr i64 %40 to i8*
  br i1 %41, label %43, label %44

43:                                               ; preds = %37
  store i8 -43, i8* %42, align 1
  br label %48

44:                                               ; preds = %37
  store i8 56, i8* %42, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  %47 = inttoptr i64 %46 to i8*
  store i8 64, i8* %47, align 1
  br label %48

48:                                               ; preds = %44, %43
  %49 = load i64, i64* %10, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %10, align 8
  %51 = and i32 %3, 247
  %52 = shl i32 %2, 3
  %53 = and i32 %52, 184
  %54 = add nuw nsw i32 %53, 192
  %55 = add nuw nsw i32 %54, %51
  %56 = trunc i32 %55 to i8
  %57 = inttoptr i64 %50 to i8*
  store i8 %56, i8* %57, align 1
  %58 = load i64, i64* %10, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5pmullENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = icmp eq i32 %1, 3
  %62 = inttoptr i64 %60 to i8*
  br i1 %61, label %63, label %64

63:                                               ; preds = %57
  store i8 -43, i8* %62, align 1
  br label %68

64:                                               ; preds = %57
  store i8 56, i8* %62, align 1
  %65 = load i64, i64* %10, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %10, align 8
  %67 = inttoptr i64 %66 to i8*
  store i8 64, i8* %67, align 1
  br label %68

68:                                               ; preds = %64, %63
  %69 = load i64, i64* %10, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %10, align 8
  %71 = and i32 %2, 247
  %72 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %71, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %72, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pmulhwENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8 -27, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = and i32 %3, 247
  %45 = shl i32 %2, 3
  %46 = and i32 %45, 184
  %47 = add nuw nsw i32 %46, 192
  %48 = add nuw nsw i32 %47, %44
  %49 = trunc i32 %48 to i8
  %50 = inttoptr i64 %43 to i8*
  store i8 %49, i8* %50, align 1
  %51 = load i64, i64* %10, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pmulhwENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  store i8 -27, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = and i32 %2, 247
  %65 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %64, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %65, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmulhuwENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8 -28, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = and i32 %3, 247
  %45 = shl i32 %2, 3
  %46 = and i32 %45, 184
  %47 = add nuw nsw i32 %46, 192
  %48 = add nuw nsw i32 %47, %44
  %49 = trunc i32 %48 to i8
  %50 = inttoptr i64 %43 to i8*
  store i8 %49, i8* %50, align 1
  %51 = load i64, i64* %10, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmulhuwENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  store i8 -28, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = and i32 %2, 247
  %65 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %64, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %65, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmaddwdENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8 -11, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = and i32 %3, 247
  %45 = shl i32 %2, 3
  %46 = and i32 %45, 184
  %47 = add nuw nsw i32 %46, 192
  %48 = add nuw nsw i32 %47, %44
  %49 = trunc i32 %48 to i8
  %50 = inttoptr i64 %43 to i8*
  store i8 %49, i8* %50, align 1
  %51 = load i64, i64* %10, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmaddwdENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  store i8 -11, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = and i32 %2, 247
  %65 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %64, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %65, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmuludqENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8 -12, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = and i32 %3, 247
  %45 = shl i32 %2, 3
  %46 = and i32 %45, 184
  %47 = add nuw nsw i32 %46, 192
  %48 = add nuw nsw i32 %47, %44
  %49 = trunc i32 %48 to i8
  %50 = inttoptr i64 %43 to i8*
  store i8 %49, i8* %50, align 1
  %51 = load i64, i64* %10, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7pmuludqENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  store i8 -12, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = and i32 %2, 247
  %65 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %64, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %65, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3porENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8 -21, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = and i32 %3, 247
  %45 = shl i32 %2, 3
  %46 = and i32 %45, 184
  %47 = add nuw nsw i32 %46, 192
  %48 = add nuw nsw i32 %47, %44
  %49 = trunc i32 %48 to i8
  %50 = inttoptr i64 %43 to i8*
  store i8 %49, i8* %50, align 1
  %51 = load i64, i64* %10, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3porENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  store i8 -21, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = and i32 %2, 247
  %65 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %64, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %65, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psubENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  %42 = icmp eq i32 %1, 3
  %43 = select i1 %42, i8 -7, i8 -6
  %44 = icmp eq i32 %1, 2
  %45 = select i1 %44, i8 -8, i8 %43
  store i8 %45, i8* %41, align 1
  %46 = load i64, i64* %10, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %10, align 8
  %48 = inttoptr i64 %47 to i8*
  %49 = and i32 %3, 247
  %50 = shl i32 %2, 3
  %51 = and i32 %50, 184
  %52 = add nuw nsw i32 %51, 192
  %53 = add nuw nsw i32 %52, %49
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %48, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psubENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  %62 = icmp eq i32 %1, 3
  %63 = select i1 %62, i8 -7, i8 -6
  %64 = icmp eq i32 %1, 2
  %65 = select i1 %64, i8 -8, i8 %63
  store i8 %65, i8* %61, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %10, align 8
  %68 = and i32 %2, 247
  %69 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %68, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %69, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5psubsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  switch i32 %1, label %48 [
    i32 2, label %43
    i32 3, label %42
  ]

42:                                               ; preds = %37
  br label %43

43:                                               ; preds = %37, %42
  %44 = phi i8 [ -23, %42 ], [ -24, %37 ]
  store i8 %44, i8* %41, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  %47 = inttoptr i64 %46 to i8*
  br label %48

48:                                               ; preds = %43, %37
  %49 = phi i8* [ %41, %37 ], [ %47, %43 ]
  %50 = and i32 %3, 247
  %51 = shl i32 %2, 3
  %52 = and i32 %51, 184
  %53 = add nuw nsw i32 %52, 192
  %54 = add nuw nsw i32 %53, %50
  %55 = trunc i32 %54 to i8
  store i8 %55, i8* %49, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5psubsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  switch i32 %1, label %67 [
    i32 2, label %63
    i32 3, label %62
  ]

62:                                               ; preds = %57
  br label %63

63:                                               ; preds = %57, %62
  %64 = phi i8 [ -23, %62 ], [ -24, %57 ]
  store i8 %64, i8* %61, align 1
  %65 = load i64, i64* %10, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %10, align 8
  br label %67

67:                                               ; preds = %63, %57
  %68 = and i32 %2, 247
  %69 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %68, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %69, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6psubusENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  switch i32 %1, label %48 [
    i32 2, label %43
    i32 3, label %42
  ]

42:                                               ; preds = %37
  br label %43

43:                                               ; preds = %37, %42
  %44 = phi i8 [ -39, %42 ], [ -40, %37 ]
  store i8 %44, i8* %41, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  %47 = inttoptr i64 %46 to i8*
  br label %48

48:                                               ; preds = %43, %37
  %49 = phi i8* [ %41, %37 ], [ %47, %43 ]
  %50 = and i32 %3, 247
  %51 = shl i32 %2, 3
  %52 = and i32 %51, 184
  %53 = add nuw nsw i32 %52, 192
  %54 = add nuw nsw i32 %53, %50
  %55 = trunc i32 %54 to i8
  store i8 %55, i8* %49, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6psubusENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  switch i32 %1, label %67 [
    i32 2, label %63
    i32 3, label %62
  ]

62:                                               ; preds = %57
  br label %63

63:                                               ; preds = %57, %62
  %64 = phi i8 [ -39, %62 ], [ -40, %57 ]
  store i8 %64, i8* %61, align 1
  %65 = load i64, i64* %10, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %10, align 8
  br label %67

67:                                               ; preds = %63, %57
  %68 = and i32 %2, 247
  %69 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %68, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %69, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pxorENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8 -17, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = and i32 %3, 247
  %45 = shl i32 %2, 3
  %46 = and i32 %45, 184
  %47 = add nuw nsw i32 %46, 192
  %48 = add nuw nsw i32 %47, %44
  %49 = trunc i32 %48 to i8
  %50 = inttoptr i64 %43 to i8*
  store i8 %49, i8* %50, align 1
  %51 = load i64, i64* %10, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4pxorENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  store i8 -17, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = and i32 %2, 247
  %65 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %64, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %65, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subssENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %3, 8
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i8 0, i8 65
  %31 = select i1 %27, i8 0, i8 68
  %32 = or i8 %30, %31
  %33 = icmp eq i8 %32, 0
  %34 = inttoptr i64 %25 to i8*
  br i1 %33, label %39, label %35

35:                                               ; preds = %20
  store i8 %32, i8* %34, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = inttoptr i64 %37 to i8*
  br label %39

39:                                               ; preds = %20, %35
  %40 = phi i8* [ %34, %20 ], [ %38, %35 ]
  store i8 15, i8* %40, align 1
  %41 = load i64, i64* %10, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %10, align 8
  %43 = inttoptr i64 %42 to i8*
  store i8 92, i8* %43, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = and i32 %3, 247
  %47 = shl i32 %2, 3
  %48 = and i32 %47, 184
  %49 = add nuw nsw i32 %48, 192
  %50 = add nuw nsw i32 %49, %46
  %51 = trunc i32 %50 to i8
  %52 = inttoptr i64 %45 to i8*
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = inttoptr i64 %25 to i8*
  br i1 %28, label %34, label %30

30:                                               ; preds = %20
  store i8 103, i8* %29, align 1
  %31 = load i64, i64* %10, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %10, align 8
  %33 = inttoptr i64 %32 to i8*
  br label %34

34:                                               ; preds = %20, %30
  %35 = phi i8* [ %29, %20 ], [ %33, %30 ]
  %36 = and i32 %2, 8
  %37 = icmp eq i32 %36, 0
  %38 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %41 = load i8, i8* %40, align 8
  %42 = and i8 %41, 66
  %43 = icmp eq i8 %42, 66
  %44 = select i1 %43, i8 66, i8 0
  %45 = and i8 %41, 65
  %46 = icmp eq i8 %45, 65
  %47 = select i1 %46, i8 65, i8 0
  br label %48

48:                                               ; preds = %34, %39
  %49 = phi i8 [ %44, %39 ], [ 0, %34 ]
  %50 = phi i8 [ %47, %39 ], [ 0, %34 ]
  %51 = select i1 %37, i8 0, i8 68
  %52 = or i8 %49, %51
  %53 = or i8 %52, %50
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %48
  store i8 %53, i8* %35, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = inttoptr i64 %57 to i8*
  br label %59

59:                                               ; preds = %48, %55
  %60 = phi i8* [ %35, %48 ], [ %58, %55 ]
  store i8 15, i8* %60, align 1
  %61 = load i64, i64* %10, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %10, align 8
  %63 = inttoptr i64 %62 to i8*
  store i8 92, i8* %63, align 1
  %64 = load i64, i64* %10, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %10, align 8
  %66 = and i32 %2, 247
  %67 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %66, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %67, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = and i32 %2, 8
  %18 = icmp eq i32 %17, 0
  %19 = and i32 %3, 8
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i8 0, i8 65
  %22 = select i1 %18, i8 0, i8 68
  %23 = or i8 %21, %22
  %24 = icmp eq i8 %23, 0
  %25 = bitcast i64* %10 to i8**
  %26 = load i8*, i8** %25, align 8
  br i1 %24, label %31, label %27

27:                                               ; preds = %16
  store i8 %23, i8* %26, align 1
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = inttoptr i64 %29 to i8*
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi i8* [ %30, %27 ], [ %26, %16 ]
  store i8 15, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  store i8 92, i8* %35, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = and i32 %3, 247
  %39 = shl i32 %2, 3
  %40 = and i32 %39, 184
  %41 = add nuw nsw i32 %40, 192
  %42 = add nuw nsw i32 %41, %38
  %43 = trunc i32 %42 to i8
  %44 = inttoptr i64 %37 to i8*
  store i8 %43, i8* %44, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5subpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast i64* %10 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 103, i8* %22, align 1
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %16, %20
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 66
  %33 = icmp eq i8 %32, 66
  %34 = select i1 %33, i8 66, i8 0
  %35 = and i8 %31, 65
  %36 = icmp eq i8 %35, 65
  %37 = select i1 %36, i8 65, i8 0
  br label %38

38:                                               ; preds = %25, %29
  %39 = phi i8 [ %34, %29 ], [ 0, %25 ]
  %40 = phi i8 [ %37, %29 ], [ 0, %25 ]
  %41 = select i1 %27, i8 0, i8 68
  %42 = or i8 %39, %41
  %43 = or i8 %42, %40
  %44 = icmp eq i8 %43, 0
  %45 = bitcast i64* %10 to i8**
  %46 = load i8*, i8** %45, align 8
  br i1 %44, label %51, label %47

47:                                               ; preds = %38
  store i8 %43, i8* %46, align 1
  %48 = load i64, i64* %10, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %10, align 8
  %50 = inttoptr i64 %49 to i8*
  br label %51

51:                                               ; preds = %38, %47
  %52 = phi i8* [ %50, %47 ], [ %46, %38 ]
  store i8 15, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  %55 = inttoptr i64 %54 to i8*
  store i8 92, i8* %55, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = and i32 %2, 247
  %59 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %58, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %59, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6andnpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = bitcast i64* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br i1 %31, label %38, label %34

34:                                               ; preds = %23
  store i8 %30, i8* %33, align 1
  %35 = load i64, i64* %10, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %10, align 8
  %37 = inttoptr i64 %36 to i8*
  br label %38

38:                                               ; preds = %23, %34
  %39 = phi i8* [ %37, %34 ], [ %33, %23 ]
  store i8 15, i8* %39, align 1
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %10, align 8
  %42 = inttoptr i64 %41 to i8*
  store i8 85, i8* %42, align 1
  %43 = load i64, i64* %10, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %10, align 8
  %45 = and i32 %3, 247
  %46 = shl i32 %2, 3
  %47 = and i32 %46, 184
  %48 = add nuw nsw i32 %47, 192
  %49 = add nuw nsw i32 %48, %45
  %50 = trunc i32 %49 to i8
  %51 = inttoptr i64 %44 to i8*
  store i8 %50, i8* %51, align 1
  %52 = load i64, i64* %10, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6andnpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  %33 = and i32 %2, 8
  %34 = icmp eq i32 %33, 0
  %35 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 66
  %40 = icmp eq i8 %39, 66
  %41 = select i1 %40, i8 66, i8 0
  %42 = and i8 %38, 65
  %43 = icmp eq i8 %42, 65
  %44 = select i1 %43, i8 65, i8 0
  br label %45

45:                                               ; preds = %32, %36
  %46 = phi i8 [ %41, %36 ], [ 0, %32 ]
  %47 = phi i8 [ %44, %36 ], [ 0, %32 ]
  %48 = select i1 %34, i8 0, i8 68
  %49 = or i8 %46, %48
  %50 = or i8 %49, %47
  %51 = icmp eq i8 %50, 0
  %52 = bitcast i64* %10 to i8**
  %53 = load i8*, i8** %52, align 8
  br i1 %51, label %58, label %54

54:                                               ; preds = %45
  store i8 %50, i8* %53, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %45, %54
  %59 = phi i8* [ %57, %54 ], [ %53, %45 ]
  store i8 15, i8* %59, align 1
  %60 = load i64, i64* %10, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %10, align 8
  %62 = inttoptr i64 %61 to i8*
  store i8 85, i8* %62, align 1
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %10, align 8
  %65 = and i32 %2, 247
  %66 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %65, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %66, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5andpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = bitcast i64* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br i1 %31, label %38, label %34

34:                                               ; preds = %23
  store i8 %30, i8* %33, align 1
  %35 = load i64, i64* %10, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %10, align 8
  %37 = inttoptr i64 %36 to i8*
  br label %38

38:                                               ; preds = %23, %34
  %39 = phi i8* [ %37, %34 ], [ %33, %23 ]
  store i8 15, i8* %39, align 1
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %10, align 8
  %42 = inttoptr i64 %41 to i8*
  store i8 84, i8* %42, align 1
  %43 = load i64, i64* %10, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %10, align 8
  %45 = and i32 %3, 247
  %46 = shl i32 %2, 3
  %47 = and i32 %46, 184
  %48 = add nuw nsw i32 %47, 192
  %49 = add nuw nsw i32 %48, %45
  %50 = trunc i32 %49 to i8
  %51 = inttoptr i64 %44 to i8*
  store i8 %50, i8* %51, align 1
  %52 = load i64, i64* %10, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5andpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  %33 = and i32 %2, 8
  %34 = icmp eq i32 %33, 0
  %35 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 66
  %40 = icmp eq i8 %39, 66
  %41 = select i1 %40, i8 66, i8 0
  %42 = and i8 %38, 65
  %43 = icmp eq i8 %42, 65
  %44 = select i1 %43, i8 65, i8 0
  br label %45

45:                                               ; preds = %32, %36
  %46 = phi i8 [ %41, %36 ], [ 0, %32 ]
  %47 = phi i8 [ %44, %36 ], [ 0, %32 ]
  %48 = select i1 %34, i8 0, i8 68
  %49 = or i8 %46, %48
  %50 = or i8 %49, %47
  %51 = icmp eq i8 %50, 0
  %52 = bitcast i64* %10 to i8**
  %53 = load i8*, i8** %52, align 8
  br i1 %51, label %58, label %54

54:                                               ; preds = %45
  store i8 %50, i8* %53, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %45, %54
  %59 = phi i8* [ %57, %54 ], [ %53, %45 ]
  store i8 15, i8* %59, align 1
  %60 = load i64, i64* %10, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %10, align 8
  %62 = inttoptr i64 %61 to i8*
  store i8 84, i8* %62, align 1
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %10, align 8
  %65 = and i32 %2, 247
  %66 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %65, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %66, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxssENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %3, 8
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i8 0, i8 65
  %31 = select i1 %27, i8 0, i8 68
  %32 = or i8 %30, %31
  %33 = icmp eq i8 %32, 0
  %34 = inttoptr i64 %25 to i8*
  br i1 %33, label %39, label %35

35:                                               ; preds = %20
  store i8 %32, i8* %34, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = inttoptr i64 %37 to i8*
  br label %39

39:                                               ; preds = %20, %35
  %40 = phi i8* [ %34, %20 ], [ %38, %35 ]
  store i8 15, i8* %40, align 1
  %41 = load i64, i64* %10, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %10, align 8
  %43 = inttoptr i64 %42 to i8*
  store i8 95, i8* %43, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = and i32 %3, 247
  %47 = shl i32 %2, 3
  %48 = and i32 %47, 184
  %49 = add nuw nsw i32 %48, 192
  %50 = add nuw nsw i32 %49, %46
  %51 = trunc i32 %50 to i8
  %52 = inttoptr i64 %45 to i8*
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = inttoptr i64 %25 to i8*
  br i1 %28, label %34, label %30

30:                                               ; preds = %20
  store i8 103, i8* %29, align 1
  %31 = load i64, i64* %10, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %10, align 8
  %33 = inttoptr i64 %32 to i8*
  br label %34

34:                                               ; preds = %20, %30
  %35 = phi i8* [ %29, %20 ], [ %33, %30 ]
  %36 = and i32 %2, 8
  %37 = icmp eq i32 %36, 0
  %38 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %41 = load i8, i8* %40, align 8
  %42 = and i8 %41, 66
  %43 = icmp eq i8 %42, 66
  %44 = select i1 %43, i8 66, i8 0
  %45 = and i8 %41, 65
  %46 = icmp eq i8 %45, 65
  %47 = select i1 %46, i8 65, i8 0
  br label %48

48:                                               ; preds = %34, %39
  %49 = phi i8 [ %44, %39 ], [ 0, %34 ]
  %50 = phi i8 [ %47, %39 ], [ 0, %34 ]
  %51 = select i1 %37, i8 0, i8 68
  %52 = or i8 %49, %51
  %53 = or i8 %52, %50
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %48
  store i8 %53, i8* %35, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = inttoptr i64 %57 to i8*
  br label %59

59:                                               ; preds = %48, %55
  %60 = phi i8* [ %35, %48 ], [ %58, %55 ]
  store i8 15, i8* %60, align 1
  %61 = load i64, i64* %10, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %10, align 8
  %63 = inttoptr i64 %62 to i8*
  store i8 95, i8* %63, align 1
  %64 = load i64, i64* %10, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %10, align 8
  %66 = and i32 %2, 247
  %67 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %66, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %67, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minssENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = and i32 %2, 8
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %3, 8
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i8 0, i8 65
  %31 = select i1 %27, i8 0, i8 68
  %32 = or i8 %30, %31
  %33 = icmp eq i8 %32, 0
  %34 = inttoptr i64 %25 to i8*
  br i1 %33, label %39, label %35

35:                                               ; preds = %20
  store i8 %32, i8* %34, align 1
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = inttoptr i64 %37 to i8*
  br label %39

39:                                               ; preds = %20, %35
  %40 = phi i8* [ %34, %20 ], [ %38, %35 ]
  store i8 15, i8* %40, align 1
  %41 = load i64, i64* %10, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %10, align 8
  %43 = inttoptr i64 %42 to i8*
  store i8 93, i8* %43, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = and i32 %3, 247
  %47 = shl i32 %2, 3
  %48 = and i32 %47, 184
  %49 = add nuw nsw i32 %48, 192
  %50 = add nuw nsw i32 %49, %46
  %51 = trunc i32 %50 to i8
  %52 = inttoptr i64 %45 to i8*
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = icmp eq i32 %1, 6
  %23 = select i1 %22, i8 -13, i8 -14
  store i8 %23, i8* %21, align 1
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = inttoptr i64 %25 to i8*
  br i1 %28, label %34, label %30

30:                                               ; preds = %20
  store i8 103, i8* %29, align 1
  %31 = load i64, i64* %10, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %10, align 8
  %33 = inttoptr i64 %32 to i8*
  br label %34

34:                                               ; preds = %20, %30
  %35 = phi i8* [ %29, %20 ], [ %33, %30 ]
  %36 = and i32 %2, 8
  %37 = icmp eq i32 %36, 0
  %38 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %41 = load i8, i8* %40, align 8
  %42 = and i8 %41, 66
  %43 = icmp eq i8 %42, 66
  %44 = select i1 %43, i8 66, i8 0
  %45 = and i8 %41, 65
  %46 = icmp eq i8 %45, 65
  %47 = select i1 %46, i8 65, i8 0
  br label %48

48:                                               ; preds = %34, %39
  %49 = phi i8 [ %44, %39 ], [ 0, %34 ]
  %50 = phi i8 [ %47, %39 ], [ 0, %34 ]
  %51 = select i1 %37, i8 0, i8 68
  %52 = or i8 %49, %51
  %53 = or i8 %52, %50
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %48
  store i8 %53, i8* %35, align 1
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %10, align 8
  %58 = inttoptr i64 %57 to i8*
  br label %59

59:                                               ; preds = %48, %55
  %60 = phi i8* [ %35, %48 ], [ %58, %55 ]
  store i8 15, i8* %60, align 1
  %61 = load i64, i64* %10, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %10, align 8
  %63 = inttoptr i64 %62 to i8*
  store i8 93, i8* %63, align 1
  %64 = load i64, i64* %10, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %10, align 8
  %66 = and i32 %2, 247
  %67 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %66, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %67, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = bitcast i64* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br i1 %31, label %38, label %34

34:                                               ; preds = %23
  store i8 %30, i8* %33, align 1
  %35 = load i64, i64* %10, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %10, align 8
  %37 = inttoptr i64 %36 to i8*
  br label %38

38:                                               ; preds = %23, %34
  %39 = phi i8* [ %37, %34 ], [ %33, %23 ]
  store i8 15, i8* %39, align 1
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %10, align 8
  %42 = inttoptr i64 %41 to i8*
  store i8 95, i8* %42, align 1
  %43 = load i64, i64* %10, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %10, align 8
  %45 = and i32 %3, 247
  %46 = shl i32 %2, 3
  %47 = and i32 %46, 184
  %48 = add nuw nsw i32 %47, 192
  %49 = add nuw nsw i32 %48, %45
  %50 = trunc i32 %49 to i8
  %51 = inttoptr i64 %44 to i8*
  store i8 %50, i8* %51, align 1
  %52 = load i64, i64* %10, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5maxpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  %33 = and i32 %2, 8
  %34 = icmp eq i32 %33, 0
  %35 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 66
  %40 = icmp eq i8 %39, 66
  %41 = select i1 %40, i8 66, i8 0
  %42 = and i8 %38, 65
  %43 = icmp eq i8 %42, 65
  %44 = select i1 %43, i8 65, i8 0
  br label %45

45:                                               ; preds = %32, %36
  %46 = phi i8 [ %41, %36 ], [ 0, %32 ]
  %47 = phi i8 [ %44, %36 ], [ 0, %32 ]
  %48 = select i1 %34, i8 0, i8 68
  %49 = or i8 %46, %48
  %50 = or i8 %49, %47
  %51 = icmp eq i8 %50, 0
  %52 = bitcast i64* %10 to i8**
  %53 = load i8*, i8** %52, align 8
  br i1 %51, label %58, label %54

54:                                               ; preds = %45
  store i8 %50, i8* %53, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %45, %54
  %59 = phi i8* [ %57, %54 ], [ %53, %45 ]
  store i8 15, i8* %59, align 1
  %60 = load i64, i64* %10, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %10, align 8
  %62 = inttoptr i64 %61 to i8*
  store i8 95, i8* %62, align 1
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %10, align 8
  %65 = and i32 %2, 247
  %66 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %65, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %66, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = bitcast i64* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br i1 %31, label %38, label %34

34:                                               ; preds = %23
  store i8 %30, i8* %33, align 1
  %35 = load i64, i64* %10, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %10, align 8
  %37 = inttoptr i64 %36 to i8*
  br label %38

38:                                               ; preds = %23, %34
  %39 = phi i8* [ %37, %34 ], [ %33, %23 ]
  store i8 15, i8* %39, align 1
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %10, align 8
  %42 = inttoptr i64 %41 to i8*
  store i8 93, i8* %42, align 1
  %43 = load i64, i64* %10, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %10, align 8
  %45 = and i32 %3, 247
  %46 = shl i32 %2, 3
  %47 = and i32 %46, 184
  %48 = add nuw nsw i32 %47, 192
  %49 = add nuw nsw i32 %48, %45
  %50 = trunc i32 %49 to i8
  %51 = inttoptr i64 %44 to i8*
  store i8 %50, i8* %51, align 1
  %52 = load i64, i64* %10, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5minpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  %33 = and i32 %2, 8
  %34 = icmp eq i32 %33, 0
  %35 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 66
  %40 = icmp eq i8 %39, 66
  %41 = select i1 %40, i8 66, i8 0
  %42 = and i8 %38, 65
  %43 = icmp eq i8 %42, 65
  %44 = select i1 %43, i8 65, i8 0
  br label %45

45:                                               ; preds = %32, %36
  %46 = phi i8 [ %41, %36 ], [ 0, %32 ]
  %47 = phi i8 [ %44, %36 ], [ 0, %32 ]
  %48 = select i1 %34, i8 0, i8 68
  %49 = or i8 %46, %48
  %50 = or i8 %49, %47
  %51 = icmp eq i8 %50, 0
  %52 = bitcast i64* %10 to i8**
  %53 = load i8*, i8** %52, align 8
  br i1 %51, label %58, label %54

54:                                               ; preds = %45
  store i8 %50, i8* %53, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %45, %54
  %59 = phi i8* [ %57, %54 ], [ %53, %45 ]
  store i8 15, i8* %59, align 1
  %60 = load i64, i64* %10, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %10, align 8
  %62 = inttoptr i64 %61 to i8*
  store i8 93, i8* %62, align 1
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %10, align 8
  %65 = and i32 %2, 247
  %66 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %65, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %66, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4orpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = bitcast i64* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br i1 %31, label %38, label %34

34:                                               ; preds = %23
  store i8 %30, i8* %33, align 1
  %35 = load i64, i64* %10, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %10, align 8
  %37 = inttoptr i64 %36 to i8*
  br label %38

38:                                               ; preds = %23, %34
  %39 = phi i8* [ %37, %34 ], [ %33, %23 ]
  store i8 15, i8* %39, align 1
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %10, align 8
  %42 = inttoptr i64 %41 to i8*
  store i8 86, i8* %42, align 1
  %43 = load i64, i64* %10, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %10, align 8
  %45 = and i32 %3, 247
  %46 = shl i32 %2, 3
  %47 = and i32 %46, 184
  %48 = add nuw nsw i32 %47, 192
  %49 = add nuw nsw i32 %48, %45
  %50 = trunc i32 %49 to i8
  %51 = inttoptr i64 %44 to i8*
  store i8 %50, i8* %51, align 1
  %52 = load i64, i64* %10, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4orpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  %33 = and i32 %2, 8
  %34 = icmp eq i32 %33, 0
  %35 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 66
  %40 = icmp eq i8 %39, 66
  %41 = select i1 %40, i8 66, i8 0
  %42 = and i8 %38, 65
  %43 = icmp eq i8 %42, 65
  %44 = select i1 %43, i8 65, i8 0
  br label %45

45:                                               ; preds = %32, %36
  %46 = phi i8 [ %41, %36 ], [ 0, %32 ]
  %47 = phi i8 [ %44, %36 ], [ 0, %32 ]
  %48 = select i1 %34, i8 0, i8 68
  %49 = or i8 %46, %48
  %50 = or i8 %49, %47
  %51 = icmp eq i8 %50, 0
  %52 = bitcast i64* %10 to i8**
  %53 = load i8*, i8** %52, align 8
  br i1 %51, label %58, label %54

54:                                               ; preds = %45
  store i8 %50, i8* %53, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %45, %54
  %59 = phi i8* [ %57, %54 ], [ %53, %45 ]
  store i8 15, i8* %59, align 1
  %60 = load i64, i64* %10, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %10, align 8
  %62 = inttoptr i64 %61 to i8*
  store i8 86, i8* %62, align 1
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %10, align 8
  %65 = and i32 %2, 247
  %66 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %65, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %66, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5xorpsENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = bitcast i64* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br i1 %31, label %38, label %34

34:                                               ; preds = %23
  store i8 %30, i8* %33, align 1
  %35 = load i64, i64* %10, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %10, align 8
  %37 = inttoptr i64 %36 to i8*
  br label %38

38:                                               ; preds = %23, %34
  %39 = phi i8* [ %37, %34 ], [ %33, %23 ]
  store i8 15, i8* %39, align 1
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %10, align 8
  %42 = inttoptr i64 %41 to i8*
  store i8 87, i8* %42, align 1
  %43 = load i64, i64* %10, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %10, align 8
  %45 = and i32 %3, 247
  %46 = shl i32 %2, 3
  %47 = and i32 %46, 184
  %48 = add nuw nsw i32 %47, 192
  %49 = add nuw nsw i32 %48, %45
  %50 = trunc i32 %49 to i8
  %51 = inttoptr i64 %44 to i8*
  store i8 %50, i8* %51, align 1
  %52 = load i64, i64* %10, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE5xorpsENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 6
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  %33 = and i32 %2, 8
  %34 = icmp eq i32 %33, 0
  %35 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 66
  %40 = icmp eq i8 %39, 66
  %41 = select i1 %40, i8 66, i8 0
  %42 = and i8 %38, 65
  %43 = icmp eq i8 %42, 65
  %44 = select i1 %43, i8 65, i8 0
  br label %45

45:                                               ; preds = %32, %36
  %46 = phi i8 [ %41, %36 ], [ 0, %32 ]
  %47 = phi i8 [ %44, %36 ], [ 0, %32 ]
  %48 = select i1 %34, i8 0, i8 68
  %49 = or i8 %46, %48
  %50 = or i8 %49, %47
  %51 = icmp eq i8 %50, 0
  %52 = bitcast i64* %10 to i8**
  %53 = load i8*, i8** %52, align 8
  br i1 %51, label %58, label %54

54:                                               ; preds = %45
  store i8 %50, i8* %53, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %45, %54
  %59 = phi i8* [ %57, %54 ], [ %53, %45 ]
  store i8 15, i8* %59, align 1
  %60 = load i64, i64* %10, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %10, align 8
  %62 = inttoptr i64 %61 to i8*
  store i8 87, i8* %62, align 1
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %10, align 8
  %65 = and i32 %2, 247
  %66 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %65, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %66, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psllENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = icmp eq i32 %1, 3
  %42 = inttoptr i64 %40 to i8*
  %43 = select i1 %41, i8 -15, i8 -14
  store i8 %43, i8* %42, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = and i32 %3, 247
  %47 = shl i32 %2, 3
  %48 = and i32 %47, 184
  %49 = add nuw nsw i32 %48, 192
  %50 = add nuw nsw i32 %49, %46
  %51 = trunc i32 %50 to i8
  %52 = inttoptr i64 %45 to i8*
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psllENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = icmp eq i32 %1, 3
  %62 = inttoptr i64 %60 to i8*
  %63 = select i1 %61, i8 -15, i8 -14
  store i8 %63, i8* %62, align 1
  %64 = load i64, i64* %10, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %10, align 8
  %66 = and i32 %2, 247
  %67 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %66, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %67, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psllENS_4TypeENS_8RegX866411XmmRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = inttoptr i64 %23 to i8*
  br i1 %25, label %31, label %27

27:                                               ; preds = %20
  store i8 65, i8* %26, align 1
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = inttoptr i64 %29 to i8*
  br label %31

31:                                               ; preds = %20, %27
  %32 = phi i8* [ %26, %20 ], [ %30, %27 ]
  store i8 15, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = icmp eq i32 %1, 3
  %36 = inttoptr i64 %34 to i8*
  %37 = select i1 %35, i8 113, i8 114
  store i8 %37, i8* %36, align 1
  %38 = load i64, i64* %10, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %10, align 8
  %40 = trunc i32 %2 to i8
  %41 = add i8 %40, -16
  %42 = and i8 %41, -9
  %43 = inttoptr i64 %39 to i8*
  store i8 %42, i8* %43, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %3, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = trunc i32 %47 to i8
  %49 = inttoptr i64 %45 to i8*
  store i8 %48, i8* %49, align 1
  %50 = load i64, i64* %10, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psraENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = icmp eq i32 %1, 3
  %42 = inttoptr i64 %40 to i8*
  %43 = select i1 %41, i8 -31, i8 -30
  store i8 %43, i8* %42, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = and i32 %3, 247
  %47 = shl i32 %2, 3
  %48 = and i32 %47, 184
  %49 = add nuw nsw i32 %48, 192
  %50 = add nuw nsw i32 %49, %46
  %51 = trunc i32 %50 to i8
  %52 = inttoptr i64 %45 to i8*
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psraENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = icmp eq i32 %1, 3
  %62 = inttoptr i64 %60 to i8*
  %63 = select i1 %61, i8 -31, i8 -30
  store i8 %63, i8* %62, align 1
  %64 = load i64, i64* %10, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %10, align 8
  %66 = and i32 %2, 247
  %67 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %66, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %67, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psraENS_4TypeENS_8RegX866411XmmRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = inttoptr i64 %23 to i8*
  br i1 %25, label %31, label %27

27:                                               ; preds = %20
  store i8 65, i8* %26, align 1
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = inttoptr i64 %29 to i8*
  br label %31

31:                                               ; preds = %20, %27
  %32 = phi i8* [ %26, %20 ], [ %30, %27 ]
  store i8 15, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = icmp eq i32 %1, 3
  %36 = inttoptr i64 %34 to i8*
  %37 = select i1 %35, i8 113, i8 114
  store i8 %37, i8* %36, align 1
  %38 = load i64, i64* %10, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %10, align 8
  %40 = trunc i32 %2 to i8
  %41 = add i8 %40, -32
  %42 = and i8 %41, -9
  %43 = inttoptr i64 %39 to i8*
  store i8 %42, i8* %43, align 1
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %10, align 8
  %46 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %3, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = trunc i32 %47 to i8
  %49 = inttoptr i64 %45 to i8*
  store i8 %48, i8* %49, align 1
  %50 = load i64, i64* %10, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psrlENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  %42 = icmp eq i32 %1, 7
  %43 = select i1 %42, i8 -45, i8 -46
  %44 = icmp eq i32 %1, 3
  %45 = select i1 %44, i8 -47, i8 %43
  store i8 %45, i8* %41, align 1
  %46 = load i64, i64* %10, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %10, align 8
  %48 = inttoptr i64 %47 to i8*
  %49 = and i32 %3, 247
  %50 = shl i32 %2, 3
  %51 = and i32 %50, 184
  %52 = add nuw nsw i32 %51, 192
  %53 = add nuw nsw i32 %52, %49
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %48, align 1
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psrlENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  %62 = icmp eq i32 %1, 7
  %63 = select i1 %62, i8 -45, i8 -46
  %64 = icmp eq i32 %1, 3
  %65 = select i1 %64, i8 -47, i8 %63
  store i8 %65, i8* %61, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %10, align 8
  %68 = and i32 %2, 247
  %69 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %68, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %69, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE4psrlENS_4TypeENS_8RegX866411XmmRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"*) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = inttoptr i64 %23 to i8*
  br i1 %25, label %31, label %27

27:                                               ; preds = %20
  store i8 65, i8* %26, align 1
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = inttoptr i64 %29 to i8*
  br label %31

31:                                               ; preds = %20, %27
  %32 = phi i8* [ %26, %20 ], [ %30, %27 ]
  store i8 15, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  %36 = icmp eq i32 %1, 7
  %37 = select i1 %36, i8 115, i8 114
  %38 = icmp eq i32 %1, 3
  %39 = select i1 %38, i8 113, i8 %37
  store i8 %39, i8* %35, align 1
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %10, align 8
  %42 = inttoptr i64 %41 to i8*
  %43 = trunc i32 %2 to i8
  %44 = add i8 %43, -48
  %45 = and i8 %44, -9
  store i8 %45, i8* %42, align 1
  %46 = load i64, i64* %10, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %10, align 8
  %48 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = trunc i32 %49 to i8
  %51 = inttoptr i64 %47 to i8*
  store i8 %50, i8* %51, align 1
  %52 = load i64, i64* %10, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pshufbENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8 56, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  %44 = inttoptr i64 %43 to i8*
  store i8 0, i8* %44, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  %47 = and i32 %3, 247
  %48 = shl i32 %2, 3
  %49 = and i32 %48, 184
  %50 = add nuw nsw i32 %49, 192
  %51 = add nuw nsw i32 %50, %47
  %52 = trunc i32 %51 to i8
  %53 = inttoptr i64 %46 to i8*
  store i8 %52, i8* %53, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6pshufbENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = inttoptr i64 %60 to i8*
  store i8 56, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = inttoptr i64 %63 to i8*
  store i8 0, i8* %64, align 1
  %65 = load i64, i64* %10, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %10, align 8
  %67 = and i32 %2, 247
  %68 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %67, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %68, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpcklENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = add i32 %1, -13
  %42 = icmp ult i32 %41, 2
  %43 = inttoptr i64 %40 to i8*
  br i1 %42, label %46, label %44

44:                                               ; preds = %37
  switch i32 %1, label %51 [
    i32 12, label %46
    i32 11, label %45
  ]

45:                                               ; preds = %44
  br label %46

46:                                               ; preds = %44, %37, %45
  %47 = phi i8 [ 96, %45 ], [ 98, %37 ], [ 97, %44 ]
  store i8 %47, i8* %43, align 1
  %48 = load i64, i64* %10, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %10, align 8
  %50 = inttoptr i64 %49 to i8*
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i8* [ %43, %44 ], [ %50, %46 ]
  %53 = and i32 %3, 247
  %54 = shl i32 %2, 3
  %55 = and i32 %54, 184
  %56 = add nuw nsw i32 %55, 192
  %57 = add nuw nsw i32 %56, %53
  %58 = trunc i32 %57 to i8
  store i8 %58, i8* %52, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpcklENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = add i32 %1, -13
  %62 = icmp ult i32 %61, 2
  %63 = inttoptr i64 %60 to i8*
  br i1 %62, label %66, label %64

64:                                               ; preds = %57
  switch i32 %1, label %70 [
    i32 12, label %66
    i32 11, label %65
  ]

65:                                               ; preds = %64
  br label %66

66:                                               ; preds = %64, %57, %65
  %67 = phi i8 [ 96, %65 ], [ 98, %57 ], [ 97, %64 ]
  store i8 %67, i8* %63, align 1
  %68 = load i64, i64* %10, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %10, align 8
  br label %70

70:                                               ; preds = %66, %64
  %71 = and i32 %2, 247
  %72 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %71, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %72, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpckhENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = add i32 %1, -13
  %42 = icmp ult i32 %41, 2
  %43 = inttoptr i64 %40 to i8*
  br i1 %42, label %46, label %44

44:                                               ; preds = %37
  switch i32 %1, label %51 [
    i32 12, label %46
    i32 11, label %45
  ]

45:                                               ; preds = %44
  br label %46

46:                                               ; preds = %44, %37, %45
  %47 = phi i8 [ 104, %45 ], [ 106, %37 ], [ 105, %44 ]
  store i8 %47, i8* %43, align 1
  %48 = load i64, i64* %10, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %10, align 8
  %50 = inttoptr i64 %49 to i8*
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i8* [ %43, %44 ], [ %50, %46 ]
  %53 = and i32 %3, 247
  %54 = shl i32 %2, 3
  %55 = and i32 %54, 184
  %56 = add nuw nsw i32 %55, 192
  %57 = add nuw nsw i32 %56, %53
  %58 = trunc i32 %57 to i8
  store i8 %58, i8* %52, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE7punpckhENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = add i32 %1, -13
  %62 = icmp ult i32 %61, 2
  %63 = inttoptr i64 %60 to i8*
  br i1 %62, label %66, label %64

64:                                               ; preds = %57
  switch i32 %1, label %70 [
    i32 12, label %66
    i32 11, label %65
  ]

65:                                               ; preds = %64
  br label %66

66:                                               ; preds = %64, %57, %65
  %67 = phi i8 [ 104, %65 ], [ 106, %57 ], [ 105, %64 ]
  store i8 %67, i8* %63, align 1
  %68 = load i64, i64* %10, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %10, align 8
  br label %70

70:                                               ; preds = %66, %64
  %71 = and i32 %2, 247
  %72 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %71, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %72, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packssENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = add i32 %1, -13
  %42 = icmp ult i32 %41, 2
  %43 = inttoptr i64 %40 to i8*
  br i1 %42, label %46, label %44

44:                                               ; preds = %37
  %45 = icmp eq i32 %1, 12
  br i1 %45, label %46, label %51

46:                                               ; preds = %44, %37
  %47 = phi i8 [ 107, %37 ], [ 99, %44 ]
  store i8 %47, i8* %43, align 1
  %48 = load i64, i64* %10, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %10, align 8
  %50 = inttoptr i64 %49 to i8*
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i8* [ %43, %44 ], [ %50, %46 ]
  %53 = and i32 %3, 247
  %54 = shl i32 %2, 3
  %55 = and i32 %54, 184
  %56 = add nuw nsw i32 %55, 192
  %57 = add nuw nsw i32 %56, %53
  %58 = trunc i32 %57 to i8
  store i8 %58, i8* %52, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packssENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = add i32 %1, -13
  %62 = icmp ult i32 %61, 2
  %63 = inttoptr i64 %60 to i8*
  br i1 %62, label %66, label %64

64:                                               ; preds = %57
  %65 = icmp eq i32 %1, 12
  br i1 %65, label %66, label %70

66:                                               ; preds = %64, %57
  %67 = phi i8 [ 107, %57 ], [ 99, %64 ]
  store i8 %67, i8* %63, align 1
  %68 = load i64, i64* %10, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %10, align 8
  br label %70

70:                                               ; preds = %66, %64
  %71 = and i32 %2, 247
  %72 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %71, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %72, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packusENS_4TypeENS_8RegX866411XmmRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = and i32 %2, 8
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 0, i8 65
  %29 = select i1 %25, i8 0, i8 68
  %30 = or i8 %28, %29
  %31 = icmp eq i8 %30, 0
  %32 = inttoptr i64 %23 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %20
  store i8 %30, i8* %32, align 1
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %20, %33
  %38 = phi i8* [ %32, %20 ], [ %36, %33 ]
  store i8 15, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %10, align 8
  %41 = add i32 %1, -13
  %42 = icmp ult i32 %41, 2
  %43 = inttoptr i64 %40 to i8*
  br i1 %42, label %44, label %48

44:                                               ; preds = %37
  store i8 56, i8* %43, align 1
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  %47 = inttoptr i64 %46 to i8*
  store i8 43, i8* %47, align 1
  br label %51

48:                                               ; preds = %37
  %49 = icmp eq i32 %1, 12
  br i1 %49, label %50, label %55

50:                                               ; preds = %48
  store i8 103, i8* %43, align 1
  br label %51

51:                                               ; preds = %44, %50
  %52 = load i64, i64* %10, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %10, align 8
  %54 = inttoptr i64 %53 to i8*
  br label %55

55:                                               ; preds = %51, %48
  %56 = phi i8* [ %43, %48 ], [ %54, %51 ]
  %57 = and i32 %3, 247
  %58 = shl i32 %2, 3
  %59 = and i32 %58, 184
  %60 = add nuw nsw i32 %59, 192
  %61 = add nuw nsw i32 %60, %57
  %62 = trunc i32 %61 to i8
  store i8 %62, i8* %56, align 1
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE6packusENS_4TypeENS_8RegX866411XmmRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i8*
  br label %20

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  %18 = bitcast i64* %10 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %10, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = inttoptr i64 %23 to i8*
  br i1 %26, label %32, label %28

28:                                               ; preds = %20
  store i8 103, i8* %27, align 1
  %29 = load i64, i64* %10, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %10, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i8* [ %27, %20 ], [ %31, %28 ]
  %34 = and i32 %2, 8
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %3, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 66
  %41 = icmp eq i8 %40, 66
  %42 = select i1 %41, i8 66, i8 0
  %43 = and i8 %39, 65
  %44 = icmp eq i8 %43, 65
  %45 = select i1 %44, i8 65, i8 0
  br label %46

46:                                               ; preds = %32, %37
  %47 = phi i8 [ %42, %37 ], [ 0, %32 ]
  %48 = phi i8 [ %45, %37 ], [ 0, %32 ]
  %49 = select i1 %35, i8 0, i8 68
  %50 = or i8 %47, %49
  %51 = or i8 %50, %48
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  store i8 %51, i8* %33, align 1
  %54 = load i64, i64* %10, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %10, align 8
  %56 = inttoptr i64 %55 to i8*
  br label %57

57:                                               ; preds = %46, %53
  %58 = phi i8* [ %33, %46 ], [ %56, %53 ]
  store i8 15, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  %61 = add i32 %1, -13
  %62 = icmp ult i32 %61, 2
  %63 = inttoptr i64 %60 to i8*
  br i1 %62, label %64, label %68

64:                                               ; preds = %57
  store i8 56, i8* %63, align 1
  %65 = load i64, i64* %10, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %10, align 8
  %67 = inttoptr i64 %66 to i8*
  store i8 43, i8* %67, align 1
  br label %71

68:                                               ; preds = %57
  %69 = icmp eq i32 %1, 12
  br i1 %69, label %70, label %74

70:                                               ; preds = %68
  store i8 103, i8* %63, align 1
  br label %71

71:                                               ; preds = %64, %70
  %72 = load i64, i64* %10, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %10, align 8
  br label %74

74:                                               ; preds = %71, %68
  %75 = and i32 %2, 247
  %76 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %75, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %76, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866417TargetX8664Traits10X86OperandD0Ev(%"class.Ice::X8664::TargetX8664Traits::X86Operand"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Variable"* @_ZN3Ice7Operand9asBooleanEv(%"class.Ice::Operand"*) unnamed_addr #1 comdat align 2 {
  ret %"class.Ice::Variable"* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice7Operand9hashValueEv(%"class.Ice::Operand"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  call void @_ZNSt3__19to_stringEi(%"class.std::__1::basic_string"* nonnull sret %3, i32 %7) #11
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_(%"class.std::__1::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.120, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #13
  call void @_ZN4llvm18report_fatal_errorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i1 zeroext true) #12
  unreachable
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866417TargetX8664Traits13VariableSplitD0Ev(%"class.Ice::X8664::TargetX8664Traits::VariableSplit"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.Ice::X8664::TargetX8664Traits::VariableSplit"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866417TargetX8664Traits13X86OperandMemD0Ev(%"class.Ice::X8664::TargetX8664Traits::X86OperandMem"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.Ice::X8664::TargetX8664Traits::X86OperandMem"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice7OperandD2Ev(%"class.Ice::Operand"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorEPKcb(i8*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare %"class.Ice::AssemblerFixup"* @_ZN3Ice15AssemblerBuffer11createFixupEjPKNS_8ConstantE(%"class.Ice::AssemblerBuffer"*, i32, %"class.Ice::Constant"*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_(%"class.std::__1::basic_string"* noalias sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* %2, i64 0, i8* %1) #11
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt3__19to_stringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #6

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"*, i64, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.440", align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = add i64 %2, -1
  %12 = add i64 %11, %10
  %13 = sub i64 0, %2
  %14 = and i64 %12, %13
  %15 = sub i64 %14, %10
  %16 = add i64 %15, %1
  %17 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp ugt i64 %16, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %9, i64 %15
  %24 = getelementptr inbounds i8, i8* %23, i64 %1
  store i8* %24, i8** %8, align 8
  br label %45

25:                                               ; preds = %3
  %26 = add i64 %11, %1
  %27 = icmp ugt i64 %26, 1048576
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call noalias i8* @malloc(i64 %26) #11
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair.440"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %4, i64 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %4, i64 0, i32 1
  store i64 %26, i64* %33, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.3"* %30, %"struct.std::__1::pair.440"* nonnull dereferenceable(16) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #10
  %34 = ptrtoint i8* %29 to i64
  %35 = add i64 %11, %34
  %36 = and i64 %35, %13
  %37 = inttoptr i64 %36 to i8*
  br label %45

38:                                               ; preds = %25
  tail call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"* %0) #13
  %39 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %11
  %42 = and i64 %41, %13
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %1
  store i8* %44, i8** %8, align 8
  br label %45

45:                                               ; preds = %28, %38, %22
  %46 = phi i8* [ %23, %22 ], [ %37, %28 ], [ %43, %38 ]
  ret i8* %46
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.3"*, %"struct.std::__1::pair.440"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !3

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #11
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.440"**
  %15 = bitcast %"struct.std::__1::pair.440"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.440"*, %"struct.std::__1::pair.440"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %16, i64 1
  store %"struct.std::__1::pair.440"* %17, %"struct.std::__1::pair.440"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr i64 %9, 10
  %11 = and i64 %10, 33554431
  %12 = icmp ult i64 %11, 30
  %13 = select i1 %12, i64 %11, i64 30
  %14 = shl i64 1048576, %13
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = tail call noalias i8* @malloc(i64 %14) #11
  store i8* %16, i8** %2, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %3, i64 0, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* %17, i8** nonnull dereferenceable(8) %2) #13
  %18 = bitcast i8** %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %14
  %23 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, i8** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !3

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #11
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"*) unnamed_addr #9

; Function Attrs: optsize
declare void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"*) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"*) local_unnamed_addr #1 comdat align 2 {
  %7 = icmp eq i32 %1, 5
  %8 = icmp eq i32 %3, 5
  %9 = or i1 %7, %8
  %10 = and i32 %2, 8
  %11 = icmp eq i32 %10, 0
  %12 = icmp eq %"class.Ice::X8664::TargetX8664Traits::Address"* %5, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %5, i64 0, i32 0, i32 1
  %15 = load i8, i8* %14, align 8
  %16 = and i8 %15, 66
  %17 = icmp eq i8 %16, 66
  %18 = select i1 %17, i8 66, i8 0
  %19 = and i8 %15, 65
  %20 = icmp eq i8 %19, 65
  %21 = select i1 %20, i8 65, i8 0
  br label %26

22:                                               ; preds = %6
  %23 = and i32 %4, 8
  %24 = icmp eq i32 %23, 0
  %25 = select i1 %24, i8 0, i8 65
  br label %26

26:                                               ; preds = %22, %13
  %27 = phi i8 [ %18, %13 ], [ 0, %22 ]
  %28 = phi i8 [ %21, %13 ], [ %25, %22 ]
  %29 = select i1 %9, i8 72, i8 0
  %30 = select i1 %11, i8 0, i8 68
  %31 = or i8 %29, %30
  %32 = or i8 %31, %27
  %33 = or i8 %32, %28
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %37 = bitcast i64* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  store i8 %33, i8* %38, align 1
  %39 = load i64, i64* %36, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %36, align 8
  br label %64

41:                                               ; preds = %26
  %42 = and i32 %2, 12
  %43 = icmp eq i32 %42, 4
  br i1 %43, label %44, label %49

44:                                               ; preds = %41
  %45 = add i32 %1, -1
  %46 = icmp ult i32 %45, 2
  %47 = icmp ne i32 %2, 4
  %48 = and i1 %46, %47
  br i1 %48, label %58, label %49

49:                                               ; preds = %41, %44
  %50 = and i32 %4, 12
  %51 = icmp eq i32 %50, 4
  %52 = and i1 %12, %51
  br i1 %52, label %53, label %64

53:                                               ; preds = %49
  %54 = add i32 %3, -1
  %55 = icmp ult i32 %54, 2
  %56 = icmp ne i32 %4, 4
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %64

58:                                               ; preds = %53, %44
  %59 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %60 = bitcast i64* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  store i8 64, i8* %61, align 1
  %62 = load i64, i64* %59, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %59, align 8
  br label %64

64:                                               ; preds = %49, %53, %58, %35
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %2, i64 0, i32 3
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i64
  %8 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %2, i64 0, i32 2, i64 0
  %9 = load i8, i8* %8, align 1
  %10 = trunc i32 %1 to i8
  %11 = shl i8 %10, 3
  %12 = add i8 %9, %11
  %13 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %14 = bitcast i64* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  store i8 %12, i8* %15, align 1
  %16 = load i64, i64* %13, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %13, align 8
  %18 = load i8, i8* %8, align 1
  %19 = zext i8 %18 to i32
  %20 = and i32 %19, 192
  %21 = icmp ne i32 %20, 192
  %22 = and i32 %19, 7
  %23 = icmp eq i32 %22, 4
  %24 = and i1 %21, %23
  %25 = inttoptr i64 %17 to i8*
  br i1 %24, label %26, label %32

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %2, i64 0, i32 2, i64 1
  %28 = load i8, i8* %27, align 1
  store i8 %28, i8* %25, align 1
  %29 = load i64, i64* %13, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %13, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %4, %26
  %33 = phi i8* [ %31, %26 ], [ %25, %4 ]
  %34 = phi i64 [ 2, %26 ], [ 1, %4 ]
  %35 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %2, i64 0, i32 0
  %36 = load %"class.Ice::AssemblerFixup"*, %"class.Ice::AssemblerFixup"** %35, align 8
  %37 = icmp eq %"class.Ice::AssemblerFixup"* %36, null
  br i1 %37, label %38, label %50

38:                                               ; preds = %32
  %39 = icmp ult i64 %34, %7
  br i1 %39, label %40, label %72

40:                                               ; preds = %38, %40
  %41 = phi i8* [ %49, %40 ], [ %33, %38 ]
  %42 = phi i64 [ %47, %40 ], [ %34, %38 ]
  %43 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %2, i64 0, i32 2, i64 %42
  %44 = load i8, i8* %43, align 1
  store i8 %44, i8* %41, align 1
  %45 = load i64, i64* %13, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %13, align 8
  %47 = add nuw nsw i64 %42, 1
  %48 = icmp eq i64 %47, %7
  %49 = inttoptr i64 %46 to i8*
  br i1 %48, label %72, label %40

50:                                               ; preds = %32
  %51 = getelementptr inbounds %"class.Ice::AssemblerFixup", %"class.Ice::AssemblerFixup"* %36, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = bitcast %"class.Ice::X8664::AssemblerX86Base"* %0 to i1 (%"class.Ice::X8664::AssemblerX86Base"*, i32)***
  %54 = load i1 (%"class.Ice::X8664::AssemblerX86Base"*, i32)**, i1 (%"class.Ice::X8664::AssemblerX86Base"*, i32)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.Ice::X8664::AssemblerX86Base"*, i32)*, i1 (%"class.Ice::X8664::AssemblerX86Base"*, i32)** %54, i64 9
  %56 = load i1 (%"class.Ice::X8664::AssemblerX86Base"*, i32)*, i1 (%"class.Ice::X8664::AssemblerX86Base"*, i32)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %52) #11
  %58 = getelementptr inbounds %"class.Ice::AssemblerFixup", %"class.Ice::AssemblerFixup"* %36, i64 0, i32 3
  br i1 %57, label %59, label %62

59:                                               ; preds = %50
  %60 = load i32, i32* %58, align 4
  %61 = sub nsw i32 %60, %3
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %50, %59
  %63 = load i64, i64* %13, align 8
  %64 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = getelementptr inbounds %"class.Ice::AssemblerFixup", %"class.Ice::AssemblerFixup"* %36, i64 0, i32 1
  store i64 %66, i64* %67, align 8
  %68 = bitcast i64* %13 to i32**
  %69 = load i32*, i32** %68, align 8
  store i32 0, i32* %69, align 1
  %70 = load i64, i64* %13, align 8
  %71 = add i64 %70, 4
  store i64 %71, i64* %13, align 8
  br label %72

72:                                               ; preds = %40, %38, %62
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3movENS_4TypeENS_8RegX866411GPRRegisterES6_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 %3, i32 3, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %27

23:                                               ; preds = %16
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %3, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = add i32 %1, -1
  %25 = icmp ult i32 %24, 2
  %26 = bitcast i64* %10 to i8**
  br i1 %25, label %29, label %27

27:                                               ; preds = %23, %18
  %28 = phi i8** [ %19, %18 ], [ %26, %23 ]
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi i8** [ %28, %27 ], [ %26, %23 ]
  %31 = phi i8 [ -119, %27 ], [ -120, %23 ]
  %32 = load i8*, i8** %30, align 8
  store i8 %31, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  %36 = and i32 %2, 247
  %37 = shl i32 %3, 3
  %38 = and i32 %37, 184
  %39 = add nuw nsw i32 %36, 192
  %40 = add nuw nsw i32 %39, %38
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %35, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE3movENS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 -118, i8 -117
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZN3Ice20isScalarFloatingTypeENS_4TypeE(i32) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 %2, i32 3, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %27

23:                                               ; preds = %16
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = add i32 %1, -1
  %25 = icmp ult i32 %24, 2
  %26 = bitcast i64* %10 to i8**
  br i1 %25, label %29, label %27

27:                                               ; preds = %23, %18
  %28 = phi i8** [ %19, %18 ], [ %26, %23 ]
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi i8** [ %28, %27 ], [ %26, %23 ]
  %31 = phi i8 [ 3, %27 ], [ 2, %23 ]
  %32 = load i8*, i8** %30, align 8
  store i8 %31, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  %36 = and i32 %3, 247
  %37 = shl i32 %2, 3
  %38 = and i32 %37, 184
  %39 = add nuw nsw i32 %38, 192
  %40 = add nuw nsw i32 %39, %36
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %35, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 2, i8 3
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %7 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %8 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %11, %"class.Ice::AssemblerBuffer"** %9, align 8
  store i64 0, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %11) #11
  br label %18

18:                                               ; preds = %4, %17
  %19 = icmp eq i32 %1, 3
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = bitcast i64* %12 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 102, i8* %22, align 1
  %23 = load i64, i64* %12, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %12, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 0, i32 3, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %40

25:                                               ; preds = %18
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %26 = add i32 %1, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %40

28:                                               ; preds = %25
  %29 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %30, align 8
  %31 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 3
  %33 = trunc i32 %2 to i8
  %34 = and i8 %33, 7
  %35 = or i8 %34, -64
  %36 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 2, i64 0
  store i8 %35, i8* %36, align 1
  %37 = and i32 %2, 8
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i8 0, i8 65
  store i8 %39, i8* %31, align 8
  store i8 1, i8* %32, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 0, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %6, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

40:                                               ; preds = %20, %25
  %41 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %42, align 8
  %43 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 1
  %44 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 3
  %45 = trunc i32 %2 to i8
  %46 = and i8 %45, 7
  %47 = or i8 %46, -64
  %48 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 2, i64 0
  store i8 %47, i8* %48, align 1
  %49 = and i32 %2, 8
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i8 0, i8 65
  store i8 %51, i8* %43, align 8
  store i8 1, i8* %44, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %7, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

52:                                               ; preds = %40, %28
  %53 = phi i8* [ %41, %40 ], [ %29, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %2, i64 0, i32 2, i64 0
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, -8
  %8 = icmp eq i8 %7, -64
  br i1 %8, label %9, label %32

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %2, i64 0, i32 1
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 65
  %13 = icmp eq i8 %12, 65
  %14 = select i1 %13, i32 8, i32 0
  %15 = and i8 %6, 7
  %16 = zext i8 %15 to i32
  %17 = or i32 %14, %16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %9
  %20 = trunc i32 %1 to i8
  %21 = shl i8 %20, 3
  %22 = or i8 %21, 4
  %23 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %24 = bitcast i64* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  store i8 %22, i8* %25, align 1
  %26 = load i64, i64* %23, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %23, align 8
  %28 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %3, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = trunc i32 %29 to i8
  %31 = inttoptr i64 %27 to i8*
  store i8 %30, i8* %31, align 1
  br label %42

32:                                               ; preds = %4, %9
  %33 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %34 = bitcast i64* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  store i8 -128, i8* %35, align 1
  %36 = load i64, i64* %33, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %33, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %2, i32 1) #13
  %38 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %3, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = trunc i32 %39 to i8
  %41 = load i8*, i8** %34, align 8
  store i8 %40, i8* %41, align 1
  br label %42

42:                                               ; preds = %32, %19
  %43 = phi i64* [ %33, %32 ], [ %23, %19 ]
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %43, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %6 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %4, i64 0, i32 1
  %7 = load %"class.Ice::AssemblerFixup"*, %"class.Ice::AssemblerFixup"** %6, align 8
  %8 = icmp eq %"class.Ice::AssemblerFixup"* %7, null
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %4, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 128
  %13 = icmp ult i32 %12, 256
  br i1 %13, label %14, label %25

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %16 = bitcast i64* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  store i8 -125, i8* %17, align 1
  %18 = load i64, i64* %15, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %15, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %3, i32 1) #13
  %20 = load i32, i32* %10, align 8
  %21 = trunc i32 %20 to i8
  %22 = load i8*, i8** %16, align 8
  store i8 %21, i8* %22, align 1
  %23 = load i64, i64* %15, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %15, align 8
  br label %57

25:                                               ; preds = %5, %9
  %26 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %3, i64 0, i32 2, i64 0
  %27 = load i8, i8* %26, align 1
  %28 = and i8 %27, -8
  %29 = icmp eq i8 %28, -64
  br i1 %29, label %30, label %49

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %3, i64 0, i32 1
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 65
  %34 = icmp eq i8 %33, 65
  %35 = select i1 %34, i32 8, i32 0
  %36 = and i8 %27, 7
  %37 = zext i8 %36 to i32
  %38 = or i32 %35, %37
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %49

40:                                               ; preds = %30
  %41 = trunc i32 %2 to i8
  %42 = shl i8 %41, 3
  %43 = or i8 %42, 5
  %44 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %45 = bitcast i64* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  store i8 %43, i8* %46, align 1
  %47 = load i64, i64* %44, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %44, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitImmediateENS_4TypeERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %4) #13
  br label %57

49:                                               ; preds = %25, %30
  %50 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %51 = bitcast i64* %50 to i8**
  %52 = load i8*, i8** %51, align 8
  store i8 -127, i8* %52, align 1
  %53 = load i64, i64* %50, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %50, align 8
  %55 = icmp eq i32 %1, 3
  %56 = select i1 %55, i32 2, i32 4
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %3, i32 %56) #13
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitImmediateENS_4TypeERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %4) #13
  br label %57

57:                                               ; preds = %40, %49, %14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitImmediateENS_4TypeERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %2, i64 0, i32 1
  %5 = load %"class.Ice::AssemblerFixup"*, %"class.Ice::AssemblerFixup"** %4, align 8
  %6 = icmp eq i32 %1, 3
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = trunc i32 %9 to i16
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %12 = bitcast i64* %11 to i16**
  %13 = load i16*, i16** %12, align 8
  store i16 %10, i16* %13, align 1
  br label %36

14:                                               ; preds = %3
  %15 = icmp eq %"class.Ice::AssemblerFixup"* %5, null
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %2, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %20 = bitcast i64* %19 to i32**
  %21 = load i32*, i32** %20, align 8
  store i32 %18, i32* %21, align 1
  br label %36

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.Ice::AssemblerFixup", %"class.Ice::AssemblerFixup"* %5, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %2, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, %24
  store i32 %27, i32* %23, align 4
  %28 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = getelementptr inbounds %"class.Ice::AssemblerFixup", %"class.Ice::AssemblerFixup"* %5, i64 0, i32 1
  store i64 %32, i64* %33, align 8
  %34 = bitcast i64* %28 to i32**
  %35 = load i32*, i32** %34, align 8
  store i32 0, i32* %35, align 1
  br label %36

36:                                               ; preds = %22, %16, %7
  %37 = phi i64* [ %28, %22 ], [ %19, %16 ], [ %11, %7 ]
  %38 = phi i64 [ 4, %22 ], [ 4, %16 ], [ 2, %7 ]
  %39 = load i64, i64* %37, align 8
  %40 = add i64 %39, %38
  store i64 %40, i64* %37, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %3, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ugt i32 %33, 1
  %35 = load i8*, i8** %27, align 8
  %36 = zext i1 %34 to i8
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %3, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj0EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  br i1 %34, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 0, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

37:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

38:                                               ; preds = %37, %36
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 %2, i32 3, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %27

23:                                               ; preds = %16
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = add i32 %1, -1
  %25 = icmp ult i32 %24, 2
  %26 = bitcast i64* %10 to i8**
  br i1 %25, label %29, label %27

27:                                               ; preds = %23, %18
  %28 = phi i8** [ %19, %18 ], [ %26, %23 ]
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi i8** [ %28, %27 ], [ %26, %23 ]
  %31 = phi i8 [ 19, %27 ], [ 18, %23 ]
  %32 = load i8*, i8** %30, align 8
  store i8 %31, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  %36 = and i32 %3, 247
  %37 = shl i32 %2, 3
  %38 = and i32 %37, 184
  %39 = add nuw nsw i32 %38, 192
  %40 = add nuw nsw i32 %39, %36
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %35, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 18, i8 19
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %7 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %8 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %11, %"class.Ice::AssemblerBuffer"** %9, align 8
  store i64 0, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %11) #11
  br label %18

18:                                               ; preds = %4, %17
  %19 = icmp eq i32 %1, 3
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = bitcast i64* %12 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 102, i8* %22, align 1
  %23 = load i64, i64* %12, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %12, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 0, i32 3, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %40

25:                                               ; preds = %18
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %26 = add i32 %1, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %40

28:                                               ; preds = %25
  %29 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %30, align 8
  %31 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 3
  %33 = trunc i32 %2 to i8
  %34 = and i8 %33, 7
  %35 = or i8 %34, -64
  %36 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 2, i64 0
  store i8 %35, i8* %36, align 1
  %37 = and i32 %2, 8
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i8 0, i8 65
  store i8 %39, i8* %31, align 8
  store i8 1, i8* %32, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 2, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %6, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

40:                                               ; preds = %20, %25
  %41 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %42, align 8
  %43 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 1
  %44 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 3
  %45 = trunc i32 %2 to i8
  %46 = and i8 %45, 7
  %47 = or i8 %46, -64
  %48 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 2, i64 0
  store i8 %47, i8* %48, align 1
  %49 = and i32 %2, 8
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i8 0, i8 65
  store i8 %51, i8* %43, align 8
  store i8 1, i8* %44, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 2, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %7, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

52:                                               ; preds = %40, %28
  %53 = phi i8* [ %41, %40 ], [ %29, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %3, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 16, i8 17
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %3, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj2EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  br i1 %34, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 2, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

37:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 2, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

38:                                               ; preds = %37, %36
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 %2, i32 3, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %27

23:                                               ; preds = %16
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = add i32 %1, -1
  %25 = icmp ult i32 %24, 2
  %26 = bitcast i64* %10 to i8**
  br i1 %25, label %29, label %27

27:                                               ; preds = %23, %18
  %28 = phi i8** [ %19, %18 ], [ %26, %23 ]
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi i8** [ %28, %27 ], [ %26, %23 ]
  %31 = phi i8 [ 35, %27 ], [ 34, %23 ]
  %32 = load i8*, i8** %30, align 8
  store i8 %31, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  %36 = and i32 %3, 247
  %37 = shl i32 %2, 3
  %38 = and i32 %37, 184
  %39 = add nuw nsw i32 %38, 192
  %40 = add nuw nsw i32 %39, %36
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %35, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 34, i8 35
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %7 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %8 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %11, %"class.Ice::AssemblerBuffer"** %9, align 8
  store i64 0, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %11) #11
  br label %18

18:                                               ; preds = %4, %17
  %19 = icmp eq i32 %1, 3
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = bitcast i64* %12 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 102, i8* %22, align 1
  %23 = load i64, i64* %12, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %12, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 0, i32 3, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %40

25:                                               ; preds = %18
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %26 = add i32 %1, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %40

28:                                               ; preds = %25
  %29 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %30, align 8
  %31 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 3
  %33 = trunc i32 %2 to i8
  %34 = and i8 %33, 7
  %35 = or i8 %34, -64
  %36 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 2, i64 0
  store i8 %35, i8* %36, align 1
  %37 = and i32 %2, 8
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i8 0, i8 65
  store i8 %39, i8* %31, align 8
  store i8 1, i8* %32, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 4, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %6, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

40:                                               ; preds = %20, %25
  %41 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %42, align 8
  %43 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 1
  %44 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 3
  %45 = trunc i32 %2 to i8
  %46 = and i8 %45, 7
  %47 = or i8 %46, -64
  %48 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 2, i64 0
  store i8 %47, i8* %48, align 1
  %49 = and i32 %2, 8
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i8 0, i8 65
  store i8 %51, i8* %43, align 8
  store i8 1, i8* %44, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 4, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %7, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

52:                                               ; preds = %40, %28
  %53 = phi i8* [ %41, %40 ], [ %29, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %3, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 32, i8 33
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %3, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj4EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  br i1 %34, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 4, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

37:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 4, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

38:                                               ; preds = %37, %36
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 %2, i32 3, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %27

23:                                               ; preds = %16
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = add i32 %1, -1
  %25 = icmp ult i32 %24, 2
  %26 = bitcast i64* %10 to i8**
  br i1 %25, label %29, label %27

27:                                               ; preds = %23, %18
  %28 = phi i8** [ %19, %18 ], [ %26, %23 ]
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi i8** [ %28, %27 ], [ %26, %23 ]
  %31 = phi i8 [ 11, %27 ], [ 10, %23 ]
  %32 = load i8*, i8** %30, align 8
  store i8 %31, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  %36 = and i32 %3, 247
  %37 = shl i32 %2, 3
  %38 = and i32 %37, 184
  %39 = add nuw nsw i32 %38, 192
  %40 = add nuw nsw i32 %39, %36
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %35, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 10, i8 11
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %7 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %8 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %11, %"class.Ice::AssemblerBuffer"** %9, align 8
  store i64 0, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %11) #11
  br label %18

18:                                               ; preds = %4, %17
  %19 = icmp eq i32 %1, 3
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = bitcast i64* %12 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 102, i8* %22, align 1
  %23 = load i64, i64* %12, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %12, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 0, i32 3, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %40

25:                                               ; preds = %18
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %26 = add i32 %1, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %40

28:                                               ; preds = %25
  %29 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %30, align 8
  %31 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 3
  %33 = trunc i32 %2 to i8
  %34 = and i8 %33, 7
  %35 = or i8 %34, -64
  %36 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 2, i64 0
  store i8 %35, i8* %36, align 1
  %37 = and i32 %2, 8
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i8 0, i8 65
  store i8 %39, i8* %31, align 8
  store i8 1, i8* %32, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 1, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %6, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

40:                                               ; preds = %20, %25
  %41 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %42, align 8
  %43 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 1
  %44 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 3
  %45 = trunc i32 %2 to i8
  %46 = and i8 %45, 7
  %47 = or i8 %46, -64
  %48 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 2, i64 0
  store i8 %47, i8* %48, align 1
  %49 = and i32 %2, 8
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i8 0, i8 65
  store i8 %51, i8* %43, align 8
  store i8 1, i8* %44, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 1, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %7, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

52:                                               ; preds = %40, %28
  %53 = phi i8* [ %41, %40 ], [ %29, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %3, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 8, i8 9
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %3, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj1EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  br i1 %34, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 1, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

37:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 1, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

38:                                               ; preds = %37, %36
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 %2, i32 3, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %27

23:                                               ; preds = %16
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = add i32 %1, -1
  %25 = icmp ult i32 %24, 2
  %26 = bitcast i64* %10 to i8**
  br i1 %25, label %29, label %27

27:                                               ; preds = %23, %18
  %28 = phi i8** [ %19, %18 ], [ %26, %23 ]
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi i8** [ %28, %27 ], [ %26, %23 ]
  %31 = phi i8 [ 27, %27 ], [ 26, %23 ]
  %32 = load i8*, i8** %30, align 8
  store i8 %31, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  %36 = and i32 %3, 247
  %37 = shl i32 %2, 3
  %38 = and i32 %37, 184
  %39 = add nuw nsw i32 %38, 192
  %40 = add nuw nsw i32 %39, %36
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %35, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 26, i8 27
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %7 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %8 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %11, %"class.Ice::AssemblerBuffer"** %9, align 8
  store i64 0, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %11) #11
  br label %18

18:                                               ; preds = %4, %17
  %19 = icmp eq i32 %1, 3
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = bitcast i64* %12 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 102, i8* %22, align 1
  %23 = load i64, i64* %12, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %12, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 0, i32 3, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %40

25:                                               ; preds = %18
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %26 = add i32 %1, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %40

28:                                               ; preds = %25
  %29 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %30, align 8
  %31 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 3
  %33 = trunc i32 %2 to i8
  %34 = and i8 %33, 7
  %35 = or i8 %34, -64
  %36 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 2, i64 0
  store i8 %35, i8* %36, align 1
  %37 = and i32 %2, 8
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i8 0, i8 65
  store i8 %39, i8* %31, align 8
  store i8 1, i8* %32, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %6, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

40:                                               ; preds = %20, %25
  %41 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %42, align 8
  %43 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 1
  %44 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 3
  %45 = trunc i32 %2 to i8
  %46 = and i8 %45, 7
  %47 = or i8 %46, -64
  %48 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 2, i64 0
  store i8 %47, i8* %48, align 1
  %49 = and i32 %2, 8
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i8 0, i8 65
  store i8 %51, i8* %43, align 8
  store i8 1, i8* %44, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 3, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %7, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

52:                                               ; preds = %40, %28
  %53 = phi i8* [ %41, %40 ], [ %29, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %3, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 24, i8 25
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %3, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj3EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  br i1 %34, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

37:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 3, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

38:                                               ; preds = %37, %36
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 %2, i32 3, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %27

23:                                               ; preds = %16
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = add i32 %1, -1
  %25 = icmp ult i32 %24, 2
  %26 = bitcast i64* %10 to i8**
  br i1 %25, label %29, label %27

27:                                               ; preds = %23, %18
  %28 = phi i8** [ %19, %18 ], [ %26, %23 ]
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi i8** [ %28, %27 ], [ %26, %23 ]
  %31 = phi i8 [ 43, %27 ], [ 42, %23 ]
  %32 = load i8*, i8** %30, align 8
  store i8 %31, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  %36 = and i32 %3, 247
  %37 = shl i32 %2, 3
  %38 = and i32 %37, 184
  %39 = add nuw nsw i32 %38, 192
  %40 = add nuw nsw i32 %39, %36
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %35, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 42, i8 43
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %7 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %8 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %11, %"class.Ice::AssemblerBuffer"** %9, align 8
  store i64 0, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %11) #11
  br label %18

18:                                               ; preds = %4, %17
  %19 = icmp eq i32 %1, 3
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = bitcast i64* %12 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 102, i8* %22, align 1
  %23 = load i64, i64* %12, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %12, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 0, i32 3, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %40

25:                                               ; preds = %18
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %26 = add i32 %1, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %40

28:                                               ; preds = %25
  %29 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %30, align 8
  %31 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 3
  %33 = trunc i32 %2 to i8
  %34 = and i8 %33, 7
  %35 = or i8 %34, -64
  %36 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 2, i64 0
  store i8 %35, i8* %36, align 1
  %37 = and i32 %2, 8
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i8 0, i8 65
  store i8 %39, i8* %31, align 8
  store i8 1, i8* %32, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 5, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %6, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

40:                                               ; preds = %20, %25
  %41 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %42, align 8
  %43 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 1
  %44 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 3
  %45 = trunc i32 %2 to i8
  %46 = and i8 %45, 7
  %47 = or i8 %46, -64
  %48 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 2, i64 0
  store i8 %47, i8* %48, align 1
  %49 = and i32 %2, 8
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i8 0, i8 65
  store i8 %51, i8* %43, align 8
  store i8 1, i8* %44, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 5, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %7, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

52:                                               ; preds = %40, %28
  %53 = phi i8* [ %41, %40 ], [ %29, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %3, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 40, i8 41
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %3, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj5EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  br i1 %34, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 5, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

37:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 5, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

38:                                               ; preds = %37, %36
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeENS_8RegX866411GPRRegisterES7_(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 %2, i32 3, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %27

23:                                               ; preds = %16
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %24 = add i32 %1, -1
  %25 = icmp ult i32 %24, 2
  %26 = bitcast i64* %10 to i8**
  br i1 %25, label %29, label %27

27:                                               ; preds = %23, %18
  %28 = phi i8** [ %19, %18 ], [ %26, %23 ]
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi i8** [ %28, %27 ], [ %26, %23 ]
  %31 = phi i8 [ 51, %27 ], [ 50, %23 ]
  %32 = load i8*, i8** %30, align 8
  store i8 %31, i8* %32, align 1
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = inttoptr i64 %34 to i8*
  %36 = and i32 %3, 247
  %37 = shl i32 %2, 3
  %38 = and i32 %37, 184
  %39 = add nuw nsw i32 %38, 192
  %40 = add nuw nsw i32 %39, %36
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %35, align 1
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %10, align 8
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS2_7AddressE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %2, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %3) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 50, i8 51
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %2, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %3, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %7 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %8 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %11, %"class.Ice::AssemblerBuffer"** %9, align 8
  store i64 0, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %11) #11
  br label %18

18:                                               ; preds = %4, %17
  %19 = icmp eq i32 %1, 3
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = bitcast i64* %12 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 102, i8* %22, align 1
  %23 = load i64, i64* %12, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %12, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 3, i32 0, i32 3, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  br label %40

25:                                               ; preds = %18
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 %2, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %26 = add i32 %1, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %40

28:                                               ; preds = %25
  %29 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %30, align 8
  %31 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 3
  %33 = trunc i32 %2 to i8
  %34 = and i8 %33, 7
  %35 = or i8 %34, -64
  %36 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %6, i64 0, i32 2, i64 0
  store i8 %35, i8* %36, align 1
  %37 = and i32 %2, 8
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i8 0, i8 65
  store i8 %39, i8* %31, align 8
  store i8 1, i8* %32, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 6, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %6, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

40:                                               ; preds = %20, %25
  %41 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %42, align 8
  %43 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 1
  %44 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 3
  %45 = trunc i32 %2 to i8
  %46 = and i8 %45, 7
  %47 = or i8 %46, -64
  %48 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 2, i64 0
  store i8 %47, i8* %48, align 1
  %49 = and i32 %2, 8
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i8 0, i8 65
  store i8 %51, i8* %43, align 8
  store i8 1, i8* %44, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 6, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %7, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %52

52:                                               ; preds = %40, %28
  %53 = phi i8* [ %41, %40 ], [ %29, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeERKNS2_7AddressENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = bitcast i64* %10 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %28
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 %3, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = load i8*, i8** %27, align 8
  %36 = select i1 %34, i8 48, i8 49
  store i8 %36, i8* %35, align 1
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  %39 = and i32 %3, 247
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %39, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %40, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE9arith_intILj6EEEvNS_4TypeERKNS2_7AddressERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, %"class.Ice::X8664::TargetX8664Traits::Address"* dereferenceable(16), %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %6 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %9, %"class.Ice::AssemblerBuffer"** %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %9) #11
  br label %16

16:                                               ; preds = %4, %15
  %17 = icmp eq i32 %1, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast i64* %10 to i8**
  %20 = load i8*, i8** %19, align 8
  store i8 102, i8* %20, align 1
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %10 to i8**
  %29 = load i8*, i8** %28, align 8
  store i8 103, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %10, align 8
  br label %32

32:                                               ; preds = %23, %27
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 0, i32 %1, i32 0, %"class.Ice::X8664::TargetX8664Traits::Address"* %2) #11
  %33 = add i32 %1, -1
  %34 = icmp ult i32 %33, 2
  %35 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Address", %"class.Ice::X8664::TargetX8664Traits::Address"* %2, i64 0, i32 0
  br i1 %34, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE13emitComplexI8EiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 6, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

37:                                               ; preds = %32
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitComplexENS_4TypeEiRKNS2_7OperandERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, i32 6, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %35, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16) %3) #13
  br label %38

38:                                               ; preds = %37, %36
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeERKNS2_7OperandENS_8RegX866411GPRRegisterE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16), i32) local_unnamed_addr #1 comdat align 2 {
  %6 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %7 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %10, %"class.Ice::AssemblerBuffer"** %8, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %5
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %10) #11
  br label %17

17:                                               ; preds = %5, %16
  %18 = icmp eq i32 %2, 3
  %19 = bitcast i64* %11 to i8**
  br i1 %18, label %20, label %24

20:                                               ; preds = %17
  %21 = load i8*, i8** %19, align 8
  store i8 102, i8* %21, align 1
  %22 = load i64, i64* %11, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %11, align 8
  br label %24

24:                                               ; preds = %17, %20
  %25 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %3, i64 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 65
  %28 = icmp eq i8 %27, 65
  %29 = select i1 %28, i32 8, i32 0
  %30 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %3, i64 0, i32 2, i64 0
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, 7
  %33 = zext i8 %32 to i32
  %34 = or i32 %29, %33
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %2, i32 0, i32 %2, i32 %34, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %35 = icmp eq i32 %2, 2
  %36 = select i1 %35, i8 -46, i8 -45
  %37 = load i8*, i8** %19, align 8
  store i8 %36, i8* %37, align 1
  %38 = load i64, i64* %11, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %11, align 8
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Operand"* dereferenceable(16) %3, i32 0) #13
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE16emitGenericShiftEiNS_4TypeENS_8RegX866411GPRRegisterERKNS3_9ImmediateE(%"class.Ice::X8664::AssemblerX86Base"*, i32, i32, i32, %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %6 = alloca %"class.Ice::AssemblerBuffer::EnsureCapacity", align 8
  %7 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %8 = alloca %"class.Ice::X8664::TargetX8664Traits::Operand", align 8
  %9 = bitcast %"class.Ice::AssemblerBuffer::EnsureCapacity"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %6, i64 0, i32 0
  %11 = getelementptr inbounds %"class.Ice::AssemblerBuffer::EnsureCapacity", %"class.Ice::AssemblerBuffer::EnsureCapacity"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8
  store %"class.Ice::AssemblerBuffer"* %12, %"class.Ice::AssemblerBuffer"** %10, align 8
  store i64 0, i64* %11, align 8
  %13 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base", %"class.Ice::X8664::AssemblerX86Base"* %0, i64 0, i32 0, i32 8, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %5
  tail call void @_ZN3Ice15AssemblerBuffer14extendCapacityEv(%"class.Ice::AssemblerBuffer"* %12) #11
  br label %19

19:                                               ; preds = %5, %18
  %20 = icmp eq i32 %2, 3
  br i1 %20, label %21, label %26

21:                                               ; preds = %19
  %22 = bitcast i64* %13 to i8**
  %23 = load i8*, i8** %22, align 8
  store i8 102, i8* %23, align 1
  %24 = load i64, i64* %13, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %13, align 8
  br label %26

26:                                               ; preds = %21, %19
  tail call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE18assembleAndEmitRexINS_8RegX866411GPRRegisterES6_S2_EENSt3__19enable_ifIXsrT1_7Is64BitEvE4typeENS_4TypeET_SC_T0_PKNS9_7AddressE(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %2, i32 0, i32 %2, i32 %3, %"class.Ice::X8664::TargetX8664Traits::Address"* null) #11
  %27 = getelementptr inbounds %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate", %"class.Ice::X8664::AssemblerX86Base<Ice::X8664::TargetX8664Traits>::Immediate"* %4, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  %30 = icmp eq i32 %2, 2
  br i1 %29, label %31, label %48

31:                                               ; preds = %26
  %32 = select i1 %30, i8 -48, i8 -47
  %33 = bitcast i64* %13 to i8**
  %34 = load i8*, i8** %33, align 8
  store i8 %32, i8* %34, align 1
  %35 = load i64, i64* %13, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %13, align 8
  %37 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10
  %38 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %38, align 8
  %39 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 1
  %40 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 3
  %41 = trunc i32 %3 to i8
  %42 = and i8 %41, 7
  %43 = or i8 %42, -64
  %44 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %7, i64 0, i32 2, i64 0
  store i8 %43, i8* %44, align 1
  %45 = and i32 %3, 8
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i8 0, i8 65
  store i8 %47, i8* %39, align 8
  store i8 1, i8* %40, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %7, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10
  br label %70

48:                                               ; preds = %26
  %49 = select i1 %30, i8 -64, i8 -63
  %50 = bitcast i64* %13 to i8**
  %51 = load i8*, i8** %50, align 8
  store i8 %49, i8* %51, align 1
  %52 = load i64, i64* %13, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %13, align 8
  %54 = bitcast %"class.Ice::X8664::TargetX8664Traits::Operand"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #10
  %55 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %8, i64 0, i32 0
  store %"class.Ice::AssemblerFixup"* null, %"class.Ice::AssemblerFixup"** %55, align 8
  %56 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %8, i64 0, i32 1
  %57 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %8, i64 0, i32 3
  %58 = trunc i32 %3 to i8
  %59 = and i8 %58, 7
  %60 = or i8 %59, -64
  %61 = getelementptr inbounds %"class.Ice::X8664::TargetX8664Traits::Operand", %"class.Ice::X8664::TargetX8664Traits::Operand"* %8, i64 0, i32 2, i64 0
  store i8 %60, i8* %61, align 1
  %62 = and i32 %3, 8
  %63 = icmp eq i32 %62, 0
  %64 = select i1 %63, i8 0, i8 65
  store i8 %64, i8* %56, align 8
  store i8 1, i8* %57, align 1
  call void @_ZN3Ice5X866416AssemblerX86BaseINS0_17TargetX8664TraitsEE11emitOperandEiRKNS2_7OperandEi(%"class.Ice::X8664::AssemblerX86Base"* %0, i32 %1, %"class.Ice::X8664::TargetX8664Traits::Operand"* nonnull dereferenceable(16) %8, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #10
  %65 = load i32, i32* %27, align 8
  %66 = trunc i32 %65 to i8
  %67 = load i8*, i8** %50, align 8
  store i8 %66, i8* %67, align 1
  %68 = load i64, i64* %13, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %13, align 8
  br label %70

70:                                               ; preds = %48, %31
  call void @_ZN3Ice15AssemblerBuffer14EnsureCapacityD1Ev(%"class.Ice::AssemblerBuffer::EnsureCapacity"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind optsize }
attributes #12 = { noreturn nounwind optsize }
attributes #13 = { optsize }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
