; ModuleID = '../../third_party/pdfium/fxbarcode/cbc_onecode.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/cbc_onecode.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_OneCode = type { %class.CBC_CodeBase }
%class.CBC_CodeBase = type { i32 (...)**, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CBC_Writer* }
%class.CBC_Writer = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16, [2 x i8] }>
%class.CBC_OneDimWriter = type <{ %class.CBC_Writer.base, i8, i8, i8, i8, [6 x i8], %"class.fxcrt::UnownedPtr", float, i32, i32, i8, [3 x i8], i32, [4 x i8], i64, %"class.std::__1::vector", i32, i32, float, [4 x i8] }>
%class.CBC_Writer.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16 }>
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%class.CFX_Font = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CFX_PathData*, %class.CFX_PathData*, %"class.std::__1::__compressed_pair.1" }
%class.CFX_PathData = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CFX_PathData* }

@_ZTV11CBC_OneCode = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_OneCode*)* @_ZN11CBC_OneCodeD2Ev to i8*), i8* bitcast (void (%class.CBC_OneCode*)* @_ZN11CBC_OneCodeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN11CBC_OneCodeD1Ev = hidden unnamed_addr alias void (%class.CBC_OneCode*), void (%class.CBC_OneCode*)* @_ZN11CBC_OneCodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CBC_OneCodeC2ENSt3__110unique_ptrI10CBC_WriterNS0_14default_deleteIS2_EEEE(%class.CBC_OneCode*, %class.CBC_Writer*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0
  tail call void @_ZN12CBC_CodeBaseC2ENSt3__110unique_ptrI10CBC_WriterNS0_14default_deleteIS2_EEEE(%class.CBC_CodeBase* %3, %class.CBC_Writer* %1) #6
  %4 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV11CBC_OneCode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN12CBC_CodeBaseC2ENSt3__110unique_ptrI10CBC_WriterNS0_14default_deleteIS2_EEEE(%class.CBC_CodeBase*, %class.CBC_Writer*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CBC_CodeBaseD2Ev(%class.CBC_CodeBase*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CBC_OneCodeD2Ev(%class.CBC_OneCode*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0
  tail call void @_ZN12CBC_CodeBaseD2Ev(%class.CBC_CodeBase* %2) #6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN11CBC_OneCodeD0Ev(%class.CBC_OneCode* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CBC_OneCode16SetPrintChecksumEb(%class.CBC_OneCode* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %class.CBC_Writer** %3 to %class.CBC_OneDimWriter**
  %5 = load %class.CBC_OneDimWriter*, %class.CBC_OneDimWriter** %4, align 8
  %6 = bitcast %class.CBC_OneDimWriter* %5 to void (%class.CBC_OneDimWriter*, i1)***
  %7 = load void (%class.CBC_OneDimWriter*, i1)**, void (%class.CBC_OneDimWriter*, i1)*** %6, align 8
  %8 = getelementptr inbounds void (%class.CBC_OneDimWriter*, i1)*, void (%class.CBC_OneDimWriter*, i1)** %7, i64 15
  %9 = load void (%class.CBC_OneDimWriter*, i1)*, void (%class.CBC_OneDimWriter*, i1)** %8, align 8
  tail call void %9(%class.CBC_OneDimWriter* %5, i1 zeroext %1) #6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CBC_OneDimWriter* @_ZN11CBC_OneCode15GetOneDimWriterEv(%class.CBC_OneCode* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = bitcast %class.CBC_Writer** %2 to %class.CBC_OneDimWriter**
  %4 = load %class.CBC_OneDimWriter*, %class.CBC_OneDimWriter** %3, align 8
  ret %class.CBC_OneDimWriter* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CBC_OneCode13SetDataLengthEi(%class.CBC_OneCode* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %class.CBC_Writer** %3 to %class.CBC_OneDimWriter**
  %5 = load %class.CBC_OneDimWriter*, %class.CBC_OneDimWriter** %4, align 8
  %6 = bitcast %class.CBC_OneDimWriter* %5 to void (%class.CBC_OneDimWriter*, i32)***
  %7 = load void (%class.CBC_OneDimWriter*, i32)**, void (%class.CBC_OneDimWriter*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%class.CBC_OneDimWriter*, i32)*, void (%class.CBC_OneDimWriter*, i32)** %7, i64 16
  %9 = load void (%class.CBC_OneDimWriter*, i32)*, void (%class.CBC_OneDimWriter*, i32)** %8, align 8
  tail call void %9(%class.CBC_OneDimWriter* %5, i32 %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CBC_OneCode14SetCalChecksumEb(%class.CBC_OneCode* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %class.CBC_Writer** %3 to %class.CBC_OneDimWriter**
  %5 = load %class.CBC_OneDimWriter*, %class.CBC_OneDimWriter** %4, align 8
  %6 = bitcast %class.CBC_OneDimWriter* %5 to void (%class.CBC_OneDimWriter*, i1)***
  %7 = load void (%class.CBC_OneDimWriter*, i1)**, void (%class.CBC_OneDimWriter*, i1)*** %6, align 8
  %8 = getelementptr inbounds void (%class.CBC_OneDimWriter*, i1)*, void (%class.CBC_OneDimWriter*, i1)** %7, i64 17
  %9 = load void (%class.CBC_OneDimWriter*, i1)*, void (%class.CBC_OneDimWriter*, i1)** %8, align 8
  tail call void %9(%class.CBC_OneDimWriter* %5, i1 zeroext %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CBC_OneCode7SetFontEP8CFX_Font(%class.CBC_OneCode* nocapture readonly, %class.CFX_Font*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %class.CBC_Writer** %3 to %class.CBC_OneDimWriter**
  %5 = load %class.CBC_OneDimWriter*, %class.CBC_OneDimWriter** %4, align 8
  %6 = tail call zeroext i1 @_ZN16CBC_OneDimWriter7SetFontEP8CFX_Font(%class.CBC_OneDimWriter* %5, %class.CFX_Font* %1) #6
  ret i1 %6
}

declare zeroext i1 @_ZN16CBC_OneDimWriter7SetFontEP8CFX_Font(%class.CBC_OneDimWriter*, %class.CFX_Font*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CBC_OneCode11SetFontSizeEf(%class.CBC_OneCode* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %class.CBC_Writer** %3 to %class.CBC_OneDimWriter**
  %5 = load %class.CBC_OneDimWriter*, %class.CBC_OneDimWriter** %4, align 8
  %6 = bitcast %class.CBC_OneDimWriter* %5 to void (%class.CBC_OneDimWriter*, float)***
  %7 = load void (%class.CBC_OneDimWriter*, float)**, void (%class.CBC_OneDimWriter*, float)*** %6, align 8
  %8 = getelementptr inbounds void (%class.CBC_OneDimWriter*, float)*, void (%class.CBC_OneDimWriter*, float)** %7, i64 18
  %9 = load void (%class.CBC_OneDimWriter*, float)*, void (%class.CBC_OneDimWriter*, float)** %8, align 8
  tail call void %9(%class.CBC_OneDimWriter* %5, float %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CBC_OneCode12SetFontStyleEi(%class.CBC_OneCode* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %class.CBC_Writer** %3 to %class.CBC_OneDimWriter**
  %5 = load %class.CBC_OneDimWriter*, %class.CBC_OneDimWriter** %4, align 8
  %6 = bitcast %class.CBC_OneDimWriter* %5 to void (%class.CBC_OneDimWriter*, i32)***
  %7 = load void (%class.CBC_OneDimWriter*, i32)**, void (%class.CBC_OneDimWriter*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%class.CBC_OneDimWriter*, i32)*, void (%class.CBC_OneDimWriter*, i32)** %7, i64 19
  %9 = load void (%class.CBC_OneDimWriter*, i32)*, void (%class.CBC_OneDimWriter*, i32)** %8, align 8
  tail call void %9(%class.CBC_OneDimWriter* %5, i32 %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CBC_OneCode12SetFontColorEj(%class.CBC_OneCode* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneCode, %class.CBC_OneCode* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %class.CBC_Writer** %3 to %class.CBC_OneDimWriter**
  %5 = load %class.CBC_OneDimWriter*, %class.CBC_OneDimWriter** %4, align 8
  %6 = bitcast %class.CBC_OneDimWriter* %5 to void (%class.CBC_OneDimWriter*, i32)***
  %7 = load void (%class.CBC_OneDimWriter*, i32)**, void (%class.CBC_OneDimWriter*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%class.CBC_OneDimWriter*, i32)*, void (%class.CBC_OneDimWriter*, i32)** %7, i64 20
  %9 = load void (%class.CBC_OneDimWriter*, i32)*, void (%class.CBC_OneDimWriter*, i32)** %8, align 8
  tail call void %9(%class.CBC_OneDimWriter* %5, i32 %1) #6
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
