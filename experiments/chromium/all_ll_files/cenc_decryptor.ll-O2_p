; ModuleID = '../../media/cdm/cenc_decryptor.cc'
source_filename = "../../media/cdm/cenc_decryptor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::DecoderBuffer" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr", %"class.base::TimeDelta", %"class.base::TimeDelta", i64, i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"struct.std::__1::pair", i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.media::ReadOnlyUnalignedMapping"* }
%"class.media::ReadOnlyUnalignedMapping" = type { %"class.base::ReadOnlySharedMemoryMapping", i64, i64 }
%"class.base::ReadOnlySharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.media::UnalignedSharedMemory"* }
%"class.media::UnalignedSharedMemory" = type { %"class.base::subtle::PlatformSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping", i8, i64, i8* }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.media::DecryptConfig"* }
%"class.media::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.absl::optional", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.20" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"struct.std::__1::pair" = type { %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.crypto::SymmetricKey" = type { i32 (...)**, %"class.std::__1::basic_string" }
%"class.crypto::Encryptor" = type { %"class.crypto::SymmetricKey"*, i32, %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { i8*, i8*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::DecoderBuffer"* @_ZN5media17DecryptCencBufferERKNS_13DecoderBufferERKN6crypto12SymmetricKeyE(%"class.media::DecoderBuffer"* readonly dereferenceable(112), %"class.crypto::SymmetricKey"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = alloca %"class.crypto::Encryptor", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load %"class.media::ReadOnlyUnalignedMapping"*, %"class.media::ReadOnlyUnalignedMapping"** %6, align 8
  %8 = icmp eq %"class.media::ReadOnlyUnalignedMapping"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.media::ReadOnlyUnalignedMapping", %"class.media::ReadOnlyUnalignedMapping"* %7, i64 0, i32 0, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call i8* @_ZNK5media24ReadOnlyUnalignedMapping6memoryEv(%"class.media::ReadOnlyUnalignedMapping"* nonnull %7) #6
  br label %25

15:                                               ; preds = %9, %2
  %16 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %17 = load %"class.media::UnalignedSharedMemory"*, %"class.media::UnalignedSharedMemory"** %16, align 8
  %18 = icmp eq %"class.media::UnalignedSharedMemory"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.media::UnalignedSharedMemory", %"class.media::UnalignedSharedMemory"* %17, i64 0, i32 5
  %21 = load i8*, i8** %20, align 8
  br label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %13, %19, %22
  %26 = phi i8* [ %14, %13 ], [ %21, %19 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %30 = load %"class.media::DecryptConfig"*, %"class.media::DecryptConfig"** %29, align 8
  %31 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %30, i64 0, i32 3
  %32 = bitcast %"class.crypto::Encryptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 40, i1 false)
  call void @_ZN6crypto9EncryptorC1Ev(%"class.crypto::Encryptor"* nonnull %3) #6
  %33 = call zeroext i1 @_ZN6crypto9Encryptor4InitEPKNS_12SymmetricKeyENS0_4ModeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crypto::Encryptor"* nonnull %3, %"class.crypto::SymmetricKey"* %1, i32 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #6
  br i1 %33, label %34, label %310

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %42 = select i1 %38, i8* %40, i8* %41
  %43 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %30, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %37 to i64
  %46 = select i1 %38, i64 %44, i64 %45
  %47 = call zeroext i1 @_ZN6crypto9Encryptor10SetCounterEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crypto::Encryptor"* nonnull %3, i8* %42, i64 %46) #6
  br i1 %47, label %48, label %310

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %30, i64 0, i32 4
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %49, i64 0, i32 0, i32 0
  %51 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %50, align 8
  %52 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %30, i64 0, i32 4, i32 0, i32 1
  %53 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %52, align 8
  %54 = icmp eq %"struct.media::SubsampleEntry"* %51, %53
  br i1 %54, label %55, label %98

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #6
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 24, i1 false) #6
  %58 = call zeroext i1 @_ZN6crypto9Encryptor7DecryptEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.crypto::Encryptor"* nonnull %3, i8* %26, i64 %28, %"class.std::__1::basic_string"* nonnull %4) #6
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %89

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i8*, i8** %57, align 8
  %68 = load i64, i64* %62, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i8* %67, i8* %56
  %71 = select i1 %66, i64 %68, i64 %69
  %72 = call %"class.media::DecoderBuffer"* @_ZN5media13DecoderBuffer8CopyFromEPKhm(i8* %70, i64 %71) #6
  %73 = ptrtoint %"class.media::DecoderBuffer"* %72 to i64
  %74 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 4, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.media::DecoderBuffer"* %72 to void (%"class.media::DecoderBuffer"*, i64)***
  %77 = load void (%"class.media::DecoderBuffer"*, i64)**, void (%"class.media::DecoderBuffer"*, i64)*** %76, align 8
  %78 = load void (%"class.media::DecoderBuffer"*, i64)*, void (%"class.media::DecoderBuffer"*, i64)** %77, align 8
  call void %78(%"class.media::DecoderBuffer"* %72, i64 %75) #6
  %79 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 5, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %72, i64 0, i32 5, i32 0
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 13
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %72, i64 0, i32 13
  store i8 %83, i8* %84, align 8
  %85 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 7
  %88 = load i64, i64* %87, align 8
  call void @_ZN5media13DecoderBuffer16CopySideDataFromEPKhm(%"class.media::DecoderBuffer"* %72, i8* %86, i64 %88) #6
  br label %89

89:                                               ; preds = %59, %61
  %90 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %60, %59 ], [ %63, %61 ]
  %91 = phi i64 [ 0, %59 ], [ %73, %61 ]
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %96) #7
  br label %97

97:                                               ; preds = %89, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #6
  br label %310

98:                                               ; preds = %48
  %99 = call zeroext i1 @_ZN5media25VerifySubsamplesMatchSizeERKNSt3__16vectorINS_14SubsampleEntryENS0_9allocatorIS2_EEEEm(%"class.std::__1::vector"* dereferenceable(24) %49, i64 %28) #6
  br i1 %99, label %100, label %310

100:                                              ; preds = %98
  %101 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %50, align 8
  %102 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %52, align 8
  %103 = icmp eq %"struct.media::SubsampleEntry"* %101, %102
  br i1 %103, label %173, label %104

104:                                              ; preds = %100
  %105 = ptrtoint %"struct.media::SubsampleEntry"* %101 to i64
  %106 = getelementptr %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %102, i64 -1, i32 0
  %107 = ptrtoint i32* %106 to i64
  %108 = sub i64 %107, %105
  %109 = lshr i64 %108, 3
  %110 = add nuw nsw i64 %109, 1
  %111 = and i64 %110, 7
  %112 = icmp ult i64 %108, 56
  br i1 %112, label %115, label %113

113:                                              ; preds = %104
  %114 = sub nsw i64 %110, %111
  br label %134

115:                                              ; preds = %134, %104
  %116 = phi i64 [ undef, %104 ], [ %169, %134 ]
  %117 = phi i64 [ 0, %104 ], [ %169, %134 ]
  %118 = phi %"struct.media::SubsampleEntry"* [ %101, %104 ], [ %170, %134 ]
  %119 = icmp eq i64 %111, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %115, %120
  %121 = phi i64 [ %127, %120 ], [ %117, %115 ]
  %122 = phi %"struct.media::SubsampleEntry"* [ %128, %120 ], [ %118, %115 ]
  %123 = phi i64 [ %129, %120 ], [ %111, %115 ]
  %124 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %122, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i64
  %127 = add i64 %121, %126
  %128 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %122, i64 1
  %129 = add i64 %123, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %120, !llvm.loop !3

131:                                              ; preds = %120, %115
  %132 = phi i64 [ %116, %115 ], [ %127, %120 ]
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %173, label %211

134:                                              ; preds = %134, %113
  %135 = phi i64 [ 0, %113 ], [ %169, %134 ]
  %136 = phi %"struct.media::SubsampleEntry"* [ %101, %113 ], [ %170, %134 ]
  %137 = phi i64 [ %114, %113 ], [ %171, %134 ]
  %138 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %136, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i64
  %141 = add i64 %135, %140
  %142 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %136, i64 1, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = add i64 %141, %144
  %146 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %136, i64 2, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = zext i32 %147 to i64
  %149 = add i64 %145, %148
  %150 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %136, i64 3, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i64
  %153 = add i64 %149, %152
  %154 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %136, i64 4, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  %157 = add i64 %153, %156
  %158 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %136, i64 5, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = zext i32 %159 to i64
  %161 = add i64 %157, %160
  %162 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %136, i64 6, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = add i64 %161, %164
  %166 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %136, i64 7, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i64
  %169 = add i64 %165, %168
  %170 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %136, i64 8
  %171 = add i64 %137, -8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %115, label %134

173:                                              ; preds = %100, %131
  %174 = load %"class.media::ReadOnlyUnalignedMapping"*, %"class.media::ReadOnlyUnalignedMapping"** %6, align 8
  %175 = icmp eq %"class.media::ReadOnlyUnalignedMapping"* %174, null
  br i1 %175, label %182, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.media::ReadOnlyUnalignedMapping", %"class.media::ReadOnlyUnalignedMapping"* %174, i64 0, i32 0, i32 0, i32 1
  %178 = load i8*, i8** %177, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  %181 = call i8* @_ZNK5media24ReadOnlyUnalignedMapping6memoryEv(%"class.media::ReadOnlyUnalignedMapping"* nonnull %174) #6
  br label %192

182:                                              ; preds = %176, %173
  %183 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %184 = load %"class.media::UnalignedSharedMemory"*, %"class.media::UnalignedSharedMemory"** %183, align 8
  %185 = icmp eq %"class.media::UnalignedSharedMemory"* %184, null
  br i1 %185, label %189, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.media::UnalignedSharedMemory", %"class.media::UnalignedSharedMemory"* %184, i64 0, i32 5
  %188 = load i8*, i8** %187, align 8
  br label %192

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  br label %192

192:                                              ; preds = %180, %186, %189
  %193 = phi i8* [ %181, %180 ], [ %188, %186 ], [ %191, %189 ]
  %194 = call %"class.media::DecoderBuffer"* @_ZN5media13DecoderBuffer8CopyFromEPKhm(i8* %193, i64 %28) #6
  %195 = ptrtoint %"class.media::DecoderBuffer"* %194 to i64
  %196 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 4, i32 0
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.media::DecoderBuffer"* %194 to void (%"class.media::DecoderBuffer"*, i64)***
  %199 = load void (%"class.media::DecoderBuffer"*, i64)**, void (%"class.media::DecoderBuffer"*, i64)*** %198, align 8
  %200 = load void (%"class.media::DecoderBuffer"*, i64)*, void (%"class.media::DecoderBuffer"*, i64)** %199, align 8
  call void %200(%"class.media::DecoderBuffer"* %194, i64 %197) #6
  %201 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 5, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %194, i64 0, i32 5, i32 0
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 13
  %205 = load i8, i8* %204, align 8, !range !2
  %206 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %194, i64 0, i32 13
  store i8 %205, i8* %206, align 8
  %207 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 7
  %210 = load i64, i64* %209, align 8
  call void @_ZN5media13DecoderBuffer16CopySideDataFromEPKhm(%"class.media::DecoderBuffer"* %194, i8* %208, i64 %210) #6
  br label %310

211:                                              ; preds = %131
  %212 = call i8* @_Znam(i64 %132) #7
  %213 = bitcast %"struct.media::SubsampleEntry"** %52 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %"class.std::__1::vector"* %49 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = icmp eq i64 %214, %216
  br i1 %217, label %241, label %218

218:                                              ; preds = %211, %218
  %219 = phi i64 [ %237, %218 ], [ %216, %211 ]
  %220 = phi i64 [ %235, %218 ], [ 0, %211 ]
  %221 = phi i8* [ %234, %218 ], [ %212, %211 ]
  %222 = phi i8* [ %233, %218 ], [ %26, %211 ]
  %223 = inttoptr i64 %219 to %"struct.media::SubsampleEntry"*
  %224 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %223, i64 %220, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds i8, i8* %222, i64 %226
  %228 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %223, i64 %220, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %221, i8* align 1 %227, i64 %230, i1 false) #6
  %231 = load i32, i32* %228, align 4
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i8, i8* %227, i64 %232
  %234 = getelementptr inbounds i8, i8* %221, i64 %232
  %235 = add nuw i64 %220, 1
  %236 = load i64, i64* %213, align 8
  %237 = load i64, i64* %215, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = icmp ult i64 %235, %239
  br i1 %240, label %218, label %241

241:                                              ; preds = %218, %211
  %242 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #6
  %243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 0, i64 24, i1 false) #6
  %244 = call zeroext i1 @_ZN6crypto9Encryptor7DecryptEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.crypto::Encryptor"* nonnull %3, i8* nonnull %212, i64 %132, %"class.std::__1::basic_string"* nonnull %5) #6
  br i1 %244, label %247, label %245

245:                                              ; preds = %241
  %246 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %301

247:                                              ; preds = %241
  %248 = call %"class.media::DecoderBuffer"* @_ZN5media13DecoderBuffer8CopyFromEPKhm(i8* %26, i64 %28) #6
  %249 = ptrtoint %"class.media::DecoderBuffer"* %248 to i64
  %250 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %251 = load i64, i64* %213, align 8
  %252 = load i64, i64* %215, align 8
  %253 = icmp eq i64 %251, %252
  br i1 %253, label %285, label %254

254:                                              ; preds = %247
  %255 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %248, i64 0, i32 3, i32 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %250, i64 0, i32 1, i32 0
  %258 = load i8, i8* %257, align 1
  %259 = icmp slt i8 %258, 0
  %260 = load i8*, i8** %243, align 8
  %261 = select i1 %259, i8* %260, i8* %242
  br label %262

262:                                              ; preds = %254, %262
  %263 = phi i64 [ %281, %262 ], [ %252, %254 ]
  %264 = phi i64 [ %279, %262 ], [ 0, %254 ]
  %265 = phi i8* [ %278, %262 ], [ %256, %254 ]
  %266 = phi i8* [ %277, %262 ], [ %261, %254 ]
  %267 = inttoptr i64 %263 to %"struct.media::SubsampleEntry"*
  %268 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %267, i64 %264, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds i8, i8* %265, i64 %270
  %272 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %267, i64 %264, i32 1
  %273 = load i32, i32* %272, align 4
  %274 = zext i32 %273 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %271, i8* align 1 %266, i64 %274, i1 false) #6
  %275 = load i32, i32* %272, align 4
  %276 = zext i32 %275 to i64
  %277 = getelementptr inbounds i8, i8* %266, i64 %276
  %278 = getelementptr inbounds i8, i8* %271, i64 %276
  %279 = add nuw i64 %264, 1
  %280 = load i64, i64* %213, align 8
  %281 = load i64, i64* %215, align 8
  %282 = sub i64 %280, %281
  %283 = ashr exact i64 %282, 3
  %284 = icmp ult i64 %279, %283
  br i1 %284, label %262, label %285

285:                                              ; preds = %262, %247
  %286 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 4, i32 0
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.media::DecoderBuffer"* %248 to void (%"class.media::DecoderBuffer"*, i64)***
  %289 = load void (%"class.media::DecoderBuffer"*, i64)**, void (%"class.media::DecoderBuffer"*, i64)*** %288, align 8
  %290 = load void (%"class.media::DecoderBuffer"*, i64)*, void (%"class.media::DecoderBuffer"*, i64)** %289, align 8
  call void %290(%"class.media::DecoderBuffer"* %248, i64 %287) #6
  %291 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 5, i32 0
  %292 = load i64, i64* %291, align 8
  %293 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %248, i64 0, i32 5, i32 0
  store i64 %292, i64* %293, align 8
  %294 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 13
  %295 = load i8, i8* %294, align 8, !range !2
  %296 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %248, i64 0, i32 13
  store i8 %295, i8* %296, align 8
  %297 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 7
  %300 = load i64, i64* %299, align 8
  call void @_ZN5media13DecoderBuffer16CopySideDataFromEPKhm(%"class.media::DecoderBuffer"* %248, i8* %298, i64 %300) #6
  br label %301

301:                                              ; preds = %245, %285
  %302 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %246, %245 ], [ %250, %285 ]
  %303 = phi i64 [ 0, %245 ], [ %249, %285 ]
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %302, i64 0, i32 1, i32 0
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %309

307:                                              ; preds = %301
  %308 = load i8*, i8** %243, align 8
  call void @_ZdlPv(i8* %308) #7
  br label %309

309:                                              ; preds = %301, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #6
  call void @_ZdaPv(i8* nonnull %212) #7
  br label %310

310:                                              ; preds = %98, %34, %25, %97, %192, %309
  %311 = phi i64 [ %91, %97 ], [ %195, %192 ], [ %303, %309 ], [ 0, %25 ], [ 0, %34 ], [ 0, %98 ]
  call void @_ZN6crypto9EncryptorD1Ev(%"class.crypto::Encryptor"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #6
  %312 = inttoptr i64 %311 to %"class.media::DecoderBuffer"*
  ret %"class.media::DecoderBuffer"* %312
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6crypto9EncryptorC1Ev(%"class.crypto::Encryptor"*) unnamed_addr #2

declare zeroext i1 @_ZN6crypto9Encryptor4InitEPKNS_12SymmetricKeyENS0_4ModeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crypto::Encryptor"*, %"class.crypto::SymmetricKey"*, i32, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN6crypto9Encryptor10SetCounterEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crypto::Encryptor"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN6crypto9Encryptor7DecryptEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.crypto::Encryptor"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.media::DecoderBuffer"* @_ZN5media13DecoderBuffer8CopyFromEPKhm(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN5media25VerifySubsamplesMatchSizeERKNSt3__16vectorINS_14SubsampleEntryENS0_9allocatorIS2_EEEEm(%"class.std::__1::vector"* dereferenceable(24), i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6crypto9EncryptorD1Ev(%"class.crypto::Encryptor"*) unnamed_addr #4

declare i8* @_ZNK5media24ReadOnlyUnalignedMapping6memoryEv(%"class.media::ReadOnlyUnalignedMapping"*) local_unnamed_addr #2

declare void @_ZN5media13DecoderBuffer16CopySideDataFromEPKhm(%"class.media::DecoderBuffer"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
