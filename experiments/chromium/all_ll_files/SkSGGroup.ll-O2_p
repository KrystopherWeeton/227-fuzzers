; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGGroup.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGGroup.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sksg::RenderNode::ScopedRenderContext" = type <{ %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext", %class.sk_sp.17, i32, [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.5, [384 x i64], %class.sk_sp.6, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.10" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.5 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.6 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.16, %class.sk_sp.17, %class.sk_sp.17, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.sk_sp.16 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.sk_sp.17 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%"class.sksg::Group" = type <{ %"class.sksg::RenderNode.base", [6 x i8], %"class.std::__1::vector.1", i8, [7 x i8] }>
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp*, %class.sk_sp*, %"class.std::__1::__compressed_pair" }
%class.sk_sp = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp* }
%class.sk_sp.3 = type { %"class.sksg::Node"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkPoint = type { float, float }
%"class.sksg::InvalidationController" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_ = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN4sksg10RenderNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@_ZTVN4sksg5GroupE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::Group"*)* @_ZN4sksg5GroupD2Ev to i8*), i8* bitcast (void (%"class.sksg::Group"*)* @_ZN4sksg5GroupD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::Group"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg5Group12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::Group"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK4sksg5Group8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.sksg::Group"*, %struct.SkPoint*)* @_ZNK4sksg5Group8onNodeAtERK7SkPoint to i8*)] }, align 8
@__const._ZNK4sksg5Group8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.local_ctx = private unnamed_addr constant %"class.sksg::RenderNode::ScopedRenderContext" <{ %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), %"struct.sksg::RenderNode::RenderContext" { %class.sk_sp.16 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.17 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.17 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.17 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN4sksg5GroupC1Ev = hidden unnamed_addr alias void (%"class.sksg::Group"*), void (%"class.sksg::Group"*)* @_ZN4sksg5GroupC2Ev
@_ZN4sksg5GroupC1ENSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE = hidden unnamed_addr alias void (%"class.sksg::Group"*, %"class.std::__1::vector.1"*), void (%"class.sksg::Group"*, %"class.std::__1::vector.1"*)* @_ZN4sksg5GroupC2ENSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE
@_ZN4sksg5GroupD1Ev = hidden unnamed_addr alias void (%"class.sksg::Group"*), void (%"class.sksg::Group"*)* @_ZN4sksg5GroupD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5GroupC2Ev(%"class.sksg::Group"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.sksg::Group"* %0 to %"class.sksg::RenderNode"*
  tail call void @_ZN4sksg10RenderNodeC2Ej(%"class.sksg::RenderNode"* %2, i32 0) #9
  %3 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg5GroupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::vector.1"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  %6 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 3
  store i8 1, i8* %6, align 8
  ret void
}

declare void @_ZN4sksg10RenderNodeC2Ej(%"class.sksg::RenderNode"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5GroupC2ENSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::Group"*, %"class.std::__1::vector.1"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.3, align 8
  %4 = bitcast %"class.sksg::Group"* %0 to %"class.sksg::RenderNode"*
  tail call void @_ZN4sksg10RenderNodeC2Ej(%"class.sksg::RenderNode"* %4, i32 0) #9
  %5 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg5GroupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::vector.1"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = bitcast %"class.std::__1::vector.1"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.1"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %class.sk_sp** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = bitcast %class.sk_sp** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %class.sk_sp** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %class.sk_sp** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector.1"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #9
  %22 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 3
  store i8 1, i8* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %6, i64 0, i32 0, i32 0
  %24 = load %class.sk_sp*, %class.sk_sp** %23, align 8
  %25 = load %class.sk_sp*, %class.sk_sp** %14, align 8
  %26 = icmp eq %class.sk_sp* %24, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.sksg::Group"* %0 to %"class.sksg::Node"*
  %29 = bitcast %class.sk_sp.3* %3 to i8*
  %30 = bitcast %class.sk_sp.3* %3 to %"class.sksg::RenderNode"**
  %31 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  br label %33

32:                                               ; preds = %54, %2
  ret void

33:                                               ; preds = %27, %54
  %34 = phi %class.sk_sp* [ %24, %27 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %35 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %34, i64 0, i32 0
  %36 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %35, align 8
  %37 = icmp eq %"class.sksg::RenderNode"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic
  br label %41

41:                                               ; preds = %33, %38
  store %"class.sksg::RenderNode"* %36, %"class.sksg::RenderNode"** %30, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %28, %class.sk_sp.3* nonnull dereferenceable(8) %3) #9
  %42 = load %"class.sksg::Node"*, %"class.sksg::Node"** %31, align 8
  %43 = icmp eq %"class.sksg::Node"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %"class.sksg::Node"* %42 to %class.SkRefCntBase*
  %50 = bitcast %"class.sksg::Node"* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #9
  br label %54

54:                                               ; preds = %41, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  %55 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %34, i64 1
  %56 = icmp eq %class.sk_sp* %55, %25
  br i1 %56, label %32, label %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.3* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5GroupD2Ev(%"class.sksg::Group"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.3, align 8
  %3 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg5GroupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %6 = load %class.sk_sp*, %class.sk_sp** %5, align 8
  %7 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load %class.sk_sp*, %class.sk_sp** %7, align 8
  %9 = icmp eq %class.sk_sp* %6, %8
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.sksg::Group"* %0 to %"class.sksg::Node"*
  %12 = bitcast %class.sk_sp.3* %2 to i8*
  %13 = bitcast %class.sk_sp.3* %2 to %"class.sksg::RenderNode"**
  %14 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %2, i64 0, i32 0
  br label %49

15:                                               ; preds = %70
  %16 = load %class.sk_sp*, %class.sk_sp** %5, align 8
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi %class.sk_sp* [ %16, %15 ], [ %6, %1 ]
  %19 = icmp eq %class.sk_sp* %18, null
  br i1 %19, label %47, label %20

20:                                               ; preds = %17
  %21 = bitcast %class.sk_sp* %18 to i8*
  %22 = load %class.sk_sp*, %class.sk_sp** %7, align 8
  %23 = icmp eq %class.sk_sp* %22, %18
  br i1 %23, label %45, label %24

24:                                               ; preds = %20, %40
  %25 = phi %class.sk_sp* [ %26, %40 ], [ %22, %20 ]
  %26 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %25, i64 -1
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %26, i64 0, i32 0
  %28 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %27, align 8
  %29 = icmp eq %"class.sksg::RenderNode"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::RenderNode"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::RenderNode"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #9
  br label %40

40:                                               ; preds = %34, %30, %24
  %41 = icmp eq %class.sk_sp* %26, %18
  br i1 %41, label %42, label %24

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.1"* %4 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %20
  %46 = phi i8* [ %44, %42 ], [ %21, %20 ]
  store %class.sk_sp* %18, %class.sk_sp** %7, align 8
  call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %17, %45
  %48 = bitcast %"class.sksg::Group"* %0 to %"class.sksg::Node"*
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %48) #9
  ret void

49:                                               ; preds = %10, %70
  %50 = phi %class.sk_sp* [ %6, %10 ], [ %71, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %51 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %50, i64 0, i32 0
  %52 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %51, align 8
  %53 = icmp eq %"class.sksg::RenderNode"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic
  br label %57

57:                                               ; preds = %49, %54
  store %"class.sksg::RenderNode"* %52, %"class.sksg::RenderNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %11, %class.sk_sp.3* nonnull dereferenceable(8) %2) #9
  %58 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %59 = icmp eq %"class.sksg::Node"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %"class.sksg::Node"* %58 to %class.SkRefCntBase*
  %66 = bitcast %"class.sksg::Node"* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #9
  br label %70

70:                                               ; preds = %57, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %71 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %50, i64 1
  %72 = icmp eq %class.sk_sp* %71, %8
  br i1 %72, label %15, label %49
}

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.3* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5GroupD0Ev(%"class.sksg::Group"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4sksg5GroupD2Ev(%"class.sksg::Group"* %0) #9
  %2 = bitcast %"class.sksg::Group"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5Group5clearEv(%"class.sksg::Group"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.3, align 8
  %3 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %5 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %class.sk_sp*, %class.sk_sp** %5, align 8
  %7 = icmp eq %class.sk_sp* %4, %6
  br i1 %7, label %35, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.sksg::Group"* %0 to %"class.sksg::Node"*
  %10 = bitcast %class.sk_sp.3* %2 to i8*
  %11 = bitcast %class.sk_sp.3* %2 to %"class.sksg::RenderNode"**
  %12 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %2, i64 0, i32 0
  br label %37

13:                                               ; preds = %58
  %14 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %15 = load %class.sk_sp*, %class.sk_sp** %5, align 8
  %16 = icmp eq %class.sk_sp* %15, %14
  br i1 %16, label %35, label %17

17:                                               ; preds = %13, %33
  %18 = phi %class.sk_sp* [ %19, %33 ], [ %15, %13 ]
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %18, i64 -1
  %20 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %19, i64 0, i32 0
  %21 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %20, align 8
  %22 = icmp eq %"class.sksg::RenderNode"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %"class.sksg::RenderNode"* %21 to %class.SkRefCntBase*
  %29 = bitcast %"class.sksg::RenderNode"* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  call void %32(%class.SkRefCntBase* nonnull %28) #9
  br label %33

33:                                               ; preds = %27, %23, %17
  %34 = icmp eq %class.sk_sp* %19, %14
  br i1 %34, label %35, label %17

35:                                               ; preds = %33, %1, %13
  %36 = phi %class.sk_sp* [ %14, %13 ], [ %4, %1 ], [ %14, %33 ]
  store %class.sk_sp* %36, %class.sk_sp** %5, align 8
  ret void

37:                                               ; preds = %8, %58
  %38 = phi %class.sk_sp* [ %4, %8 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %39 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %38, i64 0, i32 0
  %40 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %39, align 8
  %41 = icmp eq %"class.sksg::RenderNode"* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 monotonic
  br label %45

45:                                               ; preds = %37, %42
  store %"class.sksg::RenderNode"* %40, %"class.sksg::RenderNode"** %11, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %9, %class.sk_sp.3* nonnull dereferenceable(8) %2) #9
  %46 = load %"class.sksg::Node"*, %"class.sksg::Node"** %12, align 8
  %47 = icmp eq %"class.sksg::Node"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %"class.sksg::Node"* %46 to %class.SkRefCntBase*
  %54 = bitcast %"class.sksg::Node"* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  call void %57(%class.SkRefCntBase* nonnull %53) #9
  br label %58

58:                                               ; preds = %45, %48, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %59 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %38, i64 1
  %60 = icmp eq %class.sk_sp* %59, %6
  br i1 %60, label %13, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5Group8addChildE5sk_spINS_10RenderNodeEE(%"class.sksg::Group"*, %class.sk_sp*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.3, align 8
  %4 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %6 = load %class.sk_sp*, %class.sk_sp** %5, align 8
  %7 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load %class.sk_sp*, %class.sk_sp** %7, align 8
  %9 = icmp eq %class.sk_sp* %6, %8
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %11 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %10, align 8
  br i1 %9, label %20, label %14

12:                                               ; preds = %14
  %13 = icmp eq %class.sk_sp* %19, %8
  br i1 %13, label %20, label %14

14:                                               ; preds = %2, %12
  %15 = phi %class.sk_sp* [ %19, %12 ], [ %6, %2 ]
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %15, i64 0, i32 0
  %17 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %16, align 8
  %18 = icmp eq %"class.sksg::RenderNode"* %17, %11
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %15, i64 1
  br i1 %18, label %57, label %12

20:                                               ; preds = %12, %2
  %21 = bitcast %"class.sksg::Group"* %0 to %"class.sksg::Node"*
  %22 = bitcast %class.sk_sp.3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %24 = icmp eq %"class.sksg::RenderNode"* %11, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %20, %25
  %29 = bitcast %class.sk_sp.3* %3 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %11, %"class.sksg::RenderNode"** %29, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %21, %class.sk_sp.3* nonnull dereferenceable(8) %3) #9
  %30 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %31 = load %"class.sksg::Node"*, %"class.sksg::Node"** %30, align 8
  %32 = icmp eq %"class.sksg::Node"* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %"class.sksg::Node"* %31 to %class.SkRefCntBase*
  %39 = bitcast %"class.sksg::Node"* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  call void %42(%class.SkRefCntBase* nonnull %38) #9
  br label %43

43:                                               ; preds = %28, %33, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %44 = load %class.sk_sp*, %class.sk_sp** %7, align 8
  %45 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %46 = load %class.sk_sp*, %class.sk_sp** %45, align 8
  %47 = icmp ult %class.sk_sp* %44, %46
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = bitcast %class.sk_sp* %1 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %23, align 8
  %51 = bitcast %class.sk_sp* %44 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %44, i64 1
  %53 = ptrtoint %class.sk_sp* %52 to i64
  %54 = bitcast %class.sk_sp** %7 to i64*
  store i64 %53, i64* %54, align 8
  br label %56

55:                                               ; preds = %43
  call void @_ZNSt3__16vectorI5sk_spIN4sksg10RenderNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.1"* %4, %class.sk_sp* dereferenceable(8) %1) #9
  br label %56

56:                                               ; preds = %48, %55
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %21, i1 zeroext true) #9
  br label %57

57:                                               ; preds = %14, %56
  ret void
}

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5Group11removeChildERK5sk_spINS_10RenderNodeEE(%"class.sksg::Group"*, %class.sk_sp* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.3, align 8
  %4 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %class.sk_sp*, %class.sk_sp** %4, align 8
  %6 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load %class.sk_sp*, %class.sk_sp** %6, align 8
  %8 = icmp eq %class.sk_sp* %5, %7
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %11 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %10, align 8
  br label %12

12:                                               ; preds = %17, %9
  %13 = phi %class.sk_sp* [ %5, %9 ], [ %18, %17 ]
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %15 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %14, align 8
  %16 = icmp eq %"class.sksg::RenderNode"* %15, %11
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 1
  %19 = icmp eq %class.sk_sp* %18, %7
  br i1 %19, label %20, label %12

20:                                               ; preds = %17
  %21 = ptrtoint %class.sk_sp* %7 to i64
  br label %64

22:                                               ; preds = %12, %2
  %23 = phi %class.sk_sp* [ %5, %2 ], [ %13, %12 ]
  %24 = ptrtoint %class.sk_sp* %23 to i64
  %25 = icmp eq %class.sk_sp* %23, %7
  br i1 %25, label %64, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %23, i64 1
  %28 = icmp eq %class.sk_sp* %27, %7
  br i1 %28, label %64, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %58, %29
  %32 = phi %class.sk_sp* [ %27, %29 ], [ %60, %58 ]
  %33 = phi i64 [ %24, %29 ], [ %59, %58 ]
  %34 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %32, i64 0, i32 0
  %35 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %34, align 8
  %36 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %30, align 8
  %37 = icmp eq %"class.sksg::RenderNode"* %35, %36
  br i1 %37, label %58, label %38

38:                                               ; preds = %31
  %39 = ptrtoint %"class.sksg::RenderNode"* %35 to i64
  %40 = inttoptr i64 %33 to %class.sk_sp*
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %34, align 8
  %41 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %40, i64 0, i32 0
  %42 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %41, align 8
  %43 = inttoptr i64 %33 to i64*
  store i64 %39, i64* %43, align 8
  %44 = icmp eq %"class.sksg::RenderNode"* %42, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %"class.sksg::RenderNode"* %42 to %class.SkRefCntBase*
  %51 = bitcast %"class.sksg::RenderNode"* %42 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  tail call void %54(%class.SkRefCntBase* nonnull %50) #9
  br label %55

55:                                               ; preds = %49, %45, %38
  %56 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %40, i64 1
  %57 = ptrtoint %class.sk_sp* %56 to i64
  br label %58

58:                                               ; preds = %55, %31
  %59 = phi i64 [ %33, %31 ], [ %57, %55 ]
  %60 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %32, i64 1
  %61 = icmp eq %class.sk_sp* %60, %7
  br i1 %61, label %62, label %31

62:                                               ; preds = %58
  %63 = load %class.sk_sp*, %class.sk_sp** %6, align 8
  br label %64

64:                                               ; preds = %62, %20, %22, %26
  %65 = phi %class.sk_sp* [ %7, %22 ], [ %7, %20 ], [ %7, %26 ], [ %63, %62 ]
  %66 = phi i64 [ %24, %22 ], [ %21, %20 ], [ %24, %26 ], [ %59, %62 ]
  %67 = inttoptr i64 %66 to %class.sk_sp*
  %68 = icmp eq %class.sk_sp* %65, %67
  br i1 %68, label %88, label %69

69:                                               ; preds = %64, %85
  %70 = phi %class.sk_sp* [ %71, %85 ], [ %65, %64 ]
  %71 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %70, i64 -1
  %72 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %71, i64 0, i32 0
  %73 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %72, align 8
  %74 = icmp eq %"class.sksg::RenderNode"* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %"class.sksg::RenderNode"* %73 to %class.SkRefCntBase*
  %81 = bitcast %"class.sksg::RenderNode"* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  tail call void %84(%class.SkRefCntBase* nonnull %80) #9
  br label %85

85:                                               ; preds = %79, %75, %69
  %86 = icmp eq %class.sk_sp* %71, %67
  br i1 %86, label %87, label %69

87:                                               ; preds = %85
  store %class.sk_sp* %67, %class.sk_sp** %6, align 8
  br label %88

88:                                               ; preds = %64, %87
  %89 = bitcast %"class.sksg::Group"* %0 to %"class.sksg::Node"*
  %90 = bitcast %class.sk_sp.3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #9
  %91 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %92 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %91, align 8
  %93 = icmp eq %"class.sksg::RenderNode"* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %92, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 1 monotonic
  br label %97

97:                                               ; preds = %88, %94
  %98 = bitcast %class.sk_sp.3* %3 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %92, %"class.sksg::RenderNode"** %98, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %89, %class.sk_sp.3* nonnull dereferenceable(8) %3) #9
  %99 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %100 = load %"class.sksg::Node"*, %"class.sksg::Node"** %99, align 8
  %101 = icmp eq %"class.sksg::Node"* %100, null
  br i1 %101, label %112, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %100, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = bitcast %"class.sksg::Node"* %100 to %class.SkRefCntBase*
  %108 = bitcast %"class.sksg::Node"* %100 to void (%class.SkRefCntBase*)***
  %109 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, i64 2
  %111 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, align 8
  call void %111(%class.SkRefCntBase* nonnull %107) #9
  br label %112

112:                                              ; preds = %97, %102, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #9
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %89, i1 zeroext true) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg5Group8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::Group"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %5 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %6 = alloca %class.SkMatrix, align 4
  %7 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%"class.sksg::RenderNode::ScopedRenderContext"* @__const._ZNK4sksg5Group8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.local_ctx to i8*), i64 136, i1 false)
  %8 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %8) #9
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #9
  %9 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 0, i32 0, i32 3
  %10 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #9
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %6, %class.SkCanvas* %1) #9
  %11 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = call dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext12setIsolationERK6SkRectRK8SkMatrixb(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %struct.SkRect* dereferenceable(16) %9, %class.SkMatrix* nonnull dereferenceable(40) %6, i1 zeroext %13) #9
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4, %"class.sksg::RenderNode::ScopedRenderContext"* dereferenceable(136) %14)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #9
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %8) #9
  %15 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load %class.sk_sp*, %class.sk_sp** %15, align 8
  %17 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = load %class.sk_sp*, %class.sk_sp** %17, align 8
  %19 = icmp eq %class.sk_sp* %16, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %4, i64 0, i32 1
  br label %23

22:                                               ; preds = %23, %3
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %7) #9
  ret void

23:                                               ; preds = %20, %23
  %24 = phi %class.sk_sp* [ %16, %20 ], [ %27, %23 ]
  %25 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %24, i64 0, i32 0
  %26 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %25, align 8
  call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %26, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %21) #9
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %24, i64 1
  %28 = icmp eq %class.sk_sp* %27, %18
  br i1 %28, label %22, label %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #1

declare dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext12setIsolationERK6SkRectRK8SkMatrixb(%"class.sksg::RenderNode::ScopedRenderContext"*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i1 zeroext) local_unnamed_addr #1

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_(%"class.sksg::RenderNode::ScopedRenderContext"*, %"class.sksg::RenderNode::ScopedRenderContext"* dereferenceable(136)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 3
  %5 = bitcast %"struct.sksg::RenderNode::RenderContext"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  %6 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %7 = bitcast %class.SkMatrix* %4 to i8*
  %8 = bitcast %class.SkMatrix* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 40, i1 false) #9
  %9 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 4
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %11 = bitcast %class.SkMatrix* %9 to i8*
  %12 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 40, i1 false) #9
  %13 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 5
  store float 1.000000e+00, float* %13, align 8
  %14 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 6
  store i32 3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %15, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %16, align 8
  %17 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %0 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %20, i64 0, i32 0, i32 0
  %22 = bitcast %"struct.sksg::RenderNode::RenderContext"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %21, align 8
  %24 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %3, i64 0, i32 0, i32 0
  %25 = load %class.SkColorFilter*, %class.SkColorFilter** %24, align 8
  %26 = bitcast %"struct.sksg::RenderNode::RenderContext"* %3 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %class.SkColorFilter* %25, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %class.SkColorFilter* %25 to %class.SkRefCntBase*
  %34 = bitcast %class.SkColorFilter* %25 to void (%class.SkRefCntBase*)***
  %35 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, i64 2
  %37 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, align 8
  tail call void %37(%class.SkRefCntBase* nonnull %33) #9
  br label %38

38:                                               ; preds = %32, %28, %2
  %39 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 1
  %41 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %40, i64 0, i32 0
  %42 = bitcast %class.sk_sp.17* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %class.SkShader* null, %class.SkShader** %41, align 8
  %44 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %39, i64 0, i32 0
  %45 = load %class.SkShader*, %class.SkShader** %44, align 8
  %46 = bitcast %class.sk_sp.17* %39 to i64*
  store i64 %43, i64* %46, align 8
  %47 = icmp eq %class.SkShader* %45, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %class.SkShader, %class.SkShader* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkShader* %45 to %class.SkRefCntBase*
  %54 = bitcast %class.SkShader* %45 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #9
  br label %58

58:                                               ; preds = %52, %48, %38
  %59 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2
  %60 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 2
  %61 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %60, i64 0, i32 0
  %62 = bitcast %class.sk_sp.17* %60 to i64*
  %63 = load i64, i64* %62, align 8
  store %class.SkShader* null, %class.SkShader** %61, align 8
  %64 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %59, i64 0, i32 0
  %65 = load %class.SkShader*, %class.SkShader** %64, align 8
  %66 = bitcast %class.sk_sp.17* %59 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %class.SkShader* %65, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %class.SkShader, %class.SkShader* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkShader* %65 to %class.SkRefCntBase*
  %74 = bitcast %class.SkShader* %65 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  tail call void %77(%class.SkRefCntBase* nonnull %73) #9
  br label %78

78:                                               ; preds = %58, %68, %72
  %79 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 3
  %80 = bitcast %class.SkMatrix* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %80, i64 88, i1 false) #9
  %81 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 2
  %82 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %81, i64 0, i32 0
  %83 = bitcast %class.sk_sp.17* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.SkShader* null, %class.SkShader** %82, align 8
  %85 = load %class.SkShader*, %class.SkShader** %16, align 8
  %86 = bitcast %class.sk_sp.17* %15 to i64*
  store i64 %84, i64* %86, align 8
  %87 = icmp eq %class.SkShader* %85, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %class.SkShader, %class.SkShader* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %class.SkShader* %85 to %class.SkRefCntBase*
  %94 = bitcast %class.SkShader* %85 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  tail call void %97(%class.SkRefCntBase* nonnull %93) #9
  br label %98

98:                                               ; preds = %78, %88, %92
  %99 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 3
  store i32 %100, i32* %101, align 8
  store i32 -1, i32* %99, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"*) unnamed_addr #3

declare void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sksg::RenderNode"* @_ZNK4sksg5Group8onNodeAtERK7SkPoint(%"class.sksg::Group"* nocapture readonly, %struct.SkPoint* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %5 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 0
  br label %6

6:                                                ; preds = %10, %2
  %7 = phi %class.sk_sp* [ %4, %2 ], [ %11, %10 ]
  %8 = load %class.sk_sp*, %class.sk_sp** %5, align 8
  %9 = icmp eq %class.sk_sp* %7, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 -1
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %13 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %12, align 8
  %14 = tail call %"class.sksg::RenderNode"* @_ZNK4sksg10RenderNode6nodeAtERK7SkPoint(%"class.sksg::RenderNode"* %13, %struct.SkPoint* dereferenceable(8) %1) #9
  %15 = icmp eq %"class.sksg::RenderNode"* %14, null
  br i1 %15, label %6, label %16

16:                                               ; preds = %6, %10
  %17 = phi %"class.sksg::RenderNode"* [ %14, %10 ], [ null, %6 ]
  ret %"class.sksg::RenderNode"* %17
}

declare %"class.sksg::RenderNode"* @_ZNK4sksg10RenderNode6nodeAtERK7SkPoint(%"class.sksg::RenderNode"*, %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN4sksg5Group12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Group"* nocapture, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = alloca %struct.SkRect, align 4
  %7 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 3
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.sksg::Group", %"class.sksg::Group"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast %class.sk_sp** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.1"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %3
  %17 = bitcast %struct.SkRect* %6 to i8*
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %22 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0, i64 0
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 1
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 0
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 3
  %26 = bitcast %struct.SkRect* %6 to i8*
  br label %37

27:                                               ; preds = %71
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %29 = load <2 x float>, <2 x float>* %28, align 8
  %30 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %31 = load <2 x float>, <2 x float>* %30, align 8
  br label %32

32:                                               ; preds = %27, %3
  %33 = phi <2 x float> [ %31, %27 ], [ zeroinitializer, %3 ]
  %34 = phi <2 x float> [ %29, %27 ], [ zeroinitializer, %3 ]
  %35 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %34, 0
  %36 = insertvalue { <2 x float>, <2 x float> } %35, <2 x float> %33, 1
  ret { <2 x float>, <2 x float> } %36

37:                                               ; preds = %16, %71
  %38 = phi i64 [ %14, %16 ], [ %74, %71 ]
  %39 = phi i64 [ 0, %16 ], [ %72, %71 ]
  %40 = inttoptr i64 %38 to %class.sk_sp*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %41 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %40, i64 %39, i32 0
  %42 = bitcast %"class.sksg::RenderNode"** %41 to %"class.sksg::Node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -1, i64 16, i1 false)
  %43 = load %"class.sksg::Node"*, %"class.sksg::Node"** %42, align 8
  %44 = call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %43, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #9
  %45 = bitcast %struct.SkRect* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %45, i64 16, i1 false)
  %46 = load i8, i8* %8, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = icmp ne i64 %39, 0
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %71

50:                                               ; preds = %37
  %51 = load float, float* %18, align 4
  %52 = load float, float* %19, align 4
  %53 = load float, float* %20, align 4
  %54 = load float, float* %21, align 4
  %55 = load float, float* %22, align 8
  %56 = load float, float* %23, align 4
  %57 = load float, float* %24, align 8
  %58 = load float, float* %25, align 4
  %59 = fcmp olt float %51, %55
  %60 = select i1 %59, float %55, float %51
  %61 = fcmp olt float %57, %53
  %62 = select i1 %61, float %57, float %53
  %63 = fcmp olt float %52, %56
  %64 = select i1 %63, float %56, float %52
  %65 = fcmp olt float %58, %54
  %66 = fcmp olt float %60, %62
  %67 = select i1 %65, float %58, float %54
  %68 = fcmp olt float %64, %67
  %69 = and i1 %66, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %50
  store i8 1, i8* %8, align 8
  br label %71

71:                                               ; preds = %37, %70, %50
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  %72 = add nuw i64 %39, 1
  %73 = load i64, i64* %11, align 8
  %74 = load i64, i64* %13, align 8
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 3
  %77 = icmp ult i64 %72, %76
  br i1 %77, label %37, label %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN4sksg10RenderNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.1"*, %class.sk_sp* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %class.sk_sp*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %35
  %39 = ptrtoint %class.sk_sp* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %40, align 8
  %43 = bitcast %class.sk_sp* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %37, i64 1
  %45 = ptrtoint %class.sk_sp* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp*, %class.sk_sp** %46, align 8
  %48 = ptrtoint %class.sk_sp* %47 to i64
  %49 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %50 = icmp eq %class.sk_sp* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp, %class.sk_sp* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.sksg::RenderNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %65, align 8
  %68 = bitcast %class.sk_sp* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !3

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %81, align 8
  %84 = bitcast %class.sk_sp* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %87, align 8
  %90 = bitcast %class.sk_sp* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %93, align 8
  %96 = bitcast %class.sk_sp* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %99, align 8
  %102 = bitcast %class.sk_sp* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %105, align 8
  %108 = bitcast %class.sk_sp* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %111, align 8
  %114 = bitcast %class.sk_sp* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %117, align 8
  %120 = bitcast %class.sk_sp* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %123, align 8
  %126 = bitcast %class.sk_sp* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp*
  %138 = icmp eq %class.sk_sp* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %141, i64 0, i32 0
  %143 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %142, align 8
  %144 = icmp eq %"class.sksg::RenderNode"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %143, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.sksg::RenderNode"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.sksg::RenderNode"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #9
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #10
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
