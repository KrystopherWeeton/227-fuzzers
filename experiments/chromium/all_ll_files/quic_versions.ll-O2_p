; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_versions.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_versions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.absl::string_view" = type { i8*, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer" = type { i8 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.absl::string_view"* }
%"class.absl::strings_internal::Splitter" = type <{ %"class.absl::string_view", %"class.absl::ByChar", %"struct.absl::AllowEmpty", [6 x i8] }>
%"class.absl::ByChar" = type { i8 }
%"struct.absl::AllowEmpty" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::array.36" = type { [16 x %struct.raw_view] }
%struct.raw_view = type { i8*, i64 }
%"class.absl::strings_internal::SplitIterator" = type <{ i64, i32, [4 x i8], %"class.absl::string_view", %"class.absl::strings_internal::Splitter"*, %"class.absl::ByChar", %"struct.absl::AllowEmpty", [6 x i8] }>

$_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_ = comdat any

$_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_ = comdat any

@.str = private unnamed_addr constant [60 x i8] c"../../net/third_party/quiche/src/quic/core/quic_versions.cc\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Unsupported version \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"No version with QUIC crypto found.\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"No version with TLS handshake found.\00", align 1
@FLAGS_quic_reloadable_flag_quic_enable_version_rfcv1 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_draft_29 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_t051 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_q050 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_q046 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_q043 = external local_unnamed_addr global i8, align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"QUIC version \00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c" has no flag protection\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"QUIC_VERSION_43\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"QUIC_VERSION_46\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"QUIC_VERSION_50\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"QUIC_VERSION_51\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"QUIC_VERSION_IETF_DRAFT_29\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"QUIC_VERSION_IETF_RFC_V1\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"QUIC_VERSION_UNSUPPORTED\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"QUIC_VERSION_RESERVED_FOR_NEGOTIATION\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"QUIC_VERSION_UNKNOWN(\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"PROTOCOL_UNSUPPORTED\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"PROTOCOL_QUIC_CRYPTO\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"PROTOCOL_TLS1_3\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"PROTOCOL_UNKNOWN(\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"RFCv1\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"draft29\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"h3-29\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"h3-\00", align 1
@FLAGS_quic_disable_version_negotiation_grease_randomness = external local_unnamed_addr global i8, align 1
@_ZN4absl14ascii_internal13kPropertyBitsE = external local_unnamed_addr constant [256 x i8], align 16
@.str.30 = private unnamed_addr constant [26 x i8] c"absl::string_view::substr\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"Cannot \00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"en\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"dis\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"able version \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion7IsKnownEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion24KnowsWhichDecrypterToUseEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion22UsesInitialObfuscatorsEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion26AllowsLowFlowControlLimitsEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 51
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion9UsesHttp3Ev(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 51
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion19HasHeaderProtectionEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion13SupportsRetryEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion43SendsVariableLengthPacketNumberInLongHeaderEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion33AllowsVariableLengthConnectionIdsEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic40VersionAllowsVariableLengthConnectionIdsENS_20QuicTransportVersionE(i32) local_unnamed_addr #1 {
  %2 = icmp sgt i32 %0, 46
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion27SupportsClientConnectionIdsEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion30HasLengthPrefixedConnectionIdsEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic37VersionHasLengthPrefixedConnectionIdsENS_20QuicTransportVersionE(i32) local_unnamed_addr #1 {
  %2 = icmp sgt i32 %0, 46
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion30SupportsAntiAmplificationLimitEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 51
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion23CanSendCoalescedPacketsEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion20HasLongHeaderLengthsEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion7UsesTlsEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion26SupportsGoogleAltSvcFormatEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 47
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic33VersionSupportsGoogleAltSvcFormatENS_20QuicTransportVersionE(i32) local_unnamed_addr #1 {
  %2 = icmp slt i32 %0, 47
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion22HasIetfInvariantHeaderEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 43
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion21SupportsMessageFramesEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 43
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion16UsesCryptoFramesEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 46
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion17HasIetfQuicFramesEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 51
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion22UsesLegacyTlsExtensionEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 74
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic17ParsedQuicVersion14UsesQuicCryptoEv(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_17ParsedQuicVersionE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"struct.quic::ParsedQuicVersion"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %3 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"struct.quic::ParsedQuicVersion"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  switch i32 %7, label %26 [
    i32 0, label %11
    i32 2, label %17
  ]

11:                                               ; preds = %2
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 1, i8* %15, align 1, !alias.scope !2
  store i8 48, i8* %5, align 8, !alias.scope !2
  %16 = getelementptr inbounds i8, i8* %5, i64 1
  store i8 0, i8* %16, align 1, !alias.scope !2
  br label %36

17:                                               ; preds = %2
  switch i32 %9, label %26 [
    i32 80, label %18
    i32 73, label %22
  ]

18:                                               ; preds = %17
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 5, i8* %20, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), i64 5, i1 false) #15
  %21 = getelementptr inbounds i8, i8* %5, i64 5
  store i8 0, i8* %21, align 1, !alias.scope !2
  br label %36

22:                                               ; preds = %17
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 7, i8* %24, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i64 7, i1 false) #15
  %25 = getelementptr inbounds i8, i8* %5, i64 7
  store i8 0, i8* %25, align 1, !alias.scope !2
  br label %36

26:                                               ; preds = %2, %17, %11
  %27 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 0
  store i32 %7, i32* %27, align 4, !noalias !2
  %28 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 1
  store i32 %9, i32* %28, align 4, !noalias !2
  %29 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3) #15, !noalias !2
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #15
  call void @_ZN4quic15QuicTagToStringEj(%"class.std::__1::basic_string"* nonnull sret %4, i32 %30) #15
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %13, %18, %22, %26
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %14, %13 ], [ %19, %18 ], [ %23, %22 ], [ %31, %26 ]
  %38 = phi i64 [ undef, %13 ], [ undef, %18 ], [ undef, %22 ], [ %35, %26 ]
  %39 = phi i8 [ 1, %13 ], [ 5, %18 ], [ 7, %22 ], [ %33, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %41 = icmp slt i8 %39, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = zext i8 %39 to i64
  %45 = select i1 %41, i8* %43, i8* %5
  %46 = select i1 %41, i64 %38, i64 %44
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %45, i64 %46) #15
  %48 = load i8, i8* %40, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %36
  %51 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %51) #16
  br label %52

52:                                               ; preds = %36, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25ParsedQuicVersionToStringENS_17ParsedQuicVersionE(%"class.std::__1::basic_string"* noalias sret, %"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #2 {
  %3 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %4 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %6 [
    i32 0, label %9
    i32 2, label %18
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  br label %31

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %31

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 1, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 48, i8* %16, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 0, i8* %17, align 1
  br label %37

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %31 [
    i32 80, label %21
    i32 73, label %26
  ]

21:                                               ; preds = %18
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 5, i8* %23, align 1
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), i64 5, i1 false) #15
  %25 = getelementptr inbounds i8, i8* %24, i64 5
  store i8 0, i8* %25, align 1
  br label %37

26:                                               ; preds = %18
  %27 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 7, i8* %28, align 1
  %29 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i64 7, i1 false) #15
  %30 = getelementptr inbounds i8, i8* %29, i64 7
  store i8 0, i8* %30, align 1
  br label %37

31:                                               ; preds = %18, %6, %9
  %32 = phi i32 [ %8, %6 ], [ %11, %9 ], [ %20, %18 ]
  %33 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 0
  store i32 %5, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 1
  store i32 %32, i32* %34, align 4
  %35 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3)
  %36 = tail call i32 @llvm.bswap.i32(i32 %35) #15
  tail call void @_ZN4quic15QuicTagToStringEj(%"class.std::__1::basic_string"* sret %0, i32 %36) #15
  br label %37

37:                                               ; preds = %31, %26, %21, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS0_6vectorINS_17ParsedQuicVersionENS0_9allocatorIS7_EEEE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15, !noalias !5
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 1, i8* %8, align 1, !noalias !5
  store i8 44, i8* %6, align 8, !noalias !5
  %9 = getelementptr inbounds i8, i8* %6, i64 1
  store i8 0, i8* %9, align 1, !noalias !5
  call void @_ZN4quic31ParsedQuicVersionVectorToStringERKNSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEERKNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEEm(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::vector"* dereferenceable(24) %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i64 -1) #15
  %10 = load i8, i8* %8, align 1, !noalias !5
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !5
  call void @_ZdlPv(i8* %14) #16
  br label %15

15:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15, !noalias !5
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %18 to i64
  %25 = select i1 %19, i8* %21, i8* %5
  %26 = select i1 %19, i64 %23, i64 %24
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %25, i64 %26) #15
  %28 = load i8, i8* %17, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %15
  %31 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %31) #16
  br label %32

32:                                               ; preds = %15, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS0_6vectorIjNS0_9allocatorIjEEEE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15, !noalias !8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 1, i8* %8, align 1, !noalias !8
  store i8 44, i8* %6, align 8, !noalias !8
  %9 = getelementptr inbounds i8, i8* %6, i64 1
  store i8 0, i8* %9, align 1, !noalias !8
  call void @_ZN4quic30QuicVersionLabelVectorToStringERKNSt3__16vectorIjNS0_9allocatorIjEEEERKNS0_12basic_stringIcNS0_11char_traitsIcEENS2_IcEEEEm(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::vector.6"* dereferenceable(24) %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i64 -1) #15
  %10 = load i8, i8* %8, align 1, !noalias !8
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !8
  call void @_ZdlPv(i8* %14) #16
  br label %15

15:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15, !noalias !8
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %18 to i64
  %25 = select i1 %19, i8* %21, i8* %5
  %26 = select i1 %19, i64 %23, i64 %24
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %25, i64 %26) #15
  %28 = load i8, i8* %17, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %15
  %31 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %31) #16
  br label %32

32:                                               ; preds = %15, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS0_6vectorINS_20QuicTransportVersionENS0_9allocatorIS7_EEEE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.std::__1::vector.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  call void @_ZN4quic34QuicTransportVersionVectorToStringERKNSt3__16vectorINS_20QuicTransportVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::vector.13"* dereferenceable(24) %1)
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %7 to i64
  %14 = select i1 %8, i8* %10, i8* %4
  %15 = select i1 %8, i64 %12, i64 %13
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %14, i64 %15) #15
  %17 = load i8, i8* %6, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %20) #16
  br label %21

21:                                               ; preds = %2, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic34QuicTransportVersionVectorToStringERKNSt3__16vectorINS_20QuicTransportVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  store i8 0, i8* %5, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %1, i64 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.13"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %52, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %1, i64 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %21

21:                                               ; preds = %14, %45
  %22 = phi i64 [ %12, %14 ], [ %48, %45 ]
  %23 = phi i64 [ 0, %14 ], [ %46, %45 ]
  %24 = inttoptr i64 %22 to i32*
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0)) #15
  %28 = load i32*, i32** %16, align 8
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi i32* [ %24, %21 ], [ %28, %26 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %31 = getelementptr inbounds i32, i32* %30, i64 %23
  %32 = load i32, i32* %31, align 4
  call void @_ZN4quic19QuicVersionToStringENS_20QuicTransportVersionE(%"class.std::__1::basic_string"* nonnull sret %3, i32 %32)
  %33 = load i8, i8* %18, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i8*, i8** %19, align 8
  %36 = load i64, i64* %20, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i8* %35, i8* %15
  %39 = select i1 %34, i64 %36, i64 %37
  %40 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %38, i64 %39) #15
  %41 = load i8, i8* %18, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %29
  %44 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %44) #16
  br label %45

45:                                               ; preds = %29, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  %46 = add nuw i64 %23, 1
  %47 = load i64, i64* %9, align 8
  %48 = load i64, i64* %11, align 8
  %49 = sub i64 %47, %48
  %50 = ashr exact i64 %49, 2
  %51 = icmp ult i64 %46, %50
  br i1 %51, label %21, label %52

52:                                               ; preds = %45, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %46 [
    i32 2, label %11
    i32 1, label %20
  ]

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %46 [
    i32 80, label %14
    i32 73, label %16
    i32 51, label %18
    i32 999, label %29
  ]

14:                                               ; preds = %11
  %15 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 1, i8 signext 0, i8 signext 0, i8 signext 0) #15
  br label %127

16:                                               ; preds = %11
  %17 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 29, i8 signext 0, i8 signext 0, i8 signext -1) #15
  br label %127

18:                                               ; preds = %11
  %19 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 49, i8 signext 53, i8 signext 48, i8 signext 84) #15
  br label %127

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  switch i32 %22, label %46 [
    i32 50, label %23
    i32 46, label %25
    i32 43, label %27
  ]

23:                                               ; preds = %20
  %24 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 48, i8 signext 53, i8 signext 48, i8 signext 81) #15
  br label %127

25:                                               ; preds = %20
  %26 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 54, i8 signext 52, i8 signext 48, i8 signext 81) #15
  br label %127

27:                                               ; preds = %20
  %28 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 51, i8 signext 52, i8 signext 48, i8 signext 81) #15
  br label %127

29:                                               ; preds = %11
  %30 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #15
  store i32 -1431655766, i32* %2, align 4
  %31 = load i8, i8* @FLAGS_quic_disable_version_negotiation_grease_randomness, align 1, !range !11
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %29
  %34 = tail call %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() #15
  %35 = bitcast %"class.quic::QuicRandom"* %34 to void (%"class.quic::QuicRandom"*, i8*, i64)***
  %36 = load void (%"class.quic::QuicRandom"*, i8*, i64)**, void (%"class.quic::QuicRandom"*, i8*, i64)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %36, i64 2
  %38 = load void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %37, align 8
  call void %38(%"class.quic::QuicRandom"* %34, i8* nonnull %30, i64 4) #15
  %39 = load i32, i32* %2, align 4
  br label %42

40:                                               ; preds = %29
  %41 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 63, i8 signext 56, i8 signext 87, i8 signext -47) #15
  store i32 %41, i32* %2, align 4
  br label %42

42:                                               ; preds = %33, %40
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = and i32 %43, -252645136
  %45 = or i32 %44, 168430090
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #15
  br label %127

46:                                               ; preds = %11, %20, %1
  %47 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %47, label %48, label %127

48:                                               ; preds = %46
  %49 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %49) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 235, i32 2) #15
  %50 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_ostringstream"* %50 to %"class.std::__1::basic_ostream"*
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %51, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 20) #15
  %53 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #15
  %54 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  call void @_ZN4quic19QuicVersionToStringENS_20QuicTransportVersionE(%"class.std::__1::basic_string"* nonnull sret %7, i32 %55)
  %56 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %58 to i64
  %65 = select i1 %59, i8* %61, i8* %53
  %66 = select i1 %59, i64 %63, i64 %64
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* %65, i64 %66) #15
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #15
  %69 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #15
  %70 = load i32, i32* %9, align 4
  switch i32 %70, label %83 [
    i32 0, label %71
    i32 1, label %75
    i32 2, label %79
  ]

71:                                               ; preds = %48
  %72 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 20, i8* %73, align 1, !alias.scope !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i64 20, i1 false) #15
  %74 = getelementptr inbounds i8, i8* %69, i64 20
  store i8 0, i8* %74, align 4, !alias.scope !12
  br label %104

75:                                               ; preds = %48
  %76 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 20, i8* %77, align 1, !alias.scope !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), i64 20, i1 false) #15
  %78 = getelementptr inbounds i8, i8* %69, i64 20
  store i8 0, i8* %78, align 4, !alias.scope !12
  br label %104

79:                                               ; preds = %48
  %80 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 15, i8* %81, align 1, !alias.scope !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i64 15, i1 false) #15
  %82 = getelementptr inbounds i8, i8* %69, i64 15
  store i8 0, i8* %82, align 1, !alias.scope !12
  br label %104

83:                                               ; preds = %48
  %84 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %84) #15, !noalias !12
  %85 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8** %85, align 8, !noalias !12
  %86 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 17, i64* %86, align 8, !noalias !12
  %87 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %87) #15, !noalias !12
  %88 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %89 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %70, i8* %88) #15, !noalias !12
  %90 = ptrtoint i8* %89 to i64
  %91 = ptrtoint i8* %88 to i64
  %92 = sub i64 %90, %91
  %93 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %88, i8** %93, align 8, !noalias !12
  %94 = icmp sgt i64 %92, -1
  br i1 %94, label %96, label %95, !prof !15

95:                                               ; preds = %83
  call void @llvm.trap() #15
  unreachable

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %92, i64* %97, align 8, !noalias !12
  %98 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %98) #15, !noalias !12
  %99 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** %99, align 8, !noalias !12
  %100 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 1, i64* %100, align 8, !noalias !12
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* nonnull sret %8, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %98) #15, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %87) #15, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %84) #15, !noalias !12
  %101 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  br label %104

104:                                              ; preds = %71, %75, %79, %96
  %105 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %72, %71 ], [ %76, %75 ], [ %80, %79 ], [ %101, %96 ]
  %106 = phi i8 [ 20, %71 ], [ 20, %75 ], [ 15, %79 ], [ %103, %96 ]
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %108 = icmp slt i8 %106, 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %106 to i64
  %114 = select i1 %108, i8* %110, i8* %69
  %115 = select i1 %108, i64 %112, i64 %113
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %68, i8* %114, i64 %115) #15
  %117 = load i8, i8* %107, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %104
  %120 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %120) #16
  br label %121

121:                                              ; preds = %104, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #15
  %122 = load i8, i8* %57, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %125) #16
  br label %126

126:                                              ; preds = %121, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %49) #15
  br label %127

127:                                              ; preds = %126, %46, %42, %27, %25, %23, %18, %16, %14
  %128 = phi i32 [ %15, %14 ], [ %17, %16 ], [ %19, %18 ], [ %24, %23 ], [ %26, %25 ], [ %28, %27 ], [ %45, %42 ], [ 0, %46 ], [ 0, %126 ]
  ret i32 %128
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicVersionToStringENS_20QuicTransportVersionE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #2 {
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  switch i32 %1, label %50 [
    i32 43, label %6
    i32 46, label %11
    i32 50, label %16
    i32 51, label %21
    i32 73, label %26
    i32 80, label %32
    i32 0, label %38
    i32 999, label %44
  ]

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 15, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 15, i1 false) #15
  %10 = getelementptr inbounds i8, i8* %9, i64 15
  store i8 0, i8* %10, align 1
  br label %68

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 15, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 15, i1 false) #15
  %15 = getelementptr inbounds i8, i8* %14, i64 15
  store i8 0, i8* %15, align 1
  br label %68

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 15, i8* %18, align 1
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i64 15, i1 false) #15
  %20 = getelementptr inbounds i8, i8* %19, i64 15
  store i8 0, i8* %20, align 1
  br label %68

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 15, i8* %23, align 1
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i64 15, i1 false) #15
  %25 = getelementptr inbounds i8, i8* %24, i64 15
  store i8 0, i8* %25, align 1
  br label %68

26:                                               ; preds = %2
  %27 = tail call i8* @_Znwm(i64 32) #16
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast i64* %29 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %30, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i64 26, i1 false) #15
  %31 = getelementptr inbounds i8, i8* %27, i64 26
  store i8 0, i8* %31, align 1
  br label %68

32:                                               ; preds = %2
  %33 = tail call i8* @_Znwm(i64 32) #16
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %36, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i64 24, i1 false) #15
  %37 = getelementptr inbounds i8, i8* %33, i64 24
  store i8 0, i8* %37, align 1
  br label %68

38:                                               ; preds = %2
  %39 = tail call i8* @_Znwm(i64 32) #16
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i64 24, i1 false) #15
  %43 = getelementptr inbounds i8, i8* %39, i64 24
  store i8 0, i8* %43, align 1
  br label %68

44:                                               ; preds = %2
  %45 = tail call i8* @_Znwm(i64 48) #16
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %48, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0), i64 37, i1 false) #15
  %49 = getelementptr inbounds i8, i8* %45, i64 37
  store i8 0, i8* %49, align 1
  br label %68

50:                                               ; preds = %2
  %51 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %51) #15
  %52 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 21, i64* %53, align 8
  %54 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %54) #15
  %55 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %56 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %1, i8* %55) #15
  %57 = ptrtoint i8* %56 to i64
  %58 = ptrtoint i8* %55 to i64
  %59 = sub i64 %57, %58
  %60 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %55, i8** %60, align 8
  %61 = icmp sgt i64 %59, -1
  br i1 %61, label %63, label %62, !prof !15

62:                                               ; preds = %50
  call void @llvm.trap() #15
  unreachable

63:                                               ; preds = %50
  %64 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %59, i64* %64, align 8
  %65 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %65) #15
  %66 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 1, i64* %67, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %65) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %54) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %51) #15
  br label %68

68:                                               ; preds = %63, %44, %38, %32, %26, %21, %16, %11, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25HandshakeProtocolToStringENS_17HandshakeProtocolE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #2 {
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  switch i32 %1, label %21 [
    i32 0, label %6
    i32 1, label %11
    i32 2, label %16
  ]

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 20, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i64 20, i1 false) #15
  %10 = getelementptr inbounds i8, i8* %9, i64 20
  store i8 0, i8* %10, align 4
  br label %39

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 20, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), i64 20, i1 false) #15
  %15 = getelementptr inbounds i8, i8* %14, i64 20
  store i8 0, i8* %15, align 4
  br label %39

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 15, i8* %18, align 1
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i64 15, i1 false) #15
  %20 = getelementptr inbounds i8, i8* %19, i64 15
  store i8 0, i8* %20, align 1
  br label %39

21:                                               ; preds = %2
  %22 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 17, i64* %24, align 8
  %25 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %25) #15
  %26 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %27 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %1, i8* %26) #15
  %28 = ptrtoint i8* %27 to i64
  %29 = ptrtoint i8* %26 to i64
  %30 = sub i64 %28, %29
  %31 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %26, i8** %31, align 8
  %32 = icmp sgt i64 %30, -1
  br i1 %32, label %34, label %33, !prof !15

33:                                               ; preds = %21
  call void @llvm.trap() #15
  unreachable

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %30, i64* %35, align 8
  %36 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #15
  %37 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** %37, align 8
  %38 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 1, i64* %38, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #15
  br label %39

39:                                               ; preds = %34, %16, %11, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic28CreateQuicVersionLabelVectorERKNSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.6"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %4 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #15
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.quic::ParsedQuicVersion"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = bitcast i32** %5 to i64*
  %15 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %16 = icmp eq i64 %12, 0
  %17 = inttoptr i64 %11 to %"struct.quic::ParsedQuicVersion"*
  %18 = inttoptr i64 %9 to %"struct.quic::ParsedQuicVersion"*
  br i1 %16, label %31, label %19

19:                                               ; preds = %2
  %20 = icmp ugt i64 %13, 4611686018427387903
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @abort() #17
  unreachable

22:                                               ; preds = %19
  %23 = bitcast i32** %4 to i64*
  %24 = ashr exact i64 %12, 1
  %25 = tail call i8* @_Znwm(i64 %24) #16
  %26 = bitcast i8* %25 to i32*
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds i32, i32* %26, i64 %13
  %29 = ptrtoint i32* %28 to i64
  %30 = ptrtoint i8* %25 to i64
  store i64 %30, i64* %15, align 8
  store i64 %27, i64* %23, align 8
  store i64 %29, i64* %14, align 8
  br label %31

31:                                               ; preds = %22, %2
  %32 = phi i64 [ 0, %2 ], [ %27, %22 ]
  %33 = phi i32* [ null, %2 ], [ %28, %22 ]
  %34 = phi i32* [ null, %2 ], [ %26, %22 ]
  %35 = icmp eq %"struct.quic::ParsedQuicVersion"* %17, %18
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 1
  %39 = bitcast i32** %4 to i64*
  br label %41

40:                                               ; preds = %103, %31
  ret void

41:                                               ; preds = %106, %36
  %42 = phi i64 [ %32, %36 ], [ %109, %106 ]
  %43 = phi i32* [ %33, %36 ], [ %108, %106 ]
  %44 = phi i32* [ %34, %36 ], [ %107, %106 ]
  %45 = phi %"struct.quic::ParsedQuicVersion"* [ %17, %36 ], [ %104, %106 ]
  %46 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  store i32 %47, i32* %37, align 4
  store i32 %49, i32* %38, align 4
  %50 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3)
  %51 = icmp ult i32* %44, %43
  %52 = ptrtoint i32* %43 to i64
  br i1 %51, label %53, label %56

53:                                               ; preds = %41
  store i32 %50, i32* %44, align 4
  %54 = getelementptr inbounds i32, i32* %44, i64 1
  %55 = ptrtoint i32* %54 to i64
  store i64 %55, i64* %39, align 8
  br label %103

56:                                               ; preds = %41
  %57 = ptrtoint i32* %44 to i64
  %58 = load i64, i64* %15, align 8
  %59 = sub i64 %57, %58
  %60 = ashr exact i64 %59, 2
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 4611686018427387903
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %64) #17
  unreachable

65:                                               ; preds = %56
  %66 = sub i64 %52, %58
  %67 = ashr exact i64 %66, 2
  %68 = icmp ult i64 %67, 2305843009213693951
  br i1 %68, label %69, label %77

69:                                               ; preds = %65
  %70 = ashr exact i64 %66, 1
  %71 = icmp ult i64 %70, %61
  %72 = select i1 %71, i64 %61, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %69
  %75 = icmp ugt i64 %72, 4611686018427387903
  br i1 %75, label %76, label %77

76:                                               ; preds = %74
  tail call void @abort() #17
  unreachable

77:                                               ; preds = %74, %65
  %78 = phi i64 [ %72, %74 ], [ 4611686018427387903, %65 ]
  %79 = shl i64 %78, 2
  %80 = tail call i8* @_Znwm(i64 %79) #16
  %81 = bitcast i8* %80 to i32*
  br label %82

82:                                               ; preds = %77, %69
  %83 = phi i64 [ %78, %77 ], [ 0, %69 ]
  %84 = phi i32* [ %81, %77 ], [ null, %69 ]
  %85 = getelementptr inbounds i32, i32* %84, i64 %60
  %86 = getelementptr inbounds i32, i32* %84, i64 %83
  %87 = ptrtoint i32* %86 to i64
  store i32 %50, i32* %85, align 4
  %88 = getelementptr inbounds i32, i32* %85, i64 1
  %89 = ptrtoint i32* %88 to i64
  %90 = sub i64 %42, %58
  %91 = ashr exact i64 %90, 2
  %92 = sub nsw i64 0, %91
  %93 = getelementptr inbounds i32, i32* %85, i64 %92
  %94 = ptrtoint i32* %93 to i64
  %95 = icmp sgt i64 %90, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %82
  %97 = bitcast i32* %93 to i8*
  %98 = inttoptr i64 %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %98, i64 %90, i1 false) #15
  br label %99

99:                                               ; preds = %96, %82
  store i64 %94, i64* %15, align 8
  store i64 %89, i64* %39, align 8
  store i64 %87, i64* %14, align 8
  %100 = icmp eq i64 %58, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %102) #16
  br label %103

103:                                              ; preds = %53, %99, %101
  %104 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %45, i64 1
  %105 = icmp eq %"struct.quic::ParsedQuicVersion"* %104, %18
  br i1 %105, label %40, label %106

106:                                              ; preds = %103
  %107 = load i32*, i32** %4, align 8
  %108 = load i32*, i32** %5, align 8
  %109 = ptrtoint i32* %107 to i64
  br label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic34AllSupportedVersionsWithQuicCryptoEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = tail call i8* @_Znwm(i64 48) #16, !noalias !16
  %7 = bitcast i8* %6 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %7, align 4, !noalias !16
  %8 = getelementptr inbounds i8, i8* %6, i64 16
  %9 = bitcast i8* %8 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %9, align 4, !noalias !16
  %10 = getelementptr inbounds i8, i8* %6, i64 32
  %11 = bitcast i8* %10 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %11, align 4, !noalias !16
  %12 = getelementptr inbounds i8, i8* %6, i64 24
  %13 = bitcast i8* %12 to %"struct.quic::ParsedQuicVersion"*
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %13)
  %14 = getelementptr inbounds i8, i8* %6, i64 32
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %28, label %31

18:                                               ; preds = %38
  %19 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %3, align 8
  %20 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %4, align 8
  %21 = icmp eq %"struct.quic::ParsedQuicVersion"* %19, %20
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %23) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 259, i32 2) #15
  %24 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %24 to %"class.std::__1::basic_ostream"*
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i64 34) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %23) #15
  br label %27

27:                                               ; preds = %18, %38, %22
  ret void

28:                                               ; preds = %1
  %29 = getelementptr inbounds i8, i8* %6, i64 32
  %30 = bitcast i8* %29 to %"struct.quic::ParsedQuicVersion"*
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %30)
  br label %31

31:                                               ; preds = %28, %1
  %32 = getelementptr inbounds i8, i8* %6, i64 40
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = bitcast i8* %32 to %"struct.quic::ParsedQuicVersion"*
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %37)
  br label %38

38:                                               ; preds = %36, %31
  tail call void @_ZdlPv(i8* nonnull %6) #16
  %39 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %39, label %18, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20AllSupportedVersionsEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #2 {
  %2 = tail call i8* @_Znwm(i64 48) #16
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 48
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"struct.quic::ParsedQuicVersion"** %6 to i8**
  store i8* %5, i8** %7, align 8
  %8 = bitcast i8* %2 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = bitcast i8* %9 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %10, align 4
  %11 = getelementptr inbounds i8, i8* %2, i64 32
  %12 = bitcast i8* %11 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 48
  %14 = bitcast %"struct.quic::ParsedQuicVersion"** %3 to i64*
  %15 = ptrtoint i8* %13 to i64
  store i64 %15, i64* %14, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"*, %"struct.quic::ParsedQuicVersion"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %5, align 8
  %7 = icmp eq %"struct.quic::ParsedQuicVersion"* %4, %6
  %8 = ptrtoint %"struct.quic::ParsedQuicVersion"* %6 to i64
  br i1 %7, label %19, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 0
  store i32 %11, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 1
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 1
  %17 = ptrtoint %"struct.quic::ParsedQuicVersion"* %16 to i64
  %18 = bitcast %"struct.quic::ParsedQuicVersion"** %3 to i64*
  store i64 %17, i64* %18, align 8
  br label %134

19:                                               ; preds = %2
  %20 = ptrtoint %"struct.quic::ParsedQuicVersion"* %4 to i64
  %21 = bitcast %"struct.quic::ParsedQuicVersion"** %3 to i64*
  %22 = bitcast %"class.std::__1::vector"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = ashr exact i64 %24, 3
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 2305843009213693951
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #17
  unreachable

30:                                               ; preds = %19
  %31 = bitcast %"struct.quic::ParsedQuicVersion"** %5 to i64*
  %32 = sub i64 %8, %23
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %33, 1152921504606846975
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = ashr exact i64 %32, 2
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = icmp ugt i64 %38, 2305843009213693951
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @abort() #17
  unreachable

43:                                               ; preds = %40, %30
  %44 = phi i64 [ %38, %40 ], [ 2305843009213693951, %30 ]
  %45 = shl i64 %44, 3
  %46 = tail call i8* @_Znwm(i64 %45) #16
  %47 = bitcast i8* %46 to %"struct.quic::ParsedQuicVersion"*
  br label %48

48:                                               ; preds = %43, %35
  %49 = phi i64 [ %44, %43 ], [ 0, %35 ]
  %50 = phi %"struct.quic::ParsedQuicVersion"* [ %47, %43 ], [ null, %35 ]
  %51 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %50, i64 %25
  %52 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %50, i64 %49
  %53 = ptrtoint %"struct.quic::ParsedQuicVersion"* %52 to i64
  %54 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %51, i64 0, i32 0
  store i32 %55, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %50, i64 %25, i32 1
  store i32 %57, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %51, i64 1
  %61 = ptrtoint %"struct.quic::ParsedQuicVersion"* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %63 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %62, align 8
  %64 = ptrtoint %"struct.quic::ParsedQuicVersion"* %63 to i64
  %65 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %3, align 8
  %66 = icmp eq %"struct.quic::ParsedQuicVersion"* %65, %63
  br i1 %66, label %127, label %67

67:                                               ; preds = %48
  %68 = getelementptr %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 -1, i32 0
  %69 = ptrtoint i32* %68 to i64
  %70 = sub i64 %69, %64
  %71 = lshr i64 %70, 3
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %89, label %75

75:                                               ; preds = %67, %75
  %76 = phi %"struct.quic::ParsedQuicVersion"* [ %86, %75 ], [ %51, %67 ]
  %77 = phi %"struct.quic::ParsedQuicVersion"* [ %79, %75 ], [ %65, %67 ]
  %78 = phi i64 [ %87, %75 ], [ %73, %67 ]
  %79 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %77, i64 -1
  %80 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %77, i64 -1, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %76, i64 -1, i32 0
  store i32 %81, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %76, i64 -1, i32 1
  store i32 %83, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %76, i64 -1
  %87 = add i64 %78, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %75, !llvm.loop !19

89:                                               ; preds = %75, %67
  %90 = phi %"struct.quic::ParsedQuicVersion"* [ undef, %67 ], [ %86, %75 ]
  %91 = phi %"struct.quic::ParsedQuicVersion"* [ %51, %67 ], [ %86, %75 ]
  %92 = phi %"struct.quic::ParsedQuicVersion"* [ %65, %67 ], [ %79, %75 ]
  %93 = icmp ult i64 %70, 24
  br i1 %93, label %124, label %94

94:                                               ; preds = %89, %94
  %95 = phi %"struct.quic::ParsedQuicVersion"* [ %122, %94 ], [ %91, %89 ]
  %96 = phi %"struct.quic::ParsedQuicVersion"* [ %115, %94 ], [ %92, %89 ]
  %97 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %96, i64 -1, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %96, i64 -1, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %95, i64 -1, i32 0
  store i32 %98, i32* %101, align 4
  %102 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %95, i64 -1, i32 1
  store i32 %100, i32* %102, align 4
  %103 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %96, i64 -2, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %96, i64 -2, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %95, i64 -2, i32 0
  store i32 %104, i32* %107, align 4
  %108 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %95, i64 -2, i32 1
  store i32 %106, i32* %108, align 4
  %109 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %96, i64 -3, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %96, i64 -3, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %95, i64 -3, i32 0
  store i32 %110, i32* %113, align 4
  %114 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %95, i64 -3, i32 1
  store i32 %112, i32* %114, align 4
  %115 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %96, i64 -4
  %116 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %96, i64 -4, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %95, i64 -4, i32 0
  store i32 %117, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %95, i64 -4, i32 1
  store i32 %119, i32* %121, align 4
  %122 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %95, i64 -4
  %123 = icmp eq %"struct.quic::ParsedQuicVersion"* %115, %63
  br i1 %123, label %124, label %94

124:                                              ; preds = %94, %89
  %125 = phi %"struct.quic::ParsedQuicVersion"* [ %90, %89 ], [ %122, %94 ]
  %126 = load i64, i64* %22, align 8
  br label %127

127:                                              ; preds = %48, %124
  %128 = phi %"struct.quic::ParsedQuicVersion"* [ %125, %124 ], [ %51, %48 ]
  %129 = phi i64 [ %126, %124 ], [ %64, %48 ]
  %130 = ptrtoint %"struct.quic::ParsedQuicVersion"* %128 to i64
  store i64 %130, i64* %22, align 8
  store i64 %61, i64* %21, align 8
  store i64 %53, i64* %31, align 8
  %131 = icmp eq i64 %129, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = inttoptr i64 %129 to i8*
  tail call void @_ZdlPv(i8* %133) #16
  br label %134

134:                                              ; preds = %132, %127, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic38CurrentSupportedVersionsWithQuicCryptoEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #15
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  %9 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9)
  %10 = tail call i8* @_Znwm(i64 48) #16, !noalias !21
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %10, i8** %12, align 8, !alias.scope !26, !noalias !27
  %13 = getelementptr inbounds i8, i8* %10, i64 48
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"struct.quic::ParsedQuicVersion"** %14 to i8**
  store i8* %13, i8** %15, align 8, !alias.scope !26, !noalias !27
  %16 = bitcast i8* %10 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %16, align 4, !noalias !21
  %17 = getelementptr inbounds i8, i8* %10, i64 16
  %18 = bitcast i8* %17 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %18, align 4, !noalias !21
  %19 = getelementptr inbounds i8, i8* %10, i64 32
  %20 = bitcast i8* %19 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %20, align 4, !noalias !21
  %21 = bitcast %"struct.quic::ParsedQuicVersion"** %11 to i64*
  %22 = ptrtoint i8* %13 to i64
  store i64 %22, i64* %21, align 8, !alias.scope !26, !noalias !27
  call void @_ZN4quic23FilterSupportedVersionsENSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nonnull sret %3, %"class.std::__1::vector"* nonnull %2) #15
  call void @_ZdlPv(i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9)
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %24 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %26 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %25, align 8
  %27 = icmp eq %"struct.quic::ParsedQuicVersion"* %24, %26
  br i1 %27, label %30, label %39

28:                                               ; preds = %45
  %29 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %23, align 8
  br label %30

30:                                               ; preds = %28, %1
  %31 = phi %"struct.quic::ParsedQuicVersion"* [ %29, %28 ], [ %24, %1 ]
  %32 = icmp eq %"struct.quic::ParsedQuicVersion"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = ptrtoint %"struct.quic::ParsedQuicVersion"* %31 to i64
  %35 = bitcast %"struct.quic::ParsedQuicVersion"** %25 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"struct.quic::ParsedQuicVersion"* %31 to i8*
  call void @_ZdlPv(i8* %36) #16
  br label %37

37:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  %38 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %38, label %48, label %57

39:                                               ; preds = %1, %45
  %40 = phi %"struct.quic::ParsedQuicVersion"* [ %46, %45 ], [ %24, %1 ]
  %41 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %40)
  br label %45

45:                                               ; preds = %44, %39
  %46 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %40, i64 1
  %47 = icmp eq %"struct.quic::ParsedQuicVersion"* %46, %26
  br i1 %47, label %28, label %39

48:                                               ; preds = %37
  %49 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %5, align 8
  %50 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %6, align 8
  %51 = icmp eq %"struct.quic::ParsedQuicVersion"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %48
  %53 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %53) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 271, i32 2) #15
  %54 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_ostringstream"* %54 to %"class.std::__1::basic_ostream"*
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %55, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i64 34) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %53) #15
  br label %57

57:                                               ; preds = %48, %37, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24CurrentSupportedVersionsEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = tail call i8* @_Znwm(i64 48) #16, !noalias !28
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %3, i8** %5, align 8, !alias.scope !28
  %6 = getelementptr inbounds i8, i8* %3, i64 48
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"struct.quic::ParsedQuicVersion"** %7 to i8**
  store i8* %6, i8** %8, align 8, !alias.scope !28
  %9 = bitcast i8* %3 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %9, align 4, !noalias !28
  %10 = getelementptr inbounds i8, i8* %3, i64 16
  %11 = bitcast i8* %10 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %11, align 4, !noalias !28
  %12 = getelementptr inbounds i8, i8* %3, i64 32
  %13 = bitcast i8* %12 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %13, align 4, !noalias !28
  %14 = bitcast %"struct.quic::ParsedQuicVersion"** %4 to i64*
  %15 = ptrtoint i8* %6 to i64
  store i64 %15, i64* %14, align 8, !alias.scope !28
  call void @_ZN4quic23FilterSupportedVersionsENSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* sret %0, %"class.std::__1::vector"* nonnull %2)
  tail call void @_ZdlPv(i8* nonnull %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic27AllSupportedVersionsWithTlsEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = tail call i8* @_Znwm(i64 48) #16, !noalias !31
  %7 = bitcast i8* %6 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %7, align 4, !noalias !31
  %8 = getelementptr inbounds i8, i8* %6, i64 16
  %9 = bitcast i8* %8 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %9, align 4, !noalias !31
  %10 = getelementptr inbounds i8, i8* %6, i64 32
  %11 = bitcast i8* %10 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %11, align 4, !noalias !31
  %12 = bitcast i8* %6 to %"struct.quic::ParsedQuicVersion"*
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* nonnull dereferenceable(8) %12)
  %13 = getelementptr inbounds i8, i8* %6, i64 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %27, label %30

17:                                               ; preds = %58
  %18 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %3, align 8
  %19 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %4, align 8
  %20 = icmp eq %"struct.quic::ParsedQuicVersion"* %18, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %22) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 283, i32 2) #15
  %23 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %24 = bitcast %"class.std::__1::basic_ostringstream"* %23 to %"class.std::__1::basic_ostream"*
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i64 36) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %22) #15
  br label %26

26:                                               ; preds = %17, %58, %21
  ret void

27:                                               ; preds = %1
  %28 = getelementptr inbounds i8, i8* %6, i64 8
  %29 = bitcast i8* %28 to %"struct.quic::ParsedQuicVersion"*
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %29)
  br label %30

30:                                               ; preds = %27, %1
  %31 = getelementptr inbounds i8, i8* %6, i64 16
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 2
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = bitcast i8* %31 to %"struct.quic::ParsedQuicVersion"*
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %36)
  br label %37

37:                                               ; preds = %35, %30
  %38 = getelementptr inbounds i8, i8* %6, i64 24
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = bitcast i8* %38 to %"struct.quic::ParsedQuicVersion"*
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %43)
  br label %44

44:                                               ; preds = %42, %37
  %45 = getelementptr inbounds i8, i8* %6, i64 32
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 2
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = bitcast i8* %45 to %"struct.quic::ParsedQuicVersion"*
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %50)
  br label %51

51:                                               ; preds = %49, %44
  %52 = getelementptr inbounds i8, i8* %6, i64 40
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 2
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = bitcast i8* %52 to %"struct.quic::ParsedQuicVersion"*
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %57)
  br label %58

58:                                               ; preds = %56, %51
  tail call void @_ZdlPv(i8* nonnull %6) #16
  %59 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %59, label %17, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic31CurrentSupportedVersionsWithTlsEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #15
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  %9 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9)
  %10 = tail call i8* @_Znwm(i64 48) #16, !noalias !34
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %10, i8** %12, align 8, !alias.scope !39, !noalias !40
  %13 = getelementptr inbounds i8, i8* %10, i64 48
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"struct.quic::ParsedQuicVersion"** %14 to i8**
  store i8* %13, i8** %15, align 8, !alias.scope !39, !noalias !40
  %16 = bitcast i8* %10 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %16, align 4, !noalias !34
  %17 = getelementptr inbounds i8, i8* %10, i64 16
  %18 = bitcast i8* %17 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %18, align 4, !noalias !34
  %19 = getelementptr inbounds i8, i8* %10, i64 32
  %20 = bitcast i8* %19 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %20, align 4, !noalias !34
  %21 = bitcast %"struct.quic::ParsedQuicVersion"** %11 to i64*
  %22 = ptrtoint i8* %13 to i64
  store i64 %22, i64* %21, align 8, !alias.scope !39, !noalias !40
  call void @_ZN4quic23FilterSupportedVersionsENSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nonnull sret %3, %"class.std::__1::vector"* nonnull %2) #15
  call void @_ZdlPv(i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9)
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %24 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %26 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %25, align 8
  %27 = icmp eq %"struct.quic::ParsedQuicVersion"* %24, %26
  br i1 %27, label %30, label %39

28:                                               ; preds = %45
  %29 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %23, align 8
  br label %30

30:                                               ; preds = %28, %1
  %31 = phi %"struct.quic::ParsedQuicVersion"* [ %29, %28 ], [ %24, %1 ]
  %32 = icmp eq %"struct.quic::ParsedQuicVersion"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = ptrtoint %"struct.quic::ParsedQuicVersion"* %31 to i64
  %35 = bitcast %"struct.quic::ParsedQuicVersion"** %25 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"struct.quic::ParsedQuicVersion"* %31 to i8*
  call void @_ZdlPv(i8* %36) #16
  br label %37

37:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  %38 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %38, label %48, label %57

39:                                               ; preds = %1, %45
  %40 = phi %"struct.quic::ParsedQuicVersion"* [ %46, %45 ], [ %24, %1 ]
  %41 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 2
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %40)
  br label %45

45:                                               ; preds = %44, %39
  %46 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %40, i64 1
  %47 = icmp eq %"struct.quic::ParsedQuicVersion"* %46, %26
  br i1 %47, label %28, label %39

48:                                               ; preds = %37
  %49 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %5, align 8
  %50 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %6, align 8
  %51 = icmp eq %"struct.quic::ParsedQuicVersion"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %48
  %53 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %53) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 295, i32 2) #15
  %54 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_ostringstream"* %54 to %"class.std::__1::basic_ostream"*
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %55, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i64 36) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %53) #15
  br label %57

57:                                               ; preds = %48, %37, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21ParseQuicVersionLabelEj(%"struct.quic::ParsedQuicVersion"* noalias nocapture sret, i32) local_unnamed_addr #2 {
  %3 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %4 = tail call i8* @_Znwm(i64 48) #16, !noalias !41
  %5 = bitcast i8* %4 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %5, align 4, !noalias !41
  %6 = getelementptr inbounds i8, i8* %4, i64 16
  %7 = bitcast i8* %6 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %7, align 4, !noalias !41
  %8 = getelementptr inbounds i8, i8* %4, i64 32
  %9 = bitcast i8* %8 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %9, align 4, !noalias !41
  %10 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 1
  store i32 2, i32* %10, align 4
  store i32 80, i32* %11, align 4
  %12 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3)
  %13 = icmp eq i32 %12, %1
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds i8, i8* %4, i64 8
  store i32 2, i32* %10, align 4
  store i32 73, i32* %11, align 4
  %16 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3)
  %17 = icmp eq i32 %16, %1
  %18 = getelementptr inbounds i8, i8* %4, i64 16
  br i1 %17, label %19, label %29

19:                                               ; preds = %56, %47, %38, %29, %14, %2
  %20 = phi i8* [ %4, %2 ], [ %15, %14 ], [ %18, %29 ], [ %37, %38 ], [ %46, %47 ], [ %55, %56 ]
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds i8, i8* %20, i64 4
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %21, align 4
  %25 = load i32, i32* %23, align 4
  %26 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  store i32 %24, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  store i32 %25, i32* %27, align 4
  tail call void @_ZdlPv(i8* nonnull %4) #16
  br label %28

28:                                               ; preds = %19, %64
  ret void

29:                                               ; preds = %14
  %30 = bitcast i8* %18 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %4, i64 20
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  store i32 %31, i32* %10, align 4
  store i32 %34, i32* %11, align 4
  %35 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3)
  %36 = icmp eq i32 %35, %1
  %37 = getelementptr inbounds i8, i8* %4, i64 24
  br i1 %36, label %19, label %38

38:                                               ; preds = %29
  %39 = bitcast i8* %37 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds i8, i8* %4, i64 28
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  store i32 %40, i32* %10, align 4
  store i32 %43, i32* %11, align 4
  %44 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3)
  %45 = icmp eq i32 %44, %1
  %46 = getelementptr inbounds i8, i8* %4, i64 32
  br i1 %45, label %19, label %47

47:                                               ; preds = %38
  %48 = bitcast i8* %46 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds i8, i8* %4, i64 36
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  store i32 %49, i32* %10, align 4
  store i32 %52, i32* %11, align 4
  %53 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3)
  %54 = icmp eq i32 %53, %1
  %55 = getelementptr inbounds i8, i8* %4, i64 40
  br i1 %54, label %19, label %56

56:                                               ; preds = %47
  %57 = bitcast i8* %55 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds i8, i8* %4, i64 44
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  store i32 %58, i32* %10, align 4
  store i32 %61, i32* %11, align 4
  %62 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3)
  %63 = icmp eq i32 %62, %1
  br i1 %63, label %19, label %64

64:                                               ; preds = %56
  tail call void @_ZdlPv(i8* nonnull %4) #16
  %65 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  store i32 0, i32* %65, align 4, !alias.scope !44
  %66 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  store i32 0, i32* %66, align 4, !alias.scope !44
  br label %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic22UnsupportedQuicVersionEv(%"struct.quic::ParsedQuicVersion"* noalias nocapture sret) local_unnamed_addr #7 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4, !alias.scope !49
  %3 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4, !alias.scope !49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22ParseQuicVersionStringEN4absl11string_viewE(%"struct.quic::ParsedQuicVersion"* noalias nocapture sret, i8*, i64) local_unnamed_addr #2 {
  %4 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  store i32 0, i32* %14, align 4, !alias.scope !52
  %15 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  store i32 0, i32* %15, align 4, !alias.scope !52
  br label %238

16:                                               ; preds = %3
  %17 = tail call i8* @_Znwm(i64 48) #16, !noalias !57
  %18 = bitcast i8* %17 to %"struct.quic::ParsedQuicVersion"*
  %19 = bitcast i8* %17 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %19, align 4, !noalias !57
  %20 = getelementptr inbounds i8, i8* %17, i64 16
  %21 = bitcast i8* %20 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %21, align 4, !noalias !57
  %22 = getelementptr inbounds i8, i8* %17, i64 32
  %23 = bitcast i8* %22 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %23, align 4, !noalias !57
  %24 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #15
  store i32 -1431655766, i32* %5, align 4
  %25 = call zeroext i1 @_ZN4absl16numbers_internal17safe_strto32_baseENS_11string_viewEPii(i8* %1, i64 %2, i32* nonnull %5, i32 10) #15
  %26 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #15
  %27 = icmp sgt i32 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %45

29:                                               ; preds = %16
  switch i32 %26, label %233 [
    i32 50, label %30
    i32 46, label %30
    i32 43, label %30
  ]

30:                                               ; preds = %29, %29, %29
  %31 = bitcast i8* %17 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %39

34:                                               ; preds = %30
  %35 = getelementptr inbounds i8, i8* %17, i64 4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %26
  br i1 %38, label %233, label %39

39:                                               ; preds = %34, %30
  %40 = getelementptr inbounds i8, i8* %17, i64 8
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %239, label %244

44:                                               ; preds = %274, %279
  br label %233

45:                                               ; preds = %16
  %46 = getelementptr inbounds i8, i8* %17, i64 48
  %47 = bitcast i8* %46 to %"struct.quic::ParsedQuicVersion"*
  %48 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %49 = bitcast %"struct.quic::ParsedQuicVersion"* %4 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds i8, i8* %48, i64 7
  %53 = getelementptr inbounds i8, i8* %48, i64 5
  %54 = getelementptr inbounds i8, i8* %48, i64 1
  %55 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 1
  %57 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  %58 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %61 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %8, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %8, i64 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = ptrtoint %"class.std::__1::basic_string"* %7 to i64
  %66 = bitcast %"class.std::__1::basic_string"* %7 to i64*
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %69 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = ptrtoint %"class.std::__1::basic_string"* %9 to i64
  %72 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %89

77:                                               ; preds = %188
  %78 = icmp eq %"struct.quic::ParsedQuicVersion"* %189, %47
  br i1 %78, label %79, label %89

79:                                               ; preds = %77
  %80 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %81 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %11, i64 0, i32 0
  %82 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %11, i64 0, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = ptrtoint %"class.std::__1::basic_string"* %10 to i64
  %86 = bitcast %"class.std::__1::basic_string"* %10 to i64*
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %193

89:                                               ; preds = %45, %77
  %90 = phi %"struct.quic::ParsedQuicVersion"* [ %18, %45 ], [ %189, %77 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #15
  %91 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %90, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %90, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  switch i32 %92, label %104 [
    i32 0, label %95
    i32 2, label %98
  ]

95:                                               ; preds = %89
  %96 = icmp eq i32 %94, 0
  br i1 %96, label %97, label %104

97:                                               ; preds = %95
  store i8 1, i8* %51, align 1, !alias.scope !60
  store i8 48, i8* %48, align 8, !alias.scope !60
  br label %101

98:                                               ; preds = %89
  switch i32 %94, label %104 [
    i32 80, label %99
    i32 73, label %100
  ]

99:                                               ; preds = %98
  store i8 5, i8* %51, align 1, !alias.scope !60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), i64 5, i1 false) #15
  br label %101

100:                                              ; preds = %98
  store i8 7, i8* %51, align 1, !alias.scope !60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i64 7, i1 false) #15
  br label %101

101:                                              ; preds = %97, %99, %100
  %102 = phi i8* [ %54, %97 ], [ %53, %99 ], [ %52, %100 ]
  %103 = phi i8 [ 1, %97 ], [ 5, %99 ], [ 7, %100 ]
  store i8 0, i8* %102, align 1, !alias.scope !60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  br label %109

104:                                              ; preds = %95, %98, %89
  store i32 %92, i32* %55, align 4, !noalias !60
  store i32 %94, i32* %56, align 4, !noalias !60
  %105 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %4) #15, !noalias !60
  %106 = call i32 @llvm.bswap.i32(i32 %105) #15
  call void @_ZN4quic15QuicTagToStringEj(%"class.std::__1::basic_string"* nonnull sret %6, i32 %106) #15
  %107 = load i8, i8* %51, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %101, %104
  %110 = phi i8 [ %103, %101 ], [ %107, %104 ]
  %111 = zext i8 %110 to i64
  br label %117

112:                                              ; preds = %104
  %113 = load i64, i64* %58, align 8
  %114 = load i64, i64* %59, align 8
  %115 = icmp sgt i64 %114, -1
  br i1 %115, label %117, label %116, !prof !15

116:                                              ; preds = %112
  call void @llvm.trap() #15
  unreachable

117:                                              ; preds = %109, %112
  %118 = phi i8 [ %107, %112 ], [ %110, %109 ]
  %119 = phi i64 [ %113, %112 ], [ %57, %109 ]
  %120 = phi i64 [ %114, %112 ], [ %111, %109 ]
  %121 = icmp eq i64 %120, %2
  br i1 %121, label %122, label %126

122:                                              ; preds = %117
  %123 = inttoptr i64 %119 to i8*
  %124 = call i32 @bcmp(i8* %1, i8* %123, i64 %2) #15
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %182, label %126

126:                                              ; preds = %117, %122
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #15
  %127 = load i32, i32* %91, align 4
  %128 = load i32, i32* %93, align 4
  store i32 %127, i32* %61, align 4
  store i32 %128, i32* %62, align 4
  call void @_ZN4quic14AlpnForVersionENS_17ParsedQuicVersionE(%"class.std::__1::basic_string"* nonnull sret %7, %"struct.quic::ParsedQuicVersion"* nonnull %8)
  %129 = load i8, i8* %64, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %126
  %132 = zext i8 %129 to i64
  br label %138

133:                                              ; preds = %126
  %134 = load i64, i64* %66, align 8
  %135 = load i64, i64* %67, align 8
  %136 = icmp sgt i64 %135, -1
  br i1 %136, label %138, label %137, !prof !15

137:                                              ; preds = %133
  call void @llvm.trap() #15
  unreachable

138:                                              ; preds = %131, %133
  %139 = phi i64 [ %134, %133 ], [ %65, %131 ]
  %140 = phi i64 [ %135, %133 ], [ %132, %131 ]
  %141 = icmp eq i64 %140, %2
  br i1 %141, label %142, label %146

142:                                              ; preds = %138
  %143 = inttoptr i64 %139 to i8*
  %144 = call i32 @bcmp(i8* %1, i8* %143, i64 %2) #15
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %174, label %146

146:                                              ; preds = %138, %142
  %147 = load i32, i32* %91, align 4
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %174

149:                                              ; preds = %146
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #15
  %150 = load i32, i32* %93, align 4
  call void @_ZN4quic19QuicVersionToStringENS_20QuicTransportVersionE(%"class.std::__1::basic_string"* nonnull sret %9, i32 %150)
  %151 = load i8, i8* %70, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = zext i8 %151 to i64
  br label %160

155:                                              ; preds = %149
  %156 = load i64, i64* %72, align 8
  %157 = load i64, i64* %73, align 8
  %158 = icmp sgt i64 %157, -1
  br i1 %158, label %160, label %159, !prof !15

159:                                              ; preds = %155
  call void @llvm.trap() #15
  unreachable

160:                                              ; preds = %153, %155
  %161 = phi i64 [ %156, %155 ], [ %71, %153 ]
  %162 = phi i64 [ %157, %155 ], [ %154, %153 ]
  %163 = icmp eq i64 %162, %2
  br i1 %163, label %164, label %168

164:                                              ; preds = %160
  %165 = inttoptr i64 %161 to i8*
  %166 = call i32 @bcmp(i8* %1, i8* %165, i64 %2) #15
  %167 = icmp eq i32 %166, 0
  br label %168

168:                                              ; preds = %160, %164
  %169 = phi i1 [ false, %160 ], [ %167, %164 ]
  br i1 %152, label %170, label %172

170:                                              ; preds = %168
  %171 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %171) #16
  br label %172

172:                                              ; preds = %170, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #15
  %173 = load i8, i8* %64, align 1
  br label %174

174:                                              ; preds = %142, %146, %172
  %175 = phi i8 [ %173, %172 ], [ %129, %142 ], [ %129, %146 ]
  %176 = phi i1 [ %169, %172 ], [ true, %142 ], [ false, %146 ]
  %177 = icmp slt i8 %175, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  %179 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %179) #16
  br label %180

180:                                              ; preds = %174, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #15
  %181 = load i8, i8* %51, align 1
  br label %182

182:                                              ; preds = %122, %180
  %183 = phi i8 [ %181, %180 ], [ %118, %122 ]
  %184 = phi i1 [ %176, %180 ], [ true, %122 ]
  %185 = icmp slt i8 %183, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  %187 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %187) #16
  br label %188

188:                                              ; preds = %182, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #15
  %189 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %90, i64 1
  br i1 %184, label %190, label %77

190:                                              ; preds = %188
  %191 = load i32, i32* %91, align 4
  %192 = load i32, i32* %93, align 4
  br label %233

193:                                              ; preds = %79, %225
  %194 = phi %"struct.quic::ParsedQuicVersion"* [ %18, %79 ], [ %226, %225 ]
  %195 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %194, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = icmp sgt i32 %196, 51
  br i1 %197, label %198, label %225

198:                                              ; preds = %193
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #15
  %199 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %194, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %81, align 4
  store i32 %196, i32* %82, align 4
  %201 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %11)
  %202 = call i32 @llvm.bswap.i32(i32 %201) #15
  call void @_ZN4quic15QuicTagToStringEj(%"class.std::__1::basic_string"* nonnull sret %10, i32 %202) #15
  %203 = load i8, i8* %84, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %198
  %206 = zext i8 %203 to i64
  br label %212

207:                                              ; preds = %198
  %208 = load i64, i64* %86, align 8
  %209 = load i64, i64* %87, align 8
  %210 = icmp sgt i64 %209, -1
  br i1 %210, label %212, label %211, !prof !15

211:                                              ; preds = %207
  call void @llvm.trap() #15
  unreachable

212:                                              ; preds = %205, %207
  %213 = phi i64 [ %208, %207 ], [ %85, %205 ]
  %214 = phi i64 [ %209, %207 ], [ %206, %205 ]
  %215 = icmp eq i64 %214, %2
  br i1 %215, label %216, label %220

216:                                              ; preds = %212
  %217 = inttoptr i64 %213 to i8*
  %218 = call i32 @bcmp(i8* %1, i8* %217, i64 %2) #15
  %219 = icmp eq i32 %218, 0
  br label %220

220:                                              ; preds = %212, %216
  %221 = phi i1 [ %219, %216 ], [ false, %212 ]
  br i1 %204, label %222, label %224

222:                                              ; preds = %220
  %223 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %223) #16
  br label %224

224:                                              ; preds = %222, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #15
  br i1 %221, label %228, label %225

225:                                              ; preds = %193, %224
  %226 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %194, i64 1
  %227 = icmp eq %"struct.quic::ParsedQuicVersion"* %226, %47
  br i1 %227, label %233, label %193

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %194, i64 0, i32 1
  %230 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %194, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = load i32, i32* %229, align 4
  br label %233

233:                                              ; preds = %225, %279, %269, %259, %249, %239, %34, %29, %228, %190, %44
  %234 = phi i32 [ %231, %228 ], [ %191, %190 ], [ 0, %44 ], [ 0, %29 ], [ 1, %34 ], [ 1, %239 ], [ 1, %249 ], [ 1, %259 ], [ 1, %269 ], [ 1, %279 ], [ 0, %225 ]
  %235 = phi i32 [ %232, %228 ], [ %192, %190 ], [ 0, %44 ], [ 0, %29 ], [ %26, %34 ], [ %26, %239 ], [ %26, %249 ], [ %26, %259 ], [ %26, %269 ], [ %26, %279 ], [ 0, %225 ]
  %236 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  store i32 %234, i32* %236, align 4
  %237 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  store i32 %235, i32* %237, align 4
  call void @_ZdlPv(i8* nonnull %17) #16
  br label %238

238:                                              ; preds = %233, %13
  ret void

239:                                              ; preds = %39
  %240 = getelementptr inbounds i8, i8* %17, i64 12
  %241 = bitcast i8* %240 to i32*
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, %26
  br i1 %243, label %233, label %244

244:                                              ; preds = %239, %39
  %245 = getelementptr inbounds i8, i8* %17, i64 16
  %246 = bitcast i8* %245 to i32*
  %247 = load i32, i32* %246, align 4
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %249, label %254

249:                                              ; preds = %244
  %250 = getelementptr inbounds i8, i8* %17, i64 20
  %251 = bitcast i8* %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = icmp eq i32 %252, %26
  br i1 %253, label %233, label %254

254:                                              ; preds = %249, %244
  %255 = getelementptr inbounds i8, i8* %17, i64 24
  %256 = bitcast i8* %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 1
  br i1 %258, label %259, label %264

259:                                              ; preds = %254
  %260 = getelementptr inbounds i8, i8* %17, i64 28
  %261 = bitcast i8* %260 to i32*
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, %26
  br i1 %263, label %233, label %264

264:                                              ; preds = %259, %254
  %265 = getelementptr inbounds i8, i8* %17, i64 32
  %266 = bitcast i8* %265 to i32*
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %267, 1
  br i1 %268, label %269, label %274

269:                                              ; preds = %264
  %270 = getelementptr inbounds i8, i8* %17, i64 36
  %271 = bitcast i8* %270 to i32*
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, %26
  br i1 %273, label %233, label %274

274:                                              ; preds = %269, %264
  %275 = getelementptr inbounds i8, i8* %17, i64 40
  %276 = bitcast i8* %275 to i32*
  %277 = load i32, i32* %276, align 4
  %278 = icmp eq i32 %277, 1
  br i1 %278, label %279, label %44

279:                                              ; preds = %274
  %280 = getelementptr inbounds i8, i8* %17, i64 44
  %281 = bitcast i8* %280 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, %26
  br i1 %283, label %233, label %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14AlpnForVersionENS_17ParsedQuicVersionE(%"class.std::__1::basic_string"* noalias sret, %"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #2 {
  %3 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %17 [
    i32 80, label %11
    i32 73, label %20
  ]

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 2, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 13160, i16* %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 2
  store i8 0, i8* %16, align 2
  br label %59

17:                                               ; preds = %8
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15
  %19 = bitcast %"struct.quic::ParsedQuicVersion"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  br label %36

20:                                               ; preds = %8
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 5, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5, i1 false) #15
  %24 = getelementptr inbounds i8, i8* %23, i64 5
  store i8 0, i8* %24, align 1
  br label %59

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = bitcast %"struct.quic::ParsedQuicVersion"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = or i32 %28, %6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %25
  %33 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 1, i8* %34, align 1, !alias.scope !63
  store i8 48, i8* %26, align 8, !alias.scope !63
  %35 = getelementptr inbounds i8, i8* %26, i64 1
  store i8 0, i8* %35, align 1, !alias.scope !63
  br label %45

36:                                               ; preds = %17, %25
  %37 = phi i8* [ %19, %17 ], [ %29, %25 ]
  %38 = phi i32 [ %10, %17 ], [ %28, %25 ]
  %39 = phi i8* [ %18, %17 ], [ %26, %25 ]
  %40 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 0
  store i32 %6, i32* %40, align 4, !noalias !63
  %41 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 1
  store i32 %38, i32* %41, align 4, !noalias !63
  %42 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %3) #15, !noalias !63
  %43 = tail call i32 @llvm.bswap.i32(i32 %42) #15
  call void @_ZN4quic15QuicTagToStringEj(%"class.std::__1::basic_string"* nonnull sret %4, i32 %43) #15
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %45

45:                                               ; preds = %32, %36
  %46 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %32 ], [ %44, %36 ]
  %47 = phi i8* [ %29, %32 ], [ %37, %36 ]
  %48 = phi i8* [ %26, %32 ], [ %39, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %4, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0)) #15, !noalias !66
  %50 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #15, !noalias !66
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %45, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #15
  br label %59

59:                                               ; preds = %58, %20, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QuicVersionLabelToStringEj(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #2 {
  %3 = tail call i32 @llvm.bswap.i32(i32 %1) #15
  tail call void @_ZN4quic15QuicTagToStringEj(%"class.std::__1::basic_string"* sret %0, i32 %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic28ParseQuicVersionVectorStringEN4absl11string_viewE(%"class.std::__1::vector"* noalias sret, i8*, i64) local_unnamed_addr #2 {
  %4 = alloca %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", align 1
  %5 = alloca %"class.std::__1::vector.21", align 8
  %6 = alloca %"class.absl::strings_internal::Splitter", align 8
  %7 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #15
  %12 = bitcast %"class.std::__1::vector.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %5, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %5, i64 0, i32 0, i32 1
  %15 = bitcast %"class.absl::strings_internal::Splitter"* %6 to i8*
  %16 = bitcast %"class.std::__1::vector.21"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %17 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %6, i64 0, i32 0, i32 0
  store i8* %1, i8** %17, align 8, !alias.scope !69
  %18 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %6, i64 0, i32 0, i32 1
  store i64 %2, i64* %18, align 8, !alias.scope !69
  %19 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %6, i64 0, i32 1, i32 0
  store i8 44, i8* %19, align 8, !alias.scope !69
  %20 = getelementptr inbounds %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #15, !noalias !72
  call void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.21"* nonnull sret %5, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* nonnull %4, %"class.absl::strings_internal::Splitter"* nonnull dereferenceable(24) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #15, !noalias !72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  %21 = load %"class.absl::string_view"*, %"class.absl::string_view"** %13, align 8
  %22 = load %"class.absl::string_view"*, %"class.absl::string_view"** %14, align 8
  %23 = icmp eq %"class.absl::string_view"* %21, %22
  br i1 %23, label %33, label %24

24:                                               ; preds = %3
  %25 = bitcast %"struct.quic::ParsedQuicVersion"* %7 to i8*
  %26 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %7, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %7, i64 0, i32 1
  %28 = bitcast %"struct.quic::ParsedQuicVersion"** %9 to i64*
  %29 = bitcast %"class.std::__1::vector"* %0 to i64*
  %30 = bitcast %"struct.quic::ParsedQuicVersion"** %10 to i64*
  br label %41

31:                                               ; preds = %231
  %32 = load %"class.absl::string_view"*, %"class.absl::string_view"** %13, align 8
  br label %33

33:                                               ; preds = %31, %3
  %34 = phi %"class.absl::string_view"* [ %32, %31 ], [ %21, %3 ]
  %35 = icmp eq %"class.absl::string_view"* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = ptrtoint %"class.absl::string_view"* %34 to i64
  %38 = bitcast %"class.absl::string_view"** %14 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %"class.absl::string_view"* %34 to i8*
  call void @_ZdlPv(i8* %39) #16
  br label %40

40:                                               ; preds = %33, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #15
  ret void

41:                                               ; preds = %24, %231
  %42 = phi %"class.absl::string_view"* [ %21, %24 ], [ %232, %231 ]
  %43 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %42, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %42, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %41, %57
  %50 = phi i8* [ %58, %57 ], [ %44, %41 ]
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl14ascii_internal13kPropertyBitsE, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = and i8 %54, 8
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds i8, i8* %50, i64 1
  %59 = icmp eq i8* %58, %47
  br i1 %59, label %60, label %49

60:                                               ; preds = %57, %49, %41
  %61 = phi i8* [ %44, %41 ], [ %47, %57 ], [ %50, %49 ]
  %62 = ptrtoint i8* %61 to i64
  %63 = ptrtoint i8* %44 to i64
  %64 = sub i64 %62, %63
  %65 = icmp ult i64 %46, %64
  br i1 %65, label %66, label %67, !prof !75

66:                                               ; preds = %60
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0)) #17
  unreachable

67:                                               ; preds = %60
  %68 = sub i64 %46, %64
  %69 = icmp sgt i64 %68, -1
  br i1 %69, label %71, label %70, !prof !15

70:                                               ; preds = %67
  call void @llvm.trap() #15
  unreachable

71:                                               ; preds = %67
  %72 = getelementptr inbounds i8, i8* %61, i64 %68
  br label %73

73:                                               ; preds = %76, %71
  %74 = phi i8* [ %72, %71 ], [ %77, %76 ]
  %75 = icmp eq i8* %74, %61
  br i1 %75, label %86, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds i8, i8* %74, i64 -1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl14ascii_internal13kPropertyBitsE, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = and i8 %81, 8
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %73

84:                                               ; preds = %76
  %85 = ptrtoint i8* %74 to i64
  br label %86

86:                                               ; preds = %73, %84
  %87 = phi i64 [ %85, %84 ], [ %62, %73 ]
  %88 = sub i64 %87, %62
  %89 = icmp ult i64 %88, %68
  %90 = select i1 %89, i64 %88, i64 %68
  %91 = icmp sgt i64 %90, -1
  br i1 %91, label %93, label %92, !prof !15

92:                                               ; preds = %86
  call void @llvm.trap() #15
  unreachable

93:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store i32 -1431655766, i32* %26, align 4
  store i32 -1431655766, i32* %27, align 4
  call void @_ZN4quic22ParseQuicVersionStringEN4absl11string_viewE(%"struct.quic::ParsedQuicVersion"* nonnull sret %7, i8* %61, i64 %90)
  %94 = load i32, i32* %27, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %231, label %96

96:                                               ; preds = %93
  %97 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %8, align 8
  %98 = ptrtoint %"struct.quic::ParsedQuicVersion"* %97 to i64
  %99 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %9, align 8
  %100 = icmp eq %"struct.quic::ParsedQuicVersion"* %97, %99
  br i1 %100, label %115, label %101

101:                                              ; preds = %96
  %102 = load i32, i32* %26, align 4
  br label %103

103:                                              ; preds = %112, %101
  %104 = phi %"struct.quic::ParsedQuicVersion"* [ %97, %101 ], [ %113, %112 ]
  %105 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %104, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, %102
  br i1 %107, label %108, label %112

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %104, i64 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, %94
  br i1 %111, label %115, label %112

112:                                              ; preds = %108, %103
  %113 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %104, i64 1
  %114 = icmp eq %"struct.quic::ParsedQuicVersion"* %113, %99
  br i1 %114, label %118, label %103

115:                                              ; preds = %108, %96
  %116 = phi %"struct.quic::ParsedQuicVersion"* [ %97, %96 ], [ %104, %108 ]
  %117 = icmp eq %"struct.quic::ParsedQuicVersion"* %116, %99
  br i1 %117, label %118, label %231

118:                                              ; preds = %112, %115
  %119 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %10, align 8
  %120 = icmp eq %"struct.quic::ParsedQuicVersion"* %99, %119
  %121 = ptrtoint %"struct.quic::ParsedQuicVersion"* %119 to i64
  br i1 %120, label %128, label %122

122:                                              ; preds = %118
  %123 = load i32, i32* %26, align 4
  %124 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %99, i64 0, i32 0
  store i32 %123, i32* %124, align 4
  %125 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %99, i64 0, i32 1
  store i32 %94, i32* %125, align 4
  %126 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %99, i64 1
  %127 = ptrtoint %"struct.quic::ParsedQuicVersion"* %126 to i64
  store i64 %127, i64* %28, align 8
  br label %231

128:                                              ; preds = %118
  %129 = ptrtoint %"struct.quic::ParsedQuicVersion"* %99 to i64
  %130 = sub i64 %129, %98
  %131 = ashr exact i64 %130, 3
  %132 = add nsw i64 %131, 1
  %133 = icmp ugt i64 %132, 2305843009213693951
  br i1 %133, label %134, label %136

134:                                              ; preds = %128
  %135 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %135) #17
  unreachable

136:                                              ; preds = %128
  %137 = sub i64 %121, %98
  %138 = ashr exact i64 %137, 3
  %139 = icmp ult i64 %138, 1152921504606846975
  br i1 %139, label %140, label %148

140:                                              ; preds = %136
  %141 = ashr exact i64 %137, 2
  %142 = icmp ult i64 %141, %132
  %143 = select i1 %142, i64 %132, i64 %141
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %140
  %146 = icmp ugt i64 %143, 2305843009213693951
  br i1 %146, label %147, label %148

147:                                              ; preds = %145
  call void @abort() #17
  unreachable

148:                                              ; preds = %145, %136
  %149 = phi i64 [ %143, %145 ], [ 2305843009213693951, %136 ]
  %150 = shl i64 %149, 3
  %151 = call i8* @_Znwm(i64 %150) #16
  %152 = bitcast i8* %151 to %"struct.quic::ParsedQuicVersion"*
  br label %153

153:                                              ; preds = %148, %140
  %154 = phi i64 [ %149, %148 ], [ 0, %140 ]
  %155 = phi %"struct.quic::ParsedQuicVersion"* [ %152, %148 ], [ null, %140 ]
  %156 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %155, i64 %131
  %157 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %155, i64 %154
  %158 = ptrtoint %"struct.quic::ParsedQuicVersion"* %157 to i64
  %159 = load i32, i32* %26, align 4
  %160 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %156, i64 0, i32 0
  store i32 %159, i32* %160, align 4
  %161 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %155, i64 %131, i32 1
  store i32 %94, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %156, i64 1
  %163 = ptrtoint %"struct.quic::ParsedQuicVersion"* %162 to i64
  br i1 %100, label %224, label %164

164:                                              ; preds = %153
  %165 = getelementptr %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %99, i64 -1
  %166 = ptrtoint %"struct.quic::ParsedQuicVersion"* %165 to i64
  %167 = sub i64 %166, %98
  %168 = lshr i64 %167, 3
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 3
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %186, label %172

172:                                              ; preds = %164, %172
  %173 = phi %"struct.quic::ParsedQuicVersion"* [ %183, %172 ], [ %156, %164 ]
  %174 = phi %"struct.quic::ParsedQuicVersion"* [ %176, %172 ], [ %99, %164 ]
  %175 = phi i64 [ %184, %172 ], [ %170, %164 ]
  %176 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %174, i64 -1
  %177 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %176, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %174, i64 -1, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %173, i64 -1, i32 0
  store i32 %178, i32* %181, align 4
  %182 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %173, i64 -1, i32 1
  store i32 %180, i32* %182, align 4
  %183 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %173, i64 -1
  %184 = add i64 %175, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %172, !llvm.loop !76

186:                                              ; preds = %172, %164
  %187 = phi %"struct.quic::ParsedQuicVersion"* [ undef, %164 ], [ %183, %172 ]
  %188 = phi %"struct.quic::ParsedQuicVersion"* [ %156, %164 ], [ %183, %172 ]
  %189 = phi %"struct.quic::ParsedQuicVersion"* [ %99, %164 ], [ %176, %172 ]
  %190 = icmp ult i64 %167, 24
  br i1 %190, label %221, label %191

191:                                              ; preds = %186, %191
  %192 = phi %"struct.quic::ParsedQuicVersion"* [ %219, %191 ], [ %188, %186 ]
  %193 = phi %"struct.quic::ParsedQuicVersion"* [ %212, %191 ], [ %189, %186 ]
  %194 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %193, i64 -1, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %193, i64 -1, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %192, i64 -1, i32 0
  store i32 %195, i32* %198, align 4
  %199 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %192, i64 -1, i32 1
  store i32 %197, i32* %199, align 4
  %200 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %193, i64 -2, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %193, i64 -2, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %192, i64 -2, i32 0
  store i32 %201, i32* %204, align 4
  %205 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %192, i64 -2, i32 1
  store i32 %203, i32* %205, align 4
  %206 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %193, i64 -3, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %193, i64 -3, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %192, i64 -3, i32 0
  store i32 %207, i32* %210, align 4
  %211 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %192, i64 -3, i32 1
  store i32 %209, i32* %211, align 4
  %212 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %193, i64 -4
  %213 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %212, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %193, i64 -4, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %192, i64 -4, i32 0
  store i32 %214, i32* %217, align 4
  %218 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %192, i64 -4, i32 1
  store i32 %216, i32* %218, align 4
  %219 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %192, i64 -4
  %220 = icmp eq %"struct.quic::ParsedQuicVersion"* %212, %97
  br i1 %220, label %221, label %191

221:                                              ; preds = %191, %186
  %222 = phi %"struct.quic::ParsedQuicVersion"* [ %187, %186 ], [ %219, %191 ]
  %223 = load i64, i64* %29, align 8
  br label %224

224:                                              ; preds = %153, %221
  %225 = phi %"struct.quic::ParsedQuicVersion"* [ %222, %221 ], [ %156, %153 ]
  %226 = phi i64 [ %223, %221 ], [ %98, %153 ]
  %227 = ptrtoint %"struct.quic::ParsedQuicVersion"* %225 to i64
  store i64 %227, i64* %29, align 8
  store i64 %163, i64* %28, align 8
  store i64 %158, i64* %30, align 8
  %228 = icmp eq i64 %226, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %224
  %230 = inttoptr i64 %226 to i8*
  call void @_ZdlPv(i8* %230) #16
  br label %231

231:                                              ; preds = %93, %115, %229, %224, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  %232 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %42, i64 1
  %233 = icmp eq %"class.absl::string_view"* %232, %22
  br i1 %233, label %31, label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic29AllSupportedTransportVersionsEv(%"class.std::__1::vector.13"* noalias sret) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.13"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = tail call i8* @_Znwm(i64 48) #16, !noalias !77
  %7 = bitcast i8* %6 to %"struct.quic::ParsedQuicVersion"*
  %8 = bitcast i8* %6 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %8, align 4, !noalias !77
  %9 = getelementptr inbounds i8, i8* %6, i64 16
  %10 = bitcast i8* %9 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %10, align 4, !noalias !77
  %11 = getelementptr inbounds i8, i8* %6, i64 32
  %12 = bitcast i8* %11 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %12, align 4, !noalias !77
  %13 = getelementptr inbounds i8, i8* %6, i64 48
  %14 = bitcast i8* %13 to %"struct.quic::ParsedQuicVersion"*
  %15 = bitcast i32** %3 to i64*
  %16 = bitcast %"class.std::__1::vector.13"* %0 to i64*
  %17 = bitcast i32** %4 to i64*
  br label %19

18:                                               ; preds = %94
  tail call void @_ZdlPv(i8* nonnull %6) #16
  ret void

19:                                               ; preds = %97, %1
  %20 = phi i64 [ 0, %1 ], [ %101, %97 ]
  %21 = phi i64 [ 0, %1 ], [ %100, %97 ]
  %22 = phi i32* [ null, %1 ], [ %99, %97 ]
  %23 = phi i32* [ null, %1 ], [ %98, %97 ]
  %24 = phi %"struct.quic::ParsedQuicVersion"* [ %7, %1 ], [ %95, %97 ]
  %25 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %24, i64 0, i32 1
  %26 = icmp eq i32* %23, %22
  br i1 %26, label %38, label %27

27:                                               ; preds = %19
  %28 = load i32, i32* %25, align 4
  br label %29

29:                                               ; preds = %33, %27
  %30 = phi i32* [ %23, %27 ], [ %34, %33 ]
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, %28
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds i32, i32* %30, i64 1
  %35 = icmp eq i32* %34, %22
  br i1 %35, label %38, label %29

36:                                               ; preds = %29
  %37 = icmp eq i32* %30, %22
  br i1 %37, label %38, label %94

38:                                               ; preds = %33, %19, %36
  %39 = load i32*, i32** %4, align 8
  %40 = icmp eq i32* %22, %39
  %41 = ptrtoint i32* %39 to i64
  br i1 %40, label %46, label %42

42:                                               ; preds = %38
  %43 = load i32, i32* %25, align 4
  store i32 %43, i32* %22, align 4
  %44 = getelementptr inbounds i32, i32* %22, i64 1
  %45 = ptrtoint i32* %44 to i64
  store i64 %45, i64* %15, align 8
  br label %94

46:                                               ; preds = %38
  %47 = ptrtoint i32* %22 to i64
  %48 = sub i64 %47, %21
  %49 = ashr exact i64 %48, 2
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 4611686018427387903
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #17
  unreachable

54:                                               ; preds = %46
  %55 = sub i64 %41, %21
  %56 = ashr exact i64 %55, 2
  %57 = icmp ult i64 %56, 2305843009213693951
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = ashr exact i64 %55, 1
  %60 = icmp ult i64 %59, %50
  %61 = select i1 %60, i64 %50, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 4611686018427387903
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #17
  unreachable

66:                                               ; preds = %63, %54
  %67 = phi i64 [ %61, %63 ], [ 4611686018427387903, %54 ]
  %68 = shl i64 %67, 2
  %69 = tail call i8* @_Znwm(i64 %68) #16
  %70 = bitcast i8* %69 to i32*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi i32* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds i32, i32* %73, i64 %49
  %75 = getelementptr inbounds i32, i32* %73, i64 %72
  %76 = ptrtoint i32* %75 to i64
  %77 = load i32, i32* %25, align 4
  store i32 %77, i32* %74, align 4
  %78 = getelementptr inbounds i32, i32* %74, i64 1
  %79 = ptrtoint i32* %78 to i64
  %80 = ptrtoint i32* %23 to i64
  %81 = sub i64 %20, %80
  %82 = ashr exact i64 %81, 2
  %83 = sub nsw i64 0, %82
  %84 = getelementptr inbounds i32, i32* %74, i64 %83
  %85 = ptrtoint i32* %84 to i64
  %86 = icmp sgt i64 %81, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %71
  %88 = bitcast i32* %84 to i8*
  %89 = bitcast i32* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 %81, i1 false) #15
  br label %90

90:                                               ; preds = %87, %71
  store i64 %85, i64* %16, align 8
  store i64 %79, i64* %15, align 8
  store i64 %76, i64* %17, align 8
  %91 = icmp eq i32* %23, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = bitcast i32* %23 to i8*
  tail call void @_ZdlPv(i8* %93) #16
  br label %94

94:                                               ; preds = %92, %90, %42, %36
  %95 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %24, i64 1
  %96 = icmp eq %"struct.quic::ParsedQuicVersion"* %95, %14
  br i1 %96, label %18, label %97

97:                                               ; preds = %94
  %98 = load i32*, i32** %2, align 8
  %99 = load i32*, i32** %3, align 8
  %100 = ptrtoint i32* %98 to i64
  %101 = ptrtoint i32* %99 to i64
  br label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23FilterSupportedVersionsENSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::vector"* nocapture readonly) local_unnamed_addr #2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.quic::ParsedQuicVersion"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = bitcast %"struct.quic::ParsedQuicVersion"** %4 to i64*
  %14 = bitcast %"class.std::__1::vector"* %0 to i64*
  %15 = icmp eq i64 %11, 0
  %16 = inttoptr i64 %10 to %"struct.quic::ParsedQuicVersion"*
  %17 = inttoptr i64 %8 to %"struct.quic::ParsedQuicVersion"*
  br i1 %15, label %29, label %18

18:                                               ; preds = %2
  %19 = icmp ugt i64 %12, 2305843009213693951
  br i1 %19, label %20, label %21

20:                                               ; preds = %18
  tail call void @abort() #17
  unreachable

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %23 = bitcast %"struct.quic::ParsedQuicVersion"** %22 to i64*
  %24 = tail call i8* @_Znwm(i64 %11) #16
  %25 = bitcast i8* %24 to %"struct.quic::ParsedQuicVersion"*
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %25, i64 %12
  %28 = ptrtoint %"struct.quic::ParsedQuicVersion"* %27 to i64
  store i64 %26, i64* %14, align 8
  store i64 %26, i64* %23, align 8
  store i64 %28, i64* %13, align 8
  br label %29

29:                                               ; preds = %21, %2
  %30 = icmp eq %"struct.quic::ParsedQuicVersion"* %16, %17
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.logging::LogMessage"* %3 to i8*
  %33 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_ostringstream"* %33 to %"class.std::__1::basic_ostream"*
  br label %36

35:                                               ; preds = %77, %29
  ret void

36:                                               ; preds = %31, %77
  %37 = phi %"struct.quic::ParsedQuicVersion"* [ %16, %31 ], [ %78, %77 ]
  %38 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  switch i32 %39, label %70 [
    i32 2, label %40
    i32 1, label %55
  ]

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %37, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  switch i32 %42, label %70 [
    i32 80, label %43
    i32 73, label %47
    i32 51, label %51
  ]

43:                                               ; preds = %40
  %44 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_enable_version_rfcv1, align 1, !range !11
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %77, label %46

46:                                               ; preds = %43
  call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %37)
  br label %77

47:                                               ; preds = %40
  %48 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !11
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %77

50:                                               ; preds = %47
  call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %37)
  br label %77

51:                                               ; preds = %40
  %52 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !11
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %77

54:                                               ; preds = %51
  call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %37)
  br label %77

55:                                               ; preds = %36
  %56 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %37, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  switch i32 %57, label %70 [
    i32 50, label %58
    i32 46, label %62
    i32 43, label %66
  ]

58:                                               ; preds = %55
  %59 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !11
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %77

61:                                               ; preds = %58
  call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %37)
  br label %77

62:                                               ; preds = %55
  %63 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !11
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %62
  call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %37)
  br label %77

66:                                               ; preds = %55
  %67 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !11
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %77

69:                                               ; preds = %66
  call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %37)
  br label %77

70:                                               ; preds = %55, %40, %36
  %71 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %71, label %72, label %76

72:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %32) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 422, i32 2) #15
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i64 13) #15
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_17ParsedQuicVersionE(%"class.std::__1::basic_ostream"* dereferenceable(160) %73, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %37)
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %74, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i64 23) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %32) #15
  br label %76

76:                                               ; preds = %70, %72
  call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %37)
  br label %77

77:                                               ; preds = %43, %47, %51, %58, %62, %66, %50, %61, %76, %69, %65, %54, %46
  %78 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %37, i64 1
  %79 = icmp eq %"struct.quic::ParsedQuicVersion"* %78, %17
  br i1 %79, label %35, label %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20ParsedVersionOfIndexERKNSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEEi(%"class.std::__1::vector"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #2 {
  %4 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.quic::ParsedQuicVersion"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = lshr exact i64 %10, 3
  %12 = icmp sgt i32 %2, -1
  %13 = trunc i64 %11 to i32
  %14 = icmp sgt i32 %13, %2
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = inttoptr i64 %9 to %"struct.quic::ParsedQuicVersion"*
  %18 = sext i32 %2 to i64
  %19 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %17, i64 %18
  tail call void @_ZNSt3__16vectorIN4quic17ParsedQuicVersionENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::vector"* %0, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %19)
  br label %33

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %23 = bitcast %"struct.quic::ParsedQuicVersion"** %22 to i64*
  %24 = bitcast %"class.std::__1::vector"* %0 to i64*
  %25 = bitcast %"struct.quic::ParsedQuicVersion"** %21 to i64*
  %26 = tail call i8* @_Znwm(i64 8) #16
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast i8* %26 to i32*
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %26, i64 4
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4
  %32 = ptrtoint i8* %26 to i64
  store i64 %32, i64* %24, align 8
  store i64 %28, i64* %23, align 8
  store i64 %28, i64* %25, align 8
  br label %33

33:                                               ; preds = %20, %16
  ret void
}

declare void @_ZN4quic15QuicTagToStringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QuicVersionLabelVectorToStringERKNSt3__16vectorIjNS0_9allocatorIjEEEERKNS0_12basic_stringIcNS0_11char_traitsIcEENS2_IcEEEEm(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #15
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.6"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %65, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %20 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %25

25:                                               ; preds = %13, %58
  %26 = phi i64 [ 0, %13 ], [ %59, %58 ]
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %25
  %29 = load i8, i8* %15, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %16, align 8
  %32 = load i64, i64* %17, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i8* %31, i8* %18
  %35 = select i1 %30, i64 %32, i64 %33
  %36 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %34, i64 %35) #15
  br label %37

37:                                               ; preds = %25, %28
  %38 = icmp ugt i64 %26, %3
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0)) #15
  br label %65

41:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  %42 = load i32*, i32** %20, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 %26
  %44 = load i32, i32* %43, align 4
  %45 = call i32 @llvm.bswap.i32(i32 %44) #15
  call void @_ZN4quic15QuicTagToStringEj(%"class.std::__1::basic_string"* nonnull sret %5, i32 %45) #15
  %46 = load i8, i8* %22, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i8*, i8** %23, align 8
  %49 = load i64, i64* %24, align 8
  %50 = zext i8 %46 to i64
  %51 = select i1 %47, i8* %48, i8* %19
  %52 = select i1 %47, i64 %49, i64 %50
  %53 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %51, i64 %52) #15
  %54 = load i8, i8* %22, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %41
  %57 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %41, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  %59 = add nuw i64 %26, 1
  %60 = load i64, i64* %8, align 8
  %61 = load i64, i64* %10, align 8
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 2
  %64 = icmp ult i64 %59, %63
  br i1 %64, label %25, label %65

65:                                               ; preds = %58, %4, %39
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic31ParsedQuicVersionVectorToStringERKNSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEERKNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEEm(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #2 {
  %5 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #15
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"struct.quic::ParsedQuicVersion"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %84, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %22 = bitcast %"struct.quic::ParsedQuicVersion"* %5 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds i8, i8* %20, i64 7
  %26 = getelementptr inbounds i8, i8* %20, i64 5
  %27 = getelementptr inbounds i8, i8* %20, i64 1
  %28 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %5, i64 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %32

32:                                               ; preds = %14, %77
  %33 = phi i64 [ 0, %14 ], [ %78, %77 ]
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %32
  %36 = load i8, i8* %16, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i8*, i8** %17, align 8
  %39 = load i64, i64* %18, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i8* %38, i8* %19
  %42 = select i1 %37, i64 %39, i64 %40
  %43 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %41, i64 %42) #15
  br label %44

44:                                               ; preds = %32, %35
  %45 = icmp ugt i64 %33, %3
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0)) #15
  br label %84

48:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  %49 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %21, align 8
  %50 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %49, i64 %33, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %49, i64 %33, i32 1
  %53 = load i32, i32* %52, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  switch i32 %51, label %60 [
    i32 0, label %54
    i32 2, label %57
  ]

54:                                               ; preds = %48
  %55 = icmp eq i32 %53, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %54
  store i8 1, i8* %24, align 1, !alias.scope !80
  store i8 48, i8* %20, align 8, !alias.scope !80
  store i8 0, i8* %27, align 1, !alias.scope !80
  br label %64

57:                                               ; preds = %48
  switch i32 %53, label %60 [
    i32 80, label %58
    i32 73, label %59
  ]

58:                                               ; preds = %57
  store i8 5, i8* %24, align 1, !alias.scope !80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), i64 5, i1 false) #15
  store i8 0, i8* %26, align 1, !alias.scope !80
  br label %64

59:                                               ; preds = %57
  store i8 7, i8* %24, align 1, !alias.scope !80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i64 7, i1 false) #15
  store i8 0, i8* %25, align 1, !alias.scope !80
  br label %64

60:                                               ; preds = %48, %57, %54
  store i32 %51, i32* %28, align 4, !noalias !80
  store i32 %53, i32* %29, align 4, !noalias !80
  %61 = call i32 @_ZN4quic22CreateQuicVersionLabelENS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nonnull %5) #15, !noalias !80
  %62 = call i32 @llvm.bswap.i32(i32 %61) #15
  call void @_ZN4quic15QuicTagToStringEj(%"class.std::__1::basic_string"* nonnull sret %6, i32 %62) #15
  %63 = load i8, i8* %24, align 1
  br label %64

64:                                               ; preds = %56, %58, %59, %60
  %65 = phi i8 [ 1, %56 ], [ 5, %58 ], [ 7, %59 ], [ %63, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %66 = icmp slt i8 %65, 0
  %67 = load i8*, i8** %30, align 8
  %68 = load i64, i64* %31, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i8* %67, i8* %20
  %71 = select i1 %66, i64 %68, i64 %69
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %70, i64 %71) #15
  %73 = load i8, i8* %24, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %64
  %76 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %76) #16
  br label %77

77:                                               ; preds = %64, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #15
  %78 = add nuw i64 %33, 1
  %79 = load i64, i64* %9, align 8
  %80 = load i64, i64* %11, align 8
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 3
  %83 = icmp ult i64 %78, %82
  br i1 %83, label %32, label %84

84:                                               ; preds = %77, %4, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic42QuicVersionLabelUses4BitConnectionIdLengthEj(i32) local_unnamed_addr #2 {
  %2 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 52, i8 signext 52, i8 signext 48, i8 signext 81) #15
  %3 = icmp eq i32 %2, %0
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 53, i8 signext 52, i8 signext 48, i8 signext 81) #15
  %6 = icmp eq i32 %5, %0
  br i1 %6, label %13, label %41

7:                                                ; preds = %50
  %8 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 11, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %9 = icmp eq i32 %8, %0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 12, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %12 = icmp eq i32 %11, %0
  br i1 %12, label %13, label %14

13:                                               ; preds = %1, %4, %41, %44, %47, %7, %10, %14, %17, %20, %23, %26, %29, %32, %35, %50
  ret i1 true

14:                                               ; preds = %10
  %15 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 13, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %16 = icmp eq i32 %15, %0
  br i1 %16, label %13, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 14, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %19 = icmp eq i32 %18, %0
  br i1 %19, label %13, label %20

20:                                               ; preds = %17
  %21 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 15, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %22 = icmp eq i32 %21, %0
  br i1 %22, label %13, label %23

23:                                               ; preds = %20
  %24 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 16, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %25 = icmp eq i32 %24, %0
  br i1 %25, label %13, label %26

26:                                               ; preds = %23
  %27 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 17, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %28 = icmp eq i32 %27, %0
  br i1 %28, label %13, label %29

29:                                               ; preds = %26
  %30 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 18, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %31 = icmp eq i32 %30, %0
  br i1 %31, label %13, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 19, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %34 = icmp eq i32 %33, %0
  br i1 %34, label %13, label %35

35:                                               ; preds = %32
  %36 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 20, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %37 = icmp eq i32 %36, %0
  br i1 %37, label %13, label %38

38:                                               ; preds = %35
  %39 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 21, i8 signext 0, i8 signext 0, i8 signext -1) #15
  %40 = icmp eq i32 %39, %0
  ret i1 %40

41:                                               ; preds = %4
  %42 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 54, i8 signext 52, i8 signext 48, i8 signext 81) #15
  %43 = icmp eq i32 %42, %0
  br i1 %43, label %13, label %44

44:                                               ; preds = %41
  %45 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 55, i8 signext 52, i8 signext 48, i8 signext 81) #15
  %46 = icmp eq i32 %45, %0
  br i1 %46, label %13, label %47

47:                                               ; preds = %44
  %48 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 56, i8 signext 52, i8 signext 48, i8 signext 81) #15
  %49 = icmp eq i32 %48, %0
  br i1 %49, label %13, label %50

50:                                               ; preds = %47
  %51 = tail call i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext 56, i8 signext 52, i8 signext 48, i8 signext 84) #15
  %52 = icmp eq i32 %51, %0
  br i1 %52, label %13, label %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic33QuicVersionReservedForNegotiationEv(%"struct.quic::ParsedQuicVersion"* noalias nocapture sret) local_unnamed_addr #7 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  store i32 2, i32* %2, align 4, !alias.scope !83
  %3 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  store i32 999, i32* %3, align 4, !alias.scope !83
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic29LegacyVersionForEncapsulationEv(%"struct.quic::ParsedQuicVersion"* noalias nocapture sret) local_unnamed_addr #7 {
  %2 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  store i32 1, i32* %2, align 4, !alias.scope !86
  %3 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  store i32 43, i32* %3, align 4, !alias.scope !86
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4quic40QuicVersionInitializeSupportForIetfDraftEv() local_unnamed_addr #1 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic17QuicEnableVersionERKNS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  tail call fastcc void @_ZN4quic12_GLOBAL__N_114SetVersionFlagERKNS_17ParsedQuicVersionEb(%"struct.quic::ParsedQuicVersion"* dereferenceable(8) %0, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4quic12_GLOBAL__N_114SetVersionFlagERKNS_17ParsedQuicVersionEb(%"struct.quic::ParsedQuicVersion"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = xor i1 %1, true
  %5 = zext i1 %4 to i8
  %6 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %21 [
    i32 2, label %8
    i32 1, label %15
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %21 [
    i32 80, label %11
    i32 73, label %13
    i32 51, label %14
  ]

11:                                               ; preds = %8
  %12 = zext i1 %1 to i8
  store i8 %12, i8* @FLAGS_quic_reloadable_flag_quic_enable_version_rfcv1, align 1
  br label %33

13:                                               ; preds = %8
  store i8 %5, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1
  br label %33

14:                                               ; preds = %8
  store i8 %5, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1
  br label %33

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  switch i32 %17, label %21 [
    i32 50, label %18
    i32 46, label %19
    i32 43, label %20
  ]

18:                                               ; preds = %15
  store i8 %5, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1
  br label %33

19:                                               ; preds = %15
  store i8 %5, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1
  br label %33

20:                                               ; preds = %15
  store i8 %5, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1
  br label %33

21:                                               ; preds = %15, %8, %2
  %22 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %22, label %23, label %33

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %24) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 62, i32 2) #15
  %25 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i64 7) #15
  %28 = select i1 %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0)
  %29 = select i1 %1, i64 2, i64 3
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* %28, i64 %29) #15
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0), i64 13) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_17ParsedQuicVersionE(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %0)
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %24) #15
  br label %33

33:                                               ; preds = %23, %21, %13, %18, %20, %19, %14, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicDisableVersionERKNS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  tail call fastcc void @_ZN4quic12_GLOBAL__N_114SetVersionFlagERKNS_17ParsedQuicVersionEb(%"struct.quic::ParsedQuicVersion"* dereferenceable(8) %0, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic20QuicVersionIsEnabledERKNS_17ParsedQuicVersionE(%"struct.quic::ParsedQuicVersion"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %2 to i8*
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  %9 = tail call i8* @_Znwm(i64 48) #16, !noalias !89
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %9, i8** %11, align 8, !alias.scope !94, !noalias !95
  %12 = getelementptr inbounds i8, i8* %9, i64 48
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.quic::ParsedQuicVersion"** %13 to i8**
  store i8* %12, i8** %14, align 8, !alias.scope !94, !noalias !95
  %15 = bitcast i8* %9 to <4 x i32>*
  store <4 x i32> <i32 2, i32 80, i32 2, i32 73>, <4 x i32>* %15, align 4, !noalias !89
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to <4 x i32>*
  store <4 x i32> <i32 2, i32 51, i32 1, i32 50>, <4 x i32>* %17, align 4, !noalias !89
  %18 = getelementptr inbounds i8, i8* %9, i64 32
  %19 = bitcast i8* %18 to <4 x i32>*
  store <4 x i32> <i32 1, i32 46, i32 1, i32 43>, <4 x i32>* %19, align 4, !noalias !89
  %20 = bitcast %"struct.quic::ParsedQuicVersion"** %10 to i64*
  %21 = ptrtoint i8* %12 to i64
  store i64 %21, i64* %20, align 8, !alias.scope !94, !noalias !95
  call void @_ZN4quic23FilterSupportedVersionsENSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nonnull sret %3, %"class.std::__1::vector"* nonnull %2) #15
  call void @_ZdlPv(i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7)
  %22 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %5, align 8
  %23 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %6, align 8
  %24 = icmp eq %"struct.quic::ParsedQuicVersion"* %22, %23
  br i1 %24, label %42, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  br label %30

30:                                               ; preds = %39, %25
  %31 = phi %"struct.quic::ParsedQuicVersion"* [ %22, %25 ], [ %40, %39 ]
  %32 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, %27
  br i1 %34, label %35, label %39

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %31, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %29
  br i1 %38, label %42, label %39

39:                                               ; preds = %35, %30
  %40 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %31, i64 1
  %41 = icmp eq %"struct.quic::ParsedQuicVersion"* %40, %23
  br i1 %41, label %42, label %30

42:                                               ; preds = %35, %39, %1
  %43 = phi %"struct.quic::ParsedQuicVersion"* [ %22, %1 ], [ %31, %35 ], [ %23, %39 ]
  %44 = icmp ne %"struct.quic::ParsedQuicVersion"* %43, %23
  %45 = icmp eq %"struct.quic::ParsedQuicVersion"* %22, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = ptrtoint %"struct.quic::ParsedQuicVersion"* %22 to i64
  %48 = bitcast %"struct.quic::ParsedQuicVersion"** %6 to i64*
  store i64 %47, i64* %48, align 8
  %49 = bitcast %"struct.quic::ParsedQuicVersion"* %22 to i8*
  call void @_ZdlPv(i8* %49) #16
  br label %50

50:                                               ; preds = %42, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret i1 %44
}

declare i32 @_ZN4quic11MakeQuicTagEcccc(i8 signext, i8 signext, i8 signext, i8 signext) local_unnamed_addr #4

declare %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8*) local_unnamed_addr #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #10

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32, i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #15
  %7 = load i8, i8* %6, align 8, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #15
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #15
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #15
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #15
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #15
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #15
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #15
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #15
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare zeroext i1 @_ZN4absl16numbers_internal17safe_strto32_baseENS_11string_viewEPii(i8*, i64, i32*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.21"* noalias sret, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"*, %"class.absl::strings_internal::Splitter"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"struct.std::__1::array.36", align 8
  %5 = alloca %"class.absl::strings_internal::SplitIterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.21"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #15
  %8 = bitcast %"struct.std::__1::array.36"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 256, i1 false)
  %9 = bitcast %"class.absl::strings_internal::SplitIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 0
  store i64 0, i64* %10, align 8, !alias.scope !96
  %11 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 1
  store i32 0, i32* %11, align 8, !alias.scope !96
  %12 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3
  %13 = bitcast %"class.absl::string_view"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15, !alias.scope !96
  %14 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 4
  store %"class.absl::strings_internal::Splitter"* %2, %"class.absl::strings_internal::Splitter"** %14, align 8, !alias.scope !96
  %15 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5, i32 0
  %16 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1, !noalias !96
  store i8 %17, i8* %15, align 8, !alias.scope !96
  %18 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !96
  %20 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !96
  %22 = icmp eq i8* %19, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %3
  store i32 2, i32* %11, align 8, !alias.scope !96
  store i64 %21, i64* %10, align 8, !alias.scope !96
  br label %59

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5
  %26 = call { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"* %25, i8* nonnull %19, i64 %21, i64 0) #15
  %27 = extractvalue { i8*, i64 } %26, 0
  %28 = extractvalue { i8*, i64 } %26, 1
  %29 = getelementptr inbounds i8, i8* %19, i64 %21
  %30 = icmp eq i8* %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  store i32 1, i32* %11, align 8, !alias.scope !96
  br label %32

32:                                               ; preds = %31, %24
  %33 = load i64, i64* %10, align 8, !alias.scope !96
  %34 = getelementptr inbounds i8, i8* %19, i64 %33
  %35 = ptrtoint i8* %27 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  %38 = icmp ult i64 %21, %33
  br i1 %38, label %39, label %40, !prof !75

39:                                               ; preds = %32
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0)) #17
  unreachable

40:                                               ; preds = %32
  %41 = sub i64 %21, %33
  %42 = icmp ugt i64 %41, %37
  %43 = select i1 %42, i64 %37, i64 %41
  %44 = icmp sgt i64 %43, -1
  br i1 %44, label %46, label %45, !prof !15

45:                                               ; preds = %40
  call void @llvm.trap() #15
  unreachable

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 0
  store i8* %34, i8** %47, align 8, !alias.scope !96
  %48 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 1
  store i64 %43, i64* %48, align 8, !alias.scope !96
  %49 = add i64 %33, %28
  %50 = add i64 %49, %43
  %51 = load i32, i32* %11, align 8
  store i64 %50, i64* %10, align 8, !alias.scope !96
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %59, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.absl::string_view"* %12 to i64*
  %55 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 1
  %56 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5
  %57 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::array.36", %"struct.std::__1::array.36"* %4, i64 0, i32 0, i64 0
  br label %60

59:                                               ; preds = %111, %23, %46
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #15
  ret void

60:                                               ; preds = %106, %53
  %61 = phi i32 [ %51, %53 ], [ %107, %106 ]
  %62 = phi i64 [ %43, %53 ], [ %108, %106 ]
  %63 = phi i64 [ %36, %53 ], [ %109, %106 ]
  %64 = phi i64 [ 0, %53 ], [ %110, %106 ]
  %65 = getelementptr inbounds %"struct.std::__1::array.36", %"struct.std::__1::array.36"* %4, i64 0, i32 0, i64 %64
  %66 = bitcast %struct.raw_view* %65 to i64*
  store i64 %63, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.std::__1::array.36", %"struct.std::__1::array.36"* %4, i64 0, i32 0, i64 %64, i32 1
  store i64 %62, i64* %67, align 8
  %68 = icmp eq i32 %61, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  store i32 2, i32* %11, align 8
  %70 = add nuw nsw i64 %64, 1
  br label %111

71:                                               ; preds = %60
  %72 = load %"class.absl::strings_internal::Splitter"*, %"class.absl::strings_internal::Splitter"** %14, align 8
  %73 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %72, i64 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %72, i64 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %10, align 8
  %78 = call { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"* %56, i8* %74, i64 %76, i64 %77) #15
  %79 = extractvalue { i8*, i64 } %78, 0
  %80 = extractvalue { i8*, i64 } %78, 1
  %81 = getelementptr inbounds i8, i8* %74, i64 %76
  %82 = icmp eq i8* %79, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %71
  store i32 1, i32* %11, align 8
  br label %84

84:                                               ; preds = %83, %71
  %85 = load i64, i64* %10, align 8
  %86 = getelementptr inbounds i8, i8* %74, i64 %85
  %87 = ptrtoint i8* %79 to i64
  %88 = ptrtoint i8* %86 to i64
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %76, %85
  br i1 %90, label %91, label %92, !prof !75

91:                                               ; preds = %84
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0)) #17
  unreachable

92:                                               ; preds = %84
  %93 = sub i64 %76, %85
  %94 = icmp ugt i64 %93, %89
  %95 = select i1 %94, i64 %89, i64 %93
  %96 = icmp sgt i64 %95, -1
  br i1 %96, label %98, label %97, !prof !15

97:                                               ; preds = %92
  call void @llvm.trap() #15
  unreachable

98:                                               ; preds = %92
  store i8* %86, i8** %57, align 8
  store i64 %95, i64* %55, align 8
  %99 = add i64 %85, %80
  %100 = add i64 %99, %95
  store i64 %100, i64* %10, align 8
  %101 = load i32, i32* %11, align 8
  %102 = add nuw nsw i64 %64, 1
  %103 = icmp eq i64 %102, 16
  %104 = icmp eq i32 %101, 2
  %105 = or i1 %103, %104
  br i1 %105, label %111, label %106

106:                                              ; preds = %98, %118
  %107 = phi i32 [ %101, %98 ], [ %116, %118 ]
  %108 = phi i64 [ %95, %98 ], [ %120, %118 ]
  %109 = phi i64 [ %88, %98 ], [ %119, %118 ]
  %110 = phi i64 [ %102, %98 ], [ 0, %118 ]
  br label %60

111:                                              ; preds = %98, %69
  %112 = phi i64 [ %70, %69 ], [ %102, %98 ]
  %113 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  %114 = getelementptr inbounds %"struct.std::__1::array.36", %"struct.std::__1::array.36"* %4, i64 0, i32 0, i64 %112
  %115 = call %"class.absl::string_view"* @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_(%"class.std::__1::vector.21"* %0, %"class.absl::string_view"* %113, %struct.raw_view* nonnull %58, %struct.raw_view* %114)
  %116 = load i32, i32* %11, align 8
  %117 = icmp eq i32 %116, 2
  br i1 %117, label %59, label %118

118:                                              ; preds = %111
  %119 = load i64, i64* %54, align 8
  %120 = load i64, i64* %55, align 8
  br label %106
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.absl::string_view"* @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_(%"class.std::__1::vector.21"*, %"class.absl::string_view"*, %struct.raw_view*, %struct.raw_view*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint %"class.absl::string_view"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %struct.raw_view* %3 to i64
  %8 = ptrtoint %struct.raw_view* %2 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %256

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.absl::string_view"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.absl::string_view"*, %"class.absl::string_view"** %16, align 8
  %18 = ptrtoint %"class.absl::string_view"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.absl::string_view"** %16 to i64*
  br i1 %21, label %136, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = ashr exact i64 %24, 4
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %2, i64 %25
  %29 = icmp eq %struct.raw_view* %28, %3
  br i1 %29, label %47, label %30

30:                                               ; preds = %27, %37
  %31 = phi %"class.absl::string_view"* [ %43, %37 ], [ %17, %27 ]
  %32 = phi %struct.raw_view* [ %42, %37 ], [ %28, %27 ]
  %33 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %32, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp sgt i64 %34, -1
  br i1 %35, label %37, label %36, !prof !15

36:                                               ; preds = %30
  tail call void @llvm.trap() #15
  unreachable

37:                                               ; preds = %30
  %38 = bitcast %struct.raw_view* %32 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.absl::string_view"* %31 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %31, i64 0, i32 1
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %32, i64 1
  %43 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %31, i64 1
  %44 = icmp eq %struct.raw_view* %42, %3
  br i1 %44, label %45, label %30

45:                                               ; preds = %37
  %46 = ptrtoint %"class.absl::string_view"* %43 to i64
  br label %47

47:                                               ; preds = %45, %27
  %48 = phi i64 [ %18, %27 ], [ %46, %45 ]
  store i64 %48, i64* %22, align 8
  %49 = icmp sgt i64 %24, 0
  br i1 %49, label %50, label %256

50:                                               ; preds = %47
  %51 = inttoptr i64 %48 to %"class.absl::string_view"*
  br label %52

52:                                               ; preds = %50, %23
  %53 = phi i64 [ %48, %50 ], [ %18, %23 ]
  %54 = phi %"class.absl::string_view"* [ %51, %50 ], [ %17, %23 ]
  %55 = phi %struct.raw_view* [ %28, %50 ], [ %3, %23 ]
  %56 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 %10
  %57 = ptrtoint %"class.absl::string_view"* %56 to i64
  %58 = sub i64 %53, %57
  %59 = ashr exact i64 %58, 4
  %60 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 %59
  %61 = icmp ult %"class.absl::string_view"* %60, %17
  br i1 %61, label %62, label %91

62:                                               ; preds = %52
  %63 = sub nsw i64 0, %59
  %64 = getelementptr %"class.absl::string_view", %"class.absl::string_view"* %17, i64 %63, i32 0
  %65 = bitcast i8** %64 to i8*
  %66 = xor i64 %5, -1
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %62, %73
  %74 = phi %"class.absl::string_view"* [ %80, %73 ], [ %54, %62 ]
  %75 = phi %"class.absl::string_view"* [ %79, %73 ], [ %60, %62 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %62 ]
  %77 = bitcast %"class.absl::string_view"* %74 to i8*
  %78 = bitcast %"class.absl::string_view"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #15
  %79 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %75, i64 1
  %80 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %74, i64 1
  %81 = add i64 %76, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %73, !llvm.loop !99

83:                                               ; preds = %73, %62
  %84 = phi %"class.absl::string_view"* [ %54, %62 ], [ %80, %73 ]
  %85 = phi %"class.absl::string_view"* [ %60, %62 ], [ %79, %73 ]
  %86 = phi %"class.absl::string_view"* [ undef, %62 ], [ %80, %73 ]
  %87 = icmp ult i8* %67, inttoptr (i64 48 to i8*)
  br i1 %87, label %88, label %99

88:                                               ; preds = %99, %83
  %89 = phi %"class.absl::string_view"* [ %86, %83 ], [ %117, %99 ]
  %90 = ptrtoint %"class.absl::string_view"* %89 to i64
  br label %91

91:                                               ; preds = %88, %52
  %92 = phi i64 [ %90, %88 ], [ %53, %52 ]
  store i64 %92, i64* %22, align 8
  %93 = icmp eq i64 %58, 0
  br i1 %93, label %119, label %94

94:                                               ; preds = %91
  %95 = sub nsw i64 0, %59
  %96 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %54, i64 %95
  %97 = bitcast %"class.absl::string_view"* %96 to i8*
  %98 = bitcast %"class.absl::string_view"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %58, i1 false) #15
  br label %119

99:                                               ; preds = %83, %99
  %100 = phi %"class.absl::string_view"* [ %117, %99 ], [ %84, %83 ]
  %101 = phi %"class.absl::string_view"* [ %116, %99 ], [ %85, %83 ]
  %102 = bitcast %"class.absl::string_view"* %100 to i8*
  %103 = bitcast %"class.absl::string_view"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #15
  %104 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 1
  %105 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 1
  %106 = bitcast %"class.absl::string_view"* %105 to i8*
  %107 = bitcast %"class.absl::string_view"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 16, i1 false) #15
  %108 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 2
  %109 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 2
  %110 = bitcast %"class.absl::string_view"* %109 to i8*
  %111 = bitcast %"class.absl::string_view"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #15
  %112 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 3
  %113 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 3
  %114 = bitcast %"class.absl::string_view"* %113 to i8*
  %115 = bitcast %"class.absl::string_view"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 16, i1 false) #15
  %116 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 4
  %117 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 4
  %118 = icmp ult %"class.absl::string_view"* %116, %17
  br i1 %118, label %99, label %88

119:                                              ; preds = %91, %94
  %120 = icmp eq %struct.raw_view* %55, %2
  br i1 %120, label %256, label %121

121:                                              ; preds = %119, %128
  %122 = phi %struct.raw_view* [ %133, %128 ], [ %2, %119 ]
  %123 = phi %"class.absl::string_view"* [ %134, %128 ], [ %1, %119 ]
  %124 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %122, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp sgt i64 %125, -1
  br i1 %126, label %128, label %127, !prof !15

127:                                              ; preds = %121
  tail call void @llvm.trap() #15
  unreachable

128:                                              ; preds = %121
  %129 = bitcast %struct.raw_view* %122 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.absl::string_view"* %123 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %123, i64 0, i32 1
  store i64 %125, i64* %132, align 8
  %133 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %122, i64 1
  %134 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %123, i64 1
  %135 = icmp eq %struct.raw_view* %133, %55
  br i1 %135, label %256, label %121

136:                                              ; preds = %12
  %137 = bitcast %"class.std::__1::vector.21"* %0 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %18, %138
  %140 = ashr exact i64 %139, 4
  %141 = add nsw i64 %140, %10
  %142 = icmp ugt i64 %141, 1152921504606846975
  br i1 %142, label %143, label %145

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::vector.21"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %144) #17
  unreachable

145:                                              ; preds = %136
  %146 = sub i64 %15, %138
  %147 = ashr exact i64 %146, 4
  %148 = icmp ult i64 %147, 576460752303423487
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = sub i64 %5, %138
  %151 = ashr exact i64 %150, 4
  br label %162

152:                                              ; preds = %145
  %153 = ashr exact i64 %146, 3
  %154 = icmp ult i64 %153, %141
  %155 = select i1 %154, i64 %141, i64 %153
  %156 = sub i64 %5, %138
  %157 = ashr exact i64 %156, 4
  %158 = icmp eq i64 %155, 0
  br i1 %158, label %168, label %159

159:                                              ; preds = %152
  %160 = icmp ugt i64 %155, 1152921504606846975
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  tail call void @abort() #17
  unreachable

162:                                              ; preds = %149, %159
  %163 = phi i64 [ 1152921504606846975, %149 ], [ %155, %159 ]
  %164 = phi i64 [ %151, %149 ], [ %157, %159 ]
  %165 = shl i64 %163, 4
  %166 = tail call i8* @_Znwm(i64 %165) #16
  %167 = bitcast i8* %166 to %"class.absl::string_view"*
  br label %168

168:                                              ; preds = %162, %152
  %169 = phi i64 [ %164, %162 ], [ %157, %152 ]
  %170 = phi i64 [ %163, %162 ], [ 0, %152 ]
  %171 = phi %"class.absl::string_view"* [ %167, %162 ], [ null, %152 ]
  %172 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %171, i64 %169
  %173 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %171, i64 %170
  %174 = ptrtoint %"class.absl::string_view"* %173 to i64
  %175 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %172, i64 %10
  br label %176

176:                                              ; preds = %168, %183
  %177 = phi %"class.absl::string_view"* [ %188, %183 ], [ %172, %168 ]
  %178 = phi %struct.raw_view* [ %189, %183 ], [ %2, %168 ]
  %179 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %178, i64 0, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = icmp sgt i64 %180, -1
  br i1 %181, label %183, label %182, !prof !15

182:                                              ; preds = %176
  tail call void @llvm.trap() #15
  unreachable

183:                                              ; preds = %176
  %184 = bitcast %struct.raw_view* %178 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.absl::string_view"* %177 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %177, i64 0, i32 1
  store i64 %180, i64* %187, align 8
  %188 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %177, i64 1
  %189 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %178, i64 1
  %190 = icmp eq %"class.absl::string_view"* %175, %188
  br i1 %190, label %191, label %176

191:                                              ; preds = %183
  %192 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  %193 = ptrtoint %"class.absl::string_view"* %192 to i64
  %194 = sub i64 %5, %193
  %195 = ashr exact i64 %194, 4
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %172, i64 %196
  %198 = ptrtoint %"class.absl::string_view"* %197 to i64
  %199 = icmp sgt i64 %194, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %191
  %201 = bitcast %"class.absl::string_view"* %197 to i8*
  %202 = bitcast %"class.absl::string_view"* %192 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* align 8 %202, i64 %194, i1 false) #15
  br label %203

203:                                              ; preds = %200, %191
  %204 = load %"class.absl::string_view"*, %"class.absl::string_view"** %16, align 8
  %205 = icmp eq %"class.absl::string_view"* %204, %1
  br i1 %205, label %249, label %206

206:                                              ; preds = %203
  %207 = getelementptr %"class.absl::string_view", %"class.absl::string_view"* %204, i64 -1, i32 0
  %208 = ptrtoint i8** %207 to i64
  %209 = sub i64 %208, %5
  %210 = lshr i64 %209, 4
  %211 = add nuw nsw i64 %210, 1
  %212 = and i64 %211, 3
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %224, label %214

214:                                              ; preds = %206, %214
  %215 = phi %"class.absl::string_view"* [ %221, %214 ], [ %175, %206 ]
  %216 = phi %"class.absl::string_view"* [ %220, %214 ], [ %1, %206 ]
  %217 = phi i64 [ %222, %214 ], [ %212, %206 ]
  %218 = bitcast %"class.absl::string_view"* %215 to i8*
  %219 = bitcast %"class.absl::string_view"* %216 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 16, i1 false) #15
  %220 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %216, i64 1
  %221 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %215, i64 1
  %222 = add i64 %217, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %214, !llvm.loop !100

224:                                              ; preds = %214, %206
  %225 = phi %"class.absl::string_view"* [ undef, %206 ], [ %221, %214 ]
  %226 = phi %"class.absl::string_view"* [ %175, %206 ], [ %221, %214 ]
  %227 = phi %"class.absl::string_view"* [ %1, %206 ], [ %220, %214 ]
  %228 = icmp ult i64 %209, 48
  br i1 %228, label %249, label %229

229:                                              ; preds = %224, %229
  %230 = phi %"class.absl::string_view"* [ %247, %229 ], [ %226, %224 ]
  %231 = phi %"class.absl::string_view"* [ %246, %229 ], [ %227, %224 ]
  %232 = bitcast %"class.absl::string_view"* %230 to i8*
  %233 = bitcast %"class.absl::string_view"* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 16, i1 false) #15
  %234 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 1
  %235 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 1
  %236 = bitcast %"class.absl::string_view"* %235 to i8*
  %237 = bitcast %"class.absl::string_view"* %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 16, i1 false) #15
  %238 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 2
  %239 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 2
  %240 = bitcast %"class.absl::string_view"* %239 to i8*
  %241 = bitcast %"class.absl::string_view"* %238 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %241, i64 16, i1 false) #15
  %242 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 3
  %243 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 3
  %244 = bitcast %"class.absl::string_view"* %243 to i8*
  %245 = bitcast %"class.absl::string_view"* %242 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 %245, i64 16, i1 false) #15
  %246 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 4
  %247 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 4
  %248 = icmp eq %"class.absl::string_view"* %246, %204
  br i1 %248, label %249, label %229

249:                                              ; preds = %224, %229, %203
  %250 = phi %"class.absl::string_view"* [ %175, %203 ], [ %225, %224 ], [ %247, %229 ]
  %251 = ptrtoint %"class.absl::string_view"* %250 to i64
  %252 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  store i64 %198, i64* %137, align 8
  store i64 %251, i64* %22, align 8
  store i64 %174, i64* %14, align 8
  %253 = icmp eq %"class.absl::string_view"* %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %249
  %255 = bitcast %"class.absl::string_view"* %252 to i8*
  tail call void @_ZdlPv(i8* %255) #16
  br label %256

256:                                              ; preds = %128, %254, %249, %47, %119, %4
  %257 = phi %"class.absl::string_view"* [ %1, %4 ], [ %1, %119 ], [ %1, %47 ], [ %172, %249 ], [ %172, %254 ], [ %1, %128 ]
  ret %"class.absl::string_view"* %257
}

declare { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"*, i8*, i64, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4quic25ParsedQuicVersionToStringENS_17ParsedQuicVersionE: argument 0"}
!4 = distinct !{!4, !"_ZN4quic25ParsedQuicVersionToStringENS_17ParsedQuicVersionE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4quic31ParsedQuicVersionVectorToStringERKNSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE: argument 0"}
!7 = distinct !{!7, !"_ZN4quic31ParsedQuicVersionVectorToStringERKNSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4quic30QuicVersionLabelVectorToStringERKNSt3__16vectorIjNS0_9allocatorIjEEEE: argument 0"}
!10 = distinct !{!10, !"_ZN4quic30QuicVersionLabelVectorToStringERKNSt3__16vectorIjNS0_9allocatorIjEEEE"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4quic25HandshakeProtocolToStringENS_17HandshakeProtocolE: argument 0"}
!14 = distinct !{!14, !"_ZN4quic25HandshakeProtocolToStringENS_17HandshakeProtocolE"}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN4quic20AllSupportedVersionsEv: argument 0"}
!18 = distinct !{!18, !"_ZN4quic20AllSupportedVersionsEv"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZN4quic20AllSupportedVersionsEv: argument 0"}
!23 = distinct !{!23, !"_ZN4quic20AllSupportedVersionsEv"}
!24 = distinct !{!24, !25, !"_ZN4quic24CurrentSupportedVersionsEv: argument 0"}
!25 = distinct !{!25, !"_ZN4quic24CurrentSupportedVersionsEv"}
!26 = !{!22}
!27 = !{!24}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN4quic20AllSupportedVersionsEv: argument 0"}
!30 = distinct !{!30, !"_ZN4quic20AllSupportedVersionsEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN4quic20AllSupportedVersionsEv: argument 0"}
!33 = distinct !{!33, !"_ZN4quic20AllSupportedVersionsEv"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZN4quic20AllSupportedVersionsEv: argument 0"}
!36 = distinct !{!36, !"_ZN4quic20AllSupportedVersionsEv"}
!37 = distinct !{!37, !38, !"_ZN4quic24CurrentSupportedVersionsEv: argument 0"}
!38 = distinct !{!38, !"_ZN4quic24CurrentSupportedVersionsEv"}
!39 = !{!35}
!40 = !{!37}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN4quic20AllSupportedVersionsEv: argument 0"}
!43 = distinct !{!43, !"_ZN4quic20AllSupportedVersionsEv"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZN4quic17ParsedQuicVersion11UnsupportedEv: argument 0"}
!46 = distinct !{!46, !"_ZN4quic17ParsedQuicVersion11UnsupportedEv"}
!47 = distinct !{!47, !48, !"_ZN4quic22UnsupportedQuicVersionEv: argument 0"}
!48 = distinct !{!48, !"_ZN4quic22UnsupportedQuicVersionEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN4quic17ParsedQuicVersion11UnsupportedEv: argument 0"}
!51 = distinct !{!51, !"_ZN4quic17ParsedQuicVersion11UnsupportedEv"}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZN4quic17ParsedQuicVersion11UnsupportedEv: argument 0"}
!54 = distinct !{!54, !"_ZN4quic17ParsedQuicVersion11UnsupportedEv"}
!55 = distinct !{!55, !56, !"_ZN4quic22UnsupportedQuicVersionEv: argument 0"}
!56 = distinct !{!56, !"_ZN4quic22UnsupportedQuicVersionEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN4quic20AllSupportedVersionsEv: argument 0"}
!59 = distinct !{!59, !"_ZN4quic20AllSupportedVersionsEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN4quic25ParsedQuicVersionToStringENS_17ParsedQuicVersionE: argument 0"}
!62 = distinct !{!62, !"_ZN4quic25ParsedQuicVersionToStringENS_17ParsedQuicVersionE"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN4quic25ParsedQuicVersionToStringENS_17ParsedQuicVersionE: argument 0"}
!65 = distinct !{!65, !"_ZN4quic25ParsedQuicVersionToStringENS_17ParsedQuicVersionE"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!68 = distinct !{!68, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_: argument 0"}
!71 = distinct !{!71, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv: argument 0"}
!74 = distinct !{!74, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv"}
!75 = !{!"branch_weights", i32 1, i32 2000}
!76 = distinct !{!76, !20}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN4quic20AllSupportedVersionsEv: argument 0"}
!79 = distinct !{!79, !"_ZN4quic20AllSupportedVersionsEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN4quic25ParsedQuicVersionToStringENS_17ParsedQuicVersionE: argument 0"}
!82 = distinct !{!82, !"_ZN4quic25ParsedQuicVersionToStringENS_17ParsedQuicVersionE"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN4quic17ParsedQuicVersion22ReservedForNegotiationEv: argument 0"}
!85 = distinct !{!85, !"_ZN4quic17ParsedQuicVersion22ReservedForNegotiationEv"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN4quic17ParsedQuicVersion4Q043Ev: argument 0"}
!88 = distinct !{!88, !"_ZN4quic17ParsedQuicVersion4Q043Ev"}
!89 = !{!90, !92}
!90 = distinct !{!90, !91, !"_ZN4quic20AllSupportedVersionsEv: argument 0"}
!91 = distinct !{!91, !"_ZN4quic20AllSupportedVersionsEv"}
!92 = distinct !{!92, !93, !"_ZN4quic24CurrentSupportedVersionsEv: argument 0"}
!93 = distinct !{!93, !"_ZN4quic24CurrentSupportedVersionsEv"}
!94 = !{!90}
!95 = !{!92}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE5beginEv: argument 0"}
!98 = distinct !{!98, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE5beginEv"}
!99 = distinct !{!99, !20}
!100 = distinct !{!100, !20}
