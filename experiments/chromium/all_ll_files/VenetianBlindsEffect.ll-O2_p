; ModuleID = '../../third_party/skia/modules/skottie/src/effects/VenetianBlindsEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/VenetianBlindsEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%"class.skottie::internal::MaskShaderEffectBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.49, %struct.SkSize }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.sk_sp.49 = type { %"class.sksg::MaskShaderEffect"* }
%"class.sksg::MaskShaderEffect" = type { %"class.sksg::EffectNode", %class.sk_sp.50 }
%"class.sksg::EffectNode" = type { %"class.sksg::RenderNode.base", %class.sk_sp.32 }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%class.sk_sp.50 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter" = type { %"class.skottie::internal::MaskShaderEffectBase", float, float, float, float }
%"struct.skottie::internal::MaskShaderEffectBase::MaskInfo" = type <{ %class.sk_sp.50, i8, [7 x i8] }>
%struct.SkPoint = type { float, float }
%class.SkMatrix = type { [9 x float], i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN7skottie8internal20MaskShaderEffectBaseD2Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_121VenetianBlindsAdapterE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::MaskShaderEffectBase"*)* @_ZN7skottie8internal20MaskShaderEffectBaseD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_121VenetianBlindsAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::MaskShaderEffectBase"*)* @_ZN7skottie8internal20MaskShaderEffectBase6onSyncEv to i8*), i8* bitcast (void (%"struct.skottie::internal::MaskShaderEffectBase::MaskInfo"*, %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"*)* @_ZNK7skottie8internal12_GLOBAL__N_121VenetianBlindsAdapter10onMakeMaskEv to i8*)] }, align 8
@_ZTVN7skottie8internal20MaskShaderEffectBaseE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder26attachVenetianBlindsEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias nocapture sret, %"class.skottie::internal::EffectBuilder"*, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.32, align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %8 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %7, align 8
  %9 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %11 = bitcast %class.sk_sp.32* %3 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !2
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %10, align 8, !noalias !2
  %13 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %7, align 8, !noalias !2
  %14 = tail call i8* @_Znwm(i64 80) #11, !noalias !5
  %15 = bitcast %class.sk_sp.32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12, !noalias !5
  %16 = bitcast i8* %14 to %"class.skottie::internal::MaskShaderEffectBase"*
  %17 = bitcast %class.sk_sp.32* %5 to i64*
  store i64 %12, i64* %17, align 8, !noalias !5
  call void @_ZN7skottie8internal20MaskShaderEffectBaseC2E5sk_spIN4sksg10RenderNodeEERK6SkSize(%"class.skottie::internal::MaskShaderEffectBase"* nonnull %16, %class.sk_sp.32* nonnull %5, %struct.SkSize* dereferenceable(8) %9) #12, !noalias !5
  %18 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %5, i64 0, i32 0
  %19 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %18, align 8, !noalias !5
  %20 = icmp eq %"class.sksg::RenderNode"* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel, !noalias !8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %"class.sksg::RenderNode"* %19 to %class.SkRefCntBase*
  %27 = bitcast %"class.sksg::RenderNode"* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8, !noalias !8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8, !noalias !8
  call void %30(%class.SkRefCntBase* nonnull %26) #12, !noalias !8
  br label %31

31:                                               ; preds = %25, %21, %4
  %32 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_121VenetianBlindsAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !noalias !5
  %33 = getelementptr inbounds i8, i8* %14, i64 64
  %34 = bitcast i8* %33 to float*
  %35 = getelementptr inbounds i8, i8* %14, i64 68
  %36 = bitcast i8* %35 to float*
  %37 = getelementptr inbounds i8, i8* %14, i64 72
  %38 = bitcast i8* %37 to float*
  %39 = getelementptr inbounds i8, i8* %14, i64 76
  %40 = bitcast i8* %39 to float*
  %41 = bitcast i8* %14 to %"class.skottie::internal::AnimatablePropertyContainer"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #12, !noalias !5
  %42 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #12, !noalias !5
  %43 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %42, i64 0, i32 0, i64 0
  %44 = load i8, i8* %43, align 8, !noalias !5
  %45 = and i8 %44, 7
  %46 = icmp eq i8 %45, 7
  %47 = bitcast %"class.skjson::Value"* %42 to %"class.skjson::ObjectValue"*
  %48 = select i1 %46, %"class.skjson::ObjectValue"* %47, %"class.skjson::ObjectValue"* null
  %49 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %41, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %48, float* %34) #12, !noalias !5
  %50 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 1) #12, !noalias !5
  %51 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %50, i64 0, i32 0, i64 0
  %52 = load i8, i8* %51, align 8, !noalias !5
  %53 = and i8 %52, 7
  %54 = icmp eq i8 %53, 7
  %55 = bitcast %"class.skjson::Value"* %50 to %"class.skjson::ObjectValue"*
  %56 = select i1 %54, %"class.skjson::ObjectValue"* %55, %"class.skjson::ObjectValue"* null
  %57 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %41, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %56, float* %36) #12, !noalias !5
  %58 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 2) #12, !noalias !5
  %59 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %58, i64 0, i32 0, i64 0
  %60 = load i8, i8* %59, align 8, !noalias !5
  %61 = and i8 %60, 7
  %62 = icmp eq i8 %61, 7
  %63 = bitcast %"class.skjson::Value"* %58 to %"class.skjson::ObjectValue"*
  %64 = select i1 %62, %"class.skjson::ObjectValue"* %63, %"class.skjson::ObjectValue"* null
  %65 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %41, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %64, float* %38) #12, !noalias !5
  %66 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 3) #12, !noalias !5
  %67 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %66, i64 0, i32 0, i64 0
  %68 = load i8, i8* %67, align 8, !noalias !5
  %69 = and i8 %68, 7
  %70 = icmp eq i8 %69, 7
  %71 = bitcast %"class.skjson::Value"* %66 to %"class.skjson::ObjectValue"*
  %72 = select i1 %70, %"class.skjson::ObjectValue"* %71, %"class.skjson::ObjectValue"* null
  %73 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %41, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %72, float* %40) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12, !noalias !5
  %74 = ptrtoint i8* %14 to i64
  %75 = getelementptr inbounds i8, i8* %14, i64 48
  %76 = bitcast i8* %75 to %"class.sksg::MaskShaderEffect"**
  %77 = load %"class.sksg::MaskShaderEffect"*, %"class.sksg::MaskShaderEffect"** %76, align 8, !noalias !2
  %78 = icmp eq %"class.sksg::MaskShaderEffect"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %31
  %80 = getelementptr inbounds %"class.sksg::MaskShaderEffect", %"class.sksg::MaskShaderEffect"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 1 monotonic
  br label %82

82:                                               ; preds = %31, %79
  %83 = ptrtoint %"class.sksg::MaskShaderEffect"* %77 to i64
  %84 = getelementptr inbounds i8, i8* %14, i64 16
  %85 = bitcast i8* %84 to %class.sk_sp.6**
  %86 = load %class.sk_sp.6*, %class.sk_sp.6** %85, align 8, !noalias !2
  %87 = getelementptr inbounds i8, i8* %14, i64 24
  %88 = bitcast i8* %87 to %class.sk_sp.6**
  %89 = load %class.sk_sp.6*, %class.sk_sp.6** %88, align 8, !noalias !2
  %90 = icmp eq %class.sk_sp.6* %86, %89
  br i1 %90, label %123, label %91

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %8, i64 0, i32 11
  %93 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, align 8, !noalias !2
  %94 = bitcast %class.sk_sp.6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #12, !noalias !2
  %95 = bitcast %class.sk_sp.6* %6 to i64*
  store i64 %74, i64* %95, align 8, !noalias !2
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %93, i64 0, i32 0, i32 1
  %97 = load %class.sk_sp.6*, %class.sk_sp.6** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %93, i64 0, i32 0, i32 2, i32 0, i32 0
  %99 = load %class.sk_sp.6*, %class.sk_sp.6** %98, align 8
  %100 = icmp ult %class.sk_sp.6* %97, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %91
  %102 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %102, align 8, !noalias !2
  %103 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %74, i64* %103, align 8
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %97, i64 1
  %105 = ptrtoint %class.sk_sp.6* %104 to i64
  %106 = bitcast %class.sk_sp.6** %96 to i64*
  store i64 %105, i64* %106, align 8
  br label %108

107:                                              ; preds = %91
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %93, %class.sk_sp.6* nonnull dereferenceable(8) %6) #12
  br label %108

108:                                              ; preds = %107, %101
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %110 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %109, align 8, !noalias !2
  %111 = icmp eq %"class.skottie::internal::Animator"* %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %110, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 -1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %122

116:                                              ; preds = %112
  %117 = bitcast %"class.skottie::internal::Animator"* %110 to %class.SkRefCntBase*
  %118 = bitcast %"class.skottie::internal::Animator"* %110 to void (%class.SkRefCntBase*)***
  %119 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %118, align 8
  %120 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, i64 2
  %121 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, align 8
  call void %121(%class.SkRefCntBase* nonnull %117) #12
  br label %122

122:                                              ; preds = %116, %112, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12, !noalias !2
  br label %140

123:                                              ; preds = %82
  %124 = bitcast i8* %14 to %"class.skottie::internal::Animator"*
  %125 = bitcast i8* %14 to i1 (%"class.skottie::internal::Animator"*, float)***
  %126 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %125, align 8, !noalias !2
  %127 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %126, i64 3
  %128 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %127, align 8
  %129 = call zeroext i1 %128(%"class.skottie::internal::Animator"* nonnull %124, float 0.000000e+00) #12
  %130 = getelementptr inbounds i8, i8* %14, i64 8
  %131 = bitcast i8* %130 to i32*
  %132 = atomicrmw add i32* %131, i32 -1 acq_rel, !noalias !2
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %140

134:                                              ; preds = %123
  %135 = bitcast i8* %14 to %class.SkRefCntBase*
  %136 = bitcast i8* %14 to void (%class.SkRefCntBase*)***
  %137 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %136, align 8, !noalias !2
  %138 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, i64 2
  %139 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, align 8
  call void %139(%class.SkRefCntBase* nonnull %135) #12
  br label %140

140:                                              ; preds = %134, %123, %122
  %141 = bitcast %class.sk_sp.32* %0 to i64*
  store i64 %83, i64* %141, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN7skottie8internal20MaskShaderEffectBaseC2E5sk_spIN4sksg10RenderNodeEERK6SkSize(%"class.skottie::internal::MaskShaderEffectBase"*, %class.sk_sp.32*, %struct.SkSize* dereferenceable(8)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7skottie8internal20MaskShaderEffectBaseD2Ev(%"class.skottie::internal::MaskShaderEffectBase"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::MaskShaderEffectBase", %"class.skottie::internal::MaskShaderEffectBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal20MaskShaderEffectBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::MaskShaderEffectBase", %"class.skottie::internal::MaskShaderEffectBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::MaskShaderEffect"*, %"class.sksg::MaskShaderEffect"** %3, align 8
  %5 = icmp eq %"class.sksg::MaskShaderEffect"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::MaskShaderEffect", %"class.sksg::MaskShaderEffect"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::MaskShaderEffect"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::MaskShaderEffect"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::MaskShaderEffectBase", %"class.skottie::internal::MaskShaderEffectBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::MaskShaderEffectBase", %"class.skottie::internal::MaskShaderEffectBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #12
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_121VenetianBlindsAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal20MaskShaderEffectBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.sksg::MaskShaderEffect"*, %"class.sksg::MaskShaderEffect"** %3, align 8
  %5 = icmp eq %"class.sksg::MaskShaderEffect"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::MaskShaderEffect", %"class.sksg::MaskShaderEffect"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::MaskShaderEffect"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::MaskShaderEffect"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #12
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

declare void @_ZN7skottie8internal20MaskShaderEffectBase6onSyncEv(%"class.skottie::internal::MaskShaderEffectBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK7skottie8internal12_GLOBAL__N_121VenetianBlindsAdapter10onMakeMaskEv(%"struct.skottie::internal::MaskShaderEffectBase::MaskInfo"* noalias sret, %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* nocapture readonly) unnamed_addr #5 align 2 {
  %3 = alloca [4 x i32], align 16
  %4 = alloca [4 x float], align 16
  %5 = alloca [2 x %struct.SkPoint], align 16
  %6 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %1, i64 0, i32 1
  %7 = load float, float* %6, align 8
  %8 = fcmp ult float %7, 1.000000e+02
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo", %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo"* %0, i64 0, i32 0
  tail call void @_ZN9SkShaders5ColorEj(%class.sk_sp.50* sret %10, i32 0) #12
  %11 = getelementptr inbounds %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo", %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo"* %0, i64 0, i32 1
  store i8 0, i8* %11, align 8
  br label %118

12:                                               ; preds = %2
  %13 = fcmp ugt float %7, 0.000000e+00
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo", %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo"* %0, i64 0, i32 0, i32 0
  store %class.SkShader* null, %class.SkShader** %15, align 8
  %16 = getelementptr inbounds %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo", %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo"* %0, i64 0, i32 1
  store i8 1, i8* %16, align 8
  br label %118

17:                                               ; preds = %12
  %18 = fmul float %7, 0x3F847AE140000000
  %19 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %1, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, 1.000000e+00
  %22 = select i1 %21, float %20, float 1.000000e+00
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %1, i64 0, i32 2
  %24 = load float, float* %23, align 4
  %25 = fmul float %24, 0xBF91DF46A0000000
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %1, i64 0, i32 4
  %27 = load float, float* %26, align 4
  %28 = fmul float %27, 3.000000e+00
  %29 = fcmp olt float %28, 5.000000e-01
  %30 = select i1 %29, float 5.000000e-01, float %28
  %31 = fdiv float %30, %22
  %32 = fcmp olt float %18, %31
  %33 = select i1 %32, float %18, float %31
  %34 = fmul float %33, 5.000000e-01
  %35 = fsub float 1.000000e+00, %18
  %36 = fcmp olt float %35, %31
  %37 = select i1 %36, float %35, float %31
  %38 = fmul float %37, 5.000000e-01
  %39 = fsub float 0.000000e+00, %18
  %40 = fdiv float %39, %31
  %41 = fadd float %40, 1.000000e+00
  %42 = fmul float %41, 5.000000e-01
  %43 = fcmp ogt float %42, 0.000000e+00
  %44 = select i1 %43, float %42, float 0.000000e+00
  %45 = fdiv float %35, %31
  %46 = fadd float %45, 1.000000e+00
  %47 = fmul float %46, 5.000000e-01
  %48 = fcmp olt float %47, 1.000000e+00
  %49 = select i1 %48, float %47, float 1.000000e+00
  %50 = fmul float %44, 2.550000e+02
  %51 = fadd float %50, 5.000000e-01
  %52 = tail call float @llvm.floor.f32(float %51)
  %53 = fcmp olt float %52, 0x41DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0x41DFFFFFE0000000
  %55 = fcmp ogt float %54, 0xC1DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0xC1DFFFFFE0000000
  %57 = fptosi float %56 to i32
  %58 = shl i32 %57, 24
  %59 = or i32 %58, 16777215
  %60 = fmul float %49, 2.550000e+02
  %61 = fadd float %60, 5.000000e-01
  %62 = tail call float @llvm.floor.f32(float %61)
  %63 = fcmp olt float %62, 0x41DFFFFFE0000000
  %64 = select i1 %63, float %62, float 0x41DFFFFFE0000000
  %65 = fcmp ogt float %64, 0xC1DFFFFFE0000000
  %66 = select i1 %65, float %64, float 0xC1DFFFFFE0000000
  %67 = fptosi float %66 to i32
  %68 = shl i32 %67, 24
  %69 = or i32 %68, 16777215
  %70 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #12
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %72 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %73 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %74 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  store i32 %59, i32* %71, align 16
  store i32 %69, i32* %72, align 4
  store i32 %69, i32* %73, align 8
  store i32 %59, i32* %74, align 4
  %75 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #12
  %76 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %77 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %78 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %79 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %80 = fsub float %18, %34
  %81 = fsub float %80, %34
  store float %81, float* %76, align 16
  %82 = fadd float %18, %38
  %83 = fsub float %82, %34
  store float %83, float* %77, align 4
  %84 = fsub float 1.000000e+00, %38
  %85 = fsub float %84, %34
  store float %85, float* %78, align 8
  store float 1.000000e+00, float* %79, align 4
  %86 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %1, i64 0, i32 0, i32 2, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, 5.000000e-01
  %89 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter", %"class.skottie::internal::(anonymous namespace)::VenetianBlindsAdapter"* %1, i64 0, i32 0, i32 2, i32 1
  %90 = load float, float* %89, align 4
  %91 = fmul float %90, 5.000000e-01
  %92 = tail call float @cosf(float %25) #12
  %93 = fmul float %22, %92
  %94 = tail call float @sinf(float %25) #12
  %95 = fmul float %22, %94
  %96 = fsub float -0.000000e+00, %95
  %97 = bitcast [2 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #12
  %98 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 0
  %99 = fadd float %34, 0.000000e+00
  %100 = fmul float %99, %93
  %101 = fmul float %99, %96
  %102 = fadd float %88, %100
  %103 = insertelement <2 x float> undef, float %102, i32 0
  %104 = fadd float %91, %101
  %105 = insertelement <2 x float> %103, float %104, i32 1
  %106 = bitcast [2 x %struct.SkPoint]* %5 to <2 x float>*
  store <2 x float> %105, <2 x float>* %106, align 16
  %107 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 1
  %108 = fadd float %34, 1.000000e+00
  %109 = fmul float %108, %93
  %110 = fmul float %108, %96
  %111 = fadd float %88, %109
  %112 = insertelement <2 x float> undef, float %111, i32 0
  %113 = fadd float %91, %110
  %114 = insertelement <2 x float> %112, float %113, i32 1
  %115 = bitcast %struct.SkPoint* %107 to <2 x float>*
  store <2 x float> %114, <2 x float>* %115, align 8
  %116 = getelementptr inbounds %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo", %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo"* %0, i64 0, i32 0
  call void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.50* sret %116, %struct.SkPoint* nonnull %98, i32* nonnull %71, float* nonnull %76, i32 4, i32 1, i32 0, %class.SkMatrix* null) #12
  %117 = getelementptr inbounds %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo", %"struct.skottie::internal::MaskShaderEffectBase::MaskInfo"* %0, i64 0, i32 1
  store i8 1, i8* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #12
  br label %118

118:                                              ; preds = %17, %14, %9
  ret void
}

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN9SkShaders5ColorEj(%class.sk_sp.50* sret, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #8

declare void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.50* sret, %struct.SkPoint*, i32*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !9

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #12
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #11
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_121VenetianBlindsAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERK6SkSizeRKPKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSN_: argument 0"}
!4 = distinct !{!4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_121VenetianBlindsAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERK6SkSizeRKPKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSN_"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN7skottie8internal12_GLOBAL__N_121VenetianBlindsAdapter4MakeERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERK6SkSizePKNS0_16AnimationBuilderE: argument 0"}
!7 = distinct !{!7, !"_ZN7skottie8internal12_GLOBAL__N_121VenetianBlindsAdapter4MakeERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERK6SkSizePKNS0_16AnimationBuilderE"}
!8 = !{!6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
