; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkExtensions.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkExtensions.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrVkExtensions = type { %class.SkTArray }
%class.SkTArray = type { %"struct.GrVkExtensions::Info"*, i64 }
%"struct.GrVkExtensions::Info" = type <{ %class.SkString, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)* }
%struct.VkDevice_T = type opaque
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%struct.VkInstance_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkExtensionProperties = type { [256 x i8], i32 }

$_ZN8SkTArrayIN14GrVkExtensions4InfoELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_Z12SkTIntroSortIN14GrVkExtensions4InfoEFbRKS1_S3_EEviPT_iRKT0_ = comdat any

$_Z20SkTHeapSort_SiftDownIN14GrVkExtensions4InfoEFbRKS1_S3_EEvPT_mmRKT0_ = comdat any

$_Z18SkTHeapSort_SiftUpIN14GrVkExtensions4InfoEFbRKS1_S3_EEvPT_mmRKT0_ = comdat any

@.str = private unnamed_addr constant [39 x i8] c"vkEnumerateInstanceExtensionProperties\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"vkEnumerateDeviceExtensionProperties\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkExtensions4initENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_P18VkPhysicalDevice_TjPKS5_jSF_(%class.GrVkExtensions*, %"class.std::__1::function"* nocapture readonly, %struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, i32, i8** nocapture readonly, i32, i8** nocapture readonly) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.SkString, align 8
  %10 = alloca %class.SkString, align 8
  %11 = alloca %"struct.GrVkExtensions::Info", align 8
  %12 = alloca %"struct.GrVkExtensions::Info", align 8
  %13 = alloca %"class.std::__1::function", align 8
  %14 = icmp eq i32 %4, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0
  %17 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 1
  %18 = bitcast %class.SkString* %10 to i8*
  %19 = getelementptr inbounds %class.SkString, %class.SkString* %10, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 0
  %21 = bitcast %"struct.GrVkExtensions::Info"* %11 to i8*
  %22 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %11, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %11, i64 0, i32 1
  %24 = zext i32 %4 to i64
  br label %37

25:                                               ; preds = %124, %8
  %26 = icmp eq i32 %6, 0
  br i1 %26, label %127, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0
  %29 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 1
  %30 = bitcast %class.SkString* %9 to i8*
  %31 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 0
  %33 = bitcast %"struct.GrVkExtensions::Info"* %12 to i8*
  %34 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %12, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %12, i64 0, i32 1
  %36 = zext i32 %6 to i64
  br label %155

37:                                               ; preds = %124, %15
  %38 = phi i64 [ 0, %15 ], [ %125, %124 ]
  %39 = getelementptr inbounds i8*, i8** %5, i64 %38
  %40 = load i8*, i8** %39, align 8
  %41 = load i64, i64* %17, align 8
  %42 = and i64 %41, 4294967294
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %91, label %44

44:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %19, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %10, i8* %40) #9
  %45 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %20, align 8
  %46 = load i64, i64* %17, align 8
  %47 = lshr i64 %46, 1
  %48 = trunc i64 %47 to i32
  %49 = and i32 %48, 2147483647
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %88, label %51

51:                                               ; preds = %44
  %52 = add nsw i32 %49, -1
  %53 = icmp sgt i32 %52, 0
  %54 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %19, align 8
  br i1 %53, label %55, label %73

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %54, i64 0, i32 2
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i32 [ 0, %55 ], [ %71, %57 ]
  %59 = phi i32 [ %52, %55 ], [ %70, %57 ]
  %60 = sub nsw i32 %59, %58
  %61 = ashr i32 %60, 1
  %62 = add nsw i32 %61, %58
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %45, i64 %63, i32 0, i32 0, i32 0
  %65 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %64, align 8
  %66 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %65, i64 0, i32 2
  %67 = call i32 @strcmp(i8* %66, i8* %56) #10
  %68 = icmp slt i32 %67, 0
  %69 = add nsw i32 %62, 1
  %70 = select i1 %68, i32 %59, i32 %62
  %71 = select i1 %68, i32 %69, i32 %58
  %72 = icmp sgt i32 %70, %71
  br i1 %72, label %57, label %73

73:                                               ; preds = %57, %51
  %74 = phi i32 [ 0, %51 ], [ %70, %57 ]
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %45, i64 %75, i32 0, i32 0, i32 0
  %77 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %76, align 8
  %78 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %77, i64 0, i32 2
  %79 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %54, i64 0, i32 2
  %80 = call i32 @strcmp(i8* %78, i8* %79) #10
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %73
  %83 = sub i32 -2, %74
  br label %88

84:                                               ; preds = %73
  %85 = call i32 @strcmp(i8* %79, i8* %78) #10
  %86 = ashr i32 %85, 31
  %87 = xor i32 %86, %74
  br label %88

88:                                               ; preds = %84, %82, %44
  %89 = phi i32 [ %87, %84 ], [ -1, %44 ], [ %83, %82 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %90 = icmp slt i32 %89, 0
  br i1 %90, label %91, label %124

91:                                               ; preds = %37, %88
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %22, i8* %40) #9
  store i32 0, i32* %23, align 8
  call void @_ZN8SkTArrayIN14GrVkExtensions4InfoELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %16, i32 1, i32 1) #9
  %92 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %20, align 8
  %93 = load i64, i64* %17, align 8
  %94 = lshr i64 %93, 1
  %95 = and i64 %94, 2147483647
  %96 = add i64 %93, 2
  %97 = and i64 %96, 4294967294
  %98 = and i64 %93, -4294967295
  %99 = or i64 %97, %98
  store i64 %99, i64* %17, align 8
  %100 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %92, i64 %95, i32 0
  call void @_ZN8SkStringC1Ev(%class.SkString* %100) #9
  %101 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %100, %class.SkString* nonnull dereferenceable(8) %22) #9
  %102 = load i32, i32* %23, align 8
  %103 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %92, i64 %95, i32 1
  store i32 %102, i32* %103, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  %104 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %20, align 8
  %105 = icmp eq %"struct.GrVkExtensions::Info"* %104, null
  br i1 %105, label %111, label %106

106:                                              ; preds = %91
  %107 = load i64, i64* %17, align 8
  %108 = lshr i64 %107, 1
  %109 = and i64 %108, 2147483647
  %110 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %104, i64 %109
  br label %111

111:                                              ; preds = %91, %106
  %112 = phi %"struct.GrVkExtensions::Info"* [ %110, %106 ], [ null, %91 ]
  %113 = ptrtoint %"struct.GrVkExtensions::Info"* %112 to i64
  %114 = ptrtoint %"struct.GrVkExtensions::Info"* %104 to i64
  %115 = sub i64 %113, %114
  %116 = lshr exact i64 %115, 4
  %117 = trunc i64 %116 to i32
  %118 = icmp slt i32 %117, 2
  br i1 %118, label %124, label %119

119:                                              ; preds = %111
  %120 = add nsw i32 %117, -2
  %121 = call i32 @llvm.ctlz.i32(i32 %120, i1 false) #9, !range !2
  %122 = shl nuw nsw i32 %121, 1
  %123 = sub nsw i32 64, %122
  call void @_Z12SkTIntroSortIN14GrVkExtensions4InfoEFbRKS1_S3_EEviPT_iRKT0_(i32 %123, %"struct.GrVkExtensions::Info"* %104, i32 %117, i1 (%"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"*)* nonnull @_ZN12_GLOBAL__N_117extension_compareERKN14GrVkExtensions4InfoES3_) #9
  br label %124

124:                                              ; preds = %119, %111, %88
  %125 = add nuw nsw i64 %38, 1
  %126 = icmp eq i64 %125, %24
  br i1 %126, label %25, label %37

127:                                              ; preds = %242, %25
  %128 = bitcast %"class.std::__1::function"* %13 to i8*
  %129 = bitcast %"class.std::__1::function"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %128, i8* align 8 %129, i64 16, i1 false) #9
  %130 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 1
  %131 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %132 = bitcast %"struct.std::__1::__function::__policy_invoker"* %131 to i64*
  %133 = bitcast %"struct.std::__1::__function::__policy_invoker"* %130 to i64*
  %134 = load i64, i64* %132, align 8
  store i64 %134, i64* %133, align 8
  %135 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 2
  %136 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %137 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %136, align 8
  store %"struct.std::__1::__function::__policy"* %137, %"struct.std::__1::__function::__policy"** %135, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %137, i64 0, i32 0
  %139 = load i8* (i8*)*, i8* (i8*)** %138, align 8
  %140 = icmp eq i8* (i8*)* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %127
  %142 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = call i8* %139(i8* %143) #9
  %145 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 0, i32 0
  store i8* %144, i8** %145, align 8
  br label %146

146:                                              ; preds = %127, %141
  call void @_ZN14GrVkExtensions15getSpecVersionsENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_P18VkPhysicalDevice_T(%class.GrVkExtensions* %0, %"class.std::__1::function"* nonnull %13, %struct.VkInstance_T* %2, %struct.VkPhysicalDevice_T* %3)
  %147 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %135, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %147, i64 0, i32 1
  %149 = load void (i8*)*, void (i8*)** %148, align 8
  %150 = icmp eq void (i8*)* %149, null
  br i1 %150, label %154, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void %149(i8* %153) #9
  br label %154

154:                                              ; preds = %146, %151
  ret void

155:                                              ; preds = %242, %27
  %156 = phi i64 [ 0, %27 ], [ %243, %242 ]
  %157 = getelementptr inbounds i8*, i8** %7, i64 %156
  %158 = load i8*, i8** %157, align 8
  %159 = load i64, i64* %29, align 8
  %160 = and i64 %159, 4294967294
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %209, label %162

162:                                              ; preds = %155
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %31, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %9, i8* %158) #9
  %163 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %32, align 8
  %164 = load i64, i64* %29, align 8
  %165 = lshr i64 %164, 1
  %166 = trunc i64 %165 to i32
  %167 = and i32 %166, 2147483647
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %206, label %169

169:                                              ; preds = %162
  %170 = add nsw i32 %167, -1
  %171 = icmp sgt i32 %170, 0
  %172 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %31, align 8
  br i1 %171, label %173, label %191

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %172, i64 0, i32 2
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i32 [ 0, %173 ], [ %189, %175 ]
  %177 = phi i32 [ %170, %173 ], [ %188, %175 ]
  %178 = sub nsw i32 %177, %176
  %179 = ashr i32 %178, 1
  %180 = add nsw i32 %179, %176
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %163, i64 %181, i32 0, i32 0, i32 0
  %183 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %182, align 8
  %184 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %183, i64 0, i32 2
  %185 = call i32 @strcmp(i8* %184, i8* %174) #10
  %186 = icmp slt i32 %185, 0
  %187 = add nsw i32 %180, 1
  %188 = select i1 %186, i32 %177, i32 %180
  %189 = select i1 %186, i32 %187, i32 %176
  %190 = icmp sgt i32 %188, %189
  br i1 %190, label %175, label %191

191:                                              ; preds = %175, %169
  %192 = phi i32 [ 0, %169 ], [ %188, %175 ]
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %163, i64 %193, i32 0, i32 0, i32 0
  %195 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %194, align 8
  %196 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %195, i64 0, i32 2
  %197 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %172, i64 0, i32 2
  %198 = call i32 @strcmp(i8* %196, i8* %197) #10
  %199 = icmp slt i32 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %191
  %201 = sub i32 -2, %192
  br label %206

202:                                              ; preds = %191
  %203 = call i32 @strcmp(i8* %197, i8* %196) #10
  %204 = ashr i32 %203, 31
  %205 = xor i32 %204, %192
  br label %206

206:                                              ; preds = %202, %200, %162
  %207 = phi i32 [ %205, %202 ], [ -1, %162 ], [ %201, %200 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  %208 = icmp slt i32 %207, 0
  br i1 %208, label %209, label %242

209:                                              ; preds = %155, %206
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #9
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %34, i8* %158) #9
  store i32 0, i32* %35, align 8
  call void @_ZN8SkTArrayIN14GrVkExtensions4InfoELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %28, i32 1, i32 1) #9
  %210 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %32, align 8
  %211 = load i64, i64* %29, align 8
  %212 = lshr i64 %211, 1
  %213 = and i64 %212, 2147483647
  %214 = add i64 %211, 2
  %215 = and i64 %214, 4294967294
  %216 = and i64 %211, -4294967295
  %217 = or i64 %215, %216
  store i64 %217, i64* %29, align 8
  %218 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %210, i64 %213, i32 0
  call void @_ZN8SkStringC1Ev(%class.SkString* %218) #9
  %219 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %218, %class.SkString* nonnull dereferenceable(8) %34) #9
  %220 = load i32, i32* %35, align 8
  %221 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %210, i64 %213, i32 1
  store i32 %220, i32* %221, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #9
  %222 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %32, align 8
  %223 = icmp eq %"struct.GrVkExtensions::Info"* %222, null
  br i1 %223, label %229, label %224

224:                                              ; preds = %209
  %225 = load i64, i64* %29, align 8
  %226 = lshr i64 %225, 1
  %227 = and i64 %226, 2147483647
  %228 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %222, i64 %227
  br label %229

229:                                              ; preds = %209, %224
  %230 = phi %"struct.GrVkExtensions::Info"* [ %228, %224 ], [ null, %209 ]
  %231 = ptrtoint %"struct.GrVkExtensions::Info"* %230 to i64
  %232 = ptrtoint %"struct.GrVkExtensions::Info"* %222 to i64
  %233 = sub i64 %231, %232
  %234 = lshr exact i64 %233, 4
  %235 = trunc i64 %234 to i32
  %236 = icmp slt i32 %235, 2
  br i1 %236, label %242, label %237

237:                                              ; preds = %229
  %238 = add nsw i32 %235, -2
  %239 = call i32 @llvm.ctlz.i32(i32 %238, i1 false) #9, !range !2
  %240 = shl nuw nsw i32 %239, 1
  %241 = sub nsw i32 64, %240
  call void @_Z12SkTIntroSortIN14GrVkExtensions4InfoEFbRKS1_S3_EEviPT_iRKT0_(i32 %241, %"struct.GrVkExtensions::Info"* %222, i32 %235, i1 (%"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"*)* nonnull @_ZN12_GLOBAL__N_117extension_compareERKN14GrVkExtensions4InfoES3_) #9
  br label %242

242:                                              ; preds = %237, %229, %206
  %243 = add nuw nsw i64 %156, 1
  %244 = icmp eq i64 %243, %36
  br i1 %244, label %127, label %155
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_117extension_compareERKN14GrVkExtensions4InfoES3_(%"struct.GrVkExtensions::Info"* nocapture readonly dereferenceable(16), %"struct.GrVkExtensions::Info"* nocapture readonly dereferenceable(16)) #2 {
  %3 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %4, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %7, i64 0, i32 2
  %9 = tail call i32 @strcmp(i8* %5, i8* %8) #10
  %10 = icmp slt i32 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkExtensions15getSpecVersionsENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_P18VkPhysicalDevice_T(%class.GrVkExtensions* nocapture readonly, %"class.std::__1::function"*, %struct.VkInstance_T*, %struct.VkPhysicalDevice_T*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca i32, align 4
  %8 = icmp eq %struct.VkInstance_T* %2, null
  br i1 %8, label %190, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %11 = load void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)*, void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  %13 = tail call void ()* %11(%"union.std::__1::__function::__policy_storage"* %12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), %struct.VkInstance_T* null, %struct.VkDevice_T* null) #9
  %14 = bitcast void ()* %13 to i32 (i8*, i32*, %struct.VkExtensionProperties*)*
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #9
  store i32 0, i32* %7, align 4
  %16 = call i32 %14(i8* null, i32* nonnull %7, %struct.VkExtensionProperties* null) #9
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %189

18:                                               ; preds = %9
  %19 = load i32, i32* %7, align 4
  %20 = zext i32 %19 to i64
  %21 = mul nuw nsw i64 %20, 260
  %22 = call i8* @_Znam(i64 %21) #11
  %23 = bitcast i8* %22 to %struct.VkExtensionProperties*
  %24 = call i32 %14(i8* null, i32* nonnull %7, %struct.VkExtensionProperties* nonnull %23) #9
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %18
  %27 = load i32, i32* %7, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %99, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 1
  %31 = bitcast %class.SkString* %6 to i8*
  %32 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 0
  br label %35

34:                                               ; preds = %18
  call void @_ZdaPv(i8* nonnull %22) #11
  br label %189

35:                                               ; preds = %29, %94
  %36 = phi i64 [ 0, %29 ], [ %95, %94 ]
  %37 = load i64, i64* %30, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %94, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %23, i64 %36, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %32, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* %41) #9
  %42 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %33, align 8
  %43 = load i64, i64* %30, align 8
  %44 = lshr i64 %43, 1
  %45 = trunc i64 %44 to i32
  %46 = and i32 %45, 2147483647
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %85, label %48

48:                                               ; preds = %40
  %49 = add nsw i32 %46, -1
  %50 = icmp sgt i32 %49, 0
  %51 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %32, align 8
  br i1 %50, label %52, label %70

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %51, i64 0, i32 2
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i32 [ 0, %52 ], [ %68, %54 ]
  %56 = phi i32 [ %49, %52 ], [ %67, %54 ]
  %57 = sub nsw i32 %56, %55
  %58 = ashr i32 %57, 1
  %59 = add nsw i32 %58, %55
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %42, i64 %60, i32 0, i32 0, i32 0
  %62 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %61, align 8
  %63 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %62, i64 0, i32 2
  %64 = call i32 @strcmp(i8* %63, i8* %53) #10
  %65 = icmp slt i32 %64, 0
  %66 = add nsw i32 %59, 1
  %67 = select i1 %65, i32 %56, i32 %59
  %68 = select i1 %65, i32 %66, i32 %55
  %69 = icmp sgt i32 %67, %68
  br i1 %69, label %54, label %70

70:                                               ; preds = %54, %48
  %71 = phi i32 [ 0, %48 ], [ %67, %54 ]
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %42, i64 %72, i32 0, i32 0, i32 0
  %74 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %74, i64 0, i32 2
  %76 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %51, i64 0, i32 2
  %77 = call i32 @strcmp(i8* %75, i8* %76) #10
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %70
  %80 = sub i32 -2, %71
  br label %85

81:                                               ; preds = %70
  %82 = call i32 @strcmp(i8* %76, i8* %75) #10
  %83 = ashr i32 %82, 31
  %84 = xor i32 %83, %71
  br label %85

85:                                               ; preds = %81, %79, %40
  %86 = phi i32 [ %84, %81 ], [ -1, %40 ], [ %80, %79 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  %87 = icmp sgt i32 %86, -1
  br i1 %87, label %88, label %94

88:                                               ; preds = %85
  %89 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %23, i64 %36, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %33, align 8
  %92 = sext i32 %86 to i64
  %93 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %91, i64 %92, i32 1
  store i32 %90, i32* %93, align 8
  br label %94

94:                                               ; preds = %35, %88, %85
  %95 = add nuw nsw i64 %36, 1
  %96 = load i32, i32* %7, align 4
  %97 = zext i32 %96 to i64
  %98 = icmp ult i64 %95, %97
  br i1 %98, label %35, label %99

99:                                               ; preds = %94, %26
  call void @_ZdaPv(i8* nonnull %22) #11
  %100 = icmp eq %struct.VkPhysicalDevice_T* %3, null
  br i1 %100, label %189, label %101

101:                                              ; preds = %99
  %102 = load void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)*, void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)** %10, align 8
  %103 = call void ()* %102(%"union.std::__1::__function::__policy_storage"* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), %struct.VkInstance_T* nonnull %2, %struct.VkDevice_T* null) #9
  %104 = bitcast void ()* %103 to i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*
  store i32 0, i32* %7, align 4
  %105 = call i32 %104(%struct.VkPhysicalDevice_T* nonnull %3, i8* null, i32* nonnull %7, %struct.VkExtensionProperties* null) #9
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %189

107:                                              ; preds = %101
  %108 = load i32, i32* %7, align 4
  %109 = zext i32 %108 to i64
  %110 = mul nuw nsw i64 %109, 260
  %111 = call i8* @_Znam(i64 %110) #11
  %112 = bitcast i8* %111 to %struct.VkExtensionProperties*
  %113 = call i32 %104(%struct.VkPhysicalDevice_T* nonnull %3, i8* null, i32* nonnull %7, %struct.VkExtensionProperties* nonnull %112) #9
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %123

115:                                              ; preds = %107
  %116 = load i32, i32* %7, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %188, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 1
  %120 = bitcast %class.SkString* %5 to i8*
  %121 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 0
  br label %124

123:                                              ; preds = %107
  call void @_ZdaPv(i8* nonnull %111) #11
  br label %189

124:                                              ; preds = %118, %183
  %125 = phi i64 [ 0, %118 ], [ %184, %183 ]
  %126 = load i64, i64* %119, align 8
  %127 = and i64 %126, 4294967294
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %183, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %112, i64 %125, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #9
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %121, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* %130) #9
  %131 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %122, align 8
  %132 = load i64, i64* %119, align 8
  %133 = lshr i64 %132, 1
  %134 = trunc i64 %133 to i32
  %135 = and i32 %134, 2147483647
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %174, label %137

137:                                              ; preds = %129
  %138 = add nsw i32 %135, -1
  %139 = icmp sgt i32 %138, 0
  %140 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %121, align 8
  br i1 %139, label %141, label %159

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %140, i64 0, i32 2
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i32 [ 0, %141 ], [ %157, %143 ]
  %145 = phi i32 [ %138, %141 ], [ %156, %143 ]
  %146 = sub nsw i32 %145, %144
  %147 = ashr i32 %146, 1
  %148 = add nsw i32 %147, %144
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %131, i64 %149, i32 0, i32 0, i32 0
  %151 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %150, align 8
  %152 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %151, i64 0, i32 2
  %153 = call i32 @strcmp(i8* %152, i8* %142) #10
  %154 = icmp slt i32 %153, 0
  %155 = add nsw i32 %148, 1
  %156 = select i1 %154, i32 %145, i32 %148
  %157 = select i1 %154, i32 %155, i32 %144
  %158 = icmp sgt i32 %156, %157
  br i1 %158, label %143, label %159

159:                                              ; preds = %143, %137
  %160 = phi i32 [ 0, %137 ], [ %156, %143 ]
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %131, i64 %161, i32 0, i32 0, i32 0
  %163 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %162, align 8
  %164 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %163, i64 0, i32 2
  %165 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %140, i64 0, i32 2
  %166 = call i32 @strcmp(i8* %164, i8* %165) #10
  %167 = icmp slt i32 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %159
  %169 = sub i32 -2, %160
  br label %174

170:                                              ; preds = %159
  %171 = call i32 @strcmp(i8* %165, i8* %164) #10
  %172 = ashr i32 %171, 31
  %173 = xor i32 %172, %160
  br label %174

174:                                              ; preds = %170, %168, %129
  %175 = phi i32 [ %173, %170 ], [ -1, %129 ], [ %169, %168 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #9
  %176 = icmp sgt i32 %175, -1
  br i1 %176, label %177, label %183

177:                                              ; preds = %174
  %178 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %112, i64 %125, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %122, align 8
  %181 = sext i32 %175 to i64
  %182 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %180, i64 %181, i32 1
  store i32 %179, i32* %182, align 8
  br label %183

183:                                              ; preds = %124, %177, %174
  %184 = add nuw nsw i64 %125, 1
  %185 = load i32, i32* %7, align 4
  %186 = zext i32 %185 to i64
  %187 = icmp ult i64 %184, %186
  br i1 %187, label %124, label %188

188:                                              ; preds = %183, %115
  call void @_ZdaPv(i8* nonnull %111) #11
  br label %189

189:                                              ; preds = %34, %99, %101, %188, %123, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #9
  br label %190

190:                                              ; preds = %4, %189
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14GrVkExtensions12hasExtensionEPKcj(%class.GrVkExtensions* nocapture readonly, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %3
  %10 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %11, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %1) #9
  %12 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %0, i64 0, i32 0, i32 0
  %13 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %12, align 8
  %14 = load i64, i64* %5, align 8
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, 2147483647
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %56, label %19

19:                                               ; preds = %9
  %20 = add nsw i32 %17, -1
  %21 = icmp sgt i32 %20, 0
  %22 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %11, align 8
  br i1 %21, label %23, label %41

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %22, i64 0, i32 2
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i32 [ 0, %23 ], [ %39, %25 ]
  %27 = phi i32 [ %20, %23 ], [ %38, %25 ]
  %28 = sub nsw i32 %27, %26
  %29 = ashr i32 %28, 1
  %30 = add nsw i32 %29, %26
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %13, i64 %31, i32 0, i32 0, i32 0
  %33 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %32, align 8
  %34 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %33, i64 0, i32 2
  %35 = call i32 @strcmp(i8* %34, i8* %24) #10
  %36 = icmp slt i32 %35, 0
  %37 = add nsw i32 %30, 1
  %38 = select i1 %36, i32 %27, i32 %30
  %39 = select i1 %36, i32 %37, i32 %26
  %40 = icmp sgt i32 %38, %39
  br i1 %40, label %25, label %41

41:                                               ; preds = %25, %19
  %42 = phi i32 [ 0, %19 ], [ %38, %25 ]
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %13, i64 %43, i32 0, i32 0, i32 0
  %45 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %44, align 8
  %46 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %45, i64 0, i32 2
  %47 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %22, i64 0, i32 2
  %48 = call i32 @strcmp(i8* %46, i8* %47) #10
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %41
  %51 = sub i32 -2, %42
  br label %56

52:                                               ; preds = %41
  %53 = call i32 @strcmp(i8* %47, i8* %46) #10
  %54 = ashr i32 %53, 31
  %55 = xor i32 %54, %42
  br label %56

56:                                               ; preds = %52, %50, %9
  %57 = phi i32 [ %55, %52 ], [ -1, %9 ], [ %51, %50 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %59, label %65

59:                                               ; preds = %56
  %60 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %12, align 8
  %61 = sext i32 %57 to i64
  %62 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %60, i64 %61, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp uge i32 %63, %2
  br label %65

65:                                               ; preds = %3, %59, %56
  %66 = phi i1 [ false, %56 ], [ %64, %59 ], [ false, %3 ]
  ret i1 %66
}

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN14GrVkExtensions4InfoELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %80

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %80, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #9
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %68, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %63, %50 ]
  %52 = shl nuw nsw i64 %51, 4
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %49, align 8
  %55 = bitcast i8* %53 to %class.SkString*
  %56 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %54, i64 %51, i32 0
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %55, %class.SkString* dereferenceable(8) %56) #9
  %57 = getelementptr inbounds i8, i8* %53, i64 8
  %58 = bitcast i8* %57 to i32*
  %59 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %54, i64 %51, i32 1
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %58, align 8
  %61 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %49, align 8
  %62 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %61, i64 %51, i32 0
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %62) #9
  %63 = add nuw nsw i64 %51, 1
  %64 = load i64, i64* %4, align 8
  %65 = lshr i64 %64, 1
  %66 = and i64 %65, 2147483647
  %67 = icmp ult i64 %63, %66
  br i1 %67, label %50, label %68

68:                                               ; preds = %50, %35
  %69 = phi i64 [ %45, %35 ], [ %64, %50 ]
  %70 = and i64 %69, 1
  %71 = icmp eq i64 %70, 0
  %72 = bitcast %class.SkTArray* %0 to i8**
  br i1 %71, label %76, label %73

73:                                               ; preds = %68
  %74 = load i8*, i8** %72, align 8
  tail call void @_Z7sk_freePv(i8* %74) #9
  %75 = load i64, i64* %4, align 8
  br label %76

76:                                               ; preds = %68, %73
  %77 = phi i64 [ %75, %73 ], [ %69, %68 ]
  store i8* %44, i8** %72, align 8
  %78 = and i64 %77, -4294967298
  %79 = or i64 %78, 1
  store i64 %79, i64* %4, align 8
  br label %80

80:                                               ; preds = %76, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #5

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z12SkTIntroSortIN14GrVkExtensions4InfoEFbRKS1_S3_EEviPT_iRKT0_(i32, %"struct.GrVkExtensions::Info"*, i32, i1 (%"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"*)*) local_unnamed_addr #0 comdat {
  %5 = alloca %"struct.GrVkExtensions::Info", align 8
  %6 = alloca %"struct.GrVkExtensions::Info", align 8
  %7 = alloca %"struct.GrVkExtensions::Info", align 8
  %8 = alloca %"struct.GrVkExtensions::Info", align 8
  %9 = alloca %"struct.GrVkExtensions::Info", align 8
  %10 = alloca %"struct.GrVkExtensions::Info", align 8
  %11 = icmp slt i32 %2, 33
  br i1 %11, label %25, label %12

12:                                               ; preds = %4
  %13 = bitcast %"struct.GrVkExtensions::Info"* %9 to i8*
  %14 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %9, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %9, i64 0, i32 0
  %16 = bitcast %"struct.GrVkExtensions::Info"* %8 to i8*
  %17 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %8, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %8, i64 0, i32 0
  %19 = bitcast %"struct.GrVkExtensions::Info"* %7 to i8*
  %20 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %7, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %7, i64 0, i32 0
  %22 = bitcast %"struct.GrVkExtensions::Info"* %6 to i8*
  %23 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %6, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %6, i64 0, i32 0
  br label %65

25:                                               ; preds = %139, %4
  %26 = phi i32 [ %2, %4 ], [ %156, %139 ]
  %27 = phi %"struct.GrVkExtensions::Info"* [ %1, %4 ], [ %155, %139 ]
  %28 = sext i32 %26 to i64
  %29 = add nsw i64 %28, -1
  %30 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %27, i64 %29
  %31 = icmp slt i32 %26, 2
  br i1 %31, label %158, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %27, i64 1
  %34 = bitcast %"struct.GrVkExtensions::Info"* %10 to i8*
  %35 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %10, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %10, i64 0, i32 0
  br label %37

37:                                               ; preds = %62, %32
  %38 = phi %"struct.GrVkExtensions::Info"* [ %33, %32 ], [ %63, %62 ]
  %39 = phi %"struct.GrVkExtensions::Info"* [ %27, %32 ], [ %38, %62 ]
  %40 = call zeroext i1 %3(%"struct.GrVkExtensions::Info"* dereferenceable(16) %38, %"struct.GrVkExtensions::Info"* dereferenceable(16) %39) #9
  br i1 %40, label %41, label %62

41:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %42 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %38, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false) #9
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %36, %class.SkString* dereferenceable(8) %42) #9
  %43 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %39, i64 1, i32 1
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %35, align 8
  br label %45

45:                                               ; preds = %55, %41
  %46 = phi %"struct.GrVkExtensions::Info"* [ %38, %41 ], [ %47, %55 ]
  %47 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %46, i64 -1
  %48 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %46, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %47, i64 0, i32 0
  %50 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %48, %class.SkString* dereferenceable(8) %49) #9
  %51 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %46, i64 -1, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %46, i64 0, i32 1
  store i32 %52, i32* %53, align 8
  %54 = icmp ugt %"struct.GrVkExtensions::Info"* %47, %27
  br i1 %54, label %55, label %58

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %46, i64 -2
  %57 = call zeroext i1 %3(%"struct.GrVkExtensions::Info"* nonnull dereferenceable(16) %10, %"struct.GrVkExtensions::Info"* dereferenceable(16) %56) #9
  br i1 %57, label %45, label %58

58:                                               ; preds = %55, %45
  %59 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %46, i64 -1, i32 1
  %60 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %49, %class.SkString* nonnull dereferenceable(8) %36) #9
  %61 = load i32, i32* %35, align 8
  store i32 %61, i32* %59, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %36) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  br label %62

62:                                               ; preds = %58, %37
  %63 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %38, i64 1
  %64 = icmp ugt %"struct.GrVkExtensions::Info"* %63, %30
  br i1 %64, label %158, label %37

65:                                               ; preds = %12, %139
  %66 = phi i32 [ %0, %12 ], [ %102, %139 ]
  %67 = phi %"struct.GrVkExtensions::Info"* [ %1, %12 ], [ %155, %139 ]
  %68 = phi i32 [ %2, %12 ], [ %156, %139 ]
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %70, label %101

70:                                               ; preds = %65
  %71 = sext i32 %68 to i64
  %72 = lshr i64 %71, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %70
  %75 = add nsw i64 %71, -1
  br label %79

76:                                               ; preds = %86
  %77 = add nsw i64 %71, -1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %158, label %79

79:                                               ; preds = %74, %76
  %80 = phi i64 [ %75, %74 ], [ %77, %76 ]
  %81 = bitcast %"struct.GrVkExtensions::Info"* %5 to i8*
  %82 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %5, i64 0, i32 1
  %83 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %5, i64 0, i32 0
  %84 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %67, i64 0, i32 0
  %85 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %67, i64 0, i32 1
  br label %90

86:                                               ; preds = %70, %86
  %87 = phi i64 [ %88, %86 ], [ %72, %70 ]
  call void @_Z20SkTHeapSort_SiftDownIN14GrVkExtensions4InfoEFbRKS1_S3_EEvPT_mmRKT0_(%"struct.GrVkExtensions::Info"* %67, i64 %87, i64 %71, i1 (%"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"*)* %3) #9
  %88 = add nsw i64 %87, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %76, label %86

90:                                               ; preds = %79, %90
  %91 = phi i64 [ %99, %90 ], [ %80, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #9
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %83, %class.SkString* dereferenceable(8) %84) #9
  %92 = load i32, i32* %85, align 8
  store i32 %92, i32* %82, align 8
  %93 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %67, i64 %91, i32 0
  %94 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %84, %class.SkString* dereferenceable(8) %93) #9
  %95 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %67, i64 %91, i32 1
  %96 = load i32, i32* %95, align 8
  store i32 %96, i32* %85, align 8
  %97 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %93, %class.SkString* nonnull dereferenceable(8) %83) #9
  %98 = load i32, i32* %82, align 8
  store i32 %98, i32* %95, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %83) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #9
  call void @_Z18SkTHeapSort_SiftUpIN14GrVkExtensions4InfoEFbRKS1_S3_EEvPT_mmRKT0_(%"struct.GrVkExtensions::Info"* %67, i64 1, i64 %91, i1 (%"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"*)* %3) #9
  %99 = add i64 %91, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %158, label %90

101:                                              ; preds = %65
  %102 = add nsw i32 %66, -1
  %103 = add nsw i32 %68, -1
  %104 = ashr i32 %103, 1
  %105 = sext i32 %104 to i64
  %106 = sext i32 %68 to i64
  %107 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %67, i64 -1
  %108 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %107, i64 %106
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %109 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %67, i64 %105, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #9
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %15, %class.SkString* dereferenceable(8) %109) #9
  %110 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %67, i64 %105, i32 1
  %111 = load i32, i32* %110, align 8
  store i32 %111, i32* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #9
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %18, %class.SkString* dereferenceable(8) %109) #9
  %112 = load i32, i32* %110, align 8
  store i32 %112, i32* %17, align 8
  %113 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %108, i64 0, i32 0
  %114 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %109, %class.SkString* dereferenceable(8) %113) #9
  %115 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %108, i64 0, i32 1
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %110, align 8
  %117 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %113, %class.SkString* nonnull dereferenceable(8) %18) #9
  %118 = load i32, i32* %17, align 8
  store i32 %118, i32* %115, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  %119 = icmp ugt %"struct.GrVkExtensions::Info"* %108, %67
  br i1 %119, label %120, label %139

120:                                              ; preds = %101, %135
  %121 = phi %"struct.GrVkExtensions::Info"* [ %136, %135 ], [ %67, %101 ]
  %122 = phi %"struct.GrVkExtensions::Info"* [ %137, %135 ], [ %67, %101 ]
  %123 = call zeroext i1 %3(%"struct.GrVkExtensions::Info"* dereferenceable(16) %122, %"struct.GrVkExtensions::Info"* nonnull dereferenceable(16) %9) #9
  br i1 %123, label %124, label %135

124:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  %125 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %122, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #9
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %21, %class.SkString* dereferenceable(8) %125) #9
  %126 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %122, i64 0, i32 1
  %127 = load i32, i32* %126, align 8
  store i32 %127, i32* %20, align 8
  %128 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %121, i64 0, i32 0
  %129 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %125, %class.SkString* dereferenceable(8) %128) #9
  %130 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %121, i64 0, i32 1
  %131 = load i32, i32* %130, align 8
  store i32 %131, i32* %126, align 8
  %132 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %128, %class.SkString* nonnull dereferenceable(8) %21) #9
  %133 = load i32, i32* %20, align 8
  store i32 %133, i32* %130, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  %134 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %121, i64 1
  br label %135

135:                                              ; preds = %124, %120
  %136 = phi %"struct.GrVkExtensions::Info"* [ %134, %124 ], [ %121, %120 ]
  %137 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %122, i64 1
  %138 = icmp ult %"struct.GrVkExtensions::Info"* %137, %108
  br i1 %138, label %120, label %139

139:                                              ; preds = %135, %101
  %140 = phi %"struct.GrVkExtensions::Info"* [ %67, %101 ], [ %136, %135 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %141 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %140, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #9
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %24, %class.SkString* dereferenceable(8) %141) #9
  %142 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %140, i64 0, i32 1
  %143 = load i32, i32* %142, align 8
  store i32 %143, i32* %23, align 8
  %144 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %141, %class.SkString* dereferenceable(8) %113) #9
  %145 = load i32, i32* %115, align 8
  store i32 %145, i32* %142, align 8
  %146 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %113, %class.SkString* nonnull dereferenceable(8) %24) #9
  %147 = load i32, i32* %23, align 8
  store i32 %147, i32* %115, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  %148 = ptrtoint %"struct.GrVkExtensions::Info"* %140 to i64
  %149 = ptrtoint %"struct.GrVkExtensions::Info"* %67 to i64
  %150 = sub i64 %148, %149
  %151 = lshr exact i64 %150, 4
  %152 = trunc i64 %151 to i32
  call void @_Z12SkTIntroSortIN14GrVkExtensions4InfoEFbRKS1_S3_EEviPT_iRKT0_(i32 %102, %"struct.GrVkExtensions::Info"* %67, i32 %152, i1 (%"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"*)* %3)
  %153 = add nsw i32 %152, 1
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %67, i64 %154
  %156 = sub nsw i32 %68, %153
  %157 = icmp slt i32 %156, 33
  br i1 %157, label %25, label %65

158:                                              ; preds = %90, %62, %76, %25
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z20SkTHeapSort_SiftDownIN14GrVkExtensions4InfoEFbRKS1_S3_EEvPT_mmRKT0_(%"struct.GrVkExtensions::Info"*, i64, i64, i1 (%"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"*)*) local_unnamed_addr #0 comdat {
  %5 = alloca %"struct.GrVkExtensions::Info", align 8
  %6 = bitcast %"struct.GrVkExtensions::Info"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %5, i64 0, i32 1
  %8 = add i64 %1, -1
  %9 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %8, i32 0
  %11 = bitcast %"struct.GrVkExtensions::Info"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %9, %class.SkString* dereferenceable(8) %10) #9
  %12 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %8, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %7, align 8
  %14 = shl i64 %1, 1
  %15 = icmp ugt i64 %14, %2
  br i1 %15, label %42, label %16

16:                                               ; preds = %4, %33
  %17 = phi i64 [ %40, %33 ], [ %14, %4 ]
  %18 = phi i64 [ %28, %33 ], [ %1, %4 ]
  %19 = icmp ult i64 %17, %2
  br i1 %19, label %20, label %27

20:                                               ; preds = %16
  %21 = add i64 %17, -1
  %22 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %21
  %23 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %17
  %24 = call zeroext i1 %3(%"struct.GrVkExtensions::Info"* dereferenceable(16) %22, %"struct.GrVkExtensions::Info"* dereferenceable(16) %23) #9
  %25 = zext i1 %24 to i64
  %26 = or i64 %17, %25
  br label %27

27:                                               ; preds = %20, %16
  %28 = phi i64 [ %17, %16 ], [ %26, %20 ]
  %29 = add i64 %28, -1
  %30 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %29
  %31 = call zeroext i1 %3(%"struct.GrVkExtensions::Info"* nonnull dereferenceable(16) %5, %"struct.GrVkExtensions::Info"* dereferenceable(16) %30) #9
  %32 = add i64 %18, -1
  br i1 %31, label %33, label %42

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %32, i32 0
  %35 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %30, i64 0, i32 0
  %36 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %34, %class.SkString* dereferenceable(8) %35) #9
  %37 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %29, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %32, i32 1
  store i32 %38, i32* %39, align 8
  %40 = shl i64 %28, 1
  %41 = icmp ugt i64 %40, %2
  br i1 %41, label %42, label %16

42:                                               ; preds = %33, %27, %4
  %43 = phi i64 [ %8, %4 ], [ %29, %33 ], [ %32, %27 ]
  %44 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %43, i32 0
  %45 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %44, %class.SkString* nonnull dereferenceable(8) %9) #9
  %46 = load i32, i32* %7, align 8
  %47 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %43, i32 1
  store i32 %46, i32* %47, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z18SkTHeapSort_SiftUpIN14GrVkExtensions4InfoEFbRKS1_S3_EEvPT_mmRKT0_(%"struct.GrVkExtensions::Info"*, i64, i64, i1 (%"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"*)*) local_unnamed_addr #0 comdat {
  %5 = alloca %"struct.GrVkExtensions::Info", align 8
  %6 = bitcast %"struct.GrVkExtensions::Info"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %5, i64 0, i32 1
  %8 = add i64 %1, -1
  %9 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %8, i32 0
  %11 = bitcast %"struct.GrVkExtensions::Info"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %9, %class.SkString* dereferenceable(8) %10) #9
  %12 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %8, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %7, align 8
  %14 = shl i64 %1, 1
  %15 = icmp ugt i64 %14, %2
  br i1 %15, label %16, label %20

16:                                               ; preds = %31, %4
  %17 = phi i64 [ %1, %4 ], [ %32, %31 ]
  %18 = lshr i64 %17, 1
  %19 = icmp ult i64 %18, %1
  br i1 %19, label %59, label %43

20:                                               ; preds = %4, %31
  %21 = phi i64 [ %41, %31 ], [ %14, %4 ]
  %22 = phi i64 [ %32, %31 ], [ %1, %4 ]
  %23 = icmp ult i64 %21, %2
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = add i64 %21, -1
  %26 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %25
  %27 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %21
  %28 = call zeroext i1 %3(%"struct.GrVkExtensions::Info"* dereferenceable(16) %26, %"struct.GrVkExtensions::Info"* dereferenceable(16) %27) #9
  %29 = zext i1 %28 to i64
  %30 = or i64 %21, %29
  br label %31

31:                                               ; preds = %24, %20
  %32 = phi i64 [ %21, %20 ], [ %30, %24 ]
  %33 = add i64 %32, -1
  %34 = add i64 %22, -1
  %35 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %34, i32 0
  %36 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %33, i32 0
  %37 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %35, %class.SkString* dereferenceable(8) %36) #9
  %38 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %33, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %34, i32 1
  store i32 %39, i32* %40, align 8
  %41 = shl i64 %32, 1
  %42 = icmp ugt i64 %41, %2
  br i1 %42, label %16, label %20

43:                                               ; preds = %16, %49
  %44 = phi i64 [ %57, %49 ], [ %18, %16 ]
  %45 = phi i64 [ %44, %49 ], [ %17, %16 ]
  %46 = add nsw i64 %44, -1
  %47 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %46
  %48 = call zeroext i1 %3(%"struct.GrVkExtensions::Info"* dereferenceable(16) %47, %"struct.GrVkExtensions::Info"* nonnull dereferenceable(16) %5) #9
  br i1 %48, label %49, label %59

49:                                               ; preds = %43
  %50 = add i64 %45, -1
  %51 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %50, i32 0
  %52 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %47, i64 0, i32 0
  %53 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %51, %class.SkString* dereferenceable(8) %52) #9
  %54 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %46, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %50, i32 1
  store i32 %55, i32* %56, align 8
  %57 = lshr i64 %44, 1
  %58 = icmp ult i64 %57, %1
  br i1 %58, label %59, label %43

59:                                               ; preds = %43, %49, %16
  %60 = phi i64 [ %17, %16 ], [ %44, %49 ], [ %45, %43 ]
  %61 = add i64 %60, -1
  %62 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %61, i32 0
  %63 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %62, %class.SkString* nonnull dereferenceable(8) %9) #9
  %64 = load i32, i32* %7, align 8
  %65 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %0, i64 %61, i32 1
  store i32 %64, i32* %65, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #5

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
