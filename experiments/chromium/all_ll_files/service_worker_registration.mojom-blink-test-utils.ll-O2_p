; ModuleID = 'gen/third_party/blink/public/mojom/service_worker/service_worker_registration.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/service_worker/service_worker_registration.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter" = type { %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* }
%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost" = type { i32 (...)** }
%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectAsyncWaiter" = type { %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* }
%"class.blink::mojom::blink::ServiceWorkerRegistrationObject" = type { i32 (...)** }
%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting" = type { %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::FetchClientSettingsObject"* }
%"class.blink::mojom::blink::FetchClientSettingsObject" = type <{ i32, [4 x i8], %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::KURL"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }
%"class.base::OnceCallback.14" = type { %"class.base::internal::CallbackBase" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.25, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.18", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.20" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.25 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.26" }>
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.28", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.29" }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::blink::NavigationPreloadState", i32, [4 x i8] }>
%"class.blink::mojom::blink::NavigationPreloadState" = type { i8, %"class.WTF::String" }
%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting" = type { %"class.blink::mojom::blink::ServiceWorkerRegistrationObject" }
%"class.mojo::InlinedStructPtr.42" = type { %"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask", i32 }
%"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask" = type { i8, i8, i8 }
%"class.mojo::StructPtr.43" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* }
%"class.blink::mojom::blink::ServiceWorkerObjectInfo" = type { i64, i32, %"class.blink::KURL", %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedReceiver" }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.47 }
%class.scoped_refptr.47 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }

$_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectHostD2Ev = comdat any

$_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink31ServiceWorkerRegistrationObjectD2Ev = comdat any

$_ZN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTestingD0Ev = comdat any

$_ZNSt3__14swapIN5blink5mojom5blink22NavigationPreloadStateEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

@.str = private unnamed_addr constant [7 x i8] c"Update\00", align 1
@.str.1 = private unnamed_addr constant [104 x i8] c"gen/third_party/blink/public/mojom/service_worker/service_worker_registration.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"Unregister\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"EnableNavigationPreload\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"GetNavigationPreloadState\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"SetNavigationPreloadHeader\00", align 1
@_ZTVN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*)* @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting6UpdateEN4mojo9StructPtrINS1_25FetchClientSettingsObjectEEEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting10UnregisterEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, i1, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting23EnableNavigationPreloadEbN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, %"class.base::OnceCallback.14"*)* @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting25GetNavigationPreloadStateEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEN4mojo16InlinedStructPtrINS1_22NavigationPreloadStateEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting26SetNavigationPreloadHeaderERKN3WTF6StringEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeES6_EEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*)* @_ZN5blink5mojom5blink31ServiceWorkerRegistrationObjectD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)* @_ZN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*, %"class.mojo::InlinedStructPtr.42"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*)* @_ZN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTesting23SetServiceWorkerObjectsEN4mojo16InlinedStructPtrINS1_31ChangedServiceWorkerObjectsMaskEEENS3_9StructPtrINS1_23ServiceWorkerObjectInfoEEES9_S9_ to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*, i32)* @_ZN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTesting17SetUpdateViaCacheENS0_27ServiceWorkerUpdateViaCacheE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)* @_ZN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTesting11UpdateFoundEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiterC1EPNS1_35ServiceWorkerRegistrationObjectHostE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*), void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*)* @_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiterC2EPNS1_35ServiceWorkerRegistrationObjectHostE
@_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"*), void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"*)* @_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiterD2Ev
@_ZN5blink5mojom5blink42ServiceWorkerRegistrationObjectAsyncWaiterC1EPNS1_31ServiceWorkerRegistrationObjectE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*), void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*)* @_ZN5blink5mojom5blink42ServiceWorkerRegistrationObjectAsyncWaiterC2EPNS1_31ServiceWorkerRegistrationObjectE
@_ZN5blink5mojom5blink42ServiceWorkerRegistrationObjectAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectAsyncWaiter"*), void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectAsyncWaiter"*)* @_ZN5blink5mojom5blink42ServiceWorkerRegistrationObjectAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting6UpdateEN4mojo9StructPtrINS1_25FetchClientSettingsObjectEEEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEEEE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %9(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0) #11
  %11 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %12 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 0, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %10 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %20, i64 2
  %22 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %10, %"class.mojo::StructPtr"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = load %"class.blink::mojom::blink::FetchClientSettingsObject"*, %"class.blink::mojom::blink::FetchClientSettingsObject"** %12, align 8
  store %"class.blink::mojom::blink::FetchClientSettingsObject"* null, %"class.blink::mojom::blink::FetchClientSettingsObject"** %12, align 8
  %25 = icmp eq %"class.blink::mojom::blink::FetchClientSettingsObject"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink25FetchClientSettingsObjectD1Ev(%"class.blink::mojom::blink::FetchClientSettingsObject"* nonnull %24) #11
  %27 = bitcast %"class.blink::mojom::blink::FetchClientSettingsObject"* %24 to i8*
  call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %3, %26
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting10UnregisterEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEEEE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %7(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %8 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)** %14, i64 3
  %16 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %8, %"class.base::OnceCallback"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting23EnableNavigationPreloadEbN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEEEE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, i1 zeroext, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %8(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %9 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)** %15, i64 4
  %17 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %9, i1 zeroext %1, %"class.base::OnceCallback"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting25GetNavigationPreloadStateEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEN4mojo16InlinedStructPtrINS1_22NavigationPreloadStateEEEEEE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, %"class.base::OnceCallback.14"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.14", align 8
  %4 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %7(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.14", %"class.base::OnceCallback.14"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.14"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.14"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %8 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)***
  %14 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)** %14, i64 5
  %16 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %8, %"class.base::OnceCallback.14"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.14", %"class.base::OnceCallback.14"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTesting26SetNavigationPreloadHeaderERKN3WTF6StringEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeES6_EEE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %8(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %9 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %15, i64 6
  %17 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiterC2EPNS1_35ServiceWorkerRegistrationObjectHostE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %1, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiterD2Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter6UpdateEN4mojo9StructPtrINS1_25FetchClientSettingsObjectEEEPNS0_22ServiceWorkerErrorTypeEPN3WTF6StringE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, i32*, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i32* %2 to i64
  %10 = ptrtoint %"class.WTF::String"* %3 to i64
  %11 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %12 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* %0, i64 0, i32 0
  %13 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"** %12, align 8
  %14 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %18 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %19 = call i8* @_Znwm(i64 64) #12, !noalias !2
  %20 = bitcast i8* %19 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %20, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter6UpdateEN4mojo9StructPtrINS5_25FetchClientSettingsObjectEEEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_0JPNS_7RunLoopESC_SF_EEEFvSB_RKSE_EE7RunOnceEPNS0_13BindStateBaseESB_SL_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter6UpdateEN4mojo9StructPtrINS4_25FetchClientSettingsObjectEEEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_0JPNS_7RunLoopESB_SE_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !2
  %21 = getelementptr inbounds i8, i8* %19, i64 40
  %22 = bitcast i8* %21 to i64*
  store i64 %18, i64* %22, align 8, !noalias !2
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = bitcast i8* %23 to i64*
  store i64 %9, i64* %24, align 8, !noalias !2
  %25 = getelementptr inbounds i8, i8* %19, i64 56
  %26 = bitcast i8* %25 to i64*
  store i64 %10, i64* %26, align 8, !noalias !2
  %27 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %19, i8** %27, align 8, !alias.scope !2
  %28 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %13 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %29 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %29, i64 2
  %31 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %30, align 8
  call void %31(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %13, %"class.mojo::StructPtr"* nonnull %6, %"class.base::OnceCallback"* nonnull %7) #11
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #11
  %33 = load %"class.blink::mojom::blink::FetchClientSettingsObject"*, %"class.blink::mojom::blink::FetchClientSettingsObject"** %15, align 8
  store %"class.blink::mojom::blink::FetchClientSettingsObject"* null, %"class.blink::mojom::blink::FetchClientSettingsObject"** %15, align 8
  %34 = icmp eq %"class.blink::mojom::blink::FetchClientSettingsObject"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %4
  call void @_ZN5blink5mojom5blink25FetchClientSettingsObjectD1Ev(%"class.blink::mojom::blink::FetchClientSettingsObject"* nonnull %33) #11
  %36 = bitcast %"class.blink::mojom::blink::FetchClientSettingsObject"* %33 to i8*
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %4, %35
  %38 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.1, i64 0, i64 0), i32 76) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter10UnregisterEPNS0_22ServiceWorkerErrorTypeEPN3WTF6StringE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* nocapture readonly, i32*, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i32* %1 to i64
  %8 = ptrtoint %"class.WTF::String"* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %10 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %13 = call i8* @_Znwm(i64 64) #12, !noalias !7
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter10UnregisterEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_1JPNS_7RunLoopES8_SB_EEEFvS7_RKSA_EE7RunOnceEPNS0_13BindStateBaseES7_SH_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter10UnregisterEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_1JPNS_7RunLoopES7_SA_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !7
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !7
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %7, i64* %18, align 8, !noalias !7
  %19 = getelementptr inbounds i8, i8* %13, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8, !noalias !7
  %21 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %13, i8** %21, align 8, !alias.scope !7
  %22 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %11 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)***
  %23 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)** %23, i64 3
  %25 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %11, %"class.base::OnceCallback"* nonnull %5) #11
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #11
  %27 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.1, i64 0, i64 0), i32 95) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter23EnableNavigationPreloadEbPNS0_22ServiceWorkerErrorTypeEPN3WTF6StringE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* nocapture readonly, i1 zeroext, i32*, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %2 to i64
  %9 = ptrtoint %"class.WTF::String"* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %11 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #12, !noalias !12
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter23EnableNavigationPreloadEbPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_2JPNS_7RunLoopES8_SB_EEEFvS7_RKSA_EE7RunOnceEPNS0_13BindStateBaseES7_SH_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter23EnableNavigationPreloadEbPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_2JPNS_7RunLoopES7_SA_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !12
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !12
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !12
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !12
  %22 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !12
  %23 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %12 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)***
  %24 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)** %24, i64 4
  %26 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, i1, %"class.base::OnceCallback"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %12, i1 zeroext %1, %"class.base::OnceCallback"* nonnull %6) #11
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #11
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.1, i64 0, i64 0), i32 114) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter25GetNavigationPreloadStateEPNS0_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo16InlinedStructPtrINS1_22NavigationPreloadStateEEE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* nocapture readonly, i32*, %"class.WTF::String"*, %"class.mojo::InlinedStructPtr"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.14", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %1 to i64
  %9 = ptrtoint %"class.WTF::String"* %2 to i64
  %10 = ptrtoint %"class.mojo::InlinedStructPtr"* %3 to i64
  %11 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %12 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* %0, i64 0, i32 0
  %13 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"** %12, align 8
  %14 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %15 = call i8* @_Znwm(i64 72) #12, !noalias !17
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"*, %"class.mojo::InlinedStructPtr"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter25GetNavigationPreloadStateEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo16InlinedStructPtrINS5_22NavigationPreloadStateEEEE3$_3JPNS_7RunLoopES8_SB_SG_EEEFvS7_RKSA_SF_EE7RunOnceEPNS0_13BindStateBaseES7_SM_OSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter25GetNavigationPreloadStateEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo16InlinedStructPtrINS4_22NavigationPreloadStateEEEE3$_3JPNS_7RunLoopES7_SA_SF_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !17
  %17 = getelementptr inbounds i8, i8* %15, i64 40
  %18 = bitcast i8* %17 to i64*
  store i64 %14, i64* %18, align 8, !noalias !17
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8, !noalias !17
  %21 = getelementptr inbounds i8, i8* %15, i64 56
  %22 = bitcast i8* %21 to i64*
  store i64 %9, i64* %22, align 8, !noalias !17
  %23 = getelementptr inbounds i8, i8* %15, i64 64
  %24 = bitcast i8* %23 to i64*
  store i64 %10, i64* %24, align 8, !noalias !17
  %25 = bitcast %"class.base::OnceCallback.14"* %6 to i8**
  store i8* %15, i8** %25, align 8, !alias.scope !17
  %26 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %13 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)***
  %27 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)** %27, i64 5
  %29 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.base::OnceCallback.14"*)** %28, align 8
  call void %29(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %13, %"class.base::OnceCallback.14"* nonnull %6) #11
  %30 = getelementptr inbounds %"class.base::OnceCallback.14", %"class.base::OnceCallback.14"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #11
  %31 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.1, i64 0, i64 0), i32 137) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter26SetNavigationPreloadHeaderERKN3WTF6StringEPNS0_22ServiceWorkerErrorTypeEPS4_(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i32*, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %2 to i64
  %9 = ptrtoint %"class.WTF::String"* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %11 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #12, !noalias !22
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter26SetNavigationPreloadHeaderERKN3WTF6StringEPNS4_22ServiceWorkerErrorTypeEPS8_E3$_4JPNS_7RunLoopESC_SD_EEEFvSB_SA_EE7RunOnceEPNS0_13BindStateBaseESB_SA_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter26SetNavigationPreloadHeaderERKN3WTF6StringEPNS3_22ServiceWorkerErrorTypeEPS7_E3$_4JPNS_7RunLoopESB_SC_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !22
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !22
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !22
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !22
  %22 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !22
  %23 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %12 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %24 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %24, i64 6
  %26 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"* %12, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %6) #11
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #11
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.1, i64 0, i64 0), i32 156) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTesting23SetServiceWorkerObjectsEN4mojo16InlinedStructPtrINS1_31ChangedServiceWorkerObjectsMaskEEENS3_9StructPtrINS1_23ServiceWorkerObjectInfoEEES9_S9_(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*, %"class.mojo::InlinedStructPtr.42"* nocapture, %"class.mojo::StructPtr.43"* nocapture, %"class.mojo::StructPtr.43"* nocapture, %"class.mojo::StructPtr.43"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask", align 1
  %7 = alloca %"class.mojo::InlinedStructPtr.42", align 4
  %8 = alloca %"class.mojo::StructPtr.43", align 8
  %9 = alloca %"class.mojo::StructPtr.43", align 8
  %10 = alloca %"class.mojo::StructPtr.43", align 8
  %11 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)***
  %12 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)** %12, i64 5
  %14 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)** %13, align 8
  %15 = tail call %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %14(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"* %0) #11
  %16 = getelementptr inbounds %"class.mojo::InlinedStructPtr.42", %"class.mojo::InlinedStructPtr.42"* %7, i64 0, i32 0
  call void @_ZN5blink5mojom5blink31ChangedServiceWorkerObjectsMaskC1Ev(%"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask"* nonnull %16) #11
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr.42", %"class.mojo::InlinedStructPtr.42"* %7, i64 0, i32 1
  store i32 0, i32* %17, align 4
  call void @_ZN5blink5mojom5blink31ChangedServiceWorkerObjectsMaskD1Ev(%"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask"* nonnull %16) #11
  call void @_ZN5blink5mojom5blink31ChangedServiceWorkerObjectsMaskC1Ev(%"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask"* nonnull %16) #11
  %18 = getelementptr inbounds %"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask", %"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr.42", %"class.mojo::InlinedStructPtr.42"* %7, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* nonnull align 4 %19, i64 3, i1 false) #11
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr.42", %"class.mojo::InlinedStructPtr.42"* %1, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 1 %20, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* nonnull align 1 %18, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink31ChangedServiceWorkerObjectsMaskD1Ev(%"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %18) #11
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr.42", %"class.mojo::InlinedStructPtr.42"* %1, i64 0, i32 1
  %22 = load i32, i32* %17, align 4
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %17, align 4
  store i32 %22, i32* %21, align 4
  %24 = bitcast %"class.mojo::StructPtr.43"* %8 to i64*
  %25 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.mojo::StructPtr.43"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %24, align 8
  store i64 0, i64* %26, align 8
  %28 = bitcast %"class.mojo::StructPtr.43"* %9 to i64*
  %29 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.mojo::StructPtr.43"* %3 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 0, i64* %30, align 8
  %32 = bitcast %"class.mojo::StructPtr.43"* %10 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.mojo::StructPtr.43"* %4 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 0, i64* %34, align 8
  %36 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %15 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, %"class.mojo::InlinedStructPtr.42"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*)***
  %37 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, %"class.mojo::InlinedStructPtr.42"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, %"class.mojo::InlinedStructPtr.42"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, %"class.mojo::InlinedStructPtr.42"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, %"class.mojo::InlinedStructPtr.42"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*)** %37, i64 2
  %39 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, %"class.mojo::InlinedStructPtr.42"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, %"class.mojo::InlinedStructPtr.42"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.43"*)** %38, align 8
  call void %39(%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %15, %"class.mojo::InlinedStructPtr.42"* nonnull %7, %"class.mojo::StructPtr.43"* nonnull %8, %"class.mojo::StructPtr.43"* nonnull %9, %"class.mojo::StructPtr.43"* nonnull %10) #11
  %40 = load %"class.blink::mojom::blink::ServiceWorkerObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerObjectInfo"** %33, align 8
  store %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* null, %"class.blink::mojom::blink::ServiceWorkerObjectInfo"** %33, align 8
  %41 = icmp eq %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink23ServiceWorkerObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerObjectInfo"* nonnull %40) #11
  %43 = bitcast %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* %40 to i8*
  call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %5, %42
  %45 = load %"class.blink::mojom::blink::ServiceWorkerObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerObjectInfo"** %29, align 8
  store %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* null, %"class.blink::mojom::blink::ServiceWorkerObjectInfo"** %29, align 8
  %46 = icmp eq %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  call void @_ZN5blink5mojom5blink23ServiceWorkerObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerObjectInfo"* nonnull %45) #11
  %48 = bitcast %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* %45 to i8*
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %44, %47
  %50 = load %"class.blink::mojom::blink::ServiceWorkerObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerObjectInfo"** %25, align 8
  store %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* null, %"class.blink::mojom::blink::ServiceWorkerObjectInfo"** %25, align 8
  %51 = icmp eq %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  call void @_ZN5blink5mojom5blink23ServiceWorkerObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerObjectInfo"* nonnull %50) #11
  %53 = bitcast %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* %50 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %49, %52
  call void @_ZN5blink5mojom5blink31ChangedServiceWorkerObjectsMaskD1Ev(%"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask"* nonnull %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTesting17SetUpdateViaCacheENS0_27ServiceWorkerUpdateViaCacheE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %6(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %7 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, i32)***
  %9 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, i32)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, i32)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, i32)** %9, i64 3
  %11 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, i32)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*, i32)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %7, i32 %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTesting11UpdateFoundEv(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)** %3, i64 5
  %5 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* (%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %5(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"* %0) #11
  %7 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %6 to void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*)***
  %8 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*)**, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*)** %8, i64 4
  %10 = load void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*)*, void (%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %6) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink42ServiceWorkerRegistrationObjectAsyncWaiterC2EPNS1_31ServiceWorkerRegistrationObjectE(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* %1, %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink42ServiceWorkerRegistrationObjectAsyncWaiterD2Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectHostD2Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink56ServiceWorkerRegistrationObjectHostInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink31ServiceWorkerRegistrationObjectD2Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink52ServiceWorkerRegistrationObjectInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink25FetchClientSettingsObjectD1Ev(%"class.blink::mojom::blink::FetchClientSettingsObject"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink23ServiceWorkerObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerObjectInfo"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink31ChangedServiceWorkerObjectsMaskD1Ev(%"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter6UpdateEN4mojo9StructPtrINS5_25FetchClientSettingsObjectEEEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_0JPNS_7RunLoopESC_SF_EEEFvSB_RKSE_EE7RunOnceEPNS0_13BindStateBaseESB_SL_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.WTF::String"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  store i32 %1, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #11
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !27

30:                                               ; preds = %21
  tail call void @llvm.trap() #11
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %3
  %34 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %35 = bitcast %"class.WTF::String"* %12 to i64*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #11
  br label %52

52:                                               ; preds = %33, %48, %51
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter6UpdateEN4mojo9StructPtrINS4_25FetchClientSettingsObjectEEEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_0JPNS_7RunLoopESB_SE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter10UnregisterEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_1JPNS_7RunLoopES8_SB_EEEFvS7_RKSA_EE7RunOnceEPNS0_13BindStateBaseES7_SH_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.WTF::String"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  store i32 %1, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #11
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !27

30:                                               ; preds = %21
  tail call void @llvm.trap() #11
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %3
  %34 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %35 = bitcast %"class.WTF::String"* %12 to i64*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #11
  br label %52

52:                                               ; preds = %33, %48, %51
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter10UnregisterEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_1JPNS_7RunLoopES7_SA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter23EnableNavigationPreloadEbPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_2JPNS_7RunLoopES8_SB_EEEFvS7_RKSA_EE7RunOnceEPNS0_13BindStateBaseES7_SH_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.WTF::String"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  store i32 %1, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #11
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !27

30:                                               ; preds = %21
  tail call void @llvm.trap() #11
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %3
  %34 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %35 = bitcast %"class.WTF::String"* %12 to i64*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #11
  br label %52

52:                                               ; preds = %33, %48, %51
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter23EnableNavigationPreloadEbPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_2JPNS_7RunLoopES7_SA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter25GetNavigationPreloadStateEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo16InlinedStructPtrINS5_22NavigationPreloadStateEEEE3$_3JPNS_7RunLoopES8_SB_SG_EEEFvS7_RKSA_SF_EE7RunOnceEPNS0_13BindStateBaseES7_SM_OSF_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.mojo::InlinedStructPtr"* dereferenceable(24)) #0 align 2 {
  %5 = alloca %"class.mojo::InlinedStructPtr", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RunLoop"**
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %9 = bitcast void ()** %8 to i32**
  %10 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %11 = bitcast void ()** %10 to %"class.WTF::String"**
  %12 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %13 = bitcast void ()** %12 to %"class.mojo::InlinedStructPtr"**
  %14 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %7, align 8
  %16 = load i32*, i32** %9, align 8
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %18 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %13, align 8
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %5, i64 0, i32 0
  call void @_ZN5blink5mojom5blink22NavigationPreloadStateC1Ev(%"class.blink::mojom::blink::NavigationPreloadState"* nonnull %19) #11
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %5, i64 0, i32 1
  store i32 0, i32* %20, align 8
  call void @_ZN5blink5mojom5blink22NavigationPreloadStateD1Ev(%"class.blink::mojom::blink::NavigationPreloadState"* nonnull %19) #11
  call void @_ZN5blink5mojom5blink22NavigationPreloadStateC1Ev(%"class.blink::mojom::blink::NavigationPreloadState"* nonnull %19) #11
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %3, i64 0, i32 0
  call void @_ZNSt3__14swapIN5blink5mojom5blink22NavigationPreloadStateEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::NavigationPreloadState"* nonnull dereferenceable(16) %19, %"class.blink::mojom::blink::NavigationPreloadState"* dereferenceable(16) %21) #11
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %3, i64 0, i32 1
  %23 = load i32, i32* %20, align 8
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %20, align 8
  store i32 %23, i32* %22, align 4
  store i32 %1, i32* %16, align 4
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #11
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !27

42:                                               ; preds = %33
  call void @llvm.trap() #11
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %43, %28, %4
  %46 = ptrtoint %"class.WTF::StringImpl"* %26 to i64
  %47 = bitcast %"class.WTF::String"* %17 to i64*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %46, i64* %47, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #11
  br label %64

64:                                               ; preds = %45, %60, %63
  %65 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %18, i64 0, i32 1
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %18, i64 0, i32 0
  call void @_ZN5blink5mojom5blink22NavigationPreloadStateD1Ev(%"class.blink::mojom::blink::NavigationPreloadState"* %66) #11
  call void @_ZN5blink5mojom5blink22NavigationPreloadStateC1Ev(%"class.blink::mojom::blink::NavigationPreloadState"* %66) #11
  call void @_ZNSt3__14swapIN5blink5mojom5blink22NavigationPreloadStateEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::NavigationPreloadState"* dereferenceable(16) %66, %"class.blink::mojom::blink::NavigationPreloadState"* nonnull dereferenceable(16) %19) #11
  %67 = load i32, i32* %65, align 4
  %68 = load i32, i32* %20, align 8
  store i32 %68, i32* %65, align 4
  store i32 %67, i32* %20, align 8
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %15) #11
  call void @_ZN5blink5mojom5blink22NavigationPreloadStateD1Ev(%"class.blink::mojom::blink::NavigationPreloadState"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink22NavigationPreloadStateD1Ev(%"class.blink::mojom::blink::NavigationPreloadState"*) unnamed_addr #1

declare void @_ZN5blink5mojom5blink22NavigationPreloadStateC1Ev(%"class.blink::mojom::blink::NavigationPreloadState"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN5blink5mojom5blink22NavigationPreloadStateEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::NavigationPreloadState"* dereferenceable(16), %"class.blink::mojom::blink::NavigationPreloadState"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = alloca %"class.blink::mojom::blink::NavigationPreloadState", align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::NavigationPreloadState", %"class.blink::mojom::blink::NavigationPreloadState"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = bitcast %"class.blink::mojom::blink::NavigationPreloadState"* %3 to i64*
  store i64 -6148914691236517206, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::NavigationPreloadState", %"class.blink::mojom::blink::NavigationPreloadState"* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !28
  store i8 %7, i8* %4, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::NavigationPreloadState", %"class.blink::mojom::blink::NavigationPreloadState"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::NavigationPreloadState", %"class.blink::mojom::blink::NavigationPreloadState"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !27

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.blink::mojom::blink::NavigationPreloadState", %"class.blink::mojom::blink::NavigationPreloadState"* %1, i64 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !28
  store i8 %31, i8* %6, align 8
  %32 = getelementptr inbounds %"class.blink::mojom::blink::NavigationPreloadState", %"class.blink::mojom::blink::NavigationPreloadState"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.blink::mojom::blink::NavigationPreloadState", %"class.blink::mojom::blink::NavigationPreloadState"* %1, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !27

50:                                               ; preds = %41
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %36, %29
  %54 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %55 = bitcast %"class.WTF::String"* %32 to i64*
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  store i64 %54, i64* %55, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #11
  br label %72

72:                                               ; preds = %53, %68, %71
  %73 = load i8, i8* %4, align 8, !range !28
  store i8 %73, i8* %30, align 8
  %74 = getelementptr inbounds %"class.blink::mojom::blink::NavigationPreloadState", %"class.blink::mojom::blink::NavigationPreloadState"* %1, i64 0, i32 1
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #11
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !27

91:                                               ; preds = %82
  tail call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::String"* %74 to i64*
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %94, %109, %112
  call void @_ZN5blink5mojom5blink22NavigationPreloadStateD1Ev(%"class.blink::mojom::blink::NavigationPreloadState"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter25GetNavigationPreloadStateEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo16InlinedStructPtrINS4_22NavigationPreloadStateEEEE3$_3JPNS_7RunLoopES7_SA_SF_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter26SetNavigationPreloadHeaderERKN3WTF6StringEPNS4_22ServiceWorkerErrorTypeEPS8_E3$_4JPNS_7RunLoopESC_SD_EEEFvSB_SA_EE7RunOnceEPNS0_13BindStateBaseESB_SA_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.WTF::String"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  store i32 %1, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #11
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !27

30:                                               ; preds = %21
  tail call void @llvm.trap() #11
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %3
  %34 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %35 = bitcast %"class.WTF::String"* %12 to i64*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #11
  br label %52

52:                                               ; preds = %33, %48, %51
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter26SetNavigationPreloadHeaderERKN3WTF6StringEPNS3_22ServiceWorkerErrorTypeEPS7_E3$_4JPNS_7RunLoopESB_SC_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN5blink5mojom5blink31ChangedServiceWorkerObjectsMaskC1Ev(%"class.blink::mojom::blink::ChangedServiceWorkerObjectsMask"*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter6UpdateEN4mojo9StructPtrINS5_25FetchClientSettingsObjectEEEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_0JPNS_7RunLoopERSC_RSF_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter6UpdateEN4mojo9StructPtrINS5_25FetchClientSettingsObjectEEEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_0JPNS_7RunLoopERSC_RSF_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter6UpdateEN4mojo9StructPtrINS3_25FetchClientSettingsObjectEEEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_0JPNS_7RunLoopERSA_RSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter6UpdateEN4mojo9StructPtrINS3_25FetchClientSettingsObjectEEEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_0JPNS_7RunLoopERSA_RSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter10UnregisterEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_1JPNS_7RunLoopERS8_RSB_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter10UnregisterEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_1JPNS_7RunLoopERS8_RSB_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter10UnregisterEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_1JPNS_7RunLoopERS6_RS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter10UnregisterEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_1JPNS_7RunLoopERS6_RS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter23EnableNavigationPreloadEbPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_2JPNS_7RunLoopERS8_RSB_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter23EnableNavigationPreloadEbPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_2JPNS_7RunLoopERS8_RSB_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter23EnableNavigationPreloadEbPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_2JPNS_7RunLoopERS6_RS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter23EnableNavigationPreloadEbPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEE3$_2JPNS_7RunLoopERS6_RS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter25GetNavigationPreloadStateEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo16InlinedStructPtrINS5_22NavigationPreloadStateEEEE3$_3JPNS_7RunLoopERS8_RSB_RSG_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter25GetNavigationPreloadStateEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo16InlinedStructPtrINS5_22NavigationPreloadStateEEEE3$_3JPNS_7RunLoopERS8_RSB_RSG_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter25GetNavigationPreloadStateEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo16InlinedStructPtrINS3_22NavigationPreloadStateEEEE3$_3JPNS_7RunLoopERS6_RS9_RSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter25GetNavigationPreloadStateEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo16InlinedStructPtrINS3_22NavigationPreloadStateEEEE3$_3JPNS_7RunLoopERS6_RS9_RSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter26SetNavigationPreloadHeaderERKN3WTF6StringEPNS4_22ServiceWorkerErrorTypeEPS8_E3$_4JPNS_7RunLoopERSC_RSD_EEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter26SetNavigationPreloadHeaderERKN3WTF6StringEPNS4_22ServiceWorkerErrorTypeEPS8_E3$_4JPNS_7RunLoopERSC_RSD_EEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter26SetNavigationPreloadHeaderERKN3WTF6StringEPNS2_22ServiceWorkerErrorTypeEPS6_E3$_4JPNS_7RunLoopERSA_RSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIZN5blink5mojom5blink46ServiceWorkerRegistrationObjectHostAsyncWaiter26SetNavigationPreloadHeaderERKN3WTF6StringEPNS2_22ServiceWorkerErrorTypeEPS6_E3$_4JPNS_7RunLoopERSA_RSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!27 = !{!"branch_weights", i32 1, i32 2000}
!28 = !{i8 0, i8 2}
