; ModuleID = '../../third_party/libxslt/src/libxslt/extra.c'
source_filename = "../../third_party/libxslt/src/libxslt/extra.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._xsltTransformContext = type { %struct._xsltStylesheet*, i32, %struct._xsltTemplate*, i32, i32, %struct._xsltTemplate**, %struct._xsltStackElem*, i32, i32, %struct._xsltStackElem**, i32, %struct._xmlHashTable*, %struct._xmlHashTable*, %struct._xmlHashTable*, i8*, i8*, %struct._xsltDocument*, %struct._xsltDocument*, %struct._xmlNode*, %struct._xmlNodeSet*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlXPathContext*, i32, %struct._xmlHashTable*, %struct._xmlNode*, i32, i8*, i32, i64, i32, i32, i64*, i8*, i32, i32, %struct._xsltRuntimeExtra*, %struct._xsltDocument*, i8*, void (i8*, i8*, ...)*, i8*, void (%struct._xsltTransformContext*, %struct._xmlNode**, i32)*, %struct._xmlDoc*, %struct._xmlDoc*, i32, i8*, i32, i32, i32, i64*, i32, %struct._xmlDict*, %struct._xmlDoc*, i32, i32, i32, %struct._xsltTemplate*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xsltTransformCache*, i8*, %struct._xmlDoc*, %struct._xmlDoc*, i32, i32, i32, i32, i64, i64 }
%struct._xsltStylesheet = type { %struct._xsltStylesheet*, %struct._xsltStylesheet*, %struct._xsltStylesheet*, %struct._xsltDocument*, %struct._xmlDoc*, %struct._xmlHashTable*, i32, %struct._xmlHashTable*, %struct._xsltStackElem*, %struct._xsltTemplate*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._xmlHashTable*, %struct._xmlHashTable*, %struct._xmlHashTable*, i8*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xsltDecimalFormat*, i32, i8*, i8*, i32, i8*, %struct._xsltElemPreComp*, i32, i32, i8*, i8**, i32, i32, i8*, %struct._xmlHashTable*, i32, %struct._xsltDocument*, %struct._xmlDict*, i8*, i8*, i32, i32, i32, %struct._xsltStylesheet*, i32, %struct._xmlHashTable*, %struct._xmlXPathContext* }
%struct._xsltDecimalFormat = type { %struct._xsltDecimalFormat*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xsltStackElem = type { %struct._xsltStackElem*, %struct._xsltStylePreComp*, i32, i8*, i8*, i8*, %struct._xmlNode*, %struct._xmlXPathObject*, %struct._xmlDoc*, i32, %struct._xsltTransformContext*, i32 }
%struct._xsltStylePreComp = type { %struct._xsltElemPreComp*, i32, {}*, %struct._xmlNode*, i8*, i32, i32, i8*, i32, i32, i8*, i32, i8*, i8*, i32, i8*, i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, %struct._xsltTemplate*, i8*, i32, i8*, i32, %struct._xsltNumberData, %struct._xmlXPathCompExpr*, %struct._xmlNs**, i32 }
%struct._xsltNumberData = type { i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct._xmlDoc*, %struct._xmlNode*, %struct._xsltCompMatch*, %struct._xsltCompMatch* }
%struct._xsltCompMatch = type opaque
%struct._xmlXPathCompExpr = type opaque
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlXPathObject = type { i32, %struct._xmlNodeSet*, i32, double, i8*, i8*, i32, i8*, i32 }
%struct._xmlNodeSet = type { i32, i32, %struct._xmlNode** }
%struct._xmlXPathContext = type { %struct._xmlDoc*, %struct._xmlNode*, i32, i32, %struct._xmlHashTable*, i32, i32, %struct._xmlXPathType*, i32, i32, %struct._xmlHashTable*, i32, i32, %struct._xmlXPathAxis*, %struct._xmlNs**, i32, i8*, i32, i32, i32, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlHashTable*, %struct._xmlXPathObject* (i8*, i8*, i8*)*, i8*, i8*, i8*, i8*, void (%struct._xmlXPathParserContext*, i32)* (i8*, i8*, i8*)*, i8*, %struct._xmlNs**, i32, i8*, void (i8*, %struct._xmlError*)*, %struct._xmlError, %struct._xmlNode*, %struct._xmlDict*, i32, i8*, i64, i64, i32 }
%struct._xmlXPathType = type { i8*, i32 (%struct._xmlXPathObject*, i32)* }
%struct._xmlXPathAxis = type { i8*, %struct._xmlXPathObject* (%struct._xmlXPathParserContext*, %struct._xmlXPathObject*)* }
%struct._xmlXPathParserContext = type { i8*, i8*, i32, %struct._xmlXPathContext*, %struct._xmlXPathObject*, i32, i32, %struct._xmlXPathObject**, %struct._xmlXPathCompExpr*, i32, %struct._xmlNode*, i32 }
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }
%struct._xmlHashTable = type opaque
%struct._xsltRuntimeExtra = type { i8*, void (i8*)*, %union.anon }
%union.anon = type { i8* }
%struct._xsltDocument = type { %struct._xsltDocument*, i32, %struct._xmlDoc*, i8*, %struct._xsltDocument*, i32, i32 }
%struct._xmlDict = type opaque
%struct._xsltTemplate = type { %struct._xsltTemplate*, %struct._xsltStylesheet*, i8*, float, i8*, i8*, i8*, i8*, %struct._xmlNode*, %struct._xmlNode*, i32, %struct._xmlNs**, i32, i64, i8*, i32, i32, %struct._xsltTemplate**, i32* }
%struct._xsltTransformCache = type { %struct._xmlDoc*, i32, %struct._xsltStackElem*, i32 }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xsltElemPreComp = type { %struct._xsltElemPreComp*, i32, {}*, %struct._xmlNode*, void (%struct._xsltElemPreComp*)* }

@xsltGenericError = external local_unnamed_addr global void (i8*, i8*, ...)*, align 8
@xsltGenericErrorContext = external local_unnamed_addr global i8*, align 8
@.str = private unnamed_addr constant [12 x i8] c"Templates:\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"#%d \00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"name %s \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"Variables:\0A\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"#%d\0A\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"corrupted !!!\0A\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"param \00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"var \00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"noname !!!!\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"node-set() : expects one result-tree arg\0A\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"node-set() invalid arg expecting a result tree\0A\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"node-set\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"http://xmlsoft.org/XSLT/namespace\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"http://icl.com/saxon\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"http://www.jclark.com/xt\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.20 = private unnamed_addr constant [42 x i8] c"org.apache.xalan.xslt.extensions.Redirect\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"document\00", align 1
@.str.22 = private unnamed_addr constant [37 x i8] c"http://www.w3.org/1999/XSL/Transform\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @xsltDebug(%struct._xsltTransformContext* nocapture readonly, %struct._xmlNode* nocapture readnone, %struct._xmlNode* nocapture readnone, %struct._xsltElemPreComp* nocapture readnone) #0 {
  %5 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %6 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %5(i8* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #2
  %7 = getelementptr inbounds %struct._xsltTransformContext, %struct._xsltTransformContext* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  %10 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %11 = load i8*, i8** @xsltGenericErrorContext, align 8
  br i1 %9, label %12, label %61

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct._xsltTransformContext, %struct._xsltTransformContext* %0, i64 0, i32 5
  %14 = sext i32 %8 to i64
  br label %15

15:                                               ; preds = %12, %52
  %16 = phi i64 [ %14, %12 ], [ %20, %52 ]
  %17 = phi i8* [ %11, %12 ], [ %60, %52 ]
  %18 = phi void (i8*, i8*, ...)* [ %10, %12 ], [ %59, %52 ]
  %19 = phi i32 [ 0, %12 ], [ %55, %52 ]
  %20 = add nsw i64 %16, -1
  tail call void (i8*, i8*, ...) %18(i8* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32 %19) #2
  %21 = load %struct._xsltTemplate**, %struct._xsltTemplate*** %13, align 8
  %22 = getelementptr inbounds %struct._xsltTemplate*, %struct._xsltTemplate** %21, i64 %20
  %23 = load %struct._xsltTemplate*, %struct._xsltTemplate** %22, align 8
  %24 = getelementptr inbounds %struct._xsltTemplate, %struct._xsltTemplate* %23, i64 0, i32 4
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %15
  %28 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %29 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %28(i8* %29, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %25) #2
  %30 = load %struct._xsltTemplate**, %struct._xsltTemplate*** %13, align 8
  %31 = getelementptr inbounds %struct._xsltTemplate*, %struct._xsltTemplate** %30, i64 %20
  %32 = load %struct._xsltTemplate*, %struct._xsltTemplate** %31, align 8
  br label %33

33:                                               ; preds = %15, %27
  %34 = phi %struct._xsltTemplate* [ %23, %15 ], [ %32, %27 ]
  %35 = getelementptr inbounds %struct._xsltTemplate, %struct._xsltTemplate* %34, i64 0, i32 2
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %40 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %39(i8* %40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %36) #2
  %41 = load %struct._xsltTemplate**, %struct._xsltTemplate*** %13, align 8
  %42 = getelementptr inbounds %struct._xsltTemplate*, %struct._xsltTemplate** %41, i64 %20
  %43 = load %struct._xsltTemplate*, %struct._xsltTemplate** %42, align 8
  br label %44

44:                                               ; preds = %33, %38
  %45 = phi %struct._xsltTemplate* [ %34, %33 ], [ %43, %38 ]
  %46 = getelementptr inbounds %struct._xsltTemplate, %struct._xsltTemplate* %45, i64 0, i32 6
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %51 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %50(i8* %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %47) #2
  br label %52

52:                                               ; preds = %44, %49
  %53 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %54 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %53(i8* %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #2
  %55 = add nuw nsw i32 %19, 1
  %56 = icmp ult i32 %55, 15
  %57 = icmp sgt i64 %20, 0
  %58 = and i1 %56, %57
  %59 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %60 = load i8*, i8** @xsltGenericErrorContext, align 8
  br i1 %58, label %15, label %61

61:                                               ; preds = %52, %4
  %62 = phi void (i8*, i8*, ...)* [ %10, %4 ], [ %59, %52 ]
  %63 = phi i8* [ %11, %4 ], [ %60, %52 ]
  tail call void (i8*, i8*, ...) %62(i8* %63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #2
  %64 = getelementptr inbounds %struct._xsltTransformContext, %struct._xsltTransformContext* %0, i64 0, i32 7
  %65 = load i32, i32* %64, align 8
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %121

67:                                               ; preds = %61
  %68 = getelementptr inbounds %struct._xsltTransformContext, %struct._xsltTransformContext* %0, i64 0, i32 9
  %69 = sext i32 %65 to i64
  br label %70

70:                                               ; preds = %67, %116
  %71 = phi i64 [ %69, %67 ], [ %73, %116 ]
  %72 = phi i32 [ 0, %67 ], [ %117, %116 ]
  %73 = add nsw i64 %71, -1
  %74 = load %struct._xsltStackElem**, %struct._xsltStackElem*** %68, align 8
  %75 = getelementptr inbounds %struct._xsltStackElem*, %struct._xsltStackElem** %74, i64 %73
  %76 = load %struct._xsltStackElem*, %struct._xsltStackElem** %75, align 8
  %77 = icmp eq %struct._xsltStackElem* %76, null
  br i1 %77, label %116, label %78

78:                                               ; preds = %70
  %79 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %80 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %79(i8* %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %72) #2
  %81 = load %struct._xsltStackElem**, %struct._xsltStackElem*** %68, align 8
  %82 = getelementptr inbounds %struct._xsltStackElem*, %struct._xsltStackElem** %81, i64 %73
  %83 = load %struct._xsltStackElem*, %struct._xsltStackElem** %82, align 8
  %84 = icmp eq %struct._xsltStackElem* %83, null
  br i1 %84, label %116, label %85

85:                                               ; preds = %78, %110
  %86 = phi %struct._xsltStackElem* [ %114, %110 ], [ %83, %78 ]
  %87 = getelementptr inbounds %struct._xsltStackElem, %struct._xsltStackElem* %86, i64 0, i32 1
  %88 = load %struct._xsltStylePreComp*, %struct._xsltStylePreComp** %87, align 8
  %89 = icmp eq %struct._xsltStylePreComp* %88, null
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %92 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %91(i8* %92, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)) #2
  br label %102

93:                                               ; preds = %85
  %94 = getelementptr inbounds %struct._xsltStylePreComp, %struct._xsltStylePreComp* %88, i64 0, i32 1
  %95 = load i32, i32* %94, align 8
  switch i32 %95, label %102 [
    i32 19, label %96
    i32 20, label %99
  ]

96:                                               ; preds = %93
  %97 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %98 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %97(i8* %98, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)) #2
  br label %102

99:                                               ; preds = %93
  %100 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %101 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %100(i8* %101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0)) #2
  br label %102

102:                                              ; preds = %93, %96, %99, %90
  %103 = getelementptr inbounds %struct._xsltStackElem, %struct._xsltStackElem* %86, i64 0, i32 3
  %104 = load i8*, i8** %103, align 8
  %105 = icmp eq i8* %104, null
  %106 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %107 = load i8*, i8** @xsltGenericErrorContext, align 8
  br i1 %105, label %109, label %108

108:                                              ; preds = %102
  tail call void (i8*, i8*, ...) %106(i8* %107, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8* nonnull %104) #2
  br label %110

109:                                              ; preds = %102
  tail call void (i8*, i8*, ...) %106(i8* %107, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)) #2
  br label %110

110:                                              ; preds = %109, %108
  %111 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %112 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %111(i8* %112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #2
  %113 = getelementptr inbounds %struct._xsltStackElem, %struct._xsltStackElem* %86, i64 0, i32 0
  %114 = load %struct._xsltStackElem*, %struct._xsltStackElem** %113, align 8
  %115 = icmp eq %struct._xsltStackElem* %114, null
  br i1 %115, label %116, label %85

116:                                              ; preds = %110, %78, %70
  %117 = add nuw nsw i32 %72, 1
  %118 = icmp ult i32 %117, 15
  %119 = icmp sgt i64 %73, 0
  %120 = and i1 %118, %119
  br i1 %120, label %70, label %121

121:                                              ; preds = %116, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @xsltFunctionNodeSet(%struct._xmlXPathParserContext*, i32) #0 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = tail call %struct._xsltTransformContext* @xsltXPathGetTransformContext(%struct._xmlXPathParserContext* %0) #2
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* %5, %struct._xsltStylesheet* null, %struct._xmlNode* null, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0)) #2
  %6 = getelementptr inbounds %struct._xmlXPathParserContext, %struct._xmlXPathParserContext* %0, i64 0, i32 2
  store i32 12, i32* %6, align 8
  br label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct._xmlXPathParserContext, %struct._xmlXPathParserContext* %0, i64 0, i32 4
  %9 = load %struct._xmlXPathObject*, %struct._xmlXPathObject** %8, align 8
  %10 = icmp eq %struct._xmlXPathObject* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct._xmlXPathObject, %struct._xmlXPathObject* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %14 [
    i32 9, label %17
    i32 1, label %18
  ]

14:                                               ; preds = %11, %7
  %15 = tail call %struct._xsltTransformContext* @xsltXPathGetTransformContext(%struct._xmlXPathParserContext* %0) #2
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* %15, %struct._xsltStylesheet* null, %struct._xmlNode* null, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0)) #2
  %16 = getelementptr inbounds %struct._xmlXPathParserContext, %struct._xmlXPathParserContext* %0, i64 0, i32 2
  store i32 11, i32* %16, align 8
  br label %18

17:                                               ; preds = %11
  store i32 1, i32* %12, align 8
  br label %18

18:                                               ; preds = %11, %4, %14, %17
  ret void
}

declare void @xsltTransformError(%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) local_unnamed_addr #1

declare %struct._xsltTransformContext* @xsltXPathGetTransformContext(%struct._xmlXPathParserContext*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @xsltRegisterExtras(%struct._xsltTransformContext* nocapture readnone) local_unnamed_addr #0 {
  tail call void @xsltRegisterAllExtras()
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @xsltRegisterAllExtras() local_unnamed_addr #0 {
  %1 = tail call i32 @xsltRegisterExtModuleFunction(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0), void (%struct._xmlXPathParserContext*, i32)* nonnull @xsltFunctionNodeSet) #2
  %2 = tail call i32 @xsltRegisterExtModuleFunction(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), void (%struct._xmlXPathParserContext*, i32)* nonnull @xsltFunctionNodeSet) #2
  %3 = tail call i32 @xsltRegisterExtModuleFunction(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), void (%struct._xmlXPathParserContext*, i32)* nonnull @xsltFunctionNodeSet) #2
  %4 = tail call i32 @xsltRegisterExtModuleElement(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0), %struct._xsltElemPreComp* (%struct._xsltStylesheet*, %struct._xmlNode*, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*)* null, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)* nonnull @xsltDebug) #2
  %5 = tail call i32 @xsltRegisterExtModuleElement(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), %struct._xsltElemPreComp* (%struct._xsltStylesheet*, %struct._xmlNode*, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*)* nonnull @xsltDocumentComp, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)* nonnull @xsltDocumentElem) #2
  %6 = tail call i32 @xsltRegisterExtModuleElement(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0), %struct._xsltElemPreComp* (%struct._xsltStylesheet*, %struct._xmlNode*, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*)* nonnull @xsltDocumentComp, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)* nonnull @xsltDocumentElem) #2
  %7 = tail call i32 @xsltRegisterExtModuleElement(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), %struct._xsltElemPreComp* (%struct._xsltStylesheet*, %struct._xmlNode*, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*)* nonnull @xsltDocumentComp, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)* nonnull @xsltDocumentElem) #2
  %8 = tail call i32 @xsltRegisterExtModuleElement(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i64 0, i64 0), %struct._xsltElemPreComp* (%struct._xsltStylesheet*, %struct._xmlNode*, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*)* nonnull @xsltDocumentComp, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)* nonnull @xsltDocumentElem) #2
  ret void
}

declare i32 @xsltRegisterExtModuleFunction(i8*, i8*, void (%struct._xmlXPathParserContext*, i32)*) local_unnamed_addr #1

declare i32 @xsltRegisterExtModuleElement(i8*, i8*, %struct._xsltElemPreComp* (%struct._xsltStylesheet*, %struct._xmlNode*, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*)*, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*) local_unnamed_addr #1

declare %struct._xsltElemPreComp* @xsltDocumentComp(%struct._xsltStylesheet*, %struct._xmlNode*, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*) #1

declare void @xsltDocumentElem(%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
