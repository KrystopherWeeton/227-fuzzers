; ModuleID = '../../v8/src/logging/counters.cc'
source_filename = "../../v8/src/logging/counters.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon.1128 = type { i64, i8*, i32, i32, i32 }
%struct.anon.1130 = type { i64, i8*, i32, i32 }
%struct.anon.1134 = type { i64, i8* }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.0", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.0" = type { i64 }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.3", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.654", %"class.std::__1::unique_ptr.675", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.685", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.161", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.550", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.169", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.26", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.26", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.26", i64, i64, %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.36", %"class.std::__1::vector.40", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.170", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.26", i64, i8, %"struct.std::__1::atomic.26", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.174", %"class.std::__1::vector.174", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.368", %"class.std::__1::unique_ptr.407", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.443", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.471", %"class.std::__1::unique_ptr.471", %"class.std::__1::unique_ptr.477", %"class.std::__1::unique_ptr.483", %"class.std::__1::shared_ptr.489", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.512", %"class.std::__1::unique_ptr.538", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.544", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.557", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.339", i8, [7 x i8], %"class.std::__1::unordered_map.563", %"class.std::__1::unordered_map.589", %"class.std::__1::unordered_map.563", %"class.std::__1::unordered_map.613", %"class.std::__1::vector.641", i8, %"class.std::__1::unique_ptr.648", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.7", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.23", [4 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.31", %"struct.std::__1::atomic.31", %"struct.std::__1::atomic.31" }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i64 }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i32 }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.42" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.112" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.26"*, %"class.std::__1::unique_ptr.106" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.26", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.47", %"class.std::__1::vector.47", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.49" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.54" }
%"class.std::__1::__hash_table.54" = type <{ %"class.std::__1::unique_ptr.55", %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.72", [4 x i8] }>
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.58"** }
%"struct.std::__1::__hash_node_base.58" = type { %"struct.std::__1::__hash_node_base.58"* }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__bucket_list_deallocator.60" }
%"class.std::__1::__bucket_list_deallocator.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::__hash_node_base.58" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.31", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.95", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.26"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.31", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.31", %"struct.std::__1::atomic.77", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.81" }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.83" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__cxx_atomic_impl.97" }
%"struct.std::__1::__cxx_atomic_impl.97" = type { %"struct.std::__1::__cxx_atomic_base_impl.98" }
%"struct.std::__1::__cxx_atomic_base_impl.98" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.99", i8, [7 x i8] }>
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { i64*, i64*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.26", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"*, %"class.std::__1::__compressed_pair.115" }
%"struct.std::__1::pair.114" = type { i32, i64 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::pair.114"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.26", i64, %"struct.std::__1::atomic.26" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.26", i32, %"struct.std::__1::atomic.26", %"class.v8::base::Mutex", %"struct.std::__1::atomic.26" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.120" }
%"class.std::__1::unordered_map.120" = type { %"class.std::__1::__hash_table.121" }
%"class.std::__1::__hash_table.121" = type <{ %"class.std::__1::unique_ptr.122", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", [4 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124", %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.125"** }
%"struct.std::__1::__hash_node_base.125" = type { %"struct.std::__1::__hash_node_base.125"* }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::__bucket_list_deallocator.127" }
%"class.std::__1::__bucket_list_deallocator.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::__hash_node_base.125" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.148", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.150" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.483", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.161", %"struct.std::__1::atomic.165", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__cxx_atomic_impl.167" }
%"struct.std::__1::__cxx_atomic_impl.167" = type { %"struct.std::__1::__cxx_atomic_base_impl.168" }
%"struct.std::__1::__cxx_atomic_base_impl.168" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.26", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.169" }
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i64 }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.176" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.289", %"class.std::__1::vector.289", %"class.std::__1::vector.289", %"class.std::__1::vector.296", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.190", %"class.std::__1::vector.191", %"class.std::__1::vector.198", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.190" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.193" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"class.std::__1::unique_ptr.200"*, %"class.std::__1::unique_ptr.200"*, %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::unique_ptr.200" = type opaque
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.std::__1::unique_ptr.200"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212", %"class.v8::internal::Worklist.214", %"class.v8::internal::Worklist.216", %"class.v8::internal::Worklist.218", %"class.v8::internal::Worklist.220" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.v8::internal::Worklist.214" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.v8::internal::Worklist.216" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.v8::internal::Worklist.218" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"class.v8::internal::Worklist.220" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.26" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.222", i8, i64 }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.238" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.190"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.238" = type { %"class.std::__1::__hash_table.239" }
%"class.std::__1::__hash_table.239" = type <{ %"class.std::__1::unique_ptr.240", %"class.std::__1::__compressed_pair.250", %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.258", [4 x i8] }>
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242", %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.243"** }
%"struct.std::__1::__hash_node_base.243" = type { %"struct.std::__1::__hash_node_base.243"* }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.std::__1::__bucket_list_deallocator.245" }
%"class.std::__1::__bucket_list_deallocator.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.std::__1::__hash_node_base.243" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.265" }
%"class.std::__1::unordered_map.265" = type { %"class.std::__1::__hash_table.266" }
%"class.std::__1::__hash_table.266" = type <{ %"class.std::__1::unique_ptr.267", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.282", %"class.std::__1::__compressed_pair.285", [4 x i8] }>
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269", %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.270"** }
%"struct.std::__1::__hash_node_base.270" = type { %"struct.std::__1::__hash_node_base.270"* }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.std::__1::__bucket_list_deallocator.272" }
%"class.std::__1::__bucket_list_deallocator.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__hash_node_base.270" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"struct.std::__1::pair.298"*, %"struct.std::__1::pair.298"*, %"class.std::__1::__compressed_pair.299" }
%"struct.std::__1::pair.298" = type opaque
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::pair.298"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.304", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.289"], [3 x %"class.std::__1::vector.289"], i8, %"struct.std::__1::atomic.161", [6 x i8], %"class.std::__1::vector.289", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.314"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.289", %"class.std::__1::vector.289", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.314" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.339", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.332"], %"class.std::__1::unique_ptr.304" }
%"class.std::__1::vector.332" = type { %"class.std::__1::__vector_base.333" }
%"class.std::__1::__vector_base.333" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.371", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.375", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.380" }
%"struct.std::__1::atomic.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__cxx_atomic_impl.373" }
%"struct.std::__1::__cxx_atomic_impl.373" = type { %"struct.std::__1::__cxx_atomic_base_impl.374" }
%"struct.std::__1::__cxx_atomic_base_impl.374" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.375" = type { %"struct.std::__1::__atomic_base.376" }
%"struct.std::__1::__atomic_base.376" = type { %"struct.std::__1::__cxx_atomic_impl.377" }
%"struct.std::__1::__cxx_atomic_impl.377" = type { %"struct.std::__1::__cxx_atomic_base_impl.378" }
%"struct.std::__1::__cxx_atomic_base_impl.378" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.380" = type { %"class.std::__1::__hash_table.381" }
%"class.std::__1::__hash_table.381" = type <{ %"class.std::__1::unique_ptr.382", %"class.std::__1::__compressed_pair.392", %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.400", [4 x i8] }>
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384", %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.385"** }
%"struct.std::__1::__hash_node_base.385" = type { %"struct.std::__1::__hash_node_base.385"* }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.std::__1::__bucket_list_deallocator.387" }
%"class.std::__1::__bucket_list_deallocator.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.std::__1::__hash_node_base.385" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.304", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.161", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.410", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.410" = type { %"class.std::__1::__hash_table.411" }
%"class.std::__1::__hash_table.411" = type <{ %"class.std::__1::unique_ptr.412", %"class.std::__1::__compressed_pair.422", %"class.std::__1::__compressed_pair.427", %"class.std::__1::__compressed_pair.430", [4 x i8] }>
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414", %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.415"** }
%"struct.std::__1::__hash_node_base.415" = type { %"struct.std::__1::__hash_node_base.415"* }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.std::__1::__bucket_list_deallocator.417" }
%"class.std::__1::__bucket_list_deallocator.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.std::__1::__hash_node_base.415" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.446" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.489" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.508", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.490", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.493", %"class.std::__1::set.501" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set.501" = type { %"class.std::__1::__tree.502" }
%"class.std::__1::__tree.502" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.508" = type { %"struct.std::__1::__atomic_base.509" }
%"struct.std::__1::__atomic_base.509" = type { %"struct.std::__1::__cxx_atomic_impl.510" }
%"struct.std::__1::__cxx_atomic_impl.510" = type { %"struct.std::__1::__cxx_atomic_base_impl.511" }
%"struct.std::__1::__cxx_atomic_base_impl.511" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.512" = type { %"class.std::__1::__hash_table.513" }
%"class.std::__1::__hash_table.513" = type <{ %"class.std::__1::unique_ptr.514", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.529", %"class.std::__1::__compressed_pair.532", [4 x i8] }>
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516", %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.517"** }
%"struct.std::__1::__hash_node_base.517" = type { %"struct.std::__1::__hash_node_base.517"* }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.std::__1::__bucket_list_deallocator.519" }
%"class.std::__1::__bucket_list_deallocator.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"struct.std::__1::__hash_node_base.517" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.550", %"class.std::__1::vector.550" }
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.339" = type { %"class.std::__1::__hash_table.340" }
%"class.std::__1::__hash_table.340" = type <{ %"class.std::__1::unique_ptr.341", %"class.std::__1::__compressed_pair.351", %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360", [4 x i8] }>
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343", %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.344"** }
%"struct.std::__1::__hash_node_base.344" = type { %"struct.std::__1::__hash_node_base.344"* }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.std::__1::__bucket_list_deallocator.346" }
%"class.std::__1::__bucket_list_deallocator.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"struct.std::__1::__hash_node_base.344" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.589" = type { %"class.std::__1::__hash_table.590" }
%"class.std::__1::__hash_table.590" = type <{ %"class.std::__1::unique_ptr.591", %"class.std::__1::__compressed_pair.601", %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.609", [4 x i8] }>
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593", %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.594"** }
%"struct.std::__1::__hash_node_base.594" = type { %"struct.std::__1::__hash_node_base.594"* }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.std::__1::__bucket_list_deallocator.596" }
%"class.std::__1::__bucket_list_deallocator.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"struct.std::__1::__hash_node_base.594" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.563" = type { %"class.std::__1::__hash_table.564" }
%"class.std::__1::__hash_table.564" = type <{ %"class.std::__1::unique_ptr.565", %"class.std::__1::__compressed_pair.575", %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.583", [4 x i8] }>
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567", %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.568"** }
%"struct.std::__1::__hash_node_base.568" = type { %"struct.std::__1::__hash_node_base.568"* }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.std::__1::__bucket_list_deallocator.570" }
%"class.std::__1::__bucket_list_deallocator.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.std::__1::__hash_node_base.568" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.613" = type { %"class.std::__1::__hash_table.614" }
%"class.std::__1::__hash_table.614" = type <{ %"class.std::__1::unique_ptr.615", %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.635", [4 x i8] }>
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617", %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.618"** }
%"struct.std::__1::__hash_node_base.618" = type { %"struct.std::__1::__hash_node_base.618"* }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.std::__1::__bucket_list_deallocator.620" }
%"class.std::__1::__bucket_list_deallocator.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.std::__1::__hash_node_base.618" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector.641" = type { %"class.std::__1::__vector_base.642" }
%"class.std::__1::__vector_base.642" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.643" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.550" }
%"class.std::__1::shared_ptr.654" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.148", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.655", %"class.std::__1::unique_ptr.669" }
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.658" }
%"class.std::__1::vector.658" = type { %"class.std::__1::__vector_base.659" }
%"class.std::__1::__vector_base.659" = type { %"class.std::__1::unique_ptr.660"*, %"class.std::__1::unique_ptr.660"*, %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.1135" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.std::__1::unique_ptr.660"* }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.678", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.678" = type { %"struct.std::__1::__atomic_base.679" }
%"struct.std::__1::__atomic_base.679" = type { %"struct.std::__1::__cxx_atomic_impl.680" }
%"struct.std::__1::__cxx_atomic_impl.680" = type { %"struct.std::__1::__cxx_atomic_base_impl.681" }
%"struct.std::__1::__cxx_atomic_base_impl.681" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.685" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.161", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.490" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.2"*, i16, i8*)*, i8* }
%"class.v8::Local.2" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.2" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.550" = type { %"class.std::__1::__vector_base.551" }
%"class.std::__1::__vector_base.551" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.169" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }

$_ZN2v88internal6Logger26DefaultEventLoggerSentinelEPKci = comdat any

@.str = private unnamed_addr constant [28 x i8] c"c:V8.WasmGeneratedCodeBytes\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"c:V8.WasmRelocBytes\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"c:V8.WasmLazilyCompiledFunctions\00", align 1
@_ZZN2v88internal8CountersC1EPNS0_7IsolateEE11kHistograms = internal constant [55 x %struct.anon.1128] [%struct.anon.1128 { i64 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 56, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 96, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 136, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i32 1, i32 6, i32 6 }, %struct.anon.1128 { i64 176, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i32 0, i32 0), i32 0, i32 200, i32 20 }, %struct.anon.1128 { i64 216, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), i32 1, i32 7, i32 7 }, %struct.anon.1128 { i64 256, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i32 0, i32 0), i32 0, i32 25, i32 26 }, %struct.anon.1128 { i64 296, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 336, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i32 0, i32 0), i32 0, i32 25, i32 26 }, %struct.anon.1128 { i64 376, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 416, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 456, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 496, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 536, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 576, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 616, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 656, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 696, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 736, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 776, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i32 0, i32 0), i32 0, i32 10000, i32 101 }, %struct.anon.1128 { i64 816, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i32 0, i32 0), i32 0, i32 100000, i32 50 }, %struct.anon.1128 { i64 856, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i32 0, i32 0), i32 0, i32 25, i32 26 }, %struct.anon.1128 { i64 896, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i32 0, i32 2, i32 3 }, %struct.anon.1128 { i64 936, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 1, i32 1000000, i32 51 }, %struct.anon.1128 { i64 976, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 1, i32 1000000, i32 51 }, %struct.anon.1128 { i64 1016, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i32 0, i32 0), i32 0, i32 4096, i32 13 }, %struct.anon.1128 { i64 1056, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 0, i32 4096, i32 13 }, %struct.anon.1128 { i64 1096, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.30, i32 0, i32 0), i32 0, i32 4096, i32 13 }, %struct.anon.1128 { i64 1136, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i32 0, i32 0), i32 1, i32 1073741824, i32 51 }, %struct.anon.1128 { i64 1176, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 1, i32 1073741824, i32 51 }, %struct.anon.1128 { i64 1216, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i32 0, i32 0), i32 1, i32 1073741824, i32 51 }, %struct.anon.1128 { i64 1256, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.34, i32 0, i32 0), i32 1, i32 1073741824, i32 51 }, %struct.anon.1128 { i64 1296, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i32 0, i32 0), i32 1, i32 131072, i32 51 }, %struct.anon.1128 { i64 1336, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i32 1, i32 131072, i32 51 }, %struct.anon.1128 { i64 1376, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i32 1, i32 131072, i32 51 }, %struct.anon.1128 { i64 1416, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i32 0, i32 0), i32 1, i32 1073741824, i32 51 }, %struct.anon.1128 { i64 1456, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.39, i32 0, i32 0), i32 1, i32 1073741824, i32 51 }, %struct.anon.1128 { i64 1496, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i32 0, i32 0), i32 0, i32 20, i32 21 }, %struct.anon.1128 { i64 1536, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0), i32 0, i32 3, i32 4 }, %struct.anon.1128 { i64 1576, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i32 0, i32 0), i32 0, i32 1048576, i32 128 }, %struct.anon.1128 { i64 1616, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.43, i32 0, i32 0), i32 0, i32 1024, i32 64 }, %struct.anon.1128 { i64 1656, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i32 0, i32 0), i32 0, i32 1024, i32 64 }, %struct.anon.1128 { i64 1696, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i32 0, i32 0), i32 0, i32 1024, i32 64 }, %struct.anon.1128 { i64 1736, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.46, i32 0, i32 0), i32 0, i32 100, i32 32 }, %struct.anon.1128 { i64 1776, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.47, i32 0, i32 0), i32 1, i32 128, i32 20 }, %struct.anon.1128 { i64 1816, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i32 0, i32 0), i32 1, i32 128, i32 20 }, %struct.anon.1128 { i64 1856, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.49, i32 0, i32 0), i32 1, i32 1024, i32 30 }, %struct.anon.1128 { i64 1896, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i32 0, i32 0), i32 1, i32 1024, i32 30 }, %struct.anon.1128 { i64 1936, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51, i32 0, i32 0), i32 0, i32 20, i32 21 }, %struct.anon.1128 { i64 1976, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.52, i32 0, i32 0), i32 0, i32 2, i32 3 }, %struct.anon.1128 { i64 2016, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0), i32 0, i32 100000, i32 30 }, %struct.anon.1128 { i64 2056, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i32 0, i32 0), i32 0, i32 100000, i32 30 }, %struct.anon.1128 { i64 2096, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i32 0, i32 0), i32 0, i32 100000, i32 30 }, %struct.anon.1128 { i64 2136, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56, i32 0, i32 0), i32 0, i32 100000, i32 200 }, %struct.anon.1128 { i64 2176, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.57, i32 0, i32 0), i32 1, i32 100000000, i32 50 }], align 16
@.str.3 = private unnamed_addr constant [23 x i8] c"V8.GCBackgroundMarking\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"V8.GCBackgroundScavenger\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"V8.GCBackgroundSweeping\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"V8.CodeCacheRejectReason\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"V8.ErrorsThrownPerContext\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"V8.DebugFeatureUsage\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"V8.GCIncrementalMarkingReason\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"V8.GCIncrementalMarkingSum\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"V8.GCMarkCompactReason\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"V8.GCFinalizeMC.Clear\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"V8.GCFinalizeMC.Epilogue\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"V8.GCFinalizeMC.Evacuate\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"V8.GCFinalizeMC.Finish\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"V8.GCFinalizeMC.Mark\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"V8.GCFinalizeMC.Prologue\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"V8.GCFinalizeMC.Sweep\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"V8.GCScavenger.ScavengeMain\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"V8.GCScavenger.ScavengeRoots\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"V8.GCMarkCompactor\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"V8.GCMarkingSum\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"V8.GCMainThreadMarkingThroughput\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"V8.GCScavengeReason\00", align 1
@.str.25 = private unnamed_addr constant [29 x i8] c"V8.GCYoungGenerationHandling\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"V8.WasmFunctionsPerModule.asm\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"V8.WasmFunctionsPerModule.wasm\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"V8.ArrayBufferLargeAllocations\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"V8.ArrayBufferNewSizeFailures\00", align 1
@.str.30 = private unnamed_addr constant [30 x i8] c"V8.SharedArrayAllocationSizes\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"V8.WasmFunctionSizeBytes.asm\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"V8.WasmFunctionSizeBytes.wasm\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"V8.WasmModuleSizeBytes.asm\00", align 1
@.str.34 = private unnamed_addr constant [28 x i8] c"V8.WasmModuleSizeBytes.wasm\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"V8.WasmMinMemPagesCount.asm\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"V8.WasmMinMemPagesCount.wasm\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"V8.WasmMaxMemPagesCount.wasm\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"V8.WasmCompileFunctionPeakMemoryBytes\00", align 1
@.str.39 = private unnamed_addr constant [22 x i8] c"V8.AsmModuleSizeBytes\00", align 1
@.str.40 = private unnamed_addr constant [32 x i8] c"V8.CompileScript.CacheBehaviour\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"V8.WasmMemoryAllocationResult\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"V8.WasmAddressSpaceUsageMiB\00", align 1
@.str.43 = private unnamed_addr constant [25 x i8] c"V8.WasmModuleCodeSizeMiB\00", align 1
@.str.44 = private unnamed_addr constant [33 x i8] c"V8.WasmModuleCodeSizeBaselineMiB\00", align 1
@.str.45 = private unnamed_addr constant [32 x i8] c"V8.WasmModuleCodeSizeTopTierMiB\00", align 1
@.str.46 = private unnamed_addr constant [34 x i8] c"V8.WasmModuleCodeSizePercentFreed\00", align 1
@.str.47 = private unnamed_addr constant [38 x i8] c"V8.WasmModuleNumberOfCodeGCsTriggered\00", align 1
@.str.48 = private unnamed_addr constant [32 x i8] c"V8.WasmModuleNumberOfCodeSpaces\00", align 1
@.str.49 = private unnamed_addr constant [25 x i8] c"V8.WasmModulesPerIsolate\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"V8.WasmModulesPerEngine\00", align 1
@.str.51 = private unnamed_addr constant [25 x i8] c"V8.LiftoffBailoutReasons\00", align 1
@.str.52 = private unnamed_addr constant [35 x i8] c"V8.WasmMemoryProtectionKeysSupport\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"V8.WasmThrowCount\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"V8.WasmReThrowCount\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"V8.WasmCatchCount\00", align 1
@.str.56 = private unnamed_addr constant [19 x i8] c"V8.TurboFan1KTicks\00", align 1
@.str.57 = private unnamed_addr constant [20 x i8] c"V8.RegExpBacktracks\00", align 1
@.str.58 = private unnamed_addr constant [22 x i8] c"V8.GCIdleNotification\00", align 1
@.str.59 = private unnamed_addr constant [24 x i8] c"V8.GCIncrementalMarking\00", align 1
@.str.60 = private unnamed_addr constant [29 x i8] c"V8.GCIncrementalMarkingStart\00", align 1
@.str.61 = private unnamed_addr constant [32 x i8] c"V8.GCIncrementalMarkingFinalize\00", align 1
@.str.62 = private unnamed_addr constant [27 x i8] c"V8.GCLowMemoryNotification\00", align 1
@.str.63 = private unnamed_addr constant [26 x i8] c"V8.CollectSourcePositions\00", align 1
@.str.64 = private unnamed_addr constant [23 x i8] c"V8.CompileMicroSeconds\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"V8.CompileEvalMicroSeconds\00", align 1
@.str.66 = private unnamed_addr constant [32 x i8] c"V8.CompileSerializeMicroSeconds\00", align 1
@.str.67 = private unnamed_addr constant [34 x i8] c"V8.CompileDeserializeMicroSeconds\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"V8.CompileScriptMicroSeconds\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"V8.Execute\00", align 1
@_ZZN2v88internal8CountersC1EPNS0_7IsolateEE16kTimedHistograms = internal constant [52 x %struct.anon.1130] [%struct.anon.1130 { i64 2888, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 2936, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.71, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 2984, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3032, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3080, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.74, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3128, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.75, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3176, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3224, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3272, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.78, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3320, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.79, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3368, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3416, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.81, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3464, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.82, i32 0, i32 0), i32 10000, i32 0 }, %struct.anon.1130 { i64 3512, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.83, i32 0, i32 0), i32 100000, i32 0 }, %struct.anon.1130 { i64 3560, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.84, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 3608, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.85, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 3656, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.86, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 3704, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.87, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 3752, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 3800, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.89, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 3848, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.90, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 3896, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.91, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 3944, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.92, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 3992, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.93, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 4040, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.94, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 4088, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.95, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 4136, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.96, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 4184, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.97, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 4232, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.98, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 4280, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.99, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 4328, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.100, i32 0, i32 0), i32 100000000, i32 1 }, %struct.anon.1130 { i64 4376, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.101, i32 0, i32 0), i32 100000000, i32 1 }, %struct.anon.1130 { i64 4424, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.102, i32 0, i32 0), i32 100000000, i32 1 }, %struct.anon.1130 { i64 4472, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.103, i32 0, i32 0), i32 100000000, i32 1 }, %struct.anon.1130 { i64 4520, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.104, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 4568, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.105, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 4616, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.106, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 4664, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.107, i32 0, i32 0), i32 10000000, i32 1 }, %struct.anon.1130 { i64 4712, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.108, i32 0, i32 0), i32 1000, i32 0 }, %struct.anon.1130 { i64 4760, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.109, i32 0, i32 0), i32 1000, i32 0 }, %struct.anon.1130 { i64 4808, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.110, i32 0, i32 0), i32 1000, i32 0 }, %struct.anon.1130 { i64 4856, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.111, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 4904, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.112, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 4952, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.113, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 5000, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.114, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 5048, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.115, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 5096, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.116, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 5144, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.117, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 5192, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.118, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 5240, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.119, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 5288, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.120, i32 0, i32 0), i32 1000000, i32 1 }, %struct.anon.1130 { i64 5336, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.121, i32 0, i32 0), i32 1000000, i32 1 }], align 16
@.str.70 = private unnamed_addr constant [15 x i8] c"V8.GCCompactor\00", align 1
@.str.71 = private unnamed_addr constant [25 x i8] c"V8.GCCompactorBackground\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"V8.GCCompactorForeground\00", align 1
@.str.73 = private unnamed_addr constant [16 x i8] c"V8.GCFinalizeMC\00", align 1
@.str.74 = private unnamed_addr constant [26 x i8] c"V8.GCFinalizeMCBackground\00", align 1
@.str.75 = private unnamed_addr constant [26 x i8] c"V8.GCFinalizeMCForeground\00", align 1
@.str.76 = private unnamed_addr constant [29 x i8] c"V8.GCFinalizeMCMeasureMemory\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"V8.GCFinalizeMCReduceMemory\00", align 1
@.str.78 = private unnamed_addr constant [38 x i8] c"V8.GCFinalizeMCReduceMemoryBackground\00", align 1
@.str.79 = private unnamed_addr constant [38 x i8] c"V8.GCFinalizeMCReduceMemoryForeground\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"V8.GCScavenger\00", align 1
@.str.81 = private unnamed_addr constant [25 x i8] c"V8.GCScavengerBackground\00", align 1
@.str.82 = private unnamed_addr constant [25 x i8] c"V8.GCScavengerForeground\00", align 1
@.str.83 = private unnamed_addr constant [34 x i8] c"V8.MeasureMemoryDelayMilliseconds\00", align 1
@.str.84 = private unnamed_addr constant [22 x i8] c"V8.GC.TimeToSafepoint\00", align 1
@.str.85 = private unnamed_addr constant [35 x i8] c"V8.GC.TimeToCollectionOnBackground\00", align 1
@.str.86 = private unnamed_addr constant [27 x i8] c"V8.TurboFanOptimizePrepare\00", align 1
@.str.87 = private unnamed_addr constant [27 x i8] c"V8.TurboFanOptimizeExecute\00", align 1
@.str.88 = private unnamed_addr constant [28 x i8] c"V8.TurboFanOptimizeFinalize\00", align 1
@.str.89 = private unnamed_addr constant [35 x i8] c"V8.TurboFanOptimizeTotalForeground\00", align 1
@.str.90 = private unnamed_addr constant [35 x i8] c"V8.TurboFanOptimizeTotalBackground\00", align 1
@.str.91 = private unnamed_addr constant [29 x i8] c"V8.TurboFanOptimizeTotalTime\00", align 1
@.str.92 = private unnamed_addr constant [42 x i8] c"V8.TurboFanOptimizeNonConcurrentTotalTime\00", align 1
@.str.93 = private unnamed_addr constant [39 x i8] c"V8.TurboFanOptimizeConcurrentTotalTime\00", align 1
@.str.94 = private unnamed_addr constant [48 x i8] c"V8.TurboFanOptimizeForOnStackReplacementPrepare\00", align 1
@.str.95 = private unnamed_addr constant [48 x i8] c"V8.TurboFanOptimizeForOnStackReplacementExecute\00", align 1
@.str.96 = private unnamed_addr constant [49 x i8] c"V8.TurboFanOptimizeForOnStackReplacementFinalize\00", align 1
@.str.97 = private unnamed_addr constant [50 x i8] c"V8.TurboFanOptimizeForOnStackReplacementTotalTime\00", align 1
@.str.98 = private unnamed_addr constant [37 x i8] c"V8.WasmCompileModuleMicroSeconds.asm\00", align 1
@.str.99 = private unnamed_addr constant [38 x i8] c"V8.WasmCompileModuleMicroSeconds.wasm\00", align 1
@.str.100 = private unnamed_addr constant [38 x i8] c"V8.WasmCompileModuleAsyncMicroSeconds\00", align 1
@.str.101 = private unnamed_addr constant [42 x i8] c"V8.WasmCompileModuleStreamingMicroSeconds\00", align 1
@.str.102 = private unnamed_addr constant [41 x i8] c"V8.WasmFinishModuleStreamingMicroSeconds\00", align 1
@.str.103 = private unnamed_addr constant [32 x i8] c"V8.WasmTierUpModuleMicroSeconds\00", align 1
@.str.104 = private unnamed_addr constant [39 x i8] c"V8.WasmCompileFunctionMicroSeconds.asm\00", align 1
@.str.105 = private unnamed_addr constant [40 x i8] c"V8.WasmCompileFunctionMicroSeconds.wasm\00", align 1
@.str.106 = private unnamed_addr constant [42 x i8] c"V8.WasmInstantiateModuleMicroSeconds.wasm\00", align 1
@.str.107 = private unnamed_addr constant [41 x i8] c"V8.WasmInstantiateModuleMicroSeconds.asm\00", align 1
@.str.108 = private unnamed_addr constant [37 x i8] c"V8.WasmTimeBetweenThrowsMilliseconds\00", align 1
@.str.109 = private unnamed_addr constant [39 x i8] c"V8.WasmTimeBetweenRethrowsMilliseconds\00", align 1
@.str.110 = private unnamed_addr constant [36 x i8] c"V8.WasmTimeBetweenCatchMilliseconds\00", align 1
@.str.111 = private unnamed_addr constant [42 x i8] c"V8.CompileScriptMicroSeconds.ProduceCache\00", align 1
@.str.112 = private unnamed_addr constant [45 x i8] c"V8.CompileScriptMicroSeconds.IsolateCacheHit\00", align 1
@.str.113 = private unnamed_addr constant [42 x i8] c"V8.CompileScriptMicroSeconds.ConsumeCache\00", align 1
@.str.114 = private unnamed_addr constant [49 x i8] c"V8.CompileScriptMicroSeconds.ConsumeCache.Failed\00", align 1
@.str.115 = private unnamed_addr constant [43 x i8] c"V8.CompileScriptMicroSeconds.NoCache.Other\00", align 1
@.str.116 = private unnamed_addr constant [50 x i8] c"V8.CompileScriptMicroSeconds.NoCache.InlineScript\00", align 1
@.str.117 = private unnamed_addr constant [52 x i8] c"V8.CompileScriptMicroSeconds.NoCache.ScriptTooSmall\00", align 1
@.str.118 = private unnamed_addr constant [50 x i8] c"V8.CompileScriptMicroSeconds.NoCache.CacheTooCold\00", align 1
@.str.119 = private unnamed_addr constant [51 x i8] c"V8.CompileScriptMicroSeconds.StreamingFinalization\00", align 1
@.str.120 = private unnamed_addr constant [46 x i8] c"V8.CompileScriptMicroSeconds.BackgroundThread\00", align 1
@.str.121 = private unnamed_addr constant [48 x i8] c"V8.CompileFunctionMicroSeconds.BackgroundThread\00", align 1
@.str.122 = private unnamed_addr constant [27 x i8] c"V8.CompileLazyMicroSeconds\00", align 1
@.str.123 = private unnamed_addr constant [36 x i8] c"V8.MemoryExternalFragmentationTotal\00", align 1
@.str.124 = private unnamed_addr constant [39 x i8] c"V8.MemoryExternalFragmentationOldSpace\00", align 1
@.str.125 = private unnamed_addr constant [40 x i8] c"V8.MemoryExternalFragmentationCodeSpace\00", align 1
@.str.126 = private unnamed_addr constant [39 x i8] c"V8.MemoryExternalFragmentationMapSpace\00", align 1
@.str.127 = private unnamed_addr constant [38 x i8] c"V8.MemoryExternalFragmentationLoSpace\00", align 1
@.str.128 = private unnamed_addr constant [34 x i8] c"V8.MemoryHeapSampleTotalCommitted\00", align 1
@.str.129 = private unnamed_addr constant [29 x i8] c"V8.MemoryHeapSampleTotalUsed\00", align 1
@.str.130 = private unnamed_addr constant [37 x i8] c"V8.MemoryHeapSampleMapSpaceCommitted\00", align 1
@.str.131 = private unnamed_addr constant [38 x i8] c"V8.MemoryHeapSampleCodeSpaceCommitted\00", align 1
@.str.132 = private unnamed_addr constant [36 x i8] c"V8.MemoryHeapSampleMaximumCommitted\00", align 1
@_ZZN2v88internal8CountersC1EPNS0_7IsolateEE14kStatsCounters = internal constant [623 x %struct.anon.1134] [%struct.anon.1134 { i64 5832, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.133, i32 0, i32 0) }, %struct.anon.1134 { i64 5864, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.134, i32 0, i32 0) }, %struct.anon.1134 { i64 5896, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.135, i32 0, i32 0) }, %struct.anon.1134 { i64 5928, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.136, i32 0, i32 0) }, %struct.anon.1134 { i64 5960, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.137, i32 0, i32 0) }, %struct.anon.1134 { i64 5992, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.138, i32 0, i32 0) }, %struct.anon.1134 { i64 6024, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.139, i32 0, i32 0) }, %struct.anon.1134 { i64 6056, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.140, i32 0, i32 0) }, %struct.anon.1134 { i64 6088, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.141, i32 0, i32 0) }, %struct.anon.1134 { i64 6120, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.142, i32 0, i32 0) }, %struct.anon.1134 { i64 6152, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.143, i32 0, i32 0) }, %struct.anon.1134 { i64 6184, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.144, i32 0, i32 0) }, %struct.anon.1134 { i64 6216, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.145, i32 0, i32 0) }, %struct.anon.1134 { i64 6248, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.146, i32 0, i32 0) }, %struct.anon.1134 { i64 6280, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.147, i32 0, i32 0) }, %struct.anon.1134 { i64 6312, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.148, i32 0, i32 0) }, %struct.anon.1134 { i64 6344, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.149, i32 0, i32 0) }, %struct.anon.1134 { i64 6376, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.150, i32 0, i32 0) }, %struct.anon.1134 { i64 6408, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.151, i32 0, i32 0) }, %struct.anon.1134 { i64 6440, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.152, i32 0, i32 0) }, %struct.anon.1134 { i64 6472, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.153, i32 0, i32 0) }, %struct.anon.1134 { i64 6504, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.154, i32 0, i32 0) }, %struct.anon.1134 { i64 6536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.155, i32 0, i32 0) }, %struct.anon.1134 { i64 6568, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.156, i32 0, i32 0) }, %struct.anon.1134 { i64 6600, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.157, i32 0, i32 0) }, %struct.anon.1134 { i64 6632, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.158, i32 0, i32 0) }, %struct.anon.1134 { i64 6664, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.159, i32 0, i32 0) }, %struct.anon.1134 { i64 6696, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.160, i32 0, i32 0) }, %struct.anon.1134 { i64 6728, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.161, i32 0, i32 0) }, %struct.anon.1134 { i64 6760, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.162, i32 0, i32 0) }, %struct.anon.1134 { i64 6792, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.163, i32 0, i32 0) }, %struct.anon.1134 { i64 6824, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0) }, %struct.anon.1134 { i64 6856, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.165, i32 0, i32 0) }, %struct.anon.1134 { i64 6888, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.166, i32 0, i32 0) }, %struct.anon.1134 { i64 6920, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.167, i32 0, i32 0) }, %struct.anon.1134 { i64 6952, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.168, i32 0, i32 0) }, %struct.anon.1134 { i64 6984, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.169, i32 0, i32 0) }, %struct.anon.1134 { i64 7016, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.170, i32 0, i32 0) }, %struct.anon.1134 { i64 7048, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.171, i32 0, i32 0) }, %struct.anon.1134 { i64 7080, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.172, i32 0, i32 0) }, %struct.anon.1134 { i64 7112, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.173, i32 0, i32 0) }, %struct.anon.1134 { i64 7144, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.174, i32 0, i32 0) }, %struct.anon.1134 { i64 7176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.175, i32 0, i32 0) }, %struct.anon.1134 { i64 7208, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0) }, %struct.anon.1134 { i64 7240, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.177, i32 0, i32 0) }, %struct.anon.1134 { i64 7272, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.178, i32 0, i32 0) }, %struct.anon.1134 { i64 7304, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0) }, %struct.anon.1134 { i64 7336, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.180, i32 0, i32 0) }, %struct.anon.1134 { i64 7368, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.181, i32 0, i32 0) }, %struct.anon.1134 { i64 7400, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.182, i32 0, i32 0) }, %struct.anon.1134 { i64 7432, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.183, i32 0, i32 0) }, %struct.anon.1134 { i64 7464, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.184, i32 0, i32 0) }, %struct.anon.1134 { i64 7496, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0) }, %struct.anon.1134 { i64 7528, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.186, i32 0, i32 0) }, %struct.anon.1134 { i64 7560, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.187, i32 0, i32 0) }, %struct.anon.1134 { i64 7592, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.188, i32 0, i32 0) }, %struct.anon.1134 { i64 7624, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i32 0, i32 0) }, %struct.anon.1134 { i64 7656, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.190, i32 0, i32 0) }, %struct.anon.1134 { i64 7688, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.191, i32 0, i32 0) }, %struct.anon.1134 { i64 7720, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.192, i32 0, i32 0) }, %struct.anon.1134 { i64 7752, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.193, i32 0, i32 0) }, %struct.anon.1134 { i64 7784, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.194, i32 0, i32 0) }, %struct.anon.1134 { i64 7816, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.195, i32 0, i32 0) }, %struct.anon.1134 { i64 7848, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.196, i32 0, i32 0) }, %struct.anon.1134 { i64 7880, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.197, i32 0, i32 0) }, %struct.anon.1134 { i64 7912, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.198, i32 0, i32 0) }, %struct.anon.1134 { i64 7944, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.199, i32 0, i32 0) }, %struct.anon.1134 { i64 7976, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.200, i32 0, i32 0) }, %struct.anon.1134 { i64 8008, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.201, i32 0, i32 0) }, %struct.anon.1134 { i64 8264, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.202, i32 0, i32 0) }, %struct.anon.1134 { i64 8232, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.203, i32 0, i32 0) }, %struct.anon.1134 { i64 8328, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.204, i32 0, i32 0) }, %struct.anon.1134 { i64 8296, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.205, i32 0, i32 0) }, %struct.anon.1134 { i64 8392, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.206, i32 0, i32 0) }, %struct.anon.1134 { i64 8360, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.207, i32 0, i32 0) }, %struct.anon.1134 { i64 8456, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.208, i32 0, i32 0) }, %struct.anon.1134 { i64 8424, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.209, i32 0, i32 0) }, %struct.anon.1134 { i64 8520, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.210, i32 0, i32 0) }, %struct.anon.1134 { i64 8488, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.211, i32 0, i32 0) }, %struct.anon.1134 { i64 8584, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.212, i32 0, i32 0) }, %struct.anon.1134 { i64 8552, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.213, i32 0, i32 0) }, %struct.anon.1134 { i64 8648, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.214, i32 0, i32 0) }, %struct.anon.1134 { i64 8616, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.215, i32 0, i32 0) }, %struct.anon.1134 { i64 8712, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.216, i32 0, i32 0) }, %struct.anon.1134 { i64 8680, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0) }, %struct.anon.1134 { i64 8776, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.218, i32 0, i32 0) }, %struct.anon.1134 { i64 8744, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.219, i32 0, i32 0) }, %struct.anon.1134 { i64 8840, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.220, i32 0, i32 0) }, %struct.anon.1134 { i64 8808, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.221, i32 0, i32 0) }, %struct.anon.1134 { i64 8904, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.222, i32 0, i32 0) }, %struct.anon.1134 { i64 8872, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.223, i32 0, i32 0) }, %struct.anon.1134 { i64 8968, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.224, i32 0, i32 0) }, %struct.anon.1134 { i64 8936, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.225, i32 0, i32 0) }, %struct.anon.1134 { i64 9032, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.226, i32 0, i32 0) }, %struct.anon.1134 { i64 9000, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.227, i32 0, i32 0) }, %struct.anon.1134 { i64 9096, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.228, i32 0, i32 0) }, %struct.anon.1134 { i64 9064, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.229, i32 0, i32 0) }, %struct.anon.1134 { i64 9160, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.230, i32 0, i32 0) }, %struct.anon.1134 { i64 9128, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.231, i32 0, i32 0) }, %struct.anon.1134 { i64 9224, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.232, i32 0, i32 0) }, %struct.anon.1134 { i64 9192, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.233, i32 0, i32 0) }, %struct.anon.1134 { i64 9288, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.234, i32 0, i32 0) }, %struct.anon.1134 { i64 9256, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.235, i32 0, i32 0) }, %struct.anon.1134 { i64 9352, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.236, i32 0, i32 0) }, %struct.anon.1134 { i64 9320, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.237, i32 0, i32 0) }, %struct.anon.1134 { i64 9416, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.238, i32 0, i32 0) }, %struct.anon.1134 { i64 9384, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.239, i32 0, i32 0) }, %struct.anon.1134 { i64 9480, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.240, i32 0, i32 0) }, %struct.anon.1134 { i64 9448, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.241, i32 0, i32 0) }, %struct.anon.1134 { i64 9544, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.242, i32 0, i32 0) }, %struct.anon.1134 { i64 9512, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.243, i32 0, i32 0) }, %struct.anon.1134 { i64 9608, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.244, i32 0, i32 0) }, %struct.anon.1134 { i64 9576, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.245, i32 0, i32 0) }, %struct.anon.1134 { i64 9672, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.246, i32 0, i32 0) }, %struct.anon.1134 { i64 9640, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.247, i32 0, i32 0) }, %struct.anon.1134 { i64 9736, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.248, i32 0, i32 0) }, %struct.anon.1134 { i64 9704, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.249, i32 0, i32 0) }, %struct.anon.1134 { i64 9800, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.250, i32 0, i32 0) }, %struct.anon.1134 { i64 9768, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.251, i32 0, i32 0) }, %struct.anon.1134 { i64 9864, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.252, i32 0, i32 0) }, %struct.anon.1134 { i64 9832, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.253, i32 0, i32 0) }, %struct.anon.1134 { i64 9928, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.254, i32 0, i32 0) }, %struct.anon.1134 { i64 9896, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.255, i32 0, i32 0) }, %struct.anon.1134 { i64 9992, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.256, i32 0, i32 0) }, %struct.anon.1134 { i64 9960, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.257, i32 0, i32 0) }, %struct.anon.1134 { i64 10056, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.258, i32 0, i32 0) }, %struct.anon.1134 { i64 10024, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.259, i32 0, i32 0) }, %struct.anon.1134 { i64 10120, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.260, i32 0, i32 0) }, %struct.anon.1134 { i64 10088, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.261, i32 0, i32 0) }, %struct.anon.1134 { i64 10184, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.262, i32 0, i32 0) }, %struct.anon.1134 { i64 10152, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.263, i32 0, i32 0) }, %struct.anon.1134 { i64 10248, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.264, i32 0, i32 0) }, %struct.anon.1134 { i64 10216, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.265, i32 0, i32 0) }, %struct.anon.1134 { i64 10312, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.266, i32 0, i32 0) }, %struct.anon.1134 { i64 10280, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.267, i32 0, i32 0) }, %struct.anon.1134 { i64 10376, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.268, i32 0, i32 0) }, %struct.anon.1134 { i64 10344, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.269, i32 0, i32 0) }, %struct.anon.1134 { i64 10440, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.270, i32 0, i32 0) }, %struct.anon.1134 { i64 10408, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.271, i32 0, i32 0) }, %struct.anon.1134 { i64 10504, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.272, i32 0, i32 0) }, %struct.anon.1134 { i64 10472, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.273, i32 0, i32 0) }, %struct.anon.1134 { i64 10568, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.274, i32 0, i32 0) }, %struct.anon.1134 { i64 10536, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.275, i32 0, i32 0) }, %struct.anon.1134 { i64 10632, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.276, i32 0, i32 0) }, %struct.anon.1134 { i64 10600, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.277, i32 0, i32 0) }, %struct.anon.1134 { i64 10696, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.278, i32 0, i32 0) }, %struct.anon.1134 { i64 10664, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.279, i32 0, i32 0) }, %struct.anon.1134 { i64 10760, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.280, i32 0, i32 0) }, %struct.anon.1134 { i64 10728, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.281, i32 0, i32 0) }, %struct.anon.1134 { i64 10824, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.282, i32 0, i32 0) }, %struct.anon.1134 { i64 10792, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.283, i32 0, i32 0) }, %struct.anon.1134 { i64 10888, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.284, i32 0, i32 0) }, %struct.anon.1134 { i64 10856, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.285, i32 0, i32 0) }, %struct.anon.1134 { i64 10952, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.286, i32 0, i32 0) }, %struct.anon.1134 { i64 10920, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.287, i32 0, i32 0) }, %struct.anon.1134 { i64 11016, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.288, i32 0, i32 0) }, %struct.anon.1134 { i64 10984, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.289, i32 0, i32 0) }, %struct.anon.1134 { i64 11080, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.290, i32 0, i32 0) }, %struct.anon.1134 { i64 11048, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.291, i32 0, i32 0) }, %struct.anon.1134 { i64 11144, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.292, i32 0, i32 0) }, %struct.anon.1134 { i64 11112, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.293, i32 0, i32 0) }, %struct.anon.1134 { i64 11208, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.294, i32 0, i32 0) }, %struct.anon.1134 { i64 11176, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.295, i32 0, i32 0) }, %struct.anon.1134 { i64 11272, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.296, i32 0, i32 0) }, %struct.anon.1134 { i64 11240, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.297, i32 0, i32 0) }, %struct.anon.1134 { i64 11336, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.298, i32 0, i32 0) }, %struct.anon.1134 { i64 11304, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.299, i32 0, i32 0) }, %struct.anon.1134 { i64 11400, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.300, i32 0, i32 0) }, %struct.anon.1134 { i64 11368, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0) }, %struct.anon.1134 { i64 11464, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.302, i32 0, i32 0) }, %struct.anon.1134 { i64 11432, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.303, i32 0, i32 0) }, %struct.anon.1134 { i64 11528, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.304, i32 0, i32 0) }, %struct.anon.1134 { i64 11496, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.305, i32 0, i32 0) }, %struct.anon.1134 { i64 11592, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.306, i32 0, i32 0) }, %struct.anon.1134 { i64 11560, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.307, i32 0, i32 0) }, %struct.anon.1134 { i64 11656, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.308, i32 0, i32 0) }, %struct.anon.1134 { i64 11624, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.309, i32 0, i32 0) }, %struct.anon.1134 { i64 11720, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.310, i32 0, i32 0) }, %struct.anon.1134 { i64 11688, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.311, i32 0, i32 0) }, %struct.anon.1134 { i64 11784, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i32 0, i32 0) }, %struct.anon.1134 { i64 11752, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.313, i32 0, i32 0) }, %struct.anon.1134 { i64 11848, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.314, i32 0, i32 0) }, %struct.anon.1134 { i64 11816, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.315, i32 0, i32 0) }, %struct.anon.1134 { i64 11912, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.316, i32 0, i32 0) }, %struct.anon.1134 { i64 11880, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.317, i32 0, i32 0) }, %struct.anon.1134 { i64 11976, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.318, i32 0, i32 0) }, %struct.anon.1134 { i64 11944, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.319, i32 0, i32 0) }, %struct.anon.1134 { i64 12040, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.320, i32 0, i32 0) }, %struct.anon.1134 { i64 12008, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.321, i32 0, i32 0) }, %struct.anon.1134 { i64 12104, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.322, i32 0, i32 0) }, %struct.anon.1134 { i64 12072, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.323, i32 0, i32 0) }, %struct.anon.1134 { i64 12168, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.324, i32 0, i32 0) }, %struct.anon.1134 { i64 12136, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.325, i32 0, i32 0) }, %struct.anon.1134 { i64 12232, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.326, i32 0, i32 0) }, %struct.anon.1134 { i64 12200, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.327, i32 0, i32 0) }, %struct.anon.1134 { i64 12296, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.328, i32 0, i32 0) }, %struct.anon.1134 { i64 12264, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.329, i32 0, i32 0) }, %struct.anon.1134 { i64 12360, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.330, i32 0, i32 0) }, %struct.anon.1134 { i64 12328, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.331, i32 0, i32 0) }, %struct.anon.1134 { i64 12424, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.332, i32 0, i32 0) }, %struct.anon.1134 { i64 12392, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.333, i32 0, i32 0) }, %struct.anon.1134 { i64 12488, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.334, i32 0, i32 0) }, %struct.anon.1134 { i64 12456, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.335, i32 0, i32 0) }, %struct.anon.1134 { i64 12552, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.336, i32 0, i32 0) }, %struct.anon.1134 { i64 12520, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.337, i32 0, i32 0) }, %struct.anon.1134 { i64 12616, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.338, i32 0, i32 0) }, %struct.anon.1134 { i64 12584, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.339, i32 0, i32 0) }, %struct.anon.1134 { i64 12680, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.340, i32 0, i32 0) }, %struct.anon.1134 { i64 12648, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.341, i32 0, i32 0) }, %struct.anon.1134 { i64 12744, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.342, i32 0, i32 0) }, %struct.anon.1134 { i64 12712, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.343, i32 0, i32 0) }, %struct.anon.1134 { i64 12808, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.344, i32 0, i32 0) }, %struct.anon.1134 { i64 12776, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.345, i32 0, i32 0) }, %struct.anon.1134 { i64 12872, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.346, i32 0, i32 0) }, %struct.anon.1134 { i64 12840, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.347, i32 0, i32 0) }, %struct.anon.1134 { i64 12936, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.348, i32 0, i32 0) }, %struct.anon.1134 { i64 12904, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.349, i32 0, i32 0) }, %struct.anon.1134 { i64 13000, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0) }, %struct.anon.1134 { i64 12968, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.351, i32 0, i32 0) }, %struct.anon.1134 { i64 13064, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.352, i32 0, i32 0) }, %struct.anon.1134 { i64 13032, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.353, i32 0, i32 0) }, %struct.anon.1134 { i64 13128, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.354, i32 0, i32 0) }, %struct.anon.1134 { i64 13096, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.355, i32 0, i32 0) }, %struct.anon.1134 { i64 13192, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.356, i32 0, i32 0) }, %struct.anon.1134 { i64 13160, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.357, i32 0, i32 0) }, %struct.anon.1134 { i64 13256, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.358, i32 0, i32 0) }, %struct.anon.1134 { i64 13224, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.359, i32 0, i32 0) }, %struct.anon.1134 { i64 13320, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.360, i32 0, i32 0) }, %struct.anon.1134 { i64 13288, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.361, i32 0, i32 0) }, %struct.anon.1134 { i64 13384, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.362, i32 0, i32 0) }, %struct.anon.1134 { i64 13352, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.363, i32 0, i32 0) }, %struct.anon.1134 { i64 13448, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.364, i32 0, i32 0) }, %struct.anon.1134 { i64 13416, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.365, i32 0, i32 0) }, %struct.anon.1134 { i64 13512, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.366, i32 0, i32 0) }, %struct.anon.1134 { i64 13480, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.367, i32 0, i32 0) }, %struct.anon.1134 { i64 13576, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.368, i32 0, i32 0) }, %struct.anon.1134 { i64 13544, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.369, i32 0, i32 0) }, %struct.anon.1134 { i64 13640, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.370, i32 0, i32 0) }, %struct.anon.1134 { i64 13608, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.371, i32 0, i32 0) }, %struct.anon.1134 { i64 13704, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.372, i32 0, i32 0) }, %struct.anon.1134 { i64 13672, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.373, i32 0, i32 0) }, %struct.anon.1134 { i64 13768, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.374, i32 0, i32 0) }, %struct.anon.1134 { i64 13736, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.375, i32 0, i32 0) }, %struct.anon.1134 { i64 13832, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.376, i32 0, i32 0) }, %struct.anon.1134 { i64 13800, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.377, i32 0, i32 0) }, %struct.anon.1134 { i64 13896, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.378, i32 0, i32 0) }, %struct.anon.1134 { i64 13864, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.379, i32 0, i32 0) }, %struct.anon.1134 { i64 13960, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.380, i32 0, i32 0) }, %struct.anon.1134 { i64 13928, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.381, i32 0, i32 0) }, %struct.anon.1134 { i64 14024, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.382, i32 0, i32 0) }, %struct.anon.1134 { i64 13992, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.383, i32 0, i32 0) }, %struct.anon.1134 { i64 14088, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.384, i32 0, i32 0) }, %struct.anon.1134 { i64 14056, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.385, i32 0, i32 0) }, %struct.anon.1134 { i64 14152, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.386, i32 0, i32 0) }, %struct.anon.1134 { i64 14120, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.387, i32 0, i32 0) }, %struct.anon.1134 { i64 14216, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.388, i32 0, i32 0) }, %struct.anon.1134 { i64 14184, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.389, i32 0, i32 0) }, %struct.anon.1134 { i64 14280, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.390, i32 0, i32 0) }, %struct.anon.1134 { i64 14248, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.391, i32 0, i32 0) }, %struct.anon.1134 { i64 14344, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.392, i32 0, i32 0) }, %struct.anon.1134 { i64 14312, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.393, i32 0, i32 0) }, %struct.anon.1134 { i64 14408, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.394, i32 0, i32 0) }, %struct.anon.1134 { i64 14376, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.395, i32 0, i32 0) }, %struct.anon.1134 { i64 14472, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.396, i32 0, i32 0) }, %struct.anon.1134 { i64 14440, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.397, i32 0, i32 0) }, %struct.anon.1134 { i64 14536, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.398, i32 0, i32 0) }, %struct.anon.1134 { i64 14504, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.399, i32 0, i32 0) }, %struct.anon.1134 { i64 14600, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.400, i32 0, i32 0) }, %struct.anon.1134 { i64 14568, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.401, i32 0, i32 0) }, %struct.anon.1134 { i64 14664, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.402, i32 0, i32 0) }, %struct.anon.1134 { i64 14632, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.403, i32 0, i32 0) }, %struct.anon.1134 { i64 14728, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.404, i32 0, i32 0) }, %struct.anon.1134 { i64 14696, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.405, i32 0, i32 0) }, %struct.anon.1134 { i64 14792, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.406, i32 0, i32 0) }, %struct.anon.1134 { i64 14760, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.407, i32 0, i32 0) }, %struct.anon.1134 { i64 14856, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.408, i32 0, i32 0) }, %struct.anon.1134 { i64 14824, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.409, i32 0, i32 0) }, %struct.anon.1134 { i64 14920, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.410, i32 0, i32 0) }, %struct.anon.1134 { i64 14888, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.411, i32 0, i32 0) }, %struct.anon.1134 { i64 14984, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.412, i32 0, i32 0) }, %struct.anon.1134 { i64 14952, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.413, i32 0, i32 0) }, %struct.anon.1134 { i64 15048, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.414, i32 0, i32 0) }, %struct.anon.1134 { i64 15016, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.415, i32 0, i32 0) }, %struct.anon.1134 { i64 15112, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.416, i32 0, i32 0) }, %struct.anon.1134 { i64 15080, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.417, i32 0, i32 0) }, %struct.anon.1134 { i64 15176, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.418, i32 0, i32 0) }, %struct.anon.1134 { i64 15144, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.419, i32 0, i32 0) }, %struct.anon.1134 { i64 15240, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.420, i32 0, i32 0) }, %struct.anon.1134 { i64 15208, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.421, i32 0, i32 0) }, %struct.anon.1134 { i64 15304, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.422, i32 0, i32 0) }, %struct.anon.1134 { i64 15272, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.423, i32 0, i32 0) }, %struct.anon.1134 { i64 15368, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.424, i32 0, i32 0) }, %struct.anon.1134 { i64 15336, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.425, i32 0, i32 0) }, %struct.anon.1134 { i64 15432, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.426, i32 0, i32 0) }, %struct.anon.1134 { i64 15400, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.427, i32 0, i32 0) }, %struct.anon.1134 { i64 15496, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.428, i32 0, i32 0) }, %struct.anon.1134 { i64 15464, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.429, i32 0, i32 0) }, %struct.anon.1134 { i64 15560, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.430, i32 0, i32 0) }, %struct.anon.1134 { i64 15528, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.431, i32 0, i32 0) }, %struct.anon.1134 { i64 15624, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.432, i32 0, i32 0) }, %struct.anon.1134 { i64 15592, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.433, i32 0, i32 0) }, %struct.anon.1134 { i64 15688, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.434, i32 0, i32 0) }, %struct.anon.1134 { i64 15656, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.435, i32 0, i32 0) }, %struct.anon.1134 { i64 15752, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.436, i32 0, i32 0) }, %struct.anon.1134 { i64 15720, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.437, i32 0, i32 0) }, %struct.anon.1134 { i64 15816, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.438, i32 0, i32 0) }, %struct.anon.1134 { i64 15784, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.439, i32 0, i32 0) }, %struct.anon.1134 { i64 15880, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.440, i32 0, i32 0) }, %struct.anon.1134 { i64 15848, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.441, i32 0, i32 0) }, %struct.anon.1134 { i64 15944, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.442, i32 0, i32 0) }, %struct.anon.1134 { i64 15912, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.443, i32 0, i32 0) }, %struct.anon.1134 { i64 16008, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.444, i32 0, i32 0) }, %struct.anon.1134 { i64 15976, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.445, i32 0, i32 0) }, %struct.anon.1134 { i64 16072, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.446, i32 0, i32 0) }, %struct.anon.1134 { i64 16040, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.447, i32 0, i32 0) }, %struct.anon.1134 { i64 16136, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.448, i32 0, i32 0) }, %struct.anon.1134 { i64 16104, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.449, i32 0, i32 0) }, %struct.anon.1134 { i64 16200, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.450, i32 0, i32 0) }, %struct.anon.1134 { i64 16168, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.451, i32 0, i32 0) }, %struct.anon.1134 { i64 16264, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.452, i32 0, i32 0) }, %struct.anon.1134 { i64 16232, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.453, i32 0, i32 0) }, %struct.anon.1134 { i64 16328, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.454, i32 0, i32 0) }, %struct.anon.1134 { i64 16296, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.455, i32 0, i32 0) }, %struct.anon.1134 { i64 16392, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.456, i32 0, i32 0) }, %struct.anon.1134 { i64 16360, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.457, i32 0, i32 0) }, %struct.anon.1134 { i64 16456, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.458, i32 0, i32 0) }, %struct.anon.1134 { i64 16424, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.459, i32 0, i32 0) }, %struct.anon.1134 { i64 16520, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.460, i32 0, i32 0) }, %struct.anon.1134 { i64 16488, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.461, i32 0, i32 0) }, %struct.anon.1134 { i64 16584, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.462, i32 0, i32 0) }, %struct.anon.1134 { i64 16552, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.463, i32 0, i32 0) }, %struct.anon.1134 { i64 16648, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.464, i32 0, i32 0) }, %struct.anon.1134 { i64 16616, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.465, i32 0, i32 0) }, %struct.anon.1134 { i64 16712, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.466, i32 0, i32 0) }, %struct.anon.1134 { i64 16680, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.467, i32 0, i32 0) }, %struct.anon.1134 { i64 16776, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.468, i32 0, i32 0) }, %struct.anon.1134 { i64 16744, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.469, i32 0, i32 0) }, %struct.anon.1134 { i64 16840, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.470, i32 0, i32 0) }, %struct.anon.1134 { i64 16808, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.471, i32 0, i32 0) }, %struct.anon.1134 { i64 16904, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.472, i32 0, i32 0) }, %struct.anon.1134 { i64 16872, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.473, i32 0, i32 0) }, %struct.anon.1134 { i64 16968, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.474, i32 0, i32 0) }, %struct.anon.1134 { i64 16936, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.475, i32 0, i32 0) }, %struct.anon.1134 { i64 17032, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.476, i32 0, i32 0) }, %struct.anon.1134 { i64 17000, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.477, i32 0, i32 0) }, %struct.anon.1134 { i64 17096, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.478, i32 0, i32 0) }, %struct.anon.1134 { i64 17064, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.479, i32 0, i32 0) }, %struct.anon.1134 { i64 17160, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.480, i32 0, i32 0) }, %struct.anon.1134 { i64 17128, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.481, i32 0, i32 0) }, %struct.anon.1134 { i64 17224, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.482, i32 0, i32 0) }, %struct.anon.1134 { i64 17192, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.483, i32 0, i32 0) }, %struct.anon.1134 { i64 17288, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.484, i32 0, i32 0) }, %struct.anon.1134 { i64 17256, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.485, i32 0, i32 0) }, %struct.anon.1134 { i64 17352, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.486, i32 0, i32 0) }, %struct.anon.1134 { i64 17320, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.487, i32 0, i32 0) }, %struct.anon.1134 { i64 17416, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.488, i32 0, i32 0) }, %struct.anon.1134 { i64 17384, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.489, i32 0, i32 0) }, %struct.anon.1134 { i64 17480, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.490, i32 0, i32 0) }, %struct.anon.1134 { i64 17448, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.491, i32 0, i32 0) }, %struct.anon.1134 { i64 17544, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.492, i32 0, i32 0) }, %struct.anon.1134 { i64 17512, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.493, i32 0, i32 0) }, %struct.anon.1134 { i64 17608, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.494, i32 0, i32 0) }, %struct.anon.1134 { i64 17576, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.495, i32 0, i32 0) }, %struct.anon.1134 { i64 17672, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.496, i32 0, i32 0) }, %struct.anon.1134 { i64 17640, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.497, i32 0, i32 0) }, %struct.anon.1134 { i64 17736, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.498, i32 0, i32 0) }, %struct.anon.1134 { i64 17704, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.499, i32 0, i32 0) }, %struct.anon.1134 { i64 17800, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.500, i32 0, i32 0) }, %struct.anon.1134 { i64 17768, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.501, i32 0, i32 0) }, %struct.anon.1134 { i64 17864, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.502, i32 0, i32 0) }, %struct.anon.1134 { i64 17832, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.503, i32 0, i32 0) }, %struct.anon.1134 { i64 17928, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.504, i32 0, i32 0) }, %struct.anon.1134 { i64 17896, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.505, i32 0, i32 0) }, %struct.anon.1134 { i64 17992, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.506, i32 0, i32 0) }, %struct.anon.1134 { i64 17960, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.507, i32 0, i32 0) }, %struct.anon.1134 { i64 18056, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.508, i32 0, i32 0) }, %struct.anon.1134 { i64 18024, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.509, i32 0, i32 0) }, %struct.anon.1134 { i64 18120, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.510, i32 0, i32 0) }, %struct.anon.1134 { i64 18088, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.511, i32 0, i32 0) }, %struct.anon.1134 { i64 18184, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.512, i32 0, i32 0) }, %struct.anon.1134 { i64 18152, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.513, i32 0, i32 0) }, %struct.anon.1134 { i64 18248, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.514, i32 0, i32 0) }, %struct.anon.1134 { i64 18216, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.515, i32 0, i32 0) }, %struct.anon.1134 { i64 18312, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.516, i32 0, i32 0) }, %struct.anon.1134 { i64 18280, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.517, i32 0, i32 0) }, %struct.anon.1134 { i64 18376, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.518, i32 0, i32 0) }, %struct.anon.1134 { i64 18344, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.519, i32 0, i32 0) }, %struct.anon.1134 { i64 18440, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.520, i32 0, i32 0) }, %struct.anon.1134 { i64 18408, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.521, i32 0, i32 0) }, %struct.anon.1134 { i64 18504, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.522, i32 0, i32 0) }, %struct.anon.1134 { i64 18472, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.523, i32 0, i32 0) }, %struct.anon.1134 { i64 18568, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.524, i32 0, i32 0) }, %struct.anon.1134 { i64 18536, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.525, i32 0, i32 0) }, %struct.anon.1134 { i64 18632, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.526, i32 0, i32 0) }, %struct.anon.1134 { i64 18600, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.527, i32 0, i32 0) }, %struct.anon.1134 { i64 18696, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.528, i32 0, i32 0) }, %struct.anon.1134 { i64 18664, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.529, i32 0, i32 0) }, %struct.anon.1134 { i64 18760, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.530, i32 0, i32 0) }, %struct.anon.1134 { i64 18728, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.531, i32 0, i32 0) }, %struct.anon.1134 { i64 18824, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.532, i32 0, i32 0) }, %struct.anon.1134 { i64 18792, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.533, i32 0, i32 0) }, %struct.anon.1134 { i64 18888, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.534, i32 0, i32 0) }, %struct.anon.1134 { i64 18856, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.535, i32 0, i32 0) }, %struct.anon.1134 { i64 18952, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.536, i32 0, i32 0) }, %struct.anon.1134 { i64 18920, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.537, i32 0, i32 0) }, %struct.anon.1134 { i64 19016, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.538, i32 0, i32 0) }, %struct.anon.1134 { i64 18984, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.539, i32 0, i32 0) }, %struct.anon.1134 { i64 19080, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.540, i32 0, i32 0) }, %struct.anon.1134 { i64 19048, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.541, i32 0, i32 0) }, %struct.anon.1134 { i64 19144, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.542, i32 0, i32 0) }, %struct.anon.1134 { i64 19112, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.543, i32 0, i32 0) }, %struct.anon.1134 { i64 19208, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.544, i32 0, i32 0) }, %struct.anon.1134 { i64 19176, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.545, i32 0, i32 0) }, %struct.anon.1134 { i64 19272, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.546, i32 0, i32 0) }, %struct.anon.1134 { i64 19240, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.547, i32 0, i32 0) }, %struct.anon.1134 { i64 19336, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.548, i32 0, i32 0) }, %struct.anon.1134 { i64 19304, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.549, i32 0, i32 0) }, %struct.anon.1134 { i64 19400, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.550, i32 0, i32 0) }, %struct.anon.1134 { i64 19368, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.551, i32 0, i32 0) }, %struct.anon.1134 { i64 19464, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.552, i32 0, i32 0) }, %struct.anon.1134 { i64 19432, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.553, i32 0, i32 0) }, %struct.anon.1134 { i64 19528, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.554, i32 0, i32 0) }, %struct.anon.1134 { i64 19496, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.555, i32 0, i32 0) }, %struct.anon.1134 { i64 19592, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.556, i32 0, i32 0) }, %struct.anon.1134 { i64 19560, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.557, i32 0, i32 0) }, %struct.anon.1134 { i64 19656, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.558, i32 0, i32 0) }, %struct.anon.1134 { i64 19624, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.559, i32 0, i32 0) }, %struct.anon.1134 { i64 19720, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.560, i32 0, i32 0) }, %struct.anon.1134 { i64 19688, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.561, i32 0, i32 0) }, %struct.anon.1134 { i64 19784, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.562, i32 0, i32 0) }, %struct.anon.1134 { i64 19752, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.563, i32 0, i32 0) }, %struct.anon.1134 { i64 19848, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.564, i32 0, i32 0) }, %struct.anon.1134 { i64 19816, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.565, i32 0, i32 0) }, %struct.anon.1134 { i64 19912, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.566, i32 0, i32 0) }, %struct.anon.1134 { i64 19880, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.567, i32 0, i32 0) }, %struct.anon.1134 { i64 19976, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.568, i32 0, i32 0) }, %struct.anon.1134 { i64 19944, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.569, i32 0, i32 0) }, %struct.anon.1134 { i64 20040, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.570, i32 0, i32 0) }, %struct.anon.1134 { i64 20008, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.571, i32 0, i32 0) }, %struct.anon.1134 { i64 20104, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.572, i32 0, i32 0) }, %struct.anon.1134 { i64 20072, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.573, i32 0, i32 0) }, %struct.anon.1134 { i64 20168, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.574, i32 0, i32 0) }, %struct.anon.1134 { i64 20136, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.575, i32 0, i32 0) }, %struct.anon.1134 { i64 20232, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.576, i32 0, i32 0) }, %struct.anon.1134 { i64 20200, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.577, i32 0, i32 0) }, %struct.anon.1134 { i64 20296, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.578, i32 0, i32 0) }, %struct.anon.1134 { i64 20264, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.579, i32 0, i32 0) }, %struct.anon.1134 { i64 20360, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.580, i32 0, i32 0) }, %struct.anon.1134 { i64 20328, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.581, i32 0, i32 0) }, %struct.anon.1134 { i64 20424, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.582, i32 0, i32 0) }, %struct.anon.1134 { i64 20392, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.583, i32 0, i32 0) }, %struct.anon.1134 { i64 20488, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.584, i32 0, i32 0) }, %struct.anon.1134 { i64 20456, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.585, i32 0, i32 0) }, %struct.anon.1134 { i64 20552, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.586, i32 0, i32 0) }, %struct.anon.1134 { i64 20520, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.587, i32 0, i32 0) }, %struct.anon.1134 { i64 20616, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.588, i32 0, i32 0) }, %struct.anon.1134 { i64 20584, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.589, i32 0, i32 0) }, %struct.anon.1134 { i64 20680, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.590, i32 0, i32 0) }, %struct.anon.1134 { i64 20648, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.591, i32 0, i32 0) }, %struct.anon.1134 { i64 20744, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.592, i32 0, i32 0) }, %struct.anon.1134 { i64 20712, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.593, i32 0, i32 0) }, %struct.anon.1134 { i64 20808, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.594, i32 0, i32 0) }, %struct.anon.1134 { i64 20776, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.595, i32 0, i32 0) }, %struct.anon.1134 { i64 20872, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.596, i32 0, i32 0) }, %struct.anon.1134 { i64 20840, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.597, i32 0, i32 0) }, %struct.anon.1134 { i64 20936, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.598, i32 0, i32 0) }, %struct.anon.1134 { i64 20904, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.599, i32 0, i32 0) }, %struct.anon.1134 { i64 21000, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.600, i32 0, i32 0) }, %struct.anon.1134 { i64 20968, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.601, i32 0, i32 0) }, %struct.anon.1134 { i64 21064, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.602, i32 0, i32 0) }, %struct.anon.1134 { i64 21032, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.603, i32 0, i32 0) }, %struct.anon.1134 { i64 21128, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.604, i32 0, i32 0) }, %struct.anon.1134 { i64 21096, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.605, i32 0, i32 0) }, %struct.anon.1134 { i64 21192, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.606, i32 0, i32 0) }, %struct.anon.1134 { i64 21160, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.607, i32 0, i32 0) }, %struct.anon.1134 { i64 21256, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.608, i32 0, i32 0) }, %struct.anon.1134 { i64 21224, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.609, i32 0, i32 0) }, %struct.anon.1134 { i64 21320, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.610, i32 0, i32 0) }, %struct.anon.1134 { i64 21288, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.611, i32 0, i32 0) }, %struct.anon.1134 { i64 21384, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.612, i32 0, i32 0) }, %struct.anon.1134 { i64 21352, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.613, i32 0, i32 0) }, %struct.anon.1134 { i64 21448, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.614, i32 0, i32 0) }, %struct.anon.1134 { i64 21416, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.615, i32 0, i32 0) }, %struct.anon.1134 { i64 21512, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.616, i32 0, i32 0) }, %struct.anon.1134 { i64 21480, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.617, i32 0, i32 0) }, %struct.anon.1134 { i64 21576, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.618, i32 0, i32 0) }, %struct.anon.1134 { i64 21544, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.619, i32 0, i32 0) }, %struct.anon.1134 { i64 21640, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.620, i32 0, i32 0) }, %struct.anon.1134 { i64 21608, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.621, i32 0, i32 0) }, %struct.anon.1134 { i64 21704, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.622, i32 0, i32 0) }, %struct.anon.1134 { i64 21672, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.623, i32 0, i32 0) }, %struct.anon.1134 { i64 21768, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.624, i32 0, i32 0) }, %struct.anon.1134 { i64 21736, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.625, i32 0, i32 0) }, %struct.anon.1134 { i64 21832, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.626, i32 0, i32 0) }, %struct.anon.1134 { i64 21800, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.627, i32 0, i32 0) }, %struct.anon.1134 { i64 21896, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.628, i32 0, i32 0) }, %struct.anon.1134 { i64 21864, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.629, i32 0, i32 0) }, %struct.anon.1134 { i64 21960, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.630, i32 0, i32 0) }, %struct.anon.1134 { i64 21928, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.631, i32 0, i32 0) }, %struct.anon.1134 { i64 22024, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.632, i32 0, i32 0) }, %struct.anon.1134 { i64 21992, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.633, i32 0, i32 0) }, %struct.anon.1134 { i64 22088, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.634, i32 0, i32 0) }, %struct.anon.1134 { i64 22056, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.635, i32 0, i32 0) }, %struct.anon.1134 { i64 22152, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.636, i32 0, i32 0) }, %struct.anon.1134 { i64 22120, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.637, i32 0, i32 0) }, %struct.anon.1134 { i64 22216, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.638, i32 0, i32 0) }, %struct.anon.1134 { i64 22184, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.639, i32 0, i32 0) }, %struct.anon.1134 { i64 22280, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.640, i32 0, i32 0) }, %struct.anon.1134 { i64 22248, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.641, i32 0, i32 0) }, %struct.anon.1134 { i64 22344, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.642, i32 0, i32 0) }, %struct.anon.1134 { i64 22312, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.643, i32 0, i32 0) }, %struct.anon.1134 { i64 22408, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.644, i32 0, i32 0) }, %struct.anon.1134 { i64 22376, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.645, i32 0, i32 0) }, %struct.anon.1134 { i64 22472, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.646, i32 0, i32 0) }, %struct.anon.1134 { i64 22440, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.647, i32 0, i32 0) }, %struct.anon.1134 { i64 22536, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.648, i32 0, i32 0) }, %struct.anon.1134 { i64 22504, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.649, i32 0, i32 0) }, %struct.anon.1134 { i64 22600, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.650, i32 0, i32 0) }, %struct.anon.1134 { i64 22568, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.651, i32 0, i32 0) }, %struct.anon.1134 { i64 22664, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.652, i32 0, i32 0) }, %struct.anon.1134 { i64 22632, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.653, i32 0, i32 0) }, %struct.anon.1134 { i64 22728, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.654, i32 0, i32 0) }, %struct.anon.1134 { i64 22696, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.655, i32 0, i32 0) }, %struct.anon.1134 { i64 22792, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.656, i32 0, i32 0) }, %struct.anon.1134 { i64 22760, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.657, i32 0, i32 0) }, %struct.anon.1134 { i64 22856, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.658, i32 0, i32 0) }, %struct.anon.1134 { i64 22824, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.659, i32 0, i32 0) }, %struct.anon.1134 { i64 22920, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.660, i32 0, i32 0) }, %struct.anon.1134 { i64 22888, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.661, i32 0, i32 0) }, %struct.anon.1134 { i64 22984, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.662, i32 0, i32 0) }, %struct.anon.1134 { i64 22952, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.663, i32 0, i32 0) }, %struct.anon.1134 { i64 23048, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.664, i32 0, i32 0) }, %struct.anon.1134 { i64 23016, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.665, i32 0, i32 0) }, %struct.anon.1134 { i64 23112, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.666, i32 0, i32 0) }, %struct.anon.1134 { i64 23080, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.667, i32 0, i32 0) }, %struct.anon.1134 { i64 23176, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.668, i32 0, i32 0) }, %struct.anon.1134 { i64 23144, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.669, i32 0, i32 0) }, %struct.anon.1134 { i64 23240, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.670, i32 0, i32 0) }, %struct.anon.1134 { i64 23208, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.671, i32 0, i32 0) }, %struct.anon.1134 { i64 23304, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.672, i32 0, i32 0) }, %struct.anon.1134 { i64 23272, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.673, i32 0, i32 0) }, %struct.anon.1134 { i64 23368, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.674, i32 0, i32 0) }, %struct.anon.1134 { i64 23336, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.675, i32 0, i32 0) }, %struct.anon.1134 { i64 23432, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.676, i32 0, i32 0) }, %struct.anon.1134 { i64 23400, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.677, i32 0, i32 0) }, %struct.anon.1134 { i64 23496, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.678, i32 0, i32 0) }, %struct.anon.1134 { i64 23464, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.679, i32 0, i32 0) }, %struct.anon.1134 { i64 23560, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.680, i32 0, i32 0) }, %struct.anon.1134 { i64 23528, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.681, i32 0, i32 0) }, %struct.anon.1134 { i64 23624, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.682, i32 0, i32 0) }, %struct.anon.1134 { i64 23592, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.683, i32 0, i32 0) }, %struct.anon.1134 { i64 23688, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.684, i32 0, i32 0) }, %struct.anon.1134 { i64 23656, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.685, i32 0, i32 0) }, %struct.anon.1134 { i64 23752, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.686, i32 0, i32 0) }, %struct.anon.1134 { i64 23720, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.687, i32 0, i32 0) }, %struct.anon.1134 { i64 23816, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.688, i32 0, i32 0) }, %struct.anon.1134 { i64 23784, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.689, i32 0, i32 0) }, %struct.anon.1134 { i64 23880, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.690, i32 0, i32 0) }, %struct.anon.1134 { i64 23848, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.691, i32 0, i32 0) }, %struct.anon.1134 { i64 23944, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.692, i32 0, i32 0) }, %struct.anon.1134 { i64 23912, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.693, i32 0, i32 0) }, %struct.anon.1134 { i64 24008, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.694, i32 0, i32 0) }, %struct.anon.1134 { i64 23976, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.695, i32 0, i32 0) }, %struct.anon.1134 { i64 24072, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.696, i32 0, i32 0) }, %struct.anon.1134 { i64 24040, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.697, i32 0, i32 0) }, %struct.anon.1134 { i64 24136, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.698, i32 0, i32 0) }, %struct.anon.1134 { i64 24104, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.699, i32 0, i32 0) }, %struct.anon.1134 { i64 24200, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.700, i32 0, i32 0) }, %struct.anon.1134 { i64 24168, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.701, i32 0, i32 0) }, %struct.anon.1134 { i64 24264, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.702, i32 0, i32 0) }, %struct.anon.1134 { i64 24232, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.703, i32 0, i32 0) }, %struct.anon.1134 { i64 24328, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.704, i32 0, i32 0) }, %struct.anon.1134 { i64 24296, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.705, i32 0, i32 0) }, %struct.anon.1134 { i64 24392, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.706, i32 0, i32 0) }, %struct.anon.1134 { i64 24360, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.707, i32 0, i32 0) }, %struct.anon.1134 { i64 24456, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.708, i32 0, i32 0) }, %struct.anon.1134 { i64 24424, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.709, i32 0, i32 0) }, %struct.anon.1134 { i64 24520, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.710, i32 0, i32 0) }, %struct.anon.1134 { i64 24488, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.711, i32 0, i32 0) }, %struct.anon.1134 { i64 24584, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.712, i32 0, i32 0) }, %struct.anon.1134 { i64 24552, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.713, i32 0, i32 0) }, %struct.anon.1134 { i64 24648, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.714, i32 0, i32 0) }, %struct.anon.1134 { i64 24616, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.715, i32 0, i32 0) }, %struct.anon.1134 { i64 24712, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.716, i32 0, i32 0) }, %struct.anon.1134 { i64 24680, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.717, i32 0, i32 0) }, %struct.anon.1134 { i64 24776, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.718, i32 0, i32 0) }, %struct.anon.1134 { i64 24744, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.719, i32 0, i32 0) }, %struct.anon.1134 { i64 24840, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.720, i32 0, i32 0) }, %struct.anon.1134 { i64 24808, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.721, i32 0, i32 0) }, %struct.anon.1134 { i64 24904, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.722, i32 0, i32 0) }, %struct.anon.1134 { i64 24872, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.723, i32 0, i32 0) }, %struct.anon.1134 { i64 24968, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.724, i32 0, i32 0) }, %struct.anon.1134 { i64 24936, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.725, i32 0, i32 0) }, %struct.anon.1134 { i64 25032, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.726, i32 0, i32 0) }, %struct.anon.1134 { i64 25000, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.727, i32 0, i32 0) }, %struct.anon.1134 { i64 25096, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.728, i32 0, i32 0) }, %struct.anon.1134 { i64 25064, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.729, i32 0, i32 0) }, %struct.anon.1134 { i64 25160, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.730, i32 0, i32 0) }, %struct.anon.1134 { i64 25128, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.731, i32 0, i32 0) }, %struct.anon.1134 { i64 25224, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.732, i32 0, i32 0) }, %struct.anon.1134 { i64 25192, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.733, i32 0, i32 0) }, %struct.anon.1134 { i64 25288, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.734, i32 0, i32 0) }, %struct.anon.1134 { i64 25256, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.735, i32 0, i32 0) }, %struct.anon.1134 { i64 25352, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.736, i32 0, i32 0) }, %struct.anon.1134 { i64 25320, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.737, i32 0, i32 0) }, %struct.anon.1134 { i64 25416, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.738, i32 0, i32 0) }, %struct.anon.1134 { i64 25384, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.739, i32 0, i32 0) }, %struct.anon.1134 { i64 25480, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.740, i32 0, i32 0) }, %struct.anon.1134 { i64 25448, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.741, i32 0, i32 0) }, %struct.anon.1134 { i64 25544, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.742, i32 0, i32 0) }, %struct.anon.1134 { i64 25512, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.743, i32 0, i32 0) }, %struct.anon.1134 { i64 25608, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.744, i32 0, i32 0) }, %struct.anon.1134 { i64 25576, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.745, i32 0, i32 0) }, %struct.anon.1134 { i64 25672, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.746, i32 0, i32 0) }, %struct.anon.1134 { i64 25640, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.747, i32 0, i32 0) }, %struct.anon.1134 { i64 25736, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.748, i32 0, i32 0) }, %struct.anon.1134 { i64 25704, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.749, i32 0, i32 0) }, %struct.anon.1134 { i64 25800, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.750, i32 0, i32 0) }, %struct.anon.1134 { i64 25768, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.751, i32 0, i32 0) }, %struct.anon.1134 { i64 25864, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.752, i32 0, i32 0) }, %struct.anon.1134 { i64 25832, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.753, i32 0, i32 0) }, %struct.anon.1134 { i64 25928, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.754, i32 0, i32 0) }, %struct.anon.1134 { i64 25896, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.755, i32 0, i32 0) }], align 16
@.str.133 = private unnamed_addr constant [19 x i8] c"c:V8.GlobalHandles\00", align 1
@.str.134 = private unnamed_addr constant [20 x i8] c"c:V8.MapsNormalized\00", align 1
@.str.135 = private unnamed_addr constant [17 x i8] c"c:V8.MapsCreated\00", align 1
@.str.136 = private unnamed_addr constant [31 x i8] c"c:V8.ObjectElementsTransitions\00", align 1
@.str.137 = private unnamed_addr constant [34 x i8] c"c:V8.ObjectPropertiesToDictionary\00", align 1
@.str.138 = private unnamed_addr constant [32 x i8] c"c:V8.ObjectElementsToDictionary\00", align 1
@.str.139 = private unnamed_addr constant [22 x i8] c"c:V8.AliveAfterLastGC\00", align 1
@.str.140 = private unnamed_addr constant [24 x i8] c"c:V8.ObjsSinceLastYoung\00", align 1
@.str.141 = private unnamed_addr constant [23 x i8] c"c:V8.ObjsSinceLastFull\00", align 1
@.str.142 = private unnamed_addr constant [25 x i8] c"c:V8.StringTableCapacity\00", align 1
@.str.143 = private unnamed_addr constant [21 x i8] c"c:V8.NumberOfSymbols\00", align 1
@.str.144 = private unnamed_addr constant [27 x i8] c"c:V8.InlinedCopiedElements\00", align 1
@.str.145 = private unnamed_addr constant [26 x i8] c"c:V8.CompilationCacheHits\00", align 1
@.str.146 = private unnamed_addr constant [28 x i8] c"c:V8.CompilationCacheMisses\00", align 1
@.str.147 = private unnamed_addr constant [19 x i8] c"c:V8.TotalEvalSize\00", align 1
@.str.148 = private unnamed_addr constant [19 x i8] c"c:V8.TotalLoadSize\00", align 1
@.str.149 = private unnamed_addr constant [20 x i8] c"c:V8.TotalParseSize\00", align 1
@.str.150 = private unnamed_addr constant [26 x i8] c"c:V8.TotalPreparseSkipped\00", align 1
@.str.151 = private unnamed_addr constant [22 x i8] c"c:V8.TotalCompileSize\00", align 1
@.str.152 = private unnamed_addr constant [32 x i8] c"c:V8.ContextsCreatedFromScratch\00", align 1
@.str.153 = private unnamed_addr constant [31 x i8] c"c:V8.ContextsCreatedBySnapshot\00", align 1
@.str.154 = private unnamed_addr constant [14 x i8] c"c:V8.PcToCode\00", align 1
@.str.155 = private unnamed_addr constant [20 x i8] c"c:V8.PcToCodeCached\00", align 1
@.str.156 = private unnamed_addr constant [26 x i8] c"c:V8.StoreBufferOverflows\00", align 1
@.str.157 = private unnamed_addr constant [27 x i8] c"c:V8.TotalCompiledCodeSize\00", align 1
@.str.158 = private unnamed_addr constant [32 x i8] c"c:V8.GCCompactorCausedByRequest\00", align 1
@.str.159 = private unnamed_addr constant [37 x i8] c"c:V8.GCCompactorCausedByPromotedData\00", align 1
@.str.160 = private unnamed_addr constant [43 x i8] c"c:V8.GCCompactorCausedByOldspaceExhaustion\00", align 1
@.str.161 = private unnamed_addr constant [24 x i8] c"c:V8.GCLastResortFromJS\00", align 1
@.str.162 = private unnamed_addr constant [29 x i8] c"c:V8.GCLastResortFromHandles\00", align 1
@.str.163 = private unnamed_addr constant [24 x i8] c"c:V8.COWArraysConverted\00", align 1
@.str.164 = private unnamed_addr constant [31 x i8] c"c:V8.ConstructedObjectsRuntime\00", align 1
@.str.165 = private unnamed_addr constant [33 x i8] c"c:V8.MegamorphicStubCacheUpdates\00", align 1
@.str.166 = private unnamed_addr constant [19 x i8] c"c:V8.EnumCacheHits\00", align 1
@.str.167 = private unnamed_addr constant [21 x i8] c"c:V8.EnumCacheMisses\00", align 1
@.str.168 = private unnamed_addr constant [22 x i8] c"c:V8.StringAddRuntime\00", align 1
@.str.169 = private unnamed_addr constant [22 x i8] c"c:V8.SubStringRuntime\00", align 1
@.str.170 = private unnamed_addr constant [24 x i8] c"c:V8.RegExpEntryRuntime\00", align 1
@.str.171 = private unnamed_addr constant [21 x i8] c"c:V8.StackInterrupts\00", align 1
@.str.172 = private unnamed_addr constant [26 x i8] c"c:V8.RuntimeProfilerTicks\00", align 1
@.str.173 = private unnamed_addr constant [24 x i8] c"c:V8.SoftDeoptsExecuted\00", align 1
@.str.174 = private unnamed_addr constant [34 x i8] c"c:V8.MemoryNewSpaceBytesAvailable\00", align 1
@.str.175 = private unnamed_addr constant [34 x i8] c"c:V8.MemoryNewSpaceBytesCommitted\00", align 1
@.str.176 = private unnamed_addr constant [29 x i8] c"c:V8.MemoryNewSpaceBytesUsed\00", align 1
@.str.177 = private unnamed_addr constant [34 x i8] c"c:V8.MemoryOldSpaceBytesAvailable\00", align 1
@.str.178 = private unnamed_addr constant [34 x i8] c"c:V8.MemoryOldSpaceBytesCommitted\00", align 1
@.str.179 = private unnamed_addr constant [29 x i8] c"c:V8.MemoryOldSpaceBytesUsed\00", align 1
@.str.180 = private unnamed_addr constant [35 x i8] c"c:V8.MemoryCodeSpaceBytesAvailable\00", align 1
@.str.181 = private unnamed_addr constant [35 x i8] c"c:V8.MemoryCodeSpaceBytesCommitted\00", align 1
@.str.182 = private unnamed_addr constant [30 x i8] c"c:V8.MemoryCodeSpaceBytesUsed\00", align 1
@.str.183 = private unnamed_addr constant [34 x i8] c"c:V8.MemoryMapSpaceBytesAvailable\00", align 1
@.str.184 = private unnamed_addr constant [34 x i8] c"c:V8.MemoryMapSpaceBytesCommitted\00", align 1
@.str.185 = private unnamed_addr constant [29 x i8] c"c:V8.MemoryMapSpaceBytesUsed\00", align 1
@.str.186 = private unnamed_addr constant [33 x i8] c"c:V8.MemoryLoSpaceBytesAvailable\00", align 1
@.str.187 = private unnamed_addr constant [33 x i8] c"c:V8.MemoryLoSpaceBytesCommitted\00", align 1
@.str.188 = private unnamed_addr constant [28 x i8] c"c:V8.MemoryLoSpaceBytesUsed\00", align 1
@.str.189 = private unnamed_addr constant [27 x i8] c"c:V8.TotalBaselineCodeSize\00", align 1
@.str.190 = private unnamed_addr constant [31 x i8] c"c:V8.TotalBaselineCompileCount\00", align 1
@.str.191 = private unnamed_addr constant [19 x i8] c"c:V8.WriteBarriers\00", align 1
@.str.192 = private unnamed_addr constant [24 x i8] c"c:V8.ConstructedObjects\00", align 1
@.str.193 = private unnamed_addr constant [25 x i8] c"c:V8.FastNewClosureTotal\00", align 1
@.str.194 = private unnamed_addr constant [23 x i8] c"c:V8.RegExpEntryNative\00", align 1
@.str.195 = private unnamed_addr constant [21 x i8] c"c:V8.StringAddNative\00", align 1
@.str.196 = private unnamed_addr constant [21 x i8] c"c:V8.SubStringNative\00", align 1
@.str.197 = private unnamed_addr constant [27 x i8] c"c:V8.ICKeyedLoadGenericSmi\00", align 1
@.str.198 = private unnamed_addr constant [30 x i8] c"c:V8.ICKeyedLoadGenericSymbol\00", align 1
@.str.199 = private unnamed_addr constant [28 x i8] c"c:V8.ICKeyedLoadGenericSlow\00", align 1
@.str.200 = private unnamed_addr constant [32 x i8] c"c:V8.MegamorphicStubCacheProbes\00", align 1
@.str.201 = private unnamed_addr constant [32 x i8] c"c:V8.MegamorphicStubCacheMisses\00", align 1
@.str.202 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_INTERNALIZED_STRING_TYPE\00", align 1
@.str.203 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_INTERNALIZED_STRING_TYPE\00", align 1
@.str.204 = private unnamed_addr constant [47 x i8] c"c:V8.CountOf_EXTERNAL_INTERNALIZED_STRING_TYPE\00", align 1
@.str.205 = private unnamed_addr constant [46 x i8] c"c:V8.SizeOf_EXTERNAL_INTERNALIZED_STRING_TYPE\00", align 1
@.str.206 = private unnamed_addr constant [47 x i8] c"c:V8.CountOf_ONE_BYTE_INTERNALIZED_STRING_TYPE\00", align 1
@.str.207 = private unnamed_addr constant [46 x i8] c"c:V8.SizeOf_ONE_BYTE_INTERNALIZED_STRING_TYPE\00", align 1
@.str.208 = private unnamed_addr constant [56 x i8] c"c:V8.CountOf_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE\00", align 1
@.str.209 = private unnamed_addr constant [55 x i8] c"c:V8.SizeOf_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE\00", align 1
@.str.210 = private unnamed_addr constant [56 x i8] c"c:V8.CountOf_UNCACHED_EXTERNAL_INTERNALIZED_STRING_TYPE\00", align 1
@.str.211 = private unnamed_addr constant [55 x i8] c"c:V8.SizeOf_UNCACHED_EXTERNAL_INTERNALIZED_STRING_TYPE\00", align 1
@.str.212 = private unnamed_addr constant [65 x i8] c"c:V8.CountOf_UNCACHED_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE\00", align 1
@.str.213 = private unnamed_addr constant [64 x i8] c"c:V8.SizeOf_UNCACHED_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE\00", align 1
@.str.214 = private unnamed_addr constant [25 x i8] c"c:V8.CountOf_STRING_TYPE\00", align 1
@.str.215 = private unnamed_addr constant [24 x i8] c"c:V8.SizeOf_STRING_TYPE\00", align 1
@.str.216 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_CONS_STRING_TYPE\00", align 1
@.str.217 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_CONS_STRING_TYPE\00", align 1
@.str.218 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_EXTERNAL_STRING_TYPE\00", align 1
@.str.219 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_EXTERNAL_STRING_TYPE\00", align 1
@.str.220 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_SLICED_STRING_TYPE\00", align 1
@.str.221 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_SLICED_STRING_TYPE\00", align 1
@.str.222 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_THIN_STRING_TYPE\00", align 1
@.str.223 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_THIN_STRING_TYPE\00", align 1
@.str.224 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_ONE_BYTE_STRING_TYPE\00", align 1
@.str.225 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_ONE_BYTE_STRING_TYPE\00", align 1
@.str.226 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_CONS_ONE_BYTE_STRING_TYPE\00", align 1
@.str.227 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_CONS_ONE_BYTE_STRING_TYPE\00", align 1
@.str.228 = private unnamed_addr constant [43 x i8] c"c:V8.CountOf_EXTERNAL_ONE_BYTE_STRING_TYPE\00", align 1
@.str.229 = private unnamed_addr constant [42 x i8] c"c:V8.SizeOf_EXTERNAL_ONE_BYTE_STRING_TYPE\00", align 1
@.str.230 = private unnamed_addr constant [41 x i8] c"c:V8.CountOf_SLICED_ONE_BYTE_STRING_TYPE\00", align 1
@.str.231 = private unnamed_addr constant [40 x i8] c"c:V8.SizeOf_SLICED_ONE_BYTE_STRING_TYPE\00", align 1
@.str.232 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_THIN_ONE_BYTE_STRING_TYPE\00", align 1
@.str.233 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_THIN_ONE_BYTE_STRING_TYPE\00", align 1
@.str.234 = private unnamed_addr constant [43 x i8] c"c:V8.CountOf_UNCACHED_EXTERNAL_STRING_TYPE\00", align 1
@.str.235 = private unnamed_addr constant [42 x i8] c"c:V8.SizeOf_UNCACHED_EXTERNAL_STRING_TYPE\00", align 1
@.str.236 = private unnamed_addr constant [52 x i8] c"c:V8.CountOf_UNCACHED_EXTERNAL_ONE_BYTE_STRING_TYPE\00", align 1
@.str.237 = private unnamed_addr constant [51 x i8] c"c:V8.SizeOf_UNCACHED_EXTERNAL_ONE_BYTE_STRING_TYPE\00", align 1
@.str.238 = private unnamed_addr constant [25 x i8] c"c:V8.CountOf_SYMBOL_TYPE\00", align 1
@.str.239 = private unnamed_addr constant [24 x i8] c"c:V8.SizeOf_SYMBOL_TYPE\00", align 1
@.str.240 = private unnamed_addr constant [31 x i8] c"c:V8.CountOf_BIG_INT_BASE_TYPE\00", align 1
@.str.241 = private unnamed_addr constant [30 x i8] c"c:V8.SizeOf_BIG_INT_BASE_TYPE\00", align 1
@.str.242 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_HEAP_NUMBER_TYPE\00", align 1
@.str.243 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_HEAP_NUMBER_TYPE\00", align 1
@.str.244 = private unnamed_addr constant [26 x i8] c"c:V8.CountOf_ODDBALL_TYPE\00", align 1
@.str.245 = private unnamed_addr constant [25 x i8] c"c:V8.SizeOf_ODDBALL_TYPE\00", align 1
@.str.246 = private unnamed_addr constant [52 x i8] c"c:V8.CountOf_ABSTRACT_INTERNAL_CLASS_SUBCLASS1_TYPE\00", align 1
@.str.247 = private unnamed_addr constant [51 x i8] c"c:V8.SizeOf_ABSTRACT_INTERNAL_CLASS_SUBCLASS1_TYPE\00", align 1
@.str.248 = private unnamed_addr constant [52 x i8] c"c:V8.CountOf_ABSTRACT_INTERNAL_CLASS_SUBCLASS2_TYPE\00", align 1
@.str.249 = private unnamed_addr constant [51 x i8] c"c:V8.SizeOf_ABSTRACT_INTERNAL_CLASS_SUBCLASS2_TYPE\00", align 1
@.str.250 = private unnamed_addr constant [26 x i8] c"c:V8.CountOf_FOREIGN_TYPE\00", align 1
@.str.251 = private unnamed_addr constant [25 x i8] c"c:V8.SizeOf_FOREIGN_TYPE\00", align 1
@.str.252 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_WASM_FUNCTION_DATA_TYPE\00", align 1
@.str.253 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_WASM_FUNCTION_DATA_TYPE\00", align 1
@.str.254 = private unnamed_addr constant [42 x i8] c"c:V8.CountOf_WASM_CAPI_FUNCTION_DATA_TYPE\00", align 1
@.str.255 = private unnamed_addr constant [41 x i8] c"c:V8.SizeOf_WASM_CAPI_FUNCTION_DATA_TYPE\00", align 1
@.str.256 = private unnamed_addr constant [46 x i8] c"c:V8.CountOf_WASM_EXPORTED_FUNCTION_DATA_TYPE\00", align 1
@.str.257 = private unnamed_addr constant [45 x i8] c"c:V8.SizeOf_WASM_EXPORTED_FUNCTION_DATA_TYPE\00", align 1
@.str.258 = private unnamed_addr constant [40 x i8] c"c:V8.CountOf_WASM_JS_FUNCTION_DATA_TYPE\00", align 1
@.str.259 = private unnamed_addr constant [39 x i8] c"c:V8.SizeOf_WASM_JS_FUNCTION_DATA_TYPE\00", align 1
@.str.260 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_WASM_TYPE_INFO_TYPE\00", align 1
@.str.261 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_WASM_TYPE_INFO_TYPE\00", align 1
@.str.262 = private unnamed_addr constant [52 x i8] c"c:V8.CountOf_PROMISE_FULFILL_REACTION_JOB_TASK_TYPE\00", align 1
@.str.263 = private unnamed_addr constant [51 x i8] c"c:V8.SizeOf_PROMISE_FULFILL_REACTION_JOB_TASK_TYPE\00", align 1
@.str.264 = private unnamed_addr constant [51 x i8] c"c:V8.CountOf_PROMISE_REJECT_REACTION_JOB_TASK_TYPE\00", align 1
@.str.265 = private unnamed_addr constant [50 x i8] c"c:V8.SizeOf_PROMISE_REJECT_REACTION_JOB_TASK_TYPE\00", align 1
@.str.266 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_CALLABLE_TASK_TYPE\00", align 1
@.str.267 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_CALLABLE_TASK_TYPE\00", align 1
@.str.268 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_CALLBACK_TASK_TYPE\00", align 1
@.str.269 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_CALLBACK_TASK_TYPE\00", align 1
@.str.270 = private unnamed_addr constant [52 x i8] c"c:V8.CountOf_PROMISE_RESOLVE_THENABLE_JOB_TASK_TYPE\00", align 1
@.str.271 = private unnamed_addr constant [51 x i8] c"c:V8.SizeOf_PROMISE_RESOLVE_THENABLE_JOB_TASK_TYPE\00", align 1
@.str.272 = private unnamed_addr constant [31 x i8] c"c:V8.CountOf_LOAD_HANDLER_TYPE\00", align 1
@.str.273 = private unnamed_addr constant [30 x i8] c"c:V8.SizeOf_LOAD_HANDLER_TYPE\00", align 1
@.str.274 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_STORE_HANDLER_TYPE\00", align 1
@.str.275 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_STORE_HANDLER_TYPE\00", align 1
@.str.276 = private unnamed_addr constant [41 x i8] c"c:V8.CountOf_FUNCTION_TEMPLATE_INFO_TYPE\00", align 1
@.str.277 = private unnamed_addr constant [40 x i8] c"c:V8.SizeOf_FUNCTION_TEMPLATE_INFO_TYPE\00", align 1
@.str.278 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_OBJECT_TEMPLATE_INFO_TYPE\00", align 1
@.str.279 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_OBJECT_TEMPLATE_INFO_TYPE\00", align 1
@.str.280 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_ACCESS_CHECK_INFO_TYPE\00", align 1
@.str.281 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_ACCESS_CHECK_INFO_TYPE\00", align 1
@.str.282 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_ACCESSOR_INFO_TYPE\00", align 1
@.str.283 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_ACCESSOR_INFO_TYPE\00", align 1
@.str.284 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_ACCESSOR_PAIR_TYPE\00", align 1
@.str.285 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_ACCESSOR_PAIR_TYPE\00", align 1
@.str.286 = private unnamed_addr constant [42 x i8] c"c:V8.CountOf_ALIASED_ARGUMENTS_ENTRY_TYPE\00", align 1
@.str.287 = private unnamed_addr constant [41 x i8] c"c:V8.SizeOf_ALIASED_ARGUMENTS_ENTRY_TYPE\00", align 1
@.str.288 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_ALLOCATION_MEMENTO_TYPE\00", align 1
@.str.289 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_ALLOCATION_MEMENTO_TYPE\00", align 1
@.str.290 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_ALLOCATION_SITE_TYPE\00", align 1
@.str.291 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_ALLOCATION_SITE_TYPE\00", align 1
@.str.292 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_ARRAY_BOILERPLATE_DESCRIPTION_TYPE\00", align 1
@.str.293 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_ARRAY_BOILERPLATE_DESCRIPTION_TYPE\00", align 1
@.str.294 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_ASM_WASM_DATA_TYPE\00", align 1
@.str.295 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_ASM_WASM_DATA_TYPE\00", align 1
@.str.296 = private unnamed_addr constant [42 x i8] c"c:V8.CountOf_ASYNC_GENERATOR_REQUEST_TYPE\00", align 1
@.str.297 = private unnamed_addr constant [41 x i8] c"c:V8.SizeOf_ASYNC_GENERATOR_REQUEST_TYPE\00", align 1
@.str.298 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_BASELINE_DATA_TYPE\00", align 1
@.str.299 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_BASELINE_DATA_TYPE\00", align 1
@.str.300 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_BREAK_POINT_TYPE\00", align 1
@.str.301 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_BREAK_POINT_TYPE\00", align 1
@.str.302 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_BREAK_POINT_INFO_TYPE\00", align 1
@.str.303 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_BREAK_POINT_INFO_TYPE\00", align 1
@.str.304 = private unnamed_addr constant [41 x i8] c"c:V8.CountOf_CACHED_TEMPLATE_OBJECT_TYPE\00", align 1
@.str.305 = private unnamed_addr constant [40 x i8] c"c:V8.SizeOf_CACHED_TEMPLATE_OBJECT_TYPE\00", align 1
@.str.306 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_CALL_HANDLER_INFO_TYPE\00", align 1
@.str.307 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_CALL_HANDLER_INFO_TYPE\00", align 1
@.str.308 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_CLASS_POSITIONS_TYPE\00", align 1
@.str.309 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_CLASS_POSITIONS_TYPE\00", align 1
@.str.310 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_DEBUG_INFO_TYPE\00", align 1
@.str.311 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_DEBUG_INFO_TYPE\00", align 1
@.str.312 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_ENUM_CACHE_TYPE\00", align 1
@.str.313 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_ENUM_CACHE_TYPE\00", align 1
@.str.314 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_FEEDBACK_CELL_TYPE\00", align 1
@.str.315 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_FEEDBACK_CELL_TYPE\00", align 1
@.str.316 = private unnamed_addr constant [46 x i8] c"c:V8.CountOf_FUNCTION_TEMPLATE_RARE_DATA_TYPE\00", align 1
@.str.317 = private unnamed_addr constant [45 x i8] c"c:V8.SizeOf_FUNCTION_TEMPLATE_RARE_DATA_TYPE\00", align 1
@.str.318 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_INTERCEPTOR_INFO_TYPE\00", align 1
@.str.319 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_INTERCEPTOR_INFO_TYPE\00", align 1
@.str.320 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_INTERPRETER_DATA_TYPE\00", align 1
@.str.321 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_INTERPRETER_DATA_TYPE\00", align 1
@.str.322 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_MODULE_REQUEST_TYPE\00", align 1
@.str.323 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_MODULE_REQUEST_TYPE\00", align 1
@.str.324 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_PROMISE_CAPABILITY_TYPE\00", align 1
@.str.325 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_PROMISE_CAPABILITY_TYPE\00", align 1
@.str.326 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_PROMISE_REACTION_TYPE\00", align 1
@.str.327 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_PROMISE_REACTION_TYPE\00", align 1
@.str.328 = private unnamed_addr constant [45 x i8] c"c:V8.CountOf_PROPERTY_DESCRIPTOR_OBJECT_TYPE\00", align 1
@.str.329 = private unnamed_addr constant [44 x i8] c"c:V8.SizeOf_PROPERTY_DESCRIPTOR_OBJECT_TYPE\00", align 1
@.str.330 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_PROTOTYPE_INFO_TYPE\00", align 1
@.str.331 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_PROTOTYPE_INFO_TYPE\00", align 1
@.str.332 = private unnamed_addr constant [50 x i8] c"c:V8.CountOf_REG_EXP_BOILERPLATE_DESCRIPTION_TYPE\00", align 1
@.str.333 = private unnamed_addr constant [49 x i8] c"c:V8.SizeOf_REG_EXP_BOILERPLATE_DESCRIPTION_TYPE\00", align 1
@.str.334 = private unnamed_addr constant [25 x i8] c"c:V8.CountOf_SCRIPT_TYPE\00", align 1
@.str.335 = private unnamed_addr constant [24 x i8] c"c:V8.SizeOf_SCRIPT_TYPE\00", align 1
@.str.336 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_SOURCE_TEXT_MODULE_INFO_ENTRY_TYPE\00", align 1
@.str.337 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_SOURCE_TEXT_MODULE_INFO_ENTRY_TYPE\00", align 1
@.str.338 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_STACK_FRAME_INFO_TYPE\00", align 1
@.str.339 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_STACK_FRAME_INFO_TYPE\00", align 1
@.str.340 = private unnamed_addr constant [46 x i8] c"c:V8.CountOf_TEMPLATE_OBJECT_DESCRIPTION_TYPE\00", align 1
@.str.341 = private unnamed_addr constant [45 x i8] c"c:V8.SizeOf_TEMPLATE_OBJECT_DESCRIPTION_TYPE\00", align 1
@.str.342 = private unnamed_addr constant [25 x i8] c"c:V8.CountOf_TUPLE2_TYPE\00", align 1
@.str.343 = private unnamed_addr constant [24 x i8] c"c:V8.SizeOf_TUPLE2_TYPE\00", align 1
@.str.344 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_WASM_EXCEPTION_TAG_TYPE\00", align 1
@.str.345 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_WASM_EXCEPTION_TAG_TYPE\00", align 1
@.str.346 = private unnamed_addr constant [47 x i8] c"c:V8.CountOf_WASM_INDIRECT_FUNCTION_TABLE_TYPE\00", align 1
@.str.347 = private unnamed_addr constant [46 x i8] c"c:V8.SizeOf_WASM_INDIRECT_FUNCTION_TABLE_TYPE\00", align 1
@.str.348 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_FIXED_ARRAY_TYPE\00", align 1
@.str.349 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_FIXED_ARRAY_TYPE\00", align 1
@.str.350 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_HASH_TABLE_TYPE\00", align 1
@.str.351 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_HASH_TABLE_TYPE\00", align 1
@.str.352 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_EPHEMERON_HASH_TABLE_TYPE\00", align 1
@.str.353 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_EPHEMERON_HASH_TABLE_TYPE\00", align 1
@.str.354 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_GLOBAL_DICTIONARY_TYPE\00", align 1
@.str.355 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_GLOBAL_DICTIONARY_TYPE\00", align 1
@.str.356 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_NAME_DICTIONARY_TYPE\00", align 1
@.str.357 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_NAME_DICTIONARY_TYPE\00", align 1
@.str.358 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_NUMBER_DICTIONARY_TYPE\00", align 1
@.str.359 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_NUMBER_DICTIONARY_TYPE\00", align 1
@.str.360 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_ORDERED_HASH_MAP_TYPE\00", align 1
@.str.361 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_ORDERED_HASH_MAP_TYPE\00", align 1
@.str.362 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_ORDERED_HASH_SET_TYPE\00", align 1
@.str.363 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_ORDERED_HASH_SET_TYPE\00", align 1
@.str.364 = private unnamed_addr constant [42 x i8] c"c:V8.CountOf_ORDERED_NAME_DICTIONARY_TYPE\00", align 1
@.str.365 = private unnamed_addr constant [41 x i8] c"c:V8.SizeOf_ORDERED_NAME_DICTIONARY_TYPE\00", align 1
@.str.366 = private unnamed_addr constant [43 x i8] c"c:V8.CountOf_SIMPLE_NUMBER_DICTIONARY_TYPE\00", align 1
@.str.367 = private unnamed_addr constant [42 x i8] c"c:V8.SizeOf_SIMPLE_NUMBER_DICTIONARY_TYPE\00", align 1
@.str.368 = private unnamed_addr constant [46 x i8] c"c:V8.CountOf_CLOSURE_FEEDBACK_CELL_ARRAY_TYPE\00", align 1
@.str.369 = private unnamed_addr constant [45 x i8] c"c:V8.SizeOf_CLOSURE_FEEDBACK_CELL_ARRAY_TYPE\00", align 1
@.str.370 = private unnamed_addr constant [49 x i8] c"c:V8.CountOf_OBJECT_BOILERPLATE_DESCRIPTION_TYPE\00", align 1
@.str.371 = private unnamed_addr constant [48 x i8] c"c:V8.SizeOf_OBJECT_BOILERPLATE_DESCRIPTION_TYPE\00", align 1
@.str.372 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_SCRIPT_CONTEXT_TABLE_TYPE\00", align 1
@.str.373 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_SCRIPT_CONTEXT_TABLE_TYPE\00", align 1
@.str.374 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_BYTE_ARRAY_TYPE\00", align 1
@.str.375 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_BYTE_ARRAY_TYPE\00", align 1
@.str.376 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_BYTECODE_ARRAY_TYPE\00", align 1
@.str.377 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_BYTECODE_ARRAY_TYPE\00", align 1
@.str.378 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_FIXED_DOUBLE_ARRAY_TYPE\00", align 1
@.str.379 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_FIXED_DOUBLE_ARRAY_TYPE\00", align 1
@.str.380 = private unnamed_addr constant [51 x i8] c"c:V8.CountOf_INTERNAL_CLASS_WITH_SMI_ELEMENTS_TYPE\00", align 1
@.str.381 = private unnamed_addr constant [50 x i8] c"c:V8.SizeOf_INTERNAL_CLASS_WITH_SMI_ELEMENTS_TYPE\00", align 1
@.str.382 = private unnamed_addr constant [44 x i8] c"c:V8.CountOf_SLOPPY_ARGUMENTS_ELEMENTS_TYPE\00", align 1
@.str.383 = private unnamed_addr constant [43 x i8] c"c:V8.SizeOf_SLOPPY_ARGUMENTS_ELEMENTS_TYPE\00", align 1
@.str.384 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_AWAIT_CONTEXT_TYPE\00", align 1
@.str.385 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_AWAIT_CONTEXT_TYPE\00", align 1
@.str.386 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_BLOCK_CONTEXT_TYPE\00", align 1
@.str.387 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_BLOCK_CONTEXT_TYPE\00", align 1
@.str.388 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_CATCH_CONTEXT_TYPE\00", align 1
@.str.389 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_CATCH_CONTEXT_TYPE\00", align 1
@.str.390 = private unnamed_addr constant [41 x i8] c"c:V8.CountOf_DEBUG_EVALUATE_CONTEXT_TYPE\00", align 1
@.str.391 = private unnamed_addr constant [40 x i8] c"c:V8.SizeOf_DEBUG_EVALUATE_CONTEXT_TYPE\00", align 1
@.str.392 = private unnamed_addr constant [31 x i8] c"c:V8.CountOf_EVAL_CONTEXT_TYPE\00", align 1
@.str.393 = private unnamed_addr constant [30 x i8] c"c:V8.SizeOf_EVAL_CONTEXT_TYPE\00", align 1
@.str.394 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_FUNCTION_CONTEXT_TYPE\00", align 1
@.str.395 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_FUNCTION_CONTEXT_TYPE\00", align 1
@.str.396 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_MODULE_CONTEXT_TYPE\00", align 1
@.str.397 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_MODULE_CONTEXT_TYPE\00", align 1
@.str.398 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_NATIVE_CONTEXT_TYPE\00", align 1
@.str.399 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_NATIVE_CONTEXT_TYPE\00", align 1
@.str.400 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_SCRIPT_CONTEXT_TYPE\00", align 1
@.str.401 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_SCRIPT_CONTEXT_TYPE\00", align 1
@.str.402 = private unnamed_addr constant [31 x i8] c"c:V8.CountOf_WITH_CONTEXT_TYPE\00", align 1
@.str.403 = private unnamed_addr constant [30 x i8] c"c:V8.SizeOf_WITH_CONTEXT_TYPE\00", align 1
@.str.404 = private unnamed_addr constant [42 x i8] c"c:V8.CountOf_EXPORTED_SUB_CLASS_BASE_TYPE\00", align 1
@.str.405 = private unnamed_addr constant [41 x i8] c"c:V8.SizeOf_EXPORTED_SUB_CLASS_BASE_TYPE\00", align 1
@.str.406 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_EXPORTED_SUB_CLASS_TYPE\00", align 1
@.str.407 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_EXPORTED_SUB_CLASS_TYPE\00", align 1
@.str.408 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_EXPORTED_SUB_CLASS2_TYPE\00", align 1
@.str.409 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_EXPORTED_SUB_CLASS2_TYPE\00", align 1
@.str.410 = private unnamed_addr constant [41 x i8] c"c:V8.CountOf_SMALL_ORDERED_HASH_MAP_TYPE\00", align 1
@.str.411 = private unnamed_addr constant [40 x i8] c"c:V8.SizeOf_SMALL_ORDERED_HASH_MAP_TYPE\00", align 1
@.str.412 = private unnamed_addr constant [41 x i8] c"c:V8.CountOf_SMALL_ORDERED_HASH_SET_TYPE\00", align 1
@.str.413 = private unnamed_addr constant [40 x i8] c"c:V8.SizeOf_SMALL_ORDERED_HASH_SET_TYPE\00", align 1
@.str.414 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_SMALL_ORDERED_NAME_DICTIONARY_TYPE\00", align 1
@.str.415 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_SMALL_ORDERED_NAME_DICTIONARY_TYPE\00", align 1
@.str.416 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_DESCRIPTOR_ARRAY_TYPE\00", align 1
@.str.417 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_DESCRIPTOR_ARRAY_TYPE\00", align 1
@.str.418 = private unnamed_addr constant [42 x i8] c"c:V8.CountOf_STRONG_DESCRIPTOR_ARRAY_TYPE\00", align 1
@.str.419 = private unnamed_addr constant [41 x i8] c"c:V8.SizeOf_STRONG_DESCRIPTOR_ARRAY_TYPE\00", align 1
@.str.420 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_SOURCE_TEXT_MODULE_TYPE\00", align 1
@.str.421 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_SOURCE_TEXT_MODULE_TYPE\00", align 1
@.str.422 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_SYNTHETIC_MODULE_TYPE\00", align 1
@.str.423 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_SYNTHETIC_MODULE_TYPE\00", align 1
@.str.424 = private unnamed_addr constant [53 x i8] c"c:V8.CountOf_UNCOMPILED_DATA_WITH_PREPARSE_DATA_TYPE\00", align 1
@.str.425 = private unnamed_addr constant [52 x i8] c"c:V8.SizeOf_UNCOMPILED_DATA_WITH_PREPARSE_DATA_TYPE\00", align 1
@.str.426 = private unnamed_addr constant [56 x i8] c"c:V8.CountOf_UNCOMPILED_DATA_WITHOUT_PREPARSE_DATA_TYPE\00", align 1
@.str.427 = private unnamed_addr constant [55 x i8] c"c:V8.SizeOf_UNCOMPILED_DATA_WITHOUT_PREPARSE_DATA_TYPE\00", align 1
@.str.428 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_WEAK_FIXED_ARRAY_TYPE\00", align 1
@.str.429 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_WEAK_FIXED_ARRAY_TYPE\00", align 1
@.str.430 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_TRANSITION_ARRAY_TYPE\00", align 1
@.str.431 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_TRANSITION_ARRAY_TYPE\00", align 1
@.str.432 = private unnamed_addr constant [23 x i8] c"c:V8.CountOf_CELL_TYPE\00", align 1
@.str.433 = private unnamed_addr constant [22 x i8] c"c:V8.SizeOf_CELL_TYPE\00", align 1
@.str.434 = private unnamed_addr constant [23 x i8] c"c:V8.CountOf_CODE_TYPE\00", align 1
@.str.435 = private unnamed_addr constant [22 x i8] c"c:V8.SizeOf_CODE_TYPE\00", align 1
@.str.436 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_CODE_DATA_CONTAINER_TYPE\00", align 1
@.str.437 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_CODE_DATA_CONTAINER_TYPE\00", align 1
@.str.438 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_COVERAGE_INFO_TYPE\00", align 1
@.str.439 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_COVERAGE_INFO_TYPE\00", align 1
@.str.440 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_EMBEDDER_DATA_ARRAY_TYPE\00", align 1
@.str.441 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_EMBEDDER_DATA_ARRAY_TYPE\00", align 1
@.str.442 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_FEEDBACK_METADATA_TYPE\00", align 1
@.str.443 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_FEEDBACK_METADATA_TYPE\00", align 1
@.str.444 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_FEEDBACK_VECTOR_TYPE\00", align 1
@.str.445 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_FEEDBACK_VECTOR_TYPE\00", align 1
@.str.446 = private unnamed_addr constant [25 x i8] c"c:V8.CountOf_FILLER_TYPE\00", align 1
@.str.447 = private unnamed_addr constant [24 x i8] c"c:V8.SizeOf_FILLER_TYPE\00", align 1
@.str.448 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_FREE_SPACE_TYPE\00", align 1
@.str.449 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_FREE_SPACE_TYPE\00", align 1
@.str.450 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_INTERNAL_CLASS_TYPE\00", align 1
@.str.451 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_INTERNAL_CLASS_TYPE\00", align 1
@.str.452 = private unnamed_addr constant [54 x i8] c"c:V8.CountOf_INTERNAL_CLASS_WITH_STRUCT_ELEMENTS_TYPE\00", align 1
@.str.453 = private unnamed_addr constant [53 x i8] c"c:V8.SizeOf_INTERNAL_CLASS_WITH_STRUCT_ELEMENTS_TYPE\00", align 1
@.str.454 = private unnamed_addr constant [22 x i8] c"c:V8.CountOf_MAP_TYPE\00", align 1
@.str.455 = private unnamed_addr constant [21 x i8] c"c:V8.SizeOf_MAP_TYPE\00", align 1
@.str.456 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_MEGA_DOM_HANDLER_TYPE\00", align 1
@.str.457 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_MEGA_DOM_HANDLER_TYPE\00", align 1
@.str.458 = private unnamed_addr constant [52 x i8] c"c:V8.CountOf_ON_HEAP_BASIC_BLOCK_PROFILER_DATA_TYPE\00", align 1
@.str.459 = private unnamed_addr constant [51 x i8] c"c:V8.SizeOf_ON_HEAP_BASIC_BLOCK_PROFILER_DATA_TYPE\00", align 1
@.str.460 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_PREPARSE_DATA_TYPE\00", align 1
@.str.461 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_PREPARSE_DATA_TYPE\00", align 1
@.str.462 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_PROPERTY_ARRAY_TYPE\00", align 1
@.str.463 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_PROPERTY_ARRAY_TYPE\00", align 1
@.str.464 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_PROPERTY_CELL_TYPE\00", align 1
@.str.465 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_PROPERTY_CELL_TYPE\00", align 1
@.str.466 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_SCOPE_INFO_TYPE\00", align 1
@.str.467 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_SCOPE_INFO_TYPE\00", align 1
@.str.468 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_SHARED_FUNCTION_INFO_TYPE\00", align 1
@.str.469 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_SHARED_FUNCTION_INFO_TYPE\00", align 1
@.str.470 = private unnamed_addr constant [26 x i8] c"c:V8.CountOf_SMI_BOX_TYPE\00", align 1
@.str.471 = private unnamed_addr constant [25 x i8] c"c:V8.SizeOf_SMI_BOX_TYPE\00", align 1
@.str.472 = private unnamed_addr constant [27 x i8] c"c:V8.CountOf_SMI_PAIR_TYPE\00", align 1
@.str.473 = private unnamed_addr constant [26 x i8] c"c:V8.SizeOf_SMI_PAIR_TYPE\00", align 1
@.str.474 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_SORT_STATE_TYPE\00", align 1
@.str.475 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_SORT_STATE_TYPE\00", align 1
@.str.476 = private unnamed_addr constant [40 x i8] c"c:V8.CountOf_SWISS_NAME_DICTIONARY_TYPE\00", align 1
@.str.477 = private unnamed_addr constant [39 x i8] c"c:V8.SizeOf_SWISS_NAME_DICTIONARY_TYPE\00", align 1
@.str.478 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_WEAK_ARRAY_LIST_TYPE\00", align 1
@.str.479 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_WEAK_ARRAY_LIST_TYPE\00", align 1
@.str.480 = private unnamed_addr constant [28 x i8] c"c:V8.CountOf_WEAK_CELL_TYPE\00", align 1
@.str.481 = private unnamed_addr constant [27 x i8] c"c:V8.SizeOf_WEAK_CELL_TYPE\00", align 1
@.str.482 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_WASM_ARRAY_TYPE\00", align 1
@.str.483 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_WASM_ARRAY_TYPE\00", align 1
@.str.484 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_WASM_STRUCT_TYPE\00", align 1
@.str.485 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_WASM_STRUCT_TYPE\00", align 1
@.str.486 = private unnamed_addr constant [27 x i8] c"c:V8.CountOf_JS_PROXY_TYPE\00", align 1
@.str.487 = private unnamed_addr constant [26 x i8] c"c:V8.SizeOf_JS_PROXY_TYPE\00", align 1
@.str.488 = private unnamed_addr constant [28 x i8] c"c:V8.CountOf_JS_OBJECT_TYPE\00", align 1
@.str.489 = private unnamed_addr constant [27 x i8] c"c:V8.SizeOf_JS_OBJECT_TYPE\00", align 1
@.str.490 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_JS_GLOBAL_OBJECT_TYPE\00", align 1
@.str.491 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_JS_GLOBAL_OBJECT_TYPE\00", align 1
@.str.492 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_JS_GLOBAL_PROXY_TYPE\00", align 1
@.str.493 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_JS_GLOBAL_PROXY_TYPE\00", align 1
@.str.494 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_JS_MODULE_NAMESPACE_TYPE\00", align 1
@.str.495 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_JS_MODULE_NAMESPACE_TYPE\00", align 1
@.str.496 = private unnamed_addr constant [40 x i8] c"c:V8.CountOf_JS_SPECIAL_API_OBJECT_TYPE\00", align 1
@.str.497 = private unnamed_addr constant [39 x i8] c"c:V8.SizeOf_JS_SPECIAL_API_OBJECT_TYPE\00", align 1
@.str.498 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_JS_PRIMITIVE_WRAPPER_TYPE\00", align 1
@.str.499 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_JS_PRIMITIVE_WRAPPER_TYPE\00", align 1
@.str.500 = private unnamed_addr constant [46 x i8] c"c:V8.CountOf_JS_ARRAY_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.501 = private unnamed_addr constant [45 x i8] c"c:V8.SizeOf_JS_ARRAY_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.502 = private unnamed_addr constant [40 x i8] c"c:V8.CountOf_JS_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.503 = private unnamed_addr constant [39 x i8] c"c:V8.SizeOf_JS_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.504 = private unnamed_addr constant [44 x i8] c"c:V8.CountOf_JS_MAP_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.505 = private unnamed_addr constant [43 x i8] c"c:V8.SizeOf_JS_MAP_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.506 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_JS_OBJECT_PROTOTYPE_TYPE\00", align 1
@.str.507 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_JS_OBJECT_PROTOTYPE_TYPE\00", align 1
@.str.508 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_JS_PROMISE_PROTOTYPE_TYPE\00", align 1
@.str.509 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_JS_PROMISE_PROTOTYPE_TYPE\00", align 1
@.str.510 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_JS_REG_EXP_PROTOTYPE_TYPE\00", align 1
@.str.511 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_JS_REG_EXP_PROTOTYPE_TYPE\00", align 1
@.str.512 = private unnamed_addr constant [44 x i8] c"c:V8.CountOf_JS_SET_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.513 = private unnamed_addr constant [43 x i8] c"c:V8.SizeOf_JS_SET_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.514 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_JS_SET_PROTOTYPE_TYPE\00", align 1
@.str.515 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_JS_SET_PROTOTYPE_TYPE\00", align 1
@.str.516 = private unnamed_addr constant [47 x i8] c"c:V8.CountOf_JS_STRING_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.517 = private unnamed_addr constant [46 x i8] c"c:V8.SizeOf_JS_STRING_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.518 = private unnamed_addr constant [43 x i8] c"c:V8.CountOf_JS_TYPED_ARRAY_PROTOTYPE_TYPE\00", align 1
@.str.519 = private unnamed_addr constant [42 x i8] c"c:V8.SizeOf_JS_TYPED_ARRAY_PROTOTYPE_TYPE\00", align 1
@.str.520 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_JS_GENERATOR_OBJECT_TYPE\00", align 1
@.str.521 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_JS_GENERATOR_OBJECT_TYPE\00", align 1
@.str.522 = private unnamed_addr constant [43 x i8] c"c:V8.CountOf_JS_ASYNC_FUNCTION_OBJECT_TYPE\00", align 1
@.str.523 = private unnamed_addr constant [42 x i8] c"c:V8.SizeOf_JS_ASYNC_FUNCTION_OBJECT_TYPE\00", align 1
@.str.524 = private unnamed_addr constant [44 x i8] c"c:V8.CountOf_JS_ASYNC_GENERATOR_OBJECT_TYPE\00", align 1
@.str.525 = private unnamed_addr constant [43 x i8] c"c:V8.SizeOf_JS_ASYNC_GENERATOR_OBJECT_TYPE\00", align 1
@.str.526 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_JS_ARGUMENTS_OBJECT_TYPE\00", align 1
@.str.527 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_JS_ARGUMENTS_OBJECT_TYPE\00", align 1
@.str.528 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_JS_API_OBJECT_TYPE\00", align 1
@.str.529 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_JS_API_OBJECT_TYPE\00", align 1
@.str.530 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_JS_BOUND_FUNCTION_TYPE\00", align 1
@.str.531 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_JS_BOUND_FUNCTION_TYPE\00", align 1
@.str.532 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_JS_FUNCTION_TYPE\00", align 1
@.str.533 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_JS_FUNCTION_TYPE\00", align 1
@.str.534 = private unnamed_addr constant [51 x i8] c"c:V8.CountOf_BIGINT64_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.535 = private unnamed_addr constant [50 x i8] c"c:V8.SizeOf_BIGINT64_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.536 = private unnamed_addr constant [52 x i8] c"c:V8.CountOf_BIGUINT64_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.537 = private unnamed_addr constant [51 x i8] c"c:V8.SizeOf_BIGUINT64_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.538 = private unnamed_addr constant [50 x i8] c"c:V8.CountOf_FLOAT32_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.539 = private unnamed_addr constant [49 x i8] c"c:V8.SizeOf_FLOAT32_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.540 = private unnamed_addr constant [50 x i8] c"c:V8.CountOf_FLOAT64_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.541 = private unnamed_addr constant [49 x i8] c"c:V8.SizeOf_FLOAT64_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.542 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_INT16_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.543 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_INT16_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.544 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_INT32_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.545 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_INT32_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.546 = private unnamed_addr constant [47 x i8] c"c:V8.CountOf_INT8_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.547 = private unnamed_addr constant [46 x i8] c"c:V8.SizeOf_INT8_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.548 = private unnamed_addr constant [49 x i8] c"c:V8.CountOf_UINT16_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.549 = private unnamed_addr constant [48 x i8] c"c:V8.SizeOf_UINT16_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.550 = private unnamed_addr constant [49 x i8] c"c:V8.CountOf_UINT32_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.551 = private unnamed_addr constant [48 x i8] c"c:V8.SizeOf_UINT32_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.552 = private unnamed_addr constant [56 x i8] c"c:V8.CountOf_UINT8_CLAMPED_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.553 = private unnamed_addr constant [55 x i8] c"c:V8.SizeOf_UINT8_CLAMPED_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.554 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_UINT8_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.555 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_UINT8_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.556 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_JS_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.557 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_JS_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.558 = private unnamed_addr constant [41 x i8] c"c:V8.CountOf_JS_PROMISE_CONSTRUCTOR_TYPE\00", align 1
@.str.559 = private unnamed_addr constant [40 x i8] c"c:V8.SizeOf_JS_PROMISE_CONSTRUCTOR_TYPE\00", align 1
@.str.560 = private unnamed_addr constant [41 x i8] c"c:V8.CountOf_JS_REG_EXP_CONSTRUCTOR_TYPE\00", align 1
@.str.561 = private unnamed_addr constant [40 x i8] c"c:V8.SizeOf_JS_REG_EXP_CONSTRUCTOR_TYPE\00", align 1
@.str.562 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_JS_MAP_KEY_ITERATOR_TYPE\00", align 1
@.str.563 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_JS_MAP_KEY_ITERATOR_TYPE\00", align 1
@.str.564 = private unnamed_addr constant [44 x i8] c"c:V8.CountOf_JS_MAP_KEY_VALUE_ITERATOR_TYPE\00", align 1
@.str.565 = private unnamed_addr constant [43 x i8] c"c:V8.SizeOf_JS_MAP_KEY_VALUE_ITERATOR_TYPE\00", align 1
@.str.566 = private unnamed_addr constant [40 x i8] c"c:V8.CountOf_JS_MAP_VALUE_ITERATOR_TYPE\00", align 1
@.str.567 = private unnamed_addr constant [39 x i8] c"c:V8.SizeOf_JS_MAP_VALUE_ITERATOR_TYPE\00", align 1
@.str.568 = private unnamed_addr constant [44 x i8] c"c:V8.CountOf_JS_SET_KEY_VALUE_ITERATOR_TYPE\00", align 1
@.str.569 = private unnamed_addr constant [43 x i8] c"c:V8.SizeOf_JS_SET_KEY_VALUE_ITERATOR_TYPE\00", align 1
@.str.570 = private unnamed_addr constant [40 x i8] c"c:V8.CountOf_JS_SET_VALUE_ITERATOR_TYPE\00", align 1
@.str.571 = private unnamed_addr constant [39 x i8] c"c:V8.SizeOf_JS_SET_VALUE_ITERATOR_TYPE\00", align 1
@.str.572 = private unnamed_addr constant [31 x i8] c"c:V8.CountOf_JS_DATA_VIEW_TYPE\00", align 1
@.str.573 = private unnamed_addr constant [30 x i8] c"c:V8.SizeOf_JS_DATA_VIEW_TYPE\00", align 1
@.str.574 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_JS_TYPED_ARRAY_TYPE\00", align 1
@.str.575 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_JS_TYPED_ARRAY_TYPE\00", align 1
@.str.576 = private unnamed_addr constant [25 x i8] c"c:V8.CountOf_JS_MAP_TYPE\00", align 1
@.str.577 = private unnamed_addr constant [24 x i8] c"c:V8.SizeOf_JS_MAP_TYPE\00", align 1
@.str.578 = private unnamed_addr constant [25 x i8] c"c:V8.CountOf_JS_SET_TYPE\00", align 1
@.str.579 = private unnamed_addr constant [24 x i8] c"c:V8.SizeOf_JS_SET_TYPE\00", align 1
@.str.580 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_JS_WEAK_MAP_TYPE\00", align 1
@.str.581 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_JS_WEAK_MAP_TYPE\00", align 1
@.str.582 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_JS_WEAK_SET_TYPE\00", align 1
@.str.583 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_JS_WEAK_SET_TYPE\00", align 1
@.str.584 = private unnamed_addr constant [27 x i8] c"c:V8.CountOf_JS_ARRAY_TYPE\00", align 1
@.str.585 = private unnamed_addr constant [26 x i8] c"c:V8.SizeOf_JS_ARRAY_TYPE\00", align 1
@.str.586 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_JS_ARRAY_BUFFER_TYPE\00", align 1
@.str.587 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_JS_ARRAY_BUFFER_TYPE\00", align 1
@.str.588 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_JS_ARRAY_ITERATOR_TYPE\00", align 1
@.str.589 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_JS_ARRAY_ITERATOR_TYPE\00", align 1
@.str.590 = private unnamed_addr constant [46 x i8] c"c:V8.CountOf_JS_ASYNC_FROM_SYNC_ITERATOR_TYPE\00", align 1
@.str.591 = private unnamed_addr constant [45 x i8] c"c:V8.SizeOf_JS_ASYNC_FROM_SYNC_ITERATOR_TYPE\00", align 1
@.str.592 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_JS_COLLATOR_TYPE\00", align 1
@.str.593 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_JS_COLLATOR_TYPE\00", align 1
@.str.594 = private unnamed_addr constant [46 x i8] c"c:V8.CountOf_JS_CONTEXT_EXTENSION_OBJECT_TYPE\00", align 1
@.str.595 = private unnamed_addr constant [45 x i8] c"c:V8.SizeOf_JS_CONTEXT_EXTENSION_OBJECT_TYPE\00", align 1
@.str.596 = private unnamed_addr constant [26 x i8] c"c:V8.CountOf_JS_DATE_TYPE\00", align 1
@.str.597 = private unnamed_addr constant [25 x i8] c"c:V8.SizeOf_JS_DATE_TYPE\00", align 1
@.str.598 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_JS_DATE_TIME_FORMAT_TYPE\00", align 1
@.str.599 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_JS_DATE_TIME_FORMAT_TYPE\00", align 1
@.str.600 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_JS_DISPLAY_NAMES_TYPE\00", align 1
@.str.601 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_JS_DISPLAY_NAMES_TYPE\00", align 1
@.str.602 = private unnamed_addr constant [27 x i8] c"c:V8.CountOf_JS_ERROR_TYPE\00", align 1
@.str.603 = private unnamed_addr constant [26 x i8] c"c:V8.SizeOf_JS_ERROR_TYPE\00", align 1
@.str.604 = private unnamed_addr constant [43 x i8] c"c:V8.CountOf_JS_FINALIZATION_REGISTRY_TYPE\00", align 1
@.str.605 = private unnamed_addr constant [42 x i8] c"c:V8.SizeOf_JS_FINALIZATION_REGISTRY_TYPE\00", align 1
@.str.606 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_JS_LIST_FORMAT_TYPE\00", align 1
@.str.607 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_JS_LIST_FORMAT_TYPE\00", align 1
@.str.608 = private unnamed_addr constant [28 x i8] c"c:V8.CountOf_JS_LOCALE_TYPE\00", align 1
@.str.609 = private unnamed_addr constant [27 x i8] c"c:V8.SizeOf_JS_LOCALE_TYPE\00", align 1
@.str.610 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_JS_MESSAGE_OBJECT_TYPE\00", align 1
@.str.611 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_JS_MESSAGE_OBJECT_TYPE\00", align 1
@.str.612 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_JS_NUMBER_FORMAT_TYPE\00", align 1
@.str.613 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_JS_NUMBER_FORMAT_TYPE\00", align 1
@.str.614 = private unnamed_addr constant [34 x i8] c"c:V8.CountOf_JS_PLURAL_RULES_TYPE\00", align 1
@.str.615 = private unnamed_addr constant [33 x i8] c"c:V8.SizeOf_JS_PLURAL_RULES_TYPE\00", align 1
@.str.616 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_JS_PROMISE_TYPE\00", align 1
@.str.617 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_JS_PROMISE_TYPE\00", align 1
@.str.618 = private unnamed_addr constant [29 x i8] c"c:V8.CountOf_JS_REG_EXP_TYPE\00", align 1
@.str.619 = private unnamed_addr constant [28 x i8] c"c:V8.SizeOf_JS_REG_EXP_TYPE\00", align 1
@.str.620 = private unnamed_addr constant [45 x i8] c"c:V8.CountOf_JS_REG_EXP_STRING_ITERATOR_TYPE\00", align 1
@.str.621 = private unnamed_addr constant [44 x i8] c"c:V8.SizeOf_JS_REG_EXP_STRING_ITERATOR_TYPE\00", align 1
@.str.622 = private unnamed_addr constant [42 x i8] c"c:V8.CountOf_JS_RELATIVE_TIME_FORMAT_TYPE\00", align 1
@.str.623 = private unnamed_addr constant [41 x i8] c"c:V8.SizeOf_JS_RELATIVE_TIME_FORMAT_TYPE\00", align 1
@.str.624 = private unnamed_addr constant [38 x i8] c"c:V8.CountOf_JS_SEGMENT_ITERATOR_TYPE\00", align 1
@.str.625 = private unnamed_addr constant [37 x i8] c"c:V8.SizeOf_JS_SEGMENT_ITERATOR_TYPE\00", align 1
@.str.626 = private unnamed_addr constant [31 x i8] c"c:V8.CountOf_JS_SEGMENTER_TYPE\00", align 1
@.str.627 = private unnamed_addr constant [30 x i8] c"c:V8.SizeOf_JS_SEGMENTER_TYPE\00", align 1
@.str.628 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_JS_SEGMENTS_TYPE\00", align 1
@.str.629 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_JS_SEGMENTS_TYPE\00", align 1
@.str.630 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_JS_STRING_ITERATOR_TYPE\00", align 1
@.str.631 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_JS_STRING_ITERATOR_TYPE\00", align 1
@.str.632 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_JS_V8_BREAK_ITERATOR_TYPE\00", align 1
@.str.633 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_JS_V8_BREAK_ITERATOR_TYPE\00", align 1
@.str.634 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_JS_WEAK_REF_TYPE\00", align 1
@.str.635 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_JS_WEAK_REF_TYPE\00", align 1
@.str.636 = private unnamed_addr constant [40 x i8] c"c:V8.CountOf_WASM_EXCEPTION_OBJECT_TYPE\00", align 1
@.str.637 = private unnamed_addr constant [39 x i8] c"c:V8.SizeOf_WASM_EXCEPTION_OBJECT_TYPE\00", align 1
@.str.638 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_WASM_GLOBAL_OBJECT_TYPE\00", align 1
@.str.639 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_WASM_GLOBAL_OBJECT_TYPE\00", align 1
@.str.640 = private unnamed_addr constant [39 x i8] c"c:V8.CountOf_WASM_INSTANCE_OBJECT_TYPE\00", align 1
@.str.641 = private unnamed_addr constant [38 x i8] c"c:V8.SizeOf_WASM_INSTANCE_OBJECT_TYPE\00", align 1
@.str.642 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_WASM_MEMORY_OBJECT_TYPE\00", align 1
@.str.643 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_WASM_MEMORY_OBJECT_TYPE\00", align 1
@.str.644 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_WASM_MODULE_OBJECT_TYPE\00", align 1
@.str.645 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_WASM_MODULE_OBJECT_TYPE\00", align 1
@.str.646 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_WASM_TABLE_OBJECT_TYPE\00", align 1
@.str.647 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_WASM_TABLE_OBJECT_TYPE\00", align 1
@.str.648 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_WASM_VALUE_OBJECT_TYPE\00", align 1
@.str.649 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_WASM_VALUE_OBJECT_TYPE\00", align 1
@.str.650 = private unnamed_addr constant [40 x i8] c"c:V8.CountOf_CODE_TYPE-BYTECODE_HANDLER\00", align 1
@.str.651 = private unnamed_addr constant [39 x i8] c"c:V8.SizeOf_CODE_TYPE-BYTECODE_HANDLER\00", align 1
@.str.652 = private unnamed_addr constant [35 x i8] c"c:V8.CountOf_CODE_TYPE-FOR_TESTING\00", align 1
@.str.653 = private unnamed_addr constant [34 x i8] c"c:V8.SizeOf_CODE_TYPE-FOR_TESTING\00", align 1
@.str.654 = private unnamed_addr constant [31 x i8] c"c:V8.CountOf_CODE_TYPE-BUILTIN\00", align 1
@.str.655 = private unnamed_addr constant [30 x i8] c"c:V8.SizeOf_CODE_TYPE-BUILTIN\00", align 1
@.str.656 = private unnamed_addr constant [30 x i8] c"c:V8.CountOf_CODE_TYPE-REGEXP\00", align 1
@.str.657 = private unnamed_addr constant [29 x i8] c"c:V8.SizeOf_CODE_TYPE-REGEXP\00", align 1
@.str.658 = private unnamed_addr constant [37 x i8] c"c:V8.CountOf_CODE_TYPE-WASM_FUNCTION\00", align 1
@.str.659 = private unnamed_addr constant [36 x i8] c"c:V8.SizeOf_CODE_TYPE-WASM_FUNCTION\00", align 1
@.str.660 = private unnamed_addr constant [45 x i8] c"c:V8.CountOf_CODE_TYPE-WASM_TO_CAPI_FUNCTION\00", align 1
@.str.661 = private unnamed_addr constant [44 x i8] c"c:V8.SizeOf_CODE_TYPE-WASM_TO_CAPI_FUNCTION\00", align 1
@.str.662 = private unnamed_addr constant [43 x i8] c"c:V8.CountOf_CODE_TYPE-WASM_TO_JS_FUNCTION\00", align 1
@.str.663 = private unnamed_addr constant [42 x i8] c"c:V8.SizeOf_CODE_TYPE-WASM_TO_JS_FUNCTION\00", align 1
@.str.664 = private unnamed_addr constant [43 x i8] c"c:V8.CountOf_CODE_TYPE-JS_TO_WASM_FUNCTION\00", align 1
@.str.665 = private unnamed_addr constant [42 x i8] c"c:V8.SizeOf_CODE_TYPE-JS_TO_WASM_FUNCTION\00", align 1
@.str.666 = private unnamed_addr constant [41 x i8] c"c:V8.CountOf_CODE_TYPE-JS_TO_JS_FUNCTION\00", align 1
@.str.667 = private unnamed_addr constant [40 x i8] c"c:V8.SizeOf_CODE_TYPE-JS_TO_JS_FUNCTION\00", align 1
@.str.668 = private unnamed_addr constant [36 x i8] c"c:V8.CountOf_CODE_TYPE-C_WASM_ENTRY\00", align 1
@.str.669 = private unnamed_addr constant [35 x i8] c"c:V8.SizeOf_CODE_TYPE-C_WASM_ENTRY\00", align 1
@.str.670 = private unnamed_addr constant [44 x i8] c"c:V8.CountOf_CODE_TYPE-INTERPRETED_FUNCTION\00", align 1
@.str.671 = private unnamed_addr constant [43 x i8] c"c:V8.SizeOf_CODE_TYPE-INTERPRETED_FUNCTION\00", align 1
@.str.672 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_CODE_TYPE-BASELINE\00", align 1
@.str.673 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_CODE_TYPE-BASELINE\00", align 1
@.str.674 = private unnamed_addr constant [33 x i8] c"c:V8.CountOf_CODE_TYPE-TURBOPROP\00", align 1
@.str.675 = private unnamed_addr constant [32 x i8] c"c:V8.SizeOf_CODE_TYPE-TURBOPROP\00", align 1
@.str.676 = private unnamed_addr constant [32 x i8] c"c:V8.CountOf_CODE_TYPE-TURBOFAN\00", align 1
@.str.677 = private unnamed_addr constant [31 x i8] c"c:V8.SizeOf_CODE_TYPE-TURBOFAN\00", align 1
@.str.678 = private unnamed_addr constant [63 x i8] c"c:V8.CountOf_FIXED_ARRAY-BYTECODE_ARRAY_CONSTANT_POOL_SUB_TYPE\00", align 1
@.str.679 = private unnamed_addr constant [62 x i8] c"c:V8.SizeOf_FIXED_ARRAY-BYTECODE_ARRAY_CONSTANT_POOL_SUB_TYPE\00", align 1
@.str.680 = private unnamed_addr constant [63 x i8] c"c:V8.CountOf_FIXED_ARRAY-BYTECODE_ARRAY_HANDLER_TABLE_SUB_TYPE\00", align 1
@.str.681 = private unnamed_addr constant [62 x i8] c"c:V8.SizeOf_FIXED_ARRAY-BYTECODE_ARRAY_HANDLER_TABLE_SUB_TYPE\00", align 1
@.str.682 = private unnamed_addr constant [51 x i8] c"c:V8.CountOf_FIXED_ARRAY-CODE_STUBS_TABLE_SUB_TYPE\00", align 1
@.str.683 = private unnamed_addr constant [50 x i8] c"c:V8.SizeOf_FIXED_ARRAY-CODE_STUBS_TABLE_SUB_TYPE\00", align 1
@.str.684 = private unnamed_addr constant [58 x i8] c"c:V8.CountOf_FIXED_ARRAY-COMPILATION_CACHE_TABLE_SUB_TYPE\00", align 1
@.str.685 = private unnamed_addr constant [57 x i8] c"c:V8.SizeOf_FIXED_ARRAY-COMPILATION_CACHE_TABLE_SUB_TYPE\00", align 1
@.str.686 = private unnamed_addr constant [42 x i8] c"c:V8.CountOf_FIXED_ARRAY-CONTEXT_SUB_TYPE\00", align 1
@.str.687 = private unnamed_addr constant [41 x i8] c"c:V8.SizeOf_FIXED_ARRAY-CONTEXT_SUB_TYPE\00", align 1
@.str.688 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_FIXED_ARRAY-COPY_ON_WRITE_SUB_TYPE\00", align 1
@.str.689 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_FIXED_ARRAY-COPY_ON_WRITE_SUB_TYPE\00", align 1
@.str.690 = private unnamed_addr constant [54 x i8] c"c:V8.CountOf_FIXED_ARRAY-DEOPTIMIZATION_DATA_SUB_TYPE\00", align 1
@.str.691 = private unnamed_addr constant [53 x i8] c"c:V8.SizeOf_FIXED_ARRAY-DEOPTIMIZATION_DATA_SUB_TYPE\00", align 1
@.str.692 = private unnamed_addr constant [51 x i8] c"c:V8.CountOf_FIXED_ARRAY-DESCRIPTOR_ARRAY_SUB_TYPE\00", align 1
@.str.693 = private unnamed_addr constant [50 x i8] c"c:V8.SizeOf_FIXED_ARRAY-DESCRIPTOR_ARRAY_SUB_TYPE\00", align 1
@.str.694 = private unnamed_addr constant [50 x i8] c"c:V8.CountOf_FIXED_ARRAY-EMBEDDED_OBJECT_SUB_TYPE\00", align 1
@.str.695 = private unnamed_addr constant [49 x i8] c"c:V8.SizeOf_FIXED_ARRAY-EMBEDDED_OBJECT_SUB_TYPE\00", align 1
@.str.696 = private unnamed_addr constant [45 x i8] c"c:V8.CountOf_FIXED_ARRAY-ENUM_CACHE_SUB_TYPE\00", align 1
@.str.697 = private unnamed_addr constant [44 x i8] c"c:V8.SizeOf_FIXED_ARRAY-ENUM_CACHE_SUB_TYPE\00", align 1
@.str.698 = private unnamed_addr constant [53 x i8] c"c:V8.CountOf_FIXED_ARRAY-ENUM_INDICES_CACHE_SUB_TYPE\00", align 1
@.str.699 = private unnamed_addr constant [52 x i8] c"c:V8.SizeOf_FIXED_ARRAY-ENUM_INDICES_CACHE_SUB_TYPE\00", align 1
@.str.700 = private unnamed_addr constant [49 x i8] c"c:V8.CountOf_FIXED_ARRAY-DEPENDENT_CODE_SUB_TYPE\00", align 1
@.str.701 = private unnamed_addr constant [48 x i8] c"c:V8.SizeOf_FIXED_ARRAY-DEPENDENT_CODE_SUB_TYPE\00", align 1
@.str.702 = private unnamed_addr constant [54 x i8] c"c:V8.CountOf_FIXED_ARRAY-DICTIONARY_ELEMENTS_SUB_TYPE\00", align 1
@.str.703 = private unnamed_addr constant [53 x i8] c"c:V8.SizeOf_FIXED_ARRAY-DICTIONARY_ELEMENTS_SUB_TYPE\00", align 1
@.str.704 = private unnamed_addr constant [56 x i8] c"c:V8.CountOf_FIXED_ARRAY-DICTIONARY_PROPERTIES_SUB_TYPE\00", align 1
@.str.705 = private unnamed_addr constant [55 x i8] c"c:V8.SizeOf_FIXED_ARRAY-DICTIONARY_PROPERTIES_SUB_TYPE\00", align 1
@.str.706 = private unnamed_addr constant [62 x i8] c"c:V8.CountOf_FIXED_ARRAY-EMPTY_PROPERTIES_DICTIONARY_SUB_TYPE\00", align 1
@.str.707 = private unnamed_addr constant [61 x i8] c"c:V8.SizeOf_FIXED_ARRAY-EMPTY_PROPERTIES_DICTIONARY_SUB_TYPE\00", align 1
@.str.708 = private unnamed_addr constant [50 x i8] c"c:V8.CountOf_FIXED_ARRAY-PACKED_ELEMENTS_SUB_TYPE\00", align 1
@.str.709 = private unnamed_addr constant [49 x i8] c"c:V8.SizeOf_FIXED_ARRAY-PACKED_ELEMENTS_SUB_TYPE\00", align 1
@.str.710 = private unnamed_addr constant [50 x i8] c"c:V8.CountOf_FIXED_ARRAY-FAST_PROPERTIES_SUB_TYPE\00", align 1
@.str.711 = private unnamed_addr constant [49 x i8] c"c:V8.SizeOf_FIXED_ARRAY-FAST_PROPERTIES_SUB_TYPE\00", align 1
@.str.712 = private unnamed_addr constant [69 x i8] c"c:V8.CountOf_FIXED_ARRAY-FAST_TEMPLATE_INSTANTIATIONS_CACHE_SUB_TYPE\00", align 1
@.str.713 = private unnamed_addr constant [68 x i8] c"c:V8.SizeOf_FIXED_ARRAY-FAST_TEMPLATE_INSTANTIATIONS_CACHE_SUB_TYPE\00", align 1
@.str.714 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_FIXED_ARRAY-HANDLER_TABLE_SUB_TYPE\00", align 1
@.str.715 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_FIXED_ARRAY-HANDLER_TABLE_SUB_TYPE\00", align 1
@.str.716 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_FIXED_ARRAY-JS_COLLECTION_SUB_TYPE\00", align 1
@.str.717 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_FIXED_ARRAY-JS_COLLECTION_SUB_TYPE\00", align 1
@.str.718 = private unnamed_addr constant [53 x i8] c"c:V8.CountOf_FIXED_ARRAY-JS_WEAK_COLLECTION_SUB_TYPE\00", align 1
@.str.719 = private unnamed_addr constant [52 x i8] c"c:V8.SizeOf_FIXED_ARRAY-JS_WEAK_COLLECTION_SUB_TYPE\00", align 1
@.str.720 = private unnamed_addr constant [65 x i8] c"c:V8.CountOf_FIXED_ARRAY-NOSCRIPT_SHARED_FUNCTION_INFOS_SUB_TYPE\00", align 1
@.str.721 = private unnamed_addr constant [64 x i8] c"c:V8.SizeOf_FIXED_ARRAY-NOSCRIPT_SHARED_FUNCTION_INFOS_SUB_TYPE\00", align 1
@.str.722 = private unnamed_addr constant [54 x i8] c"c:V8.CountOf_FIXED_ARRAY-NUMBER_STRING_CACHE_SUB_TYPE\00", align 1
@.str.723 = private unnamed_addr constant [53 x i8] c"c:V8.SizeOf_FIXED_ARRAY-NUMBER_STRING_CACHE_SUB_TYPE\00", align 1
@.str.724 = private unnamed_addr constant [49 x i8] c"c:V8.CountOf_FIXED_ARRAY-OBJECT_TO_CODE_SUB_TYPE\00", align 1
@.str.725 = private unnamed_addr constant [48 x i8] c"c:V8.SizeOf_FIXED_ARRAY-OBJECT_TO_CODE_SUB_TYPE\00", align 1
@.str.726 = private unnamed_addr constant [58 x i8] c"c:V8.CountOf_FIXED_ARRAY-OPTIMIZED_CODE_LITERALS_SUB_TYPE\00", align 1
@.str.727 = private unnamed_addr constant [57 x i8] c"c:V8.SizeOf_FIXED_ARRAY-OPTIMIZED_CODE_LITERALS_SUB_TYPE\00", align 1
@.str.728 = private unnamed_addr constant [53 x i8] c"c:V8.CountOf_FIXED_ARRAY-OPTIMIZED_CODE_MAP_SUB_TYPE\00", align 1
@.str.729 = private unnamed_addr constant [52 x i8] c"c:V8.SizeOf_FIXED_ARRAY-OPTIMIZED_CODE_MAP_SUB_TYPE\00", align 1
@.str.730 = private unnamed_addr constant [50 x i8] c"c:V8.CountOf_FIXED_ARRAY-PROTOTYPE_USERS_SUB_TYPE\00", align 1
@.str.731 = private unnamed_addr constant [49 x i8] c"c:V8.SizeOf_FIXED_ARRAY-PROTOTYPE_USERS_SUB_TYPE\00", align 1
@.str.732 = private unnamed_addr constant [56 x i8] c"c:V8.CountOf_FIXED_ARRAY-REGEXP_MULTIPLE_CACHE_SUB_TYPE\00", align 1
@.str.733 = private unnamed_addr constant [55 x i8] c"c:V8.SizeOf_FIXED_ARRAY-REGEXP_MULTIPLE_CACHE_SUB_TYPE\00", align 1
@.str.734 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_FIXED_ARRAY-RETAINED_MAPS_SUB_TYPE\00", align 1
@.str.735 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_FIXED_ARRAY-RETAINED_MAPS_SUB_TYPE\00", align 1
@.str.736 = private unnamed_addr constant [45 x i8] c"c:V8.CountOf_FIXED_ARRAY-SCOPE_INFO_SUB_TYPE\00", align 1
@.str.737 = private unnamed_addr constant [44 x i8] c"c:V8.SizeOf_FIXED_ARRAY-SCOPE_INFO_SUB_TYPE\00", align 1
@.str.738 = private unnamed_addr constant [46 x i8] c"c:V8.CountOf_FIXED_ARRAY-SCRIPT_LIST_SUB_TYPE\00", align 1
@.str.739 = private unnamed_addr constant [45 x i8] c"c:V8.SizeOf_FIXED_ARRAY-SCRIPT_LIST_SUB_TYPE\00", align 1
@.str.740 = private unnamed_addr constant [53 x i8] c"c:V8.CountOf_FIXED_ARRAY-SERIALIZED_OBJECTS_SUB_TYPE\00", align 1
@.str.741 = private unnamed_addr constant [52 x i8] c"c:V8.SizeOf_FIXED_ARRAY-SERIALIZED_OBJECTS_SUB_TYPE\00", align 1
@.str.742 = private unnamed_addr constant [56 x i8] c"c:V8.CountOf_FIXED_ARRAY-SHARED_FUNCTION_INFOS_SUB_TYPE\00", align 1
@.str.743 = private unnamed_addr constant [55 x i8] c"c:V8.SizeOf_FIXED_ARRAY-SHARED_FUNCTION_INFOS_SUB_TYPE\00", align 1
@.str.744 = private unnamed_addr constant [64 x i8] c"c:V8.CountOf_FIXED_ARRAY-SINGLE_CHARACTER_STRING_CACHE_SUB_TYPE\00", align 1
@.str.745 = private unnamed_addr constant [63 x i8] c"c:V8.SizeOf_FIXED_ARRAY-SINGLE_CHARACTER_STRING_CACHE_SUB_TYPE\00", align 1
@.str.746 = private unnamed_addr constant [69 x i8] c"c:V8.CountOf_FIXED_ARRAY-SLOW_TEMPLATE_INSTANTIATIONS_CACHE_SUB_TYPE\00", align 1
@.str.747 = private unnamed_addr constant [68 x i8] c"c:V8.SizeOf_FIXED_ARRAY-SLOW_TEMPLATE_INSTANTIATIONS_CACHE_SUB_TYPE\00", align 1
@.str.748 = private unnamed_addr constant [53 x i8] c"c:V8.CountOf_FIXED_ARRAY-STRING_SPLIT_CACHE_SUB_TYPE\00", align 1
@.str.749 = private unnamed_addr constant [52 x i8] c"c:V8.SizeOf_FIXED_ARRAY-STRING_SPLIT_CACHE_SUB_TYPE\00", align 1
@.str.750 = private unnamed_addr constant [48 x i8] c"c:V8.CountOf_FIXED_ARRAY-TEMPLATE_INFO_SUB_TYPE\00", align 1
@.str.751 = private unnamed_addr constant [47 x i8] c"c:V8.SizeOf_FIXED_ARRAY-TEMPLATE_INFO_SUB_TYPE\00", align 1
@.str.752 = private unnamed_addr constant [52 x i8] c"c:V8.CountOf_FIXED_ARRAY-FEEDBACK_METADATA_SUB_TYPE\00", align 1
@.str.753 = private unnamed_addr constant [51 x i8] c"c:V8.SizeOf_FIXED_ARRAY-FEEDBACK_METADATA_SUB_TYPE\00", align 1
@.str.754 = private unnamed_addr constant [64 x i8] c"c:V8.CountOf_FIXED_ARRAY-WEAK_NEW_SPACE_OBJECT_TO_CODE_SUB_TYPE\00", align 1
@.str.755 = private unnamed_addr constant [63 x i8] c"c:V8.SizeOf_FIXED_ARRAY-WEAK_NEW_SPACE_OBJECT_TO_CODE_SUB_TYPE\00", align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1

@_ZN2v88internal10StatsTableC1EPNS0_8CountersE = hidden unnamed_addr alias void (%"class.v8::internal::StatsTable"*, %"class.v8::internal::Counters"*), void (%"class.v8::internal::StatsTable"*, %"class.v8::internal::Counters"*)* @_ZN2v88internal10StatsTableC2EPNS0_8CountersE
@_ZN2v88internal22StatsCounterThreadSafeC1EPNS0_8CountersEPKc = hidden unnamed_addr alias void (%"class.v8::internal::StatsCounterThreadSafe"*, %"class.v8::internal::Counters"*, i8*), void (%"class.v8::internal::StatsCounterThreadSafe"*, %"class.v8::internal::Counters"*, i8*)* @_ZN2v88internal22StatsCounterThreadSafeC2EPNS0_8CountersEPKc
@_ZN2v88internal8CountersC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::Counters"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::Counters"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal8CountersC2EPNS0_7IsolateE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal10StatsTableC2EPNS0_8CountersE(%"class.v8::internal::StatsTable"* nocapture, %"class.v8::internal::Counters"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::StatsTable"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal10StatsTable18SetCounterFunctionEPFPiPKcE(%"class.v8::internal::StatsTable"* nocapture, i32* (i8*)*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::StatsTable", %"class.v8::internal::StatsTable"* %0, i64 0, i32 0
  store i32* (i8*)* %1, i32* (i8*)** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StatsCounterBase", %"class.v8::internal::StatsCounterBase"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %3, i64 0, i32 760, i32 0
  %5 = load i32* (i8*)*, i32* (i8*)** %4, align 8
  %6 = icmp eq i32* (i8*)* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::StatsCounterBase", %"class.v8::internal::StatsCounterBase"* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32* %5(i8* %9) #4
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32* [ %10, %7 ], [ null, %1 ]
  ret i32* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22StatsCounterThreadSafeC2EPNS0_8CountersEPKc(%"class.v8::internal::StatsCounterThreadSafe"*, %"class.v8::internal::Counters"*, i8*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::Counters"* %1, %"class.v8::internal::Counters"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 0, i32 1
  store i8* %2, i8** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 0, i32 2
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %7) #4
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22StatsCounterThreadSafe3SetEi(%"class.v8::internal::StatsCounterThreadSafe"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %7) #4
  %8 = load i32*, i32** %3, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %7) #4
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22StatsCounterThreadSafe9IncrementEv(%"class.v8::internal::StatsCounterThreadSafe"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 0, i32 2
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %6) #4
  %7 = load i32*, i32** %2, align 8
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 4
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %6) #4
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22StatsCounterThreadSafe9IncrementEi(%"class.v8::internal::StatsCounterThreadSafe"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %7) #4
  %8 = load i32*, i32** %3, align 8
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %1
  store i32 %10, i32* %8, align 4
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %7) #4
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22StatsCounterThreadSafe9DecrementEv(%"class.v8::internal::StatsCounterThreadSafe"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 0, i32 2
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %6) #4
  %7 = load i32*, i32** %2, align 8
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %7, align 4
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %6) #4
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22StatsCounterThreadSafe9DecrementEi(%"class.v8::internal::StatsCounterThreadSafe"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %7) #4
  %8 = load i32*, i32** %3, align 8
  %9 = load i32, i32* %8, align 4
  %10 = sub nsw i32 %9, %1
  store i32 %10, i32* %8, align 4
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %7) #4
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Histogram", %"class.v8::internal::Histogram"* %0, i64 0, i32 4
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Histogram", %"class.v8::internal::Histogram"* %0, i64 0, i32 5
  %8 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %8, i64 0, i32 760, i32 2
  %10 = load void (i8*, i32)*, void (i8*, i32)** %9, align 8
  %11 = icmp eq void (i8*, i32)* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call void %10(i8* nonnull %4, i32 %1) #4
  br label %13

13:                                               ; preds = %2, %12, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK2v88internal9Histogram15CreateHistogramEv(%"class.v8::internal::Histogram"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Histogram", %"class.v8::internal::Histogram"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %3, i64 0, i32 760, i32 1
  %5 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %4, align 8
  %6 = icmp eq i8* (i8*, i32, i32, i64)* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::Histogram", %"class.v8::internal::Histogram"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::Histogram", %"class.v8::internal::Histogram"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.v8::internal::Histogram", %"class.v8::internal::Histogram"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Histogram", %"class.v8::internal::Histogram"* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i8* %5(i8* %16, i32 %14, i32 %12, i64 %10) #4
  br label %18

18:                                               ; preds = %1, %7
  %19 = phi i8* [ %17, %7 ], [ null, %1 ]
  ret i8* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14TimedHistogram14AddTimedSampleENS_4base9TimeDeltaE(%"class.v8::internal::TimedHistogram"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.v8::base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %3, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = call i64 @_ZNK2v84base9TimeDelta14InMicrosecondsEv(%"class.v8::base::TimeDelta"* nonnull %3) #4
  br label %16

14:                                               ; preds = %8
  %15 = call i64 @_ZNK2v84base9TimeDelta14InMillisecondsEv(%"class.v8::base::TimeDelta"* nonnull %3) #4
  br label %16

16:                                               ; preds = %14, %12
  %17 = phi i64 [ %13, %12 ], [ %15, %14 ]
  %18 = trunc i64 %17 to i32
  %19 = load i8*, i8** %5, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 5
  %23 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %23, i64 0, i32 760, i32 2
  %25 = load void (i8*, i32)*, void (i8*, i32)** %24, align 8
  %26 = icmp eq void (i8*, i32)* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  call void %25(i8* nonnull %19, i32 %18) #4
  br label %28

28:                                               ; preds = %2, %27, %21, %16
  ret void
}

declare i64 @_ZNK2v84base9TimeDelta14InMicrosecondsEv(%"class.v8::base::TimeDelta"*) local_unnamed_addr #2

declare i64 @_ZNK2v84base9TimeDelta14InMillisecondsEv(%"class.v8::base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14TimedHistogram5StartEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"* nocapture readonly, %"class.v8::base::ElapsedTimer"* nocapture, %"class.v8::internal::Isolate"* readonly) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 4
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #4
  %9 = getelementptr inbounds %"class.v8::base::ElapsedTimer", %"class.v8::base::ElapsedTimer"* %1, i64 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 79
  %16 = load void (i8*, i32)*, void (i8*, i32)** %15, align 8
  %17 = icmp eq void (i8*, i32)* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %12
  %19 = icmp eq void (i8*, i32)* %16, @_ZN2v88internal6Logger26DefaultEventLoggerSentinelEPKci
  br i1 %19, label %20, label %26

20:                                               ; preds = %18
  %21 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 21
  %25 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %24, align 8
  tail call void @_ZN2v88internal6Logger10TimerEventENS1_8StartEndEPKc(%"class.v8::internal::Logger"* %25, i32 0, i8* %14) #4
  br label %27

26:                                               ; preds = %18
  tail call void %16(i8* %14, i32 0) #4
  br label %27

27:                                               ; preds = %26, %23, %20, %12, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14TimedHistogram4StopEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"* nocapture readonly, %"class.v8::base::ElapsedTimer"* nocapture, %"class.v8::internal::Isolate"* readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.v8::base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #4
  %10 = getelementptr inbounds %"class.v8::base::ElapsedTimer", %"class.v8::base::ElapsedTimer"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %9, %11
  store i64 0, i64* %10, align 8
  %13 = bitcast %"class.v8::base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %4, i64 0, i32 0
  store i64 %12, i64* %14, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %37, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = call i64 @_ZNK2v84base9TimeDelta14InMicrosecondsEv(%"class.v8::base::TimeDelta"* nonnull %4) #4
  br label %25

23:                                               ; preds = %17
  %24 = call i64 @_ZNK2v84base9TimeDelta14InMillisecondsEv(%"class.v8::base::TimeDelta"* nonnull %4) #4
  br label %25

25:                                               ; preds = %23, %21
  %26 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %27 = trunc i64 %26 to i32
  %28 = load i8*, i8** %5, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 5
  %32 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %32, i64 0, i32 760, i32 2
  %34 = load void (i8*, i32)*, void (i8*, i32)** %33, align 8
  %35 = icmp eq void (i8*, i32)* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  call void %34(i8* nonnull %28, i32 %27) #4
  br label %37

37:                                               ; preds = %8, %25, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  br label %38

38:                                               ; preds = %3, %37
  %39 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %39, label %55, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 79
  %44 = load void (i8*, i32)*, void (i8*, i32)** %43, align 8
  %45 = icmp eq void (i8*, i32)* %44, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %40
  %47 = icmp eq void (i8*, i32)* %44, @_ZN2v88internal6Logger26DefaultEventLoggerSentinelEPKci
  br i1 %47, label %48, label %54

48:                                               ; preds = %46
  %49 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 21
  %53 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %52, align 8
  call void @_ZN2v88internal6Logger10TimerEventENS1_8StartEndEPKc(%"class.v8::internal::Logger"* %53, i32 1, i8* %42) #4
  br label %55

54:                                               ; preds = %46
  call void %44(i8* %42, i32 1) #4
  br label %55

55:                                               ; preds = %54, %51, %48, %40, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14TimedHistogram13RecordAbandonEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"* nocapture readonly, %"class.v8::base::ElapsedTimer"* nocapture, %"class.v8::internal::Isolate"* readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.v8::base::TimeDelta", align 8
  %5 = alloca %"class.v8::base::TimeDelta", align 8
  %6 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 4
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %34, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::base::ElapsedTimer", %"class.v8::base::ElapsedTimer"* %1, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  %14 = bitcast %"class.v8::base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #4
  %15 = bitcast %"class.v8::base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #4
  br i1 %13, label %16, label %19

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %4, i64 0, i32 0
  store i64 9223372036854775807, i64* %17, align 8
  %18 = call i64 @_ZNK2v84base9TimeDelta14InMicrosecondsEv(%"class.v8::base::TimeDelta"* nonnull %4) #4
  br label %22

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %5, i64 0, i32 0
  store i64 9223372036854775807, i64* %20, align 8
  %21 = call i64 @_ZNK2v84base9TimeDelta14InMillisecondsEv(%"class.v8::base::TimeDelta"* nonnull %5) #4
  br label %22

22:                                               ; preds = %19, %16
  %23 = phi i64 [ %18, %16 ], [ %21, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4
  %24 = trunc i64 %23 to i32
  %25 = load i8*, i8** %6, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 5
  %29 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %29, i64 0, i32 760, i32 2
  %31 = load void (i8*, i32)*, void (i8*, i32)** %30, align 8
  %32 = icmp eq void (i8*, i32)* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %27
  call void %31(i8* nonnull %25, i32 %24) #4
  br label %34

34:                                               ; preds = %3, %33, %27, %22
  %35 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %35, label %51, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram"* %0, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 79
  %40 = load void (i8*, i32)*, void (i8*, i32)** %39, align 8
  %41 = icmp eq void (i8*, i32)* %40, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %36
  %43 = icmp eq void (i8*, i32)* %40, @_ZN2v88internal6Logger26DefaultEventLoggerSentinelEPKci
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 21
  %49 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %48, align 8
  call void @_ZN2v88internal6Logger10TimerEventENS1_8StartEndEPKc(%"class.v8::internal::Logger"* %49, i32 1, i8* %38) #4
  br label %51

50:                                               ; preds = %42
  call void %40(i8* %38, i32 1) #4
  br label %51

51:                                               ; preds = %50, %47, %44, %36, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8CountersC2EPNS0_7IsolateE(%"class.v8::internal::Counters"*, %"class.v8::internal::Isolate"*) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.v8::internal::Counters"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #4
  %4 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 1, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 200, i32 0, i32 0
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 200, i32 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 200, i32 0, i32 2
  store i32* null, i32** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 200, i32 1
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %20) #4
  %21 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 201, i32 0, i32 0
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 201, i32 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 201, i32 0, i32 2
  store i32* null, i32** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 201, i32 1
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %24) #4
  %25 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 202, i32 0, i32 0
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 202, i32 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 202, i32 0, i32 2
  store i32* null, i32** %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 202, i32 1
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %28) #4
  %29 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 757
  tail call void @_ZN2v88internal16RuntimeCallStatsC1ENS1_10ThreadTypeE(%"class.v8::internal::RuntimeCallStats"* %29, i32 0) #4
  %30 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 758
  tail call void @_ZN2v88internal28WorkerThreadRuntimeCallStatsC1Ev(%"class.v8::internal::WorkerThreadRuntimeCallStats"* %30) #4
  %31 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 759
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 760
  %33 = bitcast %"class.v8::internal::StatsTable"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #4
  br label %137

34:                                               ; preds = %137
  %35 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56
  %36 = bitcast %"class.v8::internal::HistogramTimer"* %35 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.58 to i64), i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 1
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 2
  store i32 10000, i32* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 3
  store i32 50, i32* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 4
  store i8* null, i8** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 1
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 1, i32 0, i32 0, i32 0
  %44 = bitcast i64* %43 to <2 x i64>*
  store <2 x i64> <i64 0, i64 ptrtoint ([24 x i8]* @.str.59 to i64)>, <2 x i64>* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 1
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 2
  store i32 10000, i32* %46, align 4
  %47 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 3
  store i32 50, i32* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 4
  store i8* null, i8** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 1
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58
  %53 = bitcast %"class.v8::internal::HistogramTimer"* %52 to i64*
  store i64 ptrtoint ([29 x i8]* @.str.60 to i64), i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 2
  store i32 10000, i32* %55, align 4
  %56 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 3
  store i32 50, i32* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 4
  store i8* null, i8** %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 1
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 1, i32 0, i32 0, i32 0
  %61 = bitcast i64* %60 to <2 x i64>*
  store <2 x i64> <i64 0, i64 ptrtoint ([32 x i8]* @.str.61 to i64)>, <2 x i64>* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 1
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 2
  store i32 10000, i32* %63, align 4
  %64 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 3
  store i32 50, i32* %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 4
  store i8* null, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 1
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60
  %70 = bitcast %"class.v8::internal::HistogramTimer"* %69 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.62 to i64), i64* %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 1
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 2
  store i32 10000, i32* %72, align 4
  %73 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 3
  store i32 50, i32* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 4
  store i8* null, i8** %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 1
  store i32 0, i32* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 1, i32 0, i32 0, i32 0
  %78 = bitcast i64* %77 to <2 x i64>*
  store <2 x i64> <i64 0, i64 ptrtoint ([26 x i8]* @.str.63 to i64)>, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 1
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 2
  store i32 1000000, i32* %80, align 4
  %81 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 3
  store i32 50, i32* %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 4
  store i8* null, i8** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 1
  store i32 1, i32* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62
  %87 = bitcast %"class.v8::internal::HistogramTimer"* %86 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.64 to i64), i64* %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 1
  store i32 0, i32* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 2
  store i32 1000000, i32* %89, align 4
  %90 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 3
  store i32 50, i32* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 4
  store i8* null, i8** %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 1
  store i32 1, i32* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 1, i32 0, i32 0, i32 0
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> <i64 0, i64 ptrtoint ([27 x i8]* @.str.65 to i64)>, <2 x i64>* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 1
  store i32 0, i32* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 2
  store i32 1000000, i32* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 3
  store i32 50, i32* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 4
  store i8* null, i8** %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 1
  store i32 1, i32* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64
  %104 = bitcast %"class.v8::internal::HistogramTimer"* %103 to i64*
  store i64 ptrtoint ([32 x i8]* @.str.66 to i64), i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 1
  store i32 0, i32* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 2
  store i32 100000, i32* %106, align 4
  %107 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 3
  store i32 50, i32* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 4
  store i8* null, i8** %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 1
  store i32 1, i32* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 1, i32 0, i32 0, i32 0
  %112 = bitcast i64* %111 to <2 x i64>*
  store <2 x i64> <i64 0, i64 ptrtoint ([34 x i8]* @.str.67 to i64)>, <2 x i64>* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 1
  store i32 0, i32* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 2
  store i32 1000000, i32* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 3
  store i32 50, i32* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 4
  store i8* null, i8** %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 1
  store i32 1, i32* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66
  %121 = bitcast %"class.v8::internal::HistogramTimer"* %120 to i64*
  store i64 ptrtoint ([29 x i8]* @.str.68 to i64), i64* %121, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 1
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 2
  store i32 1000000, i32* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 3
  store i32 50, i32* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 4
  store i8* null, i8** %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 1
  store i32 1, i32* %127, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 1, i32 0, i32 0, i32 0
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> <i64 0, i64 ptrtoint ([11 x i8]* @.str.69 to i64)>, <2 x i64>* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 1
  store i32 0, i32* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 2
  store i32 1000000, i32* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 3
  store i32 50, i32* %132, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 4
  store i8* null, i8** %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 1
  store i32 1, i32* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %136, align 8
  br label %242

137:                                              ; preds = %347, %2
  %138 = phi %struct.anon.1128* [ getelementptr inbounds ([55 x %struct.anon.1128], [55 x %struct.anon.1128]* @_ZZN2v88internal8CountersC1EPNS0_7IsolateEE11kHistograms, i64 0, i64 0), %2 ], [ %371, %347 ]
  %139 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 0, i32 1
  %140 = bitcast i8** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 0, i32 4
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds i8, i8* %3, i64 %149
  %151 = bitcast i8* %150 to i64*
  store i64 %141, i64* %151, align 8
  %152 = getelementptr inbounds i8, i8* %150, i64 8
  %153 = bitcast i8* %152 to i32*
  store i32 %143, i32* %153, align 8
  %154 = getelementptr inbounds i8, i8* %150, i64 12
  %155 = bitcast i8* %154 to i32*
  store i32 %145, i32* %155, align 4
  %156 = getelementptr inbounds i8, i8* %150, i64 16
  %157 = bitcast i8* %156 to i32*
  store i32 %147, i32* %157, align 8
  %158 = getelementptr inbounds i8, i8* %150, i64 24
  %159 = bitcast i8* %158 to i8**
  store i8* null, i8** %159, align 8
  %160 = getelementptr inbounds i8, i8* %150, i64 32
  %161 = bitcast i8* %160 to %"class.v8::internal::Counters"**
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %161, align 8
  %162 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 1
  %163 = icmp eq %struct.anon.1128* %162, getelementptr inbounds ([55 x %struct.anon.1128], [55 x %struct.anon.1128]* @_ZZN2v88internal8CountersC1EPNS0_7IsolateEE11kHistograms, i64 1, i64 0)
  br i1 %163, label %34, label %347

164:                                              ; preds = %242
  %165 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120
  %166 = bitcast %"class.v8::internal::AggregatableHistogramTimer"* %165 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.122 to i64), i64* %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 1
  store i32 0, i32* %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 2
  store i32 10000000, i32* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 3
  store i32 50, i32* %169, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 4
  store i8* null, i8** %170, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %171, align 8
  %172 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 1, i32 0
  %173 = bitcast i64* %172 to <2 x i64>*
  store <2 x i64> <i64 0, i64 ptrtoint ([36 x i8]* @.str.123 to i64)>, <2 x i64>* %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 1
  store i32 0, i32* %174, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 2
  store i32 101, i32* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 3
  store i32 100, i32* %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 4
  store i8* null, i8** %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122
  %180 = bitcast %"class.v8::internal::Histogram"* %179 to i64*
  store i64 ptrtoint ([39 x i8]* @.str.124 to i64), i64* %180, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 1
  store i32 0, i32* %181, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 2
  store i32 101, i32* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 3
  store i32 100, i32* %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 4
  store i8* null, i8** %184, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123
  %187 = bitcast %"class.v8::internal::Histogram"* %186 to i64*
  store i64 ptrtoint ([40 x i8]* @.str.125 to i64), i64* %187, align 8
  %188 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 1
  store i32 0, i32* %188, align 8
  %189 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 2
  store i32 101, i32* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 3
  store i32 100, i32* %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 4
  store i8* null, i8** %191, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124
  %194 = bitcast %"class.v8::internal::Histogram"* %193 to i64*
  store i64 ptrtoint ([39 x i8]* @.str.126 to i64), i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 1
  store i32 0, i32* %195, align 8
  %196 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 2
  store i32 101, i32* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 3
  store i32 100, i32* %197, align 8
  %198 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 4
  store i8* null, i8** %198, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %199, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125
  %201 = bitcast %"class.v8::internal::Histogram"* %200 to i64*
  store i64 ptrtoint ([38 x i8]* @.str.127 to i64), i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 1
  store i32 0, i32* %202, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 2
  store i32 101, i32* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 3
  store i32 100, i32* %204, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 4
  store i8* null, i8** %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126
  %208 = bitcast %"class.v8::internal::Histogram"* %207 to i64*
  store i64 ptrtoint ([34 x i8]* @.str.128 to i64), i64* %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 1
  store i32 1000, i32* %209, align 8
  %210 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 2
  store i32 500000, i32* %210, align 4
  %211 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 3
  store i32 50, i32* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 4
  store i8* null, i8** %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127
  %215 = bitcast %"class.v8::internal::Histogram"* %214 to i64*
  store i64 ptrtoint ([29 x i8]* @.str.129 to i64), i64* %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 1
  store i32 1000, i32* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 2
  store i32 500000, i32* %217, align 4
  %218 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 3
  store i32 50, i32* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 4
  store i8* null, i8** %219, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %220, align 8
  %221 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128
  %222 = bitcast %"class.v8::internal::Histogram"* %221 to i64*
  store i64 ptrtoint ([37 x i8]* @.str.130 to i64), i64* %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 1
  store i32 1000, i32* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 2
  store i32 500000, i32* %224, align 4
  %225 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 3
  store i32 50, i32* %225, align 8
  %226 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 4
  store i8* null, i8** %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129
  %229 = bitcast %"class.v8::internal::Histogram"* %228 to i64*
  store i64 ptrtoint ([38 x i8]* @.str.131 to i64), i64* %229, align 8
  %230 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 1
  store i32 1000, i32* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 2
  store i32 500000, i32* %231, align 4
  %232 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 3
  store i32 50, i32* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 4
  store i8* null, i8** %233, align 8
  %234 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %234, align 8
  %235 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130
  %236 = bitcast %"class.v8::internal::Histogram"* %235 to i64*
  store i64 ptrtoint ([36 x i8]* @.str.132 to i64), i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 1
  store i32 1000, i32* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 2
  store i32 500000, i32* %238, align 4
  %239 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 3
  store i32 50, i32* %239, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 4
  store i8* null, i8** %240, align 8
  %241 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 5
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %241, align 8
  br label %293

242:                                              ; preds = %242, %34
  %243 = phi %struct.anon.1130* [ getelementptr inbounds ([52 x %struct.anon.1130], [52 x %struct.anon.1130]* @_ZZN2v88internal8CountersC1EPNS0_7IsolateEE16kTimedHistograms, i64 0, i64 0), %34 ], [ %290, %242 ]
  %244 = getelementptr inbounds %struct.anon.1130, %struct.anon.1130* %243, i64 0, i32 1
  %245 = bitcast i8** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = getelementptr inbounds %struct.anon.1130, %struct.anon.1130* %243, i64 0, i32 2
  %248 = load i32, i32* %247, align 8
  %249 = getelementptr inbounds %struct.anon.1130, %struct.anon.1130* %243, i64 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %struct.anon.1130, %struct.anon.1130* %243, i64 0, i32 0
  %252 = load i64, i64* %251, align 8
  %253 = getelementptr inbounds i8, i8* %3, i64 %252
  %254 = bitcast i8* %253 to i64*
  store i64 %246, i64* %254, align 8
  %255 = getelementptr inbounds i8, i8* %253, i64 8
  %256 = bitcast i8* %255 to i32*
  store i32 0, i32* %256, align 8
  %257 = getelementptr inbounds i8, i8* %253, i64 12
  %258 = bitcast i8* %257 to i32*
  store i32 %248, i32* %258, align 4
  %259 = getelementptr inbounds i8, i8* %253, i64 16
  %260 = bitcast i8* %259 to i32*
  store i32 50, i32* %260, align 8
  %261 = getelementptr inbounds i8, i8* %253, i64 24
  %262 = bitcast i8* %261 to i8**
  store i8* null, i8** %262, align 8
  %263 = getelementptr inbounds i8, i8* %253, i64 32
  %264 = bitcast i8* %263 to %"class.v8::internal::Counters"**
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %264, align 8
  %265 = getelementptr inbounds i8, i8* %253, i64 40
  %266 = bitcast i8* %265 to i32*
  store i32 %250, i32* %266, align 8
  %267 = getelementptr inbounds %struct.anon.1130, %struct.anon.1130* %243, i64 1, i32 1
  %268 = bitcast i8** %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = getelementptr inbounds %struct.anon.1130, %struct.anon.1130* %243, i64 1, i32 2
  %271 = load i32, i32* %270, align 8
  %272 = getelementptr inbounds %struct.anon.1130, %struct.anon.1130* %243, i64 1, i32 3
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %struct.anon.1130, %struct.anon.1130* %243, i64 1, i32 0
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds i8, i8* %3, i64 %275
  %277 = bitcast i8* %276 to i64*
  store i64 %269, i64* %277, align 8
  %278 = getelementptr inbounds i8, i8* %276, i64 8
  %279 = bitcast i8* %278 to i32*
  store i32 0, i32* %279, align 8
  %280 = getelementptr inbounds i8, i8* %276, i64 12
  %281 = bitcast i8* %280 to i32*
  store i32 %271, i32* %281, align 4
  %282 = getelementptr inbounds i8, i8* %276, i64 16
  %283 = bitcast i8* %282 to i32*
  store i32 50, i32* %283, align 8
  %284 = getelementptr inbounds i8, i8* %276, i64 24
  %285 = bitcast i8* %284 to i8**
  store i8* null, i8** %285, align 8
  %286 = getelementptr inbounds i8, i8* %276, i64 32
  %287 = bitcast i8* %286 to %"class.v8::internal::Counters"**
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %287, align 8
  %288 = getelementptr inbounds i8, i8* %276, i64 40
  %289 = bitcast i8* %288 to i32*
  store i32 %273, i32* %289, align 8
  %290 = getelementptr inbounds %struct.anon.1130, %struct.anon.1130* %243, i64 2
  %291 = icmp eq %struct.anon.1130* %290, getelementptr inbounds ([52 x %struct.anon.1130], [52 x %struct.anon.1130]* @_ZZN2v88internal8CountersC1EPNS0_7IsolateEE16kTimedHistograms, i64 1, i64 0)
  br i1 %291, label %164, label %242

292:                                              ; preds = %293
  ret void

293:                                              ; preds = %333, %164
  %294 = phi %struct.anon.1134* [ getelementptr inbounds ([623 x %struct.anon.1134], [623 x %struct.anon.1134]* @_ZZN2v88internal8CountersC1EPNS0_7IsolateEE14kStatsCounters, i64 0, i64 0), %164 ], [ %346, %333 ]
  %295 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %294, i64 0, i32 1
  %296 = bitcast i8** %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %294, i64 0, i32 0
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds i8, i8* %3, i64 %299
  %301 = bitcast i8* %300 to %"class.v8::internal::Counters"**
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %301, align 8
  %302 = getelementptr inbounds i8, i8* %300, i64 8
  %303 = bitcast i8* %302 to i64*
  store i64 %297, i64* %303, align 8
  %304 = getelementptr inbounds i8, i8* %300, i64 16
  %305 = bitcast i8* %304 to i32**
  store i32* null, i32** %305, align 8
  %306 = getelementptr inbounds i8, i8* %300, i64 24
  store i8 0, i8* %306, align 8
  %307 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %294, i64 1, i32 1
  %308 = bitcast i8** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %294, i64 1, i32 0
  %311 = load i64, i64* %310, align 8
  %312 = getelementptr inbounds i8, i8* %3, i64 %311
  %313 = bitcast i8* %312 to %"class.v8::internal::Counters"**
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %313, align 8
  %314 = getelementptr inbounds i8, i8* %312, i64 8
  %315 = bitcast i8* %314 to i64*
  store i64 %309, i64* %315, align 8
  %316 = getelementptr inbounds i8, i8* %312, i64 16
  %317 = bitcast i8* %316 to i32**
  store i32* null, i32** %317, align 8
  %318 = getelementptr inbounds i8, i8* %312, i64 24
  store i8 0, i8* %318, align 8
  %319 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %294, i64 2, i32 1
  %320 = bitcast i8** %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %294, i64 2, i32 0
  %323 = load i64, i64* %322, align 8
  %324 = getelementptr inbounds i8, i8* %3, i64 %323
  %325 = bitcast i8* %324 to %"class.v8::internal::Counters"**
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %325, align 8
  %326 = getelementptr inbounds i8, i8* %324, i64 8
  %327 = bitcast i8* %326 to i64*
  store i64 %321, i64* %327, align 8
  %328 = getelementptr inbounds i8, i8* %324, i64 16
  %329 = bitcast i8* %328 to i32**
  store i32* null, i32** %329, align 8
  %330 = getelementptr inbounds i8, i8* %324, i64 24
  store i8 0, i8* %330, align 8
  %331 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %294, i64 3
  %332 = icmp eq %struct.anon.1134* %331, getelementptr inbounds ([623 x %struct.anon.1134], [623 x %struct.anon.1134]* @_ZZN2v88internal8CountersC1EPNS0_7IsolateEE14kStatsCounters, i64 1, i64 0)
  br i1 %332, label %292, label %333

333:                                              ; preds = %293
  %334 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %294, i64 3, i32 1
  %335 = bitcast i8** %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %331, i64 0, i32 0
  %338 = load i64, i64* %337, align 8
  %339 = getelementptr inbounds i8, i8* %3, i64 %338
  %340 = bitcast i8* %339 to %"class.v8::internal::Counters"**
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %340, align 8
  %341 = getelementptr inbounds i8, i8* %339, i64 8
  %342 = bitcast i8* %341 to i64*
  store i64 %336, i64* %342, align 8
  %343 = getelementptr inbounds i8, i8* %339, i64 16
  %344 = bitcast i8* %343 to i32**
  store i32* null, i32** %344, align 8
  %345 = getelementptr inbounds i8, i8* %339, i64 24
  store i8 0, i8* %345, align 8
  %346 = getelementptr inbounds %struct.anon.1134, %struct.anon.1134* %294, i64 4
  br label %293

347:                                              ; preds = %137
  %348 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 1, i32 1
  %349 = bitcast i8** %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 1, i32 2
  %352 = load i32, i32* %351, align 8
  %353 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 1, i32 3
  %354 = load i32, i32* %353, align 4
  %355 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 1, i32 4
  %356 = load i32, i32* %355, align 8
  %357 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %162, i64 0, i32 0
  %358 = load i64, i64* %357, align 8
  %359 = getelementptr inbounds i8, i8* %3, i64 %358
  %360 = bitcast i8* %359 to i64*
  store i64 %350, i64* %360, align 8
  %361 = getelementptr inbounds i8, i8* %359, i64 8
  %362 = bitcast i8* %361 to i32*
  store i32 %352, i32* %362, align 8
  %363 = getelementptr inbounds i8, i8* %359, i64 12
  %364 = bitcast i8* %363 to i32*
  store i32 %354, i32* %364, align 4
  %365 = getelementptr inbounds i8, i8* %359, i64 16
  %366 = bitcast i8* %365 to i32*
  store i32 %356, i32* %366, align 8
  %367 = getelementptr inbounds i8, i8* %359, i64 24
  %368 = bitcast i8* %367 to i8**
  store i8* null, i8** %368, align 8
  %369 = getelementptr inbounds i8, i8* %359, i64 32
  %370 = bitcast i8* %369 to %"class.v8::internal::Counters"**
  store %"class.v8::internal::Counters"* %0, %"class.v8::internal::Counters"** %370, align 8
  %371 = getelementptr inbounds %struct.anon.1128, %struct.anon.1128* %138, i64 2
  br label %137
}

declare void @_ZN2v88internal16RuntimeCallStatsC1ENS1_10ThreadTypeE(%"class.v8::internal::RuntimeCallStats"*, i32) unnamed_addr #2

declare void @_ZN2v88internal28WorkerThreadRuntimeCallStatsC1Ev(%"class.v8::internal::WorkerThreadRuntimeCallStats"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8Counters20ResetCounterFunctionEPFPiPKcE(%"class.v8::internal::Counters"*, i32* (i8*)*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 760, i32 0
  store i32* (i8*)* %1, i32* (i8*)** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 131, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 132, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 133, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 134, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 135, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 136, i32 1
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 137, i32 1
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 138, i32 1
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 139, i32 1
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 140, i32 1
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 141, i32 1
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 142, i32 1
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 143, i32 1
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 144, i32 1
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 145, i32 1
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 146, i32 1
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 147, i32 1
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 148, i32 1
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 149, i32 1
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 150, i32 1
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 151, i32 1
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 152, i32 1
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 153, i32 1
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 154, i32 1
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 155, i32 1
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 156, i32 1
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 157, i32 1
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 158, i32 1
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 159, i32 1
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 160, i32 1
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 161, i32 1
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 162, i32 1
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 163, i32 1
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 164, i32 1
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 165, i32 1
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 166, i32 1
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 167, i32 1
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 168, i32 1
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 169, i32 1
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 170, i32 1
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 171, i32 1
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 172, i32 1
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 173, i32 1
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 174, i32 1
  store i8 0, i8* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 175, i32 1
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 176, i32 1
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 177, i32 1
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 178, i32 1
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 179, i32 1
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 180, i32 1
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 181, i32 1
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 182, i32 1
  store i8 0, i8* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 183, i32 1
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 184, i32 1
  store i8 0, i8* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 185, i32 1
  store i8 0, i8* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 186, i32 1
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 187, i32 1
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 188, i32 1
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 200, i32 0, i32 0
  %63 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %63, i64 0, i32 760, i32 0
  %65 = load i32* (i8*)*, i32* (i8*)** %64, align 8
  %66 = icmp eq i32* (i8*)* %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %2
  %68 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 200, i32 0, i32 1
  %69 = load i8*, i8** %68, align 8
  %70 = tail call i32* %65(i8* %69) #4
  br label %71

71:                                               ; preds = %2, %67
  %72 = phi i32* [ %70, %67 ], [ null, %2 ]
  %73 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 200, i32 0, i32 2
  store i32* %72, i32** %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 201, i32 0, i32 0
  %75 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %75, i64 0, i32 760, i32 0
  %77 = load i32* (i8*)*, i32* (i8*)** %76, align 8
  %78 = icmp eq i32* (i8*)* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 201, i32 0, i32 1
  %81 = load i8*, i8** %80, align 8
  %82 = tail call i32* %77(i8* %81) #4
  br label %83

83:                                               ; preds = %71, %79
  %84 = phi i32* [ %82, %79 ], [ null, %71 ]
  %85 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 201, i32 0, i32 2
  store i32* %84, i32** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 202, i32 0, i32 0
  %87 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %87, i64 0, i32 760, i32 0
  %89 = load i32* (i8*)*, i32* (i8*)** %88, align 8
  %90 = icmp eq i32* (i8*)* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 202, i32 0, i32 1
  %93 = load i8*, i8** %92, align 8
  %94 = tail call i32* %89(i8* %93) #4
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i32* [ %94, %91 ], [ null, %83 ]
  %97 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 202, i32 0, i32 2
  store i32* %96, i32** %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 189, i32 1
  store i8 0, i8* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 190, i32 1
  store i8 0, i8* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 191, i32 1
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 192, i32 1
  store i8 0, i8* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 193, i32 1
  store i8 0, i8* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 194, i32 1
  store i8 0, i8* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 195, i32 1
  store i8 0, i8* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 196, i32 1
  store i8 0, i8* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 197, i32 1
  store i8 0, i8* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 198, i32 1
  store i8 0, i8* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 199, i32 1
  store i8 0, i8* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 204, i32 1
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 203, i32 1
  store i8 0, i8* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 206, i32 1
  store i8 0, i8* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 205, i32 1
  store i8 0, i8* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 208, i32 1
  store i8 0, i8* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 207, i32 1
  store i8 0, i8* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 210, i32 1
  store i8 0, i8* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 209, i32 1
  store i8 0, i8* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 212, i32 1
  store i8 0, i8* %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 211, i32 1
  store i8 0, i8* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 214, i32 1
  store i8 0, i8* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 213, i32 1
  store i8 0, i8* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 216, i32 1
  store i8 0, i8* %121, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 215, i32 1
  store i8 0, i8* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 218, i32 1
  store i8 0, i8* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 217, i32 1
  store i8 0, i8* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 220, i32 1
  store i8 0, i8* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 219, i32 1
  store i8 0, i8* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 222, i32 1
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 221, i32 1
  store i8 0, i8* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 224, i32 1
  store i8 0, i8* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 223, i32 1
  store i8 0, i8* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 226, i32 1
  store i8 0, i8* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 225, i32 1
  store i8 0, i8* %132, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 228, i32 1
  store i8 0, i8* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 227, i32 1
  store i8 0, i8* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 230, i32 1
  store i8 0, i8* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 229, i32 1
  store i8 0, i8* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 232, i32 1
  store i8 0, i8* %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 231, i32 1
  store i8 0, i8* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 234, i32 1
  store i8 0, i8* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 233, i32 1
  store i8 0, i8* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 236, i32 1
  store i8 0, i8* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 235, i32 1
  store i8 0, i8* %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 238, i32 1
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 237, i32 1
  store i8 0, i8* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 240, i32 1
  store i8 0, i8* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 239, i32 1
  store i8 0, i8* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 242, i32 1
  store i8 0, i8* %147, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 241, i32 1
  store i8 0, i8* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 244, i32 1
  store i8 0, i8* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 243, i32 1
  store i8 0, i8* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 246, i32 1
  store i8 0, i8* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 245, i32 1
  store i8 0, i8* %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 248, i32 1
  store i8 0, i8* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 247, i32 1
  store i8 0, i8* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 250, i32 1
  store i8 0, i8* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 249, i32 1
  store i8 0, i8* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 252, i32 1
  store i8 0, i8* %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 251, i32 1
  store i8 0, i8* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 254, i32 1
  store i8 0, i8* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 253, i32 1
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 256, i32 1
  store i8 0, i8* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 255, i32 1
  store i8 0, i8* %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 258, i32 1
  store i8 0, i8* %163, align 8
  %164 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 257, i32 1
  store i8 0, i8* %164, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 260, i32 1
  store i8 0, i8* %165, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 259, i32 1
  store i8 0, i8* %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 262, i32 1
  store i8 0, i8* %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 261, i32 1
  store i8 0, i8* %168, align 8
  %169 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 264, i32 1
  store i8 0, i8* %169, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 263, i32 1
  store i8 0, i8* %170, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 266, i32 1
  store i8 0, i8* %171, align 8
  %172 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 265, i32 1
  store i8 0, i8* %172, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 268, i32 1
  store i8 0, i8* %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 267, i32 1
  store i8 0, i8* %174, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 270, i32 1
  store i8 0, i8* %175, align 8
  %176 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 269, i32 1
  store i8 0, i8* %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 272, i32 1
  store i8 0, i8* %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 271, i32 1
  store i8 0, i8* %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 274, i32 1
  store i8 0, i8* %179, align 8
  %180 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 273, i32 1
  store i8 0, i8* %180, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 276, i32 1
  store i8 0, i8* %181, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 275, i32 1
  store i8 0, i8* %182, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 278, i32 1
  store i8 0, i8* %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 277, i32 1
  store i8 0, i8* %184, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 280, i32 1
  store i8 0, i8* %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 279, i32 1
  store i8 0, i8* %186, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 282, i32 1
  store i8 0, i8* %187, align 8
  %188 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 281, i32 1
  store i8 0, i8* %188, align 8
  %189 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 284, i32 1
  store i8 0, i8* %189, align 8
  %190 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 283, i32 1
  store i8 0, i8* %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 286, i32 1
  store i8 0, i8* %191, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 285, i32 1
  store i8 0, i8* %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 288, i32 1
  store i8 0, i8* %193, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 287, i32 1
  store i8 0, i8* %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 290, i32 1
  store i8 0, i8* %195, align 8
  %196 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 289, i32 1
  store i8 0, i8* %196, align 8
  %197 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 292, i32 1
  store i8 0, i8* %197, align 8
  %198 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 291, i32 1
  store i8 0, i8* %198, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 294, i32 1
  store i8 0, i8* %199, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 293, i32 1
  store i8 0, i8* %200, align 8
  %201 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 296, i32 1
  store i8 0, i8* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 295, i32 1
  store i8 0, i8* %202, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 298, i32 1
  store i8 0, i8* %203, align 8
  %204 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 297, i32 1
  store i8 0, i8* %204, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 300, i32 1
  store i8 0, i8* %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 299, i32 1
  store i8 0, i8* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 302, i32 1
  store i8 0, i8* %207, align 8
  %208 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 301, i32 1
  store i8 0, i8* %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 304, i32 1
  store i8 0, i8* %209, align 8
  %210 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 303, i32 1
  store i8 0, i8* %210, align 8
  %211 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 306, i32 1
  store i8 0, i8* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 305, i32 1
  store i8 0, i8* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 308, i32 1
  store i8 0, i8* %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 307, i32 1
  store i8 0, i8* %214, align 8
  %215 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 310, i32 1
  store i8 0, i8* %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 309, i32 1
  store i8 0, i8* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 312, i32 1
  store i8 0, i8* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 311, i32 1
  store i8 0, i8* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 314, i32 1
  store i8 0, i8* %219, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 313, i32 1
  store i8 0, i8* %220, align 8
  %221 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 316, i32 1
  store i8 0, i8* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 315, i32 1
  store i8 0, i8* %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 318, i32 1
  store i8 0, i8* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 317, i32 1
  store i8 0, i8* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 320, i32 1
  store i8 0, i8* %225, align 8
  %226 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 319, i32 1
  store i8 0, i8* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 322, i32 1
  store i8 0, i8* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 321, i32 1
  store i8 0, i8* %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 324, i32 1
  store i8 0, i8* %229, align 8
  %230 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 323, i32 1
  store i8 0, i8* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 326, i32 1
  store i8 0, i8* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 325, i32 1
  store i8 0, i8* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 328, i32 1
  store i8 0, i8* %233, align 8
  %234 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 327, i32 1
  store i8 0, i8* %234, align 8
  %235 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 330, i32 1
  store i8 0, i8* %235, align 8
  %236 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 329, i32 1
  store i8 0, i8* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 332, i32 1
  store i8 0, i8* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 331, i32 1
  store i8 0, i8* %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 334, i32 1
  store i8 0, i8* %239, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 333, i32 1
  store i8 0, i8* %240, align 8
  %241 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 336, i32 1
  store i8 0, i8* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 335, i32 1
  store i8 0, i8* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 338, i32 1
  store i8 0, i8* %243, align 8
  %244 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 337, i32 1
  store i8 0, i8* %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 340, i32 1
  store i8 0, i8* %245, align 8
  %246 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 339, i32 1
  store i8 0, i8* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 342, i32 1
  store i8 0, i8* %247, align 8
  %248 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 341, i32 1
  store i8 0, i8* %248, align 8
  %249 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 344, i32 1
  store i8 0, i8* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 343, i32 1
  store i8 0, i8* %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 346, i32 1
  store i8 0, i8* %251, align 8
  %252 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 345, i32 1
  store i8 0, i8* %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 348, i32 1
  store i8 0, i8* %253, align 8
  %254 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 347, i32 1
  store i8 0, i8* %254, align 8
  %255 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 350, i32 1
  store i8 0, i8* %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 349, i32 1
  store i8 0, i8* %256, align 8
  %257 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 352, i32 1
  store i8 0, i8* %257, align 8
  %258 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 351, i32 1
  store i8 0, i8* %258, align 8
  %259 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 354, i32 1
  store i8 0, i8* %259, align 8
  %260 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 353, i32 1
  store i8 0, i8* %260, align 8
  %261 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 356, i32 1
  store i8 0, i8* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 355, i32 1
  store i8 0, i8* %262, align 8
  %263 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 358, i32 1
  store i8 0, i8* %263, align 8
  %264 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 357, i32 1
  store i8 0, i8* %264, align 8
  %265 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 360, i32 1
  store i8 0, i8* %265, align 8
  %266 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 359, i32 1
  store i8 0, i8* %266, align 8
  %267 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 362, i32 1
  store i8 0, i8* %267, align 8
  %268 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 361, i32 1
  store i8 0, i8* %268, align 8
  %269 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 364, i32 1
  store i8 0, i8* %269, align 8
  %270 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 363, i32 1
  store i8 0, i8* %270, align 8
  %271 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 366, i32 1
  store i8 0, i8* %271, align 8
  %272 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 365, i32 1
  store i8 0, i8* %272, align 8
  %273 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 368, i32 1
  store i8 0, i8* %273, align 8
  %274 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 367, i32 1
  store i8 0, i8* %274, align 8
  %275 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 370, i32 1
  store i8 0, i8* %275, align 8
  %276 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 369, i32 1
  store i8 0, i8* %276, align 8
  %277 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 372, i32 1
  store i8 0, i8* %277, align 8
  %278 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 371, i32 1
  store i8 0, i8* %278, align 8
  %279 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 374, i32 1
  store i8 0, i8* %279, align 8
  %280 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 373, i32 1
  store i8 0, i8* %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 376, i32 1
  store i8 0, i8* %281, align 8
  %282 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 375, i32 1
  store i8 0, i8* %282, align 8
  %283 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 378, i32 1
  store i8 0, i8* %283, align 8
  %284 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 377, i32 1
  store i8 0, i8* %284, align 8
  %285 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 380, i32 1
  store i8 0, i8* %285, align 8
  %286 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 379, i32 1
  store i8 0, i8* %286, align 8
  %287 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 382, i32 1
  store i8 0, i8* %287, align 8
  %288 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 381, i32 1
  store i8 0, i8* %288, align 8
  %289 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 384, i32 1
  store i8 0, i8* %289, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 383, i32 1
  store i8 0, i8* %290, align 8
  %291 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 386, i32 1
  store i8 0, i8* %291, align 8
  %292 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 385, i32 1
  store i8 0, i8* %292, align 8
  %293 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 388, i32 1
  store i8 0, i8* %293, align 8
  %294 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 387, i32 1
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 390, i32 1
  store i8 0, i8* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 389, i32 1
  store i8 0, i8* %296, align 8
  %297 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 392, i32 1
  store i8 0, i8* %297, align 8
  %298 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 391, i32 1
  store i8 0, i8* %298, align 8
  %299 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 394, i32 1
  store i8 0, i8* %299, align 8
  %300 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 393, i32 1
  store i8 0, i8* %300, align 8
  %301 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 396, i32 1
  store i8 0, i8* %301, align 8
  %302 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 395, i32 1
  store i8 0, i8* %302, align 8
  %303 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 398, i32 1
  store i8 0, i8* %303, align 8
  %304 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 397, i32 1
  store i8 0, i8* %304, align 8
  %305 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 400, i32 1
  store i8 0, i8* %305, align 8
  %306 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 399, i32 1
  store i8 0, i8* %306, align 8
  %307 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 402, i32 1
  store i8 0, i8* %307, align 8
  %308 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 401, i32 1
  store i8 0, i8* %308, align 8
  %309 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 404, i32 1
  store i8 0, i8* %309, align 8
  %310 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 403, i32 1
  store i8 0, i8* %310, align 8
  %311 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 406, i32 1
  store i8 0, i8* %311, align 8
  %312 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 405, i32 1
  store i8 0, i8* %312, align 8
  %313 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 408, i32 1
  store i8 0, i8* %313, align 8
  %314 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 407, i32 1
  store i8 0, i8* %314, align 8
  %315 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 410, i32 1
  store i8 0, i8* %315, align 8
  %316 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 409, i32 1
  store i8 0, i8* %316, align 8
  %317 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 412, i32 1
  store i8 0, i8* %317, align 8
  %318 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 411, i32 1
  store i8 0, i8* %318, align 8
  %319 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 414, i32 1
  store i8 0, i8* %319, align 8
  %320 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 413, i32 1
  store i8 0, i8* %320, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 416, i32 1
  store i8 0, i8* %321, align 8
  %322 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 415, i32 1
  store i8 0, i8* %322, align 8
  %323 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 418, i32 1
  store i8 0, i8* %323, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 417, i32 1
  store i8 0, i8* %324, align 8
  %325 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 420, i32 1
  store i8 0, i8* %325, align 8
  %326 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 419, i32 1
  store i8 0, i8* %326, align 8
  %327 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 422, i32 1
  store i8 0, i8* %327, align 8
  %328 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 421, i32 1
  store i8 0, i8* %328, align 8
  %329 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 424, i32 1
  store i8 0, i8* %329, align 8
  %330 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 423, i32 1
  store i8 0, i8* %330, align 8
  %331 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 426, i32 1
  store i8 0, i8* %331, align 8
  %332 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 425, i32 1
  store i8 0, i8* %332, align 8
  %333 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 428, i32 1
  store i8 0, i8* %333, align 8
  %334 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 427, i32 1
  store i8 0, i8* %334, align 8
  %335 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 430, i32 1
  store i8 0, i8* %335, align 8
  %336 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 429, i32 1
  store i8 0, i8* %336, align 8
  %337 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 432, i32 1
  store i8 0, i8* %337, align 8
  %338 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 431, i32 1
  store i8 0, i8* %338, align 8
  %339 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 434, i32 1
  store i8 0, i8* %339, align 8
  %340 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 433, i32 1
  store i8 0, i8* %340, align 8
  %341 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 436, i32 1
  store i8 0, i8* %341, align 8
  %342 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 435, i32 1
  store i8 0, i8* %342, align 8
  %343 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 438, i32 1
  store i8 0, i8* %343, align 8
  %344 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 437, i32 1
  store i8 0, i8* %344, align 8
  %345 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 440, i32 1
  store i8 0, i8* %345, align 8
  %346 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 439, i32 1
  store i8 0, i8* %346, align 8
  %347 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 442, i32 1
  store i8 0, i8* %347, align 8
  %348 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 441, i32 1
  store i8 0, i8* %348, align 8
  %349 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 444, i32 1
  store i8 0, i8* %349, align 8
  %350 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 443, i32 1
  store i8 0, i8* %350, align 8
  %351 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 446, i32 1
  store i8 0, i8* %351, align 8
  %352 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 445, i32 1
  store i8 0, i8* %352, align 8
  %353 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 448, i32 1
  store i8 0, i8* %353, align 8
  %354 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 447, i32 1
  store i8 0, i8* %354, align 8
  %355 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 450, i32 1
  store i8 0, i8* %355, align 8
  %356 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 449, i32 1
  store i8 0, i8* %356, align 8
  %357 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 452, i32 1
  store i8 0, i8* %357, align 8
  %358 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 451, i32 1
  store i8 0, i8* %358, align 8
  %359 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 454, i32 1
  store i8 0, i8* %359, align 8
  %360 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 453, i32 1
  store i8 0, i8* %360, align 8
  %361 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 456, i32 1
  store i8 0, i8* %361, align 8
  %362 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 455, i32 1
  store i8 0, i8* %362, align 8
  %363 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 458, i32 1
  store i8 0, i8* %363, align 8
  %364 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 457, i32 1
  store i8 0, i8* %364, align 8
  %365 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 460, i32 1
  store i8 0, i8* %365, align 8
  %366 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 459, i32 1
  store i8 0, i8* %366, align 8
  %367 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 462, i32 1
  store i8 0, i8* %367, align 8
  %368 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 461, i32 1
  store i8 0, i8* %368, align 8
  %369 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 464, i32 1
  store i8 0, i8* %369, align 8
  %370 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 463, i32 1
  store i8 0, i8* %370, align 8
  %371 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 466, i32 1
  store i8 0, i8* %371, align 8
  %372 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 465, i32 1
  store i8 0, i8* %372, align 8
  %373 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 468, i32 1
  store i8 0, i8* %373, align 8
  %374 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 467, i32 1
  store i8 0, i8* %374, align 8
  %375 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 470, i32 1
  store i8 0, i8* %375, align 8
  %376 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 469, i32 1
  store i8 0, i8* %376, align 8
  %377 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 472, i32 1
  store i8 0, i8* %377, align 8
  %378 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 471, i32 1
  store i8 0, i8* %378, align 8
  %379 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 474, i32 1
  store i8 0, i8* %379, align 8
  %380 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 473, i32 1
  store i8 0, i8* %380, align 8
  %381 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 476, i32 1
  store i8 0, i8* %381, align 8
  %382 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 475, i32 1
  store i8 0, i8* %382, align 8
  %383 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 478, i32 1
  store i8 0, i8* %383, align 8
  %384 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 477, i32 1
  store i8 0, i8* %384, align 8
  %385 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 480, i32 1
  store i8 0, i8* %385, align 8
  %386 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 479, i32 1
  store i8 0, i8* %386, align 8
  %387 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 482, i32 1
  store i8 0, i8* %387, align 8
  %388 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 481, i32 1
  store i8 0, i8* %388, align 8
  %389 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 484, i32 1
  store i8 0, i8* %389, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 483, i32 1
  store i8 0, i8* %390, align 8
  %391 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 486, i32 1
  store i8 0, i8* %391, align 8
  %392 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 485, i32 1
  store i8 0, i8* %392, align 8
  %393 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 488, i32 1
  store i8 0, i8* %393, align 8
  %394 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 487, i32 1
  store i8 0, i8* %394, align 8
  %395 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 490, i32 1
  store i8 0, i8* %395, align 8
  %396 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 489, i32 1
  store i8 0, i8* %396, align 8
  %397 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 492, i32 1
  store i8 0, i8* %397, align 8
  %398 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 491, i32 1
  store i8 0, i8* %398, align 8
  %399 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 494, i32 1
  store i8 0, i8* %399, align 8
  %400 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 493, i32 1
  store i8 0, i8* %400, align 8
  %401 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 496, i32 1
  store i8 0, i8* %401, align 8
  %402 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 495, i32 1
  store i8 0, i8* %402, align 8
  %403 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 498, i32 1
  store i8 0, i8* %403, align 8
  %404 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 497, i32 1
  store i8 0, i8* %404, align 8
  %405 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 500, i32 1
  store i8 0, i8* %405, align 8
  %406 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 499, i32 1
  store i8 0, i8* %406, align 8
  %407 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 502, i32 1
  store i8 0, i8* %407, align 8
  %408 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 501, i32 1
  store i8 0, i8* %408, align 8
  %409 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 504, i32 1
  store i8 0, i8* %409, align 8
  %410 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 503, i32 1
  store i8 0, i8* %410, align 8
  %411 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 506, i32 1
  store i8 0, i8* %411, align 8
  %412 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 505, i32 1
  store i8 0, i8* %412, align 8
  %413 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 508, i32 1
  store i8 0, i8* %413, align 8
  %414 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 507, i32 1
  store i8 0, i8* %414, align 8
  %415 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 510, i32 1
  store i8 0, i8* %415, align 8
  %416 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 509, i32 1
  store i8 0, i8* %416, align 8
  %417 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 512, i32 1
  store i8 0, i8* %417, align 8
  %418 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 511, i32 1
  store i8 0, i8* %418, align 8
  %419 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 514, i32 1
  store i8 0, i8* %419, align 8
  %420 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 513, i32 1
  store i8 0, i8* %420, align 8
  %421 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 516, i32 1
  store i8 0, i8* %421, align 8
  %422 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 515, i32 1
  store i8 0, i8* %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 518, i32 1
  store i8 0, i8* %423, align 8
  %424 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 517, i32 1
  store i8 0, i8* %424, align 8
  %425 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 520, i32 1
  store i8 0, i8* %425, align 8
  %426 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 519, i32 1
  store i8 0, i8* %426, align 8
  %427 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 522, i32 1
  store i8 0, i8* %427, align 8
  %428 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 521, i32 1
  store i8 0, i8* %428, align 8
  %429 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 524, i32 1
  store i8 0, i8* %429, align 8
  %430 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 523, i32 1
  store i8 0, i8* %430, align 8
  %431 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 526, i32 1
  store i8 0, i8* %431, align 8
  %432 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 525, i32 1
  store i8 0, i8* %432, align 8
  %433 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 528, i32 1
  store i8 0, i8* %433, align 8
  %434 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 527, i32 1
  store i8 0, i8* %434, align 8
  %435 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 530, i32 1
  store i8 0, i8* %435, align 8
  %436 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 529, i32 1
  store i8 0, i8* %436, align 8
  %437 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 532, i32 1
  store i8 0, i8* %437, align 8
  %438 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 531, i32 1
  store i8 0, i8* %438, align 8
  %439 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 534, i32 1
  store i8 0, i8* %439, align 8
  %440 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 533, i32 1
  store i8 0, i8* %440, align 8
  %441 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 536, i32 1
  store i8 0, i8* %441, align 8
  %442 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 535, i32 1
  store i8 0, i8* %442, align 8
  %443 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 538, i32 1
  store i8 0, i8* %443, align 8
  %444 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 537, i32 1
  store i8 0, i8* %444, align 8
  %445 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 540, i32 1
  store i8 0, i8* %445, align 8
  %446 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 539, i32 1
  store i8 0, i8* %446, align 8
  %447 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 542, i32 1
  store i8 0, i8* %447, align 8
  %448 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 541, i32 1
  store i8 0, i8* %448, align 8
  %449 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 544, i32 1
  store i8 0, i8* %449, align 8
  %450 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 543, i32 1
  store i8 0, i8* %450, align 8
  %451 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 546, i32 1
  store i8 0, i8* %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 545, i32 1
  store i8 0, i8* %452, align 8
  %453 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 548, i32 1
  store i8 0, i8* %453, align 8
  %454 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 547, i32 1
  store i8 0, i8* %454, align 8
  %455 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 550, i32 1
  store i8 0, i8* %455, align 8
  %456 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 549, i32 1
  store i8 0, i8* %456, align 8
  %457 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 552, i32 1
  store i8 0, i8* %457, align 8
  %458 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 551, i32 1
  store i8 0, i8* %458, align 8
  %459 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 554, i32 1
  store i8 0, i8* %459, align 8
  %460 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 553, i32 1
  store i8 0, i8* %460, align 8
  %461 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 556, i32 1
  store i8 0, i8* %461, align 8
  %462 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 555, i32 1
  store i8 0, i8* %462, align 8
  %463 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 558, i32 1
  store i8 0, i8* %463, align 8
  %464 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 557, i32 1
  store i8 0, i8* %464, align 8
  %465 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 560, i32 1
  store i8 0, i8* %465, align 8
  %466 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 559, i32 1
  store i8 0, i8* %466, align 8
  %467 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 562, i32 1
  store i8 0, i8* %467, align 8
  %468 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 561, i32 1
  store i8 0, i8* %468, align 8
  %469 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 564, i32 1
  store i8 0, i8* %469, align 8
  %470 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 563, i32 1
  store i8 0, i8* %470, align 8
  %471 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 566, i32 1
  store i8 0, i8* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 565, i32 1
  store i8 0, i8* %472, align 8
  %473 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 568, i32 1
  store i8 0, i8* %473, align 8
  %474 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 567, i32 1
  store i8 0, i8* %474, align 8
  %475 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 570, i32 1
  store i8 0, i8* %475, align 8
  %476 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 569, i32 1
  store i8 0, i8* %476, align 8
  %477 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 572, i32 1
  store i8 0, i8* %477, align 8
  %478 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 571, i32 1
  store i8 0, i8* %478, align 8
  %479 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 574, i32 1
  store i8 0, i8* %479, align 8
  %480 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 573, i32 1
  store i8 0, i8* %480, align 8
  %481 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 576, i32 1
  store i8 0, i8* %481, align 8
  %482 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 575, i32 1
  store i8 0, i8* %482, align 8
  %483 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 578, i32 1
  store i8 0, i8* %483, align 8
  %484 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 577, i32 1
  store i8 0, i8* %484, align 8
  %485 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 580, i32 1
  store i8 0, i8* %485, align 8
  %486 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 579, i32 1
  store i8 0, i8* %486, align 8
  %487 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 582, i32 1
  store i8 0, i8* %487, align 8
  %488 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 581, i32 1
  store i8 0, i8* %488, align 8
  %489 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 584, i32 1
  store i8 0, i8* %489, align 8
  %490 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 583, i32 1
  store i8 0, i8* %490, align 8
  %491 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 586, i32 1
  store i8 0, i8* %491, align 8
  %492 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 585, i32 1
  store i8 0, i8* %492, align 8
  %493 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 588, i32 1
  store i8 0, i8* %493, align 8
  %494 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 587, i32 1
  store i8 0, i8* %494, align 8
  %495 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 590, i32 1
  store i8 0, i8* %495, align 8
  %496 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 589, i32 1
  store i8 0, i8* %496, align 8
  %497 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 592, i32 1
  store i8 0, i8* %497, align 8
  %498 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 591, i32 1
  store i8 0, i8* %498, align 8
  %499 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 594, i32 1
  store i8 0, i8* %499, align 8
  %500 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 593, i32 1
  store i8 0, i8* %500, align 8
  %501 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 596, i32 1
  store i8 0, i8* %501, align 8
  %502 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 595, i32 1
  store i8 0, i8* %502, align 8
  %503 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 598, i32 1
  store i8 0, i8* %503, align 8
  %504 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 597, i32 1
  store i8 0, i8* %504, align 8
  %505 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 600, i32 1
  store i8 0, i8* %505, align 8
  %506 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 599, i32 1
  store i8 0, i8* %506, align 8
  %507 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 602, i32 1
  store i8 0, i8* %507, align 8
  %508 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 601, i32 1
  store i8 0, i8* %508, align 8
  %509 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 604, i32 1
  store i8 0, i8* %509, align 8
  %510 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 603, i32 1
  store i8 0, i8* %510, align 8
  %511 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 606, i32 1
  store i8 0, i8* %511, align 8
  %512 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 605, i32 1
  store i8 0, i8* %512, align 8
  %513 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 608, i32 1
  store i8 0, i8* %513, align 8
  %514 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 607, i32 1
  store i8 0, i8* %514, align 8
  %515 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 610, i32 1
  store i8 0, i8* %515, align 8
  %516 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 609, i32 1
  store i8 0, i8* %516, align 8
  %517 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 612, i32 1
  store i8 0, i8* %517, align 8
  %518 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 611, i32 1
  store i8 0, i8* %518, align 8
  %519 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 614, i32 1
  store i8 0, i8* %519, align 8
  %520 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 613, i32 1
  store i8 0, i8* %520, align 8
  %521 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 616, i32 1
  store i8 0, i8* %521, align 8
  %522 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 615, i32 1
  store i8 0, i8* %522, align 8
  %523 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 618, i32 1
  store i8 0, i8* %523, align 8
  %524 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 617, i32 1
  store i8 0, i8* %524, align 8
  %525 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 620, i32 1
  store i8 0, i8* %525, align 8
  %526 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 619, i32 1
  store i8 0, i8* %526, align 8
  %527 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 622, i32 1
  store i8 0, i8* %527, align 8
  %528 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 621, i32 1
  store i8 0, i8* %528, align 8
  %529 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 624, i32 1
  store i8 0, i8* %529, align 8
  %530 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 623, i32 1
  store i8 0, i8* %530, align 8
  %531 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 626, i32 1
  store i8 0, i8* %531, align 8
  %532 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 625, i32 1
  store i8 0, i8* %532, align 8
  %533 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 628, i32 1
  store i8 0, i8* %533, align 8
  %534 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 627, i32 1
  store i8 0, i8* %534, align 8
  %535 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 630, i32 1
  store i8 0, i8* %535, align 8
  %536 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 629, i32 1
  store i8 0, i8* %536, align 8
  %537 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 632, i32 1
  store i8 0, i8* %537, align 8
  %538 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 631, i32 1
  store i8 0, i8* %538, align 8
  %539 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 634, i32 1
  store i8 0, i8* %539, align 8
  %540 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 633, i32 1
  store i8 0, i8* %540, align 8
  %541 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 636, i32 1
  store i8 0, i8* %541, align 8
  %542 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 635, i32 1
  store i8 0, i8* %542, align 8
  %543 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 638, i32 1
  store i8 0, i8* %543, align 8
  %544 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 637, i32 1
  store i8 0, i8* %544, align 8
  %545 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 640, i32 1
  store i8 0, i8* %545, align 8
  %546 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 639, i32 1
  store i8 0, i8* %546, align 8
  %547 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 642, i32 1
  store i8 0, i8* %547, align 8
  %548 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 641, i32 1
  store i8 0, i8* %548, align 8
  %549 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 644, i32 1
  store i8 0, i8* %549, align 8
  %550 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 643, i32 1
  store i8 0, i8* %550, align 8
  %551 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 646, i32 1
  store i8 0, i8* %551, align 8
  %552 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 645, i32 1
  store i8 0, i8* %552, align 8
  %553 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 648, i32 1
  store i8 0, i8* %553, align 8
  %554 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 647, i32 1
  store i8 0, i8* %554, align 8
  %555 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 650, i32 1
  store i8 0, i8* %555, align 8
  %556 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 649, i32 1
  store i8 0, i8* %556, align 8
  %557 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 652, i32 1
  store i8 0, i8* %557, align 8
  %558 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 651, i32 1
  store i8 0, i8* %558, align 8
  %559 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 654, i32 1
  store i8 0, i8* %559, align 8
  %560 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 653, i32 1
  store i8 0, i8* %560, align 8
  %561 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 656, i32 1
  store i8 0, i8* %561, align 8
  %562 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 655, i32 1
  store i8 0, i8* %562, align 8
  %563 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 658, i32 1
  store i8 0, i8* %563, align 8
  %564 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 657, i32 1
  store i8 0, i8* %564, align 8
  %565 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 660, i32 1
  store i8 0, i8* %565, align 8
  %566 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 659, i32 1
  store i8 0, i8* %566, align 8
  %567 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 662, i32 1
  store i8 0, i8* %567, align 8
  %568 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 661, i32 1
  store i8 0, i8* %568, align 8
  %569 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 664, i32 1
  store i8 0, i8* %569, align 8
  %570 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 663, i32 1
  store i8 0, i8* %570, align 8
  %571 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 666, i32 1
  store i8 0, i8* %571, align 8
  %572 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 665, i32 1
  store i8 0, i8* %572, align 8
  %573 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 668, i32 1
  store i8 0, i8* %573, align 8
  %574 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 667, i32 1
  store i8 0, i8* %574, align 8
  %575 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 670, i32 1
  store i8 0, i8* %575, align 8
  %576 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 669, i32 1
  store i8 0, i8* %576, align 8
  %577 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 672, i32 1
  store i8 0, i8* %577, align 8
  %578 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 671, i32 1
  store i8 0, i8* %578, align 8
  %579 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 674, i32 1
  store i8 0, i8* %579, align 8
  %580 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 673, i32 1
  store i8 0, i8* %580, align 8
  %581 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 676, i32 1
  store i8 0, i8* %581, align 8
  %582 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 675, i32 1
  store i8 0, i8* %582, align 8
  %583 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 678, i32 1
  store i8 0, i8* %583, align 8
  %584 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 677, i32 1
  store i8 0, i8* %584, align 8
  %585 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 680, i32 1
  store i8 0, i8* %585, align 8
  %586 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 679, i32 1
  store i8 0, i8* %586, align 8
  %587 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 682, i32 1
  store i8 0, i8* %587, align 8
  %588 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 681, i32 1
  store i8 0, i8* %588, align 8
  %589 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 684, i32 1
  store i8 0, i8* %589, align 8
  %590 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 683, i32 1
  store i8 0, i8* %590, align 8
  %591 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 686, i32 1
  store i8 0, i8* %591, align 8
  %592 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 685, i32 1
  store i8 0, i8* %592, align 8
  %593 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 688, i32 1
  store i8 0, i8* %593, align 8
  %594 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 687, i32 1
  store i8 0, i8* %594, align 8
  %595 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 690, i32 1
  store i8 0, i8* %595, align 8
  %596 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 689, i32 1
  store i8 0, i8* %596, align 8
  %597 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 692, i32 1
  store i8 0, i8* %597, align 8
  %598 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 691, i32 1
  store i8 0, i8* %598, align 8
  %599 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 694, i32 1
  store i8 0, i8* %599, align 8
  %600 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 693, i32 1
  store i8 0, i8* %600, align 8
  %601 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 696, i32 1
  store i8 0, i8* %601, align 8
  %602 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 695, i32 1
  store i8 0, i8* %602, align 8
  %603 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 698, i32 1
  store i8 0, i8* %603, align 8
  %604 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 697, i32 1
  store i8 0, i8* %604, align 8
  %605 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 700, i32 1
  store i8 0, i8* %605, align 8
  %606 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 699, i32 1
  store i8 0, i8* %606, align 8
  %607 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 702, i32 1
  store i8 0, i8* %607, align 8
  %608 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 701, i32 1
  store i8 0, i8* %608, align 8
  %609 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 704, i32 1
  store i8 0, i8* %609, align 8
  %610 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 703, i32 1
  store i8 0, i8* %610, align 8
  %611 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 706, i32 1
  store i8 0, i8* %611, align 8
  %612 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 705, i32 1
  store i8 0, i8* %612, align 8
  %613 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 708, i32 1
  store i8 0, i8* %613, align 8
  %614 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 707, i32 1
  store i8 0, i8* %614, align 8
  %615 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 710, i32 1
  store i8 0, i8* %615, align 8
  %616 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 709, i32 1
  store i8 0, i8* %616, align 8
  %617 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 712, i32 1
  store i8 0, i8* %617, align 8
  %618 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 711, i32 1
  store i8 0, i8* %618, align 8
  %619 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 714, i32 1
  store i8 0, i8* %619, align 8
  %620 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 713, i32 1
  store i8 0, i8* %620, align 8
  %621 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 716, i32 1
  store i8 0, i8* %621, align 8
  %622 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 715, i32 1
  store i8 0, i8* %622, align 8
  %623 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 718, i32 1
  store i8 0, i8* %623, align 8
  %624 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 717, i32 1
  store i8 0, i8* %624, align 8
  %625 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 720, i32 1
  store i8 0, i8* %625, align 8
  %626 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 719, i32 1
  store i8 0, i8* %626, align 8
  %627 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 722, i32 1
  store i8 0, i8* %627, align 8
  %628 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 721, i32 1
  store i8 0, i8* %628, align 8
  %629 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 724, i32 1
  store i8 0, i8* %629, align 8
  %630 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 723, i32 1
  store i8 0, i8* %630, align 8
  %631 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 726, i32 1
  store i8 0, i8* %631, align 8
  %632 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 725, i32 1
  store i8 0, i8* %632, align 8
  %633 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 728, i32 1
  store i8 0, i8* %633, align 8
  %634 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 727, i32 1
  store i8 0, i8* %634, align 8
  %635 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 730, i32 1
  store i8 0, i8* %635, align 8
  %636 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 729, i32 1
  store i8 0, i8* %636, align 8
  %637 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 732, i32 1
  store i8 0, i8* %637, align 8
  %638 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 731, i32 1
  store i8 0, i8* %638, align 8
  %639 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 734, i32 1
  store i8 0, i8* %639, align 8
  %640 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 733, i32 1
  store i8 0, i8* %640, align 8
  %641 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 736, i32 1
  store i8 0, i8* %641, align 8
  %642 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 735, i32 1
  store i8 0, i8* %642, align 8
  %643 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 738, i32 1
  store i8 0, i8* %643, align 8
  %644 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 737, i32 1
  store i8 0, i8* %644, align 8
  %645 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 740, i32 1
  store i8 0, i8* %645, align 8
  %646 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 739, i32 1
  store i8 0, i8* %646, align 8
  %647 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 742, i32 1
  store i8 0, i8* %647, align 8
  %648 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 741, i32 1
  store i8 0, i8* %648, align 8
  %649 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 744, i32 1
  store i8 0, i8* %649, align 8
  %650 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 743, i32 1
  store i8 0, i8* %650, align 8
  %651 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 746, i32 1
  store i8 0, i8* %651, align 8
  %652 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 745, i32 1
  store i8 0, i8* %652, align 8
  %653 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 748, i32 1
  store i8 0, i8* %653, align 8
  %654 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 747, i32 1
  store i8 0, i8* %654, align 8
  %655 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 750, i32 1
  store i8 0, i8* %655, align 8
  %656 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 749, i32 1
  store i8 0, i8* %656, align 8
  %657 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 752, i32 1
  store i8 0, i8* %657, align 8
  %658 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 751, i32 1
  store i8 0, i8* %658, align 8
  %659 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 754, i32 1
  store i8 0, i8* %659, align 8
  %660 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 753, i32 1
  store i8 0, i8* %660, align 8
  %661 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 756, i32 1
  store i8 0, i8* %661, align 8
  %662 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 755, i32 1
  store i8 0, i8* %662, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8Counters28ResetCreateHistogramFunctionEPFPvPKciimE(%"class.v8::internal::Counters"*, i8* (i8*, i32, i32, i64)*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 760, i32 1
  store i8* (i8*, i32, i32, i64)* %1, i8* (i8*, i32, i32, i64)** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 1, i32 5
  %5 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %5, i64 0, i32 760, i32 1
  %7 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %6, align 8
  %8 = icmp eq i8* (i8*, i32, i32, i64)* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 1, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 1, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i8* %7(i8* %18, i32 %16, i32 %14, i64 %12) #4
  br label %20

20:                                               ; preds = %2, %9
  %21 = phi i8* [ %19, %9 ], [ null, %2 ]
  %22 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 1, i32 4
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 2, i32 5
  %24 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %24, i64 0, i32 760, i32 1
  %26 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %25, align 8
  %27 = icmp eq i8* (i8*, i32, i32, i64)* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 2, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 2, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 2, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 2, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = tail call i8* %26(i8* %37, i32 %35, i32 %33, i64 %31) #4
  br label %39

39:                                               ; preds = %20, %28
  %40 = phi i8* [ %38, %28 ], [ null, %20 ]
  %41 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 2, i32 4
  store i8* %40, i8** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 3, i32 5
  %43 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %43, i64 0, i32 760, i32 1
  %45 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %44, align 8
  %46 = icmp eq i8* (i8*, i32, i32, i64)* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 3, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 3, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 3, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 3, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = tail call i8* %45(i8* %56, i32 %54, i32 %52, i64 %50) #4
  br label %58

58:                                               ; preds = %39, %47
  %59 = phi i8* [ %57, %47 ], [ null, %39 ]
  %60 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 3, i32 4
  store i8* %59, i8** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 4, i32 5
  %62 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %62, i64 0, i32 760, i32 1
  %64 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %63, align 8
  %65 = icmp eq i8* (i8*, i32, i32, i64)* %64, null
  br i1 %65, label %77, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 4, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 4, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 4, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 4, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = tail call i8* %64(i8* %75, i32 %73, i32 %71, i64 %69) #4
  br label %77

77:                                               ; preds = %58, %66
  %78 = phi i8* [ %76, %66 ], [ null, %58 ]
  %79 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 4, i32 4
  store i8* %78, i8** %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 5, i32 5
  %81 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %81, i64 0, i32 760, i32 1
  %83 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %82, align 8
  %84 = icmp eq i8* (i8*, i32, i32, i64)* %83, null
  br i1 %84, label %96, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 5, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 5, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 5, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 5, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = tail call i8* %83(i8* %94, i32 %92, i32 %90, i64 %88) #4
  br label %96

96:                                               ; preds = %77, %85
  %97 = phi i8* [ %95, %85 ], [ null, %77 ]
  %98 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 5, i32 4
  store i8* %97, i8** %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 6, i32 5
  %100 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %100, i64 0, i32 760, i32 1
  %102 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %101, align 8
  %103 = icmp eq i8* (i8*, i32, i32, i64)* %102, null
  br i1 %103, label %115, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 6, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 6, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 6, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 6, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = tail call i8* %102(i8* %113, i32 %111, i32 %109, i64 %107) #4
  br label %115

115:                                              ; preds = %96, %104
  %116 = phi i8* [ %114, %104 ], [ null, %96 ]
  %117 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 6, i32 4
  store i8* %116, i8** %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 7, i32 5
  %119 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %119, i64 0, i32 760, i32 1
  %121 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %120, align 8
  %122 = icmp eq i8* (i8*, i32, i32, i64)* %121, null
  br i1 %122, label %134, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 7, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 7, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 7, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 7, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = tail call i8* %121(i8* %132, i32 %130, i32 %128, i64 %126) #4
  br label %134

134:                                              ; preds = %115, %123
  %135 = phi i8* [ %133, %123 ], [ null, %115 ]
  %136 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 7, i32 4
  store i8* %135, i8** %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 8, i32 5
  %138 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %138, i64 0, i32 760, i32 1
  %140 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %139, align 8
  %141 = icmp eq i8* (i8*, i32, i32, i64)* %140, null
  br i1 %141, label %153, label %142

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 8, i32 3
  %144 = load i32, i32* %143, align 8
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 8, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 8, i32 1
  %149 = load i32, i32* %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 8, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = tail call i8* %140(i8* %151, i32 %149, i32 %147, i64 %145) #4
  br label %153

153:                                              ; preds = %134, %142
  %154 = phi i8* [ %152, %142 ], [ null, %134 ]
  %155 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 8, i32 4
  store i8* %154, i8** %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 9, i32 5
  %157 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %157, i64 0, i32 760, i32 1
  %159 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %158, align 8
  %160 = icmp eq i8* (i8*, i32, i32, i64)* %159, null
  br i1 %160, label %172, label %161

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 9, i32 3
  %163 = load i32, i32* %162, align 8
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 9, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 9, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 9, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = tail call i8* %159(i8* %170, i32 %168, i32 %166, i64 %164) #4
  br label %172

172:                                              ; preds = %153, %161
  %173 = phi i8* [ %171, %161 ], [ null, %153 ]
  %174 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 9, i32 4
  store i8* %173, i8** %174, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 10, i32 5
  %176 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %176, i64 0, i32 760, i32 1
  %178 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %177, align 8
  %179 = icmp eq i8* (i8*, i32, i32, i64)* %178, null
  br i1 %179, label %191, label %180

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 10, i32 3
  %182 = load i32, i32* %181, align 8
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 10, i32 2
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 10, i32 1
  %187 = load i32, i32* %186, align 8
  %188 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 10, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = tail call i8* %178(i8* %189, i32 %187, i32 %185, i64 %183) #4
  br label %191

191:                                              ; preds = %172, %180
  %192 = phi i8* [ %190, %180 ], [ null, %172 ]
  %193 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 10, i32 4
  store i8* %192, i8** %193, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 11, i32 5
  %195 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %194, align 8
  %196 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %195, i64 0, i32 760, i32 1
  %197 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %196, align 8
  %198 = icmp eq i8* (i8*, i32, i32, i64)* %197, null
  br i1 %198, label %210, label %199

199:                                              ; preds = %191
  %200 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 11, i32 3
  %201 = load i32, i32* %200, align 8
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 11, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 11, i32 1
  %206 = load i32, i32* %205, align 8
  %207 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 11, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = tail call i8* %197(i8* %208, i32 %206, i32 %204, i64 %202) #4
  br label %210

210:                                              ; preds = %191, %199
  %211 = phi i8* [ %209, %199 ], [ null, %191 ]
  %212 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 11, i32 4
  store i8* %211, i8** %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 12, i32 5
  %214 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %213, align 8
  %215 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %214, i64 0, i32 760, i32 1
  %216 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %215, align 8
  %217 = icmp eq i8* (i8*, i32, i32, i64)* %216, null
  br i1 %217, label %229, label %218

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 12, i32 3
  %220 = load i32, i32* %219, align 8
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 12, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 12, i32 1
  %225 = load i32, i32* %224, align 8
  %226 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 12, i32 0
  %227 = load i8*, i8** %226, align 8
  %228 = tail call i8* %216(i8* %227, i32 %225, i32 %223, i64 %221) #4
  br label %229

229:                                              ; preds = %210, %218
  %230 = phi i8* [ %228, %218 ], [ null, %210 ]
  %231 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 12, i32 4
  store i8* %230, i8** %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 13, i32 5
  %233 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %232, align 8
  %234 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %233, i64 0, i32 760, i32 1
  %235 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %234, align 8
  %236 = icmp eq i8* (i8*, i32, i32, i64)* %235, null
  br i1 %236, label %248, label %237

237:                                              ; preds = %229
  %238 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 13, i32 3
  %239 = load i32, i32* %238, align 8
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 13, i32 2
  %242 = load i32, i32* %241, align 4
  %243 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 13, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 13, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = tail call i8* %235(i8* %246, i32 %244, i32 %242, i64 %240) #4
  br label %248

248:                                              ; preds = %229, %237
  %249 = phi i8* [ %247, %237 ], [ null, %229 ]
  %250 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 13, i32 4
  store i8* %249, i8** %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 14, i32 5
  %252 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %251, align 8
  %253 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %252, i64 0, i32 760, i32 1
  %254 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %253, align 8
  %255 = icmp eq i8* (i8*, i32, i32, i64)* %254, null
  br i1 %255, label %267, label %256

256:                                              ; preds = %248
  %257 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 14, i32 3
  %258 = load i32, i32* %257, align 8
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 14, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 14, i32 1
  %263 = load i32, i32* %262, align 8
  %264 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 14, i32 0
  %265 = load i8*, i8** %264, align 8
  %266 = tail call i8* %254(i8* %265, i32 %263, i32 %261, i64 %259) #4
  br label %267

267:                                              ; preds = %248, %256
  %268 = phi i8* [ %266, %256 ], [ null, %248 ]
  %269 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 14, i32 4
  store i8* %268, i8** %269, align 8
  %270 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 15, i32 5
  %271 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %270, align 8
  %272 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %271, i64 0, i32 760, i32 1
  %273 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %272, align 8
  %274 = icmp eq i8* (i8*, i32, i32, i64)* %273, null
  br i1 %274, label %286, label %275

275:                                              ; preds = %267
  %276 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 15, i32 3
  %277 = load i32, i32* %276, align 8
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 15, i32 2
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 15, i32 1
  %282 = load i32, i32* %281, align 8
  %283 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 15, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = tail call i8* %273(i8* %284, i32 %282, i32 %280, i64 %278) #4
  br label %286

286:                                              ; preds = %267, %275
  %287 = phi i8* [ %285, %275 ], [ null, %267 ]
  %288 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 15, i32 4
  store i8* %287, i8** %288, align 8
  %289 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 16, i32 5
  %290 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %289, align 8
  %291 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %290, i64 0, i32 760, i32 1
  %292 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %291, align 8
  %293 = icmp eq i8* (i8*, i32, i32, i64)* %292, null
  br i1 %293, label %305, label %294

294:                                              ; preds = %286
  %295 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 16, i32 3
  %296 = load i32, i32* %295, align 8
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 16, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 16, i32 1
  %301 = load i32, i32* %300, align 8
  %302 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 16, i32 0
  %303 = load i8*, i8** %302, align 8
  %304 = tail call i8* %292(i8* %303, i32 %301, i32 %299, i64 %297) #4
  br label %305

305:                                              ; preds = %286, %294
  %306 = phi i8* [ %304, %294 ], [ null, %286 ]
  %307 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 16, i32 4
  store i8* %306, i8** %307, align 8
  %308 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 17, i32 5
  %309 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %308, align 8
  %310 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %309, i64 0, i32 760, i32 1
  %311 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %310, align 8
  %312 = icmp eq i8* (i8*, i32, i32, i64)* %311, null
  br i1 %312, label %324, label %313

313:                                              ; preds = %305
  %314 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 17, i32 3
  %315 = load i32, i32* %314, align 8
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 17, i32 2
  %318 = load i32, i32* %317, align 4
  %319 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 17, i32 1
  %320 = load i32, i32* %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 17, i32 0
  %322 = load i8*, i8** %321, align 8
  %323 = tail call i8* %311(i8* %322, i32 %320, i32 %318, i64 %316) #4
  br label %324

324:                                              ; preds = %305, %313
  %325 = phi i8* [ %323, %313 ], [ null, %305 ]
  %326 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 17, i32 4
  store i8* %325, i8** %326, align 8
  %327 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 18, i32 5
  %328 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %327, align 8
  %329 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %328, i64 0, i32 760, i32 1
  %330 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %329, align 8
  %331 = icmp eq i8* (i8*, i32, i32, i64)* %330, null
  br i1 %331, label %343, label %332

332:                                              ; preds = %324
  %333 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 18, i32 3
  %334 = load i32, i32* %333, align 8
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 18, i32 2
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 18, i32 1
  %339 = load i32, i32* %338, align 8
  %340 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 18, i32 0
  %341 = load i8*, i8** %340, align 8
  %342 = tail call i8* %330(i8* %341, i32 %339, i32 %337, i64 %335) #4
  br label %343

343:                                              ; preds = %324, %332
  %344 = phi i8* [ %342, %332 ], [ null, %324 ]
  %345 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 18, i32 4
  store i8* %344, i8** %345, align 8
  %346 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 19, i32 5
  %347 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %346, align 8
  %348 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %347, i64 0, i32 760, i32 1
  %349 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %348, align 8
  %350 = icmp eq i8* (i8*, i32, i32, i64)* %349, null
  br i1 %350, label %362, label %351

351:                                              ; preds = %343
  %352 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 19, i32 3
  %353 = load i32, i32* %352, align 8
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 19, i32 2
  %356 = load i32, i32* %355, align 4
  %357 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 19, i32 1
  %358 = load i32, i32* %357, align 8
  %359 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 19, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = tail call i8* %349(i8* %360, i32 %358, i32 %356, i64 %354) #4
  br label %362

362:                                              ; preds = %343, %351
  %363 = phi i8* [ %361, %351 ], [ null, %343 ]
  %364 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 19, i32 4
  store i8* %363, i8** %364, align 8
  %365 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 20, i32 5
  %366 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %365, align 8
  %367 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %366, i64 0, i32 760, i32 1
  %368 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %367, align 8
  %369 = icmp eq i8* (i8*, i32, i32, i64)* %368, null
  br i1 %369, label %381, label %370

370:                                              ; preds = %362
  %371 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 20, i32 3
  %372 = load i32, i32* %371, align 8
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 20, i32 2
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 20, i32 1
  %377 = load i32, i32* %376, align 8
  %378 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 20, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = tail call i8* %368(i8* %379, i32 %377, i32 %375, i64 %373) #4
  br label %381

381:                                              ; preds = %362, %370
  %382 = phi i8* [ %380, %370 ], [ null, %362 ]
  %383 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 20, i32 4
  store i8* %382, i8** %383, align 8
  %384 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 21, i32 5
  %385 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %384, align 8
  %386 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %385, i64 0, i32 760, i32 1
  %387 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %386, align 8
  %388 = icmp eq i8* (i8*, i32, i32, i64)* %387, null
  br i1 %388, label %400, label %389

389:                                              ; preds = %381
  %390 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 21, i32 3
  %391 = load i32, i32* %390, align 8
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 21, i32 2
  %394 = load i32, i32* %393, align 4
  %395 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 21, i32 1
  %396 = load i32, i32* %395, align 8
  %397 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 21, i32 0
  %398 = load i8*, i8** %397, align 8
  %399 = tail call i8* %387(i8* %398, i32 %396, i32 %394, i64 %392) #4
  br label %400

400:                                              ; preds = %381, %389
  %401 = phi i8* [ %399, %389 ], [ null, %381 ]
  %402 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 21, i32 4
  store i8* %401, i8** %402, align 8
  %403 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 22, i32 5
  %404 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %403, align 8
  %405 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %404, i64 0, i32 760, i32 1
  %406 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %405, align 8
  %407 = icmp eq i8* (i8*, i32, i32, i64)* %406, null
  br i1 %407, label %419, label %408

408:                                              ; preds = %400
  %409 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 22, i32 3
  %410 = load i32, i32* %409, align 8
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 22, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 22, i32 1
  %415 = load i32, i32* %414, align 8
  %416 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 22, i32 0
  %417 = load i8*, i8** %416, align 8
  %418 = tail call i8* %406(i8* %417, i32 %415, i32 %413, i64 %411) #4
  br label %419

419:                                              ; preds = %400, %408
  %420 = phi i8* [ %418, %408 ], [ null, %400 ]
  %421 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 22, i32 4
  store i8* %420, i8** %421, align 8
  %422 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 23, i32 5
  %423 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %422, align 8
  %424 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %423, i64 0, i32 760, i32 1
  %425 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %424, align 8
  %426 = icmp eq i8* (i8*, i32, i32, i64)* %425, null
  br i1 %426, label %438, label %427

427:                                              ; preds = %419
  %428 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 23, i32 3
  %429 = load i32, i32* %428, align 8
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 23, i32 2
  %432 = load i32, i32* %431, align 4
  %433 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 23, i32 1
  %434 = load i32, i32* %433, align 8
  %435 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 23, i32 0
  %436 = load i8*, i8** %435, align 8
  %437 = tail call i8* %425(i8* %436, i32 %434, i32 %432, i64 %430) #4
  br label %438

438:                                              ; preds = %419, %427
  %439 = phi i8* [ %437, %427 ], [ null, %419 ]
  %440 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 23, i32 4
  store i8* %439, i8** %440, align 8
  %441 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 24, i32 5
  %442 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %441, align 8
  %443 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %442, i64 0, i32 760, i32 1
  %444 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %443, align 8
  %445 = icmp eq i8* (i8*, i32, i32, i64)* %444, null
  br i1 %445, label %457, label %446

446:                                              ; preds = %438
  %447 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 24, i32 3
  %448 = load i32, i32* %447, align 8
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 24, i32 2
  %451 = load i32, i32* %450, align 4
  %452 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 24, i32 1
  %453 = load i32, i32* %452, align 8
  %454 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 24, i32 0
  %455 = load i8*, i8** %454, align 8
  %456 = tail call i8* %444(i8* %455, i32 %453, i32 %451, i64 %449) #4
  br label %457

457:                                              ; preds = %438, %446
  %458 = phi i8* [ %456, %446 ], [ null, %438 ]
  %459 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 24, i32 4
  store i8* %458, i8** %459, align 8
  %460 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 25, i32 5
  %461 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %460, align 8
  %462 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %461, i64 0, i32 760, i32 1
  %463 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %462, align 8
  %464 = icmp eq i8* (i8*, i32, i32, i64)* %463, null
  br i1 %464, label %476, label %465

465:                                              ; preds = %457
  %466 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 25, i32 3
  %467 = load i32, i32* %466, align 8
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 25, i32 2
  %470 = load i32, i32* %469, align 4
  %471 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 25, i32 1
  %472 = load i32, i32* %471, align 8
  %473 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 25, i32 0
  %474 = load i8*, i8** %473, align 8
  %475 = tail call i8* %463(i8* %474, i32 %472, i32 %470, i64 %468) #4
  br label %476

476:                                              ; preds = %457, %465
  %477 = phi i8* [ %475, %465 ], [ null, %457 ]
  %478 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 25, i32 4
  store i8* %477, i8** %478, align 8
  %479 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 26, i32 5
  %480 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %479, align 8
  %481 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %480, i64 0, i32 760, i32 1
  %482 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %481, align 8
  %483 = icmp eq i8* (i8*, i32, i32, i64)* %482, null
  br i1 %483, label %495, label %484

484:                                              ; preds = %476
  %485 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 26, i32 3
  %486 = load i32, i32* %485, align 8
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 26, i32 2
  %489 = load i32, i32* %488, align 4
  %490 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 26, i32 1
  %491 = load i32, i32* %490, align 8
  %492 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 26, i32 0
  %493 = load i8*, i8** %492, align 8
  %494 = tail call i8* %482(i8* %493, i32 %491, i32 %489, i64 %487) #4
  br label %495

495:                                              ; preds = %476, %484
  %496 = phi i8* [ %494, %484 ], [ null, %476 ]
  %497 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 26, i32 4
  store i8* %496, i8** %497, align 8
  %498 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 27, i32 5
  %499 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %498, align 8
  %500 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %499, i64 0, i32 760, i32 1
  %501 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %500, align 8
  %502 = icmp eq i8* (i8*, i32, i32, i64)* %501, null
  br i1 %502, label %514, label %503

503:                                              ; preds = %495
  %504 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 27, i32 3
  %505 = load i32, i32* %504, align 8
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 27, i32 2
  %508 = load i32, i32* %507, align 4
  %509 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 27, i32 1
  %510 = load i32, i32* %509, align 8
  %511 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 27, i32 0
  %512 = load i8*, i8** %511, align 8
  %513 = tail call i8* %501(i8* %512, i32 %510, i32 %508, i64 %506) #4
  br label %514

514:                                              ; preds = %495, %503
  %515 = phi i8* [ %513, %503 ], [ null, %495 ]
  %516 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 27, i32 4
  store i8* %515, i8** %516, align 8
  %517 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 28, i32 5
  %518 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %517, align 8
  %519 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %518, i64 0, i32 760, i32 1
  %520 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %519, align 8
  %521 = icmp eq i8* (i8*, i32, i32, i64)* %520, null
  br i1 %521, label %533, label %522

522:                                              ; preds = %514
  %523 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 28, i32 3
  %524 = load i32, i32* %523, align 8
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 28, i32 2
  %527 = load i32, i32* %526, align 4
  %528 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 28, i32 1
  %529 = load i32, i32* %528, align 8
  %530 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 28, i32 0
  %531 = load i8*, i8** %530, align 8
  %532 = tail call i8* %520(i8* %531, i32 %529, i32 %527, i64 %525) #4
  br label %533

533:                                              ; preds = %514, %522
  %534 = phi i8* [ %532, %522 ], [ null, %514 ]
  %535 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 28, i32 4
  store i8* %534, i8** %535, align 8
  %536 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 29, i32 5
  %537 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %536, align 8
  %538 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %537, i64 0, i32 760, i32 1
  %539 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %538, align 8
  %540 = icmp eq i8* (i8*, i32, i32, i64)* %539, null
  br i1 %540, label %552, label %541

541:                                              ; preds = %533
  %542 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 29, i32 3
  %543 = load i32, i32* %542, align 8
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 29, i32 2
  %546 = load i32, i32* %545, align 4
  %547 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 29, i32 1
  %548 = load i32, i32* %547, align 8
  %549 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 29, i32 0
  %550 = load i8*, i8** %549, align 8
  %551 = tail call i8* %539(i8* %550, i32 %548, i32 %546, i64 %544) #4
  br label %552

552:                                              ; preds = %533, %541
  %553 = phi i8* [ %551, %541 ], [ null, %533 ]
  %554 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 29, i32 4
  store i8* %553, i8** %554, align 8
  %555 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 30, i32 5
  %556 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %555, align 8
  %557 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %556, i64 0, i32 760, i32 1
  %558 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %557, align 8
  %559 = icmp eq i8* (i8*, i32, i32, i64)* %558, null
  br i1 %559, label %571, label %560

560:                                              ; preds = %552
  %561 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 30, i32 3
  %562 = load i32, i32* %561, align 8
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 30, i32 2
  %565 = load i32, i32* %564, align 4
  %566 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 30, i32 1
  %567 = load i32, i32* %566, align 8
  %568 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 30, i32 0
  %569 = load i8*, i8** %568, align 8
  %570 = tail call i8* %558(i8* %569, i32 %567, i32 %565, i64 %563) #4
  br label %571

571:                                              ; preds = %552, %560
  %572 = phi i8* [ %570, %560 ], [ null, %552 ]
  %573 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 30, i32 4
  store i8* %572, i8** %573, align 8
  %574 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 31, i32 5
  %575 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %574, align 8
  %576 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %575, i64 0, i32 760, i32 1
  %577 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %576, align 8
  %578 = icmp eq i8* (i8*, i32, i32, i64)* %577, null
  br i1 %578, label %590, label %579

579:                                              ; preds = %571
  %580 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 31, i32 3
  %581 = load i32, i32* %580, align 8
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 31, i32 2
  %584 = load i32, i32* %583, align 4
  %585 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 31, i32 1
  %586 = load i32, i32* %585, align 8
  %587 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 31, i32 0
  %588 = load i8*, i8** %587, align 8
  %589 = tail call i8* %577(i8* %588, i32 %586, i32 %584, i64 %582) #4
  br label %590

590:                                              ; preds = %571, %579
  %591 = phi i8* [ %589, %579 ], [ null, %571 ]
  %592 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 31, i32 4
  store i8* %591, i8** %592, align 8
  %593 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 32, i32 5
  %594 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %593, align 8
  %595 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %594, i64 0, i32 760, i32 1
  %596 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %595, align 8
  %597 = icmp eq i8* (i8*, i32, i32, i64)* %596, null
  br i1 %597, label %609, label %598

598:                                              ; preds = %590
  %599 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 32, i32 3
  %600 = load i32, i32* %599, align 8
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 32, i32 2
  %603 = load i32, i32* %602, align 4
  %604 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 32, i32 1
  %605 = load i32, i32* %604, align 8
  %606 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 32, i32 0
  %607 = load i8*, i8** %606, align 8
  %608 = tail call i8* %596(i8* %607, i32 %605, i32 %603, i64 %601) #4
  br label %609

609:                                              ; preds = %590, %598
  %610 = phi i8* [ %608, %598 ], [ null, %590 ]
  %611 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 32, i32 4
  store i8* %610, i8** %611, align 8
  %612 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 33, i32 5
  %613 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %612, align 8
  %614 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %613, i64 0, i32 760, i32 1
  %615 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %614, align 8
  %616 = icmp eq i8* (i8*, i32, i32, i64)* %615, null
  br i1 %616, label %628, label %617

617:                                              ; preds = %609
  %618 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 33, i32 3
  %619 = load i32, i32* %618, align 8
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 33, i32 2
  %622 = load i32, i32* %621, align 4
  %623 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 33, i32 1
  %624 = load i32, i32* %623, align 8
  %625 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 33, i32 0
  %626 = load i8*, i8** %625, align 8
  %627 = tail call i8* %615(i8* %626, i32 %624, i32 %622, i64 %620) #4
  br label %628

628:                                              ; preds = %609, %617
  %629 = phi i8* [ %627, %617 ], [ null, %609 ]
  %630 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 33, i32 4
  store i8* %629, i8** %630, align 8
  %631 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 34, i32 5
  %632 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %631, align 8
  %633 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %632, i64 0, i32 760, i32 1
  %634 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %633, align 8
  %635 = icmp eq i8* (i8*, i32, i32, i64)* %634, null
  br i1 %635, label %647, label %636

636:                                              ; preds = %628
  %637 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 34, i32 3
  %638 = load i32, i32* %637, align 8
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 34, i32 2
  %641 = load i32, i32* %640, align 4
  %642 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 34, i32 1
  %643 = load i32, i32* %642, align 8
  %644 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 34, i32 0
  %645 = load i8*, i8** %644, align 8
  %646 = tail call i8* %634(i8* %645, i32 %643, i32 %641, i64 %639) #4
  br label %647

647:                                              ; preds = %628, %636
  %648 = phi i8* [ %646, %636 ], [ null, %628 ]
  %649 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 34, i32 4
  store i8* %648, i8** %649, align 8
  %650 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 35, i32 5
  %651 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %650, align 8
  %652 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %651, i64 0, i32 760, i32 1
  %653 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %652, align 8
  %654 = icmp eq i8* (i8*, i32, i32, i64)* %653, null
  br i1 %654, label %666, label %655

655:                                              ; preds = %647
  %656 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 35, i32 3
  %657 = load i32, i32* %656, align 8
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 35, i32 2
  %660 = load i32, i32* %659, align 4
  %661 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 35, i32 1
  %662 = load i32, i32* %661, align 8
  %663 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 35, i32 0
  %664 = load i8*, i8** %663, align 8
  %665 = tail call i8* %653(i8* %664, i32 %662, i32 %660, i64 %658) #4
  br label %666

666:                                              ; preds = %647, %655
  %667 = phi i8* [ %665, %655 ], [ null, %647 ]
  %668 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 35, i32 4
  store i8* %667, i8** %668, align 8
  %669 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 36, i32 5
  %670 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %669, align 8
  %671 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %670, i64 0, i32 760, i32 1
  %672 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %671, align 8
  %673 = icmp eq i8* (i8*, i32, i32, i64)* %672, null
  br i1 %673, label %685, label %674

674:                                              ; preds = %666
  %675 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 36, i32 3
  %676 = load i32, i32* %675, align 8
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 36, i32 2
  %679 = load i32, i32* %678, align 4
  %680 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 36, i32 1
  %681 = load i32, i32* %680, align 8
  %682 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 36, i32 0
  %683 = load i8*, i8** %682, align 8
  %684 = tail call i8* %672(i8* %683, i32 %681, i32 %679, i64 %677) #4
  br label %685

685:                                              ; preds = %666, %674
  %686 = phi i8* [ %684, %674 ], [ null, %666 ]
  %687 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 36, i32 4
  store i8* %686, i8** %687, align 8
  %688 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 37, i32 5
  %689 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %688, align 8
  %690 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %689, i64 0, i32 760, i32 1
  %691 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %690, align 8
  %692 = icmp eq i8* (i8*, i32, i32, i64)* %691, null
  br i1 %692, label %704, label %693

693:                                              ; preds = %685
  %694 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 37, i32 3
  %695 = load i32, i32* %694, align 8
  %696 = sext i32 %695 to i64
  %697 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 37, i32 2
  %698 = load i32, i32* %697, align 4
  %699 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 37, i32 1
  %700 = load i32, i32* %699, align 8
  %701 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 37, i32 0
  %702 = load i8*, i8** %701, align 8
  %703 = tail call i8* %691(i8* %702, i32 %700, i32 %698, i64 %696) #4
  br label %704

704:                                              ; preds = %685, %693
  %705 = phi i8* [ %703, %693 ], [ null, %685 ]
  %706 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 37, i32 4
  store i8* %705, i8** %706, align 8
  %707 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 38, i32 5
  %708 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %707, align 8
  %709 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %708, i64 0, i32 760, i32 1
  %710 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %709, align 8
  %711 = icmp eq i8* (i8*, i32, i32, i64)* %710, null
  br i1 %711, label %723, label %712

712:                                              ; preds = %704
  %713 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 38, i32 3
  %714 = load i32, i32* %713, align 8
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 38, i32 2
  %717 = load i32, i32* %716, align 4
  %718 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 38, i32 1
  %719 = load i32, i32* %718, align 8
  %720 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 38, i32 0
  %721 = load i8*, i8** %720, align 8
  %722 = tail call i8* %710(i8* %721, i32 %719, i32 %717, i64 %715) #4
  br label %723

723:                                              ; preds = %704, %712
  %724 = phi i8* [ %722, %712 ], [ null, %704 ]
  %725 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 38, i32 4
  store i8* %724, i8** %725, align 8
  %726 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 39, i32 5
  %727 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %726, align 8
  %728 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %727, i64 0, i32 760, i32 1
  %729 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %728, align 8
  %730 = icmp eq i8* (i8*, i32, i32, i64)* %729, null
  br i1 %730, label %742, label %731

731:                                              ; preds = %723
  %732 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 39, i32 3
  %733 = load i32, i32* %732, align 8
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 39, i32 2
  %736 = load i32, i32* %735, align 4
  %737 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 39, i32 1
  %738 = load i32, i32* %737, align 8
  %739 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 39, i32 0
  %740 = load i8*, i8** %739, align 8
  %741 = tail call i8* %729(i8* %740, i32 %738, i32 %736, i64 %734) #4
  br label %742

742:                                              ; preds = %723, %731
  %743 = phi i8* [ %741, %731 ], [ null, %723 ]
  %744 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 39, i32 4
  store i8* %743, i8** %744, align 8
  %745 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 40, i32 5
  %746 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %745, align 8
  %747 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %746, i64 0, i32 760, i32 1
  %748 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %747, align 8
  %749 = icmp eq i8* (i8*, i32, i32, i64)* %748, null
  br i1 %749, label %761, label %750

750:                                              ; preds = %742
  %751 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 40, i32 3
  %752 = load i32, i32* %751, align 8
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 40, i32 2
  %755 = load i32, i32* %754, align 4
  %756 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 40, i32 1
  %757 = load i32, i32* %756, align 8
  %758 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 40, i32 0
  %759 = load i8*, i8** %758, align 8
  %760 = tail call i8* %748(i8* %759, i32 %757, i32 %755, i64 %753) #4
  br label %761

761:                                              ; preds = %742, %750
  %762 = phi i8* [ %760, %750 ], [ null, %742 ]
  %763 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 40, i32 4
  store i8* %762, i8** %763, align 8
  %764 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 41, i32 5
  %765 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %764, align 8
  %766 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %765, i64 0, i32 760, i32 1
  %767 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %766, align 8
  %768 = icmp eq i8* (i8*, i32, i32, i64)* %767, null
  br i1 %768, label %780, label %769

769:                                              ; preds = %761
  %770 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 41, i32 3
  %771 = load i32, i32* %770, align 8
  %772 = sext i32 %771 to i64
  %773 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 41, i32 2
  %774 = load i32, i32* %773, align 4
  %775 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 41, i32 1
  %776 = load i32, i32* %775, align 8
  %777 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 41, i32 0
  %778 = load i8*, i8** %777, align 8
  %779 = tail call i8* %767(i8* %778, i32 %776, i32 %774, i64 %772) #4
  br label %780

780:                                              ; preds = %761, %769
  %781 = phi i8* [ %779, %769 ], [ null, %761 ]
  %782 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 41, i32 4
  store i8* %781, i8** %782, align 8
  %783 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 42, i32 5
  %784 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %783, align 8
  %785 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %784, i64 0, i32 760, i32 1
  %786 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %785, align 8
  %787 = icmp eq i8* (i8*, i32, i32, i64)* %786, null
  br i1 %787, label %799, label %788

788:                                              ; preds = %780
  %789 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 42, i32 3
  %790 = load i32, i32* %789, align 8
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 42, i32 2
  %793 = load i32, i32* %792, align 4
  %794 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 42, i32 1
  %795 = load i32, i32* %794, align 8
  %796 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 42, i32 0
  %797 = load i8*, i8** %796, align 8
  %798 = tail call i8* %786(i8* %797, i32 %795, i32 %793, i64 %791) #4
  br label %799

799:                                              ; preds = %780, %788
  %800 = phi i8* [ %798, %788 ], [ null, %780 ]
  %801 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 42, i32 4
  store i8* %800, i8** %801, align 8
  %802 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 43, i32 5
  %803 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %802, align 8
  %804 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %803, i64 0, i32 760, i32 1
  %805 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %804, align 8
  %806 = icmp eq i8* (i8*, i32, i32, i64)* %805, null
  br i1 %806, label %818, label %807

807:                                              ; preds = %799
  %808 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 43, i32 3
  %809 = load i32, i32* %808, align 8
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 43, i32 2
  %812 = load i32, i32* %811, align 4
  %813 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 43, i32 1
  %814 = load i32, i32* %813, align 8
  %815 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 43, i32 0
  %816 = load i8*, i8** %815, align 8
  %817 = tail call i8* %805(i8* %816, i32 %814, i32 %812, i64 %810) #4
  br label %818

818:                                              ; preds = %799, %807
  %819 = phi i8* [ %817, %807 ], [ null, %799 ]
  %820 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 43, i32 4
  store i8* %819, i8** %820, align 8
  %821 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 44, i32 5
  %822 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %821, align 8
  %823 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %822, i64 0, i32 760, i32 1
  %824 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %823, align 8
  %825 = icmp eq i8* (i8*, i32, i32, i64)* %824, null
  br i1 %825, label %837, label %826

826:                                              ; preds = %818
  %827 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 44, i32 3
  %828 = load i32, i32* %827, align 8
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 44, i32 2
  %831 = load i32, i32* %830, align 4
  %832 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 44, i32 1
  %833 = load i32, i32* %832, align 8
  %834 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 44, i32 0
  %835 = load i8*, i8** %834, align 8
  %836 = tail call i8* %824(i8* %835, i32 %833, i32 %831, i64 %829) #4
  br label %837

837:                                              ; preds = %818, %826
  %838 = phi i8* [ %836, %826 ], [ null, %818 ]
  %839 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 44, i32 4
  store i8* %838, i8** %839, align 8
  %840 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 45, i32 5
  %841 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %840, align 8
  %842 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %841, i64 0, i32 760, i32 1
  %843 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %842, align 8
  %844 = icmp eq i8* (i8*, i32, i32, i64)* %843, null
  br i1 %844, label %856, label %845

845:                                              ; preds = %837
  %846 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 45, i32 3
  %847 = load i32, i32* %846, align 8
  %848 = sext i32 %847 to i64
  %849 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 45, i32 2
  %850 = load i32, i32* %849, align 4
  %851 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 45, i32 1
  %852 = load i32, i32* %851, align 8
  %853 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 45, i32 0
  %854 = load i8*, i8** %853, align 8
  %855 = tail call i8* %843(i8* %854, i32 %852, i32 %850, i64 %848) #4
  br label %856

856:                                              ; preds = %837, %845
  %857 = phi i8* [ %855, %845 ], [ null, %837 ]
  %858 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 45, i32 4
  store i8* %857, i8** %858, align 8
  %859 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 46, i32 5
  %860 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %859, align 8
  %861 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %860, i64 0, i32 760, i32 1
  %862 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %861, align 8
  %863 = icmp eq i8* (i8*, i32, i32, i64)* %862, null
  br i1 %863, label %875, label %864

864:                                              ; preds = %856
  %865 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 46, i32 3
  %866 = load i32, i32* %865, align 8
  %867 = sext i32 %866 to i64
  %868 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 46, i32 2
  %869 = load i32, i32* %868, align 4
  %870 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 46, i32 1
  %871 = load i32, i32* %870, align 8
  %872 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 46, i32 0
  %873 = load i8*, i8** %872, align 8
  %874 = tail call i8* %862(i8* %873, i32 %871, i32 %869, i64 %867) #4
  br label %875

875:                                              ; preds = %856, %864
  %876 = phi i8* [ %874, %864 ], [ null, %856 ]
  %877 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 46, i32 4
  store i8* %876, i8** %877, align 8
  %878 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 47, i32 5
  %879 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %878, align 8
  %880 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %879, i64 0, i32 760, i32 1
  %881 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %880, align 8
  %882 = icmp eq i8* (i8*, i32, i32, i64)* %881, null
  br i1 %882, label %894, label %883

883:                                              ; preds = %875
  %884 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 47, i32 3
  %885 = load i32, i32* %884, align 8
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 47, i32 2
  %888 = load i32, i32* %887, align 4
  %889 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 47, i32 1
  %890 = load i32, i32* %889, align 8
  %891 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 47, i32 0
  %892 = load i8*, i8** %891, align 8
  %893 = tail call i8* %881(i8* %892, i32 %890, i32 %888, i64 %886) #4
  br label %894

894:                                              ; preds = %875, %883
  %895 = phi i8* [ %893, %883 ], [ null, %875 ]
  %896 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 47, i32 4
  store i8* %895, i8** %896, align 8
  %897 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 48, i32 5
  %898 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %897, align 8
  %899 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %898, i64 0, i32 760, i32 1
  %900 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %899, align 8
  %901 = icmp eq i8* (i8*, i32, i32, i64)* %900, null
  br i1 %901, label %913, label %902

902:                                              ; preds = %894
  %903 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 48, i32 3
  %904 = load i32, i32* %903, align 8
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 48, i32 2
  %907 = load i32, i32* %906, align 4
  %908 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 48, i32 1
  %909 = load i32, i32* %908, align 8
  %910 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 48, i32 0
  %911 = load i8*, i8** %910, align 8
  %912 = tail call i8* %900(i8* %911, i32 %909, i32 %907, i64 %905) #4
  br label %913

913:                                              ; preds = %894, %902
  %914 = phi i8* [ %912, %902 ], [ null, %894 ]
  %915 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 48, i32 4
  store i8* %914, i8** %915, align 8
  %916 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 49, i32 5
  %917 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %916, align 8
  %918 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %917, i64 0, i32 760, i32 1
  %919 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %918, align 8
  %920 = icmp eq i8* (i8*, i32, i32, i64)* %919, null
  br i1 %920, label %932, label %921

921:                                              ; preds = %913
  %922 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 49, i32 3
  %923 = load i32, i32* %922, align 8
  %924 = sext i32 %923 to i64
  %925 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 49, i32 2
  %926 = load i32, i32* %925, align 4
  %927 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 49, i32 1
  %928 = load i32, i32* %927, align 8
  %929 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 49, i32 0
  %930 = load i8*, i8** %929, align 8
  %931 = tail call i8* %919(i8* %930, i32 %928, i32 %926, i64 %924) #4
  br label %932

932:                                              ; preds = %913, %921
  %933 = phi i8* [ %931, %921 ], [ null, %913 ]
  %934 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 49, i32 4
  store i8* %933, i8** %934, align 8
  %935 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 50, i32 5
  %936 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %935, align 8
  %937 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %936, i64 0, i32 760, i32 1
  %938 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %937, align 8
  %939 = icmp eq i8* (i8*, i32, i32, i64)* %938, null
  br i1 %939, label %951, label %940

940:                                              ; preds = %932
  %941 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 50, i32 3
  %942 = load i32, i32* %941, align 8
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 50, i32 2
  %945 = load i32, i32* %944, align 4
  %946 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 50, i32 1
  %947 = load i32, i32* %946, align 8
  %948 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 50, i32 0
  %949 = load i8*, i8** %948, align 8
  %950 = tail call i8* %938(i8* %949, i32 %947, i32 %945, i64 %943) #4
  br label %951

951:                                              ; preds = %932, %940
  %952 = phi i8* [ %950, %940 ], [ null, %932 ]
  %953 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 50, i32 4
  store i8* %952, i8** %953, align 8
  %954 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 51, i32 5
  %955 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %954, align 8
  %956 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %955, i64 0, i32 760, i32 1
  %957 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %956, align 8
  %958 = icmp eq i8* (i8*, i32, i32, i64)* %957, null
  br i1 %958, label %970, label %959

959:                                              ; preds = %951
  %960 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 51, i32 3
  %961 = load i32, i32* %960, align 8
  %962 = sext i32 %961 to i64
  %963 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 51, i32 2
  %964 = load i32, i32* %963, align 4
  %965 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 51, i32 1
  %966 = load i32, i32* %965, align 8
  %967 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 51, i32 0
  %968 = load i8*, i8** %967, align 8
  %969 = tail call i8* %957(i8* %968, i32 %966, i32 %964, i64 %962) #4
  br label %970

970:                                              ; preds = %951, %959
  %971 = phi i8* [ %969, %959 ], [ null, %951 ]
  %972 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 51, i32 4
  store i8* %971, i8** %972, align 8
  %973 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 52, i32 5
  %974 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %973, align 8
  %975 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %974, i64 0, i32 760, i32 1
  %976 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %975, align 8
  %977 = icmp eq i8* (i8*, i32, i32, i64)* %976, null
  br i1 %977, label %989, label %978

978:                                              ; preds = %970
  %979 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 52, i32 3
  %980 = load i32, i32* %979, align 8
  %981 = sext i32 %980 to i64
  %982 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 52, i32 2
  %983 = load i32, i32* %982, align 4
  %984 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 52, i32 1
  %985 = load i32, i32* %984, align 8
  %986 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 52, i32 0
  %987 = load i8*, i8** %986, align 8
  %988 = tail call i8* %976(i8* %987, i32 %985, i32 %983, i64 %981) #4
  br label %989

989:                                              ; preds = %970, %978
  %990 = phi i8* [ %988, %978 ], [ null, %970 ]
  %991 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 52, i32 4
  store i8* %990, i8** %991, align 8
  %992 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 53, i32 5
  %993 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %992, align 8
  %994 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %993, i64 0, i32 760, i32 1
  %995 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %994, align 8
  %996 = icmp eq i8* (i8*, i32, i32, i64)* %995, null
  br i1 %996, label %1008, label %997

997:                                              ; preds = %989
  %998 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 53, i32 3
  %999 = load i32, i32* %998, align 8
  %1000 = sext i32 %999 to i64
  %1001 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 53, i32 2
  %1002 = load i32, i32* %1001, align 4
  %1003 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 53, i32 1
  %1004 = load i32, i32* %1003, align 8
  %1005 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 53, i32 0
  %1006 = load i8*, i8** %1005, align 8
  %1007 = tail call i8* %995(i8* %1006, i32 %1004, i32 %1002, i64 %1000) #4
  br label %1008

1008:                                             ; preds = %989, %997
  %1009 = phi i8* [ %1007, %997 ], [ null, %989 ]
  %1010 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 53, i32 4
  store i8* %1009, i8** %1010, align 8
  %1011 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 54, i32 5
  %1012 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1011, align 8
  %1013 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1012, i64 0, i32 760, i32 1
  %1014 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1013, align 8
  %1015 = icmp eq i8* (i8*, i32, i32, i64)* %1014, null
  br i1 %1015, label %1027, label %1016

1016:                                             ; preds = %1008
  %1017 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 54, i32 3
  %1018 = load i32, i32* %1017, align 8
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 54, i32 2
  %1021 = load i32, i32* %1020, align 4
  %1022 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 54, i32 1
  %1023 = load i32, i32* %1022, align 8
  %1024 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 54, i32 0
  %1025 = load i8*, i8** %1024, align 8
  %1026 = tail call i8* %1014(i8* %1025, i32 %1023, i32 %1021, i64 %1019) #4
  br label %1027

1027:                                             ; preds = %1008, %1016
  %1028 = phi i8* [ %1026, %1016 ], [ null, %1008 ]
  %1029 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 54, i32 4
  store i8* %1028, i8** %1029, align 8
  %1030 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 55, i32 5
  %1031 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1030, align 8
  %1032 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1031, i64 0, i32 760, i32 1
  %1033 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1032, align 8
  %1034 = icmp eq i8* (i8*, i32, i32, i64)* %1033, null
  br i1 %1034, label %1046, label %1035

1035:                                             ; preds = %1027
  %1036 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 55, i32 3
  %1037 = load i32, i32* %1036, align 8
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 55, i32 2
  %1040 = load i32, i32* %1039, align 4
  %1041 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 55, i32 1
  %1042 = load i32, i32* %1041, align 8
  %1043 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 55, i32 0
  %1044 = load i8*, i8** %1043, align 8
  %1045 = tail call i8* %1033(i8* %1044, i32 %1042, i32 %1040, i64 %1038) #4
  br label %1046

1046:                                             ; preds = %1027, %1035
  %1047 = phi i8* [ %1045, %1035 ], [ null, %1027 ]
  %1048 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 55, i32 4
  store i8* %1047, i8** %1048, align 8
  %1049 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 5
  %1050 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1049, align 8
  %1051 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1050, i64 0, i32 760, i32 1
  %1052 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1051, align 8
  %1053 = icmp eq i8* (i8*, i32, i32, i64)* %1052, null
  br i1 %1053, label %1065, label %1054

1054:                                             ; preds = %1046
  %1055 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 3
  %1056 = load i32, i32* %1055, align 8
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 2
  %1059 = load i32, i32* %1058, align 4
  %1060 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 1
  %1061 = load i32, i32* %1060, align 8
  %1062 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 0
  %1063 = load i8*, i8** %1062, align 8
  %1064 = tail call i8* %1052(i8* %1063, i32 %1061, i32 %1059, i64 %1057) #4
  br label %1065

1065:                                             ; preds = %1046, %1054
  %1066 = phi i8* [ %1064, %1054 ], [ null, %1046 ]
  %1067 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 56, i32 0, i32 0, i32 4
  store i8* %1066, i8** %1067, align 8
  %1068 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 5
  %1069 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1068, align 8
  %1070 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1069, i64 0, i32 760, i32 1
  %1071 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1070, align 8
  %1072 = icmp eq i8* (i8*, i32, i32, i64)* %1071, null
  br i1 %1072, label %1084, label %1073

1073:                                             ; preds = %1065
  %1074 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 3
  %1075 = load i32, i32* %1074, align 8
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 2
  %1078 = load i32, i32* %1077, align 4
  %1079 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 1
  %1080 = load i32, i32* %1079, align 8
  %1081 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 0
  %1082 = load i8*, i8** %1081, align 8
  %1083 = tail call i8* %1071(i8* %1082, i32 %1080, i32 %1078, i64 %1076) #4
  br label %1084

1084:                                             ; preds = %1065, %1073
  %1085 = phi i8* [ %1083, %1073 ], [ null, %1065 ]
  %1086 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 57, i32 0, i32 0, i32 4
  store i8* %1085, i8** %1086, align 8
  %1087 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 5
  %1088 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1087, align 8
  %1089 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1088, i64 0, i32 760, i32 1
  %1090 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1089, align 8
  %1091 = icmp eq i8* (i8*, i32, i32, i64)* %1090, null
  br i1 %1091, label %1103, label %1092

1092:                                             ; preds = %1084
  %1093 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 3
  %1094 = load i32, i32* %1093, align 8
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 2
  %1097 = load i32, i32* %1096, align 4
  %1098 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %1099 = load i32, i32* %1098, align 8
  %1100 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %1101 = load i8*, i8** %1100, align 8
  %1102 = tail call i8* %1090(i8* %1101, i32 %1099, i32 %1097, i64 %1095) #4
  br label %1103

1103:                                             ; preds = %1084, %1092
  %1104 = phi i8* [ %1102, %1092 ], [ null, %1084 ]
  %1105 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 58, i32 0, i32 0, i32 4
  store i8* %1104, i8** %1105, align 8
  %1106 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 5
  %1107 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1106, align 8
  %1108 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1107, i64 0, i32 760, i32 1
  %1109 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1108, align 8
  %1110 = icmp eq i8* (i8*, i32, i32, i64)* %1109, null
  br i1 %1110, label %1122, label %1111

1111:                                             ; preds = %1103
  %1112 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 3
  %1113 = load i32, i32* %1112, align 8
  %1114 = sext i32 %1113 to i64
  %1115 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 2
  %1116 = load i32, i32* %1115, align 4
  %1117 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 1
  %1118 = load i32, i32* %1117, align 8
  %1119 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %1120 = load i8*, i8** %1119, align 8
  %1121 = tail call i8* %1109(i8* %1120, i32 %1118, i32 %1116, i64 %1114) #4
  br label %1122

1122:                                             ; preds = %1103, %1111
  %1123 = phi i8* [ %1121, %1111 ], [ null, %1103 ]
  %1124 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 59, i32 0, i32 0, i32 4
  store i8* %1123, i8** %1124, align 8
  %1125 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 5
  %1126 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1125, align 8
  %1127 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1126, i64 0, i32 760, i32 1
  %1128 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1127, align 8
  %1129 = icmp eq i8* (i8*, i32, i32, i64)* %1128, null
  br i1 %1129, label %1141, label %1130

1130:                                             ; preds = %1122
  %1131 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 3
  %1132 = load i32, i32* %1131, align 8
  %1133 = sext i32 %1132 to i64
  %1134 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 2
  %1135 = load i32, i32* %1134, align 4
  %1136 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 1
  %1137 = load i32, i32* %1136, align 8
  %1138 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 0
  %1139 = load i8*, i8** %1138, align 8
  %1140 = tail call i8* %1128(i8* %1139, i32 %1137, i32 %1135, i64 %1133) #4
  br label %1141

1141:                                             ; preds = %1122, %1130
  %1142 = phi i8* [ %1140, %1130 ], [ null, %1122 ]
  %1143 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 60, i32 0, i32 0, i32 4
  store i8* %1142, i8** %1143, align 8
  %1144 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 5
  %1145 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1144, align 8
  %1146 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1145, i64 0, i32 760, i32 1
  %1147 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1146, align 8
  %1148 = icmp eq i8* (i8*, i32, i32, i64)* %1147, null
  br i1 %1148, label %1160, label %1149

1149:                                             ; preds = %1141
  %1150 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 3
  %1151 = load i32, i32* %1150, align 8
  %1152 = sext i32 %1151 to i64
  %1153 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 2
  %1154 = load i32, i32* %1153, align 4
  %1155 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 1
  %1156 = load i32, i32* %1155, align 8
  %1157 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 0
  %1158 = load i8*, i8** %1157, align 8
  %1159 = tail call i8* %1147(i8* %1158, i32 %1156, i32 %1154, i64 %1152) #4
  br label %1160

1160:                                             ; preds = %1141, %1149
  %1161 = phi i8* [ %1159, %1149 ], [ null, %1141 ]
  %1162 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 61, i32 0, i32 0, i32 4
  store i8* %1161, i8** %1162, align 8
  %1163 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 5
  %1164 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1163, align 8
  %1165 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1164, i64 0, i32 760, i32 1
  %1166 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1165, align 8
  %1167 = icmp eq i8* (i8*, i32, i32, i64)* %1166, null
  br i1 %1167, label %1179, label %1168

1168:                                             ; preds = %1160
  %1169 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 3
  %1170 = load i32, i32* %1169, align 8
  %1171 = sext i32 %1170 to i64
  %1172 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 2
  %1173 = load i32, i32* %1172, align 4
  %1174 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 1
  %1175 = load i32, i32* %1174, align 8
  %1176 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 0
  %1177 = load i8*, i8** %1176, align 8
  %1178 = tail call i8* %1166(i8* %1177, i32 %1175, i32 %1173, i64 %1171) #4
  br label %1179

1179:                                             ; preds = %1160, %1168
  %1180 = phi i8* [ %1178, %1168 ], [ null, %1160 ]
  %1181 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 62, i32 0, i32 0, i32 4
  store i8* %1180, i8** %1181, align 8
  %1182 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 5
  %1183 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1182, align 8
  %1184 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1183, i64 0, i32 760, i32 1
  %1185 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1184, align 8
  %1186 = icmp eq i8* (i8*, i32, i32, i64)* %1185, null
  br i1 %1186, label %1198, label %1187

1187:                                             ; preds = %1179
  %1188 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 3
  %1189 = load i32, i32* %1188, align 8
  %1190 = sext i32 %1189 to i64
  %1191 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 2
  %1192 = load i32, i32* %1191, align 4
  %1193 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 1
  %1194 = load i32, i32* %1193, align 8
  %1195 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 0
  %1196 = load i8*, i8** %1195, align 8
  %1197 = tail call i8* %1185(i8* %1196, i32 %1194, i32 %1192, i64 %1190) #4
  br label %1198

1198:                                             ; preds = %1179, %1187
  %1199 = phi i8* [ %1197, %1187 ], [ null, %1179 ]
  %1200 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 63, i32 0, i32 0, i32 4
  store i8* %1199, i8** %1200, align 8
  %1201 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 5
  %1202 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1201, align 8
  %1203 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1202, i64 0, i32 760, i32 1
  %1204 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1203, align 8
  %1205 = icmp eq i8* (i8*, i32, i32, i64)* %1204, null
  br i1 %1205, label %1217, label %1206

1206:                                             ; preds = %1198
  %1207 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 3
  %1208 = load i32, i32* %1207, align 8
  %1209 = sext i32 %1208 to i64
  %1210 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 2
  %1211 = load i32, i32* %1210, align 4
  %1212 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 1
  %1213 = load i32, i32* %1212, align 8
  %1214 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 0
  %1215 = load i8*, i8** %1214, align 8
  %1216 = tail call i8* %1204(i8* %1215, i32 %1213, i32 %1211, i64 %1209) #4
  br label %1217

1217:                                             ; preds = %1198, %1206
  %1218 = phi i8* [ %1216, %1206 ], [ null, %1198 ]
  %1219 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 64, i32 0, i32 0, i32 4
  store i8* %1218, i8** %1219, align 8
  %1220 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 5
  %1221 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1220, align 8
  %1222 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1221, i64 0, i32 760, i32 1
  %1223 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1222, align 8
  %1224 = icmp eq i8* (i8*, i32, i32, i64)* %1223, null
  br i1 %1224, label %1236, label %1225

1225:                                             ; preds = %1217
  %1226 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 3
  %1227 = load i32, i32* %1226, align 8
  %1228 = sext i32 %1227 to i64
  %1229 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 2
  %1230 = load i32, i32* %1229, align 4
  %1231 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 1
  %1232 = load i32, i32* %1231, align 8
  %1233 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 0
  %1234 = load i8*, i8** %1233, align 8
  %1235 = tail call i8* %1223(i8* %1234, i32 %1232, i32 %1230, i64 %1228) #4
  br label %1236

1236:                                             ; preds = %1217, %1225
  %1237 = phi i8* [ %1235, %1225 ], [ null, %1217 ]
  %1238 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 65, i32 0, i32 0, i32 4
  store i8* %1237, i8** %1238, align 8
  %1239 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 5
  %1240 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1239, align 8
  %1241 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1240, i64 0, i32 760, i32 1
  %1242 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1241, align 8
  %1243 = icmp eq i8* (i8*, i32, i32, i64)* %1242, null
  br i1 %1243, label %1255, label %1244

1244:                                             ; preds = %1236
  %1245 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 3
  %1246 = load i32, i32* %1245, align 8
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 2
  %1249 = load i32, i32* %1248, align 4
  %1250 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 1
  %1251 = load i32, i32* %1250, align 8
  %1252 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 0
  %1253 = load i8*, i8** %1252, align 8
  %1254 = tail call i8* %1242(i8* %1253, i32 %1251, i32 %1249, i64 %1247) #4
  br label %1255

1255:                                             ; preds = %1236, %1244
  %1256 = phi i8* [ %1254, %1244 ], [ null, %1236 ]
  %1257 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 66, i32 0, i32 0, i32 4
  store i8* %1256, i8** %1257, align 8
  %1258 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 5
  %1259 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1258, align 8
  %1260 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1259, i64 0, i32 760, i32 1
  %1261 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1260, align 8
  %1262 = icmp eq i8* (i8*, i32, i32, i64)* %1261, null
  br i1 %1262, label %1274, label %1263

1263:                                             ; preds = %1255
  %1264 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 3
  %1265 = load i32, i32* %1264, align 8
  %1266 = sext i32 %1265 to i64
  %1267 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 2
  %1268 = load i32, i32* %1267, align 4
  %1269 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 1
  %1270 = load i32, i32* %1269, align 8
  %1271 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 0
  %1272 = load i8*, i8** %1271, align 8
  %1273 = tail call i8* %1261(i8* %1272, i32 %1270, i32 %1268, i64 %1266) #4
  br label %1274

1274:                                             ; preds = %1255, %1263
  %1275 = phi i8* [ %1273, %1263 ], [ null, %1255 ]
  %1276 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 67, i32 0, i32 0, i32 4
  store i8* %1275, i8** %1276, align 8
  %1277 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 68, i32 0, i32 5
  %1278 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1277, align 8
  %1279 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1278, i64 0, i32 760, i32 1
  %1280 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1279, align 8
  %1281 = icmp eq i8* (i8*, i32, i32, i64)* %1280, null
  br i1 %1281, label %1293, label %1282

1282:                                             ; preds = %1274
  %1283 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 68, i32 0, i32 3
  %1284 = load i32, i32* %1283, align 8
  %1285 = sext i32 %1284 to i64
  %1286 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 68, i32 0, i32 2
  %1287 = load i32, i32* %1286, align 4
  %1288 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 68, i32 0, i32 1
  %1289 = load i32, i32* %1288, align 8
  %1290 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 68, i32 0, i32 0
  %1291 = load i8*, i8** %1290, align 8
  %1292 = tail call i8* %1280(i8* %1291, i32 %1289, i32 %1287, i64 %1285) #4
  br label %1293

1293:                                             ; preds = %1274, %1282
  %1294 = phi i8* [ %1292, %1282 ], [ null, %1274 ]
  %1295 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 68, i32 0, i32 4
  store i8* %1294, i8** %1295, align 8
  %1296 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 69, i32 0, i32 5
  %1297 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1296, align 8
  %1298 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1297, i64 0, i32 760, i32 1
  %1299 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1298, align 8
  %1300 = icmp eq i8* (i8*, i32, i32, i64)* %1299, null
  br i1 %1300, label %1312, label %1301

1301:                                             ; preds = %1293
  %1302 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 69, i32 0, i32 3
  %1303 = load i32, i32* %1302, align 8
  %1304 = sext i32 %1303 to i64
  %1305 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 69, i32 0, i32 2
  %1306 = load i32, i32* %1305, align 4
  %1307 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 69, i32 0, i32 1
  %1308 = load i32, i32* %1307, align 8
  %1309 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 69, i32 0, i32 0
  %1310 = load i8*, i8** %1309, align 8
  %1311 = tail call i8* %1299(i8* %1310, i32 %1308, i32 %1306, i64 %1304) #4
  br label %1312

1312:                                             ; preds = %1293, %1301
  %1313 = phi i8* [ %1311, %1301 ], [ null, %1293 ]
  %1314 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 69, i32 0, i32 4
  store i8* %1313, i8** %1314, align 8
  %1315 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 70, i32 0, i32 5
  %1316 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1315, align 8
  %1317 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1316, i64 0, i32 760, i32 1
  %1318 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1317, align 8
  %1319 = icmp eq i8* (i8*, i32, i32, i64)* %1318, null
  br i1 %1319, label %1331, label %1320

1320:                                             ; preds = %1312
  %1321 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 70, i32 0, i32 3
  %1322 = load i32, i32* %1321, align 8
  %1323 = sext i32 %1322 to i64
  %1324 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 70, i32 0, i32 2
  %1325 = load i32, i32* %1324, align 4
  %1326 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 70, i32 0, i32 1
  %1327 = load i32, i32* %1326, align 8
  %1328 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 70, i32 0, i32 0
  %1329 = load i8*, i8** %1328, align 8
  %1330 = tail call i8* %1318(i8* %1329, i32 %1327, i32 %1325, i64 %1323) #4
  br label %1331

1331:                                             ; preds = %1312, %1320
  %1332 = phi i8* [ %1330, %1320 ], [ null, %1312 ]
  %1333 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 70, i32 0, i32 4
  store i8* %1332, i8** %1333, align 8
  %1334 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 71, i32 0, i32 5
  %1335 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1334, align 8
  %1336 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1335, i64 0, i32 760, i32 1
  %1337 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1336, align 8
  %1338 = icmp eq i8* (i8*, i32, i32, i64)* %1337, null
  br i1 %1338, label %1350, label %1339

1339:                                             ; preds = %1331
  %1340 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 71, i32 0, i32 3
  %1341 = load i32, i32* %1340, align 8
  %1342 = sext i32 %1341 to i64
  %1343 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 71, i32 0, i32 2
  %1344 = load i32, i32* %1343, align 4
  %1345 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 71, i32 0, i32 1
  %1346 = load i32, i32* %1345, align 8
  %1347 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 71, i32 0, i32 0
  %1348 = load i8*, i8** %1347, align 8
  %1349 = tail call i8* %1337(i8* %1348, i32 %1346, i32 %1344, i64 %1342) #4
  br label %1350

1350:                                             ; preds = %1331, %1339
  %1351 = phi i8* [ %1349, %1339 ], [ null, %1331 ]
  %1352 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 71, i32 0, i32 4
  store i8* %1351, i8** %1352, align 8
  %1353 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 72, i32 0, i32 5
  %1354 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1353, align 8
  %1355 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1354, i64 0, i32 760, i32 1
  %1356 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1355, align 8
  %1357 = icmp eq i8* (i8*, i32, i32, i64)* %1356, null
  br i1 %1357, label %1369, label %1358

1358:                                             ; preds = %1350
  %1359 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 72, i32 0, i32 3
  %1360 = load i32, i32* %1359, align 8
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 72, i32 0, i32 2
  %1363 = load i32, i32* %1362, align 4
  %1364 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 72, i32 0, i32 1
  %1365 = load i32, i32* %1364, align 8
  %1366 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 72, i32 0, i32 0
  %1367 = load i8*, i8** %1366, align 8
  %1368 = tail call i8* %1356(i8* %1367, i32 %1365, i32 %1363, i64 %1361) #4
  br label %1369

1369:                                             ; preds = %1350, %1358
  %1370 = phi i8* [ %1368, %1358 ], [ null, %1350 ]
  %1371 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 72, i32 0, i32 4
  store i8* %1370, i8** %1371, align 8
  %1372 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 73, i32 0, i32 5
  %1373 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1372, align 8
  %1374 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1373, i64 0, i32 760, i32 1
  %1375 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1374, align 8
  %1376 = icmp eq i8* (i8*, i32, i32, i64)* %1375, null
  br i1 %1376, label %1388, label %1377

1377:                                             ; preds = %1369
  %1378 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 73, i32 0, i32 3
  %1379 = load i32, i32* %1378, align 8
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 73, i32 0, i32 2
  %1382 = load i32, i32* %1381, align 4
  %1383 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 73, i32 0, i32 1
  %1384 = load i32, i32* %1383, align 8
  %1385 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 73, i32 0, i32 0
  %1386 = load i8*, i8** %1385, align 8
  %1387 = tail call i8* %1375(i8* %1386, i32 %1384, i32 %1382, i64 %1380) #4
  br label %1388

1388:                                             ; preds = %1369, %1377
  %1389 = phi i8* [ %1387, %1377 ], [ null, %1369 ]
  %1390 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 73, i32 0, i32 4
  store i8* %1389, i8** %1390, align 8
  %1391 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 74, i32 0, i32 5
  %1392 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1391, align 8
  %1393 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1392, i64 0, i32 760, i32 1
  %1394 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1393, align 8
  %1395 = icmp eq i8* (i8*, i32, i32, i64)* %1394, null
  br i1 %1395, label %1407, label %1396

1396:                                             ; preds = %1388
  %1397 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 74, i32 0, i32 3
  %1398 = load i32, i32* %1397, align 8
  %1399 = sext i32 %1398 to i64
  %1400 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 74, i32 0, i32 2
  %1401 = load i32, i32* %1400, align 4
  %1402 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 74, i32 0, i32 1
  %1403 = load i32, i32* %1402, align 8
  %1404 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 74, i32 0, i32 0
  %1405 = load i8*, i8** %1404, align 8
  %1406 = tail call i8* %1394(i8* %1405, i32 %1403, i32 %1401, i64 %1399) #4
  br label %1407

1407:                                             ; preds = %1388, %1396
  %1408 = phi i8* [ %1406, %1396 ], [ null, %1388 ]
  %1409 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 74, i32 0, i32 4
  store i8* %1408, i8** %1409, align 8
  %1410 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 75, i32 0, i32 5
  %1411 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1410, align 8
  %1412 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1411, i64 0, i32 760, i32 1
  %1413 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1412, align 8
  %1414 = icmp eq i8* (i8*, i32, i32, i64)* %1413, null
  br i1 %1414, label %1426, label %1415

1415:                                             ; preds = %1407
  %1416 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 75, i32 0, i32 3
  %1417 = load i32, i32* %1416, align 8
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 75, i32 0, i32 2
  %1420 = load i32, i32* %1419, align 4
  %1421 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 75, i32 0, i32 1
  %1422 = load i32, i32* %1421, align 8
  %1423 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 75, i32 0, i32 0
  %1424 = load i8*, i8** %1423, align 8
  %1425 = tail call i8* %1413(i8* %1424, i32 %1422, i32 %1420, i64 %1418) #4
  br label %1426

1426:                                             ; preds = %1407, %1415
  %1427 = phi i8* [ %1425, %1415 ], [ null, %1407 ]
  %1428 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 75, i32 0, i32 4
  store i8* %1427, i8** %1428, align 8
  %1429 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 76, i32 0, i32 5
  %1430 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1429, align 8
  %1431 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1430, i64 0, i32 760, i32 1
  %1432 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1431, align 8
  %1433 = icmp eq i8* (i8*, i32, i32, i64)* %1432, null
  br i1 %1433, label %1445, label %1434

1434:                                             ; preds = %1426
  %1435 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 76, i32 0, i32 3
  %1436 = load i32, i32* %1435, align 8
  %1437 = sext i32 %1436 to i64
  %1438 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 76, i32 0, i32 2
  %1439 = load i32, i32* %1438, align 4
  %1440 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 76, i32 0, i32 1
  %1441 = load i32, i32* %1440, align 8
  %1442 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 76, i32 0, i32 0
  %1443 = load i8*, i8** %1442, align 8
  %1444 = tail call i8* %1432(i8* %1443, i32 %1441, i32 %1439, i64 %1437) #4
  br label %1445

1445:                                             ; preds = %1426, %1434
  %1446 = phi i8* [ %1444, %1434 ], [ null, %1426 ]
  %1447 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 76, i32 0, i32 4
  store i8* %1446, i8** %1447, align 8
  %1448 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 77, i32 0, i32 5
  %1449 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1448, align 8
  %1450 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1449, i64 0, i32 760, i32 1
  %1451 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1450, align 8
  %1452 = icmp eq i8* (i8*, i32, i32, i64)* %1451, null
  br i1 %1452, label %1464, label %1453

1453:                                             ; preds = %1445
  %1454 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 77, i32 0, i32 3
  %1455 = load i32, i32* %1454, align 8
  %1456 = sext i32 %1455 to i64
  %1457 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 77, i32 0, i32 2
  %1458 = load i32, i32* %1457, align 4
  %1459 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 77, i32 0, i32 1
  %1460 = load i32, i32* %1459, align 8
  %1461 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 77, i32 0, i32 0
  %1462 = load i8*, i8** %1461, align 8
  %1463 = tail call i8* %1451(i8* %1462, i32 %1460, i32 %1458, i64 %1456) #4
  br label %1464

1464:                                             ; preds = %1445, %1453
  %1465 = phi i8* [ %1463, %1453 ], [ null, %1445 ]
  %1466 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 77, i32 0, i32 4
  store i8* %1465, i8** %1466, align 8
  %1467 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 78, i32 0, i32 5
  %1468 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1467, align 8
  %1469 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1468, i64 0, i32 760, i32 1
  %1470 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1469, align 8
  %1471 = icmp eq i8* (i8*, i32, i32, i64)* %1470, null
  br i1 %1471, label %1483, label %1472

1472:                                             ; preds = %1464
  %1473 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 78, i32 0, i32 3
  %1474 = load i32, i32* %1473, align 8
  %1475 = sext i32 %1474 to i64
  %1476 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 78, i32 0, i32 2
  %1477 = load i32, i32* %1476, align 4
  %1478 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 78, i32 0, i32 1
  %1479 = load i32, i32* %1478, align 8
  %1480 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 78, i32 0, i32 0
  %1481 = load i8*, i8** %1480, align 8
  %1482 = tail call i8* %1470(i8* %1481, i32 %1479, i32 %1477, i64 %1475) #4
  br label %1483

1483:                                             ; preds = %1464, %1472
  %1484 = phi i8* [ %1482, %1472 ], [ null, %1464 ]
  %1485 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 78, i32 0, i32 4
  store i8* %1484, i8** %1485, align 8
  %1486 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 79, i32 0, i32 5
  %1487 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1486, align 8
  %1488 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1487, i64 0, i32 760, i32 1
  %1489 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1488, align 8
  %1490 = icmp eq i8* (i8*, i32, i32, i64)* %1489, null
  br i1 %1490, label %1502, label %1491

1491:                                             ; preds = %1483
  %1492 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 79, i32 0, i32 3
  %1493 = load i32, i32* %1492, align 8
  %1494 = sext i32 %1493 to i64
  %1495 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 79, i32 0, i32 2
  %1496 = load i32, i32* %1495, align 4
  %1497 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 79, i32 0, i32 1
  %1498 = load i32, i32* %1497, align 8
  %1499 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 79, i32 0, i32 0
  %1500 = load i8*, i8** %1499, align 8
  %1501 = tail call i8* %1489(i8* %1500, i32 %1498, i32 %1496, i64 %1494) #4
  br label %1502

1502:                                             ; preds = %1483, %1491
  %1503 = phi i8* [ %1501, %1491 ], [ null, %1483 ]
  %1504 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 79, i32 0, i32 4
  store i8* %1503, i8** %1504, align 8
  %1505 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 80, i32 0, i32 5
  %1506 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1505, align 8
  %1507 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1506, i64 0, i32 760, i32 1
  %1508 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1507, align 8
  %1509 = icmp eq i8* (i8*, i32, i32, i64)* %1508, null
  br i1 %1509, label %1521, label %1510

1510:                                             ; preds = %1502
  %1511 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 80, i32 0, i32 3
  %1512 = load i32, i32* %1511, align 8
  %1513 = sext i32 %1512 to i64
  %1514 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 80, i32 0, i32 2
  %1515 = load i32, i32* %1514, align 4
  %1516 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 80, i32 0, i32 1
  %1517 = load i32, i32* %1516, align 8
  %1518 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 80, i32 0, i32 0
  %1519 = load i8*, i8** %1518, align 8
  %1520 = tail call i8* %1508(i8* %1519, i32 %1517, i32 %1515, i64 %1513) #4
  br label %1521

1521:                                             ; preds = %1502, %1510
  %1522 = phi i8* [ %1520, %1510 ], [ null, %1502 ]
  %1523 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 80, i32 0, i32 4
  store i8* %1522, i8** %1523, align 8
  %1524 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 81, i32 0, i32 5
  %1525 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1524, align 8
  %1526 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1525, i64 0, i32 760, i32 1
  %1527 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1526, align 8
  %1528 = icmp eq i8* (i8*, i32, i32, i64)* %1527, null
  br i1 %1528, label %1540, label %1529

1529:                                             ; preds = %1521
  %1530 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 81, i32 0, i32 3
  %1531 = load i32, i32* %1530, align 8
  %1532 = sext i32 %1531 to i64
  %1533 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 81, i32 0, i32 2
  %1534 = load i32, i32* %1533, align 4
  %1535 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 81, i32 0, i32 1
  %1536 = load i32, i32* %1535, align 8
  %1537 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 81, i32 0, i32 0
  %1538 = load i8*, i8** %1537, align 8
  %1539 = tail call i8* %1527(i8* %1538, i32 %1536, i32 %1534, i64 %1532) #4
  br label %1540

1540:                                             ; preds = %1521, %1529
  %1541 = phi i8* [ %1539, %1529 ], [ null, %1521 ]
  %1542 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 81, i32 0, i32 4
  store i8* %1541, i8** %1542, align 8
  %1543 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 82, i32 0, i32 5
  %1544 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1543, align 8
  %1545 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1544, i64 0, i32 760, i32 1
  %1546 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1545, align 8
  %1547 = icmp eq i8* (i8*, i32, i32, i64)* %1546, null
  br i1 %1547, label %1559, label %1548

1548:                                             ; preds = %1540
  %1549 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 82, i32 0, i32 3
  %1550 = load i32, i32* %1549, align 8
  %1551 = sext i32 %1550 to i64
  %1552 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 82, i32 0, i32 2
  %1553 = load i32, i32* %1552, align 4
  %1554 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 82, i32 0, i32 1
  %1555 = load i32, i32* %1554, align 8
  %1556 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 82, i32 0, i32 0
  %1557 = load i8*, i8** %1556, align 8
  %1558 = tail call i8* %1546(i8* %1557, i32 %1555, i32 %1553, i64 %1551) #4
  br label %1559

1559:                                             ; preds = %1540, %1548
  %1560 = phi i8* [ %1558, %1548 ], [ null, %1540 ]
  %1561 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 82, i32 0, i32 4
  store i8* %1560, i8** %1561, align 8
  %1562 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 83, i32 0, i32 5
  %1563 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1562, align 8
  %1564 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1563, i64 0, i32 760, i32 1
  %1565 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1564, align 8
  %1566 = icmp eq i8* (i8*, i32, i32, i64)* %1565, null
  br i1 %1566, label %1578, label %1567

1567:                                             ; preds = %1559
  %1568 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 83, i32 0, i32 3
  %1569 = load i32, i32* %1568, align 8
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 83, i32 0, i32 2
  %1572 = load i32, i32* %1571, align 4
  %1573 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 83, i32 0, i32 1
  %1574 = load i32, i32* %1573, align 8
  %1575 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 83, i32 0, i32 0
  %1576 = load i8*, i8** %1575, align 8
  %1577 = tail call i8* %1565(i8* %1576, i32 %1574, i32 %1572, i64 %1570) #4
  br label %1578

1578:                                             ; preds = %1559, %1567
  %1579 = phi i8* [ %1577, %1567 ], [ null, %1559 ]
  %1580 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 83, i32 0, i32 4
  store i8* %1579, i8** %1580, align 8
  %1581 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 84, i32 0, i32 5
  %1582 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1581, align 8
  %1583 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1582, i64 0, i32 760, i32 1
  %1584 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1583, align 8
  %1585 = icmp eq i8* (i8*, i32, i32, i64)* %1584, null
  br i1 %1585, label %1597, label %1586

1586:                                             ; preds = %1578
  %1587 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 84, i32 0, i32 3
  %1588 = load i32, i32* %1587, align 8
  %1589 = sext i32 %1588 to i64
  %1590 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 84, i32 0, i32 2
  %1591 = load i32, i32* %1590, align 4
  %1592 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 84, i32 0, i32 1
  %1593 = load i32, i32* %1592, align 8
  %1594 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 84, i32 0, i32 0
  %1595 = load i8*, i8** %1594, align 8
  %1596 = tail call i8* %1584(i8* %1595, i32 %1593, i32 %1591, i64 %1589) #4
  br label %1597

1597:                                             ; preds = %1578, %1586
  %1598 = phi i8* [ %1596, %1586 ], [ null, %1578 ]
  %1599 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 84, i32 0, i32 4
  store i8* %1598, i8** %1599, align 8
  %1600 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 85, i32 0, i32 5
  %1601 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1600, align 8
  %1602 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1601, i64 0, i32 760, i32 1
  %1603 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1602, align 8
  %1604 = icmp eq i8* (i8*, i32, i32, i64)* %1603, null
  br i1 %1604, label %1616, label %1605

1605:                                             ; preds = %1597
  %1606 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 85, i32 0, i32 3
  %1607 = load i32, i32* %1606, align 8
  %1608 = sext i32 %1607 to i64
  %1609 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 85, i32 0, i32 2
  %1610 = load i32, i32* %1609, align 4
  %1611 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 85, i32 0, i32 1
  %1612 = load i32, i32* %1611, align 8
  %1613 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 85, i32 0, i32 0
  %1614 = load i8*, i8** %1613, align 8
  %1615 = tail call i8* %1603(i8* %1614, i32 %1612, i32 %1610, i64 %1608) #4
  br label %1616

1616:                                             ; preds = %1597, %1605
  %1617 = phi i8* [ %1615, %1605 ], [ null, %1597 ]
  %1618 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 85, i32 0, i32 4
  store i8* %1617, i8** %1618, align 8
  %1619 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 86, i32 0, i32 5
  %1620 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1619, align 8
  %1621 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1620, i64 0, i32 760, i32 1
  %1622 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1621, align 8
  %1623 = icmp eq i8* (i8*, i32, i32, i64)* %1622, null
  br i1 %1623, label %1635, label %1624

1624:                                             ; preds = %1616
  %1625 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 86, i32 0, i32 3
  %1626 = load i32, i32* %1625, align 8
  %1627 = sext i32 %1626 to i64
  %1628 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 86, i32 0, i32 2
  %1629 = load i32, i32* %1628, align 4
  %1630 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 86, i32 0, i32 1
  %1631 = load i32, i32* %1630, align 8
  %1632 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 86, i32 0, i32 0
  %1633 = load i8*, i8** %1632, align 8
  %1634 = tail call i8* %1622(i8* %1633, i32 %1631, i32 %1629, i64 %1627) #4
  br label %1635

1635:                                             ; preds = %1616, %1624
  %1636 = phi i8* [ %1634, %1624 ], [ null, %1616 ]
  %1637 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 86, i32 0, i32 4
  store i8* %1636, i8** %1637, align 8
  %1638 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 87, i32 0, i32 5
  %1639 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1638, align 8
  %1640 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1639, i64 0, i32 760, i32 1
  %1641 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1640, align 8
  %1642 = icmp eq i8* (i8*, i32, i32, i64)* %1641, null
  br i1 %1642, label %1654, label %1643

1643:                                             ; preds = %1635
  %1644 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 87, i32 0, i32 3
  %1645 = load i32, i32* %1644, align 8
  %1646 = sext i32 %1645 to i64
  %1647 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 87, i32 0, i32 2
  %1648 = load i32, i32* %1647, align 4
  %1649 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 87, i32 0, i32 1
  %1650 = load i32, i32* %1649, align 8
  %1651 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 87, i32 0, i32 0
  %1652 = load i8*, i8** %1651, align 8
  %1653 = tail call i8* %1641(i8* %1652, i32 %1650, i32 %1648, i64 %1646) #4
  br label %1654

1654:                                             ; preds = %1635, %1643
  %1655 = phi i8* [ %1653, %1643 ], [ null, %1635 ]
  %1656 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 87, i32 0, i32 4
  store i8* %1655, i8** %1656, align 8
  %1657 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 88, i32 0, i32 5
  %1658 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1657, align 8
  %1659 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1658, i64 0, i32 760, i32 1
  %1660 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1659, align 8
  %1661 = icmp eq i8* (i8*, i32, i32, i64)* %1660, null
  br i1 %1661, label %1673, label %1662

1662:                                             ; preds = %1654
  %1663 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 88, i32 0, i32 3
  %1664 = load i32, i32* %1663, align 8
  %1665 = sext i32 %1664 to i64
  %1666 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 88, i32 0, i32 2
  %1667 = load i32, i32* %1666, align 4
  %1668 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 88, i32 0, i32 1
  %1669 = load i32, i32* %1668, align 8
  %1670 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 88, i32 0, i32 0
  %1671 = load i8*, i8** %1670, align 8
  %1672 = tail call i8* %1660(i8* %1671, i32 %1669, i32 %1667, i64 %1665) #4
  br label %1673

1673:                                             ; preds = %1654, %1662
  %1674 = phi i8* [ %1672, %1662 ], [ null, %1654 ]
  %1675 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 88, i32 0, i32 4
  store i8* %1674, i8** %1675, align 8
  %1676 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 89, i32 0, i32 5
  %1677 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1676, align 8
  %1678 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1677, i64 0, i32 760, i32 1
  %1679 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1678, align 8
  %1680 = icmp eq i8* (i8*, i32, i32, i64)* %1679, null
  br i1 %1680, label %1692, label %1681

1681:                                             ; preds = %1673
  %1682 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 89, i32 0, i32 3
  %1683 = load i32, i32* %1682, align 8
  %1684 = sext i32 %1683 to i64
  %1685 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 89, i32 0, i32 2
  %1686 = load i32, i32* %1685, align 4
  %1687 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 89, i32 0, i32 1
  %1688 = load i32, i32* %1687, align 8
  %1689 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 89, i32 0, i32 0
  %1690 = load i8*, i8** %1689, align 8
  %1691 = tail call i8* %1679(i8* %1690, i32 %1688, i32 %1686, i64 %1684) #4
  br label %1692

1692:                                             ; preds = %1673, %1681
  %1693 = phi i8* [ %1691, %1681 ], [ null, %1673 ]
  %1694 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 89, i32 0, i32 4
  store i8* %1693, i8** %1694, align 8
  %1695 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 90, i32 0, i32 5
  %1696 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1695, align 8
  %1697 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1696, i64 0, i32 760, i32 1
  %1698 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1697, align 8
  %1699 = icmp eq i8* (i8*, i32, i32, i64)* %1698, null
  br i1 %1699, label %1711, label %1700

1700:                                             ; preds = %1692
  %1701 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 90, i32 0, i32 3
  %1702 = load i32, i32* %1701, align 8
  %1703 = sext i32 %1702 to i64
  %1704 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 90, i32 0, i32 2
  %1705 = load i32, i32* %1704, align 4
  %1706 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 90, i32 0, i32 1
  %1707 = load i32, i32* %1706, align 8
  %1708 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 90, i32 0, i32 0
  %1709 = load i8*, i8** %1708, align 8
  %1710 = tail call i8* %1698(i8* %1709, i32 %1707, i32 %1705, i64 %1703) #4
  br label %1711

1711:                                             ; preds = %1692, %1700
  %1712 = phi i8* [ %1710, %1700 ], [ null, %1692 ]
  %1713 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 90, i32 0, i32 4
  store i8* %1712, i8** %1713, align 8
  %1714 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 91, i32 0, i32 5
  %1715 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1714, align 8
  %1716 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1715, i64 0, i32 760, i32 1
  %1717 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1716, align 8
  %1718 = icmp eq i8* (i8*, i32, i32, i64)* %1717, null
  br i1 %1718, label %1730, label %1719

1719:                                             ; preds = %1711
  %1720 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 91, i32 0, i32 3
  %1721 = load i32, i32* %1720, align 8
  %1722 = sext i32 %1721 to i64
  %1723 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 91, i32 0, i32 2
  %1724 = load i32, i32* %1723, align 4
  %1725 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 91, i32 0, i32 1
  %1726 = load i32, i32* %1725, align 8
  %1727 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 91, i32 0, i32 0
  %1728 = load i8*, i8** %1727, align 8
  %1729 = tail call i8* %1717(i8* %1728, i32 %1726, i32 %1724, i64 %1722) #4
  br label %1730

1730:                                             ; preds = %1711, %1719
  %1731 = phi i8* [ %1729, %1719 ], [ null, %1711 ]
  %1732 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 91, i32 0, i32 4
  store i8* %1731, i8** %1732, align 8
  %1733 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 92, i32 0, i32 5
  %1734 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1733, align 8
  %1735 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1734, i64 0, i32 760, i32 1
  %1736 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1735, align 8
  %1737 = icmp eq i8* (i8*, i32, i32, i64)* %1736, null
  br i1 %1737, label %1749, label %1738

1738:                                             ; preds = %1730
  %1739 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 92, i32 0, i32 3
  %1740 = load i32, i32* %1739, align 8
  %1741 = sext i32 %1740 to i64
  %1742 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 92, i32 0, i32 2
  %1743 = load i32, i32* %1742, align 4
  %1744 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 92, i32 0, i32 1
  %1745 = load i32, i32* %1744, align 8
  %1746 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 92, i32 0, i32 0
  %1747 = load i8*, i8** %1746, align 8
  %1748 = tail call i8* %1736(i8* %1747, i32 %1745, i32 %1743, i64 %1741) #4
  br label %1749

1749:                                             ; preds = %1730, %1738
  %1750 = phi i8* [ %1748, %1738 ], [ null, %1730 ]
  %1751 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 92, i32 0, i32 4
  store i8* %1750, i8** %1751, align 8
  %1752 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 93, i32 0, i32 5
  %1753 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1752, align 8
  %1754 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1753, i64 0, i32 760, i32 1
  %1755 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1754, align 8
  %1756 = icmp eq i8* (i8*, i32, i32, i64)* %1755, null
  br i1 %1756, label %1768, label %1757

1757:                                             ; preds = %1749
  %1758 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 93, i32 0, i32 3
  %1759 = load i32, i32* %1758, align 8
  %1760 = sext i32 %1759 to i64
  %1761 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 93, i32 0, i32 2
  %1762 = load i32, i32* %1761, align 4
  %1763 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 93, i32 0, i32 1
  %1764 = load i32, i32* %1763, align 8
  %1765 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 93, i32 0, i32 0
  %1766 = load i8*, i8** %1765, align 8
  %1767 = tail call i8* %1755(i8* %1766, i32 %1764, i32 %1762, i64 %1760) #4
  br label %1768

1768:                                             ; preds = %1749, %1757
  %1769 = phi i8* [ %1767, %1757 ], [ null, %1749 ]
  %1770 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 93, i32 0, i32 4
  store i8* %1769, i8** %1770, align 8
  %1771 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 94, i32 0, i32 5
  %1772 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1771, align 8
  %1773 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1772, i64 0, i32 760, i32 1
  %1774 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1773, align 8
  %1775 = icmp eq i8* (i8*, i32, i32, i64)* %1774, null
  br i1 %1775, label %1787, label %1776

1776:                                             ; preds = %1768
  %1777 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 94, i32 0, i32 3
  %1778 = load i32, i32* %1777, align 8
  %1779 = sext i32 %1778 to i64
  %1780 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 94, i32 0, i32 2
  %1781 = load i32, i32* %1780, align 4
  %1782 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 94, i32 0, i32 1
  %1783 = load i32, i32* %1782, align 8
  %1784 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 94, i32 0, i32 0
  %1785 = load i8*, i8** %1784, align 8
  %1786 = tail call i8* %1774(i8* %1785, i32 %1783, i32 %1781, i64 %1779) #4
  br label %1787

1787:                                             ; preds = %1768, %1776
  %1788 = phi i8* [ %1786, %1776 ], [ null, %1768 ]
  %1789 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 94, i32 0, i32 4
  store i8* %1788, i8** %1789, align 8
  %1790 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 95, i32 0, i32 5
  %1791 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1790, align 8
  %1792 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1791, i64 0, i32 760, i32 1
  %1793 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1792, align 8
  %1794 = icmp eq i8* (i8*, i32, i32, i64)* %1793, null
  br i1 %1794, label %1806, label %1795

1795:                                             ; preds = %1787
  %1796 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 95, i32 0, i32 3
  %1797 = load i32, i32* %1796, align 8
  %1798 = sext i32 %1797 to i64
  %1799 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 95, i32 0, i32 2
  %1800 = load i32, i32* %1799, align 4
  %1801 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 95, i32 0, i32 1
  %1802 = load i32, i32* %1801, align 8
  %1803 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 95, i32 0, i32 0
  %1804 = load i8*, i8** %1803, align 8
  %1805 = tail call i8* %1793(i8* %1804, i32 %1802, i32 %1800, i64 %1798) #4
  br label %1806

1806:                                             ; preds = %1787, %1795
  %1807 = phi i8* [ %1805, %1795 ], [ null, %1787 ]
  %1808 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 95, i32 0, i32 4
  store i8* %1807, i8** %1808, align 8
  %1809 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 96, i32 0, i32 5
  %1810 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1809, align 8
  %1811 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1810, i64 0, i32 760, i32 1
  %1812 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1811, align 8
  %1813 = icmp eq i8* (i8*, i32, i32, i64)* %1812, null
  br i1 %1813, label %1825, label %1814

1814:                                             ; preds = %1806
  %1815 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 96, i32 0, i32 3
  %1816 = load i32, i32* %1815, align 8
  %1817 = sext i32 %1816 to i64
  %1818 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 96, i32 0, i32 2
  %1819 = load i32, i32* %1818, align 4
  %1820 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 96, i32 0, i32 1
  %1821 = load i32, i32* %1820, align 8
  %1822 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 96, i32 0, i32 0
  %1823 = load i8*, i8** %1822, align 8
  %1824 = tail call i8* %1812(i8* %1823, i32 %1821, i32 %1819, i64 %1817) #4
  br label %1825

1825:                                             ; preds = %1806, %1814
  %1826 = phi i8* [ %1824, %1814 ], [ null, %1806 ]
  %1827 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 96, i32 0, i32 4
  store i8* %1826, i8** %1827, align 8
  %1828 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 97, i32 0, i32 5
  %1829 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1828, align 8
  %1830 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1829, i64 0, i32 760, i32 1
  %1831 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1830, align 8
  %1832 = icmp eq i8* (i8*, i32, i32, i64)* %1831, null
  br i1 %1832, label %1844, label %1833

1833:                                             ; preds = %1825
  %1834 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 97, i32 0, i32 3
  %1835 = load i32, i32* %1834, align 8
  %1836 = sext i32 %1835 to i64
  %1837 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 97, i32 0, i32 2
  %1838 = load i32, i32* %1837, align 4
  %1839 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 97, i32 0, i32 1
  %1840 = load i32, i32* %1839, align 8
  %1841 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 97, i32 0, i32 0
  %1842 = load i8*, i8** %1841, align 8
  %1843 = tail call i8* %1831(i8* %1842, i32 %1840, i32 %1838, i64 %1836) #4
  br label %1844

1844:                                             ; preds = %1825, %1833
  %1845 = phi i8* [ %1843, %1833 ], [ null, %1825 ]
  %1846 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 97, i32 0, i32 4
  store i8* %1845, i8** %1846, align 8
  %1847 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 98, i32 0, i32 5
  %1848 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1847, align 8
  %1849 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1848, i64 0, i32 760, i32 1
  %1850 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1849, align 8
  %1851 = icmp eq i8* (i8*, i32, i32, i64)* %1850, null
  br i1 %1851, label %1863, label %1852

1852:                                             ; preds = %1844
  %1853 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 98, i32 0, i32 3
  %1854 = load i32, i32* %1853, align 8
  %1855 = sext i32 %1854 to i64
  %1856 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 98, i32 0, i32 2
  %1857 = load i32, i32* %1856, align 4
  %1858 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 98, i32 0, i32 1
  %1859 = load i32, i32* %1858, align 8
  %1860 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 98, i32 0, i32 0
  %1861 = load i8*, i8** %1860, align 8
  %1862 = tail call i8* %1850(i8* %1861, i32 %1859, i32 %1857, i64 %1855) #4
  br label %1863

1863:                                             ; preds = %1844, %1852
  %1864 = phi i8* [ %1862, %1852 ], [ null, %1844 ]
  %1865 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 98, i32 0, i32 4
  store i8* %1864, i8** %1865, align 8
  %1866 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 99, i32 0, i32 5
  %1867 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1866, align 8
  %1868 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1867, i64 0, i32 760, i32 1
  %1869 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1868, align 8
  %1870 = icmp eq i8* (i8*, i32, i32, i64)* %1869, null
  br i1 %1870, label %1882, label %1871

1871:                                             ; preds = %1863
  %1872 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 99, i32 0, i32 3
  %1873 = load i32, i32* %1872, align 8
  %1874 = sext i32 %1873 to i64
  %1875 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 99, i32 0, i32 2
  %1876 = load i32, i32* %1875, align 4
  %1877 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 99, i32 0, i32 1
  %1878 = load i32, i32* %1877, align 8
  %1879 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 99, i32 0, i32 0
  %1880 = load i8*, i8** %1879, align 8
  %1881 = tail call i8* %1869(i8* %1880, i32 %1878, i32 %1876, i64 %1874) #4
  br label %1882

1882:                                             ; preds = %1863, %1871
  %1883 = phi i8* [ %1881, %1871 ], [ null, %1863 ]
  %1884 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 99, i32 0, i32 4
  store i8* %1883, i8** %1884, align 8
  %1885 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 100, i32 0, i32 5
  %1886 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1885, align 8
  %1887 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1886, i64 0, i32 760, i32 1
  %1888 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1887, align 8
  %1889 = icmp eq i8* (i8*, i32, i32, i64)* %1888, null
  br i1 %1889, label %1901, label %1890

1890:                                             ; preds = %1882
  %1891 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 100, i32 0, i32 3
  %1892 = load i32, i32* %1891, align 8
  %1893 = sext i32 %1892 to i64
  %1894 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 100, i32 0, i32 2
  %1895 = load i32, i32* %1894, align 4
  %1896 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 100, i32 0, i32 1
  %1897 = load i32, i32* %1896, align 8
  %1898 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 100, i32 0, i32 0
  %1899 = load i8*, i8** %1898, align 8
  %1900 = tail call i8* %1888(i8* %1899, i32 %1897, i32 %1895, i64 %1893) #4
  br label %1901

1901:                                             ; preds = %1882, %1890
  %1902 = phi i8* [ %1900, %1890 ], [ null, %1882 ]
  %1903 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 100, i32 0, i32 4
  store i8* %1902, i8** %1903, align 8
  %1904 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 101, i32 0, i32 5
  %1905 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1904, align 8
  %1906 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1905, i64 0, i32 760, i32 1
  %1907 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1906, align 8
  %1908 = icmp eq i8* (i8*, i32, i32, i64)* %1907, null
  br i1 %1908, label %1920, label %1909

1909:                                             ; preds = %1901
  %1910 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 101, i32 0, i32 3
  %1911 = load i32, i32* %1910, align 8
  %1912 = sext i32 %1911 to i64
  %1913 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 101, i32 0, i32 2
  %1914 = load i32, i32* %1913, align 4
  %1915 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 101, i32 0, i32 1
  %1916 = load i32, i32* %1915, align 8
  %1917 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 101, i32 0, i32 0
  %1918 = load i8*, i8** %1917, align 8
  %1919 = tail call i8* %1907(i8* %1918, i32 %1916, i32 %1914, i64 %1912) #4
  br label %1920

1920:                                             ; preds = %1901, %1909
  %1921 = phi i8* [ %1919, %1909 ], [ null, %1901 ]
  %1922 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 101, i32 0, i32 4
  store i8* %1921, i8** %1922, align 8
  %1923 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 102, i32 0, i32 5
  %1924 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1923, align 8
  %1925 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1924, i64 0, i32 760, i32 1
  %1926 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1925, align 8
  %1927 = icmp eq i8* (i8*, i32, i32, i64)* %1926, null
  br i1 %1927, label %1939, label %1928

1928:                                             ; preds = %1920
  %1929 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 102, i32 0, i32 3
  %1930 = load i32, i32* %1929, align 8
  %1931 = sext i32 %1930 to i64
  %1932 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 102, i32 0, i32 2
  %1933 = load i32, i32* %1932, align 4
  %1934 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 102, i32 0, i32 1
  %1935 = load i32, i32* %1934, align 8
  %1936 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 102, i32 0, i32 0
  %1937 = load i8*, i8** %1936, align 8
  %1938 = tail call i8* %1926(i8* %1937, i32 %1935, i32 %1933, i64 %1931) #4
  br label %1939

1939:                                             ; preds = %1920, %1928
  %1940 = phi i8* [ %1938, %1928 ], [ null, %1920 ]
  %1941 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 102, i32 0, i32 4
  store i8* %1940, i8** %1941, align 8
  %1942 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 103, i32 0, i32 5
  %1943 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1942, align 8
  %1944 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1943, i64 0, i32 760, i32 1
  %1945 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1944, align 8
  %1946 = icmp eq i8* (i8*, i32, i32, i64)* %1945, null
  br i1 %1946, label %1958, label %1947

1947:                                             ; preds = %1939
  %1948 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 103, i32 0, i32 3
  %1949 = load i32, i32* %1948, align 8
  %1950 = sext i32 %1949 to i64
  %1951 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 103, i32 0, i32 2
  %1952 = load i32, i32* %1951, align 4
  %1953 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 103, i32 0, i32 1
  %1954 = load i32, i32* %1953, align 8
  %1955 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 103, i32 0, i32 0
  %1956 = load i8*, i8** %1955, align 8
  %1957 = tail call i8* %1945(i8* %1956, i32 %1954, i32 %1952, i64 %1950) #4
  br label %1958

1958:                                             ; preds = %1939, %1947
  %1959 = phi i8* [ %1957, %1947 ], [ null, %1939 ]
  %1960 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 103, i32 0, i32 4
  store i8* %1959, i8** %1960, align 8
  %1961 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 104, i32 0, i32 5
  %1962 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1961, align 8
  %1963 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1962, i64 0, i32 760, i32 1
  %1964 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1963, align 8
  %1965 = icmp eq i8* (i8*, i32, i32, i64)* %1964, null
  br i1 %1965, label %1977, label %1966

1966:                                             ; preds = %1958
  %1967 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 104, i32 0, i32 3
  %1968 = load i32, i32* %1967, align 8
  %1969 = sext i32 %1968 to i64
  %1970 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 104, i32 0, i32 2
  %1971 = load i32, i32* %1970, align 4
  %1972 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 104, i32 0, i32 1
  %1973 = load i32, i32* %1972, align 8
  %1974 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 104, i32 0, i32 0
  %1975 = load i8*, i8** %1974, align 8
  %1976 = tail call i8* %1964(i8* %1975, i32 %1973, i32 %1971, i64 %1969) #4
  br label %1977

1977:                                             ; preds = %1958, %1966
  %1978 = phi i8* [ %1976, %1966 ], [ null, %1958 ]
  %1979 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 104, i32 0, i32 4
  store i8* %1978, i8** %1979, align 8
  %1980 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 105, i32 0, i32 5
  %1981 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1980, align 8
  %1982 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1981, i64 0, i32 760, i32 1
  %1983 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %1982, align 8
  %1984 = icmp eq i8* (i8*, i32, i32, i64)* %1983, null
  br i1 %1984, label %1996, label %1985

1985:                                             ; preds = %1977
  %1986 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 105, i32 0, i32 3
  %1987 = load i32, i32* %1986, align 8
  %1988 = sext i32 %1987 to i64
  %1989 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 105, i32 0, i32 2
  %1990 = load i32, i32* %1989, align 4
  %1991 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 105, i32 0, i32 1
  %1992 = load i32, i32* %1991, align 8
  %1993 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 105, i32 0, i32 0
  %1994 = load i8*, i8** %1993, align 8
  %1995 = tail call i8* %1983(i8* %1994, i32 %1992, i32 %1990, i64 %1988) #4
  br label %1996

1996:                                             ; preds = %1977, %1985
  %1997 = phi i8* [ %1995, %1985 ], [ null, %1977 ]
  %1998 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 105, i32 0, i32 4
  store i8* %1997, i8** %1998, align 8
  %1999 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 106, i32 0, i32 5
  %2000 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1999, align 8
  %2001 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2000, i64 0, i32 760, i32 1
  %2002 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2001, align 8
  %2003 = icmp eq i8* (i8*, i32, i32, i64)* %2002, null
  br i1 %2003, label %2015, label %2004

2004:                                             ; preds = %1996
  %2005 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 106, i32 0, i32 3
  %2006 = load i32, i32* %2005, align 8
  %2007 = sext i32 %2006 to i64
  %2008 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 106, i32 0, i32 2
  %2009 = load i32, i32* %2008, align 4
  %2010 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 106, i32 0, i32 1
  %2011 = load i32, i32* %2010, align 8
  %2012 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 106, i32 0, i32 0
  %2013 = load i8*, i8** %2012, align 8
  %2014 = tail call i8* %2002(i8* %2013, i32 %2011, i32 %2009, i64 %2007) #4
  br label %2015

2015:                                             ; preds = %1996, %2004
  %2016 = phi i8* [ %2014, %2004 ], [ null, %1996 ]
  %2017 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 106, i32 0, i32 4
  store i8* %2016, i8** %2017, align 8
  %2018 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 107, i32 0, i32 5
  %2019 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2018, align 8
  %2020 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2019, i64 0, i32 760, i32 1
  %2021 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2020, align 8
  %2022 = icmp eq i8* (i8*, i32, i32, i64)* %2021, null
  br i1 %2022, label %2034, label %2023

2023:                                             ; preds = %2015
  %2024 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 107, i32 0, i32 3
  %2025 = load i32, i32* %2024, align 8
  %2026 = sext i32 %2025 to i64
  %2027 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 107, i32 0, i32 2
  %2028 = load i32, i32* %2027, align 4
  %2029 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 107, i32 0, i32 1
  %2030 = load i32, i32* %2029, align 8
  %2031 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 107, i32 0, i32 0
  %2032 = load i8*, i8** %2031, align 8
  %2033 = tail call i8* %2021(i8* %2032, i32 %2030, i32 %2028, i64 %2026) #4
  br label %2034

2034:                                             ; preds = %2015, %2023
  %2035 = phi i8* [ %2033, %2023 ], [ null, %2015 ]
  %2036 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 107, i32 0, i32 4
  store i8* %2035, i8** %2036, align 8
  %2037 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 108, i32 0, i32 5
  %2038 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2037, align 8
  %2039 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2038, i64 0, i32 760, i32 1
  %2040 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2039, align 8
  %2041 = icmp eq i8* (i8*, i32, i32, i64)* %2040, null
  br i1 %2041, label %2053, label %2042

2042:                                             ; preds = %2034
  %2043 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 108, i32 0, i32 3
  %2044 = load i32, i32* %2043, align 8
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 108, i32 0, i32 2
  %2047 = load i32, i32* %2046, align 4
  %2048 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 108, i32 0, i32 1
  %2049 = load i32, i32* %2048, align 8
  %2050 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 108, i32 0, i32 0
  %2051 = load i8*, i8** %2050, align 8
  %2052 = tail call i8* %2040(i8* %2051, i32 %2049, i32 %2047, i64 %2045) #4
  br label %2053

2053:                                             ; preds = %2034, %2042
  %2054 = phi i8* [ %2052, %2042 ], [ null, %2034 ]
  %2055 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 108, i32 0, i32 4
  store i8* %2054, i8** %2055, align 8
  %2056 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 109, i32 0, i32 5
  %2057 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2056, align 8
  %2058 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2057, i64 0, i32 760, i32 1
  %2059 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2058, align 8
  %2060 = icmp eq i8* (i8*, i32, i32, i64)* %2059, null
  br i1 %2060, label %2072, label %2061

2061:                                             ; preds = %2053
  %2062 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 109, i32 0, i32 3
  %2063 = load i32, i32* %2062, align 8
  %2064 = sext i32 %2063 to i64
  %2065 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 109, i32 0, i32 2
  %2066 = load i32, i32* %2065, align 4
  %2067 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 109, i32 0, i32 1
  %2068 = load i32, i32* %2067, align 8
  %2069 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 109, i32 0, i32 0
  %2070 = load i8*, i8** %2069, align 8
  %2071 = tail call i8* %2059(i8* %2070, i32 %2068, i32 %2066, i64 %2064) #4
  br label %2072

2072:                                             ; preds = %2053, %2061
  %2073 = phi i8* [ %2071, %2061 ], [ null, %2053 ]
  %2074 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 109, i32 0, i32 4
  store i8* %2073, i8** %2074, align 8
  %2075 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 110, i32 0, i32 5
  %2076 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2075, align 8
  %2077 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2076, i64 0, i32 760, i32 1
  %2078 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2077, align 8
  %2079 = icmp eq i8* (i8*, i32, i32, i64)* %2078, null
  br i1 %2079, label %2091, label %2080

2080:                                             ; preds = %2072
  %2081 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 110, i32 0, i32 3
  %2082 = load i32, i32* %2081, align 8
  %2083 = sext i32 %2082 to i64
  %2084 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 110, i32 0, i32 2
  %2085 = load i32, i32* %2084, align 4
  %2086 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 110, i32 0, i32 1
  %2087 = load i32, i32* %2086, align 8
  %2088 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 110, i32 0, i32 0
  %2089 = load i8*, i8** %2088, align 8
  %2090 = tail call i8* %2078(i8* %2089, i32 %2087, i32 %2085, i64 %2083) #4
  br label %2091

2091:                                             ; preds = %2072, %2080
  %2092 = phi i8* [ %2090, %2080 ], [ null, %2072 ]
  %2093 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 110, i32 0, i32 4
  store i8* %2092, i8** %2093, align 8
  %2094 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 111, i32 0, i32 5
  %2095 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2094, align 8
  %2096 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2095, i64 0, i32 760, i32 1
  %2097 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2096, align 8
  %2098 = icmp eq i8* (i8*, i32, i32, i64)* %2097, null
  br i1 %2098, label %2110, label %2099

2099:                                             ; preds = %2091
  %2100 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 111, i32 0, i32 3
  %2101 = load i32, i32* %2100, align 8
  %2102 = sext i32 %2101 to i64
  %2103 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 111, i32 0, i32 2
  %2104 = load i32, i32* %2103, align 4
  %2105 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 111, i32 0, i32 1
  %2106 = load i32, i32* %2105, align 8
  %2107 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 111, i32 0, i32 0
  %2108 = load i8*, i8** %2107, align 8
  %2109 = tail call i8* %2097(i8* %2108, i32 %2106, i32 %2104, i64 %2102) #4
  br label %2110

2110:                                             ; preds = %2091, %2099
  %2111 = phi i8* [ %2109, %2099 ], [ null, %2091 ]
  %2112 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 111, i32 0, i32 4
  store i8* %2111, i8** %2112, align 8
  %2113 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 112, i32 0, i32 5
  %2114 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2113, align 8
  %2115 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2114, i64 0, i32 760, i32 1
  %2116 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2115, align 8
  %2117 = icmp eq i8* (i8*, i32, i32, i64)* %2116, null
  br i1 %2117, label %2129, label %2118

2118:                                             ; preds = %2110
  %2119 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 112, i32 0, i32 3
  %2120 = load i32, i32* %2119, align 8
  %2121 = sext i32 %2120 to i64
  %2122 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 112, i32 0, i32 2
  %2123 = load i32, i32* %2122, align 4
  %2124 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 112, i32 0, i32 1
  %2125 = load i32, i32* %2124, align 8
  %2126 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 112, i32 0, i32 0
  %2127 = load i8*, i8** %2126, align 8
  %2128 = tail call i8* %2116(i8* %2127, i32 %2125, i32 %2123, i64 %2121) #4
  br label %2129

2129:                                             ; preds = %2110, %2118
  %2130 = phi i8* [ %2128, %2118 ], [ null, %2110 ]
  %2131 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 112, i32 0, i32 4
  store i8* %2130, i8** %2131, align 8
  %2132 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 113, i32 0, i32 5
  %2133 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2132, align 8
  %2134 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2133, i64 0, i32 760, i32 1
  %2135 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2134, align 8
  %2136 = icmp eq i8* (i8*, i32, i32, i64)* %2135, null
  br i1 %2136, label %2148, label %2137

2137:                                             ; preds = %2129
  %2138 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 113, i32 0, i32 3
  %2139 = load i32, i32* %2138, align 8
  %2140 = sext i32 %2139 to i64
  %2141 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 113, i32 0, i32 2
  %2142 = load i32, i32* %2141, align 4
  %2143 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 113, i32 0, i32 1
  %2144 = load i32, i32* %2143, align 8
  %2145 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 113, i32 0, i32 0
  %2146 = load i8*, i8** %2145, align 8
  %2147 = tail call i8* %2135(i8* %2146, i32 %2144, i32 %2142, i64 %2140) #4
  br label %2148

2148:                                             ; preds = %2129, %2137
  %2149 = phi i8* [ %2147, %2137 ], [ null, %2129 ]
  %2150 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 113, i32 0, i32 4
  store i8* %2149, i8** %2150, align 8
  %2151 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 114, i32 0, i32 5
  %2152 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2151, align 8
  %2153 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2152, i64 0, i32 760, i32 1
  %2154 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2153, align 8
  %2155 = icmp eq i8* (i8*, i32, i32, i64)* %2154, null
  br i1 %2155, label %2167, label %2156

2156:                                             ; preds = %2148
  %2157 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 114, i32 0, i32 3
  %2158 = load i32, i32* %2157, align 8
  %2159 = sext i32 %2158 to i64
  %2160 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 114, i32 0, i32 2
  %2161 = load i32, i32* %2160, align 4
  %2162 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 114, i32 0, i32 1
  %2163 = load i32, i32* %2162, align 8
  %2164 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 114, i32 0, i32 0
  %2165 = load i8*, i8** %2164, align 8
  %2166 = tail call i8* %2154(i8* %2165, i32 %2163, i32 %2161, i64 %2159) #4
  br label %2167

2167:                                             ; preds = %2148, %2156
  %2168 = phi i8* [ %2166, %2156 ], [ null, %2148 ]
  %2169 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 114, i32 0, i32 4
  store i8* %2168, i8** %2169, align 8
  %2170 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 115, i32 0, i32 5
  %2171 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2170, align 8
  %2172 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2171, i64 0, i32 760, i32 1
  %2173 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2172, align 8
  %2174 = icmp eq i8* (i8*, i32, i32, i64)* %2173, null
  br i1 %2174, label %2186, label %2175

2175:                                             ; preds = %2167
  %2176 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 115, i32 0, i32 3
  %2177 = load i32, i32* %2176, align 8
  %2178 = sext i32 %2177 to i64
  %2179 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 115, i32 0, i32 2
  %2180 = load i32, i32* %2179, align 4
  %2181 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 115, i32 0, i32 1
  %2182 = load i32, i32* %2181, align 8
  %2183 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 115, i32 0, i32 0
  %2184 = load i8*, i8** %2183, align 8
  %2185 = tail call i8* %2173(i8* %2184, i32 %2182, i32 %2180, i64 %2178) #4
  br label %2186

2186:                                             ; preds = %2167, %2175
  %2187 = phi i8* [ %2185, %2175 ], [ null, %2167 ]
  %2188 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 115, i32 0, i32 4
  store i8* %2187, i8** %2188, align 8
  %2189 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 116, i32 0, i32 5
  %2190 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2189, align 8
  %2191 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2190, i64 0, i32 760, i32 1
  %2192 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2191, align 8
  %2193 = icmp eq i8* (i8*, i32, i32, i64)* %2192, null
  br i1 %2193, label %2205, label %2194

2194:                                             ; preds = %2186
  %2195 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 116, i32 0, i32 3
  %2196 = load i32, i32* %2195, align 8
  %2197 = sext i32 %2196 to i64
  %2198 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 116, i32 0, i32 2
  %2199 = load i32, i32* %2198, align 4
  %2200 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 116, i32 0, i32 1
  %2201 = load i32, i32* %2200, align 8
  %2202 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 116, i32 0, i32 0
  %2203 = load i8*, i8** %2202, align 8
  %2204 = tail call i8* %2192(i8* %2203, i32 %2201, i32 %2199, i64 %2197) #4
  br label %2205

2205:                                             ; preds = %2186, %2194
  %2206 = phi i8* [ %2204, %2194 ], [ null, %2186 ]
  %2207 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 116, i32 0, i32 4
  store i8* %2206, i8** %2207, align 8
  %2208 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 117, i32 0, i32 5
  %2209 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2208, align 8
  %2210 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2209, i64 0, i32 760, i32 1
  %2211 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2210, align 8
  %2212 = icmp eq i8* (i8*, i32, i32, i64)* %2211, null
  br i1 %2212, label %2224, label %2213

2213:                                             ; preds = %2205
  %2214 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 117, i32 0, i32 3
  %2215 = load i32, i32* %2214, align 8
  %2216 = sext i32 %2215 to i64
  %2217 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 117, i32 0, i32 2
  %2218 = load i32, i32* %2217, align 4
  %2219 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 117, i32 0, i32 1
  %2220 = load i32, i32* %2219, align 8
  %2221 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 117, i32 0, i32 0
  %2222 = load i8*, i8** %2221, align 8
  %2223 = tail call i8* %2211(i8* %2222, i32 %2220, i32 %2218, i64 %2216) #4
  br label %2224

2224:                                             ; preds = %2205, %2213
  %2225 = phi i8* [ %2223, %2213 ], [ null, %2205 ]
  %2226 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 117, i32 0, i32 4
  store i8* %2225, i8** %2226, align 8
  %2227 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 118, i32 0, i32 5
  %2228 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2227, align 8
  %2229 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2228, i64 0, i32 760, i32 1
  %2230 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2229, align 8
  %2231 = icmp eq i8* (i8*, i32, i32, i64)* %2230, null
  br i1 %2231, label %2243, label %2232

2232:                                             ; preds = %2224
  %2233 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 118, i32 0, i32 3
  %2234 = load i32, i32* %2233, align 8
  %2235 = sext i32 %2234 to i64
  %2236 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 118, i32 0, i32 2
  %2237 = load i32, i32* %2236, align 4
  %2238 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 118, i32 0, i32 1
  %2239 = load i32, i32* %2238, align 8
  %2240 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 118, i32 0, i32 0
  %2241 = load i8*, i8** %2240, align 8
  %2242 = tail call i8* %2230(i8* %2241, i32 %2239, i32 %2237, i64 %2235) #4
  br label %2243

2243:                                             ; preds = %2224, %2232
  %2244 = phi i8* [ %2242, %2232 ], [ null, %2224 ]
  %2245 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 118, i32 0, i32 4
  store i8* %2244, i8** %2245, align 8
  %2246 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 119, i32 0, i32 5
  %2247 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2246, align 8
  %2248 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2247, i64 0, i32 760, i32 1
  %2249 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2248, align 8
  %2250 = icmp eq i8* (i8*, i32, i32, i64)* %2249, null
  br i1 %2250, label %2262, label %2251

2251:                                             ; preds = %2243
  %2252 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 119, i32 0, i32 3
  %2253 = load i32, i32* %2252, align 8
  %2254 = sext i32 %2253 to i64
  %2255 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 119, i32 0, i32 2
  %2256 = load i32, i32* %2255, align 4
  %2257 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 119, i32 0, i32 1
  %2258 = load i32, i32* %2257, align 8
  %2259 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 119, i32 0, i32 0
  %2260 = load i8*, i8** %2259, align 8
  %2261 = tail call i8* %2249(i8* %2260, i32 %2258, i32 %2256, i64 %2254) #4
  br label %2262

2262:                                             ; preds = %2243, %2251
  %2263 = phi i8* [ %2261, %2251 ], [ null, %2243 ]
  %2264 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 119, i32 0, i32 4
  store i8* %2263, i8** %2264, align 8
  %2265 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 5
  %2266 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2265, align 8
  %2267 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2266, i64 0, i32 760, i32 1
  %2268 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2267, align 8
  %2269 = icmp eq i8* (i8*, i32, i32, i64)* %2268, null
  br i1 %2269, label %2281, label %2270

2270:                                             ; preds = %2262
  %2271 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 3
  %2272 = load i32, i32* %2271, align 8
  %2273 = sext i32 %2272 to i64
  %2274 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 2
  %2275 = load i32, i32* %2274, align 4
  %2276 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 1
  %2277 = load i32, i32* %2276, align 8
  %2278 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 0
  %2279 = load i8*, i8** %2278, align 8
  %2280 = tail call i8* %2268(i8* %2279, i32 %2277, i32 %2275, i64 %2273) #4
  br label %2281

2281:                                             ; preds = %2262, %2270
  %2282 = phi i8* [ %2280, %2270 ], [ null, %2262 ]
  %2283 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 120, i32 0, i32 4
  store i8* %2282, i8** %2283, align 8
  %2284 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 5
  %2285 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2284, align 8
  %2286 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2285, i64 0, i32 760, i32 1
  %2287 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2286, align 8
  %2288 = icmp eq i8* (i8*, i32, i32, i64)* %2287, null
  br i1 %2288, label %2300, label %2289

2289:                                             ; preds = %2281
  %2290 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 3
  %2291 = load i32, i32* %2290, align 8
  %2292 = sext i32 %2291 to i64
  %2293 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 2
  %2294 = load i32, i32* %2293, align 4
  %2295 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 1
  %2296 = load i32, i32* %2295, align 8
  %2297 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 0
  %2298 = load i8*, i8** %2297, align 8
  %2299 = tail call i8* %2287(i8* %2298, i32 %2296, i32 %2294, i64 %2292) #4
  br label %2300

2300:                                             ; preds = %2281, %2289
  %2301 = phi i8* [ %2299, %2289 ], [ null, %2281 ]
  %2302 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 121, i32 4
  store i8* %2301, i8** %2302, align 8
  %2303 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 5
  %2304 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2303, align 8
  %2305 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2304, i64 0, i32 760, i32 1
  %2306 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2305, align 8
  %2307 = icmp eq i8* (i8*, i32, i32, i64)* %2306, null
  br i1 %2307, label %2319, label %2308

2308:                                             ; preds = %2300
  %2309 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 3
  %2310 = load i32, i32* %2309, align 8
  %2311 = sext i32 %2310 to i64
  %2312 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 2
  %2313 = load i32, i32* %2312, align 4
  %2314 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 1
  %2315 = load i32, i32* %2314, align 8
  %2316 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 0
  %2317 = load i8*, i8** %2316, align 8
  %2318 = tail call i8* %2306(i8* %2317, i32 %2315, i32 %2313, i64 %2311) #4
  br label %2319

2319:                                             ; preds = %2300, %2308
  %2320 = phi i8* [ %2318, %2308 ], [ null, %2300 ]
  %2321 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 122, i32 4
  store i8* %2320, i8** %2321, align 8
  %2322 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 5
  %2323 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2322, align 8
  %2324 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2323, i64 0, i32 760, i32 1
  %2325 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2324, align 8
  %2326 = icmp eq i8* (i8*, i32, i32, i64)* %2325, null
  br i1 %2326, label %2338, label %2327

2327:                                             ; preds = %2319
  %2328 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 3
  %2329 = load i32, i32* %2328, align 8
  %2330 = sext i32 %2329 to i64
  %2331 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 2
  %2332 = load i32, i32* %2331, align 4
  %2333 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 1
  %2334 = load i32, i32* %2333, align 8
  %2335 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 0
  %2336 = load i8*, i8** %2335, align 8
  %2337 = tail call i8* %2325(i8* %2336, i32 %2334, i32 %2332, i64 %2330) #4
  br label %2338

2338:                                             ; preds = %2319, %2327
  %2339 = phi i8* [ %2337, %2327 ], [ null, %2319 ]
  %2340 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 123, i32 4
  store i8* %2339, i8** %2340, align 8
  %2341 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 5
  %2342 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2341, align 8
  %2343 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2342, i64 0, i32 760, i32 1
  %2344 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2343, align 8
  %2345 = icmp eq i8* (i8*, i32, i32, i64)* %2344, null
  br i1 %2345, label %2357, label %2346

2346:                                             ; preds = %2338
  %2347 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 3
  %2348 = load i32, i32* %2347, align 8
  %2349 = sext i32 %2348 to i64
  %2350 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 2
  %2351 = load i32, i32* %2350, align 4
  %2352 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 1
  %2353 = load i32, i32* %2352, align 8
  %2354 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 0
  %2355 = load i8*, i8** %2354, align 8
  %2356 = tail call i8* %2344(i8* %2355, i32 %2353, i32 %2351, i64 %2349) #4
  br label %2357

2357:                                             ; preds = %2338, %2346
  %2358 = phi i8* [ %2356, %2346 ], [ null, %2338 ]
  %2359 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 124, i32 4
  store i8* %2358, i8** %2359, align 8
  %2360 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 5
  %2361 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2360, align 8
  %2362 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2361, i64 0, i32 760, i32 1
  %2363 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2362, align 8
  %2364 = icmp eq i8* (i8*, i32, i32, i64)* %2363, null
  br i1 %2364, label %2376, label %2365

2365:                                             ; preds = %2357
  %2366 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 3
  %2367 = load i32, i32* %2366, align 8
  %2368 = sext i32 %2367 to i64
  %2369 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 2
  %2370 = load i32, i32* %2369, align 4
  %2371 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 1
  %2372 = load i32, i32* %2371, align 8
  %2373 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 0
  %2374 = load i8*, i8** %2373, align 8
  %2375 = tail call i8* %2363(i8* %2374, i32 %2372, i32 %2370, i64 %2368) #4
  br label %2376

2376:                                             ; preds = %2357, %2365
  %2377 = phi i8* [ %2375, %2365 ], [ null, %2357 ]
  %2378 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 125, i32 4
  store i8* %2377, i8** %2378, align 8
  %2379 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 5
  %2380 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2379, align 8
  %2381 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2380, i64 0, i32 760, i32 1
  %2382 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2381, align 8
  %2383 = icmp eq i8* (i8*, i32, i32, i64)* %2382, null
  br i1 %2383, label %2395, label %2384

2384:                                             ; preds = %2376
  %2385 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 3
  %2386 = load i32, i32* %2385, align 8
  %2387 = sext i32 %2386 to i64
  %2388 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 2
  %2389 = load i32, i32* %2388, align 4
  %2390 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 1
  %2391 = load i32, i32* %2390, align 8
  %2392 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 0
  %2393 = load i8*, i8** %2392, align 8
  %2394 = tail call i8* %2382(i8* %2393, i32 %2391, i32 %2389, i64 %2387) #4
  br label %2395

2395:                                             ; preds = %2376, %2384
  %2396 = phi i8* [ %2394, %2384 ], [ null, %2376 ]
  %2397 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 126, i32 4
  store i8* %2396, i8** %2397, align 8
  %2398 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 5
  %2399 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2398, align 8
  %2400 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2399, i64 0, i32 760, i32 1
  %2401 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2400, align 8
  %2402 = icmp eq i8* (i8*, i32, i32, i64)* %2401, null
  br i1 %2402, label %2414, label %2403

2403:                                             ; preds = %2395
  %2404 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 3
  %2405 = load i32, i32* %2404, align 8
  %2406 = sext i32 %2405 to i64
  %2407 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 2
  %2408 = load i32, i32* %2407, align 4
  %2409 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 1
  %2410 = load i32, i32* %2409, align 8
  %2411 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 0
  %2412 = load i8*, i8** %2411, align 8
  %2413 = tail call i8* %2401(i8* %2412, i32 %2410, i32 %2408, i64 %2406) #4
  br label %2414

2414:                                             ; preds = %2395, %2403
  %2415 = phi i8* [ %2413, %2403 ], [ null, %2395 ]
  %2416 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 127, i32 4
  store i8* %2415, i8** %2416, align 8
  %2417 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 5
  %2418 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2417, align 8
  %2419 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2418, i64 0, i32 760, i32 1
  %2420 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2419, align 8
  %2421 = icmp eq i8* (i8*, i32, i32, i64)* %2420, null
  br i1 %2421, label %2433, label %2422

2422:                                             ; preds = %2414
  %2423 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 3
  %2424 = load i32, i32* %2423, align 8
  %2425 = sext i32 %2424 to i64
  %2426 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 2
  %2427 = load i32, i32* %2426, align 4
  %2428 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 1
  %2429 = load i32, i32* %2428, align 8
  %2430 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 0
  %2431 = load i8*, i8** %2430, align 8
  %2432 = tail call i8* %2420(i8* %2431, i32 %2429, i32 %2427, i64 %2425) #4
  br label %2433

2433:                                             ; preds = %2414, %2422
  %2434 = phi i8* [ %2432, %2422 ], [ null, %2414 ]
  %2435 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 128, i32 4
  store i8* %2434, i8** %2435, align 8
  %2436 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 5
  %2437 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2436, align 8
  %2438 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2437, i64 0, i32 760, i32 1
  %2439 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2438, align 8
  %2440 = icmp eq i8* (i8*, i32, i32, i64)* %2439, null
  br i1 %2440, label %2452, label %2441

2441:                                             ; preds = %2433
  %2442 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 3
  %2443 = load i32, i32* %2442, align 8
  %2444 = sext i32 %2443 to i64
  %2445 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 2
  %2446 = load i32, i32* %2445, align 4
  %2447 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 1
  %2448 = load i32, i32* %2447, align 8
  %2449 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 0
  %2450 = load i8*, i8** %2449, align 8
  %2451 = tail call i8* %2439(i8* %2450, i32 %2448, i32 %2446, i64 %2444) #4
  br label %2452

2452:                                             ; preds = %2433, %2441
  %2453 = phi i8* [ %2451, %2441 ], [ null, %2433 ]
  %2454 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 129, i32 4
  store i8* %2453, i8** %2454, align 8
  %2455 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 5
  %2456 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %2455, align 8
  %2457 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %2456, i64 0, i32 760, i32 1
  %2458 = load i8* (i8*, i32, i32, i64)*, i8* (i8*, i32, i32, i64)** %2457, align 8
  %2459 = icmp eq i8* (i8*, i32, i32, i64)* %2458, null
  br i1 %2459, label %2471, label %2460

2460:                                             ; preds = %2452
  %2461 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 3
  %2462 = load i32, i32* %2461, align 8
  %2463 = sext i32 %2462 to i64
  %2464 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 2
  %2465 = load i32, i32* %2464, align 4
  %2466 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 1
  %2467 = load i32, i32* %2466, align 8
  %2468 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 0
  %2469 = load i8*, i8** %2468, align 8
  %2470 = tail call i8* %2458(i8* %2469, i32 %2467, i32 %2465, i64 %2463) #4
  br label %2471

2471:                                             ; preds = %2452, %2460
  %2472 = phi i8* [ %2470, %2460 ], [ null, %2452 ]
  %2473 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %0, i64 0, i32 130, i32 4
  store i8* %2472, i8** %2473, align 8
  ret void
}

declare i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6Logger26DefaultEventLoggerSentinelEPKci(i8*, i32) #1 comdat align 2 {
  ret void
}

declare void @_ZN2v88internal6Logger10TimerEventENS1_8StartEndEPKc(%"class.v8::internal::Logger"*, i32, i8*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
