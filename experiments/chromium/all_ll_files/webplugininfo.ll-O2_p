; ModuleID = '../../content/public/common/webplugininfo.cc'
source_filename = "../../content/public/common/webplugininfo.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::WebPluginMimeType" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string.6", %"class.std::__1::vector.15" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"*, %"class.std::__1::__compressed_pair.17" }
%"struct.content::WebPluginMimeType::Param" = type { %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.content::WebPluginMimeType::Param"* }
%"struct.content::WebPluginInfo" = type <{ %"class.std::__1::basic_string.6", %"class.base::FilePath", %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6", %"class.std::__1::vector.22", i32, i32, i32, [4 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.content::WebPluginMimeType"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.10 }
%struct.anon.10 = type { %"struct.std::__1::__padding.11", i8 }
%"struct.std::__1::__padding.11" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::Version" = type { %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { i32*, i32*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i32* }
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZN7content17WebPluginMimeType5ParamC2ERKS1_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN7content17WebPluginMimeTypeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__116__copy_constexprIPN7content17WebPluginMimeTypeES3_EET0_T_S5_S4_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIN7content17WebPluginMimeType5ParamENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c".\00", align 1

@_ZN7content17WebPluginMimeTypeC1Ev = hidden unnamed_addr alias void (%"struct.content::WebPluginMimeType"*), void (%"struct.content::WebPluginMimeType"*)* @_ZN7content17WebPluginMimeTypeC2Ev
@_ZN7content17WebPluginMimeTypeC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_ = hidden unnamed_addr alias void (%"struct.content::WebPluginMimeType"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"struct.content::WebPluginMimeType"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN7content17WebPluginMimeTypeC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_
@_ZN7content17WebPluginMimeTypeC1ERKS0_ = hidden unnamed_addr alias void (%"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"*), void (%"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"*)* @_ZN7content17WebPluginMimeTypeC2ERKS0_
@_ZN7content17WebPluginMimeTypeD1Ev = hidden unnamed_addr alias void (%"struct.content::WebPluginMimeType"*), void (%"struct.content::WebPluginMimeType"*)* @_ZN7content17WebPluginMimeTypeD2Ev
@_ZN7content13WebPluginInfoC1Ev = hidden unnamed_addr alias void (%"struct.content::WebPluginInfo"*), void (%"struct.content::WebPluginInfo"*)* @_ZN7content13WebPluginInfoC2Ev
@_ZN7content13WebPluginInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"*), void (%"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"*)* @_ZN7content13WebPluginInfoC2ERKS0_
@_ZN7content13WebPluginInfoD1Ev = hidden unnamed_addr alias void (%"struct.content::WebPluginInfo"*), void (%"struct.content::WebPluginInfo"*)* @_ZN7content13WebPluginInfoD2Ev
@_ZN7content13WebPluginInfoC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8FilePathES9_S9_ = hidden unnamed_addr alias void (%"struct.content::WebPluginInfo"*, %"class.std::__1::basic_string.6"*, %"class.base::FilePath"*, %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"*), void (%"struct.content::WebPluginInfo"*, %"class.std::__1::basic_string.6"*, %"class.base::FilePath"*, %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"*)* @_ZN7content13WebPluginInfoC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8FilePathES9_S9_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17WebPluginMimeTypeC2Ev(%"struct.content::WebPluginMimeType"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.content::WebPluginMimeType"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 96, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17WebPluginMimeTypeC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%"struct.content::WebPluginMimeType"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = bitcast %"struct.content::WebPluginMimeType"* %0 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #9
  br label %18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %13, i8* %15, i64 %17) #9
  br label %18

18:                                               ; preds = %9, %12
  %19 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 1
  %20 = bitcast %"class.std::__1::vector"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #9
  %21 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %24 to i64
  %33 = select i1 %25, i64 %31, i64 %32
  tail call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.6"* sret %21, i8* %29, i64 %33) #9
  %34 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 3
  %35 = bitcast %"class.std::__1::vector.15"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #9
  %36 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 1, i32 0, i32 1
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8
  %38 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %40 = icmp eq %"class.std::__1::basic_string"* %37, %39
  br i1 %40, label %58, label %41

41:                                               ; preds = %18
  %42 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #9
  br label %54

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %37, i8* %51, i64 %53) #9
  br label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %56 = ptrtoint %"class.std::__1::basic_string"* %55 to i64
  %57 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  store i64 %56, i64* %57, align 8
  br label %59

58:                                               ; preds = %18
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %19, %"class.std::__1::basic_string"* dereferenceable(24) %2) #9
  br label %59

59:                                               ; preds = %54, %58
  ret void
}

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.6"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17WebPluginMimeTypeC2ERKS0_(%"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"* nocapture readonly dereferenceable(96)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::WebPluginMimeType"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.content::WebPluginMimeType"* %0 to i8*
  %9 = bitcast %"struct.content::WebPluginMimeType"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #9
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #9
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %1, i64 0, i32 1
  %19 = bitcast %"class.std::__1::vector"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #9
  %20 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %1, i64 0, i32 1, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = sdiv exact i64 %25, 24
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %69, label %28

28:                                               ; preds = %16
  %29 = icmp ugt i64 %26, 768614336404564650
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #10
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #11
  %34 = bitcast i8* %33 to %"class.std::__1::basic_string"*
  %35 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 1, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"** %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast %"class.std::__1::vector"* %17 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %26
  %39 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %43 = bitcast %"class.std::__1::basic_string"** %35 to i64*
  %44 = ptrtoint i8* %33 to i64
  %45 = icmp eq %"class.std::__1::basic_string"* %41, %42
  br i1 %45, label %67, label %46

46:                                               ; preds = %32, %61
  %47 = phi %"class.std::__1::basic_string"* [ %63, %61 ], [ %34, %32 ]
  %48 = phi %"class.std::__1::basic_string"* [ %62, %61 ], [ %41, %32 ]
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #9
  br label %61

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %47, i8* %58, i64 %60) #9
  br label %61

61:                                               ; preds = %56, %53
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 1
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 1
  %64 = icmp eq %"class.std::__1::basic_string"* %62, %42
  br i1 %64, label %65, label %46

65:                                               ; preds = %61
  %66 = ptrtoint %"class.std::__1::basic_string"* %63 to i64
  br label %67

67:                                               ; preds = %65, %32
  %68 = phi i64 [ %44, %32 ], [ %66, %65 ]
  store i64 %68, i64* %43, align 8
  br label %69

69:                                               ; preds = %16, %67
  %70 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 2
  %71 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %1, i64 0, i32 2
  %72 = bitcast %"class.std::__1::basic_string.6"* %71 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %69
  %77 = bitcast %"class.std::__1::basic_string.6"* %70 to i8*
  %78 = bitcast %"class.std::__1::basic_string.6"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #9
  br label %254

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i16*, i16** %80, align 8
  %82 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = icmp ult i64 %83, 11
  br i1 %84, label %85, label %90

85:                                               ; preds = %79
  %86 = bitcast %"class.std::__1::basic_string.6"* %70 to i16*
  %87 = trunc i64 %83 to i8
  %88 = bitcast %"class.std::__1::basic_string.6"* %70 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %88, i64 0, i32 1, i32 1
  store i8 %87, i8* %89, align 1
  br label %107

90:                                               ; preds = %79
  %91 = icmp ugt i64 %83, 9223372036854775791
  br i1 %91, label %92, label %94

92:                                               ; preds = %90
  %93 = bitcast %"class.std::__1::basic_string.6"* %70 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %93) #10
  unreachable

94:                                               ; preds = %90
  %95 = add nuw nsw i64 %83, 8
  %96 = and i64 %95, -8
  %97 = icmp slt i64 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %94
  tail call void @abort() #10
  unreachable

99:                                               ; preds = %94
  %100 = shl i64 %96, 1
  %101 = tail call i8* @_Znwm(i64 %100) #11
  %102 = bitcast i8* %101 to i16*
  %103 = bitcast %"class.std::__1::basic_string.6"* %70 to i8**
  store i8* %101, i8** %103, align 8
  %104 = or i64 %96, -9223372036854775808
  %105 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %83, i64* %106, align 8
  br label %107

107:                                              ; preds = %99, %85
  %108 = phi i16* [ %86, %85 ], [ %102, %99 ]
  %109 = add nuw nsw i64 %83, 1
  %110 = add i64 %83, 1
  %111 = icmp ult i64 %110, 16
  br i1 %111, label %201, label %112

112:                                              ; preds = %107
  %113 = add i64 %83, 1
  %114 = getelementptr i16, i16* %108, i64 %113
  %115 = getelementptr i16, i16* %81, i64 %113
  %116 = icmp ult i16* %108, %115
  %117 = icmp ult i16* %81, %114
  %118 = and i1 %116, %117
  br i1 %118, label %201, label %119

119:                                              ; preds = %112
  %120 = and i64 %110, -16
  %121 = sub i64 %109, %120
  %122 = getelementptr i16, i16* %81, i64 %120
  %123 = getelementptr i16, i16* %108, i64 %120
  %124 = add i64 %120, -16
  %125 = lshr exact i64 %124, 4
  %126 = add nuw nsw i64 %125, 1
  %127 = and i64 %126, 3
  %128 = icmp ult i64 %124, 48
  br i1 %128, label %180, label %129

129:                                              ; preds = %119
  %130 = sub nsw i64 %126, %127
  br label %131

131:                                              ; preds = %131, %129
  %132 = phi i64 [ 0, %129 ], [ %177, %131 ]
  %133 = phi i64 [ %130, %129 ], [ %178, %131 ]
  %134 = getelementptr i16, i16* %81, i64 %132
  %135 = getelementptr i16, i16* %108, i64 %132
  %136 = bitcast i16* %134 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !2
  %138 = getelementptr i16, i16* %134, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !2
  %141 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %141, align 2, !alias.scope !5, !noalias !2
  %142 = getelementptr i16, i16* %135, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %143, align 2, !alias.scope !5, !noalias !2
  %144 = or i64 %132, 16
  %145 = getelementptr i16, i16* %81, i64 %144
  %146 = getelementptr i16, i16* %108, i64 %144
  %147 = bitcast i16* %145 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !2
  %149 = getelementptr i16, i16* %145, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !2
  %152 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %152, align 2, !alias.scope !5, !noalias !2
  %153 = getelementptr i16, i16* %146, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %154, align 2, !alias.scope !5, !noalias !2
  %155 = or i64 %132, 32
  %156 = getelementptr i16, i16* %81, i64 %155
  %157 = getelementptr i16, i16* %108, i64 %155
  %158 = bitcast i16* %156 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2, !alias.scope !2
  %160 = getelementptr i16, i16* %156, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !2
  %163 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %163, align 2, !alias.scope !5, !noalias !2
  %164 = getelementptr i16, i16* %157, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %165, align 2, !alias.scope !5, !noalias !2
  %166 = or i64 %132, 48
  %167 = getelementptr i16, i16* %81, i64 %166
  %168 = getelementptr i16, i16* %108, i64 %166
  %169 = bitcast i16* %167 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !2
  %171 = getelementptr i16, i16* %167, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !2
  %174 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %174, align 2, !alias.scope !5, !noalias !2
  %175 = getelementptr i16, i16* %168, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %176, align 2, !alias.scope !5, !noalias !2
  %177 = add i64 %132, 64
  %178 = add i64 %133, -4
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %131, !llvm.loop !7

180:                                              ; preds = %131, %119
  %181 = phi i64 [ 0, %119 ], [ %177, %131 ]
  %182 = icmp eq i64 %127, 0
  br i1 %182, label %199, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %196, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %197, %183 ], [ %127, %180 ]
  %186 = getelementptr i16, i16* %81, i64 %184
  %187 = getelementptr i16, i16* %108, i64 %184
  %188 = bitcast i16* %186 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2, !alias.scope !2
  %190 = getelementptr i16, i16* %186, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !2
  %193 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %193, align 2, !alias.scope !5, !noalias !2
  %194 = getelementptr i16, i16* %187, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %195, align 2, !alias.scope !5, !noalias !2
  %196 = add i64 %184, 16
  %197 = add i64 %185, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %183, !llvm.loop !9

199:                                              ; preds = %183, %180
  %200 = icmp eq i64 %110, %120
  br i1 %200, label %254, label %201

201:                                              ; preds = %199, %112, %107
  %202 = phi i64 [ %109, %112 ], [ %109, %107 ], [ %121, %199 ]
  %203 = phi i16* [ %81, %112 ], [ %81, %107 ], [ %122, %199 ]
  %204 = phi i16* [ %108, %112 ], [ %108, %107 ], [ %123, %199 ]
  %205 = add i64 %202, -1
  %206 = and i64 %202, 7
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %219, label %208

208:                                              ; preds = %201, %208
  %209 = phi i64 [ %214, %208 ], [ %202, %201 ]
  %210 = phi i16* [ %216, %208 ], [ %203, %201 ]
  %211 = phi i16* [ %215, %208 ], [ %204, %201 ]
  %212 = phi i64 [ %217, %208 ], [ %206, %201 ]
  %213 = load i16, i16* %210, align 2
  store i16 %213, i16* %211, align 2
  %214 = add i64 %209, -1
  %215 = getelementptr inbounds i16, i16* %211, i64 1
  %216 = getelementptr inbounds i16, i16* %210, i64 1
  %217 = add i64 %212, -1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %208, !llvm.loop !11

219:                                              ; preds = %208, %201
  %220 = phi i64 [ %202, %201 ], [ %214, %208 ]
  %221 = phi i16* [ %203, %201 ], [ %216, %208 ]
  %222 = phi i16* [ %204, %201 ], [ %215, %208 ]
  %223 = icmp ult i64 %205, 7
  br i1 %223, label %254, label %224

224:                                              ; preds = %219, %224
  %225 = phi i64 [ %250, %224 ], [ %220, %219 ]
  %226 = phi i16* [ %252, %224 ], [ %221, %219 ]
  %227 = phi i16* [ %251, %224 ], [ %222, %219 ]
  %228 = load i16, i16* %226, align 2
  store i16 %228, i16* %227, align 2
  %229 = getelementptr inbounds i16, i16* %227, i64 1
  %230 = getelementptr inbounds i16, i16* %226, i64 1
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = getelementptr inbounds i16, i16* %227, i64 2
  %233 = getelementptr inbounds i16, i16* %226, i64 2
  %234 = load i16, i16* %233, align 2
  store i16 %234, i16* %232, align 2
  %235 = getelementptr inbounds i16, i16* %227, i64 3
  %236 = getelementptr inbounds i16, i16* %226, i64 3
  %237 = load i16, i16* %236, align 2
  store i16 %237, i16* %235, align 2
  %238 = getelementptr inbounds i16, i16* %227, i64 4
  %239 = getelementptr inbounds i16, i16* %226, i64 4
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = getelementptr inbounds i16, i16* %227, i64 5
  %242 = getelementptr inbounds i16, i16* %226, i64 5
  %243 = load i16, i16* %242, align 2
  store i16 %243, i16* %241, align 2
  %244 = getelementptr inbounds i16, i16* %227, i64 6
  %245 = getelementptr inbounds i16, i16* %226, i64 6
  %246 = load i16, i16* %245, align 2
  store i16 %246, i16* %244, align 2
  %247 = getelementptr inbounds i16, i16* %227, i64 7
  %248 = getelementptr inbounds i16, i16* %226, i64 7
  %249 = load i16, i16* %248, align 2
  store i16 %249, i16* %247, align 2
  %250 = add i64 %225, -8
  %251 = getelementptr inbounds i16, i16* %227, i64 8
  %252 = getelementptr inbounds i16, i16* %226, i64 8
  %253 = icmp eq i64 %250, 0
  br i1 %253, label %254, label %224, !llvm.loop !12

254:                                              ; preds = %219, %224, %199, %76
  %255 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 3
  %256 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %1, i64 0, i32 3
  %257 = bitcast %"class.std::__1::vector.15"* %255 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %257, i8 0, i64 24, i1 false) #9
  %258 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %1, i64 0, i32 3, i32 0, i32 1
  %259 = bitcast %"struct.content::WebPluginMimeType::Param"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.std::__1::vector.15"* %256 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = sub i64 %260, %262
  %264 = sdiv exact i64 %263, 48
  %265 = icmp eq i64 %263, 0
  br i1 %265, label %294, label %266

266:                                              ; preds = %254
  %267 = icmp ugt i64 %264, 384307168202282325
  br i1 %267, label %268, label %270

268:                                              ; preds = %266
  %269 = bitcast %"class.std::__1::vector.15"* %255 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %269) #10
  unreachable

270:                                              ; preds = %266
  %271 = tail call i8* @_Znwm(i64 %263) #11
  %272 = bitcast i8* %271 to %"struct.content::WebPluginMimeType::Param"*
  %273 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 3, i32 0, i32 1
  %274 = bitcast %"struct.content::WebPluginMimeType::Param"** %273 to i8**
  store i8* %271, i8** %274, align 8
  %275 = bitcast %"class.std::__1::vector.15"* %255 to i8**
  store i8* %271, i8** %275, align 8
  %276 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %272, i64 %264
  %277 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"struct.content::WebPluginMimeType::Param"* %276, %"struct.content::WebPluginMimeType::Param"** %277, align 8
  %278 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %256, i64 0, i32 0, i32 0
  %279 = load %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"** %278, align 8
  %280 = load %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"** %258, align 8
  %281 = bitcast %"struct.content::WebPluginMimeType::Param"** %273 to i64*
  %282 = ptrtoint i8* %271 to i64
  %283 = icmp eq %"struct.content::WebPluginMimeType::Param"* %279, %280
  br i1 %283, label %292, label %284

284:                                              ; preds = %270, %284
  %285 = phi %"struct.content::WebPluginMimeType::Param"* [ %288, %284 ], [ %272, %270 ]
  %286 = phi %"struct.content::WebPluginMimeType::Param"* [ %287, %284 ], [ %279, %270 ]
  tail call void @_ZN7content17WebPluginMimeType5ParamC2ERKS1_(%"struct.content::WebPluginMimeType::Param"* %285, %"struct.content::WebPluginMimeType::Param"* dereferenceable(48) %286) #9
  %287 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %286, i64 1
  %288 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %285, i64 1
  %289 = icmp eq %"struct.content::WebPluginMimeType::Param"* %287, %280
  br i1 %289, label %290, label %284

290:                                              ; preds = %284
  %291 = ptrtoint %"struct.content::WebPluginMimeType::Param"* %288 to i64
  br label %292

292:                                              ; preds = %290, %270
  %293 = phi i64 [ %282, %270 ], [ %291, %290 ]
  store i64 %293, i64* %281, align 8
  br label %294

294:                                              ; preds = %254, %292
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17WebPluginMimeTypeD2Ev(%"struct.content::WebPluginMimeType"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"** %3, align 8
  %5 = icmp eq %"struct.content::WebPluginMimeType::Param"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.content::WebPluginMimeType::Param"* %4 to i8*
  %8 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"** %8, align 8
  %10 = icmp eq %"struct.content::WebPluginMimeType::Param"* %9, %4
  br i1 %10, label %35, label %11

11:                                               ; preds = %6, %30
  %12 = phi %"struct.content::WebPluginMimeType::Param"* [ %13, %30 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %12, i64 -1, i32 1
  %15 = bitcast %"class.std::__1::basic_string.6"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = bitcast %"class.std::__1::basic_string.6"* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %19, %11
  %23 = bitcast %"struct.content::WebPluginMimeType::Param"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = bitcast %"struct.content::WebPluginMimeType::Param"* %13 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %27, %22
  %31 = icmp eq %"struct.content::WebPluginMimeType::Param"* %13, %4
  br i1 %31, label %32, label %11

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.15"* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %6
  %36 = phi i8* [ %34, %32 ], [ %7, %6 ]
  store %"struct.content::WebPluginMimeType::Param"* %4, %"struct.content::WebPluginMimeType::Param"** %8, align 8
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 2
  %39 = bitcast %"class.std::__1::basic_string.6"* %38 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = bitcast %"class.std::__1::basic_string.6"* %38 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %50 = icmp eq %"class.std::__1::basic_string"* %49, null
  br i1 %50, label %73, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %53 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 1, i32 0, i32 1
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %53, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %49
  br i1 %55, label %71, label %56

56:                                               ; preds = %51, %66
  %57 = phi %"class.std::__1::basic_string"* [ %58, %66 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 -1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %63, %56
  %67 = icmp eq %"class.std::__1::basic_string"* %58, %49
  br i1 %67, label %68, label %56

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::vector"* %47 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %51
  %72 = phi i8* [ %70, %68 ], [ %52, %51 ]
  store %"class.std::__1::basic_string"* %49, %"class.std::__1::basic_string"** %53, align 8
  tail call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %46, %71
  %74 = bitcast %"struct.content::WebPluginMimeType"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %73, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13WebPluginInfoC2Ev(%"struct.content::WebPluginInfo"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.content::WebPluginInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #9
  %3 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 1
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %3) #9
  %4 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 5
  %6 = bitcast %"class.std::__1::basic_string.6"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 72, i1 false)
  store i32 1, i32* %5, align 8
  %7 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 6
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 7
  store i32 -14277082, i32* %8, align 8
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13WebPluginInfoC2ERKS0_(%"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"* dereferenceable(136)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::WebPluginInfo"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.content::WebPluginInfo"* %0 to i8*
  %9 = bitcast %"struct.content::WebPluginInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #9
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.content::WebPluginInfo"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.content::WebPluginInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.content::WebPluginInfo"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #10
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #10
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.content::WebPluginInfo"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !13
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !13
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !16, !noalias !13
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !16, !noalias !13
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !13
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !13
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !16, !noalias !13
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !16, !noalias !13
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !13
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !13
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !16, !noalias !13
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !16, !noalias !13
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !13
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !13
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !16, !noalias !13
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !16, !noalias !13
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !18

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !13
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !13
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !16, !noalias !13
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !16, !noalias !13
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !19

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !20

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !21

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 1
  tail call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %186, %"class.base::FilePath"* dereferenceable(24) %187) #9
  %188 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 2
  %189 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 2
  %190 = bitcast %"class.std::__1::basic_string.6"* %189 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %190, i64 0, i32 1, i32 1
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %197, label %194

194:                                              ; preds = %185
  %195 = bitcast %"class.std::__1::basic_string.6"* %188 to i8*
  %196 = bitcast %"class.std::__1::basic_string.6"* %189 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %196, i64 24, i1 false) #9
  br label %372

197:                                              ; preds = %185
  %198 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i16*, i16** %198, align 8
  %200 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = icmp ult i64 %201, 11
  br i1 %202, label %203, label %208

203:                                              ; preds = %197
  %204 = bitcast %"class.std::__1::basic_string.6"* %188 to i16*
  %205 = trunc i64 %201 to i8
  %206 = bitcast %"class.std::__1::basic_string.6"* %188 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  store i8 %205, i8* %207, align 1
  br label %225

208:                                              ; preds = %197
  %209 = icmp ugt i64 %201, 9223372036854775791
  br i1 %209, label %210, label %212

210:                                              ; preds = %208
  %211 = bitcast %"class.std::__1::basic_string.6"* %188 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %211) #10
  unreachable

212:                                              ; preds = %208
  %213 = add nuw nsw i64 %201, 8
  %214 = and i64 %213, -8
  %215 = icmp slt i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %212
  tail call void @abort() #10
  unreachable

217:                                              ; preds = %212
  %218 = shl i64 %214, 1
  %219 = tail call i8* @_Znwm(i64 %218) #11
  %220 = bitcast i8* %219 to i16*
  %221 = bitcast %"class.std::__1::basic_string.6"* %188 to i8**
  store i8* %219, i8** %221, align 8
  %222 = or i64 %214, -9223372036854775808
  %223 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %201, i64* %224, align 8
  br label %225

225:                                              ; preds = %217, %203
  %226 = phi i16* [ %204, %203 ], [ %220, %217 ]
  %227 = add nuw nsw i64 %201, 1
  %228 = add i64 %201, 1
  %229 = icmp ult i64 %228, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %225
  %231 = add i64 %201, 1
  %232 = getelementptr i16, i16* %226, i64 %231
  %233 = getelementptr i16, i16* %199, i64 %231
  %234 = icmp ult i16* %226, %233
  %235 = icmp ult i16* %199, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %228, -16
  %239 = sub i64 %227, %238
  %240 = getelementptr i16, i16* %199, i64 %238
  %241 = getelementptr i16, i16* %226, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %199, i64 %250
  %253 = getelementptr i16, i16* %226, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !22
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !22
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !25, !noalias !22
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !25, !noalias !22
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %199, i64 %262
  %264 = getelementptr i16, i16* %226, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !22
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !22
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !25, !noalias !22
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !25, !noalias !22
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %199, i64 %273
  %275 = getelementptr i16, i16* %226, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !22
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !22
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !25, !noalias !22
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !25, !noalias !22
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %199, i64 %284
  %286 = getelementptr i16, i16* %226, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !22
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !22
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !25, !noalias !22
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !25, !noalias !22
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !27

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %199, i64 %302
  %305 = getelementptr i16, i16* %226, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !22
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !22
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !25, !noalias !22
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !25, !noalias !22
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !28

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %228, %238
  br i1 %318, label %372, label %319

319:                                              ; preds = %317, %230, %225
  %320 = phi i64 [ %227, %230 ], [ %227, %225 ], [ %239, %317 ]
  %321 = phi i16* [ %199, %230 ], [ %199, %225 ], [ %240, %317 ]
  %322 = phi i16* [ %226, %230 ], [ %226, %225 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !29

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %372, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %372, label %342, !llvm.loop !30

372:                                              ; preds = %337, %342, %317, %194
  %373 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 3
  %374 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 3
  %375 = bitcast %"class.std::__1::basic_string.6"* %374 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %376 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %375, i64 0, i32 1, i32 1
  %377 = load i8, i8* %376, align 1
  %378 = icmp slt i8 %377, 0
  br i1 %378, label %382, label %379

379:                                              ; preds = %372
  %380 = bitcast %"class.std::__1::basic_string.6"* %373 to i8*
  %381 = bitcast %"class.std::__1::basic_string.6"* %374 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %380, i8* align 8 %381, i64 24, i1 false) #9
  br label %557

382:                                              ; preds = %372
  %383 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %374, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load i16*, i16** %383, align 8
  %385 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %386 = load i64, i64* %385, align 8
  %387 = icmp ult i64 %386, 11
  br i1 %387, label %388, label %393

388:                                              ; preds = %382
  %389 = bitcast %"class.std::__1::basic_string.6"* %373 to i16*
  %390 = trunc i64 %386 to i8
  %391 = bitcast %"class.std::__1::basic_string.6"* %373 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %392 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %391, i64 0, i32 1, i32 1
  store i8 %390, i8* %392, align 1
  br label %410

393:                                              ; preds = %382
  %394 = icmp ugt i64 %386, 9223372036854775791
  br i1 %394, label %395, label %397

395:                                              ; preds = %393
  %396 = bitcast %"class.std::__1::basic_string.6"* %373 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %396) #10
  unreachable

397:                                              ; preds = %393
  %398 = add nuw nsw i64 %386, 8
  %399 = and i64 %398, -8
  %400 = icmp slt i64 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %397
  tail call void @abort() #10
  unreachable

402:                                              ; preds = %397
  %403 = shl i64 %399, 1
  %404 = tail call i8* @_Znwm(i64 %403) #11
  %405 = bitcast i8* %404 to i16*
  %406 = bitcast %"class.std::__1::basic_string.6"* %373 to i8**
  store i8* %404, i8** %406, align 8
  %407 = or i64 %399, -9223372036854775808
  %408 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %407, i64* %408, align 8
  %409 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %386, i64* %409, align 8
  br label %410

410:                                              ; preds = %402, %388
  %411 = phi i16* [ %389, %388 ], [ %405, %402 ]
  %412 = add nuw nsw i64 %386, 1
  %413 = add i64 %386, 1
  %414 = icmp ult i64 %413, 16
  br i1 %414, label %504, label %415

415:                                              ; preds = %410
  %416 = add i64 %386, 1
  %417 = getelementptr i16, i16* %411, i64 %416
  %418 = getelementptr i16, i16* %384, i64 %416
  %419 = icmp ult i16* %411, %418
  %420 = icmp ult i16* %384, %417
  %421 = and i1 %419, %420
  br i1 %421, label %504, label %422

422:                                              ; preds = %415
  %423 = and i64 %413, -16
  %424 = sub i64 %412, %423
  %425 = getelementptr i16, i16* %384, i64 %423
  %426 = getelementptr i16, i16* %411, i64 %423
  %427 = add i64 %423, -16
  %428 = lshr exact i64 %427, 4
  %429 = add nuw nsw i64 %428, 1
  %430 = and i64 %429, 3
  %431 = icmp ult i64 %427, 48
  br i1 %431, label %483, label %432

432:                                              ; preds = %422
  %433 = sub nsw i64 %429, %430
  br label %434

434:                                              ; preds = %434, %432
  %435 = phi i64 [ 0, %432 ], [ %480, %434 ]
  %436 = phi i64 [ %433, %432 ], [ %481, %434 ]
  %437 = getelementptr i16, i16* %384, i64 %435
  %438 = getelementptr i16, i16* %411, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !31
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !31
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !34, !noalias !31
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !34, !noalias !31
  %447 = or i64 %435, 16
  %448 = getelementptr i16, i16* %384, i64 %447
  %449 = getelementptr i16, i16* %411, i64 %447
  %450 = bitcast i16* %448 to <8 x i16>*
  %451 = load <8 x i16>, <8 x i16>* %450, align 2, !alias.scope !31
  %452 = getelementptr i16, i16* %448, i64 8
  %453 = bitcast i16* %452 to <8 x i16>*
  %454 = load <8 x i16>, <8 x i16>* %453, align 2, !alias.scope !31
  %455 = bitcast i16* %449 to <8 x i16>*
  store <8 x i16> %451, <8 x i16>* %455, align 2, !alias.scope !34, !noalias !31
  %456 = getelementptr i16, i16* %449, i64 8
  %457 = bitcast i16* %456 to <8 x i16>*
  store <8 x i16> %454, <8 x i16>* %457, align 2, !alias.scope !34, !noalias !31
  %458 = or i64 %435, 32
  %459 = getelementptr i16, i16* %384, i64 %458
  %460 = getelementptr i16, i16* %411, i64 %458
  %461 = bitcast i16* %459 to <8 x i16>*
  %462 = load <8 x i16>, <8 x i16>* %461, align 2, !alias.scope !31
  %463 = getelementptr i16, i16* %459, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  %465 = load <8 x i16>, <8 x i16>* %464, align 2, !alias.scope !31
  %466 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %462, <8 x i16>* %466, align 2, !alias.scope !34, !noalias !31
  %467 = getelementptr i16, i16* %460, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %465, <8 x i16>* %468, align 2, !alias.scope !34, !noalias !31
  %469 = or i64 %435, 48
  %470 = getelementptr i16, i16* %384, i64 %469
  %471 = getelementptr i16, i16* %411, i64 %469
  %472 = bitcast i16* %470 to <8 x i16>*
  %473 = load <8 x i16>, <8 x i16>* %472, align 2, !alias.scope !31
  %474 = getelementptr i16, i16* %470, i64 8
  %475 = bitcast i16* %474 to <8 x i16>*
  %476 = load <8 x i16>, <8 x i16>* %475, align 2, !alias.scope !31
  %477 = bitcast i16* %471 to <8 x i16>*
  store <8 x i16> %473, <8 x i16>* %477, align 2, !alias.scope !34, !noalias !31
  %478 = getelementptr i16, i16* %471, i64 8
  %479 = bitcast i16* %478 to <8 x i16>*
  store <8 x i16> %476, <8 x i16>* %479, align 2, !alias.scope !34, !noalias !31
  %480 = add i64 %435, 64
  %481 = add i64 %436, -4
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %483, label %434, !llvm.loop !36

483:                                              ; preds = %434, %422
  %484 = phi i64 [ 0, %422 ], [ %480, %434 ]
  %485 = icmp eq i64 %430, 0
  br i1 %485, label %502, label %486

486:                                              ; preds = %483, %486
  %487 = phi i64 [ %499, %486 ], [ %484, %483 ]
  %488 = phi i64 [ %500, %486 ], [ %430, %483 ]
  %489 = getelementptr i16, i16* %384, i64 %487
  %490 = getelementptr i16, i16* %411, i64 %487
  %491 = bitcast i16* %489 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !31
  %493 = getelementptr i16, i16* %489, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !31
  %496 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %492, <8 x i16>* %496, align 2, !alias.scope !34, !noalias !31
  %497 = getelementptr i16, i16* %490, i64 8
  %498 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %498, align 2, !alias.scope !34, !noalias !31
  %499 = add i64 %487, 16
  %500 = add i64 %488, -1
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %486, !llvm.loop !37

502:                                              ; preds = %486, %483
  %503 = icmp eq i64 %413, %423
  br i1 %503, label %557, label %504

504:                                              ; preds = %502, %415, %410
  %505 = phi i64 [ %412, %415 ], [ %412, %410 ], [ %424, %502 ]
  %506 = phi i16* [ %384, %415 ], [ %384, %410 ], [ %425, %502 ]
  %507 = phi i16* [ %411, %415 ], [ %411, %410 ], [ %426, %502 ]
  %508 = add i64 %505, -1
  %509 = and i64 %505, 7
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %522, label %511

511:                                              ; preds = %504, %511
  %512 = phi i64 [ %517, %511 ], [ %505, %504 ]
  %513 = phi i16* [ %519, %511 ], [ %506, %504 ]
  %514 = phi i16* [ %518, %511 ], [ %507, %504 ]
  %515 = phi i64 [ %520, %511 ], [ %509, %504 ]
  %516 = load i16, i16* %513, align 2
  store i16 %516, i16* %514, align 2
  %517 = add i64 %512, -1
  %518 = getelementptr inbounds i16, i16* %514, i64 1
  %519 = getelementptr inbounds i16, i16* %513, i64 1
  %520 = add i64 %515, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %511, !llvm.loop !38

522:                                              ; preds = %511, %504
  %523 = phi i64 [ %505, %504 ], [ %517, %511 ]
  %524 = phi i16* [ %506, %504 ], [ %519, %511 ]
  %525 = phi i16* [ %507, %504 ], [ %518, %511 ]
  %526 = icmp ult i64 %508, 7
  br i1 %526, label %557, label %527

527:                                              ; preds = %522, %527
  %528 = phi i64 [ %553, %527 ], [ %523, %522 ]
  %529 = phi i16* [ %555, %527 ], [ %524, %522 ]
  %530 = phi i16* [ %554, %527 ], [ %525, %522 ]
  %531 = load i16, i16* %529, align 2
  store i16 %531, i16* %530, align 2
  %532 = getelementptr inbounds i16, i16* %530, i64 1
  %533 = getelementptr inbounds i16, i16* %529, i64 1
  %534 = load i16, i16* %533, align 2
  store i16 %534, i16* %532, align 2
  %535 = getelementptr inbounds i16, i16* %530, i64 2
  %536 = getelementptr inbounds i16, i16* %529, i64 2
  %537 = load i16, i16* %536, align 2
  store i16 %537, i16* %535, align 2
  %538 = getelementptr inbounds i16, i16* %530, i64 3
  %539 = getelementptr inbounds i16, i16* %529, i64 3
  %540 = load i16, i16* %539, align 2
  store i16 %540, i16* %538, align 2
  %541 = getelementptr inbounds i16, i16* %530, i64 4
  %542 = getelementptr inbounds i16, i16* %529, i64 4
  %543 = load i16, i16* %542, align 2
  store i16 %543, i16* %541, align 2
  %544 = getelementptr inbounds i16, i16* %530, i64 5
  %545 = getelementptr inbounds i16, i16* %529, i64 5
  %546 = load i16, i16* %545, align 2
  store i16 %546, i16* %544, align 2
  %547 = getelementptr inbounds i16, i16* %530, i64 6
  %548 = getelementptr inbounds i16, i16* %529, i64 6
  %549 = load i16, i16* %548, align 2
  store i16 %549, i16* %547, align 2
  %550 = getelementptr inbounds i16, i16* %530, i64 7
  %551 = getelementptr inbounds i16, i16* %529, i64 7
  %552 = load i16, i16* %551, align 2
  store i16 %552, i16* %550, align 2
  %553 = add i64 %528, -8
  %554 = getelementptr inbounds i16, i16* %530, i64 8
  %555 = getelementptr inbounds i16, i16* %529, i64 8
  %556 = icmp eq i64 %553, 0
  br i1 %556, label %557, label %527, !llvm.loop !39

557:                                              ; preds = %522, %527, %502, %379
  %558 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 4
  %559 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 4
  %560 = bitcast %"class.std::__1::vector.22"* %558 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %560, i8 0, i64 24, i1 false) #9
  %561 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %562 = bitcast %"struct.content::WebPluginMimeType"** %561 to i64*
  %563 = load i64, i64* %562, align 8
  %564 = bitcast %"class.std::__1::vector.22"* %559 to i64*
  %565 = load i64, i64* %564, align 8
  %566 = sub i64 %563, %565
  %567 = sdiv exact i64 %566, 96
  %568 = icmp eq i64 %566, 0
  br i1 %568, label %597, label %569

569:                                              ; preds = %557
  %570 = icmp ugt i64 %567, 192153584101141162
  br i1 %570, label %571, label %573

571:                                              ; preds = %569
  %572 = bitcast %"class.std::__1::vector.22"* %558 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %572) #10
  unreachable

573:                                              ; preds = %569
  %574 = tail call i8* @_Znwm(i64 %566) #11
  %575 = bitcast i8* %574 to %"struct.content::WebPluginMimeType"*
  %576 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %577 = bitcast %"struct.content::WebPluginMimeType"** %576 to i8**
  store i8* %574, i8** %577, align 8
  %578 = bitcast %"class.std::__1::vector.22"* %558 to i8**
  store i8* %574, i8** %578, align 8
  %579 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %575, i64 %567
  %580 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store %"struct.content::WebPluginMimeType"* %579, %"struct.content::WebPluginMimeType"** %580, align 8
  %581 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %559, i64 0, i32 0, i32 0
  %582 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %581, align 8
  %583 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %561, align 8
  %584 = bitcast %"struct.content::WebPluginMimeType"** %576 to i64*
  %585 = ptrtoint i8* %574 to i64
  %586 = icmp eq %"struct.content::WebPluginMimeType"* %582, %583
  br i1 %586, label %595, label %587

587:                                              ; preds = %573, %587
  %588 = phi %"struct.content::WebPluginMimeType"* [ %591, %587 ], [ %575, %573 ]
  %589 = phi %"struct.content::WebPluginMimeType"* [ %590, %587 ], [ %582, %573 ]
  tail call void @_ZN7content17WebPluginMimeTypeC2ERKS0_(%"struct.content::WebPluginMimeType"* %588, %"struct.content::WebPluginMimeType"* dereferenceable(96) %589) #9
  %590 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %589, i64 1
  %591 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %588, i64 1
  %592 = icmp eq %"struct.content::WebPluginMimeType"* %590, %583
  br i1 %592, label %593, label %587

593:                                              ; preds = %587
  %594 = ptrtoint %"struct.content::WebPluginMimeType"* %591 to i64
  br label %595

595:                                              ; preds = %593, %573
  %596 = phi i64 [ %585, %573 ], [ %594, %593 ]
  store i64 %596, i64* %584, align 8
  br label %597

597:                                              ; preds = %557, %595
  %598 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 5
  %599 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 5
  %600 = bitcast i32* %598 to i8*
  %601 = bitcast i32* %599 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %600, i8* align 8 %601, i64 12, i1 false)
  ret void
}

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13WebPluginInfoD2Ev(%"struct.content::WebPluginInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %3, align 8
  %5 = icmp eq %"struct.content::WebPluginMimeType"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.content::WebPluginMimeType"* %4 to i8*
  %8 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %8, align 8
  %10 = icmp eq %"struct.content::WebPluginMimeType"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.content::WebPluginMimeType"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %12, i64 -1
  tail call void @_ZN7content17WebPluginMimeTypeD2Ev(%"struct.content::WebPluginMimeType"* %13) #9
  %14 = icmp eq %"struct.content::WebPluginMimeType"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.22"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.content::WebPluginMimeType"* %4, %"struct.content::WebPluginMimeType"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 3
  %22 = bitcast %"class.std::__1::basic_string.6"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string.6"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 2
  %31 = bitcast %"class.std::__1::basic_string.6"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string.6"* %30 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %29, %35
  %39 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 1
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %39) #9
  %40 = bitcast %"struct.content::WebPluginInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = bitcast %"struct.content::WebPluginInfo"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #11
  br label %47

47:                                               ; preds = %38, %44
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.content::WebPluginInfo"* @_ZN7content13WebPluginInfoaSERKS0_(%"struct.content::WebPluginInfo"* returned, %"struct.content::WebPluginInfo"* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %3, %"class.std::__1::basic_string.6"* dereferenceable(24) %4)
  %6 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"* %6, %"class.base::FilePath"* dereferenceable(24) %7) #9
  %9 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 2
  %11 = tail call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %9, %"class.std::__1::basic_string.6"* dereferenceable(24) %10)
  %12 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 3
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %12, %"class.std::__1::basic_string.6"* dereferenceable(24) %13)
  %15 = icmp eq %"struct.content::WebPluginInfo"* %0, %1
  br i1 %15, label %22, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 4, i32 0, i32 0
  %19 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %18, align 8
  %20 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %21 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %20, align 8
  tail call void @_ZNSt3__16vectorIN7content17WebPluginMimeTypeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"* %17, %"struct.content::WebPluginMimeType"* %19, %"struct.content::WebPluginMimeType"* %21) #9
  br label %22

22:                                               ; preds = %2, %16
  %23 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %1, i64 0, i32 5
  %25 = bitcast i32* %23 to i8*
  %26 = bitcast i32* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 12, i1 false)
  ret %"struct.content::WebPluginInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.6"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.6"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.6"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.6"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.6"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.6"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.6"*
  %35 = icmp ugt %"class.std::__1::basic_string.6"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !40
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !40
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !43, !noalias !40
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !43, !noalias !40
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !40
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !40
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !43, !noalias !40
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !43, !noalias !40
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !40
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !40
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !43, !noalias !40
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !43, !noalias !40
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !40
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !40
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !43, !noalias !40
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !43, !noalias !40
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !45

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !40
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !40
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !43, !noalias !40
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !43, !noalias !40
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !46

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !47

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !48

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.6"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #10
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #10
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !49
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !49
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !52, !noalias !49
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !52, !noalias !49
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !49
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !49
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !52, !noalias !49
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !52, !noalias !49
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !49
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !49
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !52, !noalias !49
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !52, !noalias !49
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !49
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !49
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !52, !noalias !49
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !52, !noalias !49
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !54

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !49
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !49
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !52, !noalias !49
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !52, !noalias !49
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !55

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !56

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !57

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.6"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.6"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !58
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !58
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !61, !noalias !58
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !61, !noalias !58
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !58
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !58
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !61, !noalias !58
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !61, !noalias !58
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !58
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !58
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !61, !noalias !58
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !61, !noalias !58
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !58
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !58
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !61, !noalias !58
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !61, !noalias !58
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !63

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !58
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !58
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !61, !noalias !58
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !61, !noalias !58
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !64

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !65

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !66

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.6"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #9
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.6"* %0
}

declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13WebPluginInfoC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8FilePathES9_S9_(%"struct.content::WebPluginInfo"*, %"class.std::__1::basic_string.6"* nocapture readonly dereferenceable(24), %"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string.6"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.6"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.std::__1::basic_string.6"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = bitcast %"struct.content::WebPluginInfo"* %0 to i8*
  %12 = bitcast %"class.std::__1::basic_string.6"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #9
  br label %188

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"struct.content::WebPluginInfo"* %0 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"struct.content::WebPluginInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"struct.content::WebPluginInfo"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #10
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #10
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #11
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"struct.content::WebPluginInfo"* %0 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !67
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !67
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !70, !noalias !67
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !70, !noalias !67
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !67
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !67
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !70, !noalias !67
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !70, !noalias !67
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !67
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !67
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !70, !noalias !67
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !70, !noalias !67
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !67
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !67
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !70, !noalias !67
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !70, !noalias !67
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !72

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !67
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !67
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !70, !noalias !67
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !70, !noalias !67
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !73

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !74

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !75

188:                                              ; preds = %153, %158, %133, %10
  %189 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 1
  tail call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %189, %"class.base::FilePath"* dereferenceable(24) %2) #9
  %190 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 2
  %191 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %191, i64 0, i32 1, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %188
  %196 = bitcast %"class.std::__1::basic_string.6"* %190 to i8*
  %197 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %197, i64 24, i1 false) #9
  br label %373

198:                                              ; preds = %188
  %199 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i16*, i16** %199, align 8
  %201 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = icmp ult i64 %202, 11
  br i1 %203, label %204, label %209

204:                                              ; preds = %198
  %205 = bitcast %"class.std::__1::basic_string.6"* %190 to i16*
  %206 = trunc i64 %202 to i8
  %207 = bitcast %"class.std::__1::basic_string.6"* %190 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %207, i64 0, i32 1, i32 1
  store i8 %206, i8* %208, align 1
  br label %226

209:                                              ; preds = %198
  %210 = icmp ugt i64 %202, 9223372036854775791
  br i1 %210, label %211, label %213

211:                                              ; preds = %209
  %212 = bitcast %"class.std::__1::basic_string.6"* %190 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %212) #10
  unreachable

213:                                              ; preds = %209
  %214 = add nuw nsw i64 %202, 8
  %215 = and i64 %214, -8
  %216 = icmp slt i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %213
  tail call void @abort() #10
  unreachable

218:                                              ; preds = %213
  %219 = shl i64 %215, 1
  %220 = tail call i8* @_Znwm(i64 %219) #11
  %221 = bitcast i8* %220 to i16*
  %222 = bitcast %"class.std::__1::basic_string.6"* %190 to i8**
  store i8* %220, i8** %222, align 8
  %223 = or i64 %215, -9223372036854775808
  %224 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %202, i64* %225, align 8
  br label %226

226:                                              ; preds = %218, %204
  %227 = phi i16* [ %205, %204 ], [ %221, %218 ]
  %228 = add nuw nsw i64 %202, 1
  %229 = add i64 %202, 1
  %230 = icmp ult i64 %229, 16
  br i1 %230, label %320, label %231

231:                                              ; preds = %226
  %232 = add i64 %202, 1
  %233 = getelementptr i16, i16* %227, i64 %232
  %234 = getelementptr i16, i16* %200, i64 %232
  %235 = icmp ult i16* %227, %234
  %236 = icmp ult i16* %200, %233
  %237 = and i1 %235, %236
  br i1 %237, label %320, label %238

238:                                              ; preds = %231
  %239 = and i64 %229, -16
  %240 = sub i64 %228, %239
  %241 = getelementptr i16, i16* %200, i64 %239
  %242 = getelementptr i16, i16* %227, i64 %239
  %243 = add i64 %239, -16
  %244 = lshr exact i64 %243, 4
  %245 = add nuw nsw i64 %244, 1
  %246 = and i64 %245, 3
  %247 = icmp ult i64 %243, 48
  br i1 %247, label %299, label %248

248:                                              ; preds = %238
  %249 = sub nsw i64 %245, %246
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ 0, %248 ], [ %296, %250 ]
  %252 = phi i64 [ %249, %248 ], [ %297, %250 ]
  %253 = getelementptr i16, i16* %200, i64 %251
  %254 = getelementptr i16, i16* %227, i64 %251
  %255 = bitcast i16* %253 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !76
  %257 = getelementptr i16, i16* %253, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  %259 = load <8 x i16>, <8 x i16>* %258, align 2, !alias.scope !76
  %260 = bitcast i16* %254 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %260, align 2, !alias.scope !79, !noalias !76
  %261 = getelementptr i16, i16* %254, i64 8
  %262 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %259, <8 x i16>* %262, align 2, !alias.scope !79, !noalias !76
  %263 = or i64 %251, 16
  %264 = getelementptr i16, i16* %200, i64 %263
  %265 = getelementptr i16, i16* %227, i64 %263
  %266 = bitcast i16* %264 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !76
  %268 = getelementptr i16, i16* %264, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !76
  %271 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %271, align 2, !alias.scope !79, !noalias !76
  %272 = getelementptr i16, i16* %265, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %273, align 2, !alias.scope !79, !noalias !76
  %274 = or i64 %251, 32
  %275 = getelementptr i16, i16* %200, i64 %274
  %276 = getelementptr i16, i16* %227, i64 %274
  %277 = bitcast i16* %275 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !76
  %279 = getelementptr i16, i16* %275, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !76
  %282 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !79, !noalias !76
  %283 = getelementptr i16, i16* %276, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !79, !noalias !76
  %285 = or i64 %251, 48
  %286 = getelementptr i16, i16* %200, i64 %285
  %287 = getelementptr i16, i16* %227, i64 %285
  %288 = bitcast i16* %286 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !76
  %290 = getelementptr i16, i16* %286, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !76
  %293 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %293, align 2, !alias.scope !79, !noalias !76
  %294 = getelementptr i16, i16* %287, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %295, align 2, !alias.scope !79, !noalias !76
  %296 = add i64 %251, 64
  %297 = add i64 %252, -4
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %250, !llvm.loop !81

299:                                              ; preds = %250, %238
  %300 = phi i64 [ 0, %238 ], [ %296, %250 ]
  %301 = icmp eq i64 %246, 0
  br i1 %301, label %318, label %302

302:                                              ; preds = %299, %302
  %303 = phi i64 [ %315, %302 ], [ %300, %299 ]
  %304 = phi i64 [ %316, %302 ], [ %246, %299 ]
  %305 = getelementptr i16, i16* %200, i64 %303
  %306 = getelementptr i16, i16* %227, i64 %303
  %307 = bitcast i16* %305 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !76
  %309 = getelementptr i16, i16* %305, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !76
  %312 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %312, align 2, !alias.scope !79, !noalias !76
  %313 = getelementptr i16, i16* %306, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %314, align 2, !alias.scope !79, !noalias !76
  %315 = add i64 %303, 16
  %316 = add i64 %304, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %302, !llvm.loop !82

318:                                              ; preds = %302, %299
  %319 = icmp eq i64 %229, %239
  br i1 %319, label %373, label %320

320:                                              ; preds = %318, %231, %226
  %321 = phi i64 [ %228, %231 ], [ %228, %226 ], [ %240, %318 ]
  %322 = phi i16* [ %200, %231 ], [ %200, %226 ], [ %241, %318 ]
  %323 = phi i16* [ %227, %231 ], [ %227, %226 ], [ %242, %318 ]
  %324 = add i64 %321, -1
  %325 = and i64 %321, 7
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %338, label %327

327:                                              ; preds = %320, %327
  %328 = phi i64 [ %333, %327 ], [ %321, %320 ]
  %329 = phi i16* [ %335, %327 ], [ %322, %320 ]
  %330 = phi i16* [ %334, %327 ], [ %323, %320 ]
  %331 = phi i64 [ %336, %327 ], [ %325, %320 ]
  %332 = load i16, i16* %329, align 2
  store i16 %332, i16* %330, align 2
  %333 = add i64 %328, -1
  %334 = getelementptr inbounds i16, i16* %330, i64 1
  %335 = getelementptr inbounds i16, i16* %329, i64 1
  %336 = add i64 %331, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %327, !llvm.loop !83

338:                                              ; preds = %327, %320
  %339 = phi i64 [ %321, %320 ], [ %333, %327 ]
  %340 = phi i16* [ %322, %320 ], [ %335, %327 ]
  %341 = phi i16* [ %323, %320 ], [ %334, %327 ]
  %342 = icmp ult i64 %324, 7
  br i1 %342, label %373, label %343

343:                                              ; preds = %338, %343
  %344 = phi i64 [ %369, %343 ], [ %339, %338 ]
  %345 = phi i16* [ %371, %343 ], [ %340, %338 ]
  %346 = phi i16* [ %370, %343 ], [ %341, %338 ]
  %347 = load i16, i16* %345, align 2
  store i16 %347, i16* %346, align 2
  %348 = getelementptr inbounds i16, i16* %346, i64 1
  %349 = getelementptr inbounds i16, i16* %345, i64 1
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %346, i64 2
  %352 = getelementptr inbounds i16, i16* %345, i64 2
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %346, i64 3
  %355 = getelementptr inbounds i16, i16* %345, i64 3
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %346, i64 4
  %358 = getelementptr inbounds i16, i16* %345, i64 4
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %346, i64 5
  %361 = getelementptr inbounds i16, i16* %345, i64 5
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %346, i64 6
  %364 = getelementptr inbounds i16, i16* %345, i64 6
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %346, i64 7
  %367 = getelementptr inbounds i16, i16* %345, i64 7
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = add i64 %344, -8
  %370 = getelementptr inbounds i16, i16* %346, i64 8
  %371 = getelementptr inbounds i16, i16* %345, i64 8
  %372 = icmp eq i64 %369, 0
  br i1 %372, label %373, label %343, !llvm.loop !84

373:                                              ; preds = %338, %343, %318, %195
  %374 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 3
  %375 = bitcast %"class.std::__1::basic_string.6"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %376 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %375, i64 0, i32 1, i32 1
  %377 = load i8, i8* %376, align 1
  %378 = icmp slt i8 %377, 0
  br i1 %378, label %382, label %379

379:                                              ; preds = %373
  %380 = bitcast %"class.std::__1::basic_string.6"* %374 to i8*
  %381 = bitcast %"class.std::__1::basic_string.6"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %380, i8* align 8 %381, i64 24, i1 false) #9
  br label %557

382:                                              ; preds = %373
  %383 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load i16*, i16** %383, align 8
  %385 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %386 = load i64, i64* %385, align 8
  %387 = icmp ult i64 %386, 11
  br i1 %387, label %388, label %393

388:                                              ; preds = %382
  %389 = bitcast %"class.std::__1::basic_string.6"* %374 to i16*
  %390 = trunc i64 %386 to i8
  %391 = bitcast %"class.std::__1::basic_string.6"* %374 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %392 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %391, i64 0, i32 1, i32 1
  store i8 %390, i8* %392, align 1
  br label %410

393:                                              ; preds = %382
  %394 = icmp ugt i64 %386, 9223372036854775791
  br i1 %394, label %395, label %397

395:                                              ; preds = %393
  %396 = bitcast %"class.std::__1::basic_string.6"* %374 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %396) #10
  unreachable

397:                                              ; preds = %393
  %398 = add nuw nsw i64 %386, 8
  %399 = and i64 %398, -8
  %400 = icmp slt i64 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %397
  tail call void @abort() #10
  unreachable

402:                                              ; preds = %397
  %403 = shl i64 %399, 1
  %404 = tail call i8* @_Znwm(i64 %403) #11
  %405 = bitcast i8* %404 to i16*
  %406 = bitcast %"class.std::__1::basic_string.6"* %374 to i8**
  store i8* %404, i8** %406, align 8
  %407 = or i64 %399, -9223372036854775808
  %408 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %407, i64* %408, align 8
  %409 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %386, i64* %409, align 8
  br label %410

410:                                              ; preds = %402, %388
  %411 = phi i16* [ %389, %388 ], [ %405, %402 ]
  %412 = add nuw nsw i64 %386, 1
  %413 = add i64 %386, 1
  %414 = icmp ult i64 %413, 16
  br i1 %414, label %504, label %415

415:                                              ; preds = %410
  %416 = add i64 %386, 1
  %417 = getelementptr i16, i16* %411, i64 %416
  %418 = getelementptr i16, i16* %384, i64 %416
  %419 = icmp ult i16* %411, %418
  %420 = icmp ult i16* %384, %417
  %421 = and i1 %419, %420
  br i1 %421, label %504, label %422

422:                                              ; preds = %415
  %423 = and i64 %413, -16
  %424 = sub i64 %412, %423
  %425 = getelementptr i16, i16* %384, i64 %423
  %426 = getelementptr i16, i16* %411, i64 %423
  %427 = add i64 %423, -16
  %428 = lshr exact i64 %427, 4
  %429 = add nuw nsw i64 %428, 1
  %430 = and i64 %429, 3
  %431 = icmp ult i64 %427, 48
  br i1 %431, label %483, label %432

432:                                              ; preds = %422
  %433 = sub nsw i64 %429, %430
  br label %434

434:                                              ; preds = %434, %432
  %435 = phi i64 [ 0, %432 ], [ %480, %434 ]
  %436 = phi i64 [ %433, %432 ], [ %481, %434 ]
  %437 = getelementptr i16, i16* %384, i64 %435
  %438 = getelementptr i16, i16* %411, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !85
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !85
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !88, !noalias !85
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !88, !noalias !85
  %447 = or i64 %435, 16
  %448 = getelementptr i16, i16* %384, i64 %447
  %449 = getelementptr i16, i16* %411, i64 %447
  %450 = bitcast i16* %448 to <8 x i16>*
  %451 = load <8 x i16>, <8 x i16>* %450, align 2, !alias.scope !85
  %452 = getelementptr i16, i16* %448, i64 8
  %453 = bitcast i16* %452 to <8 x i16>*
  %454 = load <8 x i16>, <8 x i16>* %453, align 2, !alias.scope !85
  %455 = bitcast i16* %449 to <8 x i16>*
  store <8 x i16> %451, <8 x i16>* %455, align 2, !alias.scope !88, !noalias !85
  %456 = getelementptr i16, i16* %449, i64 8
  %457 = bitcast i16* %456 to <8 x i16>*
  store <8 x i16> %454, <8 x i16>* %457, align 2, !alias.scope !88, !noalias !85
  %458 = or i64 %435, 32
  %459 = getelementptr i16, i16* %384, i64 %458
  %460 = getelementptr i16, i16* %411, i64 %458
  %461 = bitcast i16* %459 to <8 x i16>*
  %462 = load <8 x i16>, <8 x i16>* %461, align 2, !alias.scope !85
  %463 = getelementptr i16, i16* %459, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  %465 = load <8 x i16>, <8 x i16>* %464, align 2, !alias.scope !85
  %466 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %462, <8 x i16>* %466, align 2, !alias.scope !88, !noalias !85
  %467 = getelementptr i16, i16* %460, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %465, <8 x i16>* %468, align 2, !alias.scope !88, !noalias !85
  %469 = or i64 %435, 48
  %470 = getelementptr i16, i16* %384, i64 %469
  %471 = getelementptr i16, i16* %411, i64 %469
  %472 = bitcast i16* %470 to <8 x i16>*
  %473 = load <8 x i16>, <8 x i16>* %472, align 2, !alias.scope !85
  %474 = getelementptr i16, i16* %470, i64 8
  %475 = bitcast i16* %474 to <8 x i16>*
  %476 = load <8 x i16>, <8 x i16>* %475, align 2, !alias.scope !85
  %477 = bitcast i16* %471 to <8 x i16>*
  store <8 x i16> %473, <8 x i16>* %477, align 2, !alias.scope !88, !noalias !85
  %478 = getelementptr i16, i16* %471, i64 8
  %479 = bitcast i16* %478 to <8 x i16>*
  store <8 x i16> %476, <8 x i16>* %479, align 2, !alias.scope !88, !noalias !85
  %480 = add i64 %435, 64
  %481 = add i64 %436, -4
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %483, label %434, !llvm.loop !90

483:                                              ; preds = %434, %422
  %484 = phi i64 [ 0, %422 ], [ %480, %434 ]
  %485 = icmp eq i64 %430, 0
  br i1 %485, label %502, label %486

486:                                              ; preds = %483, %486
  %487 = phi i64 [ %499, %486 ], [ %484, %483 ]
  %488 = phi i64 [ %500, %486 ], [ %430, %483 ]
  %489 = getelementptr i16, i16* %384, i64 %487
  %490 = getelementptr i16, i16* %411, i64 %487
  %491 = bitcast i16* %489 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !85
  %493 = getelementptr i16, i16* %489, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !85
  %496 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %492, <8 x i16>* %496, align 2, !alias.scope !88, !noalias !85
  %497 = getelementptr i16, i16* %490, i64 8
  %498 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %498, align 2, !alias.scope !88, !noalias !85
  %499 = add i64 %487, 16
  %500 = add i64 %488, -1
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %486, !llvm.loop !91

502:                                              ; preds = %486, %483
  %503 = icmp eq i64 %413, %423
  br i1 %503, label %557, label %504

504:                                              ; preds = %502, %415, %410
  %505 = phi i64 [ %412, %415 ], [ %412, %410 ], [ %424, %502 ]
  %506 = phi i16* [ %384, %415 ], [ %384, %410 ], [ %425, %502 ]
  %507 = phi i16* [ %411, %415 ], [ %411, %410 ], [ %426, %502 ]
  %508 = add i64 %505, -1
  %509 = and i64 %505, 7
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %522, label %511

511:                                              ; preds = %504, %511
  %512 = phi i64 [ %517, %511 ], [ %505, %504 ]
  %513 = phi i16* [ %519, %511 ], [ %506, %504 ]
  %514 = phi i16* [ %518, %511 ], [ %507, %504 ]
  %515 = phi i64 [ %520, %511 ], [ %509, %504 ]
  %516 = load i16, i16* %513, align 2
  store i16 %516, i16* %514, align 2
  %517 = add i64 %512, -1
  %518 = getelementptr inbounds i16, i16* %514, i64 1
  %519 = getelementptr inbounds i16, i16* %513, i64 1
  %520 = add i64 %515, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %511, !llvm.loop !92

522:                                              ; preds = %511, %504
  %523 = phi i64 [ %505, %504 ], [ %517, %511 ]
  %524 = phi i16* [ %506, %504 ], [ %519, %511 ]
  %525 = phi i16* [ %507, %504 ], [ %518, %511 ]
  %526 = icmp ult i64 %508, 7
  br i1 %526, label %557, label %527

527:                                              ; preds = %522, %527
  %528 = phi i64 [ %553, %527 ], [ %523, %522 ]
  %529 = phi i16* [ %555, %527 ], [ %524, %522 ]
  %530 = phi i16* [ %554, %527 ], [ %525, %522 ]
  %531 = load i16, i16* %529, align 2
  store i16 %531, i16* %530, align 2
  %532 = getelementptr inbounds i16, i16* %530, i64 1
  %533 = getelementptr inbounds i16, i16* %529, i64 1
  %534 = load i16, i16* %533, align 2
  store i16 %534, i16* %532, align 2
  %535 = getelementptr inbounds i16, i16* %530, i64 2
  %536 = getelementptr inbounds i16, i16* %529, i64 2
  %537 = load i16, i16* %536, align 2
  store i16 %537, i16* %535, align 2
  %538 = getelementptr inbounds i16, i16* %530, i64 3
  %539 = getelementptr inbounds i16, i16* %529, i64 3
  %540 = load i16, i16* %539, align 2
  store i16 %540, i16* %538, align 2
  %541 = getelementptr inbounds i16, i16* %530, i64 4
  %542 = getelementptr inbounds i16, i16* %529, i64 4
  %543 = load i16, i16* %542, align 2
  store i16 %543, i16* %541, align 2
  %544 = getelementptr inbounds i16, i16* %530, i64 5
  %545 = getelementptr inbounds i16, i16* %529, i64 5
  %546 = load i16, i16* %545, align 2
  store i16 %546, i16* %544, align 2
  %547 = getelementptr inbounds i16, i16* %530, i64 6
  %548 = getelementptr inbounds i16, i16* %529, i64 6
  %549 = load i16, i16* %548, align 2
  store i16 %549, i16* %547, align 2
  %550 = getelementptr inbounds i16, i16* %530, i64 7
  %551 = getelementptr inbounds i16, i16* %529, i64 7
  %552 = load i16, i16* %551, align 2
  store i16 %552, i16* %550, align 2
  %553 = add i64 %528, -8
  %554 = getelementptr inbounds i16, i16* %530, i64 8
  %555 = getelementptr inbounds i16, i16* %529, i64 8
  %556 = icmp eq i64 %553, 0
  br i1 %556, label %557, label %527, !llvm.loop !93

557:                                              ; preds = %522, %527, %502, %379
  %558 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 4
  %559 = bitcast %"class.std::__1::vector.22"* %558 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %559, i8 0, i64 24, i1 false) #9
  %560 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 5
  store i32 1, i32* %560, align 8
  %561 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 6
  store i32 0, i32* %561, align 4
  %562 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %0, i64 0, i32 7
  store i32 -14277082, i32* %562, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13WebPluginInfo23CreateVersionFromStringERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPN4base7VersionE(%"class.std::__1::basic_string.6"* dereferenceable(24), %"class.base::Version"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::Version", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string.6"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string.6"* %0 to i16*
  %19 = select i1 %15, i16* %17, i16* %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %14 to i64
  %23 = select i1 %15, i64 %21, i64 %22
  call void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i16* %19, i64 %23) #9
  %24 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = load i8*, i8** %9, align 8
  %29 = select i1 %27, i8* %28, i8* %8
  %30 = load i64, i64* %10, align 8
  %31 = zext i8 %26 to i64
  %32 = select i1 %27, i64 %30, i64 %31
  %33 = call zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %29, i64 %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2, %"class.std::__1::basic_string"* nonnull %3) #9
  %34 = load i8, i8* %25, align 1
  %35 = icmp slt i8 %34, 0
  %36 = load i8*, i8** %9, align 8
  %37 = load i64, i64* %10, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i8* %36, i8* %8
  %40 = select i1 %35, i64 %37, i64 %38
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %151, label %43

43:                                               ; preds = %2
  %44 = icmp ult i64 %40, 16
  br i1 %44, label %136, label %45

45:                                               ; preds = %43
  %46 = and i64 %40, -16
  %47 = getelementptr i8, i8* %39, i64 %46
  br label %48

48:                                               ; preds = %131, %45
  %49 = phi i64 [ 0, %45 ], [ %132, %131 ]
  %50 = getelementptr i8, i8* %39, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp eq <16 x i8> %52, <i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100, i8 100>
  %54 = extractelement <16 x i1> %53, i32 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %48
  store i8 46, i8* %50, align 1
  br label %56

56:                                               ; preds = %55, %48
  %57 = extractelement <16 x i1> %53, i32 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = or i64 %49, 1
  %60 = getelementptr i8, i8* %39, i64 %59
  store i8 46, i8* %60, align 1
  br label %61

61:                                               ; preds = %58, %56
  %62 = extractelement <16 x i1> %53, i32 2
  br i1 %62, label %63, label %66

63:                                               ; preds = %61
  %64 = or i64 %49, 2
  %65 = getelementptr i8, i8* %39, i64 %64
  store i8 46, i8* %65, align 1
  br label %66

66:                                               ; preds = %63, %61
  %67 = extractelement <16 x i1> %53, i32 3
  br i1 %67, label %68, label %71

68:                                               ; preds = %66
  %69 = or i64 %49, 3
  %70 = getelementptr i8, i8* %39, i64 %69
  store i8 46, i8* %70, align 1
  br label %71

71:                                               ; preds = %68, %66
  %72 = extractelement <16 x i1> %53, i32 4
  br i1 %72, label %73, label %76

73:                                               ; preds = %71
  %74 = or i64 %49, 4
  %75 = getelementptr i8, i8* %39, i64 %74
  store i8 46, i8* %75, align 1
  br label %76

76:                                               ; preds = %73, %71
  %77 = extractelement <16 x i1> %53, i32 5
  br i1 %77, label %78, label %81

78:                                               ; preds = %76
  %79 = or i64 %49, 5
  %80 = getelementptr i8, i8* %39, i64 %79
  store i8 46, i8* %80, align 1
  br label %81

81:                                               ; preds = %78, %76
  %82 = extractelement <16 x i1> %53, i32 6
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  %84 = or i64 %49, 6
  %85 = getelementptr i8, i8* %39, i64 %84
  store i8 46, i8* %85, align 1
  br label %86

86:                                               ; preds = %83, %81
  %87 = extractelement <16 x i1> %53, i32 7
  br i1 %87, label %88, label %91

88:                                               ; preds = %86
  %89 = or i64 %49, 7
  %90 = getelementptr i8, i8* %39, i64 %89
  store i8 46, i8* %90, align 1
  br label %91

91:                                               ; preds = %88, %86
  %92 = extractelement <16 x i1> %53, i32 8
  br i1 %92, label %93, label %96

93:                                               ; preds = %91
  %94 = or i64 %49, 8
  %95 = getelementptr i8, i8* %39, i64 %94
  store i8 46, i8* %95, align 1
  br label %96

96:                                               ; preds = %93, %91
  %97 = extractelement <16 x i1> %53, i32 9
  br i1 %97, label %98, label %101

98:                                               ; preds = %96
  %99 = or i64 %49, 9
  %100 = getelementptr i8, i8* %39, i64 %99
  store i8 46, i8* %100, align 1
  br label %101

101:                                              ; preds = %98, %96
  %102 = extractelement <16 x i1> %53, i32 10
  br i1 %102, label %103, label %106

103:                                              ; preds = %101
  %104 = or i64 %49, 10
  %105 = getelementptr i8, i8* %39, i64 %104
  store i8 46, i8* %105, align 1
  br label %106

106:                                              ; preds = %103, %101
  %107 = extractelement <16 x i1> %53, i32 11
  br i1 %107, label %108, label %111

108:                                              ; preds = %106
  %109 = or i64 %49, 11
  %110 = getelementptr i8, i8* %39, i64 %109
  store i8 46, i8* %110, align 1
  br label %111

111:                                              ; preds = %108, %106
  %112 = extractelement <16 x i1> %53, i32 12
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = or i64 %49, 12
  %115 = getelementptr i8, i8* %39, i64 %114
  store i8 46, i8* %115, align 1
  br label %116

116:                                              ; preds = %113, %111
  %117 = extractelement <16 x i1> %53, i32 13
  br i1 %117, label %118, label %121

118:                                              ; preds = %116
  %119 = or i64 %49, 13
  %120 = getelementptr i8, i8* %39, i64 %119
  store i8 46, i8* %120, align 1
  br label %121

121:                                              ; preds = %118, %116
  %122 = extractelement <16 x i1> %53, i32 14
  br i1 %122, label %123, label %126

123:                                              ; preds = %121
  %124 = or i64 %49, 14
  %125 = getelementptr i8, i8* %39, i64 %124
  store i8 46, i8* %125, align 1
  br label %126

126:                                              ; preds = %123, %121
  %127 = extractelement <16 x i1> %53, i32 15
  br i1 %127, label %128, label %131

128:                                              ; preds = %126
  %129 = or i64 %49, 15
  %130 = getelementptr i8, i8* %39, i64 %129
  store i8 46, i8* %130, align 1
  br label %131

131:                                              ; preds = %128, %126
  %132 = add i64 %49, 16
  %133 = icmp eq i64 %132, %46
  br i1 %133, label %134, label %48, !llvm.loop !94

134:                                              ; preds = %131
  %135 = icmp eq i64 %40, %46
  br i1 %135, label %146, label %136

136:                                              ; preds = %134, %43
  %137 = phi i8* [ %39, %43 ], [ %47, %134 ]
  br label %138

138:                                              ; preds = %136, %143
  %139 = phi i8* [ %144, %143 ], [ %137, %136 ]
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 100
  br i1 %141, label %142, label %143

142:                                              ; preds = %138
  store i8 46, i8* %139, align 1
  br label %143

143:                                              ; preds = %142, %138
  %144 = getelementptr inbounds i8, i8* %139, i64 1
  %145 = icmp eq i8* %144, %41
  br i1 %145, label %146, label %138, !llvm.loop !95

146:                                              ; preds = %143, %134
  %147 = load i8, i8* %25, align 1
  %148 = load i8*, i8** %9, align 8
  %149 = load i64, i64* %10, align 8
  %150 = zext i8 %147 to i64
  br label %151

151:                                              ; preds = %146, %2
  %152 = phi i64 [ %150, %146 ], [ %38, %2 ]
  %153 = phi i64 [ %149, %146 ], [ %37, %2 ]
  %154 = phi i8* [ %148, %146 ], [ %36, %2 ]
  %155 = phi i8 [ %147, %146 ], [ %34, %2 ]
  %156 = icmp slt i8 %155, 0
  %157 = select i1 %156, i8* %154, i8* %8
  %158 = select i1 %156, i64 %153, i64 %152
  %159 = getelementptr inbounds i8, i8* %157, i64 %158
  %160 = icmp eq i64 %158, 0
  br i1 %160, label %269, label %161

161:                                              ; preds = %151
  %162 = icmp ult i64 %158, 16
  br i1 %162, label %254, label %163

163:                                              ; preds = %161
  %164 = and i64 %158, -16
  %165 = getelementptr i8, i8* %157, i64 %164
  br label %166

166:                                              ; preds = %249, %163
  %167 = phi i64 [ 0, %163 ], [ %250, %249 ]
  %168 = getelementptr i8, i8* %157, i64 %167
  %169 = bitcast i8* %168 to <16 x i8>*
  %170 = load <16 x i8>, <16 x i8>* %169, align 1
  %171 = icmp eq <16 x i8> %170, <i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114, i8 114>
  %172 = extractelement <16 x i1> %171, i32 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  store i8 46, i8* %168, align 1
  br label %174

174:                                              ; preds = %173, %166
  %175 = extractelement <16 x i1> %171, i32 1
  br i1 %175, label %176, label %179

176:                                              ; preds = %174
  %177 = or i64 %167, 1
  %178 = getelementptr i8, i8* %157, i64 %177
  store i8 46, i8* %178, align 1
  br label %179

179:                                              ; preds = %176, %174
  %180 = extractelement <16 x i1> %171, i32 2
  br i1 %180, label %181, label %184

181:                                              ; preds = %179
  %182 = or i64 %167, 2
  %183 = getelementptr i8, i8* %157, i64 %182
  store i8 46, i8* %183, align 1
  br label %184

184:                                              ; preds = %181, %179
  %185 = extractelement <16 x i1> %171, i32 3
  br i1 %185, label %186, label %189

186:                                              ; preds = %184
  %187 = or i64 %167, 3
  %188 = getelementptr i8, i8* %157, i64 %187
  store i8 46, i8* %188, align 1
  br label %189

189:                                              ; preds = %186, %184
  %190 = extractelement <16 x i1> %171, i32 4
  br i1 %190, label %191, label %194

191:                                              ; preds = %189
  %192 = or i64 %167, 4
  %193 = getelementptr i8, i8* %157, i64 %192
  store i8 46, i8* %193, align 1
  br label %194

194:                                              ; preds = %191, %189
  %195 = extractelement <16 x i1> %171, i32 5
  br i1 %195, label %196, label %199

196:                                              ; preds = %194
  %197 = or i64 %167, 5
  %198 = getelementptr i8, i8* %157, i64 %197
  store i8 46, i8* %198, align 1
  br label %199

199:                                              ; preds = %196, %194
  %200 = extractelement <16 x i1> %171, i32 6
  br i1 %200, label %201, label %204

201:                                              ; preds = %199
  %202 = or i64 %167, 6
  %203 = getelementptr i8, i8* %157, i64 %202
  store i8 46, i8* %203, align 1
  br label %204

204:                                              ; preds = %201, %199
  %205 = extractelement <16 x i1> %171, i32 7
  br i1 %205, label %206, label %209

206:                                              ; preds = %204
  %207 = or i64 %167, 7
  %208 = getelementptr i8, i8* %157, i64 %207
  store i8 46, i8* %208, align 1
  br label %209

209:                                              ; preds = %206, %204
  %210 = extractelement <16 x i1> %171, i32 8
  br i1 %210, label %211, label %214

211:                                              ; preds = %209
  %212 = or i64 %167, 8
  %213 = getelementptr i8, i8* %157, i64 %212
  store i8 46, i8* %213, align 1
  br label %214

214:                                              ; preds = %211, %209
  %215 = extractelement <16 x i1> %171, i32 9
  br i1 %215, label %216, label %219

216:                                              ; preds = %214
  %217 = or i64 %167, 9
  %218 = getelementptr i8, i8* %157, i64 %217
  store i8 46, i8* %218, align 1
  br label %219

219:                                              ; preds = %216, %214
  %220 = extractelement <16 x i1> %171, i32 10
  br i1 %220, label %221, label %224

221:                                              ; preds = %219
  %222 = or i64 %167, 10
  %223 = getelementptr i8, i8* %157, i64 %222
  store i8 46, i8* %223, align 1
  br label %224

224:                                              ; preds = %221, %219
  %225 = extractelement <16 x i1> %171, i32 11
  br i1 %225, label %226, label %229

226:                                              ; preds = %224
  %227 = or i64 %167, 11
  %228 = getelementptr i8, i8* %157, i64 %227
  store i8 46, i8* %228, align 1
  br label %229

229:                                              ; preds = %226, %224
  %230 = extractelement <16 x i1> %171, i32 12
  br i1 %230, label %231, label %234

231:                                              ; preds = %229
  %232 = or i64 %167, 12
  %233 = getelementptr i8, i8* %157, i64 %232
  store i8 46, i8* %233, align 1
  br label %234

234:                                              ; preds = %231, %229
  %235 = extractelement <16 x i1> %171, i32 13
  br i1 %235, label %236, label %239

236:                                              ; preds = %234
  %237 = or i64 %167, 13
  %238 = getelementptr i8, i8* %157, i64 %237
  store i8 46, i8* %238, align 1
  br label %239

239:                                              ; preds = %236, %234
  %240 = extractelement <16 x i1> %171, i32 14
  br i1 %240, label %241, label %244

241:                                              ; preds = %239
  %242 = or i64 %167, 14
  %243 = getelementptr i8, i8* %157, i64 %242
  store i8 46, i8* %243, align 1
  br label %244

244:                                              ; preds = %241, %239
  %245 = extractelement <16 x i1> %171, i32 15
  br i1 %245, label %246, label %249

246:                                              ; preds = %244
  %247 = or i64 %167, 15
  %248 = getelementptr i8, i8* %157, i64 %247
  store i8 46, i8* %248, align 1
  br label %249

249:                                              ; preds = %246, %244
  %250 = add i64 %167, 16
  %251 = icmp eq i64 %250, %164
  br i1 %251, label %252, label %166, !llvm.loop !97

252:                                              ; preds = %249
  %253 = icmp eq i64 %158, %164
  br i1 %253, label %264, label %254

254:                                              ; preds = %252, %161
  %255 = phi i8* [ %157, %161 ], [ %165, %252 ]
  br label %256

256:                                              ; preds = %254, %261
  %257 = phi i8* [ %262, %261 ], [ %255, %254 ]
  %258 = load i8, i8* %257, align 1
  %259 = icmp eq i8 %258, 114
  br i1 %259, label %260, label %261

260:                                              ; preds = %256
  store i8 46, i8* %257, align 1
  br label %261

261:                                              ; preds = %260, %256
  %262 = getelementptr inbounds i8, i8* %257, i64 1
  %263 = icmp eq i8* %262, %159
  br i1 %263, label %264, label %256, !llvm.loop !98

264:                                              ; preds = %261, %252
  %265 = load i8, i8* %25, align 1
  %266 = load i8*, i8** %9, align 8
  %267 = load i64, i64* %10, align 8
  %268 = zext i8 %265 to i64
  br label %269

269:                                              ; preds = %264, %151
  %270 = phi i64 [ %268, %264 ], [ %152, %151 ]
  %271 = phi i64 [ %267, %264 ], [ %153, %151 ]
  %272 = phi i8* [ %266, %264 ], [ %154, %151 ]
  %273 = phi i8 [ %265, %264 ], [ %155, %151 ]
  %274 = icmp slt i8 %273, 0
  %275 = select i1 %274, i8* %272, i8* %8
  %276 = select i1 %274, i64 %271, i64 %270
  %277 = getelementptr inbounds i8, i8* %275, i64 %276
  %278 = icmp eq i64 %276, 0
  br i1 %278, label %387, label %279

279:                                              ; preds = %269
  %280 = icmp ult i64 %276, 16
  br i1 %280, label %372, label %281

281:                                              ; preds = %279
  %282 = and i64 %276, -16
  %283 = getelementptr i8, i8* %275, i64 %282
  br label %284

284:                                              ; preds = %367, %281
  %285 = phi i64 [ 0, %281 ], [ %368, %367 ]
  %286 = getelementptr i8, i8* %275, i64 %285
  %287 = bitcast i8* %286 to <16 x i8>*
  %288 = load <16 x i8>, <16 x i8>* %287, align 1
  %289 = icmp eq <16 x i8> %288, <i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44, i8 44>
  %290 = extractelement <16 x i1> %289, i32 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %284
  store i8 46, i8* %286, align 1
  br label %292

292:                                              ; preds = %291, %284
  %293 = extractelement <16 x i1> %289, i32 1
  br i1 %293, label %294, label %297

294:                                              ; preds = %292
  %295 = or i64 %285, 1
  %296 = getelementptr i8, i8* %275, i64 %295
  store i8 46, i8* %296, align 1
  br label %297

297:                                              ; preds = %294, %292
  %298 = extractelement <16 x i1> %289, i32 2
  br i1 %298, label %299, label %302

299:                                              ; preds = %297
  %300 = or i64 %285, 2
  %301 = getelementptr i8, i8* %275, i64 %300
  store i8 46, i8* %301, align 1
  br label %302

302:                                              ; preds = %299, %297
  %303 = extractelement <16 x i1> %289, i32 3
  br i1 %303, label %304, label %307

304:                                              ; preds = %302
  %305 = or i64 %285, 3
  %306 = getelementptr i8, i8* %275, i64 %305
  store i8 46, i8* %306, align 1
  br label %307

307:                                              ; preds = %304, %302
  %308 = extractelement <16 x i1> %289, i32 4
  br i1 %308, label %309, label %312

309:                                              ; preds = %307
  %310 = or i64 %285, 4
  %311 = getelementptr i8, i8* %275, i64 %310
  store i8 46, i8* %311, align 1
  br label %312

312:                                              ; preds = %309, %307
  %313 = extractelement <16 x i1> %289, i32 5
  br i1 %313, label %314, label %317

314:                                              ; preds = %312
  %315 = or i64 %285, 5
  %316 = getelementptr i8, i8* %275, i64 %315
  store i8 46, i8* %316, align 1
  br label %317

317:                                              ; preds = %314, %312
  %318 = extractelement <16 x i1> %289, i32 6
  br i1 %318, label %319, label %322

319:                                              ; preds = %317
  %320 = or i64 %285, 6
  %321 = getelementptr i8, i8* %275, i64 %320
  store i8 46, i8* %321, align 1
  br label %322

322:                                              ; preds = %319, %317
  %323 = extractelement <16 x i1> %289, i32 7
  br i1 %323, label %324, label %327

324:                                              ; preds = %322
  %325 = or i64 %285, 7
  %326 = getelementptr i8, i8* %275, i64 %325
  store i8 46, i8* %326, align 1
  br label %327

327:                                              ; preds = %324, %322
  %328 = extractelement <16 x i1> %289, i32 8
  br i1 %328, label %329, label %332

329:                                              ; preds = %327
  %330 = or i64 %285, 8
  %331 = getelementptr i8, i8* %275, i64 %330
  store i8 46, i8* %331, align 1
  br label %332

332:                                              ; preds = %329, %327
  %333 = extractelement <16 x i1> %289, i32 9
  br i1 %333, label %334, label %337

334:                                              ; preds = %332
  %335 = or i64 %285, 9
  %336 = getelementptr i8, i8* %275, i64 %335
  store i8 46, i8* %336, align 1
  br label %337

337:                                              ; preds = %334, %332
  %338 = extractelement <16 x i1> %289, i32 10
  br i1 %338, label %339, label %342

339:                                              ; preds = %337
  %340 = or i64 %285, 10
  %341 = getelementptr i8, i8* %275, i64 %340
  store i8 46, i8* %341, align 1
  br label %342

342:                                              ; preds = %339, %337
  %343 = extractelement <16 x i1> %289, i32 11
  br i1 %343, label %344, label %347

344:                                              ; preds = %342
  %345 = or i64 %285, 11
  %346 = getelementptr i8, i8* %275, i64 %345
  store i8 46, i8* %346, align 1
  br label %347

347:                                              ; preds = %344, %342
  %348 = extractelement <16 x i1> %289, i32 12
  br i1 %348, label %349, label %352

349:                                              ; preds = %347
  %350 = or i64 %285, 12
  %351 = getelementptr i8, i8* %275, i64 %350
  store i8 46, i8* %351, align 1
  br label %352

352:                                              ; preds = %349, %347
  %353 = extractelement <16 x i1> %289, i32 13
  br i1 %353, label %354, label %357

354:                                              ; preds = %352
  %355 = or i64 %285, 13
  %356 = getelementptr i8, i8* %275, i64 %355
  store i8 46, i8* %356, align 1
  br label %357

357:                                              ; preds = %354, %352
  %358 = extractelement <16 x i1> %289, i32 14
  br i1 %358, label %359, label %362

359:                                              ; preds = %357
  %360 = or i64 %285, 14
  %361 = getelementptr i8, i8* %275, i64 %360
  store i8 46, i8* %361, align 1
  br label %362

362:                                              ; preds = %359, %357
  %363 = extractelement <16 x i1> %289, i32 15
  br i1 %363, label %364, label %367

364:                                              ; preds = %362
  %365 = or i64 %285, 15
  %366 = getelementptr i8, i8* %275, i64 %365
  store i8 46, i8* %366, align 1
  br label %367

367:                                              ; preds = %364, %362
  %368 = add i64 %285, 16
  %369 = icmp eq i64 %368, %282
  br i1 %369, label %370, label %284, !llvm.loop !99

370:                                              ; preds = %367
  %371 = icmp eq i64 %276, %282
  br i1 %371, label %382, label %372

372:                                              ; preds = %370, %279
  %373 = phi i8* [ %275, %279 ], [ %283, %370 ]
  br label %374

374:                                              ; preds = %372, %379
  %375 = phi i8* [ %380, %379 ], [ %373, %372 ]
  %376 = load i8, i8* %375, align 1
  %377 = icmp eq i8 %376, 44
  br i1 %377, label %378, label %379

378:                                              ; preds = %374
  store i8 46, i8* %375, align 1
  br label %379

379:                                              ; preds = %378, %374
  %380 = getelementptr inbounds i8, i8* %375, i64 1
  %381 = icmp eq i8* %380, %277
  br i1 %381, label %382, label %374, !llvm.loop !100

382:                                              ; preds = %379, %370
  %383 = load i8, i8* %25, align 1
  %384 = load i8*, i8** %9, align 8
  %385 = load i64, i64* %10, align 8
  %386 = zext i8 %383 to i64
  br label %387

387:                                              ; preds = %382, %269
  %388 = phi i64 [ %386, %382 ], [ %270, %269 ]
  %389 = phi i64 [ %385, %382 ], [ %271, %269 ]
  %390 = phi i8* [ %384, %382 ], [ %272, %269 ]
  %391 = phi i8 [ %383, %382 ], [ %273, %269 ]
  %392 = icmp slt i8 %391, 0
  %393 = select i1 %392, i8* %390, i8* %8
  %394 = select i1 %392, i64 %389, i64 %388
  %395 = getelementptr inbounds i8, i8* %393, i64 %394
  %396 = icmp eq i64 %394, 0
  br i1 %396, label %505, label %397

397:                                              ; preds = %387
  %398 = icmp ult i64 %394, 16
  br i1 %398, label %490, label %399

399:                                              ; preds = %397
  %400 = and i64 %394, -16
  %401 = getelementptr i8, i8* %393, i64 %400
  br label %402

402:                                              ; preds = %485, %399
  %403 = phi i64 [ 0, %399 ], [ %486, %485 ]
  %404 = getelementptr i8, i8* %393, i64 %403
  %405 = bitcast i8* %404 to <16 x i8>*
  %406 = load <16 x i8>, <16 x i8>* %405, align 1
  %407 = icmp eq <16 x i8> %406, <i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40, i8 40>
  %408 = extractelement <16 x i1> %407, i32 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %402
  store i8 46, i8* %404, align 1
  br label %410

410:                                              ; preds = %409, %402
  %411 = extractelement <16 x i1> %407, i32 1
  br i1 %411, label %412, label %415

412:                                              ; preds = %410
  %413 = or i64 %403, 1
  %414 = getelementptr i8, i8* %393, i64 %413
  store i8 46, i8* %414, align 1
  br label %415

415:                                              ; preds = %412, %410
  %416 = extractelement <16 x i1> %407, i32 2
  br i1 %416, label %417, label %420

417:                                              ; preds = %415
  %418 = or i64 %403, 2
  %419 = getelementptr i8, i8* %393, i64 %418
  store i8 46, i8* %419, align 1
  br label %420

420:                                              ; preds = %417, %415
  %421 = extractelement <16 x i1> %407, i32 3
  br i1 %421, label %422, label %425

422:                                              ; preds = %420
  %423 = or i64 %403, 3
  %424 = getelementptr i8, i8* %393, i64 %423
  store i8 46, i8* %424, align 1
  br label %425

425:                                              ; preds = %422, %420
  %426 = extractelement <16 x i1> %407, i32 4
  br i1 %426, label %427, label %430

427:                                              ; preds = %425
  %428 = or i64 %403, 4
  %429 = getelementptr i8, i8* %393, i64 %428
  store i8 46, i8* %429, align 1
  br label %430

430:                                              ; preds = %427, %425
  %431 = extractelement <16 x i1> %407, i32 5
  br i1 %431, label %432, label %435

432:                                              ; preds = %430
  %433 = or i64 %403, 5
  %434 = getelementptr i8, i8* %393, i64 %433
  store i8 46, i8* %434, align 1
  br label %435

435:                                              ; preds = %432, %430
  %436 = extractelement <16 x i1> %407, i32 6
  br i1 %436, label %437, label %440

437:                                              ; preds = %435
  %438 = or i64 %403, 6
  %439 = getelementptr i8, i8* %393, i64 %438
  store i8 46, i8* %439, align 1
  br label %440

440:                                              ; preds = %437, %435
  %441 = extractelement <16 x i1> %407, i32 7
  br i1 %441, label %442, label %445

442:                                              ; preds = %440
  %443 = or i64 %403, 7
  %444 = getelementptr i8, i8* %393, i64 %443
  store i8 46, i8* %444, align 1
  br label %445

445:                                              ; preds = %442, %440
  %446 = extractelement <16 x i1> %407, i32 8
  br i1 %446, label %447, label %450

447:                                              ; preds = %445
  %448 = or i64 %403, 8
  %449 = getelementptr i8, i8* %393, i64 %448
  store i8 46, i8* %449, align 1
  br label %450

450:                                              ; preds = %447, %445
  %451 = extractelement <16 x i1> %407, i32 9
  br i1 %451, label %452, label %455

452:                                              ; preds = %450
  %453 = or i64 %403, 9
  %454 = getelementptr i8, i8* %393, i64 %453
  store i8 46, i8* %454, align 1
  br label %455

455:                                              ; preds = %452, %450
  %456 = extractelement <16 x i1> %407, i32 10
  br i1 %456, label %457, label %460

457:                                              ; preds = %455
  %458 = or i64 %403, 10
  %459 = getelementptr i8, i8* %393, i64 %458
  store i8 46, i8* %459, align 1
  br label %460

460:                                              ; preds = %457, %455
  %461 = extractelement <16 x i1> %407, i32 11
  br i1 %461, label %462, label %465

462:                                              ; preds = %460
  %463 = or i64 %403, 11
  %464 = getelementptr i8, i8* %393, i64 %463
  store i8 46, i8* %464, align 1
  br label %465

465:                                              ; preds = %462, %460
  %466 = extractelement <16 x i1> %407, i32 12
  br i1 %466, label %467, label %470

467:                                              ; preds = %465
  %468 = or i64 %403, 12
  %469 = getelementptr i8, i8* %393, i64 %468
  store i8 46, i8* %469, align 1
  br label %470

470:                                              ; preds = %467, %465
  %471 = extractelement <16 x i1> %407, i32 13
  br i1 %471, label %472, label %475

472:                                              ; preds = %470
  %473 = or i64 %403, 13
  %474 = getelementptr i8, i8* %393, i64 %473
  store i8 46, i8* %474, align 1
  br label %475

475:                                              ; preds = %472, %470
  %476 = extractelement <16 x i1> %407, i32 14
  br i1 %476, label %477, label %480

477:                                              ; preds = %475
  %478 = or i64 %403, 14
  %479 = getelementptr i8, i8* %393, i64 %478
  store i8 46, i8* %479, align 1
  br label %480

480:                                              ; preds = %477, %475
  %481 = extractelement <16 x i1> %407, i32 15
  br i1 %481, label %482, label %485

482:                                              ; preds = %480
  %483 = or i64 %403, 15
  %484 = getelementptr i8, i8* %393, i64 %483
  store i8 46, i8* %484, align 1
  br label %485

485:                                              ; preds = %482, %480
  %486 = add i64 %403, 16
  %487 = icmp eq i64 %486, %400
  br i1 %487, label %488, label %402, !llvm.loop !101

488:                                              ; preds = %485
  %489 = icmp eq i64 %394, %400
  br i1 %489, label %500, label %490

490:                                              ; preds = %488, %397
  %491 = phi i8* [ %393, %397 ], [ %401, %488 ]
  br label %492

492:                                              ; preds = %490, %497
  %493 = phi i8* [ %498, %497 ], [ %491, %490 ]
  %494 = load i8, i8* %493, align 1
  %495 = icmp eq i8 %494, 40
  br i1 %495, label %496, label %497

496:                                              ; preds = %492
  store i8 46, i8* %493, align 1
  br label %497

497:                                              ; preds = %496, %492
  %498 = getelementptr inbounds i8, i8* %493, i64 1
  %499 = icmp eq i8* %498, %395
  br i1 %499, label %500, label %492, !llvm.loop !102

500:                                              ; preds = %497, %488
  %501 = load i8, i8* %25, align 1
  %502 = load i8*, i8** %9, align 8
  %503 = load i64, i64* %10, align 8
  %504 = zext i8 %501 to i64
  br label %505

505:                                              ; preds = %500, %387
  %506 = phi i64 [ %504, %500 ], [ %388, %387 ]
  %507 = phi i64 [ %503, %500 ], [ %389, %387 ]
  %508 = phi i8* [ %502, %500 ], [ %390, %387 ]
  %509 = phi i8 [ %501, %500 ], [ %391, %387 ]
  %510 = icmp slt i8 %509, 0
  %511 = select i1 %510, i8* %508, i8* %8
  %512 = select i1 %510, i64 %507, i64 %506
  %513 = getelementptr inbounds i8, i8* %511, i64 %512
  %514 = icmp eq i64 %512, 0
  br i1 %514, label %623, label %515

515:                                              ; preds = %505
  %516 = icmp ult i64 %512, 16
  br i1 %516, label %608, label %517

517:                                              ; preds = %515
  %518 = and i64 %512, -16
  %519 = getelementptr i8, i8* %511, i64 %518
  br label %520

520:                                              ; preds = %603, %517
  %521 = phi i64 [ 0, %517 ], [ %604, %603 ]
  %522 = getelementptr i8, i8* %511, i64 %521
  %523 = bitcast i8* %522 to <16 x i8>*
  %524 = load <16 x i8>, <16 x i8>* %523, align 1
  %525 = icmp eq <16 x i8> %524, <i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95>
  %526 = extractelement <16 x i1> %525, i32 0
  br i1 %526, label %527, label %528

527:                                              ; preds = %520
  store i8 46, i8* %522, align 1
  br label %528

528:                                              ; preds = %527, %520
  %529 = extractelement <16 x i1> %525, i32 1
  br i1 %529, label %530, label %533

530:                                              ; preds = %528
  %531 = or i64 %521, 1
  %532 = getelementptr i8, i8* %511, i64 %531
  store i8 46, i8* %532, align 1
  br label %533

533:                                              ; preds = %530, %528
  %534 = extractelement <16 x i1> %525, i32 2
  br i1 %534, label %535, label %538

535:                                              ; preds = %533
  %536 = or i64 %521, 2
  %537 = getelementptr i8, i8* %511, i64 %536
  store i8 46, i8* %537, align 1
  br label %538

538:                                              ; preds = %535, %533
  %539 = extractelement <16 x i1> %525, i32 3
  br i1 %539, label %540, label %543

540:                                              ; preds = %538
  %541 = or i64 %521, 3
  %542 = getelementptr i8, i8* %511, i64 %541
  store i8 46, i8* %542, align 1
  br label %543

543:                                              ; preds = %540, %538
  %544 = extractelement <16 x i1> %525, i32 4
  br i1 %544, label %545, label %548

545:                                              ; preds = %543
  %546 = or i64 %521, 4
  %547 = getelementptr i8, i8* %511, i64 %546
  store i8 46, i8* %547, align 1
  br label %548

548:                                              ; preds = %545, %543
  %549 = extractelement <16 x i1> %525, i32 5
  br i1 %549, label %550, label %553

550:                                              ; preds = %548
  %551 = or i64 %521, 5
  %552 = getelementptr i8, i8* %511, i64 %551
  store i8 46, i8* %552, align 1
  br label %553

553:                                              ; preds = %550, %548
  %554 = extractelement <16 x i1> %525, i32 6
  br i1 %554, label %555, label %558

555:                                              ; preds = %553
  %556 = or i64 %521, 6
  %557 = getelementptr i8, i8* %511, i64 %556
  store i8 46, i8* %557, align 1
  br label %558

558:                                              ; preds = %555, %553
  %559 = extractelement <16 x i1> %525, i32 7
  br i1 %559, label %560, label %563

560:                                              ; preds = %558
  %561 = or i64 %521, 7
  %562 = getelementptr i8, i8* %511, i64 %561
  store i8 46, i8* %562, align 1
  br label %563

563:                                              ; preds = %560, %558
  %564 = extractelement <16 x i1> %525, i32 8
  br i1 %564, label %565, label %568

565:                                              ; preds = %563
  %566 = or i64 %521, 8
  %567 = getelementptr i8, i8* %511, i64 %566
  store i8 46, i8* %567, align 1
  br label %568

568:                                              ; preds = %565, %563
  %569 = extractelement <16 x i1> %525, i32 9
  br i1 %569, label %570, label %573

570:                                              ; preds = %568
  %571 = or i64 %521, 9
  %572 = getelementptr i8, i8* %511, i64 %571
  store i8 46, i8* %572, align 1
  br label %573

573:                                              ; preds = %570, %568
  %574 = extractelement <16 x i1> %525, i32 10
  br i1 %574, label %575, label %578

575:                                              ; preds = %573
  %576 = or i64 %521, 10
  %577 = getelementptr i8, i8* %511, i64 %576
  store i8 46, i8* %577, align 1
  br label %578

578:                                              ; preds = %575, %573
  %579 = extractelement <16 x i1> %525, i32 11
  br i1 %579, label %580, label %583

580:                                              ; preds = %578
  %581 = or i64 %521, 11
  %582 = getelementptr i8, i8* %511, i64 %581
  store i8 46, i8* %582, align 1
  br label %583

583:                                              ; preds = %580, %578
  %584 = extractelement <16 x i1> %525, i32 12
  br i1 %584, label %585, label %588

585:                                              ; preds = %583
  %586 = or i64 %521, 12
  %587 = getelementptr i8, i8* %511, i64 %586
  store i8 46, i8* %587, align 1
  br label %588

588:                                              ; preds = %585, %583
  %589 = extractelement <16 x i1> %525, i32 13
  br i1 %589, label %590, label %593

590:                                              ; preds = %588
  %591 = or i64 %521, 13
  %592 = getelementptr i8, i8* %511, i64 %591
  store i8 46, i8* %592, align 1
  br label %593

593:                                              ; preds = %590, %588
  %594 = extractelement <16 x i1> %525, i32 14
  br i1 %594, label %595, label %598

595:                                              ; preds = %593
  %596 = or i64 %521, 14
  %597 = getelementptr i8, i8* %511, i64 %596
  store i8 46, i8* %597, align 1
  br label %598

598:                                              ; preds = %595, %593
  %599 = extractelement <16 x i1> %525, i32 15
  br i1 %599, label %600, label %603

600:                                              ; preds = %598
  %601 = or i64 %521, 15
  %602 = getelementptr i8, i8* %511, i64 %601
  store i8 46, i8* %602, align 1
  br label %603

603:                                              ; preds = %600, %598
  %604 = add i64 %521, 16
  %605 = icmp eq i64 %604, %518
  br i1 %605, label %606, label %520, !llvm.loop !103

606:                                              ; preds = %603
  %607 = icmp eq i64 %512, %518
  br i1 %607, label %618, label %608

608:                                              ; preds = %606, %515
  %609 = phi i8* [ %511, %515 ], [ %519, %606 ]
  br label %610

610:                                              ; preds = %608, %615
  %611 = phi i8* [ %616, %615 ], [ %609, %608 ]
  %612 = load i8, i8* %611, align 1
  %613 = icmp eq i8 %612, 95
  br i1 %613, label %614, label %615

614:                                              ; preds = %610
  store i8 46, i8* %611, align 1
  br label %615

615:                                              ; preds = %614, %610
  %616 = getelementptr inbounds i8, i8* %611, i64 1
  %617 = icmp eq i8* %616, %513
  br i1 %617, label %618, label %610, !llvm.loop !104

618:                                              ; preds = %615, %606
  %619 = load i8, i8* %25, align 1
  %620 = load i8*, i8** %9, align 8
  %621 = load i64, i64* %10, align 8
  %622 = zext i8 %619 to i64
  br label %623

623:                                              ; preds = %618, %505
  %624 = phi i64 [ %622, %618 ], [ %506, %505 ]
  %625 = phi i64 [ %621, %618 ], [ %507, %505 ]
  %626 = phi i8* [ %620, %618 ], [ %508, %505 ]
  %627 = phi i8 [ %619, %618 ], [ %509, %505 ]
  %628 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %628) #9
  %629 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %630 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %628, i8 0, i64 24, i1 false) #9
  %631 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %631) #9
  %632 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %633 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %634 = icmp slt i8 %627, 0
  %635 = select i1 %634, i8* %626, i8* %8
  %636 = select i1 %634, i64 %625, i64 %624
  %637 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %637, i8 -86, i64 24, i1 false)
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %5, i8* %635, i64 %636, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 1, i32 0) #9
  %638 = bitcast %"class.std::__1::basic_string"** %633 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = bitcast %"class.std::__1::vector"* %5 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = icmp eq i64 %639, %641
  br i1 %642, label %650, label %643

643:                                              ; preds = %623
  %644 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %645 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %646 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %645, i64 0, i32 1, i32 0
  %647 = getelementptr inbounds i8, i8* %644, i64 1
  %648 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %703

650:                                              ; preds = %765, %623
  %651 = bitcast %"class.base::Version"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %651) #9
  %652 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %653 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %652, i64 0, i32 1, i32 0
  %654 = load i8, i8* %653, align 1
  %655 = icmp slt i8 %654, 0
  %656 = load i8*, i8** %629, align 8
  %657 = select i1 %655, i8* %656, i8* %628
  %658 = load i64, i64* %630, align 8
  %659 = zext i8 %654 to i64
  %660 = select i1 %655, i64 %658, i64 %659
  call void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nonnull %7, i8* %657, i64 %660) #9
  %661 = icmp eq %"class.base::Version"* %7, %1
  br i1 %661, label %668, label %662

662:                                              ; preds = %650
  %663 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0
  %664 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %7, i64 0, i32 0, i32 0, i32 0
  %665 = load i32*, i32** %664, align 8
  %666 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %7, i64 0, i32 0, i32 0, i32 1
  %667 = load i32*, i32** %666, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.29"* %663, i32* %665, i32* %667) #9
  br label %668

668:                                              ; preds = %650, %662
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %651) #9
  %669 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %632, align 8
  %670 = icmp eq %"class.std::__1::basic_string"* %669, null
  br i1 %670, label %692, label %671

671:                                              ; preds = %668
  %672 = bitcast %"class.std::__1::basic_string"* %669 to i8*
  %673 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %633, align 8
  %674 = icmp eq %"class.std::__1::basic_string"* %673, %669
  br i1 %674, label %690, label %675

675:                                              ; preds = %671, %685
  %676 = phi %"class.std::__1::basic_string"* [ %677, %685 ], [ %673, %671 ]
  %677 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %676, i64 -1
  %678 = bitcast %"class.std::__1::basic_string"* %677 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %679 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %678, i64 0, i32 1, i32 0
  %680 = load i8, i8* %679, align 1
  %681 = icmp slt i8 %680, 0
  br i1 %681, label %682, label %685

682:                                              ; preds = %675
  %683 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %677, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %684 = load i8*, i8** %683, align 8
  call void @_ZdlPv(i8* %684) #11
  br label %685

685:                                              ; preds = %682, %675
  %686 = icmp eq %"class.std::__1::basic_string"* %677, %669
  br i1 %686, label %687, label %675

687:                                              ; preds = %685
  %688 = bitcast %"class.std::__1::vector"* %5 to i8**
  %689 = load i8*, i8** %688, align 8
  br label %690

690:                                              ; preds = %687, %671
  %691 = phi i8* [ %689, %687 ], [ %672, %671 ]
  store %"class.std::__1::basic_string"* %669, %"class.std::__1::basic_string"** %633, align 8
  call void @_ZdlPv(i8* %691) #11
  br label %692

692:                                              ; preds = %668, %690
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %631) #9
  %693 = load i8, i8* %653, align 1
  %694 = icmp slt i8 %693, 0
  br i1 %694, label %695, label %697

695:                                              ; preds = %692
  %696 = load i8*, i8** %629, align 8
  call void @_ZdlPv(i8* %696) #11
  br label %697

697:                                              ; preds = %692, %695
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %628) #9
  %698 = load i8, i8* %25, align 1
  %699 = icmp slt i8 %698, 0
  br i1 %699, label %700, label %702

700:                                              ; preds = %697
  %701 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %701) #11
  br label %702

702:                                              ; preds = %697, %700
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void

703:                                              ; preds = %643, %765
  %704 = phi i64 [ %641, %643 ], [ %767, %765 ]
  %705 = phi i64 [ 0, %643 ], [ %768, %765 ]
  %706 = inttoptr i64 %704 to %"class.std::__1::basic_string"*
  %707 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %706, i64 %705
  %708 = bitcast %"class.std::__1::basic_string"* %707 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %709 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %708, i64 0, i32 1, i32 0
  %710 = load i8, i8* %709, align 1
  %711 = icmp slt i8 %710, 0
  br i1 %711, label %712, label %715

712:                                              ; preds = %703
  %713 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %706, i64 %705, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %714 = load i64, i64* %713, align 8
  br label %717

715:                                              ; preds = %703
  %716 = zext i8 %710 to i64
  br label %717

717:                                              ; preds = %712, %715
  %718 = phi i64 [ %714, %712 ], [ %716, %715 ]
  %719 = icmp eq i64 %718, 0
  br i1 %719, label %738, label %720

720:                                              ; preds = %717
  %721 = bitcast %"class.std::__1::basic_string"* %707 to i8*
  %722 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %707, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %723

723:                                              ; preds = %732, %720
  %724 = phi i64 [ 0, %720 ], [ %733, %732 ]
  br i1 %711, label %725, label %727

725:                                              ; preds = %723
  %726 = load i8*, i8** %722, align 8
  br label %727

727:                                              ; preds = %723, %725
  %728 = phi i8* [ %726, %725 ], [ %721, %723 ]
  %729 = getelementptr inbounds i8, i8* %728, i64 %724
  %730 = load i8, i8* %729, align 1
  %731 = icmp eq i8 %730, 48
  br i1 %731, label %732, label %735

732:                                              ; preds = %727
  %733 = add nuw i64 %724, 1
  %734 = icmp eq i64 %733, %718
  br i1 %734, label %738, label %723

735:                                              ; preds = %727
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %644) #9
  %736 = bitcast %"class.std::__1::basic_string"* %707 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %707, i64 %724, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %736) #9
  %737 = load i8, i8* %646, align 1
  br label %739

738:                                              ; preds = %732, %717
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %644) #9
  store i8 1, i8* %646, align 1
  store i8 48, i8* %644, align 8
  store i8 0, i8* %647, align 1
  br label %739

739:                                              ; preds = %738, %735
  %740 = phi i8 [ 1, %738 ], [ %737, %735 ]
  %741 = icmp slt i8 %740, 0
  %742 = load i8*, i8** %648, align 8
  %743 = load i64, i64* %649, align 8
  %744 = zext i8 %740 to i64
  %745 = select i1 %741, i8* %742, i8* %644
  %746 = select i1 %741, i64 %743, i64 %744
  %747 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %745, i64 %746) #9
  %748 = load i8, i8* %646, align 1
  %749 = icmp slt i8 %748, 0
  br i1 %749, label %750, label %752

750:                                              ; preds = %739
  %751 = load i8*, i8** %648, align 8
  call void @_ZdlPv(i8* %751) #11
  br label %752

752:                                              ; preds = %739, %750
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %644) #9
  %753 = load i64, i64* %638, align 8
  %754 = load i64, i64* %640, align 8
  %755 = sub i64 %753, %754
  %756 = sdiv exact i64 %755, 24
  %757 = add nsw i64 %756, -1
  %758 = icmp eq i64 %705, %757
  br i1 %758, label %765, label %759

759:                                              ; preds = %752
  %760 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #9
  %761 = load i64, i64* %638, align 8
  %762 = load i64, i64* %640, align 8
  %763 = sub i64 %761, %762
  %764 = sdiv exact i64 %763, 24
  br label %765

765:                                              ; preds = %752, %759
  %766 = phi i64 [ %756, %752 ], [ %764, %759 ]
  %767 = phi i64 [ %754, %752 ], [ %762, %759 ]
  %768 = add nuw i64 %705, 1
  %769 = icmp ult i64 %768, %766
  br i1 %769, label %703, label %650
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base7VersionD1Ev(%"class.base::Version"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.29"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  %55 = bitcast %"class.std::__1::vector.29"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #10
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #10
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.29"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #9
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #9
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #9
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content17WebPluginMimeType5ParamC2ERKS1_(%"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"* dereferenceable(48)) unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"struct.content::WebPluginMimeType::Param"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.content::WebPluginMimeType::Param"* %0 to i8*
  %9 = bitcast %"struct.content::WebPluginMimeType::Param"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #9
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.content::WebPluginMimeType::Param"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.content::WebPluginMimeType::Param"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.content::WebPluginMimeType::Param"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #10
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #10
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.content::WebPluginMimeType::Param"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !105
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !105
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !108, !noalias !105
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !108, !noalias !105
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !105
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !105
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !108, !noalias !105
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !108, !noalias !105
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !105
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !105
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !108, !noalias !105
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !108, !noalias !105
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !105
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !105
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !108, !noalias !105
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !108, !noalias !105
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !110

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !105
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !105
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !108, !noalias !105
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !108, !noalias !105
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !111

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !112

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !113

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string.6"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string.6"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string.6"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #9
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string.6"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string.6"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string.6"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #10
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #10
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #11
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string.6"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !114
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !114
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !117, !noalias !114
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !117, !noalias !114
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !114
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !114
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !117, !noalias !114
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !117, !noalias !114
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !114
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !114
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !117, !noalias !114
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !117, !noalias !114
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !114
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !114
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !117, !noalias !114
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !117, !noalias !114
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !119

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !114
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !114
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !117, !noalias !114
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !117, !noalias !114
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !120

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !121

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !122

370:                                              ; preds = %335, %340, %315, %192
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.6"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.6"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #10
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.6"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.6"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #10
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !123
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !123
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !126, !noalias !123
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !126, !noalias !123
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !123
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !123
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !126, !noalias !123
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !126, !noalias !123
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !123
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !123
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !126, !noalias !123
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !126, !noalias !123
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !123
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !123
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !126, !noalias !123
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !126, !noalias !123
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !128

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !123
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !123
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !126, !noalias !123
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !126, !noalias !123
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !129

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !130

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !131

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !132

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !133

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !134

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !135
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !135
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !138, !noalias !135
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !138, !noalias !135
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !135
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !135
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !138, !noalias !135
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !138, !noalias !135
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !135
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !135
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !138, !noalias !135
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !138, !noalias !135
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !135
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !135
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !138, !noalias !135
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !138, !noalias !135
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !140

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !135
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !135
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !138, !noalias !135
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !138, !noalias !135
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !141

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !142

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !143

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.6"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7content17WebPluginMimeTypeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"*, %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.content::WebPluginMimeType"* %2 to i64
  %5 = ptrtoint %"struct.content::WebPluginMimeType"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 96
  %8 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.content::WebPluginMimeType"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 96
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.content::WebPluginMimeType"*
  br i1 %15, label %50, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.content::WebPluginMimeType"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 96
  %23 = icmp ugt i64 %7, %22
  br i1 %23, label %24, label %41

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %1, i64 %22
  %26 = tail call %"struct.content::WebPluginMimeType"* @_ZNSt3__116__copy_constexprIPN7content17WebPluginMimeTypeES3_EET0_T_S5_S4_(%"struct.content::WebPluginMimeType"* %1, %"struct.content::WebPluginMimeType"* %25, %"struct.content::WebPluginMimeType"* %16) #9
  %27 = load i64, i64* %19, align 8
  %28 = icmp eq %"struct.content::WebPluginMimeType"* %25, %2
  br i1 %28, label %39, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to %"struct.content::WebPluginMimeType"*
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi %"struct.content::WebPluginMimeType"* [ %35, %31 ], [ %30, %29 ]
  %33 = phi %"struct.content::WebPluginMimeType"* [ %34, %31 ], [ %25, %29 ]
  tail call void @_ZN7content17WebPluginMimeTypeC2ERKS0_(%"struct.content::WebPluginMimeType"* %32, %"struct.content::WebPluginMimeType"* dereferenceable(96) %33) #9
  %34 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %33, i64 1
  %35 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %32, i64 1
  %36 = icmp eq %"struct.content::WebPluginMimeType"* %34, %2
  br i1 %36, label %37, label %31

37:                                               ; preds = %31
  %38 = ptrtoint %"struct.content::WebPluginMimeType"* %35 to i64
  br label %39

39:                                               ; preds = %24, %37
  %40 = phi i64 [ %27, %24 ], [ %38, %37 ]
  store i64 %40, i64* %19, align 8
  br label %101

41:                                               ; preds = %17
  %42 = tail call %"struct.content::WebPluginMimeType"* @_ZNSt3__116__copy_constexprIPN7content17WebPluginMimeTypeES3_EET0_T_S5_S4_(%"struct.content::WebPluginMimeType"* %1, %"struct.content::WebPluginMimeType"* %2, %"struct.content::WebPluginMimeType"* %16) #9
  %43 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %18, align 8
  %44 = icmp eq %"struct.content::WebPluginMimeType"* %43, %42
  br i1 %44, label %49, label %45

45:                                               ; preds = %41, %45
  %46 = phi %"struct.content::WebPluginMimeType"* [ %47, %45 ], [ %43, %41 ]
  %47 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %46, i64 -1
  tail call void @_ZN7content17WebPluginMimeTypeD2Ev(%"struct.content::WebPluginMimeType"* %47) #9
  %48 = icmp eq %"struct.content::WebPluginMimeType"* %47, %42
  br i1 %48, label %49, label %45

49:                                               ; preds = %45, %41
  store %"struct.content::WebPluginMimeType"* %42, %"struct.content::WebPluginMimeType"** %18, align 8
  br label %101

50:                                               ; preds = %3
  %51 = icmp eq i64 %12, 0
  br i1 %51, label %67, label %52

52:                                               ; preds = %50
  %53 = inttoptr i64 %12 to i8*
  %54 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %55 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %54, align 8
  %56 = icmp eq %"struct.content::WebPluginMimeType"* %55, %16
  br i1 %56, label %64, label %57

57:                                               ; preds = %52, %57
  %58 = phi %"struct.content::WebPluginMimeType"* [ %59, %57 ], [ %55, %52 ]
  %59 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %58, i64 -1
  tail call void @_ZN7content17WebPluginMimeTypeD2Ev(%"struct.content::WebPluginMimeType"* %59) #9
  %60 = icmp eq %"struct.content::WebPluginMimeType"* %59, %16
  br i1 %60, label %61, label %57

61:                                               ; preds = %57
  %62 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %61, %52
  %65 = phi i8* [ %63, %61 ], [ %53, %52 ]
  store %"struct.content::WebPluginMimeType"* %16, %"struct.content::WebPluginMimeType"** %54, align 8
  tail call void @_ZdlPv(i8* %65) #11
  %66 = bitcast %"class.std::__1::vector.22"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #9
  br label %67

67:                                               ; preds = %50, %64
  %68 = phi i64 [ %10, %50 ], [ 0, %64 ]
  %69 = icmp ugt i64 %7, 192153584101141162
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::vector.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #10
  unreachable

72:                                               ; preds = %67
  %73 = sdiv exact i64 %68, 96
  %74 = icmp ult i64 %73, 96076792050570581
  br i1 %74, label %75, label %79

75:                                               ; preds = %72
  %76 = shl nsw i64 %73, 1
  %77 = icmp ult i64 %76, %7
  %78 = select i1 %77, i64 %7, i64 %76
  br label %79

79:                                               ; preds = %75, %72
  %80 = phi i64 [ %78, %75 ], [ 192153584101141162, %72 ]
  %81 = mul i64 %80, 96
  %82 = tail call i8* @_Znwm(i64 %81) #11
  %83 = bitcast i8* %82 to %"struct.content::WebPluginMimeType"*
  %84 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %85 = bitcast %"struct.content::WebPluginMimeType"** %84 to i8**
  store i8* %82, i8** %85, align 8
  %86 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  store i8* %82, i8** %86, align 8
  %87 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %83, i64 %80
  store %"struct.content::WebPluginMimeType"* %87, %"struct.content::WebPluginMimeType"** %8, align 8
  %88 = bitcast %"struct.content::WebPluginMimeType"** %84 to i64*
  %89 = ptrtoint i8* %82 to i64
  %90 = icmp eq %"struct.content::WebPluginMimeType"* %1, %2
  br i1 %90, label %99, label %91

91:                                               ; preds = %79, %91
  %92 = phi %"struct.content::WebPluginMimeType"* [ %95, %91 ], [ %83, %79 ]
  %93 = phi %"struct.content::WebPluginMimeType"* [ %94, %91 ], [ %1, %79 ]
  tail call void @_ZN7content17WebPluginMimeTypeC2ERKS0_(%"struct.content::WebPluginMimeType"* %92, %"struct.content::WebPluginMimeType"* dereferenceable(96) %93) #9
  %94 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %93, i64 1
  %95 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %92, i64 1
  %96 = icmp eq %"struct.content::WebPluginMimeType"* %94, %2
  br i1 %96, label %97, label %91

97:                                               ; preds = %91
  %98 = ptrtoint %"struct.content::WebPluginMimeType"* %95 to i64
  br label %99

99:                                               ; preds = %79, %97
  %100 = phi i64 [ %89, %79 ], [ %98, %97 ]
  store i64 %100, i64* %88, align 8
  br label %101

101:                                              ; preds = %39, %49, %99
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.content::WebPluginMimeType"* @_ZNSt3__116__copy_constexprIPN7content17WebPluginMimeTypeES3_EET0_T_S5_S4_(%"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"*) local_unnamed_addr #8 comdat {
  %4 = icmp eq %"struct.content::WebPluginMimeType"* %0, %1
  br i1 %4, label %60, label %5

5:                                                ; preds = %3, %56
  %6 = phi %"struct.content::WebPluginMimeType"* [ %58, %56 ], [ %2, %3 ]
  %7 = phi %"struct.content::WebPluginMimeType"* [ %57, %56 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %6, i64 0, i32 0
  %9 = icmp eq %"struct.content::WebPluginMimeType"* %6, %7
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %6, i64 0, i32 2
  %12 = tail call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %11, %"class.std::__1::basic_string.6"* dereferenceable(24) %11) #9
  br label %56

13:                                               ; preds = %5
  %14 = bitcast %"struct.content::WebPluginMimeType"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = bitcast %"struct.content::WebPluginMimeType"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %17, label %32, label %22

22:                                               ; preds = %13
  br i1 %21, label %26, label %23

23:                                               ; preds = %22
  %24 = bitcast %"struct.content::WebPluginMimeType"* %6 to i8*
  %25 = bitcast %"struct.content::WebPluginMimeType"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #9
  br label %42

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %8, i8* %28, i64 %30) #9
  br label %42

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.content::WebPluginMimeType"* %7 to i8*
  %38 = zext i8 %20 to i64
  %39 = select i1 %21, i8* %34, i8* %37
  %40 = select i1 %21, i64 %36, i64 %38
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %8, i8* %39, i64 %40) #9
  br label %42

42:                                               ; preds = %32, %26, %23
  %43 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %6, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %46 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 0, i32 1, i32 0, i32 1
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %43, %"class.std::__1::basic_string"* %45, %"class.std::__1::basic_string"* %47) #9
  %48 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %6, i64 0, i32 2
  %49 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 0, i32 2
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %48, %"class.std::__1::basic_string.6"* dereferenceable(24) %49) #9
  %51 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %6, i64 0, i32 3
  %52 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 0, i32 3, i32 0, i32 0
  %53 = load %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"** %52, align 8
  %54 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 0, i32 3, i32 0, i32 1
  %55 = load %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"** %54, align 8
  tail call void @_ZNSt3__16vectorIN7content17WebPluginMimeType5ParamENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.15"* %51, %"struct.content::WebPluginMimeType::Param"* %53, %"struct.content::WebPluginMimeType::Param"* %55) #9
  br label %56

56:                                               ; preds = %10, %42
  %57 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %7, i64 1
  %58 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %6, i64 1
  %59 = icmp eq %"struct.content::WebPluginMimeType"* %57, %1
  br i1 %59, label %60, label %5

60:                                               ; preds = %56, %3
  %61 = phi %"struct.content::WebPluginMimeType"* [ %2, %3 ], [ %58, %56 ]
  ret %"struct.content::WebPluginMimeType"* %61
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #9
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #9
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #9
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #9
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #9
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #11
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #11
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #11
  %134 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #9
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #10
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #11
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #9
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #9
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7content17WebPluginMimeType5ParamENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.15"*, %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.content::WebPluginMimeType::Param"* %2 to i64
  %5 = ptrtoint %"struct.content::WebPluginMimeType::Param"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.content::WebPluginMimeType::Param"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.content::WebPluginMimeType::Param"*
  br i1 %15, label %81, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.content::WebPluginMimeType::Param"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %1, i64 %22
  %25 = select i1 %23, %"struct.content::WebPluginMimeType::Param"* %24, %"struct.content::WebPluginMimeType::Param"* %2
  %26 = icmp eq %"struct.content::WebPluginMimeType::Param"* %25, %1
  br i1 %26, label %39, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.content::WebPluginMimeType::Param"* [ %37, %27 ], [ %16, %17 ]
  %29 = phi %"struct.content::WebPluginMimeType::Param"* [ %36, %27 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %28, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %29, i64 0, i32 0
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %30, %"class.std::__1::basic_string.6"* dereferenceable(24) %31) #9
  %33 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %28, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %29, i64 0, i32 1
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %33, %"class.std::__1::basic_string.6"* dereferenceable(24) %34) #9
  %36 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %29, i64 1
  %37 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %28, i64 1
  %38 = icmp eq %"struct.content::WebPluginMimeType::Param"* %36, %25
  br i1 %38, label %39, label %27

39:                                               ; preds = %27, %17
  %40 = phi %"struct.content::WebPluginMimeType::Param"* [ %16, %17 ], [ %37, %27 ]
  br i1 %23, label %41, label %56

41:                                               ; preds = %39
  %42 = load i64, i64* %19, align 8
  %43 = icmp eq %"struct.content::WebPluginMimeType::Param"* %25, %2
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %"struct.content::WebPluginMimeType::Param"*
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi %"struct.content::WebPluginMimeType::Param"* [ %50, %46 ], [ %45, %44 ]
  %48 = phi %"struct.content::WebPluginMimeType::Param"* [ %49, %46 ], [ %24, %44 ]
  tail call void @_ZN7content17WebPluginMimeType5ParamC2ERKS1_(%"struct.content::WebPluginMimeType::Param"* %47, %"struct.content::WebPluginMimeType::Param"* dereferenceable(48) %48) #9
  %49 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %48, i64 1
  %50 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %47, i64 1
  %51 = icmp eq %"struct.content::WebPluginMimeType::Param"* %49, %2
  br i1 %51, label %52, label %46

52:                                               ; preds = %46
  %53 = ptrtoint %"struct.content::WebPluginMimeType::Param"* %50 to i64
  br label %54

54:                                               ; preds = %41, %52
  %55 = phi i64 [ %42, %41 ], [ %53, %52 ]
  store i64 %55, i64* %19, align 8
  br label %149

56:                                               ; preds = %39
  %57 = load %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"** %18, align 8
  %58 = icmp eq %"struct.content::WebPluginMimeType::Param"* %57, %40
  br i1 %58, label %80, label %59

59:                                               ; preds = %56, %78
  %60 = phi %"struct.content::WebPluginMimeType::Param"* [ %61, %78 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %60, i64 -1, i32 1
  %63 = bitcast %"class.std::__1::basic_string.6"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %59
  %68 = bitcast %"class.std::__1::basic_string.6"* %62 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %67, %59
  %71 = bitcast %"struct.content::WebPluginMimeType::Param"* %61 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = bitcast %"struct.content::WebPluginMimeType::Param"* %61 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %75, %70
  %79 = icmp eq %"struct.content::WebPluginMimeType::Param"* %61, %40
  br i1 %79, label %80, label %59

80:                                               ; preds = %78, %56
  store %"struct.content::WebPluginMimeType::Param"* %40, %"struct.content::WebPluginMimeType::Param"** %18, align 8
  br label %149

81:                                               ; preds = %3
  %82 = icmp eq i64 %12, 0
  br i1 %82, label %115, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %12 to i8*
  %85 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %86 = load %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"** %85, align 8
  %87 = icmp eq %"struct.content::WebPluginMimeType::Param"* %86, %16
  br i1 %87, label %112, label %88

88:                                               ; preds = %83, %107
  %89 = phi %"struct.content::WebPluginMimeType::Param"* [ %90, %107 ], [ %86, %83 ]
  %90 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %89, i64 -1
  %91 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %89, i64 -1, i32 1
  %92 = bitcast %"class.std::__1::basic_string.6"* %91 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %88
  %97 = bitcast %"class.std::__1::basic_string.6"* %91 to i8**
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #11
  br label %99

99:                                               ; preds = %96, %88
  %100 = bitcast %"struct.content::WebPluginMimeType::Param"* %90 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = bitcast %"struct.content::WebPluginMimeType::Param"* %90 to i8**
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #11
  br label %107

107:                                              ; preds = %104, %99
  %108 = icmp eq %"struct.content::WebPluginMimeType::Param"* %90, %16
  br i1 %108, label %109, label %88

109:                                              ; preds = %107
  %110 = bitcast %"class.std::__1::vector.15"* %0 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %109, %83
  %113 = phi i8* [ %111, %109 ], [ %84, %83 ]
  store %"struct.content::WebPluginMimeType::Param"* %16, %"struct.content::WebPluginMimeType::Param"** %85, align 8
  tail call void @_ZdlPv(i8* %113) #11
  %114 = bitcast %"class.std::__1::vector.15"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false) #9
  br label %115

115:                                              ; preds = %81, %112
  %116 = phi i64 [ %10, %81 ], [ 0, %112 ]
  %117 = icmp ugt i64 %7, 384307168202282325
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  %119 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %119) #10
  unreachable

120:                                              ; preds = %115
  %121 = sdiv exact i64 %116, 48
  %122 = icmp ult i64 %121, 192153584101141162
  br i1 %122, label %123, label %127

123:                                              ; preds = %120
  %124 = shl nsw i64 %121, 1
  %125 = icmp ult i64 %124, %7
  %126 = select i1 %125, i64 %7, i64 %124
  br label %127

127:                                              ; preds = %123, %120
  %128 = phi i64 [ %126, %123 ], [ 384307168202282325, %120 ]
  %129 = mul i64 %128, 48
  %130 = tail call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to %"struct.content::WebPluginMimeType::Param"*
  %132 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %133 = bitcast %"struct.content::WebPluginMimeType::Param"** %132 to i8**
  store i8* %130, i8** %133, align 8
  %134 = bitcast %"class.std::__1::vector.15"* %0 to i8**
  store i8* %130, i8** %134, align 8
  %135 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %131, i64 %128
  store %"struct.content::WebPluginMimeType::Param"* %135, %"struct.content::WebPluginMimeType::Param"** %8, align 8
  %136 = bitcast %"struct.content::WebPluginMimeType::Param"** %132 to i64*
  %137 = ptrtoint i8* %130 to i64
  %138 = icmp eq %"struct.content::WebPluginMimeType::Param"* %1, %2
  br i1 %138, label %147, label %139

139:                                              ; preds = %127, %139
  %140 = phi %"struct.content::WebPluginMimeType::Param"* [ %143, %139 ], [ %131, %127 ]
  %141 = phi %"struct.content::WebPluginMimeType::Param"* [ %142, %139 ], [ %1, %127 ]
  tail call void @_ZN7content17WebPluginMimeType5ParamC2ERKS1_(%"struct.content::WebPluginMimeType::Param"* %140, %"struct.content::WebPluginMimeType::Param"* dereferenceable(48) %141) #9
  %142 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %141, i64 1
  %143 = getelementptr inbounds %"struct.content::WebPluginMimeType::Param", %"struct.content::WebPluginMimeType::Param"* %140, i64 1
  %144 = icmp eq %"struct.content::WebPluginMimeType::Param"* %142, %2
  br i1 %144, label %145, label %139

145:                                              ; preds = %139
  %146 = ptrtoint %"struct.content::WebPluginMimeType::Param"* %143 to i64
  br label %147

147:                                              ; preds = %127, %145
  %148 = phi i64 [ %137, %127 ], [ %146, %145 ]
  store i64 %148, i64* %136, align 8
  br label %149

149:                                              ; preds = %54, %80, %147
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !8}
!55 = distinct !{!55, !10}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !8}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !8}
!64 = distinct !{!64, !10}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !8}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !8}
!73 = distinct !{!73, !10}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !8}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !8}
!82 = distinct !{!82, !10}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !8}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = distinct !{!90, !8}
!91 = distinct !{!91, !10}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !8}
!94 = distinct !{!94, !8}
!95 = distinct !{!95, !96, !8}
!96 = !{!"llvm.loop.unroll.runtime.disable"}
!97 = distinct !{!97, !8}
!98 = distinct !{!98, !96, !8}
!99 = distinct !{!99, !8}
!100 = distinct !{!100, !96, !8}
!101 = distinct !{!101, !8}
!102 = distinct !{!102, !96, !8}
!103 = distinct !{!103, !8}
!104 = distinct !{!104, !96, !8}
!105 = !{!106}
!106 = distinct !{!106, !107}
!107 = distinct !{!107, !"LVerDomain"}
!108 = !{!109}
!109 = distinct !{!109, !107}
!110 = distinct !{!110, !8}
!111 = distinct !{!111, !10}
!112 = distinct !{!112, !10}
!113 = distinct !{!113, !8}
!114 = !{!115}
!115 = distinct !{!115, !116}
!116 = distinct !{!116, !"LVerDomain"}
!117 = !{!118}
!118 = distinct !{!118, !116}
!119 = distinct !{!119, !8}
!120 = distinct !{!120, !10}
!121 = distinct !{!121, !10}
!122 = distinct !{!122, !8}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !8}
!129 = distinct !{!129, !10}
!130 = distinct !{!130, !10}
!131 = distinct !{!131, !8}
!132 = distinct !{!132, !8}
!133 = distinct !{!133, !10}
!134 = distinct !{!134, !96, !8}
!135 = !{!136}
!136 = distinct !{!136, !137}
!137 = distinct !{!137, !"LVerDomain"}
!138 = !{!139}
!139 = distinct !{!139, !137}
!140 = distinct !{!140, !8}
!141 = distinct !{!141, !10}
!142 = distinct !{!142, !10}
!143 = distinct !{!143, !8}
