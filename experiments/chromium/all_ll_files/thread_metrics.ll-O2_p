; ModuleID = '../../components/scheduling_metrics/thread_metrics.cc'
source_filename = "../../components/scheduling_metrics/thread_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.11, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.10" }
%"class.base::time_internal::TimeBase.10" = type { i64 }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.11 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.12" }>
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }

@.str = private unnamed_addr constant [41 x i8] c"Scheduler.Experimental.WallTimePerThread\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Scheduler.Experimental.CPUTimePerThread\00", align 1
@.str.2 = private unnamed_addr constant [48 x i8] c"Scheduler.Experimental.CPUTimePerThread.Tracked\00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"Scheduler.Experimental.CPUTimePerThread.Untracked\00", align 1

@_ZN18scheduling_metrics13ThreadMetricsC1ENS_10ThreadTypeEb = hidden unnamed_addr alias void (%"class.scheduling_metrics::ThreadMetrics"*, i32, i1), void (%"class.scheduling_metrics::ThreadMetrics"*, i32, i1)* @_ZN18scheduling_metrics13ThreadMetricsC2ENS_10ThreadTypeEb
@_ZN18scheduling_metrics13ThreadMetricsD1Ev = hidden unnamed_addr alias void (%"class.scheduling_metrics::ThreadMetrics"*), void (%"class.scheduling_metrics::ThreadMetrics"*)* @_ZN18scheduling_metrics13ThreadMetricsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18scheduling_metrics13ThreadMetricsC2ENS_10ThreadTypeEb(%"class.scheduling_metrics::ThreadMetrics"* nocapture, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 1
  store i8 %4, i8* %6, align 4
  br i1 %2, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #7
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi i64 [ %8, %7 ], [ 0, %3 ]
  %11 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 3
  %13 = tail call i8* @_Znwm(i64 40) #8
  %14 = bitcast i8* %13 to %"class.base::ScaledLinearHistogram"*
  tail call void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"* nonnull %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 1, i32 7, i32 8, i32 1000000, i32 1) #7
  %15 = ptrtoint i8* %13 to i64
  %16 = bitcast %"class.scheduling_metrics::TaskDurationMetricReporter"* %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 4
  %18 = tail call i8* @_Znwm(i64 40) #8
  %19 = bitcast i8* %18 to %"class.base::ScaledLinearHistogram"*
  tail call void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"* nonnull %19, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 7, i32 8, i32 1000000, i32 1) #7
  %20 = ptrtoint i8* %18 to i64
  %21 = bitcast %"class.scheduling_metrics::TaskDurationMetricReporter"* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 5
  %23 = tail call i8* @_Znwm(i64 40) #8
  %24 = bitcast i8* %23 to %"class.base::ScaledLinearHistogram"*
  tail call void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"* nonnull %24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 7, i32 8, i32 1000000, i32 1) #7
  %25 = ptrtoint i8* %23 to i64
  %26 = bitcast %"class.scheduling_metrics::TaskDurationMetricReporter"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 6
  %28 = tail call i8* @_Znwm(i64 40) #8
  %29 = bitcast i8* %28 to %"class.base::ScaledLinearHistogram"*
  tail call void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"* nonnull %29, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 7, i32 8, i32 1000000, i32 1) #7
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.scheduling_metrics::TaskDurationMetricReporter"* %27 to i64*
  store i64 %30, i64* %31, align 8
  ret void
}

declare i64 @_ZN4base11ThreadTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18scheduling_metrics13ThreadMetricsD2Ev(%"class.scheduling_metrics::ThreadMetrics"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %2, align 8
  store %"class.base::ScaledLinearHistogram"* null, %"class.base::ScaledLinearHistogram"** %2, align 8
  %4 = icmp eq %"class.base::ScaledLinearHistogram"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"* nonnull %3) #7
  %6 = bitcast %"class.base::ScaledLinearHistogram"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %8, align 8
  store %"class.base::ScaledLinearHistogram"* null, %"class.base::ScaledLinearHistogram"** %8, align 8
  %10 = icmp eq %"class.base::ScaledLinearHistogram"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"* nonnull %9) #7
  %12 = bitcast %"class.base::ScaledLinearHistogram"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %14, align 8
  store %"class.base::ScaledLinearHistogram"* null, %"class.base::ScaledLinearHistogram"** %14, align 8
  %16 = icmp eq %"class.base::ScaledLinearHistogram"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"* nonnull %15) #7
  %18 = bitcast %"class.base::ScaledLinearHistogram"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %20, align 8
  store %"class.base::ScaledLinearHistogram"* null, %"class.base::ScaledLinearHistogram"** %20, align 8
  %22 = icmp eq %"class.base::ScaledLinearHistogram"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  tail call void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"* nonnull %21) #7
  %24 = bitcast %"class.base::ScaledLinearHistogram"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #8
  br label %25

25:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN18scheduling_metrics13ThreadMetrics17ShouldDiscardTaskERKN4base16sequence_manager4TaskERKNS2_9TaskQueue10TaskTimingE(%"class.scheduling_metrics::ThreadMetrics"* nocapture readnone, %"struct.base::sequence_manager::Task"* nocapture readnone dereferenceable(128), %"class.base::sequence_manager::TaskQueue::TaskTiming"* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 3, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 4, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sub nsw i64 %7, %5
  %9 = icmp sgt i64 %8, 30000000
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18scheduling_metrics13ThreadMetrics17RecordTaskMetricsERKN4base16sequence_manager4TaskERKNS2_9TaskQueue10TaskTimingE(%"class.scheduling_metrics::ThreadMetrics"* nocapture, %"struct.base::sequence_manager::Task"* nocapture readnone dereferenceable(128), %"class.base::sequence_manager::TaskQueue::TaskTiming"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 3, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 4, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sub nsw i64 %9, %7
  %11 = tail call i1 @llvm.is.constant.i64(i64 %10) #7
  br i1 %11, label %19, label %12

12:                                               ; preds = %3
  %13 = icmp slt i64 %10, 0
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = add i64 %10, 2147483648
  %16 = icmp ult i64 %15, 4294967296
  %17 = trunc i64 %10 to i32
  %18 = select i1 %16, i32 %17, i32 %14, !prof !2
  br label %25

19:                                               ; preds = %3
  %20 = icmp sgt i64 %10, 2147483647
  br i1 %20, label %28, label %21

21:                                               ; preds = %19
  %22 = icmp sgt i64 %10, -2147483648
  %23 = select i1 %22, i64 %10, i64 -2147483648
  %24 = trunc i64 %23 to i32
  br label %25

25:                                               ; preds = %21, %12
  %26 = phi i32 [ %18, %12 ], [ %24, %21 ]
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %25, %19
  %29 = phi i32 [ %26, %25 ], [ 2147483647, %19 ]
  %30 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %30, align 8
  tail call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %31, i32 %5, i32 %29) #7
  br label %32

32:                                               ; preds = %25, %28
  %33 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 2
  %34 = load i8, i8* %33, align 1, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %126, label %36

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 8
  %38 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 5, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 6, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = sub nsw i64 %41, %39
  %43 = tail call i1 @llvm.is.constant.i64(i64 %42) #7
  br i1 %43, label %51, label %44

44:                                               ; preds = %36
  %45 = icmp slt i64 %42, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = add i64 %42, 2147483648
  %48 = icmp ult i64 %47, 4294967296
  %49 = trunc i64 %42 to i32
  %50 = select i1 %48, i32 %49, i32 %46, !prof !2
  br label %57

51:                                               ; preds = %36
  %52 = icmp sgt i64 %42, 2147483647
  br i1 %52, label %60, label %53

53:                                               ; preds = %51
  %54 = icmp sgt i64 %42, -2147483648
  %55 = select i1 %54, i64 %42, i64 -2147483648
  %56 = trunc i64 %55 to i32
  br label %57

57:                                               ; preds = %53, %44
  %58 = phi i32 [ %50, %44 ], [ %56, %53 ]
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %57, %51
  %61 = phi i32 [ %58, %57 ], [ 2147483647, %51 ]
  %62 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %62, align 8
  tail call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %63, i32 %37, i32 %61) #7
  br label %64

64:                                               ; preds = %57, %60
  %65 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 1
  %66 = load i8, i8* %65, align 4, !range !3
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %126, label %68

68:                                               ; preds = %64
  %69 = load i32, i32* %4, align 8
  %70 = load i64, i64* %38, align 8
  %71 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = sub nsw i64 %70, %72
  %74 = tail call i1 @llvm.is.constant.i64(i64 %73) #7
  br i1 %74, label %82, label %75

75:                                               ; preds = %68
  %76 = icmp slt i64 %73, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = add i64 %73, 2147483648
  %79 = icmp ult i64 %78, 4294967296
  %80 = trunc i64 %73 to i32
  %81 = select i1 %79, i32 %80, i32 %77, !prof !2
  br label %88

82:                                               ; preds = %68
  %83 = icmp sgt i64 %73, 2147483647
  br i1 %83, label %91, label %84

84:                                               ; preds = %82
  %85 = icmp sgt i64 %73, -2147483648
  %86 = select i1 %85, i64 %73, i64 -2147483648
  %87 = trunc i64 %86 to i32
  br label %88

88:                                               ; preds = %84, %75
  %89 = phi i32 [ %81, %75 ], [ %87, %84 ]
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %97

91:                                               ; preds = %88, %82
  %92 = phi i32 [ %89, %88 ], [ 2147483647, %82 ]
  %93 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %93, align 8
  tail call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %94, i32 %69, i32 %92) #7
  %95 = load i32, i32* %4, align 8
  %96 = load i64, i64* %38, align 8
  br label %97

97:                                               ; preds = %88, %91
  %98 = phi i64 [ %70, %88 ], [ %96, %91 ]
  %99 = phi i32 [ %69, %88 ], [ %95, %91 ]
  %100 = load i64, i64* %40, align 8
  %101 = sub nsw i64 %100, %98
  %102 = tail call i1 @llvm.is.constant.i64(i64 %101) #7
  br i1 %102, label %110, label %103

103:                                              ; preds = %97
  %104 = icmp slt i64 %101, 0
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = add i64 %101, 2147483648
  %107 = icmp ult i64 %106, 4294967296
  %108 = trunc i64 %101 to i32
  %109 = select i1 %107, i32 %108, i32 %105, !prof !2
  br label %116

110:                                              ; preds = %97
  %111 = icmp sgt i64 %101, 2147483647
  br i1 %111, label %119, label %112

112:                                              ; preds = %110
  %113 = icmp sgt i64 %101, -2147483648
  %114 = select i1 %113, i64 %101, i64 -2147483648
  %115 = trunc i64 %114 to i32
  br label %116

116:                                              ; preds = %112, %103
  %117 = phi i32 [ %109, %103 ], [ %115, %112 ]
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %124

119:                                              ; preds = %116, %110
  %120 = phi i32 [ %117, %116 ], [ 2147483647, %110 ]
  %121 = getelementptr inbounds %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::ThreadMetrics"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %121, align 8
  tail call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %122, i32 %99, i32 %120) #7
  %123 = load i64, i64* %40, align 8
  br label %124

124:                                              ; preds = %116, %119
  %125 = phi i64 [ %100, %116 ], [ %123, %119 ]
  store i64 %125, i64* %71, align 8
  br label %126

126:                                              ; preds = %32, %64, %124
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"*, i8*, i32, i32, i32, i32, i32) unnamed_addr #1

declare void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
