; ModuleID = '../../third_party/blink/renderer/core/css/css_font_face.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_font_face.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.700, %class.scoped_refptr.708, %class.scoped_refptr.718, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.724 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.699 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.699 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.725", [4 x i8] }>
%"class.WTF::RefCounted.725" = type { %"class.base::RefCounted.726" }
%"class.base::RefCounted.726" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.700 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.706", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.701" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.706" = type { %"class.base::RefCounted.707" }
%"class.base::RefCounted.707" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.708 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.709", %"class.WTF::RefCounted.716", [4 x i8] }>
%"class.blink::FontSettings.709" = type { %"class.WTF::Vector.710" }
%"class.WTF::Vector.710" = type { %"class.WTF::VectorBuffer.711" }
%"class.WTF::VectorBuffer.711" = type { %"class.WTF::VectorBufferBase.712" }
%"class.WTF::VectorBufferBase.712" = type { %"class.blink::FontTagValuePair.713"*, i32, i32 }
%"class.blink::FontTagValuePair.713" = type { i32, float }
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.718 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.719", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.721, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.94 }
%union.anon.94 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.721 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.722", [4 x i8] }>
%"class.WTF::RefCounted.722" = type { %"class.base::RefCounted.723" }
%"class.base::RefCounted.723" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.724 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.202" }
%"struct.std::__1::atomic.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__cxx_atomic_impl.205" }
%"struct.std::__1::__cxx_atomic_impl.205" = type { %"struct.std::__1::__cxx_atomic_base_impl.206" }
%"struct.std::__1::__cxx_atomic_base_impl.206" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.451", i32, [4 x i8], %"class.std::__1::unique_ptr.589", %"class.std::__1::unique_ptr.589", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.595", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.601", %"class.std::__1::unique_ptr.607", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.619", %"class.std::__1::unique_ptr.625", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.632", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.454", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.495", %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.509", %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.523", %"class.std::__1::unique_ptr.523", %"class.std::__1::unique_ptr.530", %"class.std::__1::unique_ptr.537", %"class.std::__1::unique_ptr.544", %"class.std::__1::unique_ptr.569", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.487" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.487" = type { %"struct.std::__1::__atomic_base.488" }
%"struct.std::__1::__atomic_base.488" = type { %"struct.std::__1::__atomic_base.489" }
%"struct.std::__1::__atomic_base.489" = type { %"struct.std::__1::__cxx_atomic_impl.490" }
%"struct.std::__1::__cxx_atomic_impl.490" = type { %"struct.std::__1::__cxx_atomic_base_impl.491" }
%"struct.std::__1::__cxx_atomic_base_impl.491" = type { i64 }
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.blink::Worklist.498"* }
%"class.blink::Worklist.498" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.487" }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::Worklist.505"* }
%"class.blink::Worklist.505" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.487" }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.blink::Worklist.512"* }
%"class.blink::Worklist.512" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.487" }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.blink::Worklist.519"* }
%"class.blink::Worklist.519" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.487" }
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::Worklist.526"* }
%"class.blink::Worklist.526" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.487" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::Worklist.533"* }
%"class.blink::Worklist.533" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.487" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.blink::Worklist.540"* }
%"class.blink::Worklist.540" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.487" }
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.547", %"class.std::__1::__compressed_pair.555", %"class.std::__1::__compressed_pair.560", %"class.std::__1::__compressed_pair.562", [4 x i8] }>
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549", %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i64 }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { float }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.572", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.581" }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583" }
%"class.WTF::VectorBufferBase.583" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.595" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.598" }
%"class.WTF::VectorBuffer.598" = type { %"class.WTF::VectorBufferBase.599" }
%"class.WTF::VectorBufferBase.599" = type { %"struct.std::__1::pair.600"*, i32, i32 }
%"struct.std::__1::pair.600" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.613" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.498"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.505"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.512"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.519"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.526"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.674", i64 }
%"class.std::__1::vector.674" = type { %"class.std::__1::__vector_base.675" }
%"class.std::__1::__vector_base.675" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.676" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.631 }
%class.scoped_refptr.631 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.632" = type { %"struct.std::__1::__atomic_base.633" }
%"struct.std::__1::__atomic_base.633" = type { %"struct.std::__1::__cxx_atomic_impl.634" }
%"struct.std::__1::__cxx_atomic_impl.634" = type { %"struct.std::__1::__cxx_atomic_base_impl.635" }
%"struct.std::__1::__cxx_atomic_base_impl.635" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CSSFontFace" = type { %class.scoped_refptr, %"class.blink::HeapHashSet", %"class.blink::HeapDeque", %"class.blink::Member.43" }
%class.scoped_refptr = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted", %"class.WTF::Vector" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSSegmentedFontFace"* }
%"class.blink::CSSSegmentedFontFace" = type { %"struct.blink::FontSelectionCapabilities", %"class.WTF::LruCache", %"class.blink::Member.8", i64 }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.5" }
%"class.WTF::HashTable.5" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::FontFaceList"* }
%"class.blink::FontFaceList" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.15", %"class.blink::Member.17", %"class.blink::Member.17", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.15" = type <{ %"class.blink::Member.17"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.43", %"class.blink::Member.17", %"class.blink::Member.17" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23" }
%"class.WTF::VectorBufferBase.23" = type { %"class.blink::Member.24"*, i32, i32 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::CSSFontFaceSource"* }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::FontFace"* }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", i32, %"class.blink::Member.54", %"class.blink::Member.56", %"class.blink::Member.58", %"class.blink::HeapVector" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.126", i32, i8, [3 x i8], %"class.blink::HeapVector.128", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.137", %"class.blink::Member.139", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.148", %"class.blink::Member.289", %"class.blink::Member.291", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.69" }
%"class.WTF::HashMap.69" = type { %"class.WTF::HashTable.70" }
%"class.WTF::HashTable.70" = type <{ %"struct.WTF::KeyValuePair.72"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.72" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.80" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.73" }
%"class.blink::HeapHashSet.73" = type { %"class.WTF::HashSet.76" }
%"class.WTF::HashSet.76" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"class.blink::WeakMember.79"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.79" = type opaque
%"class.blink::Supplementable.80" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.81" }
%"class.blink::HeapHashMap.81" = type { %"class.WTF::HashMap.84" }
%"class.WTF::HashMap.84" = type { %"class.WTF::HashTable.85" }
%"class.WTF::HashTable.85" = type <{ %"struct.WTF::KeyValuePair.87"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.87" = type { i8*, %"class.blink::Member.3042" }
%"class.blink::Member.3042" = type { %"class.blink::MemberBase.3043" }
%"class.blink::MemberBase.3043" = type { %"class.blink::Supplement.3044"* }
%"class.blink::Supplement.3044" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3045" }
%"class.blink::Member.3045" = type { %"class.blink::MemberBase.3046" }
%"class.blink::MemberBase.3046" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.88, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115", %"class.blink::Member.121", i32, [4 x i8], %"class.WTF::HashSet.122", i32, i32 }
%class.scoped_refptr.88 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.89", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.91 }
%"class.WTF::RefCounted.89" = type { %"class.base::RefCounted.90" }
%"class.base::RefCounted.90" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.91 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.104", %"class.std::__1::map.113"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.104" = type { %"class.std::__1::__tree.105" }
%"class.std::__1::__tree.105" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.113" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.47" }
%"class.WTF::HashSet.122" = type { %"class.WTF::HashTable.123" }
%"class.WTF::HashTable.123" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.128" = type { %"class.WTF::Vector.131" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::Member.134"*, i32, i32 }
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.137" = type { %"class.blink::MemberBase.138" }
%"class.blink::MemberBase.138" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.141", i32, i32 }
%"class.blink::HeapHashMap.141" = type { %"class.WTF::HashMap.144" }
%"class.WTF::HashMap.144" = type { %"class.WTF::HashTable.145" }
%"class.WTF::HashTable.145" = type <{ %"struct.WTF::KeyValuePair.147"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.147" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.154" }
%"class.WTF::Vector.154" = type { %"class.WTF::VectorBuffer.155" }
%"class.WTF::VectorBuffer.155" = type { %"class.WTF::VectorBufferBase.156" }
%"class.WTF::VectorBufferBase.156" = type { %"class.mojo::StructPtr.157"*, i32, i32 }
%"class.mojo::StructPtr.157" = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.161", %"class.WTF::HashMap.168", %"class.WTF::HashMap.173", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.178", i32, %"class.mojo::StructPtr.183", %"class.WTF::Vector.178" }
%"class.mojo::StructPtr.161" = type { %"class.std::__1::unique_ptr.162" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.168" = type { %"class.WTF::HashTable.169" }
%"class.WTF::HashTable.169" = type <{ %"struct.WTF::KeyValuePair.172"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.172" = type opaque
%"class.WTF::HashMap.173" = type { %"class.WTF::HashTable.174" }
%"class.WTF::HashTable.174" = type <{ %"struct.WTF::KeyValuePair.177"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.177" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.183" = type { %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.178", i8, i8, [6 x i8] }>
%"class.WTF::Vector.178" = type { %"class.WTF::VectorBuffer.179" }
%"class.WTF::VectorBuffer.179" = type { %"class.WTF::VectorBufferBase.180" }
%"class.WTF::VectorBufferBase.180" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.280" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.198", i32 }>
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.207", %"class.absl::optional.212", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.233", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.255", %"class.std::__1::map.266", i64, %"class.base::OnceCallback.226", %"class.base::OnceCallback.275", i8, %class.scoped_refptr.217, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.276" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.201 }
%class.scoped_refptr.201 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.202" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.207" = type { %"class.absl::optional_internal::optional_data.208" }
%"class.absl::optional_internal::optional_data.208" = type { %"class.absl::optional_internal::optional_data_base.209" }
%"class.absl::optional_internal::optional_data_base.209" = type { %"class.absl::optional_internal::optional_data_dtor_base.210" }
%"class.absl::optional_internal::optional_data_dtor_base.210" = type { i8, %union.anon.211 }
%union.anon.211 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.212" = type { %"class.absl::optional_internal::optional_data.213" }
%"class.absl::optional_internal::optional_data.213" = type { %"class.absl::optional_internal::optional_data_base.214" }
%"class.absl::optional_internal::optional_data_base.214" = type { %"class.absl::optional_internal::optional_data_dtor_base.215" }
%"class.absl::optional_internal::optional_data_dtor_base.215" = type { i8, %union.anon.216 }
%union.anon.216 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.226" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.217, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.219 }
%class.scoped_refptr.219 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.220", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.220" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.221" }
%"struct.std::__1::atomic.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__cxx_atomic_impl.224" }
%"struct.std::__1::__cxx_atomic_impl.224" = type { %"struct.std::__1::__cxx_atomic_base_impl.225" }
%"struct.std::__1::__cxx_atomic_base_impl.225" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.231 }
%class.scoped_refptr.231 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.303", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.217, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.303" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.232 }
%class.scoped_refptr.232 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.236", %class.scoped_refptr.237 }
%"class.base::RepeatingCallback.236" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.237 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.238", [4 x i8] }>
%"class.base::RefCountedThreadSafe.238" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.254" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.254" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.255" = type { %"class.std::__1::__tree.256" }
%"class.std::__1::__tree.256" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.266" = type { %"class.std::__1::__tree.267" }
%"class.std::__1::__tree.267" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::OnceCallback.226" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.275" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.217 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.218" }>
%"class.base::RefCountedThreadSafe.218" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.226" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.276" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.139", i8, [7 x i8], %"class.WTF::Vector.154", %"class.blink::HeapVector.295", i8, [7 x i8], %"class.WTF::HashSet.122", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.295" = type { %"class.WTF::Vector.298" }
%"class.WTF::Vector.298" = type { %"class.WTF::VectorBuffer.299" }
%"class.WTF::VectorBuffer.299" = type { %"class.WTF::VectorBufferBase.300" }
%"class.WTF::VectorBufferBase.300" = type { %"class.blink::Member.301"*, i32, i32 }
%"class.blink::Member.301" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::CSSFontFace"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.62" }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { %"class.blink::Member.65"*, i32, i32 }
%"class.blink::Member.65" = type opaque
%"class.blink::CSSFontFaceSource" = type { i32 (...)**, %"class.WTF::HashMap.28", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.28" = type { %"class.WTF::HashTable.29" }
%"class.WTF::HashTable.29" = type <{ %"struct.WTF::KeyValuePair.32"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.32" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.33", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.33" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"struct.WTF::KeyValuePair.37"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.37" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.38", i32, i32 }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.863", %"class.blink::ThreadState::PrefinalizerRegistration.871", %"class.blink::Member.872", %"class.blink::Member.874", %"class.blink::Member.876", i8, %"class.blink::Member.878", %"class.blink::Member.880", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.884", %"class.blink::Member.886", %"class.blink::Member.888", %"class.blink::Member.890", %"class.blink::Member.894", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.178", %"class.blink::Member.896", %class.scoped_refptr.898, %"class.blink::HeapHashSet.961", %"class.blink::Member.968", %"class.blink::HeapHashMap.981", %"class.std::__1::unique_ptr.988", %"class.blink::Member.1000", %"class.blink::Member.1029", %"class.blink::Member.1039", %"class.blink::Member.1045", %"class.WTF::Vector.1048", %"class.util::TokenType", %"class.WTF::HashSet.1053", %"class.WTF::Deque.1057" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.750", %"class.blink::Member.752", %"class.blink::Member.754", %"class.blink::Member.756", i8, %"class.WTF::Vector.758" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.743" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.731" }
%"class.blink::HeapVector.731" = type { %"class.WTF::Vector.734" }
%"class.WTF::Vector.734" = type { %"class.WTF::VectorBuffer.735" }
%"class.WTF::VectorBuffer.735" = type { %"class.WTF::VectorBufferBase.736", [32 x i8] }
%"class.WTF::VectorBufferBase.736" = type { %"struct.std::__1::pair.737"*, i32, i32 }
%"struct.std::__1::pair.737" = type { %"class.WTF::AtomicString", %"class.blink::Member.738" }
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::HeapVector.740"* }
%"class.blink::HeapVector.740" = type opaque
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.WTF::Vector.746"* }
%"class.WTF::Vector.746" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1182", %"class.blink::Member.1184", %"class.blink::Member.1186", i8, i32, i8, i32, %"class.blink::Member.1188", %"class.blink::Member.752", %"class.blink::FrameLifecycle", %"class.blink::Member.750", %"class.blink::Member.750", %"class.blink::Member.750", %"class.blink::Member.750", %"class.blink::Member.750", %"class.blink::Member.750", %"class.blink::Member.1006", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1198", i8, %"class.base::UnguessableToken", %"class.absl::optional.1200", %"class.absl::optional.374", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.750", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1212", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1220", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1228", %"class.blink::FrameLoader", %"class.blink::Member.1249", %"class.blink::Member.1079", %"class.blink::Member.1251", %"class.blink::Member.1253", %"class.blink::Member.1255", %"class.blink::Member.1257", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1259", %class.scoped_refptr.1261, %"class.blink::Member.1262", %"class.blink::Member.1264", %"class.blink::Member.1266", %"class.blink::Member.1268", %"class.blink::Member.1270", %"class.blink::Member.1272", %"class.blink::Member.1274", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1276", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1279", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1301", %"class.std::__1::unique_ptr.1302", %"class.absl::optional.374", i32, [4 x i8], %"class.std::__1::unique_ptr.1308", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1316", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1321", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1326", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1329", %"class.blink::Member.1331", %"class.blink::Member.1333", %"class.blink::Member.1335", %"class.mojo::StructPtr.1338", %"class.blink::Member.1347", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1349", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1212" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1213" }
%"class.blink::HeapHashMap.1213" = type { %"class.WTF::HashMap.1216" }
%"class.WTF::HashMap.1216" = type { %"class.WTF::HashTable.1217" }
%"class.WTF::HashTable.1217" = type <{ %"struct.WTF::KeyValuePair.1219"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1219" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.991", %"class.base::WeakPtrFactory.996" }
%"class.WTF::HashMap.991" = type { %"class.WTF::HashTable.992" }
%"class.WTF::HashTable.992" = type <{ %"struct.WTF::KeyValuePair.995"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.995" = type opaque
%"class.base::WeakPtrFactory.996" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1226" }
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1004" }
%"class.blink::WeakMember.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3178", i64, %"class.std::__1::map.3179", i8*, i64, %"class.base::WeakPtrFactory.3188" }
%"class.base::RepeatingCallback.3178" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3179" = type { %"class.std::__1::__tree.3180" }
%"class.std::__1::__tree.3180" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3181", %"class.std::__1::__compressed_pair.3185" }
%"class.std::__1::__compressed_pair.3181" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.3185" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::WeakPtrFactory.3188" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1228" = type { %"class.WTF::HashSet.1231" }
%"class.WTF::HashSet.1231" = type { %"class.WTF::HashTable.1232" }
%"class.WTF::HashTable.1232" = type <{ %"class.blink::WeakMember.1234"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1234" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1006", %"class.blink::Member.1235", %"class.blink::Member.1237", %"class.std::__1::unique_ptr.1239", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1245" }
%"class.blink::Member.1235" = type { %"class.blink::MemberBase.1236" }
%"class.blink::MemberBase.1236" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1237" = type { %"class.blink::MemberBase.1238" }
%"class.blink::MemberBase.1238" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1239" = type { %"class.std::__1::__compressed_pair.1240" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.1241" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.315" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.48 }
%"class.WTF::HashSet.1245" = type { %"class.WTF::HashTable.1246" }
%"class.WTF::HashTable.1246" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1356", %"class.blink::Member.1006", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.1364", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1369", %"class.blink::Member.1371", %"class.blink::Member.1371", %"class.std::__1::unique_ptr.1374", i32, [4 x i8], %"class.WTF::HashSet.1377", %"class.blink::Member.1384", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1386", %"class.blink::HeapHashSet.1393", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1401", i8, %"class.blink::Member.1407", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1422", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1436", i8, %"class.std::__1::unique_ptr.1442", %"class.std::__1::unique_ptr.1559", %"class.WTF::Vector.1565", i32, %class.scoped_refptr.1570, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1571", %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::HeapHashSet.1577", %"class.blink::HeapHashSet.1584", %"class.std::__1::unique_ptr.1591", %"class.std::__1::unique_ptr.1597", %"class.WTF::Vector.1603" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1356" = type { %"class.WTF::HashTable.1357" }
%"class.WTF::HashTable.1357" = type <{ %class.scoped_refptr.1360*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1360 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1363", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1361, %"class.base::WeakPtrFactory.1362" }
%class.scoped_refptr.1361 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1362" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1363" = type { %"class.blink::MemberBase.1250" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1364" = type { %"class.absl::optional_internal::optional_data.1365" }
%"class.absl::optional_internal::optional_data.1365" = type { %"class.absl::optional_internal::optional_data_base.1366" }
%"class.absl::optional_internal::optional_data_base.1366" = type { %"class.absl::optional_internal::optional_data_dtor_base.1367" }
%"class.absl::optional_internal::optional_data_dtor_base.1367" = type { i8, %union.anon.1368 }
%union.anon.1368 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::HeapHashSet.1373"* }
%"class.blink::HeapHashSet.1373" = type opaque
%"class.std::__1::unique_ptr.1374" = type { %"class.std::__1::__compressed_pair.1375" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"class.WTF::HashSet.1377"* }
%"class.WTF::HashSet.1377" = type { %"class.WTF::HashTable.1378" }
%"class.WTF::HashTable.1378" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1386" = type { %"class.WTF::HashSet.1389" }
%"class.WTF::HashSet.1389" = type { %"class.WTF::HashTable.1390" }
%"class.WTF::HashTable.1390" = type <{ %"class.blink::Member.1392"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1392" = type opaque
%"class.blink::HeapHashSet.1393" = type { %"class.WTF::HashSet.1396" }
%"class.WTF::HashSet.1396" = type { %"class.WTF::HashTable.1397" }
%"class.WTF::HashTable.1397" = type <{ %"class.blink::Member.1399"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1631", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1642", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.1079" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1633", %"class.blink::Member.1634", %"class.blink::Member.1636", %"class.blink::Member.1638", %"class.blink::Member.1640", %"class.WTF::Vector.1603", i16, %class.scoped_refptr.1361 }
%"class.blink::ThreadState::PrefinalizerRegistration.1633" = type { i8 }
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1642" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1643", { i64, i64 } }
%"class.blink::WeakMember.1643" = type { %"class.blink::MemberBase.1400" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1401" = type { %"class.std::__1::__compressed_pair.1402" }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet.1411" }
%"class.WTF::LinkedHashSet.1411" = type { %"class.WTF::HashMap.1412", %"class.WTF::VectorBackedLinkedList.1416" }
%"class.WTF::HashMap.1412" = type { %"class.WTF::HashTable.1413" }
%"class.WTF::HashTable.1413" = type <{ %"struct.WTF::KeyValuePair.1415"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1415" = type opaque
%"class.WTF::VectorBackedLinkedList.1416" = type { %"class.WTF::Vector.1417", i32, i32 }
%"class.WTF::Vector.1417" = type { %"class.WTF::VectorBuffer.1418" }
%"class.WTF::VectorBuffer.1418" = type { %"class.WTF::VectorBufferBase.1419" }
%"class.WTF::VectorBufferBase.1419" = type { %"class.WTF::VectorBackedLinkedListNode.1420"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1420" = type opaque
%"class.blink::HeapLinkedHashSet.1422" = type { %"class.WTF::LinkedHashSet.1425" }
%"class.WTF::LinkedHashSet.1425" = type { %"class.WTF::HashMap.1426", %"class.WTF::VectorBackedLinkedList.1430" }
%"class.WTF::HashMap.1426" = type { %"class.WTF::HashTable.1427" }
%"class.WTF::HashTable.1427" = type <{ %"struct.WTF::KeyValuePair.1429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1429" = type opaque
%"class.WTF::VectorBackedLinkedList.1430" = type { %"class.WTF::Vector.1431", i32, i32 }
%"class.WTF::Vector.1431" = type { %"class.WTF::VectorBuffer.1432" }
%"class.WTF::VectorBuffer.1432" = type { %"class.WTF::VectorBufferBase.1433" }
%"class.WTF::VectorBufferBase.1433" = type { %"class.WTF::VectorBackedLinkedListNode.1434"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1434" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1442" = type { %"class.std::__1::__compressed_pair.1443" }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1445, %class.scoped_refptr.1445, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1536", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1541", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1445 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1446", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1453" }
%"class.WTF::RefCounted.1446" = type { %"class.base::RefCounted.1447" }
%"class.base::RefCounted.1447" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1448", i32, [4 x i8] }>
%"class.WTF::Vector.1448" = type { %"class.WTF::VectorBuffer.1449" }
%"class.WTF::VectorBuffer.1449" = type { %"class.WTF::VectorBufferBase.1450" }
%"class.WTF::VectorBufferBase.1450" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1453" = type { %"class.WTF::VectorBuffer.1454" }
%"class.WTF::VectorBuffer.1454" = type { %"class.WTF::VectorBufferBase.1455" }
%"class.WTF::VectorBufferBase.1455" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1459", %"class.std::__1::unique_ptr.1508", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1456, %class.scoped_refptr.1457, %class.scoped_refptr.1458 }
%class.scoped_refptr.1456 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1472", i8, i8, %class.scoped_refptr.1456, i32, i32 }
%"class.WTF::RefCounted.1472" = type { %"class.base::RefCounted.1473" }
%"class.base::RefCounted.1473" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1457 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1626" }
%"class.blink::PaintPropertyNode.1626" = type { %"class.WTF::RefCounted.1627", i8, i8, %class.scoped_refptr.1457, i32, i32 }
%"class.WTF::RefCounted.1627" = type { %"class.base::RefCounted.1628" }
%"class.base::RefCounted.1628" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1458 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1623" }
%"class.blink::PaintPropertyNode.1623" = type { %"class.WTF::RefCounted.1624", i8, i8, %class.scoped_refptr.1458, i32, i32 }
%"class.WTF::RefCounted.1624" = type { %"class.base::RefCounted.1625" }
%"class.base::RefCounted.1625" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1459" = type { %"class.std::__1::__compressed_pair.1460" }
%"class.std::__1::__compressed_pair.1460" = type { %"struct.std::__1::__compressed_pair_elem.1461" }
%"struct.std::__1::__compressed_pair_elem.1461" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1462", %"class.WTF::Vector.1467", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1462" = type { %"class.WTF::VectorBuffer.1463" }
%"class.WTF::VectorBuffer.1463" = type { %"class.WTF::VectorBufferBase.1464" }
%"class.WTF::VectorBufferBase.1464" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1467" = type { %"class.WTF::VectorBuffer.1468" }
%"class.WTF::VectorBuffer.1468" = type { %"class.WTF::VectorBufferBase.1469" }
%"class.WTF::VectorBufferBase.1469" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1487" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1480, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1481", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1474" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1474" = type { %"class.std::__1::__compressed_pair.1475" }
%"class.std::__1::__compressed_pair.1475" = type { %"struct.std::__1::__compressed_pair_elem.1476" }
%"struct.std::__1::__compressed_pair_elem.1476" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1480 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1608", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1608" = type { %"class.WTF::RefCounted.1609", i8, i8, %class.scoped_refptr.1480, i32, i32 }
%"class.WTF::RefCounted.1609" = type { %"class.base::RefCounted.1610" }
%"class.base::RefCounted.1610" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1611" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1611" = type { %"class.absl::optional_internal::optional_data.1612" }
%"class.absl::optional_internal::optional_data.1612" = type { %"class.absl::optional_internal::optional_data_base.1613" }
%"class.absl::optional_internal::optional_data_base.1613" = type { %"class.absl::optional_internal::optional_data_dtor_base.1614" }
%"class.absl::optional_internal::optional_data_dtor_base.1614" = type { i8, %union.anon.1615 }
%union.anon.1615 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1616", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1616" = type { %"class.std::__1::__vector_base.1617" }
%"class.std::__1::__vector_base.1617" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1618" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1618" = type { %"struct.std::__1::__compressed_pair_elem.1619" }
%"struct.std::__1::__compressed_pair_elem.1619" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1481" = type { %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1490", %"class.std::__1::unique_ptr.1496", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1490" = type { %"class.std::__1::__compressed_pair.1491" }
%"class.std::__1::__compressed_pair.1491" = type { %"struct.std::__1::__compressed_pair_elem.1492" }
%"struct.std::__1::__compressed_pair_elem.1492" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1496" = type { %"class.std::__1::__compressed_pair.1497" }
%"class.std::__1::__compressed_pair.1497" = type { %"struct.std::__1::__compressed_pair_elem.1498" }
%"struct.std::__1::__compressed_pair_elem.1498" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1508" = type { %"class.std::__1::__compressed_pair.1509" }
%"class.std::__1::__compressed_pair.1509" = type { %"struct.std::__1::__compressed_pair_elem.1510" }
%"struct.std::__1::__compressed_pair_elem.1510" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1511", %"class.absl::optional.1511" }
%"class.absl::optional.1511" = type { %"class.absl::optional_internal::optional_data.1512" }
%"class.absl::optional_internal::optional_data.1512" = type { %"class.absl::optional_internal::optional_data_base.1513" }
%"class.absl::optional_internal::optional_data_base.1513" = type { %"class.absl::optional_internal::optional_data_dtor_base.1514" }
%"class.absl::optional_internal::optional_data_dtor_base.1514" = type { i8, [3 x i8], %union.anon.1515 }
%union.anon.1515 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1453"*, %"class.absl::optional.1521", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1521" = type { %"class.absl::optional_internal::optional_data.1522" }
%"class.absl::optional_internal::optional_data.1522" = type { %"class.absl::optional_internal::optional_data_base.1523" }
%"class.absl::optional_internal::optional_data_base.1523" = type { %"class.absl::optional_internal::optional_data_dtor_base.1524" }
%"class.absl::optional_internal::optional_data_dtor_base.1524" = type { i8, %union.anon.1525 }
%union.anon.1525 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1526", %"class.WTF::Vector.1531" }
%"class.WTF::Vector.1526" = type { %"class.WTF::VectorBuffer.1527" }
%"class.WTF::VectorBuffer.1527" = type { %"class.WTF::VectorBufferBase.1528", [128 x i8] }
%"class.WTF::VectorBufferBase.1528" = type { i32*, i32, i32 }
%"class.WTF::Vector.1531" = type { %"class.WTF::VectorBuffer.1532" }
%"class.WTF::VectorBuffer.1532" = type { %"class.WTF::VectorBufferBase.1533", [128 x i8] }
%"class.WTF::VectorBufferBase.1533" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1536" = type { %"class.WTF::VectorBuffer.1537" }
%"class.WTF::VectorBuffer.1537" = type { %"class.WTF::VectorBufferBase.1538" }
%"class.WTF::VectorBufferBase.1538" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1541" = type { %"class.WTF::HashTable.1542" }
%"class.WTF::HashTable.1542" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1546", %"class.WTF::Vector.1551" }
%"class.WTF::HashMap.1546" = type { %"class.WTF::HashTable.1547" }
%"class.WTF::HashTable.1547" = type <{ %"struct.WTF::KeyValuePair.1550"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1550" = type opaque
%"class.WTF::Vector.1551" = type { %"class.WTF::VectorBuffer.1552" }
%"class.WTF::VectorBuffer.1552" = type { %"class.WTF::VectorBufferBase.1553" }
%"class.WTF::VectorBufferBase.1553" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1559" = type { %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1565" = type { %"class.WTF::VectorBuffer.1566" }
%"class.WTF::VectorBuffer.1566" = type { %"class.WTF::VectorBufferBase.1567" }
%"class.WTF::VectorBufferBase.1567" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1570 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1577" = type { %"class.WTF::HashSet.1580" }
%"class.WTF::HashSet.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"class.blink::WeakMember.1583"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1583" = type opaque
%"class.blink::HeapHashSet.1584" = type { %"class.WTF::HashSet.1587" }
%"class.WTF::HashSet.1587" = type { %"class.WTF::HashTable.1588" }
%"class.WTF::HashTable.1588" = type <{ %"class.blink::WeakMember.1590"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1590" = type opaque
%"class.std::__1::unique_ptr.1591" = type { %"class.std::__1::__compressed_pair.1592" }
%"class.std::__1::__compressed_pair.1592" = type { %"struct.std::__1::__compressed_pair_elem.1593" }
%"struct.std::__1::__compressed_pair_elem.1593" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.385" }
%"class.base::time_internal::TimeBase.385" = type { i64 }
%"class.std::__1::unique_ptr.1597" = type { %"class.std::__1::__compressed_pair.1598" }
%"class.std::__1::__compressed_pair.1598" = type { %"struct.std::__1::__compressed_pair_elem.1599" }
%"struct.std::__1::__compressed_pair_elem.1599" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.403", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.403" = type { %"class.absl::optional_internal::optional_data.404" }
%"class.absl::optional_internal::optional_data.404" = type { %"class.absl::optional_internal::optional_data_base.405" }
%"class.absl::optional_internal::optional_data_base.405" = type { %"class.absl::optional_internal::optional_data_dtor_base.406" }
%"class.absl::optional_internal::optional_data_dtor_base.406" = type { i8, %union.anon.407 }
%union.anon.407 = type { %"class.base::Time" }
%"class.WTF::Vector.1603" = type { %"class.WTF::VectorBuffer.1604" }
%"class.WTF::VectorBuffer.1604" = type { %"class.WTF::VectorBufferBase.1605" }
%"class.WTF::VectorBufferBase.1605" = type { %"class.base::OnceCallback.226"*, i32, i32 }
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1084" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1010", %"class.blink::Member.1010" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::Member.1010", %"class.blink::Member.1010", %"class.blink::Member.1014" }
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1062", %"class.blink::Member.874", %"class.blink::Member.1012", %"class.blink::Member.1064", %"class.blink::Member.1064", %"class.blink::Member.1108", %"class.blink::Member.1110", %"class.blink::Member.1112", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1117", %"class.blink::HeapVector.1119" }
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1068" }
%"class.blink::HeapHashMap.1068" = type { %"class.WTF::HashMap.1071" }
%"class.WTF::HashMap.1071" = type { %"class.WTF::HashTable.1072" }
%"class.WTF::HashTable.1072" = type <{ %"struct.WTF::KeyValuePair.1074"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1074" = type { %"class.WTF::AtomicString", %"class.blink::Member.1075" }
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1079", i32, %"class.blink::HeapVector.1101" }
%"class.blink::HeapVector.1101" = type { %"class.WTF::Vector.1104" }
%"class.WTF::Vector.1104" = type { %"class.WTF::VectorBuffer.1105" }
%"class.WTF::VectorBuffer.1105" = type { %"class.WTF::VectorBufferBase.1106" }
%"class.WTF::VectorBufferBase.1106" = type { %"class.blink::Member.1079"*, i32, i32 }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1114" }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::HeapHashMap.1116"* }
%"class.blink::HeapHashMap.1116" = type opaque
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1119" = type { %"class.WTF::Vector.1122" }
%"class.WTF::Vector.1122" = type { %"class.WTF::VectorBuffer.1123" }
%"class.WTF::VectorBuffer.1123" = type { %"class.WTF::VectorBufferBase.1124" }
%"class.WTF::VectorBufferBase.1124" = type { %"class.blink::Member.1125"*, i32, i32 }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1127", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1129, %"class.WTF::Vector.1148", %"class.WTF::Vector.1148", %"class.blink::Member.1010", %"class.blink::Member.1153", %"class.blink::HeapHashSet.1157", %"class.blink::Member.874", %"class.WTF::HashSet.1164", %"class.WTF::TextPosition", %"class.blink::Member.1168", %"class.blink::HeapVector.1170", %"class.blink::Member.1177" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1129 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.1130", %"class.WTF::Vector.1132" }
%"class.WTF::RefCounted.1130" = type { %"class.base::RefCounted.1131" }
%"class.base::RefCounted.1131" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1132" = type { %"class.WTF::VectorBuffer.1133" }
%"class.WTF::VectorBuffer.1133" = type { %"class.WTF::VectorBufferBase.1134" }
%"class.WTF::VectorBufferBase.1134" = type { %"class.std::__1::unique_ptr.1135"*, i32, i32 }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.1138", %"class.WTF::String" }
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1139" }
%"class.WTF::VectorBuffer.1139" = type { %"class.WTF::VectorBufferBase.1140" }
%"class.WTF::VectorBufferBase.1140" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.1148" = type { %"class.WTF::VectorBuffer.1149" }
%"class.WTF::VectorBuffer.1149" = type { %"class.WTF::VectorBufferBase.1150" }
%"class.WTF::VectorBufferBase.1150" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1155" }
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1157" = type { %"class.WTF::HashSet.1160" }
%"class.WTF::HashSet.1160" = type { %"class.WTF::HashTable.1161" }
%"class.WTF::HashTable.1161" = type <{ %"class.blink::WeakMember.1163"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1163" = type { %"class.blink::MemberBase.1013" }
%"class.WTF::HashSet.1164" = type { %"class.WTF::HashTable.1165" }
%"class.WTF::HashTable.1165" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.1129, %"class.blink::Member.1125", %"class.blink::Member.1153" }
%"class.blink::HeapVector.1170" = type { %"class.WTF::Vector.1173" }
%"class.WTF::Vector.1173" = type { %"class.WTF::VectorBuffer.1174" }
%"class.WTF::VectorBuffer.1174" = type { %"class.WTF::VectorBufferBase.1175" }
%"class.WTF::VectorBufferBase.1175" = type { %"class.blink::Member.1153"*, i32, i32 }
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1081 }
%class.scoped_refptr.1081 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.1082", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1082" = type { %"class.base::RefCounted.1083" }
%"class.base::RefCounted.1083" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1088", %"class.blink::Member.1090", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1088" = type { %"class.WTF::SingleThreadedBitField.1089" }
%"class.WTF::SingleThreadedBitField.1089" = type { i32 }
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1094 }
%class.scoped_refptr.1094 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1095", %"class.WTF::AtomicString", %"class.WTF::Vector.1097" }
%"class.WTF::RefCounted.1095" = type { %"class.base::RefCounted.1096" }
%"class.base::RefCounted.1096" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1097" = type { %"class.WTF::VectorBuffer.1098" }
%"class.WTF::VectorBuffer.1098" = type { %"class.WTF::VectorBufferBase.393", [32 x i8] }
%"class.WTF::VectorBufferBase.393" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1261 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1266" = type { %"class.blink::MemberBase.1267" }
%"class.blink::MemberBase.1267" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1274" = type { %"class.blink::MemberBase.1275" }
%"class.blink::MemberBase.1275" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1276" = type { %"class.blink::Member.1277" }
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3191" }
%"class.mojo::Remote.3191" = type { %"class.mojo::internal::InterfacePtrState.3192" }
%"class.mojo::internal::InterfacePtrState.3192" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3193" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.762, %"class.std::__1::unique_ptr.198", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.217, i32 }>
%class.scoped_refptr.762 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.217, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.821", %"class.absl::optional.826", %"class.absl::optional.779", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.846", i8, [7 x i8], %class.scoped_refptr.217, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.238" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.226", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.217, %"class.std::__1::unique_ptr.763", %"class.absl::optional.773", %"struct.std::__1::atomic.632", i8, i8, i8, i8, i32, i32, %"class.absl::optional.779", %"class.std::__1::unique_ptr.784", i8, i64, %class.scoped_refptr.818, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.820" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.217, i8, %"class.mojo::ScopedHandleBase.766", %class.scoped_refptr.767, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.768", i8*, %"class.base::WeakPtrFactory.769" }
%"class.mojo::ScopedHandleBase.766" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.767 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.768" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.769" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.773" = type { %"class.absl::optional_internal::optional_data.774" }
%"class.absl::optional_internal::optional_data.774" = type { %"class.absl::optional_internal::optional_data_base.775" }
%"class.absl::optional_internal::optional_data_base.775" = type { %"class.absl::optional_internal::optional_data_dtor_base.776" }
%"class.absl::optional_internal::optional_data_dtor_base.776" = type { i8, %union.anon.777 }
%union.anon.777 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.778", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.778" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.787", i8, i64, %class.scoped_refptr.788, %class.scoped_refptr.813 }
%"class.base::RepeatingCallback.787" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.788 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.789", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.791", %"class.std::__1::map.802", i8, [7 x i8] }>
%"class.base::RefCounted.789" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.790 }
%class.scoped_refptr.790 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.791" = type { %"class.std::__1::__tree.792" }
%"class.std::__1::__tree.792" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.793", %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.802" = type { %"class.std::__1::__tree.803" }
%"class.std::__1::__tree.803" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.804", %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%class.scoped_refptr.813 = type { %"class.base::RefCountedData.814"* }
%"class.base::RefCountedData.814" = type opaque
%class.scoped_refptr.818 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.819 }
%class.scoped_refptr.819 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.820" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.821" = type { %"class.absl::optional_internal::optional_data.822" }
%"class.absl::optional_internal::optional_data.822" = type { %"class.absl::optional_internal::optional_data_base.823" }
%"class.absl::optional_internal::optional_data_base.823" = type { %"class.absl::optional_internal::optional_data_dtor_base.824" }
%"class.absl::optional_internal::optional_data_dtor_base.824" = type { i8, %union.anon.825 }
%union.anon.825 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.826" = type { %"class.absl::optional_internal::optional_data.827" }
%"class.absl::optional_internal::optional_data.827" = type { %"class.absl::optional_internal::optional_data_base.828" }
%"class.absl::optional_internal::optional_data_base.828" = type { %"class.absl::optional_internal::optional_data_dtor_base.829" }
%"class.absl::optional_internal::optional_data_dtor_base.829" = type { i8, [7 x i8], %union.anon.830 }
%union.anon.830 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.779" = type { %"class.absl::optional_internal::optional_data.780" }
%"class.absl::optional_internal::optional_data.780" = type { %"class.absl::optional_internal::optional_data_base.781" }
%"class.absl::optional_internal::optional_data_base.781" = type { %"class.absl::optional_internal::optional_data_dtor_base.782" }
%"class.absl::optional_internal::optional_data_dtor_base.782" = type { i8, %union.anon.783 }
%union.anon.783 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.831 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.831 = type { %"class.std::__1::map.834" }
%"class.std::__1::map.834" = type { %"class.std::__1::__tree.835" }
%"class.std::__1::__tree.835" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.836", %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.845"*, i64 }
%"class.std::__1::unique_ptr.845" = type opaque
%"class.std::__1::map.846" = type { %"class.std::__1::__tree.847" }
%"class.std::__1::__tree.847" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.848", %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3193" = type { %"class.std::__1::__compressed_pair.3194" }
%"class.std::__1::__compressed_pair.3194" = type { %"struct.std::__1::__compressed_pair_elem.3195" }
%"struct.std::__1::__compressed_pair_elem.3195" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1279" = type { %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1282, %"class.blink::WebVector.1284", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1282 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1283", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1283" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.1284" = type { %"class.std::__1::vector.1285" }
%"class.std::__1::vector.1285" = type { %"class.std::__1::__vector_base.1286" }
%"class.std::__1::__vector_base.1286" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1292, i8, [7 x i8] }>
%class.scoped_refptr.1292 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1293", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1293" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1294" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1301" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1308" = type { %"class.std::__1::__compressed_pair.1309" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1314" }
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3201" }
%"class.mojo::AssociatedRemote.3201" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3202" }
%"class.mojo::internal::AssociatedInterfacePtrState.3202" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3203" }
%"class.std::__1::unique_ptr.3203" = type { %"class.std::__1::__compressed_pair.3204" }
%"class.std::__1::__compressed_pair.3204" = type { %"struct.std::__1::__compressed_pair_elem.3205" }
%"struct.std::__1::__compressed_pair_elem.3205" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1316" = type { %"class.blink::Member.1317" }
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3211" }
%"class.mojo::AssociatedRemote.3211" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3212" }
%"class.mojo::internal::AssociatedInterfacePtrState.3212" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3213" }
%"class.std::__1::unique_ptr.3213" = type { %"class.std::__1::__compressed_pair.3214" }
%"class.std::__1::__compressed_pair.3214" = type { %"struct.std::__1::__compressed_pair_elem.3215" }
%"struct.std::__1::__compressed_pair_elem.3215" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1319" }
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3221", %"class.blink::Member.1006", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3221" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3222" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.198" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3222" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1321" = type { %"class.blink::Member.1322" }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3225", %"class.blink::Member.1006", %"class.mojo::AssociatedReceiver.3226" }
%"class.blink::ThreadState::PrefinalizerRegistration.3225" = type { i8 }
%"class.mojo::AssociatedReceiver.3226" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3227" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3227" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1324" }
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3230", %"class.blink::Member.1006", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3230" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.762, %"class.std::__1::unique_ptr.198", %"class.base::WeakPtrFactory.3231" }
%"class.base::WeakPtrFactory.3231" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1326" = type { %"class.blink::Member.1327" }
%"class.blink::Member.1327" = type { %"class.blink::MemberBase.1328" }
%"class.blink::MemberBase.1328" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3234", %"class.blink::Member.1006", %"class.mojo::AssociatedReceiver.3235" }
%"class.blink::ThreadState::PrefinalizerRegistration.3234" = type { i8 }
%"class.mojo::AssociatedReceiver.3235" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3236" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3236" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1329" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1335" = type { %"class.blink::MemberBase.1336" }
%"class.blink::MemberBase.1336" = type { %"class.blink::HeapHashMap.1337"* }
%"class.blink::HeapHashMap.1337" = type opaque
%"class.mojo::StructPtr.1338" = type { %"class.std::__1::unique_ptr.1339" }
%"class.std::__1::unique_ptr.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1342", %"class.mojo::InlinedStructPtr.1343" }
%"class.mojo::InlinedStructPtr.1342" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1343" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1349" = type { %"class.absl::optional_internal::optional_data.1350" }
%"class.absl::optional_internal::optional_data.1350" = type { %"class.absl::optional_internal::optional_data_base.1351" }
%"class.absl::optional_internal::optional_data_base.1351" = type { %"class.absl::optional_internal::optional_data_dtor_base.1352" }
%"class.absl::optional_internal::optional_data_dtor_base.1352" = type { i8, %union.anon.1353 }
%union.anon.1353 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.750", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1190" }
%"class.std::__1::vector.1190" = type { %"class.std::__1::__vector_base.1191" }
%"class.std::__1::__vector_base.1191" = type { %"struct.std::__1::pair.1192"*, %"struct.std::__1::pair.1192"*, %"class.std::__1::__compressed_pair.1193" }
%"struct.std::__1::pair.1192" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"struct.std::__1::pair.1192"* }
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1200" = type { %"class.absl::optional_internal::optional_data.1201" }
%"class.absl::optional_internal::optional_data.1201" = type { %"class.absl::optional_internal::optional_data_base.1202" }
%"class.absl::optional_internal::optional_data_base.1202" = type { %"class.absl::optional_internal::optional_data_dtor_base.1203" }
%"class.absl::optional_internal::optional_data_dtor_base.1203" = type { i8, %union.anon.1204 }
%union.anon.1204 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.374" = type { %"class.absl::optional_internal::optional_data.375" }
%"class.absl::optional_internal::optional_data.375" = type { %"class.absl::optional_internal::optional_data_base.376" }
%"class.absl::optional_internal::optional_data_base.376" = type { %"class.absl::optional_internal::optional_data_dtor_base.377" }
%"class.absl::optional_internal::optional_data_dtor_base.377" = type { i8, %union.anon.378 }
%union.anon.378 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.640 }
%class.scoped_refptr.640 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1205" }
%"class.blink::HeapHashSet.1205" = type { %"class.WTF::HashSet.1208" }
%"class.WTF::HashSet.1208" = type { %"class.WTF::HashTable.1209" }
%"class.WTF::HashTable.1209" = type <{ %"class.blink::WeakMember.1211"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1211" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.758" = type { %"class.WTF::VectorBuffer.759" }
%"class.WTF::VectorBuffer.759" = type { %"class.WTF::VectorBufferBase.760" }
%"class.WTF::VectorBufferBase.760" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.855" }
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.126", i32, i8, [3 x i8], %"class.blink::HeapVector.128", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.137", %"class.blink::Member.139", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.148", %"class.blink::Member.289", %"class.blink::Member.291", i8 }>
%"class.blink::Supplementable.863" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.864" }
%"class.blink::HeapHashMap.864" = type { %"class.WTF::HashMap.867" }
%"class.WTF::HashMap.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ %"struct.WTF::KeyValuePair.870"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.870" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.871" = type { i8 }
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1644", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1603", %"class.WTF::Vector.1603", i8, i32, %"class.blink::Member.1033", %"class.blink::Member.121", %"class.blink::Member.1652", %"class.blink::Member.1654", %"class.blink::Member.1656", %"class.blink::Member.1658", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1660", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1666", %"class.blink::Member.1668", %"class.blink::Member.1125", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1670", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1675", %"class.blink::HeapVector.1101", %"class.blink::Member.1079", %"class.blink::Member.1025", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::UserActionElementSet", %"class.blink::Member.1684", double, double, i64, i64, %"class.blink::HeapHashSet.1686", %"class.blink::HeapHashSet.1693", i16, i8, %"class.blink::Member.1700", %"class.blink::Member.1702", %"class.blink::Member.2090", %"class.blink::Member.2092", %"class.blink::TextLinkColors", %"class.blink::Member.2094", i8, [7 x i8], %"class.blink::HeapHashMap.2096", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1079", %"class.WTF::Vector.2103", %"class.blink::Member.2108", %"class.blink::Member.2110", i8, %"class.blink::Member.1079", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.2112", %"class.blink::HeapVector.2114", %"class.std::__1::unique_ptr.2122", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2128", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.2141", %"class.WTF::Vector.2143", i8, i8, %"class.std::__1::unique_ptr.2148", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1101", %"class.blink::HeapVector.2154", i32, i8, %"class.blink::HeapTaskRunnerTimer.1675", %"class.blink::HeapTaskRunnerTimer.1675", %"class.blink::DocumentTiming", %"class.blink::Member.2162", i8, i32, %"class.blink::Member.2164", %"class.blink::Member.2166", %"class.blink::Member.2168", %"class.blink::HeapTaskRunnerTimer.1675", %"class.blink::Member.2170", %"class.WTF::HashMap.2172", %"class.blink::Member.2177", %"class.blink::Member.2179", %"class.blink::Member.2181", %"class.blink::Member.2183", %"class.blink::Member.874", %"class.blink::Member.874", %"class.blink::HeapTaskRunnerTimer.1675", %"class.blink::HeapHashSet.2185", i8, i32, %"class.blink::Member.2192", %"class.blink::Member.2194", i32, %"class.blink::Member.2196", %"class.blink::Member.2198", %"class.blink::Member.2200", %"class.std::__1::unique_ptr.2202", i64, %"class.std::__1::unique_ptr.2208", i32, i32, %"class.blink::Member.2219", %"class.blink::Member.2221", %"class.blink::Member.2223", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2225", %"class.WTF::Vector.1048", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2227", %"class.blink::Member.2234", %"class.std::__1::unique_ptr.2236", %"class.blink::Member.2242", i8, i8, %"class.WTF::String", %"class.blink::Member.2244", i8, [7 x i8], %"class.blink::HeapHashMap.2246", %"class.blink::HeapObserverSet.2253", %"class.blink::Member.2261", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2263", i32, i8, i8, %"class.blink::WeakMember.2265", %"class.blink::Member.2266" }
%"class.blink::Supplementable.1644" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1645" }
%"class.blink::HeapHashMap.1645" = type { %"class.WTF::HashMap.1648" }
%"class.WTF::HashMap.1648" = type { %"class.WTF::HashTable.1649" }
%"class.WTF::HashTable.1649" = type <{ %"struct.WTF::KeyValuePair.1651"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1651" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.2299", %"class.blink::Member.2300", %"class.blink::Member.2302", %"class.blink::Member.2306", %class.scoped_refptr.1361, %class.scoped_refptr.1361, %"class.blink::Member.2308", %"class.blink::Member.2310", %"class.blink::Member.2316", %"class.blink::Member.2320", %"class.blink::Member.2371", %"class.blink::HeapHashMap.2373", %"class.blink::HeapHashSet.2380", %"class.blink::HeapHashSet.2380", %"class.blink::HeapHashMap.2387", %"class.blink::HeapVector.2394", %"class.blink::Member.2401", %"class.blink::HeapTaskRunnerTimer.2403", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.2405", %"class.WTF::Vector.2412", %"class.blink::HeapHashSet.2418", %"class.blink::HeapHashSet.2418", %"class.std::__1::unique_ptr.2424", %"class.base::WeakPtr.2365", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.2430", %"class.blink::Member.2433", i8, i8, %"class.base::WeakPtrFactory.2435" }
%"class.blink::ThreadState::PrefinalizerRegistration.2299" = type { i8 }
%"class.blink::Member.2300" = type { %"class.blink::MemberBase.2301" }
%"class.blink::MemberBase.2301" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.2302" = type { %"class.blink::MemberBase.2303" }
%"class.blink::MemberBase.2303" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.2306" = type { %"class.blink::MemberBase.2307" }
%"class.blink::MemberBase.2307" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.2308" = type { %"class.blink::MemberBase.2309" }
%"class.blink::MemberBase.2309" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.2310" = type { %"class.blink::MemberBase.2311" }
%"class.blink::MemberBase.2311" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.2314" }
%"class.blink::Member.2314" = type { %"class.blink::MemberBase.2315" }
%"class.blink::MemberBase.2315" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.2324", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.2326", %"class.WTF::HashSet.2331", i8, [3 x i8], i32, %"class.blink::HeapHashMap.2335", %"class.std::__1::map.2342", %"class.std::__1::map.2353", %"class.std::__1::unique_ptr.2362", %"class.blink::Member.2310", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.2369", %"class.mojo::InlinedStructPtr.1343", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.2324" = type { %"class.blink::MemberBase.2325" }
%"class.blink::MemberBase.2325" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.2326" = type { %"class.WTF::HashTable.2327" }
%"class.WTF::HashTable.2327" = type <{ %"struct.WTF::KeyValuePair.2330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2330" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.2331" = type { %"class.WTF::HashTable.2332" }
%"class.WTF::HashTable.2332" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.2335" = type { %"class.WTF::HashMap.2338" }
%"class.WTF::HashMap.2338" = type { %"class.WTF::HashTable.2339" }
%"class.WTF::HashTable.2339" = type <{ %"struct.WTF::KeyValuePair.2341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2341" = type opaque
%"class.std::__1::map.2342" = type { %"class.std::__1::__tree.2343" }
%"class.std::__1::__tree.2343" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2344", %"class.std::__1::__compressed_pair.2348" }
%"class.std::__1::__compressed_pair.2344" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.2348" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.2353" = type { %"class.std::__1::__tree.2354" }
%"class.std::__1::__tree.2354" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2355", %"class.std::__1::__compressed_pair.2359" }
%"class.std::__1::__compressed_pair.2355" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.2359" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::unique_ptr.2362" = type { %"class.std::__1::__compressed_pair.2363" }
%"class.std::__1::__compressed_pair.2363" = type { %"struct.std::__1::__compressed_pair_elem.2364" }
%"struct.std::__1::__compressed_pair_elem.2364" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.2365", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.2369" = type { %"class.blink::MemberBase.2370" }
%"class.blink::MemberBase.2370" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.2373" = type { %"class.WTF::HashMap.2376" }
%"class.WTF::HashMap.2376" = type { %"class.WTF::HashTable.2377" }
%"class.WTF::HashTable.2377" = type <{ %"struct.WTF::KeyValuePair.2379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2379" = type opaque
%"class.blink::HeapHashSet.2380" = type { %"class.WTF::HashSet.2383" }
%"class.WTF::HashSet.2383" = type { %"class.WTF::HashTable.2384" }
%"class.WTF::HashTable.2384" = type <{ %"class.blink::WeakMember.2386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2386" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.310", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.336", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.426", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.641", %"class.blink::ResourceResponse", %class.scoped_refptr.643, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.310" = type { %"class.absl::optional_internal::optional_data.311" }
%"class.absl::optional_internal::optional_data.311" = type { %"class.absl::optional_internal::optional_data_base.312" }
%"class.absl::optional_internal::optional_data_base.312" = type { %"class.absl::optional_internal::optional_data_dtor_base.313" }
%"class.absl::optional_internal::optional_data_dtor_base.313" = type { i8, %union.anon.314 }
%union.anon.314 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.321", i8, %"class.absl::optional.326", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.321" = type { %"class.absl::optional_internal::optional_data.322" }
%"class.absl::optional_internal::optional_data.322" = type { %"class.absl::optional_internal::optional_data_base.323" }
%"class.absl::optional_internal::optional_data_base.323" = type { %"class.absl::optional_internal::optional_data_dtor_base.324" }
%"class.absl::optional_internal::optional_data_dtor_base.324" = type { i8, [7 x i8], %union.anon.325 }
%union.anon.325 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.326" = type { %"class.absl::optional_internal::optional_data.327" }
%"class.absl::optional_internal::optional_data.327" = type { %"class.absl::optional_internal::optional_data_base.328" }
%"class.absl::optional_internal::optional_data_base.328" = type { %"class.absl::optional_internal::optional_data_dtor_base.329" }
%"class.absl::optional_internal::optional_data_dtor_base.329" = type { i8, %union.anon.330 }
%union.anon.330 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.331", %"class.WTF::Vector.178" }
%"class.WTF::Vector.331" = type { %"class.WTF::VectorBuffer.332" }
%"class.WTF::VectorBuffer.332" = type { %"class.WTF::VectorBufferBase.333" }
%"class.WTF::VectorBufferBase.333" = type { i32*, i32, i32 }
%"class.WTF::Vector.336" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.338" }
%"class.WTF::VectorBufferBase.338" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.422" }
%"class.WTF::HashMap.422" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"struct.WTF::KeyValuePair.425"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.425" = type <{ %"class.blink::WeakMember.3161", i32, [4 x i8] }>
%"class.blink::WeakMember.3161" = type { %"class.blink::MemberBase.3162" }
%"class.blink::MemberBase.3162" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.306", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::HeapHashSet.426" = type { %"class.WTF::HashSet.429" }
%"class.WTF::HashSet.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"class.blink::WeakMember.432"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.432" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.433", i8, i8, %class.scoped_refptr.437, %class.scoped_refptr.636, %class.scoped_refptr.638 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.433" = type { %"class.WTF::HashTable.434" }
%"class.WTF::HashTable.434" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.437 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.438", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.438" = type { %"class.base::RefCounted.439" }
%"class.base::RefCounted.439" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.442" }
%"class.blink::HeapHashMap.442" = type { %"class.WTF::HashMap.445" }
%"class.WTF::HashMap.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"struct.WTF::KeyValuePair.448"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.448" = type { %"class.blink::WeakMember.449", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.636 = type { %"class.base::RefCountedData.637"* }
%"class.base::RefCountedData.637" = type opaque
%class.scoped_refptr.638 = type { %"class.base::RefCountedData.639"* }
%"class.base::RefCountedData.639" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.91, %class.scoped_refptr.91, %class.scoped_refptr.91, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.344, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.354", %"class.absl::optional.359", %"class.absl::optional.369", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.374", %"class.absl::optional.369", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.369", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.374", %"class.absl::optional.379", i8, %class.scoped_refptr.384 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.339" }
%"class.WTF::HashMap.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"struct.WTF::KeyValuePair.343"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.343" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.344 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.345", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.352, i8, %"class.url::Origin" }
%"class.base::RefCounted.345" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"*, %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.3142" }
%"class.std::__1::__compressed_pair.3142" = type { %"struct.std::__1::__compressed_pair_elem.3143" }
%"struct.std::__1::__compressed_pair_elem.3143" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.std::__1::unique_ptr.346"* }
%class.scoped_refptr.352 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.353", [4 x i8] }>
%"class.base::RefCountedThreadSafe.353" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.354" = type { %"class.absl::optional_internal::optional_data.355" }
%"class.absl::optional_internal::optional_data.355" = type { %"class.absl::optional_internal::optional_data_base.356" }
%"class.absl::optional_internal::optional_data_base.356" = type { %"class.absl::optional_internal::optional_data_dtor_base.357" }
%"class.absl::optional_internal::optional_data_dtor_base.357" = type { i8, %union.anon.358 }
%union.anon.358 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.359" = type { %"class.absl::optional_internal::optional_data.360" }
%"class.absl::optional_internal::optional_data.360" = type { %"class.absl::optional_internal::optional_data_base.361" }
%"class.absl::optional_internal::optional_data_base.361" = type { %"class.absl::optional_internal::optional_data_dtor_base.362" }
%"class.absl::optional_internal::optional_data_dtor_base.362" = type { i8, %union.anon.363 }
%union.anon.363 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.364", %"class.WTF::Vector.178", %"class.WTF::String" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %class.scoped_refptr.91*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.207", %"class.absl::optional.207" }
%"class.absl::optional.369" = type { %"class.absl::optional_internal::optional_data.370" }
%"class.absl::optional_internal::optional_data.370" = type { %"class.absl::optional_internal::optional_data_base.371" }
%"class.absl::optional_internal::optional_data_base.371" = type { %"class.absl::optional_internal::optional_data_dtor_base.372" }
%"class.absl::optional_internal::optional_data_dtor_base.372" = type { i8, %union.anon.373 }
%union.anon.373 = type { %"class.WTF::String" }
%"class.absl::optional.379" = type { %"class.absl::optional_internal::optional_data.380" }
%"class.absl::optional_internal::optional_data.380" = type { %"class.absl::optional_internal::optional_data_base.381" }
%"class.absl::optional_internal::optional_data_base.381" = type { %"class.absl::optional_internal::optional_data_dtor_base.382" }
%"class.absl::optional_internal::optional_data_dtor_base.382" = type { i8, %union.anon.383 }
%union.anon.383 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%class.scoped_refptr.384 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.3147", %"class.base::internal::flat_tree.3148" }
%"class.base::RefCountedThreadSafe.3147" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.3148" = type { %"class.std::__1::vector.3149" }
%"class.std::__1::vector.3149" = type { %"class.std::__1::__vector_base.3150" }
%"class.std::__1::__vector_base.3150" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3151" }
%"class.std::__1::__compressed_pair.3151" = type { %"struct.std::__1::__compressed_pair_elem.3152" }
%"struct.std::__1::__compressed_pair_elem.3152" = type { i32* }
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.386", %class.scoped_refptr.401, %class.scoped_refptr.402, %"struct.blink::CacheControlHeader", %"class.absl::optional.207", %"class.absl::optional.403", %"class.absl::optional.403", %"class.absl::optional.403", i64, %"class.blink::KURL", %"class.WTF::Vector.408", %"class.WTF::String", %"class.WTF::Vector.178", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.374", %"class.WTF::Vector.178", %"class.blink::KURL", %"class.absl::optional.413" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.386" = type { %"class.absl::optional_internal::optional_data.387" }
%"class.absl::optional_internal::optional_data.387" = type { %"class.absl::optional_internal::optional_data_base.388" }
%"class.absl::optional_internal::optional_data_base.388" = type { %"class.absl::optional_internal::optional_data_dtor_base.389" }
%"class.absl::optional_internal::optional_data_dtor_base.389" = type { i8, %union.anon.390 }
%union.anon.390 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.178", %"class.WTF::String", i64, i64, %"class.WTF::Vector.391", %"class.WTF::Vector.396" }
%"class.WTF::Vector.391" = type { %"class.WTF::VectorBuffer.392" }
%"class.WTF::VectorBuffer.392" = type { %"class.WTF::VectorBufferBase.393" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.401 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.402 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.413" = type { %"class.absl::optional_internal::optional_data.414" }
%"class.absl::optional_internal::optional_data.414" = type { %"class.absl::optional_internal::optional_data_base.415" }
%"class.absl::optional_internal::optional_data_base.415" = type { %"class.absl::optional_internal::optional_data_dtor_base.416" }
%"class.absl::optional_internal::optional_data_dtor_base.416" = type { i8, %union.anon.417 }
%union.anon.417 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.643 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.644", i64, %"class.WTF::Vector.646", %"class.WTF::Vector.651" }
%"class.WTF::RefCounted.644" = type { %"class.base::RefCounted.645" }
%"class.base::RefCounted.645" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.646" = type { %"class.WTF::VectorBuffer.647" }
%"class.WTF::VectorBuffer.647" = type { %"class.WTF::VectorBufferBase.648" }
%"class.WTF::VectorBufferBase.648" = type { i8*, i32, i32 }
%"class.WTF::Vector.651" = type { %"class.WTF::VectorBuffer.652" }
%"class.WTF::VectorBuffer.652" = type { %"class.WTF::VectorBufferBase.653" }
%"class.WTF::VectorBufferBase.653" = type { %"class.std::__1::unique_ptr.654"*, i32, i32 }
%"class.std::__1::unique_ptr.654" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.657" }
%"class.std::__1::__tree.657" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.658", %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.blink::HeapHashMap.2387" = type { %"class.WTF::HashMap.2390" }
%"class.WTF::HashMap.2390" = type { %"class.WTF::HashTable.2391" }
%"class.WTF::HashTable.2391" = type <{ %"struct.WTF::KeyValuePair.2393"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2393" = type opaque
%"class.blink::HeapVector.2394" = type { %"class.WTF::Vector.2397" }
%"class.WTF::Vector.2397" = type { %"class.WTF::VectorBuffer.2398" }
%"class.WTF::VectorBuffer.2398" = type { %"class.WTF::VectorBufferBase.2399" }
%"class.WTF::VectorBufferBase.2399" = type { %"class.blink::Member.306"*, i32, i32 }
%"class.blink::Member.2401" = type { %"class.blink::MemberBase.2402" }
%"class.blink::MemberBase.2402" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.2403" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2404", { i64, i64 } }
%"class.blink::WeakMember.2404" = type { %"class.blink::MemberBase.1653" }
%"class.blink::HeapHashMap.2405" = type { %"class.WTF::HashMap.2408" }
%"class.WTF::HashMap.2408" = type { %"class.WTF::HashTable.2409" }
%"class.WTF::HashTable.2409" = type <{ %"struct.WTF::KeyValuePair.2411"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2411" = type opaque
%"class.WTF::Vector.2412" = type { %"class.WTF::VectorBuffer.2413" }
%"class.WTF::VectorBuffer.2413" = type { %"class.WTF::VectorBufferBase.2414" }
%"class.WTF::VectorBufferBase.2414" = type { %class.scoped_refptr.2415*, i32, i32 }
%class.scoped_refptr.2415 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.2418" = type { %"class.WTF::HashSet.2421" }
%"class.WTF::HashSet.2421" = type { %"class.WTF::HashTable.2422" }
%"class.WTF::HashTable.2422" = type <{ %"class.blink::Member.641"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2424" = type { %"class.std::__1::__compressed_pair.2425" }
%"class.std::__1::__compressed_pair.2425" = type { %"struct.std::__1::__compressed_pair_elem.2426" }
%"struct.std::__1::__compressed_pair_elem.2426" = type { %"class.WTF::HashSet.1245"* }
%"class.base::WeakPtr.2365" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.2430" = type { %"class.blink::Member.2431" }
%"class.blink::Member.2431" = type { %"class.blink::MemberBase.2432" }
%"class.blink::MemberBase.2432" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2433" = type { %"class.blink::MemberBase.2434" }
%"class.blink::MemberBase.2434" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.2435" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1660" = type { %"class.std::__1::__compressed_pair.1661" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.1662" }
%"struct.std::__1::__compressed_pair_elem.1662" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1670" = type { %"class.WTF::VectorBuffer.1671" }
%"class.WTF::VectorBuffer.1671" = type { %"class.WTF::VectorBufferBase.1672" }
%"class.WTF::VectorBufferBase.1672" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.437 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.874", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.1010", %"class.blink::Member.1010", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1677" }
%"class.blink::HeapHashMap.1677" = type { %"class.WTF::HashMap.1680" }
%"class.WTF::HashMap.1680" = type { %"class.WTF::HashTable.1681" }
%"class.WTF::HashTable.1681" = type <{ %"struct.WTF::KeyValuePair.1683"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1683" = type opaque
%"class.blink::Member.1684" = type { %"class.blink::MemberBase.1685" }
%"class.blink::MemberBase.1685" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1686" = type { %"class.WTF::HashSet.1689" }
%"class.WTF::HashSet.1689" = type { %"class.WTF::HashTable.1690" }
%"class.WTF::HashTable.1690" = type <{ %"class.blink::WeakMember.1692"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1692" = type opaque
%"class.blink::HeapHashSet.1693" = type { %"class.WTF::HashSet.1696" }
%"class.WTF::HashSet.1696" = type { %"class.WTF::HashTable.1697" }
%"class.WTF::HashTable.1697" = type <{ %"class.blink::WeakMember.1699"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1699" = type opaque
%"class.blink::Member.1700" = type { %"class.blink::MemberBase.1701" }
%"class.blink::MemberBase.1701" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.874", i32, i32, i32, %"class.blink::Member.1125", %"class.blink::Member.1706", %"class.blink::Member.1737", %"class.blink::HeapHashMap.1739", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1746", %"class.blink::HeapHashSet.1746", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1752", %"class.blink::Member.1766", %"class.blink::Member.1796", %"class.blink::Member.1798", %"class.blink::Member.1804", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1962", %"class.blink::Member.1968", %"class.blink::HeapHashMap.2030", %"class.blink::HeapHashMap.2037", %"class.std::__1::unique_ptr.2044", i32, %"class.blink::HeapVector.2050", %"class.blink::HeapVector.2050", %"class.blink::HeapVector.1718", %"class.blink::HeapHashSet.2058", %"class.blink::HeapHashMap.2065", %"class.blink::Member.2072", %"class.blink::HeapHashMap.2074", %class.scoped_refptr.2081, %class.scoped_refptr.2082, %"class.blink::Member.50", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.2083", %"class.blink::Member.1079" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.1012", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1710", %"class.blink::HeapVector.1718", i8 }>
%"class.blink::HeapVector.1710" = type { %"class.WTF::Vector.1713" }
%"class.WTF::Vector.1713" = type { %"class.WTF::VectorBuffer.1714" }
%"class.WTF::VectorBuffer.1714" = type { %"class.WTF::VectorBufferBase.1715" }
%"class.WTF::VectorBufferBase.1715" = type { %"class.blink::Member.1716"*, i32, i32 }
%"class.blink::Member.1716" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet.1726" }
%"class.blink::HeapListHashSet.1726" = type { %"class.WTF::ListHashSet.base.1736", [7 x i8] }
%"class.WTF::ListHashSet.base.1736" = type <{ %"class.WTF::HashTable.1731", %"class.blink::Member.1733", %"class.blink::Member.1733", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1731" = type <{ %"class.blink::Member.1733"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::HeapListHashSetNode.1735"* }
%"class.blink::HeapListHashSetNode.1735" = type { %"class.blink::Member.1010", %"class.blink::Member.1733", %"class.blink::Member.1733" }
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1739" = type { %"class.WTF::HashMap.1742" }
%"class.WTF::HashMap.1742" = type { %"class.WTF::HashTable.1743" }
%"class.WTF::HashTable.1743" = type <{ %"struct.WTF::KeyValuePair.1745"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1745" = type opaque
%"class.blink::HeapHashSet.1746" = type { %"class.WTF::HashSet.1749" }
%"class.WTF::HashSet.1749" = type { %"class.WTF::HashTable.1750" }
%"class.WTF::HashTable.1750" = type <{ %"class.blink::Member.1012"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1752" = type { %"class.blink::MemberBase.1753" }
%"class.blink::MemberBase.1753" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1756", %"class.blink::Member.1758" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1756" = type { %"class.blink::MemberBase.1757" }
%"class.blink::MemberBase.1757" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1762", %"class.blink::Member.1764" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1762" = type { %"class.blink::MemberBase.1763" }
%"class.blink::MemberBase.1763" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1764" = type { %"class.blink::MemberBase.1765" }
%"class.blink::MemberBase.1765" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.2281", %"class.blink::Member.1758", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.2288] }
%"class.blink::HeapVector.2281" = type { %"class.WTF::Vector.2284" }
%"class.WTF::Vector.2284" = type { %"class.WTF::VectorBuffer.2285" }
%"class.WTF::VectorBuffer.2285" = type { %"class.WTF::VectorBufferBase.2286" }
%"class.WTF::VectorBufferBase.2286" = type { %"class.blink::Member.1764"*, i32, i32 }
%class.sk_sp.2288 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.2289, i32, %"class.absl::optional.2290", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.202" }>
%class.sk_sp.2289 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.2290" = type { %"class.absl::optional_internal::optional_data.2291" }
%"class.absl::optional_internal::optional_data.2291" = type { %"class.absl::optional_internal::optional_data_base.2292" }
%"class.absl::optional_internal::optional_data_base.2292" = type { %"class.absl::optional_internal::optional_data_dtor_base.2293" }
%"class.absl::optional_internal::optional_data_dtor_base.2293" = type { i8, %union.anon.2294 }
%union.anon.2294 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1766" = type { %"class.blink::MemberBase.1767" }
%"class.blink::MemberBase.1767" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.874", %class.scoped_refptr.1777, %"class.blink::SelectorFilter", %"class.blink::Member.1737", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1770" }
%"class.blink::HeapHashMap.1770" = type { %"class.WTF::HashMap.1773" }
%"class.WTF::HashMap.1773" = type { %"class.WTF::HashTable.1774" }
%"class.WTF::HashTable.1774" = type <{ %"struct.WTF::KeyValuePair.1776"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1776" = type opaque
%class.scoped_refptr.1777 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1778", %"class.std::__1::unique_ptr.1790" }
%"class.blink::HeapVector.1778" = type { %"class.WTF::Vector.1781" }
%"class.WTF::Vector.1781" = type { %"class.WTF::VectorBuffer.1782" }
%"class.WTF::VectorBuffer.1782" = type { %"class.WTF::VectorBufferBase.1783" }
%"class.WTF::VectorBufferBase.1783" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.1079", %"class.WTF::Vector.1784" }
%"class.WTF::Vector.1784" = type { %"class.WTF::VectorBuffer.1785" }
%"class.WTF::VectorBuffer.1785" = type { %"class.WTF::VectorBufferBase.1786", [16 x i8] }
%"class.WTF::VectorBufferBase.1786" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1790" = type { %"class.std::__1::__compressed_pair.1791" }
%"class.std::__1::__compressed_pair.1791" = type { %"struct.std::__1::__compressed_pair_elem.1792" }
%"struct.std::__1::__compressed_pair_elem.1792" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1796" = type { %"class.blink::MemberBase.1797" }
%"class.blink::MemberBase.1797" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1798" = type { %"class.blink::MemberBase.1799" }
%"class.blink::MemberBase.1799" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1802", i8, [7 x i8] }>
%"class.blink::Member.1802" = type { %"class.blink::MemberBase.1803" }
%"class.blink::MemberBase.1803" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1804" = type { %"class.blink::MemberBase.1805" }
%"class.blink::MemberBase.1805" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1826", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1808", %"class.WTF::HashMap.1808", %"class.WTF::HashMap.1808", %"class.WTF::HashMap.1813", %class.scoped_refptr.1818, %class.scoped_refptr.1825, %class.scoped_refptr.1824, %"class.WTF::Vector.1148", %"class.WTF::Vector.1148", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1808" = type { %"class.WTF::HashTable.1809" }
%"class.WTF::HashTable.1809" = type <{ %"struct.WTF::KeyValuePair.1812"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1812" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3130 }
%class.scoped_refptr.3130 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1819", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1821", %"union.blink::InvalidationSet::Backing.1822", %"union.blink::InvalidationSet::Backing.1823", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1819" = type { %"class.base::RefCounted.1820" }
%"class.base::RefCounted.1820" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1821" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1822" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1823" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1813" = type { %"class.WTF::HashTable.1814" }
%"class.WTF::HashTable.1814" = type <{ %"struct.WTF::KeyValuePair.1817"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1817" = type opaque
%class.scoped_refptr.1818 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1824, %class.scoped_refptr.1824 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1819", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1821", %"union.blink::InvalidationSet::Backing.1822", %"union.blink::InvalidationSet::Backing.1823", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1825 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1824 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1826" = type { %"class.blink::MemberBase.1827" }
%"class.blink::MemberBase.1827" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1830", %"class.blink::HeapHashMap.1830", %"class.blink::HeapHashMap.1830", %"class.blink::HeapHashMap.1830", %"class.blink::HeapVector.1837", %"class.blink::HeapVector.1837", %"class.blink::HeapVector.1837", %"class.blink::HeapVector.1837", %"class.blink::HeapVector.1837", %"class.blink::HeapVector.1837", %"class.blink::HeapVector.1837", %"class.blink::HeapVector.1837", %"class.blink::HeapVector.1837", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1873", %"class.blink::HeapVector.1881", %"class.blink::HeapVector.1889", %"class.blink::HeapVector.1906", %"class.blink::HeapVector.1914", %"class.blink::HeapVector.1922", %"class.blink::HeapVector.1931", %"class.WTF::Vector.1938", i32, %"class.blink::Member.1944" }
%"class.blink::HeapHashMap.1830" = type { %"class.WTF::HashMap.1833" }
%"class.WTF::HashMap.1833" = type { %"class.WTF::HashTable.1834" }
%"class.WTF::HashTable.1834" = type <{ %"struct.WTF::KeyValuePair.1836"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1836" = type { %"class.WTF::AtomicString", %"class.blink::Member.3140" }
%"class.blink::Member.3140" = type { %"class.blink::MemberBase.3141" }
%"class.blink::MemberBase.3141" = type { %"class.blink::HeapVector.1837"* }
%"class.blink::HeapVector.1837" = type { %"class.WTF::Vector.1840" }
%"class.WTF::Vector.1840" = type { %"class.WTF::VectorBuffer.1841" }
%"class.WTF::VectorBuffer.1841" = type { %"class.WTF::VectorBufferBase.1842" }
%"class.WTF::VectorBufferBase.1842" = type { %"class.blink::Member.1843"*, i32, i32 }
%"class.blink::Member.1843" = type { %"class.blink::MemberBase.1844" }
%"class.blink::MemberBase.1844" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1847", i64, [4 x i32] }
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.1090", %"class.blink::Member.1868" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1868" = type { %"class.blink::MemberBase.1869" }
%"class.blink::MemberBase.1869" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1873" = type { %"class.WTF::Vector.1876" }
%"class.WTF::Vector.1876" = type { %"class.WTF::VectorBuffer.1877" }
%"class.WTF::VectorBuffer.1877" = type { %"class.WTF::VectorBufferBase.1878" }
%"class.WTF::VectorBufferBase.1878" = type { %"class.blink::Member.1879"*, i32, i32 }
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.3136" }
%"class.blink::MemberBase.3136" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.1090", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1881" = type { %"class.WTF::Vector.1884" }
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"class.blink::Member.1887"*, i32, i32 }
%"class.blink::Member.1887" = type { %"class.blink::MemberBase.3137" }
%"class.blink::MemberBase.3137" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.1090" }
%"class.blink::HeapVector.1889" = type { %"class.WTF::Vector.1892" }
%"class.WTF::Vector.1892" = type { %"class.WTF::VectorBuffer.1893" }
%"class.WTF::VectorBuffer.1893" = type { %"class.WTF::VectorBufferBase.1894" }
%"class.WTF::VectorBufferBase.1894" = type { %"class.blink::Member.1895"*, i32, i32 }
%"class.blink::Member.1895" = type { %"class.blink::MemberBase.1896" }
%"class.blink::MemberBase.1896" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1897", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1897" = type { %"class.WTF::Vector.1900" }
%"class.WTF::Vector.1900" = type { %"class.WTF::VectorBuffer.1901" }
%"class.WTF::VectorBuffer.1901" = type { %"class.WTF::VectorBufferBase.1902" }
%"class.WTF::VectorBufferBase.1902" = type { %"class.blink::Member.1903"*, i32, i32 }
%"class.blink::Member.1903" = type opaque
%"class.blink::HeapVector.1906" = type { %"class.WTF::Vector.1909" }
%"class.WTF::Vector.1909" = type { %"class.WTF::VectorBuffer.1910" }
%"class.WTF::VectorBuffer.1910" = type { %"class.WTF::VectorBufferBase.1911" }
%"class.WTF::VectorBufferBase.1911" = type { %"class.blink::Member.1912"*, i32, i32 }
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.3138" }
%"class.blink::MemberBase.3138" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.1090" }
%"class.blink::HeapVector.1914" = type { %"class.WTF::Vector.1917" }
%"class.WTF::Vector.1917" = type { %"class.WTF::VectorBuffer.1918" }
%"class.WTF::VectorBuffer.1918" = type { %"class.WTF::VectorBufferBase.1919" }
%"class.WTF::VectorBufferBase.1919" = type { %"class.blink::Member.1920"*, i32, i32 }
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.3139" }
%"class.blink::MemberBase.3139" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", i32, [4 x i8] }>
%"class.blink::HeapVector.1922" = type { %"class.WTF::Vector.1925" }
%"class.WTF::Vector.1925" = type { %"class.WTF::VectorBuffer.1926" }
%"class.WTF::VectorBuffer.1926" = type { %"class.WTF::VectorBufferBase.1927" }
%"class.WTF::VectorBufferBase.1927" = type { %"class.blink::Member.1928"*, i32, i32 }
%"class.blink::Member.1928" = type { %"class.blink::MemberBase.1929" }
%"class.blink::MemberBase.1929" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50" }
%"class.blink::HeapVector.1931" = type { %"class.WTF::Vector.1934" }
%"class.WTF::Vector.1934" = type { %"class.WTF::VectorBuffer.1935" }
%"class.WTF::VectorBuffer.1935" = type { %"class.WTF::VectorBufferBase.1936" }
%"class.WTF::VectorBufferBase.1936" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1847", i32, i32 }
%"class.WTF::Vector.1938" = type { %"class.WTF::VectorBuffer.1939" }
%"class.WTF::VectorBuffer.1939" = type { %"class.WTF::VectorBufferBase.1940" }
%"class.WTF::VectorBufferBase.1940" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1941, i8, [7 x i8] }>
%class.scoped_refptr.1941 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1944" = type { %"class.blink::MemberBase.1945" }
%"class.blink::MemberBase.1945" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1948", %"class.blink::HeapHashMap.1948", %"class.blink::HeapHashMap.1948", %"class.blink::HeapHashMap.1948" }
%"class.blink::HeapHashMap.1948" = type { %"class.WTF::HashMap.1951" }
%"class.WTF::HashMap.1951" = type { %"class.WTF::HashTable.1952" }
%"class.WTF::HashTable.1952" = type <{ %"struct.WTF::KeyValuePair.1954"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1954" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1955" }
%"class.blink::HeapHashMap.1955" = type { %"class.WTF::HashMap.1958" }
%"class.WTF::HashMap.1958" = type { %"class.WTF::HashTable.1959" }
%"class.WTF::HashTable.1959" = type <{ %"struct.WTF::KeyValuePair.1961"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1961" = type { %"class.blink::Member.1062", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3131", %"class.WTF::Vector.3131" }
%"class.WTF::Vector.3131" = type { %"class.WTF::VectorBuffer.3132" }
%"class.WTF::VectorBuffer.3132" = type { %"class.WTF::VectorBufferBase.3133" }
%"class.WTF::VectorBufferBase.3133" = type { %class.scoped_refptr.3130*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.1010", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1962" = type { %"class.WTF::HashSet.1965" }
%"class.WTF::HashSet.1965" = type { %"class.WTF::HashTable.1966" }
%"class.WTF::HashTable.1966" = type <{ %"class.blink::Member.1079"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1968" = type { %"class.blink::MemberBase.1969" }
%"class.blink::MemberBase.1969" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember.1970", %"class.blink::Member.1972", %"class.blink::HeapHashSet.2011", %"class.blink::GenericFontFamilySettings" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.671" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::WeakMember.1970" = type { %"class.blink::MemberBase.1971" }
%"class.blink::MemberBase.1971" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.1976", %"class.blink::HeapHashMap.1983", %"class.blink::HeapHashMap.1990", %"class.blink::HeapLinkedHashSet.1997", i32, [4 x i8] }>
%"class.blink::HeapHashMap.1976" = type { %"class.WTF::HashMap.1979" }
%"class.WTF::HashMap.1979" = type { %"class.WTF::HashTable.1980" }
%"class.WTF::HashTable.1980" = type <{ %"struct.WTF::KeyValuePair.1982"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1982" = type opaque
%"class.blink::HeapHashMap.1983" = type { %"class.WTF::HashMap.1986" }
%"class.WTF::HashMap.1986" = type { %"class.WTF::HashTable.1987" }
%"class.WTF::HashTable.1987" = type <{ %"struct.WTF::KeyValuePair.1989"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1989" = type opaque
%"class.blink::HeapHashMap.1990" = type { %"class.WTF::HashMap.1993" }
%"class.WTF::HashMap.1993" = type { %"class.WTF::HashTable.1994" }
%"class.WTF::HashTable.1994" = type <{ %"struct.WTF::KeyValuePair.1996"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1996" = type opaque
%"class.blink::HeapLinkedHashSet.1997" = type { %"class.WTF::LinkedHashSet.2000" }
%"class.WTF::LinkedHashSet.2000" = type { %"class.WTF::HashMap.2001", %"class.WTF::VectorBackedLinkedList.2005" }
%"class.WTF::HashMap.2001" = type { %"class.WTF::HashTable.2002" }
%"class.WTF::HashTable.2002" = type <{ %"struct.WTF::KeyValuePair.2004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2004" = type <{ %"class.blink::Member.43", i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.2005" = type { %"class.WTF::Vector.2006", i32, i32 }
%"class.WTF::Vector.2006" = type { %"class.WTF::VectorBuffer.2007" }
%"class.WTF::VectorBuffer.2007" = type { %"class.WTF::VectorBufferBase.2008" }
%"class.WTF::VectorBufferBase.2008" = type { %"class.WTF::VectorBackedLinkedListNode.2009"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2009" = type { i32, i32, %"class.blink::Member.43" }
%"class.blink::HeapHashSet.2011" = type { %"class.WTF::HashSet.2014" }
%"class.WTF::HashSet.2014" = type { %"class.WTF::HashTable.2015" }
%"class.WTF::HashTable.2015" = type <{ %"class.blink::WeakMember.2017"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2017" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2018", %"class.WTF::HashMap.2018", %"class.WTF::HashMap.2018", %"class.WTF::HashMap.2018", %"class.WTF::HashMap.2018", %"class.WTF::HashMap.2018", %"class.WTF::HashMap.2018", %"class.std::__1::unique_ptr.2023" }
%"class.WTF::HashMap.2018" = type { %"class.WTF::HashTable.2019" }
%"class.WTF::HashTable.2019" = type <{ %"struct.WTF::KeyValuePair.2022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2022" = type opaque
%"class.std::__1::unique_ptr.2023" = type { %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2025" }
%"struct.std::__1::__compressed_pair_elem.2025" = type { %"class.WTF::Vector.2026"* }
%"class.WTF::Vector.2026" = type opaque
%"class.blink::HeapHashMap.2030" = type { %"class.WTF::HashMap.2033" }
%"class.WTF::HashMap.2033" = type { %"class.WTF::HashTable.2034" }
%"class.WTF::HashTable.2034" = type <{ %"struct.WTF::KeyValuePair.2036"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2036" = type opaque
%"class.blink::HeapHashMap.2037" = type { %"class.WTF::HashMap.2040" }
%"class.WTF::HashMap.2040" = type { %"class.WTF::HashTable.2041" }
%"class.WTF::HashTable.2041" = type <{ %"struct.WTF::KeyValuePair.2043"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2043" = type opaque
%"class.std::__1::unique_ptr.2044" = type { %"class.std::__1::__compressed_pair.2045" }
%"class.std::__1::__compressed_pair.2045" = type { %"struct.std::__1::__compressed_pair_elem.2046" }
%"struct.std::__1::__compressed_pair_elem.2046" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.2050" = type { %"class.WTF::Vector.2053" }
%"class.WTF::Vector.2053" = type { %"class.WTF::VectorBuffer.2054" }
%"class.WTF::VectorBuffer.2054" = type { %"class.WTF::VectorBufferBase.2055" }
%"class.WTF::VectorBufferBase.2055" = type { %"struct.std::__1::pair.2056"*, i32, i32 }
%"struct.std::__1::pair.2056" = type opaque
%"class.blink::HeapVector.1718" = type { %"class.WTF::Vector.1721" }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"struct.std::__1::pair.1724"*, i32, i32 }
%"struct.std::__1::pair.1724" = type opaque
%"class.blink::HeapHashSet.2058" = type { %"class.WTF::HashSet.2061" }
%"class.WTF::HashSet.2061" = type { %"class.WTF::HashTable.2062" }
%"class.WTF::HashTable.2062" = type <{ %"class.blink::WeakMember.2064"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2064" = type { %"class.blink::MemberBase.1126" }
%"class.blink::HeapHashMap.2065" = type { %"class.WTF::HashMap.2068" }
%"class.WTF::HashMap.2068" = type { %"class.WTF::HashTable.2069" }
%"class.WTF::HashTable.2069" = type <{ %"struct.WTF::KeyValuePair.2071"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2071" = type { %"class.WTF::AtomicString", %"class.blink::Member.1895" }
%"class.blink::Member.2072" = type { %"class.blink::MemberBase.2073" }
%"class.blink::MemberBase.2073" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.2074" = type { %"class.WTF::HashMap.2077" }
%"class.WTF::HashMap.2077" = type { %"class.WTF::HashTable.2078" }
%"class.WTF::HashTable.2078" = type <{ %"struct.WTF::KeyValuePair.2080"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2080" = type opaque
%class.scoped_refptr.2081 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.2082 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::HeapHashSet.2083" = type { %"class.WTF::HashSet.2086" }
%"class.WTF::HashSet.2086" = type { %"class.WTF::HashTable.2087" }
%"class.WTF::HashTable.2087" = type <{ %"class.blink::Member.2089"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2089" = type opaque
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1012", %"class.blink::HeapVector.1119" }
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.2096" = type { %"class.WTF::HashMap.2099" }
%"class.WTF::HashMap.2099" = type { %"class.WTF::HashTable.2100" }
%"class.WTF::HashTable.2100" = type <{ %"struct.WTF::KeyValuePair.2102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2102" = type opaque
%"class.WTF::Vector.2103" = type { %"class.WTF::VectorBuffer.2104" }
%"class.WTF::VectorBuffer.2104" = type { %"class.WTF::VectorBufferBase.2105" }
%"class.WTF::VectorBufferBase.2105" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.2108" = type { %"class.blink::MemberBase.2109" }
%"class.blink::MemberBase.2109" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2111" }
%"class.blink::MemberBase.2111" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.2112" = type { %"class.blink::MemberBase.2113" }
%"class.blink::MemberBase.2113" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.2114" = type { %"class.WTF::Vector.2117" }
%"class.WTF::Vector.2117" = type { %"class.WTF::VectorBuffer.2118" }
%"class.WTF::VectorBuffer.2118" = type { %"class.WTF::VectorBufferBase.2119" }
%"class.WTF::VectorBufferBase.2119" = type { %"class.blink::Member.2120"*, i32, i32 }
%"class.blink::Member.2120" = type opaque
%"class.std::__1::unique_ptr.2122" = type { %"class.std::__1::__compressed_pair.2123" }
%"class.std::__1::__compressed_pair.2123" = type { %"struct.std::__1::__compressed_pair_elem.2124" }
%"struct.std::__1::__compressed_pair_elem.2124" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.2128" = type { %"class.WTF::HashSet.2131" }
%"class.WTF::HashSet.2131" = type { %"class.WTF::HashTable.2132" }
%"class.WTF::HashTable.2132" = type <{ %"class.blink::WeakMember.2134"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2134" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.2135", i32, [4 x i8] }>
%"class.WTF::Vector.2135" = type { %"class.WTF::VectorBuffer.2136" }
%"class.WTF::VectorBuffer.2136" = type { %"class.WTF::VectorBufferBase.2137" }
%"class.WTF::VectorBufferBase.2137" = type { %"struct.std::__1::pair.2138"*, i32, i32 }
%"struct.std::__1::pair.2138" = type opaque
%"class.blink::Member.2141" = type { %"class.blink::MemberBase.2142" }
%"class.blink::MemberBase.2142" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.2143" = type { %"class.WTF::VectorBuffer.2144" }
%"class.WTF::VectorBuffer.2144" = type { %"class.WTF::VectorBufferBase.2145" }
%"class.WTF::VectorBufferBase.2145" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.2148" = type { %"class.std::__1::__compressed_pair.2149" }
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.2150" }
%"struct.std::__1::__compressed_pair_elem.2150" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.2154" = type { %"class.WTF::Vector.2157" }
%"class.WTF::Vector.2157" = type { %"class.WTF::VectorBuffer.2158" }
%"class.WTF::VectorBuffer.2158" = type { %"class.WTF::VectorBufferBase.2159" }
%"class.WTF::VectorBufferBase.2159" = type { %"class.blink::Member.2160"*, i32, i32 }
%"class.blink::Member.2160" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.874" }
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.2170" = type { %"class.blink::MemberBase.2171" }
%"class.blink::MemberBase.2171" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2172" = type { %"class.WTF::HashTable.2173" }
%"class.WTF::HashTable.2173" = type <{ %"struct.WTF::KeyValuePair.2176"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2176" = type opaque
%"class.blink::Member.2177" = type { %"class.blink::MemberBase.2178" }
%"class.blink::MemberBase.2178" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2179" = type { %"class.blink::MemberBase.2180" }
%"class.blink::MemberBase.2180" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2181" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2183" = type { %"class.blink::MemberBase.2184" }
%"class.blink::MemberBase.2184" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1675" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1676", { i64, i64 } }
%"class.blink::WeakMember.1676" = type { %"class.blink::MemberBase.875" }
%"class.blink::HeapHashSet.2185" = type { %"class.WTF::HashSet.2188" }
%"class.WTF::HashSet.2188" = type { %"class.WTF::HashTable.2189" }
%"class.WTF::HashTable.2189" = type <{ %"class.blink::Member.2191"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2191" = type opaque
%"class.blink::Member.2192" = type { %"class.blink::MemberBase.2193" }
%"class.blink::MemberBase.2193" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2194" = type { %"class.blink::MemberBase.2195" }
%"class.blink::MemberBase.2195" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2196" = type { %"class.blink::MemberBase.2197" }
%"class.blink::MemberBase.2197" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.2198" = type { %"class.blink::MemberBase.2199" }
%"class.blink::MemberBase.2199" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2200" = type { %"class.blink::MemberBase.2201" }
%"class.blink::MemberBase.2201" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2202" = type { %"class.std::__1::__compressed_pair.2203" }
%"class.std::__1::__compressed_pair.2203" = type { %"struct.std::__1::__compressed_pair_elem.2204" }
%"struct.std::__1::__compressed_pair_elem.2204" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2208" = type { %"class.std::__1::__compressed_pair.2209" }
%"class.std::__1::__compressed_pair.2209" = type { %"struct.std::__1::__compressed_pair_elem.2210" }
%"struct.std::__1::__compressed_pair_elem.2210" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1164", %"class.WTF::HashSet.1164", %"class.WTF::HashSet.1164", %"class.WTF::HashSet.1164", %"class.WTF::HashSet.1164", %"class.WTF::HashSet.1164", i32, [4 x i8], %"class.WTF::HashMap.2211", %"class.WTF::HashMap.2211", %"class.WTF::HashMap.2211", %"class.WTF::HashMap.2211", %"class.WTF::HashMap.2211", %"class.WTF::HashMap.2211", %"class.WTF::HashMap.2211", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.2211" = type { %"class.WTF::HashTable.2212" }
%"class.WTF::HashTable.2212" = type <{ %"struct.WTF::KeyValuePair.2215"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2215" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.2219" = type { %"class.blink::MemberBase.2220" }
%"class.blink::MemberBase.2220" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2221" = type { %"class.blink::MemberBase.2222" }
%"class.blink::MemberBase.2222" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2223" = type { %"class.blink::MemberBase.2224" }
%"class.blink::MemberBase.2224" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2225" = type { %"class.blink::MemberBase.2226" }
%"class.blink::MemberBase.2226" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.2227" = type { %"class.WTF::HashMap.2230" }
%"class.WTF::HashMap.2230" = type { %"class.WTF::HashTable.2231" }
%"class.WTF::HashTable.2231" = type <{ %"struct.WTF::KeyValuePair.2233"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2233" = type opaque
%"class.blink::Member.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2236" = type { %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.2238" }
%"struct.std::__1::__compressed_pair_elem.2238" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2242" = type { %"class.blink::MemberBase.2243" }
%"class.blink::MemberBase.2243" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2246" = type { %"class.WTF::HashMap.2249" }
%"class.WTF::HashMap.2249" = type { %"class.WTF::HashTable.2250" }
%"class.WTF::HashTable.2250" = type <{ %"struct.WTF::KeyValuePair.2252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2252" = type opaque
%"class.blink::HeapObserverSet.2253" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2254" }
%"class.blink::HeapHashSet.2254" = type { %"class.WTF::HashSet.2257" }
%"class.WTF::HashSet.2257" = type { %"class.WTF::HashTable.2258" }
%"class.WTF::HashTable.2258" = type <{ %"class.blink::WeakMember.2260"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2260" = type opaque
%"class.blink::Member.2261" = type { %"class.blink::MemberBase.2262" }
%"class.blink::MemberBase.2262" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2263" = type { %"class.blink::MemberBase.2264" }
%"class.blink::MemberBase.2264" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.874", %"class.blink::HeapHashSet.2270", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2277", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2270" = type { %"class.WTF::HashSet.2273" }
%"class.WTF::HashSet.2273" = type { %"class.WTF::HashTable.2274" }
%"class.WTF::HashTable.2274" = type <{ %"class.blink::Member.2276"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2276" = type opaque
%"class.blink::HeapTaskRunnerTimer.2277" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2278", { i64, i64 } }
%"class.blink::WeakMember.2278" = type { %"class.blink::MemberBase.2264" }
%"class.blink::WeakMember.2265" = type { %"class.blink::MemberBase.1011" }
%"class.blink::Member.2266" = type { %"class.blink::MemberBase.2267" }
%"class.blink::MemberBase.2267" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.898 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.900", i64, %"class.WTF::Vector.904", %"class.WTF::Vector.909", %"class.WTF::Vector.915", %"class.WTF::Vector.933", %class.scoped_refptr.88, %"class.WTF::HashMap.939", %"class.WTF::Vector.944", %"class.WTF::Vector.904", %"class.WTF::Vector.950", %"class.WTF::HashMap.956", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.899" }
%"class.base::RefCountedThreadSafe.899" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { i8* }
%"class.WTF::Vector.909" = type { %"class.WTF::VectorBuffer.910" }
%"class.WTF::VectorBuffer.910" = type { %"class.WTF::VectorBufferBase.911", [8 x i8] }
%"class.WTF::VectorBufferBase.911" = type { %class.scoped_refptr.912*, i32, i32 }
%class.scoped_refptr.912 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.915" = type { %"class.WTF::VectorBuffer.916" }
%"class.WTF::VectorBuffer.916" = type { %"class.WTF::VectorBufferBase.917" }
%"class.WTF::VectorBufferBase.917" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.919", %"class.std::__1::unique_ptr.925" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.918 }
%class.scoped_refptr.918 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.934" }
%"class.WTF::VectorBuffer.934" = type { %"class.WTF::VectorBufferBase.935" }
%"class.WTF::VectorBufferBase.935" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.936", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.936" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.939" = type { %"class.WTF::HashTable.940" }
%"class.WTF::HashTable.940" = type <{ %"struct.WTF::KeyValuePair.943"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.943" = type opaque
%"class.WTF::Vector.944" = type { %"class.WTF::VectorBuffer.945" }
%"class.WTF::VectorBuffer.945" = type { %"class.WTF::VectorBufferBase.946" }
%"class.WTF::VectorBufferBase.946" = type { %"class.mojo::ScopedHandleBase.947"*, i32, i32 }
%"class.mojo::ScopedHandleBase.947" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.904" = type { %"class.WTF::VectorBuffer.905" }
%"class.WTF::VectorBuffer.905" = type { %"class.WTF::VectorBufferBase.906", [16 x i8] }
%"class.WTF::VectorBufferBase.906" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.951" }
%"class.WTF::VectorBuffer.951" = type { %"class.WTF::VectorBufferBase.952" }
%"class.WTF::VectorBufferBase.952" = type { %"class.mojo::PendingRemote.953"*, i32, i32 }
%"class.mojo::PendingRemote.953" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.956" = type { %"class.WTF::HashTable.957" }
%"class.WTF::HashTable.957" = type <{ %"struct.WTF::KeyValuePair.960"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.960" = type { i8**, %"class.std::__1::unique_ptr.3170" }
%"class.std::__1::unique_ptr.3170" = type { %"class.std::__1::__compressed_pair.3171" }
%"class.std::__1::__compressed_pair.3171" = type { %"struct.std::__1::__compressed_pair_elem.3172" }
%"struct.std::__1::__compressed_pair_elem.3172" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.961" = type { %"class.WTF::HashSet.964" }
%"class.WTF::HashSet.964" = type { %"class.WTF::HashTable.965" }
%"class.WTF::HashTable.965" = type <{ %"class.blink::WeakMember.967"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.967" = type opaque
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.975", %"class.blink::Member.975", %"class.blink::Member.977", %"class.blink::Member.979", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.970" }
%"class.absl::optional.970" = type { %"class.absl::optional_internal::optional_data.971" }
%"class.absl::optional_internal::optional_data.971" = type { %"class.absl::optional_internal::optional_data_base.972" }
%"class.absl::optional_internal::optional_data_base.972" = type { %"class.absl::optional_internal::optional_data_dtor_base.973" }
%"class.absl::optional_internal::optional_data_dtor_base.973" = type { i8, %union.anon.974 }
%union.anon.974 = type { i64 }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::Event"* }
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.981" = type { %"class.WTF::HashMap.984" }
%"class.WTF::HashMap.984" = type { %"class.WTF::HashTable.985" }
%"class.WTF::HashTable.985" = type <{ %"struct.WTF::KeyValuePair.987"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.987" = type opaque
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1006", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1025", %"class.blink::Member.1027", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1008", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1018", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1018" = type { %"class.WTF::HashMap.1021" }
%"class.WTF::HashMap.1021" = type { %"class.WTF::HashTable.1022" }
%"class.WTF::HashTable.1022" = type <{ %"struct.WTF::KeyValuePair.1024"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1024" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.1010", i32, i32 }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1033", %"class.blink::Member.1035", %"class.blink::Member.1037" }
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1033", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1043" }
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::HeapHashMap.1047"* }
%"class.blink::HeapHashMap.1047" = type opaque
%"class.WTF::Vector.1048" = type { %"class.WTF::VectorBuffer.1049" }
%"class.WTF::VectorBuffer.1049" = type { %"class.WTF::VectorBufferBase.1050" }
%"class.WTF::VectorBufferBase.1050" = type { i8*, i32, i32 }
%"class.util::TokenType" = type { %"class.base::StrongAlias.761" }
%"class.base::StrongAlias.761" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1057" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1060" }
%"class.WTF::VectorBuffer.1060" = type { %"class.WTF::VectorBufferBase.1061" }
%"class.WTF::VectorBufferBase.1061" = type { i64*, i32, i32 }
%"class.blink::FontFaceSetDocument" = type <{ %"class.blink::FontFaceSet", %"class.blink::Supplement", %"class.blink::FontFaceSetDocument::FontLoadHistogram", %"class.blink::FontFaceSetDocument::FontDisplayAutoAlignHistogram", [4 x i8], %"class.blink::HeapTaskRunnerTimer.2452", i8, [7 x i8] }>
%"class.blink::FontFaceSet" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::SetlikeIterable", %"class.blink::FontFace::LoadFontCallback", i8, i8, i8, %"class.blink::HeapLinkedHashSet.1997", %"class.blink::HeapHashSet.2436", %"class.blink::HeapVector.2442", %"class.blink::HeapVector.2442", %"class.blink::Member.2449" }
%"class.blink::SetlikeIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::FontFace::LoadFontCallback" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashSet.2436" = type { %"class.WTF::HashSet.2439" }
%"class.WTF::HashSet.2439" = type { %"class.WTF::HashTable.2440" }
%"class.WTF::HashTable.2440" = type <{ %"class.blink::Member.43"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.2442" = type { %"class.WTF::Vector.2445" }
%"class.WTF::Vector.2445" = type { %"class.WTF::VectorBuffer.2446" }
%"class.WTF::VectorBuffer.2446" = type { %"class.WTF::VectorBufferBase.2447" }
%"class.WTF::VectorBufferBase.2447" = type { %"class.blink::Member.43"*, i32, i32 }
%"class.blink::Member.2449" = type { %"class.blink::MemberBase.2450" }
%"class.blink::MemberBase.2450" = type { %"class.blink::ScriptPromiseProperty.2451"* }
%"class.blink::ScriptPromiseProperty.2451" = type <{ %"class.blink::ExecutionContextClient", i32, [4 x i8], %"class.blink::Member.3049", %"class.blink::Member.54", %"class.blink::HeapVector.3051", %"class.blink::HeapVector.3123", i8, i8, [6 x i8] }>
%"class.blink::Member.3049" = type { %"class.blink::MemberBase.3050" }
%"class.blink::MemberBase.3050" = type { %"class.blink::FontFaceSet"* }
%"class.blink::HeapVector.3051" = type { %"class.WTF::Vector.3054" }
%"class.WTF::Vector.3054" = type { %"class.WTF::VectorBuffer.3055" }
%"class.WTF::VectorBuffer.3055" = type { %"class.WTF::VectorBufferBase.3056" }
%"class.WTF::VectorBufferBase.3056" = type { %"class.blink::Member.3057"*, i32, i32 }
%"class.blink::Member.3057" = type { %"class.blink::MemberBase.3058" }
%"class.blink::MemberBase.3058" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.3061", i32, %"class.blink::Member.3062", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.3116", %"class.blink::SelfKeepAlive.3119" }
%"class.blink::ThreadState::PrefinalizerRegistration.3061" = type { i8 }
%"class.blink::Member.3062" = type { %"class.blink::MemberBase.3063" }
%"class.blink::MemberBase.3063" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3066, %"class.blink::Member.3067", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3114" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.3066 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3067" = type { %"class.blink::MemberBase.3068" }
%"class.blink::MemberBase.3068" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.3071", %"class.blink::HeapHashMap.3080", %"class.std::__1::unique_ptr.3090", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.3102", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.3105" }
%"class.blink::HeapHashMap.3071" = type { %"class.WTF::HashMap.3074" }
%"class.WTF::HashMap.3074" = type { %"class.WTF::HashTable.3075" }
%"class.WTF::HashTable.3075" = type <{ %"struct.WTF::KeyValuePair.3077"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3077" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.3080" = type { %"class.WTF::HashMap.3083" }
%"class.WTF::HashMap.3083" = type { %"class.WTF::HashTable.3084" }
%"class.WTF::HashTable.3084" = type <{ %"struct.WTF::KeyValuePair.3086"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3086" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.3087" }
%"class.blink::TraceWrapperV8Reference.3087" = type { %"class.v8::TracedReference.3088" }
%"class.v8::TracedReference.3088" = type { %"class.v8::BasicTracedReference.3089" }
%"class.v8::BasicTracedReference.3089" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.3090" = type { %"class.std::__1::__compressed_pair.3091" }
%"class.std::__1::__compressed_pair.3091" = type { %"struct.std::__1::__compressed_pair_elem.3092" }
%"struct.std::__1::__compressed_pair_elem.3092" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.3093" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.3093" = type { %"class.std::__1::__compressed_pair.3094" }
%"class.std::__1::__compressed_pair.3094" = type { %"struct.std::__1::__compressed_pair_elem.3095" }
%"struct.std::__1::__compressed_pair_elem.3095" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.3102" = type { %"class.v8::Persistent.3103" }
%"class.v8::Persistent.3103" = type { %"class.v8::PersistentBase.3104" }
%"class.v8::PersistentBase.3104" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.3105" = type { %"class.WTF::HashMap.3108" }
%"class.WTF::HashMap.3108" = type { %"class.WTF::HashTable.3109" }
%"class.WTF::HashTable.3109" = type <{ %"struct.WTF::KeyValuePair.3111"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3111" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3112" }
%"class.blink::Persistent.3112" = type { %"class.blink::PersistentBase.3113" }
%"class.blink::PersistentBase.3113" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.3114" = type { %"class.base::StrongAlias.3115" }
%"class.base::StrongAlias.3115" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.3062", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.3116", %class.scoped_refptr.437 }
%"class.blink::TraceWrapperV8Reference.3116" = type { %"class.v8::TracedReference.3117" }
%"class.v8::TracedReference.3117" = type { %"class.v8::BasicTracedReference.3118" }
%"class.v8::BasicTracedReference.3118" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.3119" = type { %"class.blink::Persistent.3120" }
%"class.blink::Persistent.3120" = type { %"class.blink::PersistentBase.3121" }
%"class.blink::PersistentBase.3121" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.3123" = type { %"class.WTF::Vector.3126" }
%"class.WTF::Vector.3126" = type { %"class.WTF::VectorBuffer.3127" }
%"class.WTF::VectorBuffer.3127" = type { %"class.WTF::VectorBufferBase.3128" }
%"class.WTF::VectorBufferBase.3128" = type { %"class.blink::ScriptPromise"*, i32, i32 }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.3062", %"class.blink::ScriptValue" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.874" }
%"class.blink::FontFaceSetDocument::FontLoadHistogram" = type { i32 }
%"class.blink::FontFaceSetDocument::FontDisplayAutoAlignHistogram" = type <{ i32, i8, i8, [2 x i8] }>
%"class.blink::HeapTaskRunnerTimer.2452" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2453", { i64, i64 } }
%"class.blink::WeakMember.2453" = type { %"class.blink::MemberBase.2454" }
%"class.blink::MemberBase.2454" = type { %"class.blink::FontFaceSetDocument"* }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable.2490", %"class.blink::Supplementable.2491", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.2506", %"class.blink::Member.2512", %"class.blink::Member.2514", %"class.blink::Member.2524", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.2778", i32, %"class.blink::Member.2785", %"class.std::__1::unique_ptr.2208", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.2808", %"class.absl::optional.2812", i32, %"class.std::__1::unique_ptr.2202", %"class.std::__1::unique_ptr.2818", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.2470", %"class.blink::Member.1652", %"class.blink::HeapHashSet.2476", %class.scoped_refptr.2482, %"class.blink::Member.2484", %"class.blink::Member.2486", i32, %"class.WTF::Vector.154", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.890" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.2455" }
%"class.blink::PersistentBase.2455" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.2458" }
%"class.blink::Supplementable.2458" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2459" }
%"class.blink::HeapHashMap.2459" = type { %"class.WTF::HashMap.2462" }
%"class.WTF::HashMap.2462" = type { %"class.WTF::HashTable.2463" }
%"class.WTF::HashTable.2463" = type <{ %"struct.WTF::KeyValuePair.2465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2465" = type { i8*, %"class.blink::Member.3156" }
%"class.blink::Member.3156" = type { %"class.blink::MemberBase.3157" }
%"class.blink::MemberBase.3157" = type { %"class.blink::Supplement.3158"* }
%"class.blink::Supplement.3158" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3159" }
%"class.blink::Member.3159" = type { %"class.blink::MemberBase.3160" }
%"class.blink::MemberBase.3160" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.2466" }
%"struct.std::__1::atomic.2466" = type { %"struct.std::__1::__atomic_base.2467" }
%"struct.std::__1::__atomic_base.2467" = type { %"struct.std::__1::__cxx_atomic_impl.2468" }
%"struct.std::__1::__cxx_atomic_impl.2468" = type { %"struct.std::__1::__cxx_atomic_base_impl.2469" }
%"struct.std::__1::__cxx_atomic_base_impl.2469" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.2470" = type { %"class.std::__1::__compressed_pair.2471" }
%"class.std::__1::__compressed_pair.2471" = type { %"struct.std::__1::__compressed_pair_elem.2472" }
%"struct.std::__1::__compressed_pair_elem.2472" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::HeapHashSet.2476" = type { %"class.WTF::HashSet.2479" }
%"class.WTF::HashSet.2479" = type { %"class.WTF::HashTable.2480" }
%"class.WTF::HashTable.2480" = type <{ %"class.blink::WeakMember.2404"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2482 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.2483", [4 x i8] }>
%"class.base::RefCounted.2483" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.2484" = type { %"class.blink::MemberBase.2485" }
%"class.blink::MemberBase.2485" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.2486" = type { %"class.blink::MemberBase.2487" }
%"class.blink::MemberBase.2487" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2488", i32, [4 x i8] }>
%"class.std::__1::bitset.2488" = type { %"class.std::__1::__bitset.2489" }
%"class.std::__1::__bitset.2489" = type { [25 x i64] }
%"class.blink::ActiveScriptWrappable.2490" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Supplementable.2491" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2492" }
%"class.blink::HeapHashMap.2492" = type { %"class.WTF::HashMap.2495" }
%"class.WTF::HashMap.2495" = type { %"class.WTF::HashTable.2496" }
%"class.WTF::HashTable.2496" = type <{ %"struct.WTF::KeyValuePair.2498"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2498" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.2499", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.2499" = type { %"class.std::__1::__vector_base.2500" }
%"class.std::__1::__vector_base.2500" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.2501" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2501" = type { %"struct.std::__1::__compressed_pair_elem.2502" }
%"struct.std::__1::__compressed_pair_elem.2502" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.2506" = type { %"class.std::__1::__compressed_pair.2507" }
%"class.std::__1::__compressed_pair.2507" = type { %"struct.std::__1::__compressed_pair_elem.2508" }
%"struct.std::__1::__compressed_pair_elem.2508" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::Member.2512" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.2514" = type { %"class.blink::MemberBase.2515" }
%"class.blink::MemberBase.2515" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.2516" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember", %"class.WTF::Vector.178", i8 }>
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::Supplementable.2516" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2517" }
%"class.blink::HeapHashMap.2517" = type { %"class.WTF::HashMap.2520" }
%"class.WTF::HashMap.2520" = type { %"class.WTF::HashTable.2521" }
%"class.WTF::HashTable.2521" = type <{ %"struct.WTF::KeyValuePair.2523"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2523" = type { i8*, %"class.blink::Member.3165" }
%"class.blink::Member.3165" = type { %"class.blink::MemberBase.3166" }
%"class.blink::MemberBase.3166" = type { %"class.blink::Supplement.3167"* }
%"class.blink::Supplement.3167" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3168" }
%"class.blink::Member.3168" = type { %"class.blink::MemberBase.3169" }
%"class.blink::MemberBase.3169" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.2524" = type { %"class.blink::MemberBase.2525" }
%"class.blink::MemberBase.2525" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.1261, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.1361, %"class.std::__1::unique_ptr.2738", %"class.WTF::HashMap.2757", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent.2762", %"class.blink::CrossThreadPersistent.2764", %"class.blink::CrossThreadPersistent.2766", %class.scoped_refptr.2768, %"class.blink::TaskHandle", %"class.WTF::HashSet.2769", %"class.WTF::HashSet.2773" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2526" }
%"class.WTF::Deque.2526" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2529" }
%"class.WTF::VectorBuffer.2529" = type { %"class.WTF::VectorBufferBase.2530" }
%"class.WTF::VectorBufferBase.2530" = type { %"class.std::__1::unique_ptr.2531"*, i32, i32 }
%"class.std::__1::unique_ptr.2531" = type { %"class.std::__1::__compressed_pair.2532" }
%"class.std::__1::__compressed_pair.2532" = type { %"struct.std::__1::__compressed_pair_elem.2533" }
%"struct.std::__1::__compressed_pair_elem.2533" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.2534" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2534" = type { %"class.std::__1::__compressed_pair.2535" }
%"class.std::__1::__compressed_pair.2535" = type { %"struct.std::__1::__compressed_pair_elem.2536" }
%"struct.std::__1::__compressed_pair_elem.2536" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.2537", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.2582", %"class.crdtp::detail::PtrMaybe.2602", %"class.crdtp::detail::PtrMaybe.2612", %"class.crdtp::detail::PtrMaybe.2622", %"class.crdtp::detail::PtrMaybe.2643", %"class.crdtp::detail::PtrMaybe.2653", %"class.crdtp::detail::PtrMaybe.2663", %"class.crdtp::detail::PtrMaybe.2673", %"class.crdtp::detail::PtrMaybe.2702", %"class.crdtp::detail::PtrMaybe.2712", %"class.crdtp::detail::PtrMaybe.2722" }
%"class.crdtp::ProtocolObject.2537" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.2540" }
%"class.std::__1::unique_ptr.2540" = type { %"class.std::__1::__compressed_pair.2541" }
%"class.std::__1::__compressed_pair.2541" = type { %"struct.std::__1::__compressed_pair_elem.2542" }
%"struct.std::__1::__compressed_pair_elem.2542" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.2543", %"class.crdtp::detail::PtrMaybe.2546", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.2556", %"class.std::__1::unique_ptr.2556", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.2569" }
%"class.crdtp::ProtocolObject.2543" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2546" = type { %"class.std::__1::unique_ptr.2547" }
%"class.std::__1::unique_ptr.2547" = type { %"class.std::__1::__compressed_pair.2548" }
%"class.std::__1::__compressed_pair.2548" = type { %"struct.std::__1::__compressed_pair_elem.2549" }
%"struct.std::__1::__compressed_pair_elem.2549" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.2550", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2550" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2556" = type { %"class.std::__1::__compressed_pair.2557" }
%"class.std::__1::__compressed_pair.2557" = type { %"struct.std::__1::__compressed_pair_elem.2558" }
%"struct.std::__1::__compressed_pair_elem.2558" = type { %"class.std::__1::vector.2559"* }
%"class.std::__1::vector.2559" = type { %"class.std::__1::__vector_base.2560" }
%"class.std::__1::__vector_base.2560" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2561" }
%"class.std::__1::__compressed_pair.2561" = type { %"struct.std::__1::__compressed_pair_elem.2562" }
%"struct.std::__1::__compressed_pair_elem.2562" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.2569" = type { %"class.std::__1::unique_ptr.2570" }
%"class.std::__1::unique_ptr.2570" = type { %"class.std::__1::__compressed_pair.2571" }
%"class.std::__1::__compressed_pair.2571" = type { %"struct.std::__1::__compressed_pair_elem.2572" }
%"struct.std::__1::__compressed_pair_elem.2572" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.2573", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.2573" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2582" = type { %"class.std::__1::unique_ptr.2583" }
%"class.std::__1::unique_ptr.2583" = type { %"class.std::__1::__compressed_pair.2584" }
%"class.std::__1::__compressed_pair.2584" = type { %"struct.std::__1::__compressed_pair_elem.2585" }
%"struct.std::__1::__compressed_pair_elem.2585" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.2586", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2569", %"class.crdtp::detail::PtrMaybe.2589" }
%"class.crdtp::ProtocolObject.2586" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2589" = type { %"class.std::__1::unique_ptr.2590" }
%"class.std::__1::unique_ptr.2590" = type { %"class.std::__1::__compressed_pair.2591" }
%"class.std::__1::__compressed_pair.2591" = type { %"struct.std::__1::__compressed_pair_elem.2592" }
%"struct.std::__1::__compressed_pair_elem.2592" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.2593", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2593" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2602" = type { %"class.std::__1::unique_ptr.2603" }
%"class.std::__1::unique_ptr.2603" = type { %"class.std::__1::__compressed_pair.2604" }
%"class.std::__1::__compressed_pair.2604" = type { %"struct.std::__1::__compressed_pair_elem.2605" }
%"struct.std::__1::__compressed_pair_elem.2605" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.2606", %"class.std::__1::unique_ptr.2570", %"class.crdtp::detail::PtrMaybe.2589", %"class.crdtp::detail::PtrMaybe.2589", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2606" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2612" = type { %"class.std::__1::unique_ptr.2613" }
%"class.std::__1::unique_ptr.2613" = type { %"class.std::__1::__compressed_pair.2614" }
%"class.std::__1::__compressed_pair.2614" = type { %"struct.std::__1::__compressed_pair_elem.2615" }
%"struct.std::__1::__compressed_pair_elem.2615" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.2616", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.2590" }
%"class.crdtp::ProtocolObject.2616" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2622" = type { %"class.std::__1::unique_ptr.2623" }
%"class.std::__1::unique_ptr.2623" = type { %"class.std::__1::__compressed_pair.2624" }
%"class.std::__1::__compressed_pair.2624" = type { %"struct.std::__1::__compressed_pair_elem.2625" }
%"struct.std::__1::__compressed_pair_elem.2625" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.2626", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2589", %"class.crdtp::detail::PtrMaybe.2629", %"class.crdtp::detail::ValueMaybe.2639" }
%"class.crdtp::ProtocolObject.2626" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2629" = type { %"class.std::__1::unique_ptr.2630" }
%"class.std::__1::unique_ptr.2630" = type { %"class.std::__1::__compressed_pair.2631" }
%"class.std::__1::__compressed_pair.2631" = type { %"struct.std::__1::__compressed_pair_elem.2632" }
%"struct.std::__1::__compressed_pair_elem.2632" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.2633", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.2633" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.2639" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.2643" = type { %"class.std::__1::unique_ptr.2644" }
%"class.std::__1::unique_ptr.2644" = type { %"class.std::__1::__compressed_pair.2645" }
%"class.std::__1::__compressed_pair.2645" = type { %"struct.std::__1::__compressed_pair_elem.2646" }
%"struct.std::__1::__compressed_pair_elem.2646" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.2647", %"class.std::__1::unique_ptr.2630", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2647" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2653" = type { %"class.std::__1::unique_ptr.2654" }
%"class.std::__1::unique_ptr.2654" = type { %"class.std::__1::__compressed_pair.2655" }
%"class.std::__1::__compressed_pair.2655" = type { %"struct.std::__1::__compressed_pair_elem.2656" }
%"struct.std::__1::__compressed_pair_elem.2656" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.2657", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.2639", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.2657" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2663" = type { %"class.std::__1::unique_ptr.2664" }
%"class.std::__1::unique_ptr.2664" = type { %"class.std::__1::__compressed_pair.2665" }
%"class.std::__1::__compressed_pair.2665" = type { %"struct.std::__1::__compressed_pair_elem.2666" }
%"struct.std::__1::__compressed_pair_elem.2666" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.2667", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2667" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2673" = type { %"class.std::__1::unique_ptr.2674" }
%"class.std::__1::unique_ptr.2674" = type { %"class.std::__1::__compressed_pair.2675" }
%"class.std::__1::__compressed_pair.2675" = type { %"struct.std::__1::__compressed_pair_elem.2676" }
%"struct.std::__1::__compressed_pair_elem.2676" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.2677", %"class.std::__1::unique_ptr.2680", i8, %"class.std::__1::unique_ptr.2570", %"class.crdtp::detail::PtrMaybe.2629", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.2689" }
%"class.crdtp::ProtocolObject.2677" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2680" = type { %"class.std::__1::__compressed_pair.2681" }
%"class.std::__1::__compressed_pair.2681" = type { %"struct.std::__1::__compressed_pair_elem.2682" }
%"struct.std::__1::__compressed_pair_elem.2682" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.2683", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2683" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2689" = type { %"class.std::__1::unique_ptr.2690" }
%"class.std::__1::unique_ptr.2690" = type { %"class.std::__1::__compressed_pair.2691" }
%"class.std::__1::__compressed_pair.2691" = type { %"struct.std::__1::__compressed_pair_elem.2692" }
%"struct.std::__1::__compressed_pair_elem.2692" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.2693", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2693" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2702" = type { %"class.std::__1::unique_ptr.2703" }
%"class.std::__1::unique_ptr.2703" = type { %"class.std::__1::__compressed_pair.2704" }
%"class.std::__1::__compressed_pair.2704" = type { %"struct.std::__1::__compressed_pair_elem.2705" }
%"struct.std::__1::__compressed_pair_elem.2705" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.2706", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2589", %"class.crdtp::detail::PtrMaybe.2569", %"class.crdtp::detail::ValueMaybe.2639", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.2706" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2712" = type { %"class.std::__1::unique_ptr.2713" }
%"class.std::__1::unique_ptr.2713" = type { %"class.std::__1::__compressed_pair.2714" }
%"class.std::__1::__compressed_pair.2714" = type { %"struct.std::__1::__compressed_pair_elem.2715" }
%"struct.std::__1::__compressed_pair_elem.2715" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.2716", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2716" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2722" = type { %"class.std::__1::unique_ptr.2723" }
%"class.std::__1::unique_ptr.2723" = type { %"class.std::__1::__compressed_pair.2724" }
%"class.std::__1::__compressed_pair.2724" = type { %"struct.std::__1::__compressed_pair_elem.2725" }
%"struct.std::__1::__compressed_pair_elem.2725" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.2726", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2629" }
%"class.crdtp::ProtocolObject.2726" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2738" = type { %"class.std::__1::__compressed_pair.2739" }
%"class.std::__1::__compressed_pair.2739" = type { %"struct.std::__1::__compressed_pair_elem.2740" }
%"struct.std::__1::__compressed_pair_elem.2740" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.2741, %class.scoped_refptr.2741, %class.scoped_refptr.2741, %"class.std::__1::map.2742", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.2753" }
%class.scoped_refptr.2741 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map.2742" = type { %"class.std::__1::__tree.2743" }
%"class.std::__1::__tree.2743" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2744", %"class.std::__1::__compressed_pair.2748" }
%"class.std::__1::__compressed_pair.2744" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.2748" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.2753" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.2757" = type { %"class.WTF::HashTable.2758" }
%"class.WTF::HashTable.2758" = type <{ %"struct.WTF::KeyValuePair.2761"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2761" = type opaque
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent.2762" = type { %"class.blink::PersistentBase.2763" }
%"class.blink::PersistentBase.2763" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistent.2764" = type { %"class.blink::PersistentBase.2765" }
%"class.blink::PersistentBase.2765" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistent.2766" = type { %"class.blink::PersistentBase.2767" }
%"class.blink::PersistentBase.2767" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.2768 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.WTF::HashSet.2769" = type { %"class.WTF::HashTable.2770" }
%"class.WTF::HashTable.2770" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.2773" = type { %"class.WTF::HashTable.2774" }
%"class.WTF::HashTable.2774" = type <{ %"class.std::__1::unique_ptr.2777"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2777" = type opaque
%"class.blink::HeapHashMap.2778" = type { %"class.WTF::HashMap.2781" }
%"class.WTF::HashMap.2781" = type { %"class.WTF::HashTable.2782" }
%"class.WTF::HashTable.2782" = type <{ %"struct.WTF::KeyValuePair.2784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2784" = type opaque
%"class.blink::Member.2785" = type { %"class.blink::MemberBase.2786" }
%"class.blink::MemberBase.2786" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type { %"class.blink::FontSelector", %"class.blink::GenericFontFamilySettings", %"class.blink::Member.1972", %"class.blink::Member.2787" }
%"class.blink::Member.2787" = type { %"class.blink::MemberBase.2788" }
%"class.blink::MemberBase.2788" = type { %"class.blink::WorkerGlobalScope"* }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote.2789", %"class.std::__1::map.2797" }
%"class.mojo::Remote.2789" = type { %"class.mojo::internal::InterfacePtrState.2790" }
%"class.mojo::internal::InterfacePtrState.2790" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2791" }
%"class.std::__1::unique_ptr.2791" = type { %"class.std::__1::__compressed_pair.2792" }
%"class.std::__1::__compressed_pair.2792" = type { %"struct.std::__1::__compressed_pair_elem.2793" }
%"struct.std::__1::__compressed_pair_elem.2793" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.2797" = type { %"class.std::__1::__tree.2798" }
%"class.std::__1::__tree.2798" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2799", %"class.std::__1::__compressed_pair.2803" }
%"class.std::__1::__compressed_pair.2799" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.2803" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.blink::Member.2808" = type { %"class.blink::MemberBase.2809" }
%"class.blink::MemberBase.2809" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.433", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.absl::optional.2812" = type { %"class.absl::optional_internal::optional_data.2813" }
%"class.absl::optional_internal::optional_data.2813" = type { %"class.absl::optional_internal::optional_data_base.2814" }
%"class.absl::optional_internal::optional_data_base.2814" = type { %"class.absl::optional_internal::optional_data_dtor_base.2815" }
%"class.absl::optional_internal::optional_data_dtor_base.2815" = type { i8, [7 x i8], %union.anon.2816 }
%union.anon.2816 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.2817", i8, [7 x i8] }>
%"struct.std::__1::pair.2817" = type { i64, i64 }
%"class.std::__1::unique_ptr.2818" = type { %"class.std::__1::__compressed_pair.2819" }
%"class.std::__1::__compressed_pair.2819" = type { %"struct.std::__1::__compressed_pair_elem.2820" }
%"struct.std::__1::__compressed_pair_elem.2820" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.2821", %"class.mojo::ScopedHandleBase.3015", %"class.mojo::StructPtr.3016", %"class.std::__1::vector.3024", %"class.std::__1::vector.3031" }
%"class.mojo::StructPtr.2821" = type { %"class.std::__1::unique_ptr.2822" }
%"class.std::__1::unique_ptr.2822" = type { %"class.std::__1::__compressed_pair.2823" }
%"class.std::__1::__compressed_pair.2823" = type { %"struct.std::__1::__compressed_pair_elem.2824" }
%"struct.std::__1::__compressed_pair_elem.2824" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.2825, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.2840", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.2856", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.2862", %"class.std::__1::vector.2869", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.413", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.2904", %"class.absl::optional.3001", %"class.absl::optional.374", %"class.std::__1::vector.2869", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.2825 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.2826", %"class.std::__1::vector.2827", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.2826" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.2827" = type { %"class.std::__1::__vector_base.2828" }
%"class.std::__1::__vector_base.2828" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.2829" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.2829" = type { %"struct.std::__1::__compressed_pair_elem.2830" }
%"struct.std::__1::__compressed_pair_elem.2830" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.2840" = type { %"class.std::__1::unique_ptr.2841" }
%"class.std::__1::unique_ptr.2841" = type { %"class.std::__1::__compressed_pair.2842" }
%"class.std::__1::__compressed_pair.2842" = type { %"struct.std::__1::__compressed_pair_elem.2843" }
%"struct.std::__1::__compressed_pair_elem.2843" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.2844", %"class.std::__1::vector.2844", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.2844" = type { %"class.std::__1::__vector_base.2845" }
%"class.std::__1::__vector_base.2845" = type { %"class.mojo::InlinedStructPtr.2846"*, %"class.mojo::InlinedStructPtr.2846"*, %"class.std::__1::__compressed_pair.2848" }
%"class.mojo::InlinedStructPtr.2846" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2848" = type { %"struct.std::__1::__compressed_pair_elem.2849" }
%"struct.std::__1::__compressed_pair_elem.2849" = type { %"class.mojo::InlinedStructPtr.2846"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.2856" = type { %"class.std::__1::__vector_base.2857" }
%"class.std::__1::__vector_base.2857" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.2858" }
%"class.std::__1::__compressed_pair.2858" = type { %"struct.std::__1::__compressed_pair_elem.2836" }
%"struct.std::__1::__compressed_pair_elem.2836" = type { %class.GURL* }
%"class.absl::optional.2862" = type { %"class.absl::optional_internal::optional_data.2863" }
%"class.absl::optional_internal::optional_data.2863" = type { %"class.absl::optional_internal::optional_data_base.2864" }
%"class.absl::optional_internal::optional_data_base.2864" = type { %"class.absl::optional_internal::optional_data_dtor_base.2865" }
%"class.absl::optional_internal::optional_data_dtor_base.2865" = type { i8, [7 x i8], %union.anon.2866 }
%union.anon.2866 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.2867, %class.scoped_refptr.2867, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.2887", %"class.std::__1::basic_string", %"class.std::__1::vector.2895", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.2867 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.2868", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.2876", %"class.std::__1::vector.2880" }
%"class.base::RefCountedThreadSafe.2868" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.2869", %"class.std::__1::vector.2869", %"class.std::__1::vector.2869", %"class.std::__1::vector.2869" }
%"class.std::__1::unique_ptr.2876" = type { %"class.std::__1::__compressed_pair.2877" }
%"class.std::__1::__compressed_pair.2877" = type { %"struct.std::__1::__compressed_pair_elem.2878" }
%"struct.std::__1::__compressed_pair_elem.2878" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.2880" = type { %"class.std::__1::__vector_base.2881" }
%"class.std::__1::__vector_base.2881" = type { %"class.std::__1::unique_ptr.2876"*, %"class.std::__1::unique_ptr.2876"*, %"class.std::__1::__compressed_pair.2882" }
%"class.std::__1::__compressed_pair.2882" = type { %"struct.std::__1::__compressed_pair_elem.2883" }
%"struct.std::__1::__compressed_pair_elem.2883" = type { %"class.std::__1::unique_ptr.2876"* }
%"class.std::__1::vector.2887" = type { %"class.std::__1::__vector_base.2888" }
%"class.std::__1::__vector_base.2888" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.2890" }
%"class.net::HashValue" = type { i32, %union.anon.2889 }
%union.anon.2889 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.2890" = type { %"struct.std::__1::__compressed_pair_elem.2891" }
%"struct.std::__1::__compressed_pair_elem.2891" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.2895" = type { %"class.std::__1::__vector_base.2896" }
%"class.std::__1::__vector_base.2896" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.2899" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.2897, i32, [4 x i8] }>
%class.scoped_refptr.2897 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.2898", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.2898" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2899" = type { %"struct.std::__1::__compressed_pair_elem.2900" }
%"struct.std::__1::__compressed_pair_elem.2900" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.2904" = type { %"class.std::__1::unique_ptr.2905" }
%"class.std::__1::unique_ptr.2905" = type { %"class.std::__1::__compressed_pair.2906" }
%"class.std::__1::__compressed_pair.2906" = type { %"struct.std::__1::__compressed_pair_elem.2907" }
%"struct.std::__1::__compressed_pair_elem.2907" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.2908", %"class.mojo::StructPtr.2958", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.2965", %"class.base::TimeDelta", %"class.absl::optional.2965", i32, [4 x i8], %"class.std::__1::vector.2977", %"class.mojo::StructPtr.2991", i8, [7 x i8] }>
%"class.std::__1::vector.2908" = type { %"class.std::__1::__vector_base.2909" }
%"class.std::__1::__vector_base.2909" = type { %"class.mojo::StructPtr.2910"*, %"class.mojo::StructPtr.2910"*, %"class.std::__1::__compressed_pair.2953" }
%"class.mojo::StructPtr.2910" = type { %"class.std::__1::unique_ptr.2911" }
%"class.std::__1::unique_ptr.2911" = type { %"class.std::__1::__compressed_pair.2912" }
%"class.std::__1::__compressed_pair.2912" = type { %"struct.std::__1::__compressed_pair_elem.2913" }
%"struct.std::__1::__compressed_pair_elem.2913" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2914", %"class.base::flat_map.2921", %"class.base::flat_map.2931", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.2941", i8, %"class.std::__1::vector.2869", i32, %"class.mojo::StructPtr.2943", %"class.std::__1::vector.2869" }
%"class.mojo::StructPtr.2914" = type { %"class.std::__1::unique_ptr.2915" }
%"class.std::__1::unique_ptr.2915" = type { %"class.std::__1::__compressed_pair.2916" }
%"class.std::__1::__compressed_pair.2916" = type { %"struct.std::__1::__compressed_pair_elem.2917" }
%"struct.std::__1::__compressed_pair_elem.2917" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map.2921" = type { %"class.base::internal::flat_tree.2922" }
%"class.base::internal::flat_tree.2922" = type { %"class.std::__1::vector.2923" }
%"class.std::__1::vector.2923" = type { %"class.std::__1::__vector_base.2924" }
%"class.std::__1::__vector_base.2924" = type { %"struct.std::__1::pair.2925"*, %"struct.std::__1::pair.2925"*, %"class.std::__1::__compressed_pair.2926" }
%"struct.std::__1::pair.2925" = type opaque
%"class.std::__1::__compressed_pair.2926" = type { %"struct.std::__1::__compressed_pair_elem.2927" }
%"struct.std::__1::__compressed_pair_elem.2927" = type { %"struct.std::__1::pair.2925"* }
%"class.base::flat_map.2931" = type { %"class.base::internal::flat_tree.2932" }
%"class.base::internal::flat_tree.2932" = type { %"class.std::__1::vector.2933" }
%"class.std::__1::vector.2933" = type { %"class.std::__1::__vector_base.2934" }
%"class.std::__1::__vector_base.2934" = type { %"struct.std::__1::pair.2935"*, %"struct.std::__1::pair.2935"*, %"class.std::__1::__compressed_pair.2936" }
%"struct.std::__1::pair.2935" = type opaque
%"class.std::__1::__compressed_pair.2936" = type { %"struct.std::__1::__compressed_pair_elem.2937" }
%"struct.std::__1::__compressed_pair_elem.2937" = type { %"struct.std::__1::pair.2935"* }
%"class.mojo::InlinedStructPtr.2941" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.2943" = type { %"class.std::__1::unique_ptr.2944" }
%"class.std::__1::unique_ptr.2944" = type { %"class.std::__1::__compressed_pair.2945" }
%"class.std::__1::__compressed_pair.2945" = type { %"struct.std::__1::__compressed_pair_elem.2946" }
%"struct.std::__1::__compressed_pair_elem.2946" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.2869", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2953" = type { %"struct.std::__1::__compressed_pair_elem.2954" }
%"struct.std::__1::__compressed_pair_elem.2954" = type { %"class.mojo::StructPtr.2910"* }
%"class.mojo::StructPtr.2958" = type { %"class.std::__1::unique_ptr.2959" }
%"class.std::__1::unique_ptr.2959" = type { %"class.std::__1::__compressed_pair.2960" }
%"class.std::__1::__compressed_pair.2960" = type { %"struct.std::__1::__compressed_pair_elem.2961" }
%"struct.std::__1::__compressed_pair_elem.2961" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.1200", i32, %"class.absl::optional.1200" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.1200", i32, %"class.absl::optional.1200" }
%"class.absl::optional.2965" = type { %"class.absl::optional_internal::optional_data.2966" }
%"class.absl::optional_internal::optional_data.2966" = type { %"class.absl::optional_internal::optional_data_base.2967" }
%"class.absl::optional_internal::optional_data_base.2967" = type { %"class.absl::optional_internal::optional_data_dtor_base.2968" }
%"class.absl::optional_internal::optional_data_dtor_base.2968" = type { i8, %union.anon.2969 }
%union.anon.2969 = type { %"class.std::__1::vector.2970" }
%"class.std::__1::vector.2970" = type { %"class.std::__1::__vector_base.2971" }
%"class.std::__1::__vector_base.2971" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2972" }
%"class.std::__1::__compressed_pair.2972" = type { %"struct.std::__1::__compressed_pair_elem.2973" }
%"struct.std::__1::__compressed_pair_elem.2973" = type { i32* }
%"class.std::__1::vector.2977" = type { %"class.std::__1::__vector_base.2978" }
%"class.std::__1::__vector_base.2978" = type { %"class.mojo::StructPtr.2979"*, %"class.mojo::StructPtr.2979"*, %"class.std::__1::__compressed_pair.2986" }
%"class.mojo::StructPtr.2979" = type { %"class.std::__1::unique_ptr.2980" }
%"class.std::__1::unique_ptr.2980" = type { %"class.std::__1::__compressed_pair.2981" }
%"class.std::__1::__compressed_pair.2981" = type { %"struct.std::__1::__compressed_pair_elem.2982" }
%"struct.std::__1::__compressed_pair_elem.2982" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.1200" }
%"class.std::__1::__compressed_pair.2986" = type { %"struct.std::__1::__compressed_pair_elem.2987" }
%"struct.std::__1::__compressed_pair_elem.2987" = type { %"class.mojo::StructPtr.2979"* }
%"class.mojo::StructPtr.2991" = type { %"class.std::__1::unique_ptr.2992" }
%"class.std::__1::unique_ptr.2992" = type { %"class.std::__1::__compressed_pair.2993" }
%"class.std::__1::__compressed_pair.2993" = type { %"struct.std::__1::__compressed_pair_elem.2994" }
%"struct.std::__1::__compressed_pair_elem.2994" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.2869"* }
%"class.absl::optional.3001" = type { %"class.absl::optional_internal::optional_data.3002" }
%"class.absl::optional_internal::optional_data.3002" = type { %"class.absl::optional_internal::optional_data_base.3003" }
%"class.absl::optional_internal::optional_data_base.3003" = type { %"class.absl::optional_internal::optional_data_dtor_base.3004" }
%"class.absl::optional_internal::optional_data_dtor_base.3004" = type { i8, %union.anon.3005 }
%union.anon.3005 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.3006" }
%"class.std::__1::unique_ptr.3006" = type { %"class.std::__1::__compressed_pair.3007" }
%"class.std::__1::__compressed_pair.3007" = type { %"struct.std::__1::__compressed_pair_elem.3008" }
%"struct.std::__1::__compressed_pair_elem.3008" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.2869", %"class.absl::optional.1200", %"class.std::__1::vector.2869", %"class.std::__1::vector.2869" }
%"class.std::__1::vector.2869" = type { %"class.std::__1::__vector_base.2870" }
%"class.std::__1::__vector_base.2870" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2871" }
%"class.std::__1::__compressed_pair.2871" = type { %"struct.std::__1::__compressed_pair_elem.2872" }
%"struct.std::__1::__compressed_pair_elem.2872" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.2834" }
%"class.std::__1::unique_ptr.2834" = type { %"class.std::__1::__compressed_pair.2835" }
%"class.std::__1::__compressed_pair.2835" = type { %"struct.std::__1::__compressed_pair_elem.2836" }
%"class.mojo::ScopedHandleBase.3015" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.3016" = type { %"class.std::__1::unique_ptr.3017" }
%"class.std::__1::unique_ptr.3017" = type { %"class.std::__1::__compressed_pair.3018" }
%"class.std::__1::__compressed_pair.3018" = type { %"struct.std::__1::__compressed_pair_elem.3019" }
%"struct.std::__1::__compressed_pair_elem.3019" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.3020", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.3020" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.3024" = type { %"class.std::__1::__vector_base.3025" }
%"class.std::__1::__vector_base.3025" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.3026" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.3026" = type { %"struct.std::__1::__compressed_pair_elem.3027" }
%"struct.std::__1::__compressed_pair_elem.3027" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.3031" = type { %"class.std::__1::__vector_base.3032" }
%"class.std::__1::__vector_base.3032" = type { %"class.mojo::StructPtr.2821"*, %"class.mojo::StructPtr.2821"*, %"class.std::__1::__compressed_pair.3033" }
%"class.std::__1::__compressed_pair.3033" = type { %"struct.std::__1::__compressed_pair_elem.3034" }
%"struct.std::__1::__compressed_pair_elem.3034" = type { %"class.mojo::StructPtr.2821"* }
%"class.blink::FontFaceSetWorker" = type { %"class.blink::FontFaceSet", %"class.blink::Supplement.3041" }
%"class.blink::Supplement.3041" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2787" }
%"class.WTF::DequeIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque"*, i32 }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::RemoteFontFaceSource" = type <{ %"class.blink::CSSFontFaceSource", %"class.blink::FontResourceClient.base", %"class.blink::ThreadState::PrefinalizerRegistration.666", [6 x i8], %"class.blink::Member.58", %"class.blink::Member.667", %class.scoped_refptr.673, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.blink::RemoteFontFaceSource::FontLoadHistograms", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::FontResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.306", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.666" = type { i8 }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::FontSelector"* }
%class.scoped_refptr.673 = type { %"class.blink::FontCustomPlatformData"* }
%"class.blink::FontCustomPlatformData" = type opaque
%"class.blink::RemoteFontFaceSource::FontLoadHistograms" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i32 }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.690", %class.scoped_refptr.696, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.682" }>
%"class.WTF::RefCounted.682" = type { %"class.base::RefCounted.683" }
%"class.base::RefCounted.683" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.684", %"class.absl::optional.684", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.684" = type { %"class.absl::optional_internal::optional_data.685" }
%"class.absl::optional_internal::optional_data.685" = type { %"class.absl::optional_internal::optional_data_base.686" }
%"class.absl::optional_internal::optional_data_base.686" = type { %"class.absl::optional_internal::optional_data_dtor_base.687" }
%"class.absl::optional_internal::optional_data_dtor_base.687" = type { i8, %union.anon.688 }
%union.anon.688 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.689, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.202" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.221" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.689 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.681, %class.scoped_refptr.681 }
%class.scoped_refptr.681 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.696 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.697", [4 x i8] }>
%"class.WTF::RefCounted.697" = type { %"class.base::RefCounted.698" }
%"class.base::RefCounted.698" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::FontMetricsOverride" = type { %"class.absl::optional.684", %"class.absl::optional.684", %"class.absl::optional.684" }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.682", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::FontDataForRangeSet" = type { i32 (...)**, %"class.WTF::RefCounted.727", %class.scoped_refptr.681, %class.scoped_refptr }
%"class.WTF::RefCounted.727" = type { %"class.base::RefCounted.728" }
%"class.base::RefCounted.728" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZNK3WTF13DequeIteratorIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEEdeEv = comdat any

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CSSFontFaceSourceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17CSSFontFaceSourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@__const._ZN5blink11CSSFontFace4LoadEv.font_description = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.48 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.699 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.700 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.708 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.718 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.724 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.2 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.3 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.10 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.12 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CSSFontFace9AddSourceEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"*, %"class.blink::CSSFontFaceSource"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::CSSFontFaceSource"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  br i1 %7, label %13, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, 1
  %12 = icmp eq i32 %11, %6
  br i1 %12, label %22, label %24

13:                                               ; preds = %2
  %14 = icmp eq i32 %9, 0
  %15 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  br i1 %14, label %20, label %17

17:                                               ; preds = %13
  %18 = add i32 %16, -1
  %19 = icmp eq i32 %9, %18
  br i1 %19, label %22, label %24

20:                                               ; preds = %13
  %21 = icmp eq i32 %16, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %20, %17, %10
  tail call void @_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %4) #8
  %23 = load i32, i32* %8, align 4
  br label %24

24:                                               ; preds = %22, %20, %17, %10
  %25 = phi i32 [ %9, %10 ], [ %9, %17 ], [ 0, %20 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %26, align 8
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %27, i64 %28
  %30 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, -1
  %33 = icmp eq i32 %25, %32
  %34 = add i32 %25, 1
  %35 = select i1 %33, i32 0, i32 %34
  store i32 %35, i32* %8, align 4
  %36 = bitcast %"class.blink::Member.24"* %29 to i64*
  store atomic i64 %3, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %24
  %40 = bitcast %"class.blink::CSSFontFaceSource"* %1 to i8*
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #8
  br label %42

42:                                               ; preds = %24, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CSSFontFace20AddSegmentedFontFaceEPNS_20CSSSegmentedFontFaceE(%"class.blink::CSSFontFace"*, %"class.blink::CSSSegmentedFontFace"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSSegmentedFontFace"*, align 8
  store %"class.blink::CSSSegmentedFontFace"* %1, %"class.blink::CSSSegmentedFontFace"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = call { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %4, %"class.blink::CSSSegmentedFontFace"** nonnull dereferenceable(8) %3, %"class.blink::CSSSegmentedFontFace"** nonnull dereferenceable(8) %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CSSFontFace23RemoveSegmentedFontFaceEPNS_20CSSSegmentedFontFaceE(%"class.blink::CSSFontFace"*, %"class.blink::CSSSegmentedFontFace"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0
  %4 = ptrtoint %"class.blink::CSSSegmentedFontFace"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %7 = icmp eq %"class.blink::Member"* %6, null
  %8 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %71, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %33
  %35 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %35, align 8
  %37 = icmp eq %"class.blink::CSSSegmentedFontFace"* %36, %1
  br i1 %37, label %66, label %38

38:                                               ; preds = %10
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi %"class.blink::CSSSegmentedFontFace"* [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq %"class.blink::CSSSegmentedFontFace"* %53, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %12
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %61
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %63, align 8
  %65 = icmp eq %"class.blink::CSSSegmentedFontFace"* %64, %1
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %10
  %67 = phi %"class.blink::Member"* [ %34, %10 ], [ %62, %57 ]
  %68 = icmp eq %"class.blink::Member"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = zext i32 %9 to i64
  br label %74

71:                                               ; preds = %52, %66, %2
  %72 = zext i32 %9 to i64
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %72
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"class.blink::Member"* [ %67, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %75
  %78 = icmp eq %"class.blink::Member"* %77, %76
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"* %80, %"class.blink::Member"* %76) #8
  br label %81

81:                                               ; preds = %74, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CSSFontFace12DidBeginLoadEv(%"class.blink::CSSFontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %3, i64 0, i32 17
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 1)
  br label %8

8:                                                ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 3
  %4 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %4, align 8
  br i1 %3, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink8FontFace8SetErrorEPNS_12DOMExceptionE(%"class.blink::FontFace"* %5, %"class.blink::DOMException"* null) #8
  br label %8

7:                                                ; preds = %2
  tail call void @_ZN5blink8FontFace13SetLoadStatusENS0_14LoadStatusTypeE(%"class.blink::FontFace"* %5, i32 %1) #8
  br label %8

8:                                                ; preds = %7, %6
  %9 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %58, label %12

12:                                               ; preds = %8
  %13 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %4, align 8
  %14 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %13, i64 0, i32 2
  %15 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %14) #8
  %16 = icmp eq %"class.blink::ExecutionContext"* %15, null
  br i1 %16, label %58, label %17

17:                                               ; preds = %12
  %18 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %4, align 8
  %19 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %18, i64 0, i32 2
  %20 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %19) #8
  %21 = icmp eq %"class.blink::ExecutionContext"* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::ExecutionContext"* %20 to i1 (%"class.blink::ExecutionContext"*)***
  %24 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %24, i64 1
  %26 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::ExecutionContext"* nonnull %20) #8
  br i1 %27, label %28, label %38

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %20, i64 -1, i32 8
  %30 = bitcast i32* %29 to %"class.blink::LocalDOMWindow"*
  %31 = icmp eq i32* %29, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %28
  %33 = icmp eq i32 %1, 1
  br i1 %33, label %34, label %58

34:                                               ; preds = %32
  %35 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %30) #8
  %36 = tail call %"class.blink::FontFaceSetDocument"* @_ZN5blink19FontFaceSetDocument4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %35) #8
  %37 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %4, align 8
  tail call void @_ZN5blink19FontFaceSetDocument16BeginFontLoadingEPNS_8FontFaceE(%"class.blink::FontFaceSetDocument"* %36, %"class.blink::FontFace"* %37) #8
  br label %58

38:                                               ; preds = %17, %22, %28
  %39 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %4, align 8
  %40 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %39, i64 0, i32 2
  %41 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %40) #8
  %42 = icmp eq %"class.blink::ExecutionContext"* %41, null
  br i1 %42, label %58, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::ExecutionContext"* %41 to i1 (%"class.blink::ExecutionContext"*)***
  %45 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %45, i64 3
  %47 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::ExecutionContext"* nonnull %41) #8
  br i1 %48, label %49, label %58

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %41, i64 -1, i32 22
  %51 = icmp ne %"class.blink::DOMTimerCoordinator"* %50, null
  %52 = icmp eq i32 %1, 1
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %58

54:                                               ; preds = %49
  %55 = bitcast %"class.blink::DOMTimerCoordinator"* %50 to %"class.blink::WorkerGlobalScope"*
  %56 = tail call %"class.blink::FontFaceSetWorker"* @_ZN5blink17FontFaceSetWorker4FromERNS_17WorkerGlobalScopeE(%"class.blink::WorkerGlobalScope"* nonnull dereferenceable(2376) %55) #8
  %57 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %4, align 8
  tail call void @_ZN5blink17FontFaceSetWorker16BeginFontLoadingEPNS_8FontFaceE(%"class.blink::FontFaceSetWorker"* %56, %"class.blink::FontFace"* %57) #8
  br label %58

58:                                               ; preds = %38, %43, %34, %32, %54, %49, %12, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11CSSFontFace10FontLoadedEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"* nocapture, %"class.blink::CSSFontFaceSource"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %122, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %10, align 8
  %12 = zext i32 %4 to i64
  %13 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %11, i64 %12, i32 0, i32 0
  %14 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %13, align 8
  %15 = icmp eq %"class.blink::CSSFontFaceSource"* %14, %1
  br i1 %15, label %16, label %122

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %18, i64 0, i32 17
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %85

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::CSSFontFaceSource"* %1 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %24 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %24, i64 5
  %26 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::CSSFontFaceSource"* %1) #8
  br i1 %27, label %28, label %29

28:                                               ; preds = %22
  tail call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 2)
  br label %85

29:                                               ; preds = %22
  %30 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %23, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %30, i64 12
  %32 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::CSSFontFaceSource"* %1) #8
  br i1 %33, label %34, label %66

34:                                               ; preds = %29
  %35 = load i32, i32* %3, align 8
  %36 = load i32, i32* %5, align 4
  %37 = icmp ugt i32 %35, %36
  %38 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %10, align 8
  br i1 %37, label %42, label %39

39:                                               ; preds = %34
  %40 = zext i32 %35 to i64
  %41 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %38, i64 %40
  br label %52

42:                                               ; preds = %34
  %43 = zext i32 %36 to i64
  %44 = bitcast %"class.blink::Member.24"* %38 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %44, i64 %45) #8
  %46 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %10, align 8
  %47 = load i32, i32* %3, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %46, i64 %48
  br label %52

52:                                               ; preds = %39, %42
  %53 = phi i32 [ %36, %39 ], [ %50, %42 ]
  %54 = phi %"class.blink::Member.24"* [ %38, %39 ], [ %46, %42 ]
  %55 = phi %"class.blink::Member.24"* [ %41, %39 ], [ %51, %42 ]
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %54, i64 %56
  %58 = bitcast %"class.blink::Member.24"* %55 to i8*
  %59 = ptrtoint %"class.blink::Member.24"* %57 to i64
  %60 = ptrtoint %"class.blink::Member.24"* %55 to i64
  %61 = sub i64 %59, %60
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %58, i64 %61) #8
  store i32 0, i32* %3, align 8
  store i32 0, i32* %5, align 4
  %62 = bitcast %"class.WTF::Deque"* %9 to i8**
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %63) #8
  %64 = bitcast %"class.WTF::Deque"* %9 to i64*
  store atomic i64 0, i64* %64 monotonic, align 8
  %65 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %65, align 8
  tail call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 3)
  br label %85

66:                                               ; preds = %29
  %67 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %10, align 8
  %68 = load i32, i32* %3, align 8
  %69 = zext i32 %68 to i64
  %70 = add i32 %68, 1
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %67, i64 %69
  %73 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %67, i64 %71
  %74 = bitcast %"class.blink::Member.24"* %72 to i8*
  %75 = ptrtoint %"class.blink::Member.24"* %73 to i64
  %76 = ptrtoint %"class.blink::Member.24"* %72 to i64
  %77 = sub i64 %75, %76
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %74, i64 %77) #8
  %78 = load i32, i32* %3, align 8
  %79 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = add i32 %80, -1
  %82 = icmp eq i32 %78, %81
  %83 = add i32 %78, 1
  %84 = select i1 %82, i32 0, i32 %83
  store i32 %84, i32* %3, align 8
  tail call void @_ZN5blink11CSSFontFace4LoadEv(%"class.blink::CSSFontFace"* %0)
  br label %85

85:                                               ; preds = %28, %66, %52, %16
  %86 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.blink::Member"*, %"class.blink::Member"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %90, i64 %93
  br i1 %88, label %122, label %95

95:                                               ; preds = %85
  %96 = icmp eq i32 %92, 0
  br i1 %96, label %104, label %97

97:                                               ; preds = %95, %101
  %98 = phi %"class.blink::Member"* [ %102, %101 ], [ %90, %95 ]
  %99 = bitcast %"class.blink::Member"* %98 to i64*
  %100 = load i64, i64* %99, align 8
  switch i64 %100, label %104 [
    i64 -1, label %101
    i64 0, label %101
  ]

101:                                              ; preds = %97, %97
  %102 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %98, i64 1
  %103 = icmp eq %"class.blink::Member"* %102, %94
  br i1 %103, label %122, label %97

104:                                              ; preds = %97, %95
  %105 = phi %"class.blink::Member"* [ %90, %95 ], [ %98, %97 ]
  %106 = icmp eq %"class.blink::Member"* %105, %94
  br i1 %106, label %122, label %107

107:                                              ; preds = %104, %120
  %108 = phi %"class.blink::Member"* [ %114, %120 ], [ %105, %104 ]
  %109 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %109, align 8
  tail call void @_ZN5blink20CSSSegmentedFontFace19FontFaceInvalidatedEv(%"class.blink::CSSSegmentedFontFace"* %110) #8
  %111 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %108, i64 1
  %112 = icmp eq %"class.blink::Member"* %111, %94
  br i1 %112, label %122, label %113

113:                                              ; preds = %107, %117
  %114 = phi %"class.blink::Member"* [ %118, %117 ], [ %111, %107 ]
  %115 = bitcast %"class.blink::Member"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  switch i64 %116, label %120 [
    i64 -1, label %117
    i64 0, label %117
  ]

117:                                              ; preds = %113, %113
  %118 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %114, i64 1
  %119 = icmp eq %"class.blink::Member"* %118, %94
  br i1 %119, label %122, label %113

120:                                              ; preds = %113
  %121 = icmp eq %"class.blink::Member"* %114, %94
  br i1 %121, label %122, label %107

122:                                              ; preds = %101, %107, %120, %117, %85, %104, %2, %8
  %123 = phi i1 [ false, %8 ], [ false, %2 ], [ true, %104 ], [ true, %85 ], [ true, %117 ], [ true, %120 ], [ true, %107 ], [ true, %101 ]
  ret i1 %123
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CSSFontFace4LoadEv(%"class.blink::CSSFontFace"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::FontDescription", align 8
  %3 = alloca %"class.blink::FontFamily", align 8
  %4 = bitcast %"class.blink::FontDescription"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink11CSSFontFace4LoadEv.font_description to i8*), i64 80, i1 false)
  call void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"* nonnull %2) #8
  %5 = bitcast %"class.blink::FontFamily"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %3, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #8
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %31, !prof !2

27:                                               ; preds = %18
  call void @llvm.trap() #8
  unreachable

28:                                               ; preds = %13, %1
  %29 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %30 = bitcast %"class.blink::FontFamily"* %3 to i64*
  store i64 %29, i64* %30, align 8
  br label %52

31:                                               ; preds = %18
  %32 = trunc i33 %24 to i32
  store i32 %32, i32* %19, align 4
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %34 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %35 = bitcast %"class.blink::FontFamily"* %3 to i64*
  store i64 %34, i64* %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %36, label %55, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #8
  br label %50

50:                                               ; preds = %49, %46
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  br label %52

52:                                               ; preds = %28, %50
  %53 = phi %"class.WTF::StringImpl"* [ %51, %50 ], [ %11, %28 ]
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %73, label %55

55:                                               ; preds = %31, %52
  %56 = phi %"class.WTF::StringImpl"* [ %53, %52 ], [ %11, %31 ]
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #8
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %61
  call void @llvm.trap() #8
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %71, %55, %52
  %74 = phi %"class.WTF::StringImpl"* [ %56, %71 ], [ %56, %55 ], [ null, %52 ]
  %75 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %76 = bitcast %"class.blink::FontDescription"* %2 to i64*
  %77 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  store i64 %75, i64* %76, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #8
  br label %93

93:                                               ; preds = %92, %89, %73
  %94 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 0, i32 1
  %95 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %7, align 8
  %96 = icmp eq %"class.blink::SharedFontFamily"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %95, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %98) #8
  br label %99

99:                                               ; preds = %97, %93
  %100 = ptrtoint %"class.blink::SharedFontFamily"* %95 to i64
  %101 = bitcast %class.scoped_refptr.699* %94 to i64*
  %102 = getelementptr inbounds %class.scoped_refptr.699, %class.scoped_refptr.699* %94, i64 0, i32 0
  %103 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.blink::SharedFontFamily"* %103, null
  br i1 %104, label %115, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %103, i64 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %106, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %107) #8
  %108 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %106, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %106, i64 -4
  %113 = bitcast %"class.base::RefCounted.726"* %112 to %"class.blink::FontFamily"*
  call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %113) #8
  %114 = bitcast %"class.base::RefCounted.726"* %112 to i8*
  call void @free(i8* %114) #8
  br label %115

115:                                              ; preds = %99, %105, %111
  call void @_ZN5blink11CSSFontFace4LoadERKNS_15FontDescriptionE(%"class.blink::CSSFontFace"* %0, %"class.blink::FontDescription"* nonnull dereferenceable(80) %2)
  call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink20CSSSegmentedFontFace19FontFaceInvalidatedEv(%"class.blink::CSSSegmentedFontFace"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CSSFontFace10SetDisplayENS_11FontDisplayE(%"class.blink::CSSFontFace"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::DequeIterator", align 8
  %4 = bitcast %"class.WTF::DequeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.WTF::DequeIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i32, i32* %8, align 8, !noalias !3
  store %"class.WTF::Deque"* %7, %"class.WTF::Deque"** %5, align 8, !alias.scope !3
  store i32 %10, i32* %6, align 8, !alias.scope !3
  %11 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 2
  %12 = load i32, i32* %11, align 4, !noalias !6
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %15, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret void

15:                                               ; preds = %2, %15
  %16 = call dereferenceable(8) %"class.blink::Member.24"* @_ZNK3WTF13DequeIteratorIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %3)
  %17 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %17, align 8
  %19 = bitcast %"class.blink::CSSFontFaceSource"* %18 to void (%"class.blink::CSSFontFaceSource"*, i32)***
  %20 = load void (%"class.blink::CSSFontFaceSource"*, i32)**, void (%"class.blink::CSSFontFaceSource"*, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::CSSFontFaceSource"*, i32)*, void (%"class.blink::CSSFontFaceSource"*, i32)** %20, i64 10
  %22 = load void (%"class.blink::CSSFontFaceSource"*, i32)*, void (%"class.blink::CSSFontFaceSource"*, i32)** %21, align 8
  call void %22(%"class.blink::CSSFontFaceSource"* %18, i32 %1) #8
  %23 = load i32, i32* %6, align 8
  %24 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %5, align 8
  %25 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, -1
  %28 = icmp eq i32 %23, %27
  %29 = add i32 %23, 1
  %30 = select i1 %28, i32 0, i32 %29
  store i32 %30, i32* %6, align 8
  %31 = icmp eq i32 %30, %12
  br i1 %31, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.24"* @_ZNK3WTF13DequeIteratorIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEEdeEv(%"class.WTF::DequeIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %17, i8* %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.12, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #8
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %26 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %28, i64 %30
  ret %"class.blink::Member.24"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink11CSSFontFace30ApproximateBlankCharacterCountEv(%"class.blink::CSSFontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %59, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %8, align 8
  %10 = zext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %9, i64 %10, i32 0, i32 0
  %12 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %11, align 8
  %13 = bitcast %"class.blink::CSSFontFaceSource"* %12 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %14 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %14, i64 11
  %16 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::CSSFontFaceSource"* %12) #8
  br i1 %17, label %18, label %59

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Member"*, %"class.blink::Member"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %23, i64 %26
  br i1 %21, label %59, label %28

28:                                               ; preds = %18
  %29 = icmp eq i32 %25, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %28, %34
  %31 = phi %"class.blink::Member"* [ %35, %34 ], [ %23, %28 ]
  %32 = bitcast %"class.blink::Member"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  switch i64 %33, label %37 [
    i64 -1, label %34
    i64 0, label %34
  ]

34:                                               ; preds = %30, %30
  %35 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 1
  %36 = icmp eq %"class.blink::Member"* %35, %27
  br i1 %36, label %59, label %30

37:                                               ; preds = %30, %28
  %38 = phi %"class.blink::Member"* [ %23, %28 ], [ %31, %30 ]
  %39 = icmp eq %"class.blink::Member"* %38, %27
  br i1 %39, label %59, label %40

40:                                               ; preds = %37, %57
  %41 = phi i64 [ %47, %57 ], [ 0, %37 ]
  %42 = phi %"class.blink::Member"* [ %51, %57 ], [ %38, %37 ]
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %44, i64 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %41
  %48 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %42, i64 1
  %49 = icmp eq %"class.blink::Member"* %48, %27
  br i1 %49, label %59, label %50

50:                                               ; preds = %40, %54
  %51 = phi %"class.blink::Member"* [ %55, %54 ], [ %48, %40 ]
  %52 = bitcast %"class.blink::Member"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  switch i64 %53, label %57 [
    i64 -1, label %54
    i64 0, label %54
  ]

54:                                               ; preds = %50, %50
  %55 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %51, i64 1
  %56 = icmp eq %"class.blink::Member"* %55, %27
  br i1 %56, label %59, label %50

57:                                               ; preds = %50
  %58 = icmp eq %"class.blink::Member"* %51, %27
  br i1 %58, label %59, label %40

59:                                               ; preds = %34, %40, %57, %54, %18, %37, %1, %7
  %60 = phi i64 [ 0, %7 ], [ 0, %1 ], [ 0, %37 ], [ 0, %18 ], [ %47, %54 ], [ %47, %57 ], [ %47, %40 ], [ 0, %34 ]
  ret i64 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11CSSFontFace25FallbackVisibilityChangedEPNS_20RemoteFontFaceSourceE(%"class.blink::CSSFontFace"* nocapture readonly, %"class.blink::RemoteFontFaceSource"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %53, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %10, align 8
  %12 = zext i32 %4 to i64
  %13 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %11, i64 %12, i32 0, i32 0
  %14 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %13, align 8
  %15 = icmp eq %"class.blink::CSSFontFaceSource"* %9, %14
  br i1 %15, label %16, label %53

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Member"*, %"class.blink::Member"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %21, i64 %24
  br i1 %19, label %53, label %26

26:                                               ; preds = %16
  %27 = icmp eq i32 %23, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %26, %32
  %29 = phi %"class.blink::Member"* [ %33, %32 ], [ %21, %26 ]
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  switch i64 %31, label %35 [
    i64 -1, label %32
    i64 0, label %32
  ]

32:                                               ; preds = %28, %28
  %33 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %29, i64 1
  %34 = icmp eq %"class.blink::Member"* %33, %25
  br i1 %34, label %53, label %28

35:                                               ; preds = %28, %26
  %36 = phi %"class.blink::Member"* [ %21, %26 ], [ %29, %28 ]
  %37 = icmp eq %"class.blink::Member"* %36, %25
  br i1 %37, label %53, label %38

38:                                               ; preds = %35, %51
  %39 = phi %"class.blink::Member"* [ %45, %51 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %40, align 8
  tail call void @_ZN5blink20CSSSegmentedFontFace19FontFaceInvalidatedEv(%"class.blink::CSSSegmentedFontFace"* %41) #8
  %42 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 1
  %43 = icmp eq %"class.blink::Member"* %42, %25
  br i1 %43, label %53, label %44

44:                                               ; preds = %38, %48
  %45 = phi %"class.blink::Member"* [ %49, %48 ], [ %42, %38 ]
  %46 = bitcast %"class.blink::Member"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  switch i64 %47, label %51 [
    i64 -1, label %48
    i64 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 1
  %50 = icmp eq %"class.blink::Member"* %49, %25
  br i1 %50, label %53, label %44

51:                                               ; preds = %44
  %52 = icmp eq %"class.blink::Member"* %45, %25
  br i1 %52, label %53, label %38

53:                                               ; preds = %32, %38, %51, %48, %16, %35, %2, %8
  %54 = phi i1 [ false, %8 ], [ false, %2 ], [ true, %35 ], [ true, %16 ], [ true, %48 ], [ true, %51 ], [ true, %38 ], [ true, %32 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink11CSSFontFace11GetFontDataERKNS_15FontDescriptionE(%"class.blink::CSSFontFace"* nocapture, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FontDescription", align 8
  %4 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %5 = alloca %"struct.blink::FontMetricsOverride", align 4
  %6 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %155, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::FontDescription"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %14, i64 0, i32 16, i32 0, i32 0
  %16 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %15, align 8
  %17 = icmp eq %"class.blink::CSSValue"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = tail call float @_ZNK5blink8FontFace13GetSizeAdjustEv(%"class.blink::FontFace"* %14) #8
  call void @_ZNK5blink15FontDescription27SizeAdjustedFontDescriptionEf(%"class.blink::FontDescription"* nonnull sret %3, %"class.blink::FontDescription"* %1, float %19) #8
  br label %21

20:                                               ; preds = %11
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %3, %"class.blink::FontDescription"* dereferenceable(80) %1) #8
  br label %21

21:                                               ; preds = %20, %18
  %22 = load i32, i32* %6, align 8
  %23 = load i32, i32* %8, align 4
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %140, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"struct.blink::FontSelectionCapabilities"* %4 to i8*
  %28 = bitcast %"struct.blink::FontSelectionCapabilities"* %4 to i64*
  %29 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %4, i64 0, i32 2
  %30 = bitcast %"struct.blink::FontSelectionRange"* %29 to i48*
  %31 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %32

32:                                               ; preds = %25, %120
  %33 = phi i32 [ %22, %25 ], [ %137, %120 ]
  %34 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %26, align 8
  %35 = zext i32 %33 to i64
  %36 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %34, i64 %35, i32 0, i32 0
  %37 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %36, align 8
  %38 = bitcast %"class.blink::CSSFontFaceSource"* %37 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %39 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %39, i64 12
  %41 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %40, align 8
  %42 = call zeroext i1 %41(%"class.blink::CSSFontFaceSource"* %37) #8
  br i1 %42, label %153, label %43

43:                                               ; preds = %32
  %44 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %27) #8
  %45 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %13, align 8
  %46 = call { i64, i48 } @_ZNK5blink8FontFace28GetFontSelectionCapabilitiesEv(%"class.blink::FontFace"* %45) #8
  %47 = extractvalue { i64, i48 } %46, 0
  %48 = extractvalue { i64, i48 } %46, 1
  store i64 %47, i64* %28, align 8
  store i48 %48, i48* %30, align 8
  %49 = call %"class.blink::SimpleFontData"* @_ZN5blink17CSSFontFaceSource11GetFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE(%"class.blink::CSSFontFaceSource"* %44, %"class.blink::FontDescription"* nonnull dereferenceable(80) %3, %"struct.blink::FontSelectionCapabilities"* nonnull dereferenceable(14) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %27) #8
  %50 = icmp eq %"class.blink::SimpleFontData"* %49, null
  br i1 %50, label %120, label %51

51:                                               ; preds = %43
  %52 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %13, align 8
  %53 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %52, i64 0, i32 12, i32 0, i32 0
  %54 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %53, align 8
  %55 = icmp eq %"class.blink::CSSValue"* %54, null
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %52, i64 0, i32 13, i32 0, i32 0
  %58 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %57, align 8
  %59 = icmp eq %"class.blink::CSSValue"* %58, null
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %52, i64 0, i32 14, i32 0, i32 0
  %62 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %61, align 8
  %63 = icmp eq %"class.blink::CSSValue"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %52, i64 0, i32 15, i32 0, i32 0
  %66 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %65, align 8
  %67 = icmp eq %"class.blink::CSSValue"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %64, %51, %56, %60
  %69 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #8
  call void @_ZNK5blink8FontFace22GetFontMetricsOverrideEv(%"struct.blink::FontMetricsOverride"* nonnull sret %5, %"class.blink::FontFace"* %52) #8
  %70 = call %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData25MetricsOverriddenFontDataERKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"* nonnull %49, %"struct.blink::FontMetricsOverride"* nonnull dereferenceable(24) %5) #8
  %71 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %49, i64 0, i32 0, i32 1, i32 0
  %72 = getelementptr inbounds %"class.base::RefCounted.683", %"class.base::RefCounted.683"* %71, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %72) #8
  %73 = getelementptr inbounds %"class.base::RefCounted.683", %"class.base::RefCounted.683"* %71, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.base::RefCounted.683", %"class.base::RefCounted.683"* %71, i64 -2
  %78 = bitcast %"class.base::RefCounted.683"* %77 to %"class.blink::FontData"*
  %79 = bitcast %"class.base::RefCounted.683"* %77 to void (%"class.blink::FontData"*)***
  %80 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %80, i64 1
  %82 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %81, align 8
  call void %82(%"class.blink::FontData"* nonnull %78) #8
  br label %83

83:                                               ; preds = %68, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #8
  %84 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %13, align 8
  br label %85

85:                                               ; preds = %64, %83
  %86 = phi %"class.blink::FontFace"* [ %84, %83 ], [ %52, %64 ]
  %87 = phi %"class.blink::SimpleFontData"* [ %70, %83 ], [ %49, %64 ]
  %88 = ptrtoint %"class.blink::SimpleFontData"* %87 to i64
  %89 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %86, i64 0, i32 17
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %107

92:                                               ; preds = %85
  %93 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %36, align 8
  %94 = bitcast %"class.blink::CSSFontFaceSource"* %93 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %95 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %95, i64 3
  %97 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %96, align 8
  %98 = call zeroext i1 %97(%"class.blink::CSSFontFaceSource"* %93) #8
  br i1 %98, label %106, label %99

99:                                               ; preds = %92
  %100 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %36, align 8
  %101 = bitcast %"class.blink::CSSFontFaceSource"* %100 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %102 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %101, align 8
  %103 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %102, i64 4
  %104 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %103, align 8
  %105 = call zeroext i1 %104(%"class.blink::CSSFontFaceSource"* %100) #8
  br i1 %105, label %106, label %107

106:                                              ; preds = %99, %92
  call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 1)
  br label %107

107:                                              ; preds = %106, %99, %85
  %108 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %13, align 8
  %109 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %108, i64 0, i32 17
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %153

112:                                              ; preds = %107
  %113 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %36, align 8
  %114 = bitcast %"class.blink::CSSFontFaceSource"* %113 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %115 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %114, align 8
  %116 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %115, i64 4
  %117 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %116, align 8
  %118 = call zeroext i1 %117(%"class.blink::CSSFontFaceSource"* %113) #8
  br i1 %118, label %119, label %153

119:                                              ; preds = %112
  call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 2)
  br label %153

120:                                              ; preds = %43
  %121 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %26, align 8
  %122 = load i32, i32* %6, align 8
  %123 = zext i32 %122 to i64
  %124 = add i32 %122, 1
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %121, i64 %123
  %127 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %121, i64 %125
  %128 = bitcast %"class.blink::Member.24"* %126 to i8*
  %129 = ptrtoint %"class.blink::Member.24"* %127 to i64
  %130 = ptrtoint %"class.blink::Member.24"* %126 to i64
  %131 = sub i64 %129, %130
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %128, i64 %131) #8
  %132 = load i32, i32* %6, align 8
  %133 = load i32, i32* %31, align 8
  %134 = add i32 %133, -1
  %135 = icmp eq i32 %132, %134
  %136 = add i32 %132, 1
  %137 = select i1 %135, i32 0, i32 %136
  store i32 %137, i32* %6, align 8
  %138 = load i32, i32* %8, align 4
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %140, label %32

140:                                              ; preds = %120, %21
  %141 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %13, align 8
  %142 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %141, i64 0, i32 17
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %140
  call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 1)
  %146 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %13, align 8
  %147 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %146, i64 0, i32 17
  %148 = load i32, i32* %147, align 8
  br label %149

149:                                              ; preds = %145, %140
  %150 = phi i32 [ %148, %145 ], [ %143, %140 ]
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 3)
  br label %153

153:                                              ; preds = %32, %107, %112, %119, %149, %152
  %154 = phi i64 [ 0, %152 ], [ 0, %149 ], [ %88, %107 ], [ %88, %112 ], [ %88, %119 ], [ 0, %32 ]
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #8
  br label %155

155:                                              ; preds = %2, %153
  %156 = phi i64 [ %154, %153 ], [ 0, %2 ]
  %157 = inttoptr i64 %156 to %"class.blink::SimpleFontData"*
  ret %"class.blink::SimpleFontData"* %157
}

declare void @_ZNK5blink15FontDescription27SizeAdjustedFontDescriptionEf(%"class.blink::FontDescription"* sret, %"class.blink::FontDescription"*, float) local_unnamed_addr #2

declare float @_ZNK5blink8FontFace13GetSizeAdjustEv(%"class.blink::FontFace"*) local_unnamed_addr #2

declare void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink17CSSFontFaceSource11GetFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE(%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80), %"struct.blink::FontSelectionCapabilities"* dereferenceable(14)) local_unnamed_addr #2

declare { i64, i48 } @_ZNK5blink8FontFace28GetFontSelectionCapabilitiesEv(%"class.blink::FontFace"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData25MetricsOverriddenFontDataERKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"*, %"struct.blink::FontMetricsOverride"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK5blink8FontFace22GetFontMetricsOverrideEv(%"struct.blink::FontMetricsOverride"* sret, %"class.blink::FontFace"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #8
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.723", %"class.base::RefCounted.723"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #8
  %17 = getelementptr inbounds %"class.base::RefCounted.723", %"class.base::RefCounted.723"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.723", %"class.base::RefCounted.723"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.723"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.723"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #8
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #8
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #8
  br label %55

55:                                               ; preds = %1, %5, %53
  %56 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %57 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %56, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted.717", %"class.base::RefCounted.717"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #8
  %62 = getelementptr inbounds %"class.base::RefCounted.717", %"class.base::RefCounted.717"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted.717", %"class.base::RefCounted.717"* %60, i64 -4
  %67 = bitcast %"class.base::RefCounted.717"* %66 to %"class.blink::FontTagValuePair.713"**
  %68 = load %"class.blink::FontTagValuePair.713"*, %"class.blink::FontTagValuePair.713"** %67, align 8
  %69 = icmp eq %"class.blink::FontTagValuePair.713"* %68, null
  %70 = bitcast %"class.blink::FontTagValuePair.713"* %68 to i8*
  br i1 %69, label %77, label %71, !prof !9

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.base::RefCounted.717", %"class.base::RefCounted.717"* %60, i64 -1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #8
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.base::RefCounted.717"* %66 to i8*
  tail call void @free(i8* %78) #8
  br label %79

79:                                               ; preds = %55, %59, %77
  %80 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %81 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %80, align 8
  %82 = icmp eq %"class.blink::FontFeatureSettings"* %81, null
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.707", %"class.base::RefCounted.707"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #8
  %86 = getelementptr inbounds %"class.base::RefCounted.707", %"class.base::RefCounted.707"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.707", %"class.base::RefCounted.707"* %84, i64 -4
  %91 = bitcast %"class.base::RefCounted.707"* %90 to %"class.blink::FontTagValuePair"**
  %92 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %91, align 8
  %93 = icmp eq %"class.blink::FontTagValuePair"* %92, null
  %94 = bitcast %"class.blink::FontTagValuePair"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !9

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted.707", %"class.base::RefCounted.707"* %84, i64 -1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #8
  br label %101

101:                                              ; preds = %100, %89
  %102 = bitcast %"class.base::RefCounted.707"* %90 to i8*
  tail call void @free(i8* %102) #8
  br label %103

103:                                              ; preds = %79, %83, %101
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %104) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11CSSFontFace13MaybeLoadFontERKNS_15FontDescriptionERKN3WTF6StringE(%"class.blink::CSSFontFace"* nocapture, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZNK3WTF6String19CharacterStartingAtEj(%"class.WTF::String"* %2, i32 0) #8
  %5 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"* %6, i32 %4) #8
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %10, i64 0, i32 17
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN5blink11CSSFontFace4LoadERKNS_15FontDescriptionE(%"class.blink::CSSFontFace"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1)
  br label %15

15:                                               ; preds = %3, %8, %14
  %16 = phi i1 [ true, %14 ], [ true, %8 ], [ false, %3 ]
  ret i1 %16
}

declare i32 @_ZNK3WTF6String19CharacterStartingAtEj(%"class.WTF::String"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CSSFontFace4LoadERKNS_15FontDescriptionE(%"class.blink::CSSFontFace"* nocapture, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %4, i64 0, i32 17
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 1)
  br label %9

9:                                                ; preds = %8, %2
  %10 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %77, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %18

18:                                               ; preds = %15, %57
  %19 = phi i32 [ %11, %15 ], [ %74, %57 ]
  %20 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %16, align 8
  %21 = zext i32 %19 to i64
  %22 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %20, i64 %21, i32 0, i32 0
  %23 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %22, align 8
  %24 = bitcast %"class.blink::CSSFontFaceSource"* %23 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %25 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %25, i64 5
  %27 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::CSSFontFaceSource"* %23) #8
  br i1 %28, label %29, label %57

29:                                               ; preds = %18
  %30 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %22, align 8
  %31 = bitcast %"class.blink::CSSFontFaceSource"* %30 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %32 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %32, i64 2
  %34 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::CSSFontFaceSource"* %30) #8
  %36 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %22, align 8
  br i1 %35, label %37, label %44

37:                                               ; preds = %29
  %38 = bitcast %"class.blink::CSSFontFaceSource"* %36 to i1 (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*)***
  %39 = load i1 (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*)**, i1 (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*)*, i1 (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*)** %39, i64 8
  %41 = load i1 (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*)*, i1 (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::CSSFontFaceSource"* %36, %"class.blink::FontDescription"* dereferenceable(80) %1) #8
  br i1 %42, label %43, label %57

43:                                               ; preds = %37
  tail call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 2)
  br label %78

44:                                               ; preds = %29
  %45 = bitcast %"class.blink::CSSFontFaceSource"* %36 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %46 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %46, i64 4
  %48 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::CSSFontFaceSource"* %36) #8
  br i1 %49, label %56, label %50

50:                                               ; preds = %44
  %51 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %22, align 8
  %52 = bitcast %"class.blink::CSSFontFaceSource"* %51 to void (%"class.blink::CSSFontFaceSource"*)***
  %53 = load void (%"class.blink::CSSFontFaceSource"*)**, void (%"class.blink::CSSFontFaceSource"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %53, i64 9
  %55 = load void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %54, align 8
  tail call void %55(%"class.blink::CSSFontFaceSource"* %51) #8
  br label %78

56:                                               ; preds = %44
  tail call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 2)
  br label %78

57:                                               ; preds = %37, %18
  %58 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %16, align 8
  %59 = load i32, i32* %10, align 8
  %60 = zext i32 %59 to i64
  %61 = add i32 %59, 1
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %58, i64 %60
  %64 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %58, i64 %62
  %65 = bitcast %"class.blink::Member.24"* %63 to i8*
  %66 = ptrtoint %"class.blink::Member.24"* %64 to i64
  %67 = ptrtoint %"class.blink::Member.24"* %63 to i64
  %68 = sub i64 %66, %67
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %65, i64 %68) #8
  %69 = load i32, i32* %10, align 8
  %70 = load i32, i32* %17, align 8
  %71 = add i32 %70, -1
  %72 = icmp eq i32 %69, %71
  %73 = add i32 %69, 1
  %74 = select i1 %72, i32 0, i32 %73
  store i32 %74, i32* %10, align 8
  %75 = load i32, i32* %12, align 4
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %18

77:                                               ; preds = %57, %9
  tail call void @_ZN5blink11CSSFontFace13SetLoadStatusENS_8FontFace14LoadStatusTypeE(%"class.blink::CSSFontFace"* %0, i32 3)
  br label %78

78:                                               ; preds = %56, %50, %43, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11CSSFontFace13MaybeLoadFontERKNS_15FontDescriptionERKNS_19FontDataForRangeSetE(%"class.blink::CSSFontFace"* nocapture, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontDataForRangeSet"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %2, i64 0, i32 3, i32 0
  %5 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %6, align 8
  %8 = icmp eq %"class.blink::UnicodeRangeSet"* %7, %5
  br i1 %8, label %9, label %16

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %11, i64 0, i32 17
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  tail call void @_ZN5blink11CSSFontFace4LoadERKNS_15FontDescriptionE(%"class.blink::CSSFontFace"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1)
  br label %16

16:                                               ; preds = %3, %9, %15
  %17 = phi i1 [ true, %15 ], [ true, %9 ], [ false, %3 ]
  ret i1 %17
}

declare void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #8
  %15 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.726"* %19 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %20) #8
  %21 = bitcast %"class.base::RefCounted.726"* %19 to i8*
  tail call void @free(i8* %21) #8
  br label %22

22:                                               ; preds = %10, %18
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #8
  %27 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.726"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #8
  %33 = bitcast %"class.base::RefCounted.726"* %31 to i8*
  tail call void @free(i8* %33) #8
  br label %34

34:                                               ; preds = %22, %24, %30
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #8
  %40 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.726", %"class.base::RefCounted.726"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.726"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #8
  %46 = bitcast %"class.base::RefCounted.726"* %44 to i8*
  tail call void @free(i8* %46) #8
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #8
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare void @_ZN5blink8FontFace8SetErrorEPNS_12DOMExceptionE(%"class.blink::FontFace"*, %"class.blink::DOMException"*) local_unnamed_addr #2

declare void @_ZN5blink8FontFace13SetLoadStatusENS0_14LoadStatusTypeE(%"class.blink::FontFace"*, i32) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #2

declare %"class.blink::FontFaceSetDocument"* @_ZN5blink19FontFaceSetDocument4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare void @_ZN5blink19FontFaceSetDocument16BeginFontLoadingEPNS_8FontFaceE(%"class.blink::FontFaceSetDocument"*, %"class.blink::FontFace"*) local_unnamed_addr #2

declare %"class.blink::FontFaceSetWorker"* @_ZN5blink17FontFaceSetWorker4FromERNS_17WorkerGlobalScopeE(%"class.blink::WorkerGlobalScope"* dereferenceable(2376)) local_unnamed_addr #2

declare void @_ZN5blink17FontFaceSetWorker16BeginFontLoadingEPNS_8FontFaceE(%"class.blink::FontFaceSetWorker"*, %"class.blink::FontFace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11CSSFontFace12UpdatePeriodEv(%"class.blink::CSSFontFace"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::DequeIterator", align 8
  %3 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %4, i64 0, i32 17
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %44, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::DequeIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %2, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %2, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast %"class.WTF::DequeIterator"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load i32, i32* %13, align 8, !noalias !10
  store %"class.WTF::Deque"* %12, %"class.WTF::Deque"** %10, align 8, !alias.scope !10
  store i32 %15, i32* %11, align 8, !alias.scope !10
  %16 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2, i32 0, i32 2
  %17 = load i32, i32* %16, align 4, !noalias !13
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %22, label %24

19:                                               ; preds = %24
  %20 = and i8 %34, 1
  %21 = icmp ne i8 %20, 0
  br label %22

22:                                               ; preds = %19, %8
  %23 = phi i1 [ false, %8 ], [ %21, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br label %44

24:                                               ; preds = %8, %24
  %25 = phi i8 [ %34, %24 ], [ 0, %8 ]
  %26 = call dereferenceable(8) %"class.blink::Member.24"* @_ZNK3WTF13DequeIteratorIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %2)
  %27 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %27, align 8
  %29 = bitcast %"class.blink::CSSFontFaceSource"* %28 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %30 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %30, i64 13
  %32 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %31, align 8
  %33 = call zeroext i1 %32(%"class.blink::CSSFontFaceSource"* %28) #8
  %34 = select i1 %33, i8 1, i8 %25
  %35 = load i32, i32* %11, align 8
  %36 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %10, align 8
  %37 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %36, i64 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, -1
  %40 = icmp eq i32 %35, %39
  %41 = add i32 %35, 1
  %42 = select i1 %40, i32 0, i32 %41
  store i32 %42, i32* %11, align 8
  %43 = icmp eq i32 %42, %17
  br i1 %43, label %19, label %24

44:                                               ; preds = %1, %22
  %45 = phi i1 [ %23, %22 ], [ false, %1 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11CSSFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSFontFace"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapHashSet"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashSet"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #8
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::HeapDeque"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = bitcast %"class.blink::HeapDeque"* %19 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #8
  %26 = icmp eq i64 %21, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %33

33:                                               ; preds = %18, %27
  %34 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %0, i64 0, i32 3
  %35 = bitcast %"class.blink::Member.43"* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = inttoptr i64 %36 to i8*
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #8
  br label %44

44:                                               ; preds = %33, %38
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CSSFontFaceSourceEEEEEmm(i64 %11) #8
  %13 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %4, align 8
  %14 = icmp eq %"class.blink::Member.24"* %13, null
  br i1 %14, label %104, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::Member.24"* %13 to i8*
  %17 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %16, i64 %12) #8
  br i1 %17, label %18, label %104

18:                                               ; preds = %15
  %19 = lshr i64 %12, 3
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %2, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %22, %24
  br i1 %25, label %26, label %245

26:                                               ; preds = %18
  %27 = sub i32 %22, %3
  %28 = add i32 %27, %20
  %29 = zext i32 %22 to i64
  %30 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %29
  %31 = zext i32 %3 to i64
  %32 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %31
  %33 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %4, align 8
  %34 = zext i32 %28 to i64
  %35 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %33, i64 %34
  %36 = icmp ne %"class.blink::Member.24"* %35, null
  %37 = icmp ne %"class.blink::Member.24"* %30, null
  %38 = and i1 %37, %36
  br i1 %38, label %39, label %92, !prof !9

39:                                               ; preds = %26
  %40 = icmp eq %"class.blink::Member.24"* %30, %35
  br i1 %40, label %72, label %41

41:                                               ; preds = %39
  %42 = icmp ult %"class.blink::Member.24"* %35, %30
  br i1 %42, label %43, label %54

43:                                               ; preds = %41
  %44 = icmp ult i32 %22, %3
  br i1 %44, label %45, label %72

45:                                               ; preds = %43, %45
  %46 = phi %"class.blink::Member.24"* [ %52, %45 ], [ %35, %43 ]
  %47 = phi %"class.blink::Member.24"* [ %51, %45 ], [ %30, %43 ]
  %48 = bitcast %"class.blink::Member.24"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member.24"* %46 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %47, i64 1
  %52 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %46, i64 1
  %53 = icmp ult %"class.blink::Member.24"* %51, %32
  br i1 %53, label %45, label %72

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %32, i64 -1
  %56 = icmp ult %"class.blink::Member.24"* %55, %30
  br i1 %56, label %72, label %57

57:                                               ; preds = %54
  %58 = ptrtoint %"class.blink::Member.24"* %55 to i64
  %59 = ptrtoint %"class.blink::Member.24"* %30 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %35, i64 %61
  br label %63

63:                                               ; preds = %63, %57
  %64 = phi %"class.blink::Member.24"* [ %70, %63 ], [ %62, %57 ]
  %65 = phi %"class.blink::Member.24"* [ %69, %63 ], [ %55, %57 ]
  %66 = bitcast %"class.blink::Member.24"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::Member.24"* %64 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %65, i64 -1
  %70 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %64, i64 -1
  %71 = icmp ult %"class.blink::Member.24"* %69, %30
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %45, %54, %43, %39
  %73 = ptrtoint %"class.blink::Member.24"* %32 to i64
  %74 = ptrtoint %"class.blink::Member.24"* %30 to i64
  %75 = sub i64 %73, %74
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %72
  %78 = ashr exact i64 %75, 3
  br label %79

79:                                               ; preds = %89, %77
  %80 = phi i64 [ %82, %89 ], [ %78, %77 ]
  %81 = phi %"class.blink::Member.24"* [ %90, %89 ], [ %35, %77 ]
  %82 = add i64 %80, -1
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.blink::Member.24"* %81 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %87) #8
  br label %89

89:                                               ; preds = %85, %79
  %90 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %81, i64 1
  %91 = icmp eq i64 %82, 0
  br i1 %91, label %92, label %79

92:                                               ; preds = %89, %26, %72
  %93 = load i32, i32* %21, align 8
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %94
  %96 = icmp ult i32 %28, %3
  %97 = select i1 %96, i32 %28, i32 %3
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %98
  %100 = bitcast %"class.blink::Member.24"* %95 to i8*
  %101 = ptrtoint %"class.blink::Member.24"* %99 to i64
  %102 = ptrtoint %"class.blink::Member.24"* %95 to i64
  %103 = sub i64 %101, %102
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %100, i64 %103) #8
  store i32 %28, i32* %21, align 8
  br label %245

104:                                              ; preds = %1, %15
  %105 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CSSFontFaceSourceEEEEEmm(i64 %11) #8
  %106 = lshr i64 %105, 3
  %107 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %106) #8
  %108 = ptrtoint %"class.blink::HeapVectorBacking"* %107 to i64
  %109 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = trunc i64 %106 to i32
  store i32 %110, i32* %2, align 8
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %107, i64 0, i32 0
  %115 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #8
  br label %116

116:                                              ; preds = %104, %113
  %117 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp ugt i32 %118, %120
  br i1 %121, label %166, label %122

122:                                              ; preds = %116
  %123 = zext i32 %118 to i64
  %124 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %123
  %125 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %4, align 8
  %126 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %125, i64 %123
  %127 = icmp ne %"class.blink::Member.24"* %126, null
  %128 = icmp ne %"class.blink::Member.24"* %124, null
  %129 = and i1 %128, %127
  br i1 %129, label %130, label %154, !prof !9

130:                                              ; preds = %122
  %131 = zext i32 %120 to i64
  %132 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %131
  %133 = bitcast %"class.blink::Member.24"* %124 to i8*
  %134 = ptrtoint %"class.blink::Member.24"* %132 to i64
  %135 = ptrtoint %"class.blink::Member.24"* %124 to i64
  %136 = sub i64 %134, %135
  %137 = bitcast %"class.blink::Member.24"* %126 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %137, i8* nonnull %133, i64 %136) #8
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %154, label %139

139:                                              ; preds = %130
  %140 = ashr exact i64 %136, 3
  br label %141

141:                                              ; preds = %151, %139
  %142 = phi i64 [ %144, %151 ], [ %140, %139 ]
  %143 = phi %"class.blink::Member.24"* [ %152, %151 ], [ %126, %139 ]
  %144 = add i64 %142, -1
  %145 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = bitcast %"class.blink::Member.24"* %143 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #8
  br label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %143, i64 1
  %153 = icmp eq i64 %144, 0
  br i1 %153, label %154, label %141

154:                                              ; preds = %151, %122, %130
  %155 = load i32, i32* %117, align 8
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %156
  %158 = load i32, i32* %119, align 4
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %159
  %161 = bitcast %"class.blink::Member.24"* %157 to i8*
  %162 = ptrtoint %"class.blink::Member.24"* %160 to i64
  %163 = ptrtoint %"class.blink::Member.24"* %157 to i64
  %164 = sub i64 %162, %163
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %161, i64 %164) #8
  %165 = bitcast %"class.blink::Member.24"* %5 to i8*
  br label %243

166:                                              ; preds = %116
  %167 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %4, align 8
  %168 = icmp ne %"class.blink::Member.24"* %167, null
  %169 = icmp ne %"class.blink::Member.24"* %5, null
  %170 = and i1 %169, %168
  br i1 %170, label %173, label %171, !prof !9

171:                                              ; preds = %166
  %172 = bitcast %"class.blink::Member.24"* %5 to i8*
  br label %192

173:                                              ; preds = %166
  %174 = zext i32 %120 to i64
  %175 = bitcast %"class.blink::Member.24"* %5 to i8*
  %176 = shl nuw nsw i64 %174, 3
  %177 = bitcast %"class.blink::Member.24"* %167 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %177, i8* nonnull %175, i64 %176) #8
  %178 = icmp eq i32 %120, 0
  br i1 %178, label %192, label %179

179:                                              ; preds = %173, %189
  %180 = phi i64 [ %182, %189 ], [ %174, %173 ]
  %181 = phi %"class.blink::Member.24"* [ %190, %189 ], [ %167, %173 ]
  %182 = add nsw i64 %180, -1
  %183 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = bitcast %"class.blink::Member.24"* %181 to i8**
  %187 = load i8*, i8** %186, align 8
  %188 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %187) #8
  br label %189

189:                                              ; preds = %185, %179
  %190 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %181, i64 1
  %191 = icmp eq i64 %182, 0
  br i1 %191, label %192, label %179

192:                                              ; preds = %189, %171, %173
  %193 = phi i8* [ %172, %171 ], [ %175, %173 ], [ %175, %189 ]
  %194 = load i32, i32* %119, align 4
  %195 = zext i32 %194 to i64
  %196 = shl nuw nsw i64 %195, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %193, i64 %196) #8
  %197 = load i32, i32* %2, align 8
  %198 = load i32, i32* %117, align 8
  %199 = sub i32 %198, %3
  %200 = add i32 %199, %197
  %201 = zext i32 %198 to i64
  %202 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %201
  %203 = zext i32 %3 to i64
  %204 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %203
  %205 = load %"class.blink::Member.24"*, %"class.blink::Member.24"** %4, align 8
  %206 = zext i32 %200 to i64
  %207 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %205, i64 %206
  %208 = icmp ne %"class.blink::Member.24"* %207, null
  %209 = icmp ne %"class.blink::Member.24"* %202, null
  %210 = and i1 %209, %208
  br i1 %210, label %213, label %211, !prof !9

211:                                              ; preds = %192
  %212 = ptrtoint %"class.blink::Member.24"* %204 to i64
  br label %235

213:                                              ; preds = %192
  %214 = bitcast %"class.blink::Member.24"* %202 to i8*
  %215 = ptrtoint %"class.blink::Member.24"* %204 to i64
  %216 = ptrtoint %"class.blink::Member.24"* %202 to i64
  %217 = sub i64 %215, %216
  %218 = bitcast %"class.blink::Member.24"* %207 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %218, i8* nonnull %214, i64 %217) #8
  %219 = icmp eq i64 %217, 0
  br i1 %219, label %235, label %220

220:                                              ; preds = %213
  %221 = ashr exact i64 %217, 3
  br label %222

222:                                              ; preds = %232, %220
  %223 = phi i64 [ %225, %232 ], [ %221, %220 ]
  %224 = phi %"class.blink::Member.24"* [ %233, %232 ], [ %207, %220 ]
  %225 = add i64 %223, -1
  %226 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %232, label %228

228:                                              ; preds = %222
  %229 = bitcast %"class.blink::Member.24"* %224 to i8**
  %230 = load i8*, i8** %229, align 8
  %231 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %230) #8
  br label %232

232:                                              ; preds = %228, %222
  %233 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %224, i64 1
  %234 = icmp eq i64 %225, 0
  br i1 %234, label %235, label %222

235:                                              ; preds = %232, %211, %213
  %236 = phi i64 [ %212, %211 ], [ %215, %213 ], [ %215, %232 ]
  %237 = load i32, i32* %117, align 8
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %5, i64 %238
  %240 = bitcast %"class.blink::Member.24"* %239 to i8*
  %241 = ptrtoint %"class.blink::Member.24"* %239 to i64
  %242 = sub i64 %236, %241
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %240, i64 %242) #8
  store i32 %200, i32* %117, align 8
  br label %243

243:                                              ; preds = %235, %154
  %244 = phi i8* [ %193, %235 ], [ %165, %154 ]
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %244) #8
  br label %245

245:                                              ; preds = %92, %18, %243
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CSSFontFaceSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.3, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.24"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.24", %"class.blink::Member.24"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.24"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSFontFaceSourceEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSFontFaceSourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17CSSFontFaceSourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSFontFaceSource"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)** %5, i64 16
  %7 = load void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSFontFaceSource"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::CSSSegmentedFontFace"** dereferenceable(8), %"class.blink::CSSSegmentedFontFace"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %6 = icmp eq %"class.blink::Member"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* null)
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CSSSegmentedFontFace"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %40, align 8
  %42 = icmp eq %"class.blink::CSSSegmentedFontFace"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::CSSSegmentedFontFace"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::CSSSegmentedFontFace"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::CSSSegmentedFontFace"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::CSSSegmentedFontFace"* %59, inttoptr (i64 -1 to %"class.blink::CSSSegmentedFontFace"*)
  %67 = select i1 %66, %"class.blink::Member"* %60, %"class.blink::Member"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %73, align 8
  %75 = icmp eq %"class.blink::CSSSegmentedFontFace"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #8
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %2, align 8
  %89 = ptrtoint %"class.blink::CSSSegmentedFontFace"* %88 to i64
  %90 = bitcast %"class.blink::Member"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::CSSSegmentedFontFace"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #8
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #8
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member"*, i8 } undef, %"class.blink::Member"* %117, 0
  %119 = insertvalue { %"class.blink::Member"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"*, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #8
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %23, i8* %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"class.blink::Member"* %1, i8* nonnull dereferenceable(1) %4) #8
  %37 = load i8, i8* %4, align 1, !range !16
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #8
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member"*
  %44 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* %43, i32 %40, %"class.blink::Member"* %1) #8
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"*, i32, %"class.blink::Member"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !16
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %33 = icmp eq %"class.blink::Member"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #8
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #8
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member"* %61, %"class.blink::Member"* %55
  %63 = bitcast %"class.blink::Member"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #8
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* %42, i32 %1, %"class.blink::Member"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member"* %87, %"class.blink::Member"* %82
  %89 = bitcast %"class.blink::Member"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member"* %99, %"class.blink::Member"* %88
  %101 = bitcast %"class.blink::Member"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"*, %"class.blink::Member"*, i32, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #8
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #8
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #8
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 %42
  %44 = bitcast %"class.blink::Member"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %70, align 8
  %72 = icmp eq %"class.blink::CSSSegmentedFontFace"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::CSSSegmentedFontFace"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member"* %93, null
  %95 = ptrtoint %"class.blink::Member"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::CSSSegmentedFontFace"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::CSSSegmentedFontFace"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::CSSSegmentedFontFace"* %99, inttoptr (i64 -1 to %"class.blink::CSSSegmentedFontFace"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %113, align 8
  %115 = icmp eq %"class.blink::CSSSegmentedFontFace"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member"* %121, %3
  %123 = select i1 %122, %"class.blink::Member"* %118, %"class.blink::Member"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.10, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 5
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #8
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %33
  %35 = bitcast %"class.blink::Member"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv) #8
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv) #8
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSSegmentedFontFace"*
  tail call void @_ZNK5blink20CSSSegmentedFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSSegmentedFontFace"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink20CSSSegmentedFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"*, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #8
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !16
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20CSSSegmentedFontFaceEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #8
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member"*
  %47 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20CSSSegmentedFontFaceEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* %46, i32 %43, %"class.blink::Member"* null) #8
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontFace"*
  %4 = bitcast i8* %1 to void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)**, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FontFace"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE5beginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE3endEv: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE3endEv"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE5beginEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE3endEv: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF5DequeIN5blink6MemberINS1_17CSSFontFaceSourceEEELj0ENS1_13HeapAllocatorEE3endEv"}
!16 = !{i8 0, i8 2}
