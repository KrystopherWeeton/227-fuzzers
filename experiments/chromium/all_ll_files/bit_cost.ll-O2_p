; ModuleID = '../../third_party/brotli/enc/bit_cost.c'
source_filename = "../../third_party/brotli/enc/bit_cost.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.HistogramLiteral = type { [256 x i32], i64, double }
%struct.HistogramCommand = type { [704 x i32], i64, double }
%struct.HistogramDistance = type { [544 x i32], i64, double }

@kBrotliLog2Table = external hidden local_unnamed_addr constant [256 x double], align 16

; Function Attrs: nounwind ssp uwtable
define hidden double @BrotliPopulationCostLiteral(%struct.HistogramLiteral* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [5 x i64], align 16
  %3 = alloca [4 x i32], align 16
  %4 = alloca [18 x i32], align 16
  %5 = bitcast [5 x i64]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #3
  %6 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 0
  %7 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 1
  %8 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 2
  %9 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 3
  %10 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 1
  %11 = bitcast [5 x i64]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 40, i1 false)
  %12 = load i64, i64* %10, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %242, label %14

14:                                               ; preds = %1, %284
  %15 = phi i32 [ %285, %284 ], [ 0, %1 ]
  %16 = phi i64 [ %286, %284 ], [ 0, %1 ]
  %17 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = sext i32 %15 to i64
  %22 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 %21
  store i64 %16, i64* %22, align 8
  %23 = add nsw i32 %15, 1
  %24 = icmp sgt i32 %15, 3
  br i1 %24, label %31, label %25

25:                                               ; preds = %14, %20
  %26 = phi i32 [ %23, %20 ], [ %15, %14 ]
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %284, label %279

31:                                               ; preds = %284, %279, %20
  %32 = phi i32 [ %23, %20 ], [ %282, %279 ], [ %285, %284 ]
  switch i32 %32, label %89 [
    i32 1, label %242
    i32 2, label %33
    i32 3, label %36
    i32 4, label %57
  ]

33:                                               ; preds = %31
  %34 = uitofp i64 %12 to double
  %35 = fadd double %34, 2.000000e+01
  br label %242

36:                                               ; preds = %31
  %37 = load i64, i64* %6, align 16
  %38 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = load i64, i64* %7, align 8
  %41 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = load i64, i64* %8, align 16
  %44 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %42, %45
  %47 = select i1 %46, i32 %42, i32 %45
  %48 = icmp ugt i32 %39, %47
  %49 = select i1 %48, i32 %39, i32 %47
  %50 = add i32 %42, %39
  %51 = add i32 %50, %45
  %52 = shl i32 %51, 1
  %53 = uitofp i32 %52 to double
  %54 = fadd double %53, 2.800000e+01
  %55 = uitofp i32 %49 to double
  %56 = fsub double %54, %55
  br label %242

57:                                               ; preds = %31
  %58 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #3
  %59 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %60 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %62 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %63 = load i64, i64* %6, align 16
  %64 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %63
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %59, align 16
  %66 = load i64, i64* %7, align 8
  %67 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %66
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %60, align 4
  %69 = load i64, i64* %8, align 16
  %70 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %69
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %61, align 8
  %72 = load i64, i64* %9, align 8
  %73 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %72
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %62, align 4
  br label %75

75:                                               ; preds = %86, %57
  %76 = phi i32 [ %65, %57 ], [ %83, %86 ]
  %77 = phi i32 [ %68, %57 ], [ %88, %86 ]
  %78 = phi i64 [ 1, %57 ], [ %84, %86 ]
  %79 = icmp ugt i32 %77, %76
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %78
  store i32 %76, i32* %81, align 4
  store i32 %77, i32* %59, align 16
  br label %82

82:                                               ; preds = %75, %80
  %83 = phi i32 [ %76, %75 ], [ %77, %80 ]
  %84 = add nuw nsw i64 %78, 1
  %85 = icmp eq i64 %84, 4
  br i1 %85, label %244, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %84
  %88 = load i32, i32* %87, align 4
  br label %75

89:                                               ; preds = %31
  %90 = bitcast [18 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %90) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %90, i8 0, i64 72, i1 false)
  %91 = icmp ult i64 %12, 256
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %12
  %94 = load double, double* %93, align 8
  br label %98

95:                                               ; preds = %89
  %96 = uitofp i64 %12 to double
  %97 = tail call double @log2(double %96) #3
  br label %98

98:                                               ; preds = %92, %95
  %99 = phi double [ %94, %92 ], [ %97, %95 ]
  %100 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 17
  %101 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 0
  br label %102

102:                                              ; preds = %98, %170
  %103 = phi i32 [ 0, %98 ], [ %171, %170 ]
  %104 = phi i64 [ 1, %98 ], [ %174, %170 ]
  %105 = phi double [ 0.000000e+00, %98 ], [ %173, %170 ]
  %106 = phi i64 [ 0, %98 ], [ %172, %170 ]
  %107 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %102
  %111 = add nuw nsw i64 %106, 1
  %112 = icmp ult i64 %111, 256
  br i1 %112, label %140, label %150

113:                                              ; preds = %102
  %114 = icmp ult i32 %108, 256
  br i1 %114, label %115, label %119

115:                                              ; preds = %113
  %116 = zext i32 %108 to i64
  %117 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %116
  %118 = load double, double* %117, align 8
  br label %123

119:                                              ; preds = %113
  %120 = uitofp i32 %108 to double
  %121 = tail call double @log2(double %120) #3
  %122 = load i32, i32* %107, align 4
  br label %123

123:                                              ; preds = %115, %119
  %124 = phi i32 [ %108, %115 ], [ %122, %119 ]
  %125 = phi double [ %118, %115 ], [ %121, %119 ]
  %126 = fsub double %99, %125
  %127 = fadd double %126, 5.000000e-01
  %128 = fptoui double %127 to i64
  %129 = uitofp i32 %124 to double
  %130 = fmul double %126, %129
  %131 = fadd double %105, %130
  %132 = icmp ult i64 %128, 15
  %133 = select i1 %132, i64 %128, i64 15
  %134 = icmp ugt i64 %133, %104
  %135 = select i1 %134, i64 %133, i64 %104
  %136 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 %133
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = add nuw nsw i64 %106, 1
  br label %170

140:                                              ; preds = %110, %146
  %141 = phi i64 [ %148, %146 ], [ %111, %110 ]
  %142 = phi i32 [ %147, %146 ], [ 1, %110 ]
  %143 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 0, i64 %141
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %140
  %147 = add nuw nsw i32 %142, 1
  %148 = add i64 %141, 1
  %149 = icmp eq i64 %148, 256
  br i1 %149, label %150, label %140

150:                                              ; preds = %140, %146, %110
  %151 = phi i32 [ 1, %110 ], [ %147, %146 ], [ %142, %140 ]
  %152 = zext i32 %151 to i64
  %153 = add i64 %106, %152
  %154 = icmp eq i64 %153, 256
  br i1 %154, label %176, label %155

155:                                              ; preds = %150
  %156 = icmp ult i32 %151, 3
  br i1 %156, label %157, label %160

157:                                              ; preds = %155
  %158 = load i32, i32* %101, align 16
  %159 = add i32 %158, %151
  store i32 %159, i32* %101, align 16
  br label %170

160:                                              ; preds = %155
  %161 = add i32 %151, -2
  br label %162

162:                                              ; preds = %160, %162
  %163 = phi i32 [ %166, %162 ], [ %103, %160 ]
  %164 = phi i32 [ %168, %162 ], [ %161, %160 ]
  %165 = phi double [ %167, %162 ], [ %105, %160 ]
  %166 = add i32 %163, 1
  %167 = fadd double %165, 3.000000e+00
  %168 = lshr i32 %164, 3
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %162

170:                                              ; preds = %162, %157, %123
  %171 = phi i32 [ %103, %123 ], [ %103, %157 ], [ %166, %162 ]
  %172 = phi i64 [ %139, %123 ], [ %153, %157 ], [ %153, %162 ]
  %173 = phi double [ %131, %123 ], [ %105, %157 ], [ %167, %162 ]
  %174 = phi i64 [ %135, %123 ], [ %104, %157 ], [ %104, %162 ]
  %175 = icmp ult i64 %172, 256
  br i1 %175, label %102, label %176

176:                                              ; preds = %150, %170
  %177 = phi i32 [ %103, %150 ], [ %171, %170 ]
  %178 = phi double [ %105, %150 ], [ %173, %170 ]
  %179 = phi i64 [ %104, %150 ], [ %174, %170 ]
  store i32 %177, i32* %100, align 4
  %180 = shl i64 %179, 1
  %181 = add i64 %180, 18
  %182 = uitofp i64 %181 to double
  br label %183

183:                                              ; preds = %217, %176
  %184 = phi double [ 0.000000e+00, %176 ], [ %220, %217 ]
  %185 = phi i64 [ 0, %176 ], [ %209, %217 ]
  %186 = phi i64 [ 0, %176 ], [ %206, %217 ]
  %187 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 %186
  %188 = load i32, i32* %187, align 8
  %189 = zext i32 %188 to i64
  %190 = icmp ult i32 %188, 256
  br i1 %190, label %191, label %195

191:                                              ; preds = %183
  %192 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %189
  %193 = load double, double* %192, align 8
  %194 = uitofp i32 %188 to double
  br label %198

195:                                              ; preds = %183
  %196 = uitofp i32 %188 to double
  %197 = tail call double @log2(double %196) #3
  br label %198

198:                                              ; preds = %195, %191
  %199 = phi double [ %194, %191 ], [ %196, %195 ]
  %200 = phi double [ %193, %191 ], [ %197, %195 ]
  %201 = or i64 %186, 1
  %202 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 %201
  %203 = fmul double %199, %200
  %204 = fsub double %184, %203
  %205 = add i64 %185, %189
  %206 = add nuw nsw i64 %186, 2
  %207 = load i32, i32* %202, align 4
  %208 = zext i32 %207 to i64
  %209 = add i64 %205, %208
  %210 = uitofp i32 %207 to double
  %211 = icmp ult i32 %207, 256
  br i1 %211, label %212, label %215

212:                                              ; preds = %198
  %213 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %208
  %214 = load double, double* %213, align 8
  br label %217

215:                                              ; preds = %198
  %216 = tail call double @log2(double %210) #3
  br label %217

217:                                              ; preds = %215, %212
  %218 = phi double [ %214, %212 ], [ %216, %215 ]
  %219 = fmul double %218, %210
  %220 = fsub double %204, %219
  %221 = icmp ult i64 %206, 18
  br i1 %221, label %183, label %222

222:                                              ; preds = %217
  %223 = fadd double %178, %182
  %224 = icmp eq i64 %209, 0
  %225 = uitofp i64 %209 to double
  br i1 %224, label %237, label %226

226:                                              ; preds = %222
  %227 = icmp ult i64 %209, 256
  br i1 %227, label %228, label %231

228:                                              ; preds = %226
  %229 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %209
  %230 = load double, double* %229, align 8
  br label %233

231:                                              ; preds = %226
  %232 = tail call double @log2(double %225) #3
  br label %233

233:                                              ; preds = %231, %228
  %234 = phi double [ %230, %228 ], [ %232, %231 ]
  %235 = fmul double %234, %225
  %236 = fadd double %220, %235
  br label %237

237:                                              ; preds = %222, %233
  %238 = phi double [ %236, %233 ], [ %220, %222 ]
  %239 = fcmp olt double %238, %225
  %240 = select i1 %239, double %225, double %238
  %241 = fadd double %223, %240
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %90) #3
  br label %242

242:                                              ; preds = %31, %1, %237, %256, %36, %33
  %243 = phi double [ %35, %33 ], [ %56, %36 ], [ %272, %256 ], [ %241, %237 ], [ 1.200000e+01, %1 ], [ 1.200000e+01, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #3
  ret double %243

244:                                              ; preds = %82
  %245 = load i32, i32* %60, align 4
  %246 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %247 = load i32, i32* %246, align 8
  %248 = icmp ugt i32 %247, %245
  br i1 %248, label %249, label %250

249:                                              ; preds = %244
  store i32 %245, i32* %246, align 8
  store i32 %247, i32* %60, align 4
  br label %250

250:                                              ; preds = %249, %244
  %251 = phi i32 [ %247, %249 ], [ %245, %244 ]
  %252 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %253 = load i32, i32* %252, align 4
  %254 = icmp ugt i32 %253, %251
  br i1 %254, label %273, label %274

255:                                              ; preds = %274
  store i32 %275, i32* %276, align 4
  store i32 %277, i32* %61, align 8
  br label %256

256:                                              ; preds = %255, %274
  %257 = load i32, i32* %62, align 4
  %258 = load i32, i32* %61, align 8
  %259 = add i32 %257, %258
  %260 = load i32, i32* %59, align 16
  %261 = icmp ugt i32 %259, %260
  %262 = select i1 %261, i32 %259, i32 %260
  %263 = mul i32 %259, 3
  %264 = uitofp i32 %263 to double
  %265 = fadd double %264, 3.700000e+01
  %266 = load i32, i32* %60, align 4
  %267 = add i32 %266, %260
  %268 = shl i32 %267, 1
  %269 = uitofp i32 %268 to double
  %270 = fadd double %265, %269
  %271 = uitofp i32 %262 to double
  %272 = fsub double %270, %271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #3
  br label %242

273:                                              ; preds = %250
  store i32 %251, i32* %252, align 4
  store i32 %253, i32* %60, align 4
  br label %274

274:                                              ; preds = %273, %250
  %275 = load i32, i32* %61, align 8
  %276 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %277 = load i32, i32* %276, align 4
  %278 = icmp ugt i32 %277, %275
  br i1 %278, label %255, label %256

279:                                              ; preds = %25
  %280 = sext i32 %26 to i64
  %281 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 %280
  store i64 %27, i64* %281, align 8
  %282 = add nsw i32 %26, 1
  %283 = icmp sgt i32 %26, 3
  br i1 %283, label %31, label %284

284:                                              ; preds = %279, %25
  %285 = phi i32 [ %282, %279 ], [ %26, %25 ]
  %286 = add nuw nsw i64 %16, 2
  %287 = icmp eq i64 %286, 256
  br i1 %287, label %31, label %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden double @BrotliPopulationCostCommand(%struct.HistogramCommand* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [5 x i64], align 16
  %3 = alloca [4 x i32], align 16
  %4 = alloca [18 x i32], align 16
  %5 = bitcast [5 x i64]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #3
  %6 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 0
  %7 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 1
  %8 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 2
  %9 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 3
  %10 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 1
  %11 = bitcast [5 x i64]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 40, i1 false)
  %12 = load i64, i64* %10, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %242, label %14

14:                                               ; preds = %1, %284
  %15 = phi i32 [ %285, %284 ], [ 0, %1 ]
  %16 = phi i64 [ %286, %284 ], [ 0, %1 ]
  %17 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = sext i32 %15 to i64
  %22 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 %21
  store i64 %16, i64* %22, align 8
  %23 = add nsw i32 %15, 1
  %24 = icmp sgt i32 %15, 3
  br i1 %24, label %31, label %25

25:                                               ; preds = %14, %20
  %26 = phi i32 [ %23, %20 ], [ %15, %14 ]
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %284, label %279

31:                                               ; preds = %284, %279, %20
  %32 = phi i32 [ %23, %20 ], [ %282, %279 ], [ %285, %284 ]
  switch i32 %32, label %89 [
    i32 1, label %242
    i32 2, label %33
    i32 3, label %36
    i32 4, label %57
  ]

33:                                               ; preds = %31
  %34 = uitofp i64 %12 to double
  %35 = fadd double %34, 2.000000e+01
  br label %242

36:                                               ; preds = %31
  %37 = load i64, i64* %6, align 16
  %38 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = load i64, i64* %7, align 8
  %41 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = load i64, i64* %8, align 16
  %44 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %42, %45
  %47 = select i1 %46, i32 %42, i32 %45
  %48 = icmp ugt i32 %39, %47
  %49 = select i1 %48, i32 %39, i32 %47
  %50 = add i32 %42, %39
  %51 = add i32 %50, %45
  %52 = shl i32 %51, 1
  %53 = uitofp i32 %52 to double
  %54 = fadd double %53, 2.800000e+01
  %55 = uitofp i32 %49 to double
  %56 = fsub double %54, %55
  br label %242

57:                                               ; preds = %31
  %58 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #3
  %59 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %60 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %62 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %63 = load i64, i64* %6, align 16
  %64 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %63
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %59, align 16
  %66 = load i64, i64* %7, align 8
  %67 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %66
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %60, align 4
  %69 = load i64, i64* %8, align 16
  %70 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %69
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %61, align 8
  %72 = load i64, i64* %9, align 8
  %73 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %72
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %62, align 4
  br label %75

75:                                               ; preds = %86, %57
  %76 = phi i32 [ %65, %57 ], [ %83, %86 ]
  %77 = phi i32 [ %68, %57 ], [ %88, %86 ]
  %78 = phi i64 [ 1, %57 ], [ %84, %86 ]
  %79 = icmp ugt i32 %77, %76
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %78
  store i32 %76, i32* %81, align 4
  store i32 %77, i32* %59, align 16
  br label %82

82:                                               ; preds = %75, %80
  %83 = phi i32 [ %76, %75 ], [ %77, %80 ]
  %84 = add nuw nsw i64 %78, 1
  %85 = icmp eq i64 %84, 4
  br i1 %85, label %244, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %84
  %88 = load i32, i32* %87, align 4
  br label %75

89:                                               ; preds = %31
  %90 = bitcast [18 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %90) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %90, i8 0, i64 72, i1 false)
  %91 = icmp ult i64 %12, 256
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %12
  %94 = load double, double* %93, align 8
  br label %98

95:                                               ; preds = %89
  %96 = uitofp i64 %12 to double
  %97 = tail call double @log2(double %96) #3
  br label %98

98:                                               ; preds = %92, %95
  %99 = phi double [ %94, %92 ], [ %97, %95 ]
  %100 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 17
  %101 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 0
  br label %102

102:                                              ; preds = %98, %170
  %103 = phi i32 [ 0, %98 ], [ %171, %170 ]
  %104 = phi i64 [ 1, %98 ], [ %174, %170 ]
  %105 = phi double [ 0.000000e+00, %98 ], [ %173, %170 ]
  %106 = phi i64 [ 0, %98 ], [ %172, %170 ]
  %107 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %102
  %111 = add nuw nsw i64 %106, 1
  %112 = icmp ult i64 %111, 704
  br i1 %112, label %140, label %150

113:                                              ; preds = %102
  %114 = icmp ult i32 %108, 256
  br i1 %114, label %115, label %119

115:                                              ; preds = %113
  %116 = zext i32 %108 to i64
  %117 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %116
  %118 = load double, double* %117, align 8
  br label %123

119:                                              ; preds = %113
  %120 = uitofp i32 %108 to double
  %121 = tail call double @log2(double %120) #3
  %122 = load i32, i32* %107, align 4
  br label %123

123:                                              ; preds = %115, %119
  %124 = phi i32 [ %108, %115 ], [ %122, %119 ]
  %125 = phi double [ %118, %115 ], [ %121, %119 ]
  %126 = fsub double %99, %125
  %127 = fadd double %126, 5.000000e-01
  %128 = fptoui double %127 to i64
  %129 = uitofp i32 %124 to double
  %130 = fmul double %126, %129
  %131 = fadd double %105, %130
  %132 = icmp ult i64 %128, 15
  %133 = select i1 %132, i64 %128, i64 15
  %134 = icmp ugt i64 %133, %104
  %135 = select i1 %134, i64 %133, i64 %104
  %136 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 %133
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = add nuw nsw i64 %106, 1
  br label %170

140:                                              ; preds = %110, %146
  %141 = phi i64 [ %148, %146 ], [ %111, %110 ]
  %142 = phi i32 [ %147, %146 ], [ 1, %110 ]
  %143 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 0, i64 %141
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %140
  %147 = add nuw nsw i32 %142, 1
  %148 = add i64 %141, 1
  %149 = icmp eq i64 %148, 704
  br i1 %149, label %150, label %140

150:                                              ; preds = %140, %146, %110
  %151 = phi i32 [ 1, %110 ], [ %147, %146 ], [ %142, %140 ]
  %152 = zext i32 %151 to i64
  %153 = add i64 %106, %152
  %154 = icmp eq i64 %153, 704
  br i1 %154, label %176, label %155

155:                                              ; preds = %150
  %156 = icmp ult i32 %151, 3
  br i1 %156, label %157, label %160

157:                                              ; preds = %155
  %158 = load i32, i32* %101, align 16
  %159 = add i32 %158, %151
  store i32 %159, i32* %101, align 16
  br label %170

160:                                              ; preds = %155
  %161 = add i32 %151, -2
  br label %162

162:                                              ; preds = %160, %162
  %163 = phi i32 [ %166, %162 ], [ %103, %160 ]
  %164 = phi i32 [ %168, %162 ], [ %161, %160 ]
  %165 = phi double [ %167, %162 ], [ %105, %160 ]
  %166 = add i32 %163, 1
  %167 = fadd double %165, 3.000000e+00
  %168 = lshr i32 %164, 3
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %162

170:                                              ; preds = %162, %157, %123
  %171 = phi i32 [ %103, %123 ], [ %103, %157 ], [ %166, %162 ]
  %172 = phi i64 [ %139, %123 ], [ %153, %157 ], [ %153, %162 ]
  %173 = phi double [ %131, %123 ], [ %105, %157 ], [ %167, %162 ]
  %174 = phi i64 [ %135, %123 ], [ %104, %157 ], [ %104, %162 ]
  %175 = icmp ult i64 %172, 704
  br i1 %175, label %102, label %176

176:                                              ; preds = %150, %170
  %177 = phi i32 [ %103, %150 ], [ %171, %170 ]
  %178 = phi double [ %105, %150 ], [ %173, %170 ]
  %179 = phi i64 [ %104, %150 ], [ %174, %170 ]
  store i32 %177, i32* %100, align 4
  %180 = shl i64 %179, 1
  %181 = add i64 %180, 18
  %182 = uitofp i64 %181 to double
  br label %183

183:                                              ; preds = %217, %176
  %184 = phi double [ 0.000000e+00, %176 ], [ %220, %217 ]
  %185 = phi i64 [ 0, %176 ], [ %209, %217 ]
  %186 = phi i64 [ 0, %176 ], [ %206, %217 ]
  %187 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 %186
  %188 = load i32, i32* %187, align 8
  %189 = zext i32 %188 to i64
  %190 = icmp ult i32 %188, 256
  br i1 %190, label %191, label %195

191:                                              ; preds = %183
  %192 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %189
  %193 = load double, double* %192, align 8
  %194 = uitofp i32 %188 to double
  br label %198

195:                                              ; preds = %183
  %196 = uitofp i32 %188 to double
  %197 = tail call double @log2(double %196) #3
  br label %198

198:                                              ; preds = %195, %191
  %199 = phi double [ %194, %191 ], [ %196, %195 ]
  %200 = phi double [ %193, %191 ], [ %197, %195 ]
  %201 = or i64 %186, 1
  %202 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 %201
  %203 = fmul double %199, %200
  %204 = fsub double %184, %203
  %205 = add i64 %185, %189
  %206 = add nuw nsw i64 %186, 2
  %207 = load i32, i32* %202, align 4
  %208 = zext i32 %207 to i64
  %209 = add i64 %205, %208
  %210 = uitofp i32 %207 to double
  %211 = icmp ult i32 %207, 256
  br i1 %211, label %212, label %215

212:                                              ; preds = %198
  %213 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %208
  %214 = load double, double* %213, align 8
  br label %217

215:                                              ; preds = %198
  %216 = tail call double @log2(double %210) #3
  br label %217

217:                                              ; preds = %215, %212
  %218 = phi double [ %214, %212 ], [ %216, %215 ]
  %219 = fmul double %218, %210
  %220 = fsub double %204, %219
  %221 = icmp ult i64 %206, 18
  br i1 %221, label %183, label %222

222:                                              ; preds = %217
  %223 = fadd double %178, %182
  %224 = icmp eq i64 %209, 0
  %225 = uitofp i64 %209 to double
  br i1 %224, label %237, label %226

226:                                              ; preds = %222
  %227 = icmp ult i64 %209, 256
  br i1 %227, label %228, label %231

228:                                              ; preds = %226
  %229 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %209
  %230 = load double, double* %229, align 8
  br label %233

231:                                              ; preds = %226
  %232 = tail call double @log2(double %225) #3
  br label %233

233:                                              ; preds = %231, %228
  %234 = phi double [ %230, %228 ], [ %232, %231 ]
  %235 = fmul double %234, %225
  %236 = fadd double %220, %235
  br label %237

237:                                              ; preds = %222, %233
  %238 = phi double [ %236, %233 ], [ %220, %222 ]
  %239 = fcmp olt double %238, %225
  %240 = select i1 %239, double %225, double %238
  %241 = fadd double %223, %240
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %90) #3
  br label %242

242:                                              ; preds = %31, %1, %237, %256, %36, %33
  %243 = phi double [ %35, %33 ], [ %56, %36 ], [ %272, %256 ], [ %241, %237 ], [ 1.200000e+01, %1 ], [ 1.200000e+01, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #3
  ret double %243

244:                                              ; preds = %82
  %245 = load i32, i32* %60, align 4
  %246 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %247 = load i32, i32* %246, align 8
  %248 = icmp ugt i32 %247, %245
  br i1 %248, label %249, label %250

249:                                              ; preds = %244
  store i32 %245, i32* %246, align 8
  store i32 %247, i32* %60, align 4
  br label %250

250:                                              ; preds = %249, %244
  %251 = phi i32 [ %247, %249 ], [ %245, %244 ]
  %252 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %253 = load i32, i32* %252, align 4
  %254 = icmp ugt i32 %253, %251
  br i1 %254, label %273, label %274

255:                                              ; preds = %274
  store i32 %275, i32* %276, align 4
  store i32 %277, i32* %61, align 8
  br label %256

256:                                              ; preds = %255, %274
  %257 = load i32, i32* %62, align 4
  %258 = load i32, i32* %61, align 8
  %259 = add i32 %257, %258
  %260 = load i32, i32* %59, align 16
  %261 = icmp ugt i32 %259, %260
  %262 = select i1 %261, i32 %259, i32 %260
  %263 = mul i32 %259, 3
  %264 = uitofp i32 %263 to double
  %265 = fadd double %264, 3.700000e+01
  %266 = load i32, i32* %60, align 4
  %267 = add i32 %266, %260
  %268 = shl i32 %267, 1
  %269 = uitofp i32 %268 to double
  %270 = fadd double %265, %269
  %271 = uitofp i32 %262 to double
  %272 = fsub double %270, %271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #3
  br label %242

273:                                              ; preds = %250
  store i32 %251, i32* %252, align 4
  store i32 %253, i32* %60, align 4
  br label %274

274:                                              ; preds = %273, %250
  %275 = load i32, i32* %61, align 8
  %276 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %277 = load i32, i32* %276, align 4
  %278 = icmp ugt i32 %277, %275
  br i1 %278, label %255, label %256

279:                                              ; preds = %25
  %280 = sext i32 %26 to i64
  %281 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 %280
  store i64 %27, i64* %281, align 8
  %282 = add nsw i32 %26, 1
  %283 = icmp sgt i32 %26, 3
  br i1 %283, label %31, label %284

284:                                              ; preds = %279, %25
  %285 = phi i32 [ %282, %279 ], [ %26, %25 ]
  %286 = add nuw nsw i64 %16, 2
  %287 = icmp eq i64 %286, 704
  br i1 %287, label %31, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden double @BrotliPopulationCostDistance(%struct.HistogramDistance* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [5 x i64], align 16
  %3 = alloca [4 x i32], align 16
  %4 = alloca [18 x i32], align 16
  %5 = bitcast [5 x i64]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #3
  %6 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 0
  %7 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 1
  %8 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 2
  %9 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 3
  %10 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 1
  %11 = bitcast [5 x i64]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 40, i1 false)
  %12 = load i64, i64* %10, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %242, label %14

14:                                               ; preds = %1, %284
  %15 = phi i32 [ %285, %284 ], [ 0, %1 ]
  %16 = phi i64 [ %286, %284 ], [ 0, %1 ]
  %17 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = sext i32 %15 to i64
  %22 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 %21
  store i64 %16, i64* %22, align 8
  %23 = add nsw i32 %15, 1
  %24 = icmp sgt i32 %15, 3
  br i1 %24, label %31, label %25

25:                                               ; preds = %14, %20
  %26 = phi i32 [ %23, %20 ], [ %15, %14 ]
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %284, label %279

31:                                               ; preds = %284, %279, %20
  %32 = phi i32 [ %23, %20 ], [ %282, %279 ], [ %285, %284 ]
  switch i32 %32, label %89 [
    i32 1, label %242
    i32 2, label %33
    i32 3, label %36
    i32 4, label %57
  ]

33:                                               ; preds = %31
  %34 = uitofp i64 %12 to double
  %35 = fadd double %34, 2.000000e+01
  br label %242

36:                                               ; preds = %31
  %37 = load i64, i64* %6, align 16
  %38 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = load i64, i64* %7, align 8
  %41 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = load i64, i64* %8, align 16
  %44 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %42, %45
  %47 = select i1 %46, i32 %42, i32 %45
  %48 = icmp ugt i32 %39, %47
  %49 = select i1 %48, i32 %39, i32 %47
  %50 = add i32 %42, %39
  %51 = add i32 %50, %45
  %52 = shl i32 %51, 1
  %53 = uitofp i32 %52 to double
  %54 = fadd double %53, 2.800000e+01
  %55 = uitofp i32 %49 to double
  %56 = fsub double %54, %55
  br label %242

57:                                               ; preds = %31
  %58 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #3
  %59 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %60 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %62 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %63 = load i64, i64* %6, align 16
  %64 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %63
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %59, align 16
  %66 = load i64, i64* %7, align 8
  %67 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %66
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %60, align 4
  %69 = load i64, i64* %8, align 16
  %70 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %69
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %61, align 8
  %72 = load i64, i64* %9, align 8
  %73 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %72
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %62, align 4
  br label %75

75:                                               ; preds = %86, %57
  %76 = phi i32 [ %65, %57 ], [ %83, %86 ]
  %77 = phi i32 [ %68, %57 ], [ %88, %86 ]
  %78 = phi i64 [ 1, %57 ], [ %84, %86 ]
  %79 = icmp ugt i32 %77, %76
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %78
  store i32 %76, i32* %81, align 4
  store i32 %77, i32* %59, align 16
  br label %82

82:                                               ; preds = %75, %80
  %83 = phi i32 [ %76, %75 ], [ %77, %80 ]
  %84 = add nuw nsw i64 %78, 1
  %85 = icmp eq i64 %84, 4
  br i1 %85, label %244, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %84
  %88 = load i32, i32* %87, align 4
  br label %75

89:                                               ; preds = %31
  %90 = bitcast [18 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %90) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %90, i8 0, i64 72, i1 false)
  %91 = icmp ult i64 %12, 256
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %12
  %94 = load double, double* %93, align 8
  br label %98

95:                                               ; preds = %89
  %96 = uitofp i64 %12 to double
  %97 = tail call double @log2(double %96) #3
  br label %98

98:                                               ; preds = %92, %95
  %99 = phi double [ %94, %92 ], [ %97, %95 ]
  %100 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 17
  %101 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 0
  br label %102

102:                                              ; preds = %98, %170
  %103 = phi i32 [ 0, %98 ], [ %171, %170 ]
  %104 = phi i64 [ 1, %98 ], [ %174, %170 ]
  %105 = phi double [ 0.000000e+00, %98 ], [ %173, %170 ]
  %106 = phi i64 [ 0, %98 ], [ %172, %170 ]
  %107 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %102
  %111 = add nuw nsw i64 %106, 1
  %112 = icmp ult i64 %111, 544
  br i1 %112, label %140, label %150

113:                                              ; preds = %102
  %114 = icmp ult i32 %108, 256
  br i1 %114, label %115, label %119

115:                                              ; preds = %113
  %116 = zext i32 %108 to i64
  %117 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %116
  %118 = load double, double* %117, align 8
  br label %123

119:                                              ; preds = %113
  %120 = uitofp i32 %108 to double
  %121 = tail call double @log2(double %120) #3
  %122 = load i32, i32* %107, align 4
  br label %123

123:                                              ; preds = %115, %119
  %124 = phi i32 [ %108, %115 ], [ %122, %119 ]
  %125 = phi double [ %118, %115 ], [ %121, %119 ]
  %126 = fsub double %99, %125
  %127 = fadd double %126, 5.000000e-01
  %128 = fptoui double %127 to i64
  %129 = uitofp i32 %124 to double
  %130 = fmul double %126, %129
  %131 = fadd double %105, %130
  %132 = icmp ult i64 %128, 15
  %133 = select i1 %132, i64 %128, i64 15
  %134 = icmp ugt i64 %133, %104
  %135 = select i1 %134, i64 %133, i64 %104
  %136 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 %133
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = add nuw nsw i64 %106, 1
  br label %170

140:                                              ; preds = %110, %146
  %141 = phi i64 [ %148, %146 ], [ %111, %110 ]
  %142 = phi i32 [ %147, %146 ], [ 1, %110 ]
  %143 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 0, i64 %141
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %140
  %147 = add nuw nsw i32 %142, 1
  %148 = add i64 %141, 1
  %149 = icmp eq i64 %148, 544
  br i1 %149, label %150, label %140

150:                                              ; preds = %140, %146, %110
  %151 = phi i32 [ 1, %110 ], [ %147, %146 ], [ %142, %140 ]
  %152 = zext i32 %151 to i64
  %153 = add i64 %106, %152
  %154 = icmp eq i64 %153, 544
  br i1 %154, label %176, label %155

155:                                              ; preds = %150
  %156 = icmp ult i32 %151, 3
  br i1 %156, label %157, label %160

157:                                              ; preds = %155
  %158 = load i32, i32* %101, align 16
  %159 = add i32 %158, %151
  store i32 %159, i32* %101, align 16
  br label %170

160:                                              ; preds = %155
  %161 = add i32 %151, -2
  br label %162

162:                                              ; preds = %160, %162
  %163 = phi i32 [ %166, %162 ], [ %103, %160 ]
  %164 = phi i32 [ %168, %162 ], [ %161, %160 ]
  %165 = phi double [ %167, %162 ], [ %105, %160 ]
  %166 = add i32 %163, 1
  %167 = fadd double %165, 3.000000e+00
  %168 = lshr i32 %164, 3
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %162

170:                                              ; preds = %162, %157, %123
  %171 = phi i32 [ %103, %123 ], [ %103, %157 ], [ %166, %162 ]
  %172 = phi i64 [ %139, %123 ], [ %153, %157 ], [ %153, %162 ]
  %173 = phi double [ %131, %123 ], [ %105, %157 ], [ %167, %162 ]
  %174 = phi i64 [ %135, %123 ], [ %104, %157 ], [ %104, %162 ]
  %175 = icmp ult i64 %172, 544
  br i1 %175, label %102, label %176

176:                                              ; preds = %150, %170
  %177 = phi i32 [ %103, %150 ], [ %171, %170 ]
  %178 = phi double [ %105, %150 ], [ %173, %170 ]
  %179 = phi i64 [ %104, %150 ], [ %174, %170 ]
  store i32 %177, i32* %100, align 4
  %180 = shl i64 %179, 1
  %181 = add i64 %180, 18
  %182 = uitofp i64 %181 to double
  br label %183

183:                                              ; preds = %217, %176
  %184 = phi double [ 0.000000e+00, %176 ], [ %220, %217 ]
  %185 = phi i64 [ 0, %176 ], [ %209, %217 ]
  %186 = phi i64 [ 0, %176 ], [ %206, %217 ]
  %187 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 %186
  %188 = load i32, i32* %187, align 8
  %189 = zext i32 %188 to i64
  %190 = icmp ult i32 %188, 256
  br i1 %190, label %191, label %195

191:                                              ; preds = %183
  %192 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %189
  %193 = load double, double* %192, align 8
  %194 = uitofp i32 %188 to double
  br label %198

195:                                              ; preds = %183
  %196 = uitofp i32 %188 to double
  %197 = tail call double @log2(double %196) #3
  br label %198

198:                                              ; preds = %195, %191
  %199 = phi double [ %194, %191 ], [ %196, %195 ]
  %200 = phi double [ %193, %191 ], [ %197, %195 ]
  %201 = or i64 %186, 1
  %202 = getelementptr inbounds [18 x i32], [18 x i32]* %4, i64 0, i64 %201
  %203 = fmul double %199, %200
  %204 = fsub double %184, %203
  %205 = add i64 %185, %189
  %206 = add nuw nsw i64 %186, 2
  %207 = load i32, i32* %202, align 4
  %208 = zext i32 %207 to i64
  %209 = add i64 %205, %208
  %210 = uitofp i32 %207 to double
  %211 = icmp ult i32 %207, 256
  br i1 %211, label %212, label %215

212:                                              ; preds = %198
  %213 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %208
  %214 = load double, double* %213, align 8
  br label %217

215:                                              ; preds = %198
  %216 = tail call double @log2(double %210) #3
  br label %217

217:                                              ; preds = %215, %212
  %218 = phi double [ %214, %212 ], [ %216, %215 ]
  %219 = fmul double %218, %210
  %220 = fsub double %204, %219
  %221 = icmp ult i64 %206, 18
  br i1 %221, label %183, label %222

222:                                              ; preds = %217
  %223 = fadd double %178, %182
  %224 = icmp eq i64 %209, 0
  %225 = uitofp i64 %209 to double
  br i1 %224, label %237, label %226

226:                                              ; preds = %222
  %227 = icmp ult i64 %209, 256
  br i1 %227, label %228, label %231

228:                                              ; preds = %226
  %229 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %209
  %230 = load double, double* %229, align 8
  br label %233

231:                                              ; preds = %226
  %232 = tail call double @log2(double %225) #3
  br label %233

233:                                              ; preds = %231, %228
  %234 = phi double [ %230, %228 ], [ %232, %231 ]
  %235 = fmul double %234, %225
  %236 = fadd double %220, %235
  br label %237

237:                                              ; preds = %222, %233
  %238 = phi double [ %236, %233 ], [ %220, %222 ]
  %239 = fcmp olt double %238, %225
  %240 = select i1 %239, double %225, double %238
  %241 = fadd double %223, %240
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %90) #3
  br label %242

242:                                              ; preds = %31, %1, %237, %256, %36, %33
  %243 = phi double [ %35, %33 ], [ %56, %36 ], [ %272, %256 ], [ %241, %237 ], [ 1.200000e+01, %1 ], [ 1.200000e+01, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #3
  ret double %243

244:                                              ; preds = %82
  %245 = load i32, i32* %60, align 4
  %246 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %247 = load i32, i32* %246, align 8
  %248 = icmp ugt i32 %247, %245
  br i1 %248, label %249, label %250

249:                                              ; preds = %244
  store i32 %245, i32* %246, align 8
  store i32 %247, i32* %60, align 4
  br label %250

250:                                              ; preds = %249, %244
  %251 = phi i32 [ %247, %249 ], [ %245, %244 ]
  %252 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %253 = load i32, i32* %252, align 4
  %254 = icmp ugt i32 %253, %251
  br i1 %254, label %273, label %274

255:                                              ; preds = %274
  store i32 %275, i32* %276, align 4
  store i32 %277, i32* %61, align 8
  br label %256

256:                                              ; preds = %255, %274
  %257 = load i32, i32* %62, align 4
  %258 = load i32, i32* %61, align 8
  %259 = add i32 %257, %258
  %260 = load i32, i32* %59, align 16
  %261 = icmp ugt i32 %259, %260
  %262 = select i1 %261, i32 %259, i32 %260
  %263 = mul i32 %259, 3
  %264 = uitofp i32 %263 to double
  %265 = fadd double %264, 3.700000e+01
  %266 = load i32, i32* %60, align 4
  %267 = add i32 %266, %260
  %268 = shl i32 %267, 1
  %269 = uitofp i32 %268 to double
  %270 = fadd double %265, %269
  %271 = uitofp i32 %262 to double
  %272 = fsub double %270, %271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #3
  br label %242

273:                                              ; preds = %250
  store i32 %251, i32* %252, align 4
  store i32 %253, i32* %60, align 4
  br label %274

274:                                              ; preds = %273, %250
  %275 = load i32, i32* %61, align 8
  %276 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %277 = load i32, i32* %276, align 4
  %278 = icmp ugt i32 %277, %275
  br i1 %278, label %255, label %256

279:                                              ; preds = %25
  %280 = sext i32 %26 to i64
  %281 = getelementptr inbounds [5 x i64], [5 x i64]* %2, i64 0, i64 %280
  store i64 %27, i64* %281, align 8
  %282 = add nsw i32 %26, 1
  %283 = icmp sgt i32 %26, 3
  br i1 %283, label %31, label %284

284:                                              ; preds = %279, %25
  %285 = phi i32 [ %282, %279 ], [ %26, %25 ]
  %286 = add nuw nsw i64 %16, 2
  %287 = icmp eq i64 %286, 544
  br i1 %287, label %31, label %14
}

; Function Attrs: nofree nounwind
declare double @log2(double) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
