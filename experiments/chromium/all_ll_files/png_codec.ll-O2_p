; ModuleID = '../../ui/gfx/codec/png_codec.cc'
source_filename = "../../ui/gfx/codec/png_codec.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gfx::PNGCodec::Comment" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.gfx::(anonymous namespace)::PngReadStructInfo" = type { %struct.png_struct_def*, %struct.png_info_def* }
%struct.png_struct_def = type opaque
%struct.png_info_def = type opaque
%"class.gfx::(anonymous namespace)::PngDecoderState" = type <{ i32, i32, %class.SkBitmap*, i8, [7 x i8], %"class.std::__1::vector"*, i32, i32, i8, [7 x i8] }>
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.8 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.8 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.gfx::PNGCodec::Comment"*, %"struct.gfx::PNGCodec::Comment"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.gfx::PNGCodec::Comment"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i8**, i8**, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i8** }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { i64*, i64*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64* }
%class.sk_sp.23 = type { %class.SkDataTable* }
%class.SkDataTable = type { %class.SkRefCnt.base, i32, i64, %union.anon.24, void (i8*)*, i8* }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%union.anon.24 = type { %"struct.SkDataTable::Dir"* }
%"struct.SkDataTable::Dir" = type { i8*, i64 }
%"class.gfx::VectorWStream" = type { %class.SkWStream, %"class.std::__1::vector"* }
%class.SkWStream = type { i32 (...)** }
%"struct.SkPngEncoder::Options" = type { i32, i32, %class.sk_sp.23 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [7 x i8] c"1.6.37\00", align 1
@_ZTVN3gfx13VectorWStreamE = external unnamed_addr constant { [7 x i8*] }, align 8

@_ZN3gfx8PNGCodec7CommentC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ = hidden unnamed_addr alias void (%"struct.gfx::PNGCodec::Comment"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"struct.gfx::PNGCodec::Comment"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN3gfx8PNGCodec7CommentC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_
@_ZN3gfx8PNGCodec7CommentD1Ev = hidden unnamed_addr alias void (%"struct.gfx::PNGCodec::Comment"*), void (%"struct.gfx::PNGCodec::Comment"*)* @_ZN3gfx8PNGCodec7CommentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx8PNGCodec6DecodeEPKhmNS0_11ColorFormatEPNSt3__16vectorIhNS4_9allocatorIhEEEEPiSA_(i8*, i64, i32, %"class.std::__1::vector"*, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.gfx::(anonymous namespace)::PngReadStructInfo", align 8
  %8 = alloca %"class.gfx::(anonymous namespace)::PngDecoderState", align 8
  %9 = bitcast %"class.gfx::(anonymous namespace)::PngReadStructInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngReadStructInfo", %"class.gfx::(anonymous namespace)::PngReadStructInfo"* %7, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngReadStructInfo", %"class.gfx::(anonymous namespace)::PngReadStructInfo"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #11
  %12 = icmp ult i64 %1, 8
  br i1 %12, label %55, label %13

13:                                               ; preds = %6
  %14 = call i32 @cr_png_sig_cmp(i8* %0, i64 0, i64 8) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %55

16:                                               ; preds = %13
  %17 = call noalias %struct.png_struct_def* @cr_png_create_read_struct(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* null, void (%struct.png_struct_def*, i8*)* null, void (%struct.png_struct_def*, i8*)* null) #11
  store %struct.png_struct_def* %17, %struct.png_struct_def** %10, align 8
  %18 = icmp eq %struct.png_struct_def* %17, null
  br i1 %18, label %55, label %19

19:                                               ; preds = %16
  %20 = call noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def* nonnull %17) #11
  store %struct.png_info_def* %20, %struct.png_info_def** %11, align 8
  %21 = icmp eq %struct.png_info_def* %20, null
  br i1 %21, label %55, label %22

22:                                               ; preds = %19
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  %24 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %23, void (%struct.__jmp_buf_tag*, i32)* nonnull @__longjmp_chk, i64 200) #11
  %25 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %24, i64 0, i64 0
  %26 = call i32 @_setjmp(%struct.__jmp_buf_tag* %25) #12
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %55

28:                                               ; preds = %22
  %29 = bitcast %"class.gfx::(anonymous namespace)::PngDecoderState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 48, i1 false)
  %30 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %8, i64 0, i32 0
  store i32 %2, i32* %30, align 8
  %31 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %8, i64 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %8, i64 0, i32 2
  store %class.SkBitmap* null, %class.SkBitmap** %32, align 8
  %33 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %8, i64 0, i32 3
  store i8 1, i8* %33, align 8
  %34 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %8, i64 0, i32 5
  store %"class.std::__1::vector"* %3, %"class.std::__1::vector"** %34, align 8
  %35 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %8, i64 0, i32 6
  %36 = bitcast i32* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 9, i1 false) #11
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  call void @cr_png_set_error_fn(%struct.png_struct_def* %37, i8* null, void (%struct.png_struct_def*, i8*)* nonnull @_ZN3gfx12_GLOBAL__N_120LogLibPNGDecodeErrorEP14png_struct_defPKc, void (%struct.png_struct_def*, i8*)* nonnull @_ZN3gfx12_GLOBAL__N_122LogLibPNGDecodeWarningEP14png_struct_defPKc) #11
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  call void @cr_png_set_progressive_read_fn(%struct.png_struct_def* %38, i8* nonnull %29, void (%struct.png_struct_def*, %struct.png_info_def*)* nonnull @_ZN3gfx12_GLOBAL__N_118DecodeInfoCallbackEP14png_struct_defP12png_info_def, void (%struct.png_struct_def*, i8*, i32, i32)* nonnull @_ZN3gfx12_GLOBAL__N_117DecodeRowCallbackEP14png_struct_defPhji, void (%struct.png_struct_def*, %struct.png_info_def*)* nonnull @_ZN3gfx12_GLOBAL__N_117DecodeEndCallbackEP14png_struct_defP12png_info_def) #11
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  %40 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  call void @cr_png_process_data(%struct.png_struct_def* %39, %struct.png_info_def* %40, i8* %0, i64 %1) #11
  %41 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %8, i64 0, i32 8
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %28
  %45 = bitcast %"class.std::__1::vector"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %48 = bitcast i8** %47 to i64*
  store i64 %46, i64* %48, align 8
  br label %53

49:                                               ; preds = %28
  %50 = load i32, i32* %35, align 8
  store i32 %50, i32* %4, align 4
  %51 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %8, i64 0, i32 7
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %5, align 4
  br label %53

53:                                               ; preds = %49, %44
  %54 = phi i1 [ true, %49 ], [ false, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #11
  br label %55

55:                                               ; preds = %19, %16, %13, %6, %22, %53
  %56 = phi i1 [ %54, %53 ], [ false, %19 ], [ false, %22 ], [ false, %6 ], [ false, %13 ], [ false, %16 ]
  call void @cr_png_destroy_read_struct(%struct.png_struct_def** nonnull %10, %struct.png_info_def** %11, %struct.png_info_def** null) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i1 %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #2

declare [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def*, void (%struct.__jmp_buf_tag*, i32)*, i64) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @__longjmp_chk(%struct.__jmp_buf_tag*, i32) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @cr_png_set_error_fn(%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_120LogLibPNGDecodeErrorEP14png_struct_defPKc(%struct.png_struct_def*, i8* nocapture readnone) #5 {
  %3 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %0, void (%struct.__jmp_buf_tag*, i32)* nonnull @__longjmp_chk, i64 200) #11
  %4 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %3, i64 0, i64 0
  tail call void @__longjmp_chk(%struct.__jmp_buf_tag* %4, i32 1) #13
  unreachable
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_122LogLibPNGDecodeWarningEP14png_struct_defPKc(%struct.png_struct_def* nocapture, i8* nocapture) #6 {
  ret void
}

declare void @cr_png_set_progressive_read_fn(%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_118DecodeInfoCallbackEP14png_struct_defP12png_info_def(%struct.png_struct_def*, %struct.png_info_def*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca double, align 8
  %11 = tail call i8* @cr_png_get_progressive_ptr(%struct.png_struct_def* %0) #11
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %3, align 4
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %4, align 4
  %14 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 -1431655766, i32* %5, align 4
  %15 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  store i32 -1431655766, i32* %6, align 4
  %16 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 -1431655766, i32* %7, align 4
  %17 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 -1431655766, i32* %8, align 4
  %18 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #11
  store i32 -1431655766, i32* %9, align 4
  %19 = call i32 @cr_png_get_IHDR(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32* nonnull %8, i32* nonnull %9, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6, i32* nonnull %7) #11
  %20 = load i32, i32* %8, align 4
  %21 = zext i32 %20 to i64
  %22 = load i32, i32* %9, align 4
  %23 = zext i32 %22 to i64
  %24 = mul nuw i64 %23, %21
  %25 = icmp ugt i64 %24, 536870911
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %0, void (%struct.__jmp_buf_tag*, i32)* nonnull @__longjmp_chk, i64 200) #11
  %28 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %27, i64 0, i64 0
  call void @__longjmp_chk(%struct.__jmp_buf_tag* %28, i32 1) #13
  unreachable

29:                                               ; preds = %2
  %30 = getelementptr inbounds i8, i8* %11, i64 32
  %31 = bitcast i8* %30 to i32*
  store i32 %20, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %11, i64 36
  %33 = bitcast i8* %32 to i32*
  store i32 %22, i32* %33, align 4
  %34 = load i32, i32* %4, align 4
  %35 = icmp eq i32 %34, 3
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = icmp eq i32 %34, 0
  %38 = load i32, i32* %3, align 4
  %39 = icmp slt i32 %38, 8
  %40 = and i1 %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %36, %29
  call void @cr_png_set_expand(%struct.png_struct_def* %0) #11
  %42 = load i32, i32* %4, align 4
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i32 [ %42, %41 ], [ %34, %36 ]
  %45 = and i32 %44, 4
  %46 = icmp ne i32 %45, 0
  %47 = call i32 @cr_png_get_valid(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 16) #11
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  call void @cr_png_set_expand(%struct.png_struct_def* %0) #11
  br label %50

50:                                               ; preds = %43, %49
  %51 = phi i1 [ true, %49 ], [ %46, %43 ]
  %52 = load i32, i32* %3, align 4
  %53 = icmp eq i32 %52, 16
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  call void @cr_png_set_strip_16(%struct.png_struct_def* %0) #11
  br label %55

55:                                               ; preds = %54, %50
  %56 = bitcast i8* %11 to i32*
  %57 = load i32, i32* %56, align 8
  br i1 %51, label %68, label %58

58:                                               ; preds = %55
  switch i32 %57, label %78 [
    i32 0, label %59
    i32 1, label %62
    i32 2, label %65
  ]

59:                                               ; preds = %58
  %60 = getelementptr inbounds i8, i8* %11, i64 4
  %61 = bitcast i8* %60 to i32*
  store i32 4, i32* %61, align 4
  call void @cr_png_set_add_alpha(%struct.png_struct_def* %0, i32 255, i32 1) #11
  br label %78

62:                                               ; preds = %58
  %63 = getelementptr inbounds i8, i8* %11, i64 4
  %64 = bitcast i8* %63 to i32*
  store i32 4, i32* %64, align 4
  call void @cr_png_set_bgr(%struct.png_struct_def* %0) #11
  call void @cr_png_set_add_alpha(%struct.png_struct_def* %0, i32 255, i32 1) #11
  br label %78

65:                                               ; preds = %58
  %66 = getelementptr inbounds i8, i8* %11, i64 4
  %67 = bitcast i8* %66 to i32*
  store i32 4, i32* %67, align 4
  call void @cr_png_set_add_alpha(%struct.png_struct_def* %0, i32 255, i32 1) #11
  br label %78

68:                                               ; preds = %55
  switch i32 %57, label %78 [
    i32 0, label %69
    i32 1, label %72
    i32 2, label %75
  ]

69:                                               ; preds = %68
  %70 = getelementptr inbounds i8, i8* %11, i64 4
  %71 = bitcast i8* %70 to i32*
  store i32 4, i32* %71, align 4
  br label %78

72:                                               ; preds = %68
  %73 = getelementptr inbounds i8, i8* %11, i64 4
  %74 = bitcast i8* %73 to i32*
  store i32 4, i32* %74, align 4
  call void @cr_png_set_bgr(%struct.png_struct_def* %0) #11
  br label %78

75:                                               ; preds = %68
  %76 = getelementptr inbounds i8, i8* %11, i64 4
  %77 = bitcast i8* %76 to i32*
  store i32 4, i32* %77, align 4
  br label %78

78:                                               ; preds = %69, %72, %75, %68, %59, %62, %65, %58
  %79 = load i32, i32* %4, align 4
  %80 = and i32 %79, -5
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  call void @cr_png_set_gray_to_rgb(%struct.png_struct_def* %0) #11
  br label %83

83:                                               ; preds = %78, %82
  %84 = bitcast double* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store double 0xFFFFFFFFFFFFFFFF, double* %10, align 8
  %85 = call i32 @cr_png_get_gAMA(%struct.png_struct_def* %0, %struct.png_info_def* %1, double* nonnull %10) #11
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %83
  %88 = load double, double* %10, align 8
  %89 = fcmp ole double %88, 0.000000e+00
  %90 = fcmp ogt double %88, 0x40D4F8B51EB851EC
  %91 = or i1 %89, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  store double 0x3FDD1745D1745D17, double* %10, align 8
  call void @cr_png_set_gAMA(%struct.png_struct_def* %0, %struct.png_info_def* %1, double 0x3FDD1745D1745D17) #11
  %93 = load double, double* %10, align 8
  br label %94

94:                                               ; preds = %83, %92, %87
  %95 = phi double [ %88, %87 ], [ %93, %92 ], [ 0x3FDD1745D1745D17, %83 ]
  call void @cr_png_set_gamma(%struct.png_struct_def* %0, double 2.200000e+00, double %95) #11
  %96 = load i32, i32* %56, align 8
  %97 = icmp eq i32 %96, 2
  br i1 %97, label %98, label %99

98:                                               ; preds = %94
  call void @cr_png_set_read_user_transform_fn(%struct.png_struct_def* %0, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* nonnull @_ZN3gfx12_GLOBAL__N_120ConvertRGBARowToSkiaEP14png_struct_defP19png_row_info_structPh) #11
  call void @cr_png_set_user_transform_info(%struct.png_struct_def* %0, i8* %11, i32 0, i32 0) #11
  br label %99

99:                                               ; preds = %98, %94
  %100 = load i32, i32* %5, align 4
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* %0) #11
  br label %104

104:                                              ; preds = %102, %99
  call void @cr_png_read_update_info(%struct.png_struct_def* %0, %struct.png_info_def* %1) #11
  %105 = getelementptr inbounds i8, i8* %11, i64 8
  %106 = bitcast i8* %105 to %class.SkBitmap**
  %107 = load %class.SkBitmap*, %class.SkBitmap** %106, align 8
  %108 = icmp eq %class.SkBitmap* %107, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %104
  %110 = load i32, i32* %31, align 8
  %111 = load i32, i32* %33, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %107, i32 %110, i32 %111, i1 zeroext false) #11
  br label %140

112:                                              ; preds = %104
  %113 = getelementptr inbounds i8, i8* %11, i64 24
  %114 = bitcast i8* %113 to %"class.std::__1::vector"**
  %115 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %114, align 8
  %116 = icmp eq %"class.std::__1::vector"* %115, null
  br i1 %116, label %140, label %117

117:                                              ; preds = %112
  %118 = load i32, i32* %31, align 8
  %119 = getelementptr inbounds i8, i8* %11, i64 4
  %120 = bitcast i8* %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = mul nsw i32 %121, %118
  %123 = load i32, i32* %33, align 4
  %124 = mul nsw i32 %122, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %115, i64 0, i32 0, i32 1
  %127 = bitcast i8** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector"* %115 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = sub i64 %128, %130
  %132 = icmp ult i64 %131, %125
  %133 = inttoptr i64 %130 to i8*
  br i1 %132, label %134, label %136

134:                                              ; preds = %117
  %135 = sub i64 %125, %131
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* nonnull %115, i64 %135) #11
  br label %140

136:                                              ; preds = %117
  %137 = icmp ugt i64 %131, %125
  br i1 %137, label %138, label %140

138:                                              ; preds = %136
  %139 = getelementptr inbounds i8, i8* %133, i64 %125
  store i8* %139, i8** %126, align 8
  br label %140

140:                                              ; preds = %138, %136, %134, %112, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_117DecodeRowCallbackEP14png_struct_defPhji(%struct.png_struct_def*, i8*, i32, i32) #0 {
  %5 = icmp eq i8* %1, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %4
  %7 = tail call i8* @cr_png_get_progressive_ptr(%struct.png_struct_def* %0) #11
  %8 = getelementptr inbounds i8, i8* %7, i64 36
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, %2
  br i1 %11, label %41, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to %class.SkBitmap**
  %15 = load %class.SkBitmap*, %class.SkBitmap** %14, align 8
  %16 = icmp eq %class.SkBitmap* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %15, i64 0, i32 1, i32 0
  br label %26

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %7, i64 24
  %21 = bitcast i8* %20 to %"class.std::__1::vector"**
  %22 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %21, align 8
  %23 = icmp eq %"class.std::__1::vector"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi i8** [ %25, %24 ], [ %18, %17 ]
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %19
  %30 = phi i8* [ null, %19 ], [ %28, %26 ]
  %31 = getelementptr inbounds i8, i8* %7, i64 32
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds i8, i8* %7, i64 4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = mul i32 %33, %2
  %38 = mul i32 %37, %36
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %30, i64 %39
  tail call void @cr_png_progressive_combine_row(%struct.png_struct_def* %0, i8* %40, i8* nonnull %1) #11
  br label %41

41:                                               ; preds = %29, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_117DecodeEndCallbackEP14png_struct_defP12png_info_def(%struct.png_struct_def*, %struct.png_info_def* nocapture readnone) #0 {
  %3 = tail call i8* @cr_png_get_progressive_ptr(%struct.png_struct_def* %0) #11
  %4 = getelementptr inbounds i8, i8* %3, i64 40
  store i8 1, i8* %4, align 8
  ret void
}

declare void @cr_png_process_data(%struct.png_struct_def*, %struct.png_info_def*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx8PNGCodec6DecodeEPKhmP8SkBitmap(i8*, i64, %class.SkBitmap*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::(anonymous namespace)::PngReadStructInfo", align 8
  %5 = alloca %"class.gfx::(anonymous namespace)::PngDecoderState", align 8
  %6 = bitcast %"class.gfx::(anonymous namespace)::PngReadStructInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngReadStructInfo", %"class.gfx::(anonymous namespace)::PngReadStructInfo"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngReadStructInfo", %"class.gfx::(anonymous namespace)::PngReadStructInfo"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #11
  %9 = icmp ult i64 %1, 8
  br i1 %9, label %46, label %10

10:                                               ; preds = %3
  %11 = call i32 @cr_png_sig_cmp(i8* %0, i64 0, i64 8) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %46

13:                                               ; preds = %10
  %14 = call noalias %struct.png_struct_def* @cr_png_create_read_struct(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* null, void (%struct.png_struct_def*, i8*)* null, void (%struct.png_struct_def*, i8*)* null) #11
  store %struct.png_struct_def* %14, %struct.png_struct_def** %7, align 8
  %15 = icmp eq %struct.png_struct_def* %14, null
  br i1 %15, label %46, label %16

16:                                               ; preds = %13
  %17 = call noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def* nonnull %14) #11
  store %struct.png_info_def* %17, %struct.png_info_def** %8, align 8
  %18 = icmp eq %struct.png_info_def* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %16
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %21 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %20, void (%struct.__jmp_buf_tag*, i32)* nonnull @__longjmp_chk, i64 200) #11
  %22 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %21, i64 0, i64 0
  %23 = call i32 @_setjmp(%struct.__jmp_buf_tag* %22) #12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %46

25:                                               ; preds = %19
  %26 = bitcast %"class.gfx::(anonymous namespace)::PngDecoderState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 48, i1 false)
  %27 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %5, i64 0, i32 0
  store i32 2, i32* %27, align 8
  %28 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %5, i64 0, i32 1
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %5, i64 0, i32 2
  store %class.SkBitmap* %2, %class.SkBitmap** %29, align 8
  %30 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %5, i64 0, i32 3
  store i8 1, i8* %30, align 8
  %31 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %5, i64 0, i32 5
  %32 = bitcast %"class.std::__1::vector"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 17, i1 false) #11
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @cr_png_set_progressive_read_fn(%struct.png_struct_def* %33, i8* nonnull %26, void (%struct.png_struct_def*, %struct.png_info_def*)* nonnull @_ZN3gfx12_GLOBAL__N_118DecodeInfoCallbackEP14png_struct_defP12png_info_def, void (%struct.png_struct_def*, i8*, i32, i32)* nonnull @_ZN3gfx12_GLOBAL__N_117DecodeRowCallbackEP14png_struct_defPhji, void (%struct.png_struct_def*, %struct.png_info_def*)* nonnull @_ZN3gfx12_GLOBAL__N_117DecodeEndCallbackEP14png_struct_defP12png_info_def) #11
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %35 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  call void @cr_png_process_data(%struct.png_struct_def* %34, %struct.png_info_def* %35, i8* %0, i64 %1) #11
  %36 = getelementptr inbounds %"class.gfx::(anonymous namespace)::PngDecoderState", %"class.gfx::(anonymous namespace)::PngDecoderState"* %5, i64 0, i32 8
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %25
  %40 = load i8, i8* %30, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  %42 = select i1 %41, i32 2, i32 1
  %43 = call zeroext i1 @_ZN8SkBitmap12setAlphaTypeE11SkAlphaType(%class.SkBitmap* %2, i32 %42) #11
  br label %44

44:                                               ; preds = %25, %39
  %45 = phi i1 [ true, %39 ], [ false, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %26) #11
  br label %46

46:                                               ; preds = %16, %13, %10, %3, %19, %44
  %47 = phi i1 [ %45, %44 ], [ false, %16 ], [ false, %19 ], [ false, %3 ], [ false, %10 ], [ false, %13 ]
  call void @cr_png_destroy_read_struct(%struct.png_struct_def** nonnull %7, %struct.png_info_def** %8, %struct.png_info_def** null) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i1 %47
}

declare zeroext i1 @_ZN8SkBitmap12setAlphaTypeE11SkAlphaType(%class.SkBitmap*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx8PNGCodec6EncodeEPKhNS0_11ColorFormatERKNS_4SizeEibRKNSt3__16vectorINS0_7CommentENS7_9allocatorIS9_EEEEPNS8_IhNSA_IhEEEE(i8*, i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i1 zeroext, %"class.std::__1::vector.9"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.SkPixmap, align 8
  %9 = icmp eq i32 %1, 0
  %10 = select i1 %9, i64 4, i64 6
  %11 = icmp eq i32 %1, 2
  %12 = select i1 %11, i64 8589934592, i64 12884901888
  %13 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = shl nuw i64 %17, 32
  %19 = zext i32 %14 to i64
  %20 = or i64 %18, %19
  %21 = bitcast %class.SkPixmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #11
  %22 = sext i32 %3 to i64
  %23 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 0
  store i8* %0, i8** %23, align 8
  %24 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %25, align 8
  %26 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast i32* %26 to i64*
  %28 = or i64 %12, %10
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 1
  %30 = bitcast %struct.SkISize* %29 to i64*
  store i64 %20, i64* %30, align 8
  %31 = call fastcc zeroext i1 @_ZN3gfxL14EncodeSkPixmapERK8SkPixmapbRKNSt3__16vectorINS_8PNGCodec7CommentENS3_9allocatorIS6_EEEEPNS4_IhNS7_IhEEEEi(%class.SkPixmap* nonnull dereferenceable(40) %8, i1 zeroext %4, %"class.std::__1::vector.9"* dereferenceable(24) %5, %"class.std::__1::vector"* %6, i32 6)
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %33 = icmp eq %class.SkColorSpace* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %7
  %35 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = bitcast %class.SkColorSpace* %32 to i8*
  call void @_ZdlPv(i8* %39) #14
  br label %40

40:                                               ; preds = %38, %34, %7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #11
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3gfxL14EncodeSkPixmapERK8SkPixmapbRKNSt3__16vectorINS_8PNGCodec7CommentENS3_9allocatorIS6_EEEEPNS4_IhNS7_IhEEEEi(%class.SkPixmap* dereferenceable(40), i1 zeroext, %"class.std::__1::vector.9"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*, i32) unnamed_addr #0 {
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %class.SkPixmap, align 8
  %9 = alloca %struct.SkImageInfo, align 8
  br i1 %1, label %10, label %101

10:                                               ; preds = %5
  %11 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 1
  %15 = bitcast %struct.SkISize* %14 to i64*
  %16 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load i64, i64* %15, align 8, !noalias !3
  %18 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8, !noalias !6
  %20 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8, !noalias !9
  %22 = icmp eq %class.SkColorSpace* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !9
  br label %26

26:                                               ; preds = %10, %23
  %27 = ptrtoint %class.SkColorSpace* %21 to i64
  %28 = zext i32 %19 to i64
  %29 = or i64 %28, 4294967296
  %30 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %27, i64* %30, align 8, !alias.scope !12
  %31 = bitcast i32* %13 to i64*
  store i64 %29, i64* %31, align 8, !alias.scope !12
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %33 = bitcast %struct.SkISize* %32 to i64*
  store i64 %17, i64* %33, align 8, !alias.scope !12
  %34 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #11
  %35 = shl i64 %17, 32
  %36 = ashr exact i64 %35, 32
  %37 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0
  %38 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %37) #11
  %39 = sext i32 %38 to i64
  %40 = mul nsw i64 %36, %39
  %41 = icmp ult i64 %40, 2147483648
  %42 = select i1 %41, i64 %40, i64 0
  %43 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %7, %struct.SkImageInfo* nonnull dereferenceable(24) %6, i64 %42) #11
  br i1 %43, label %44, label %90

44:                                               ; preds = %26
  %45 = bitcast %class.SkPixmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 40, i1 false) #11
  %46 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* nonnull %7, %class.SkPixmap* nonnull %8) #11
  %47 = bitcast %struct.SkImageInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = load i64, i64* %33, align 8, !noalias !15
  %49 = load i32, i32* %13, align 8, !noalias !18
  %50 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8, !noalias !21
  %51 = icmp eq %class.SkColorSpace* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic, !noalias !21
  br label %55

55:                                               ; preds = %44, %52
  %56 = ptrtoint %class.SkColorSpace* %50 to i64
  %57 = zext i32 %49 to i64
  %58 = or i64 %57, 12884901888
  %59 = bitcast %struct.SkImageInfo* %9 to i64*
  store i64 %56, i64* %59, align 8, !alias.scope !24
  %60 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 1
  %61 = bitcast i32* %60 to i64*
  store i64 %58, i64* %61, align 8, !alias.scope !24
  %62 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 1
  %63 = bitcast %struct.SkISize* %62 to i64*
  store i64 %48, i64* %63, align 8, !alias.scope !24
  %64 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = call zeroext i1 @_ZNK8SkPixmap10readPixelsERK11SkImageInfoPvmii(%class.SkPixmap* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %9, i8* %65, i64 %67, i32 0, i32 0) #11
  %69 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %70 = load %class.SkColorSpace*, %class.SkColorSpace** %69, align 8
  %71 = icmp eq %class.SkColorSpace* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %55
  %73 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = bitcast %class.SkColorSpace* %70 to i8*
  call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %55, %72, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  %79 = call fastcc zeroext i1 @_ZN3gfxL14EncodeSkPixmapERK8SkPixmapRKNSt3__16vectorINS_8PNGCodec7CommentENS3_9allocatorIS6_EEEEPNS4_IhNS7_IhEEEEi(%class.SkPixmap* nonnull dereferenceable(40) %8, %"class.std::__1::vector.9"* dereferenceable(24) %2, %"class.std::__1::vector"* %3, i32 %4)
  %80 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %81 = load %class.SkColorSpace*, %class.SkColorSpace** %80, align 8
  %82 = icmp eq %class.SkColorSpace* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = bitcast %class.SkColorSpace* %81 to i8*
  call void @_ZdlPv(i8* %88) #14
  br label %89

89:                                               ; preds = %78, %83, %87
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #11
  br label %90

90:                                               ; preds = %26, %89
  %91 = phi i1 [ %79, %89 ], [ false, %26 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %34) #11
  %92 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %93 = icmp eq %class.SkColorSpace* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = bitcast %class.SkColorSpace* %92 to i8*
  call void @_ZdlPv(i8* %99) #14
  br label %100

100:                                              ; preds = %90, %94, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  br label %103

101:                                              ; preds = %5
  %102 = tail call fastcc zeroext i1 @_ZN3gfxL14EncodeSkPixmapERK8SkPixmapRKNSt3__16vectorINS_8PNGCodec7CommentENS3_9allocatorIS6_EEEEPNS4_IhNS7_IhEEEEi(%class.SkPixmap* dereferenceable(40) %0, %"class.std::__1::vector.9"* dereferenceable(24) %2, %"class.std::__1::vector"* %3, i32 %4)
  br label %103

103:                                              ; preds = %101, %100
  %104 = phi i1 [ %91, %100 ], [ %102, %101 ]
  ret i1 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx8PNGCodec18EncodeBGRASkBitmapERK8SkBitmapbPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56), i1 zeroext, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPixmap, align 8
  %5 = alloca %"class.std::__1::vector.9", align 8
  %6 = bitcast %class.SkPixmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 40, i1 false) #11
  %7 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %0, %class.SkPixmap* nonnull %4) #11
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::vector.9"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = call fastcc zeroext i1 @_ZN3gfxL14EncodeSkPixmapERK8SkPixmapbRKNSt3__16vectorINS_8PNGCodec7CommentENS3_9allocatorIS6_EEEEPNS4_IhNS7_IhEEEEi(%class.SkPixmap* nonnull dereferenceable(40) %4, i1 zeroext %1, %"class.std::__1::vector.9"* nonnull dereferenceable(24) %5, %"class.std::__1::vector"* %2, i32 6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi i1 [ %10, %8 ], [ false, %3 ]
  %13 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %11, %16, %20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx8PNGCodec16EncodeA8SkBitmapERK8SkBitmapPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPixmap, align 8
  %4 = alloca %"class.std::__1::vector.9", align 8
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %6 = bitcast %struct.SkISize* %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !27
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8, !noalias !30
  %10 = icmp eq %class.SkColorSpace* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic, !noalias !30
  %14 = atomicrmw add i32* %12, i32 1 monotonic, !noalias !35
  %15 = atomicrmw add i32* %12, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = bitcast %class.SkColorSpace* %9 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %2, %11, %17
  %20 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #11
  %21 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2
  %22 = bitcast %struct.SkImageInfo* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = tail call i8* @_ZNK8SkBitmap7getAddrEii(%class.SkBitmap* %0, i32 0, i32 0) #11
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 0
  store i8* %23, i8** %26, align 8
  %27 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  br i1 %10, label %32, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %19, %29
  store %class.SkColorSpace* %9, %class.SkColorSpace** %28, align 8
  %33 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 1
  %34 = bitcast i32* %33 to i64*
  store i64 4294967307, i64* %34, align 8
  %35 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 1
  %36 = bitcast %struct.SkISize* %35 to i64*
  store i64 %7, i64* %36, align 8
  %37 = bitcast %"class.std::__1::vector.9"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #11
  %38 = call fastcc zeroext i1 @_ZN3gfxL14EncodeSkPixmapERK8SkPixmapRKNSt3__16vectorINS_8PNGCodec7CommentENS3_9allocatorIS6_EEEEPNS4_IhNS7_IhEEEEi(%class.SkPixmap* nonnull dereferenceable(40) %3, %"class.std::__1::vector.9"* nonnull dereferenceable(24) %4, %"class.std::__1::vector"* %1, i32 6)
  %39 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8
  %40 = bitcast %class.SkColorSpace* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  %41 = icmp eq %class.SkColorSpace* %39, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @_ZdlPv(i8* %40) #14
  br label %47

47:                                               ; preds = %32, %42, %46
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #11
  br i1 %10, label %54, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = bitcast %class.SkColorSpace* %9 to i8*
  call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %47, %48, %52
  ret i1 %38
}

declare i8* @_ZNK8SkBitmap7getAddrEii(%class.SkBitmap*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3gfxL14EncodeSkPixmapERK8SkPixmapRKNSt3__16vectorINS_8PNGCodec7CommentENS3_9allocatorIS6_EEEEPNS4_IhNS7_IhEEEEi(%class.SkPixmap* dereferenceable(40), %"class.std::__1::vector.9"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*, i32) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.25", align 8
  %6 = alloca %"class.std::__1::vector.32", align 8
  %7 = alloca %class.sk_sp.23, align 8
  %8 = alloca %"class.gfx::VectorWStream", align 8
  %9 = alloca %"struct.SkPngEncoder::Options", align 8
  %10 = bitcast %"class.std::__1::vector"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"class.gfx::VectorWStream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.gfx::VectorWStream", %"class.gfx::VectorWStream"* %8, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.gfx::VectorWStream", %"class.gfx::VectorWStream"* %8, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx13VectorWStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  store %"class.std::__1::vector"* %2, %"class.std::__1::vector"** %16, align 8
  %17 = bitcast %"struct.SkPngEncoder::Options"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %9, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %9, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %9, i64 0, i32 2, i32 0
  store i32 248, i32* %18, align 8
  store i32 6, i32* %19, align 4
  store %class.SkDataTable* null, %class.SkDataTable** %20, align 8
  %21 = bitcast %"class.std::__1::vector.25"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %5, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %5, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #11
  %25 = bitcast %"class.std::__1::vector.32"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %6, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %6, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #11
  %29 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 0
  %30 = load %"struct.gfx::PNGCodec::Comment"*, %"struct.gfx::PNGCodec::Comment"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 1
  %32 = load %"struct.gfx::PNGCodec::Comment"*, %"struct.gfx::PNGCodec::Comment"** %31, align 8
  %33 = icmp eq %"struct.gfx::PNGCodec::Comment"* %30, %32
  %34 = bitcast i8*** %23 to i64*
  br i1 %33, label %48, label %35

35:                                               ; preds = %4
  %36 = bitcast %"class.std::__1::vector.25"* %5 to i64*
  %37 = bitcast i8*** %24 to i64*
  %38 = bitcast i64** %27 to i64*
  %39 = bitcast %"class.std::__1::vector.32"* %6 to i64*
  %40 = bitcast i64** %28 to i64*
  br label %100

41:                                               ; preds = %364
  %42 = load i8**, i8*** %22, align 8
  %43 = load i64*, i64** %26, align 8
  %44 = load i64, i64* %34, align 8
  %45 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %9, i64 0, i32 2, i32 0
  %46 = load %class.SkDataTable*, %class.SkDataTable** %45, align 8
  %47 = bitcast %class.SkDataTable* %46 to %class.SkRefCntBase*
  br label %48

48:                                               ; preds = %41, %4
  %49 = phi %class.SkRefCntBase* [ %47, %41 ], [ null, %4 ]
  %50 = phi %class.SkDataTable* [ %46, %41 ], [ null, %4 ]
  %51 = phi i64 [ %44, %41 ], [ 0, %4 ]
  %52 = phi i64* [ %43, %41 ], [ null, %4 ]
  %53 = phi i8** [ %42, %41 ], [ null, %4 ]
  %54 = bitcast %class.sk_sp.23* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %55 = ptrtoint i8** %53 to i64
  %56 = sub i64 %51, %55
  %57 = lshr exact i64 %56, 3
  %58 = trunc i64 %57 to i32
  call void @_ZN11SkDataTable14MakeCopyArraysEPKPKvPKmi(%class.sk_sp.23* nonnull sret %7, i8** %53, i64* %52, i32 %58) #11
  %59 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %9, i64 0, i32 2
  %60 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %7, i64 0, i32 0
  %61 = bitcast %class.sk_sp.23* %7 to i64*
  %62 = load i64, i64* %61, align 8
  store %class.SkDataTable* null, %class.SkDataTable** %60, align 8
  %63 = bitcast %class.sk_sp.23* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = icmp eq %class.SkDataTable* %50, null
  br i1 %64, label %87, label %65

65:                                               ; preds = %48
  %66 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %50, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %74

69:                                               ; preds = %65
  %70 = bitcast %class.SkDataTable* %50 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  call void %73(%class.SkRefCntBase* nonnull %49) #11
  br label %74

74:                                               ; preds = %69, %65
  %75 = load %class.SkDataTable*, %class.SkDataTable** %60, align 8
  %76 = icmp eq %class.SkDataTable* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = bitcast %class.SkDataTable* %75 to %class.SkRefCntBase*
  %83 = bitcast %class.SkDataTable* %75 to void (%class.SkRefCntBase*)***
  %84 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, i64 2
  %86 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, align 8
  call void %86(%class.SkRefCntBase* nonnull %82) #11
  br label %87

87:                                               ; preds = %48, %81, %77, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %88 = load i64*, i64** %26, align 8
  %89 = icmp eq i64* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = ptrtoint i64* %88 to i64
  %92 = bitcast i64** %27 to i64*
  store i64 %91, i64* %92, align 8
  %93 = bitcast i64* %88 to i8*
  call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %90, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  %95 = load i8**, i8*** %22, align 8
  %96 = icmp eq i8** %95, null
  br i1 %96, label %367, label %97

97:                                               ; preds = %94
  %98 = ptrtoint i8** %95 to i64
  store i64 %98, i64* %34, align 8
  %99 = bitcast i8** %95 to i8*
  call void @_ZdlPv(i8* %99) #14
  br label %367

100:                                              ; preds = %364, %35
  %101 = phi %"struct.gfx::PNGCodec::Comment"* [ %30, %35 ], [ %365, %364 ]
  %102 = bitcast %"struct.gfx::PNGCodec::Comment"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.gfx::PNGCodec::Comment", %"struct.gfx::PNGCodec::Comment"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  br label %111

109:                                              ; preds = %100
  %110 = bitcast %"struct.gfx::PNGCodec::Comment"* %101 to i8*
  br label %111

111:                                              ; preds = %109, %106
  %112 = phi i8* [ %108, %106 ], [ %110, %109 ]
  %113 = ptrtoint i8* %112 to i64
  %114 = load i8**, i8*** %23, align 8
  %115 = load i8**, i8*** %24, align 8
  %116 = icmp ult i8** %114, %115
  %117 = ptrtoint i8** %115 to i64
  br i1 %116, label %118, label %122

118:                                              ; preds = %111
  %119 = bitcast i8** %114 to i64*
  store i64 %113, i64* %119, align 8
  %120 = getelementptr inbounds i8*, i8** %114, i64 1
  %121 = ptrtoint i8** %120 to i64
  store i64 %121, i64* %34, align 8
  br label %166

122:                                              ; preds = %111
  %123 = ptrtoint i8** %114 to i64
  %124 = load i64, i64* %36, align 8
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 3
  %127 = add nsw i64 %126, 1
  %128 = icmp ugt i64 %127, 2305843009213693951
  br i1 %128, label %129, label %131

129:                                              ; preds = %122
  %130 = bitcast %"class.std::__1::vector.25"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %130) #13
  unreachable

131:                                              ; preds = %122
  %132 = sub i64 %117, %124
  %133 = ashr exact i64 %132, 3
  %134 = icmp ult i64 %133, 1152921504606846975
  br i1 %134, label %135, label %143

135:                                              ; preds = %131
  %136 = ashr exact i64 %132, 2
  %137 = icmp ult i64 %136, %127
  %138 = select i1 %137, i64 %127, i64 %136
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %135
  %141 = icmp ugt i64 %138, 2305843009213693951
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  tail call void @abort() #13
  unreachable

143:                                              ; preds = %140, %131
  %144 = phi i64 [ %138, %140 ], [ 2305843009213693951, %131 ]
  %145 = shl i64 %144, 3
  %146 = tail call i8* @_Znwm(i64 %145) #14
  %147 = bitcast i8* %146 to i8**
  br label %148

148:                                              ; preds = %143, %135
  %149 = phi i64 [ %144, %143 ], [ 0, %135 ]
  %150 = phi i8* [ %146, %143 ], [ null, %135 ]
  %151 = phi i8** [ %147, %143 ], [ null, %135 ]
  %152 = getelementptr inbounds i8*, i8** %151, i64 %126
  %153 = getelementptr inbounds i8*, i8** %151, i64 %149
  %154 = ptrtoint i8** %153 to i64
  %155 = bitcast i8** %152 to i64*
  store i64 %113, i64* %155, align 8
  %156 = getelementptr inbounds i8*, i8** %152, i64 1
  %157 = ptrtoint i8** %156 to i64
  %158 = ptrtoint i8** %151 to i64
  %159 = icmp sgt i64 %125, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %148
  %161 = inttoptr i64 %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %161, i64 %125, i1 false) #11
  br label %162

162:                                              ; preds = %160, %148
  store i64 %158, i64* %36, align 8
  store i64 %157, i64* %34, align 8
  store i64 %154, i64* %37, align 8
  %163 = icmp eq i64 %124, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %124 to i8*
  tail call void @_ZdlPv(i8* %165) #14
  br label %166

166:                                              ; preds = %164, %162, %118
  %167 = phi i64 [ %121, %118 ], [ %157, %162 ], [ %157, %164 ]
  %168 = phi i8** [ %120, %118 ], [ %156, %162 ], [ %156, %164 ]
  %169 = getelementptr inbounds %"struct.gfx::PNGCodec::Comment", %"struct.gfx::PNGCodec::Comment"* %101, i64 0, i32 1
  %170 = bitcast %"class.std::__1::basic_string"* %169 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  br label %179

177:                                              ; preds = %166
  %178 = bitcast %"class.std::__1::basic_string"* %169 to i8*
  br label %179

179:                                              ; preds = %177, %174
  %180 = phi i8* [ %176, %174 ], [ %178, %177 ]
  %181 = ptrtoint i8* %180 to i64
  %182 = load i8**, i8*** %24, align 8
  %183 = icmp ult i8** %168, %182
  %184 = ptrtoint i8** %182 to i64
  br i1 %183, label %185, label %189

185:                                              ; preds = %179
  %186 = bitcast i8** %168 to i64*
  store i64 %181, i64* %186, align 8
  %187 = getelementptr inbounds i8*, i8** %168, i64 1
  %188 = ptrtoint i8** %187 to i64
  store i64 %188, i64* %34, align 8
  br label %237

189:                                              ; preds = %179
  %190 = ptrtoint i8** %168 to i64
  %191 = load i64, i64* %36, align 8
  %192 = sub i64 %190, %191
  %193 = ashr exact i64 %192, 3
  %194 = add nsw i64 %193, 1
  %195 = icmp ugt i64 %194, 2305843009213693951
  br i1 %195, label %196, label %198

196:                                              ; preds = %189
  %197 = bitcast %"class.std::__1::vector.25"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %197) #13
  unreachable

198:                                              ; preds = %189
  %199 = sub i64 %184, %191
  %200 = ashr exact i64 %199, 3
  %201 = icmp ult i64 %200, 1152921504606846975
  br i1 %201, label %202, label %210

202:                                              ; preds = %198
  %203 = ashr exact i64 %199, 2
  %204 = icmp ult i64 %203, %194
  %205 = select i1 %204, i64 %194, i64 %203
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %215, label %207

207:                                              ; preds = %202
  %208 = icmp ugt i64 %205, 2305843009213693951
  br i1 %208, label %209, label %210

209:                                              ; preds = %207
  tail call void @abort() #13
  unreachable

210:                                              ; preds = %207, %198
  %211 = phi i64 [ %205, %207 ], [ 2305843009213693951, %198 ]
  %212 = shl i64 %211, 3
  %213 = tail call i8* @_Znwm(i64 %212) #14
  %214 = bitcast i8* %213 to i8**
  br label %215

215:                                              ; preds = %210, %202
  %216 = phi i64 [ %211, %210 ], [ 0, %202 ]
  %217 = phi i8** [ %214, %210 ], [ null, %202 ]
  %218 = getelementptr inbounds i8*, i8** %217, i64 %193
  %219 = getelementptr inbounds i8*, i8** %217, i64 %216
  %220 = ptrtoint i8** %219 to i64
  %221 = bitcast i8** %218 to i64*
  store i64 %181, i64* %221, align 8
  %222 = getelementptr inbounds i8*, i8** %218, i64 1
  %223 = ptrtoint i8** %222 to i64
  %224 = sub i64 %167, %191
  %225 = ashr exact i64 %224, 3
  %226 = sub nsw i64 0, %225
  %227 = getelementptr inbounds i8*, i8** %218, i64 %226
  %228 = ptrtoint i8** %227 to i64
  %229 = icmp sgt i64 %224, 0
  br i1 %229, label %230, label %233

230:                                              ; preds = %215
  %231 = bitcast i8** %227 to i8*
  %232 = inttoptr i64 %191 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %231, i8* align 8 %232, i64 %224, i1 false) #11
  br label %233

233:                                              ; preds = %230, %215
  store i64 %228, i64* %36, align 8
  store i64 %223, i64* %34, align 8
  store i64 %220, i64* %37, align 8
  %234 = icmp eq i64 %191, 0
  br i1 %234, label %237, label %235

235:                                              ; preds = %233
  %236 = inttoptr i64 %191 to i8*
  tail call void @_ZdlPv(i8* %236) #14
  br label %237

237:                                              ; preds = %235, %233, %185
  %238 = load i8, i8* %103, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %237
  %241 = getelementptr inbounds %"struct.gfx::PNGCodec::Comment", %"struct.gfx::PNGCodec::Comment"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %242 = load i64, i64* %241, align 8
  br label %245

243:                                              ; preds = %237
  %244 = zext i8 %238 to i64
  br label %245

245:                                              ; preds = %243, %240
  %246 = phi i64 [ %242, %240 ], [ %244, %243 ]
  %247 = add i64 %246, 1
  %248 = load i64*, i64** %27, align 8
  %249 = load i64*, i64** %28, align 8
  %250 = icmp ult i64* %248, %249
  %251 = ptrtoint i64* %249 to i64
  br i1 %250, label %252, label %255

252:                                              ; preds = %245
  store i64 %247, i64* %248, align 8
  %253 = getelementptr inbounds i64, i64* %248, i64 1
  %254 = ptrtoint i64* %253 to i64
  store i64 %254, i64* %38, align 8
  br label %298

255:                                              ; preds = %245
  %256 = ptrtoint i64* %248 to i64
  %257 = load i64, i64* %39, align 8
  %258 = sub i64 %256, %257
  %259 = ashr exact i64 %258, 3
  %260 = add nsw i64 %259, 1
  %261 = icmp ugt i64 %260, 2305843009213693951
  br i1 %261, label %262, label %264

262:                                              ; preds = %255
  %263 = bitcast %"class.std::__1::vector.32"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %263) #13
  unreachable

264:                                              ; preds = %255
  %265 = sub i64 %251, %257
  %266 = ashr exact i64 %265, 3
  %267 = icmp ult i64 %266, 1152921504606846975
  br i1 %267, label %268, label %276

268:                                              ; preds = %264
  %269 = ashr exact i64 %265, 2
  %270 = icmp ult i64 %269, %260
  %271 = select i1 %270, i64 %260, i64 %269
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %281, label %273

273:                                              ; preds = %268
  %274 = icmp ugt i64 %271, 2305843009213693951
  br i1 %274, label %275, label %276

275:                                              ; preds = %273
  tail call void @abort() #13
  unreachable

276:                                              ; preds = %273, %264
  %277 = phi i64 [ %271, %273 ], [ 2305843009213693951, %264 ]
  %278 = shl i64 %277, 3
  %279 = tail call i8* @_Znwm(i64 %278) #14
  %280 = bitcast i8* %279 to i64*
  br label %281

281:                                              ; preds = %276, %268
  %282 = phi i64 [ %277, %276 ], [ 0, %268 ]
  %283 = phi i8* [ %279, %276 ], [ null, %268 ]
  %284 = phi i64* [ %280, %276 ], [ null, %268 ]
  %285 = getelementptr inbounds i64, i64* %284, i64 %259
  %286 = getelementptr inbounds i64, i64* %284, i64 %282
  %287 = ptrtoint i64* %286 to i64
  store i64 %247, i64* %285, align 8
  %288 = getelementptr inbounds i64, i64* %285, i64 1
  %289 = ptrtoint i64* %288 to i64
  %290 = ptrtoint i64* %284 to i64
  %291 = icmp sgt i64 %258, 0
  br i1 %291, label %292, label %294

292:                                              ; preds = %281
  %293 = inttoptr i64 %257 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %283, i8* align 8 %293, i64 %258, i1 false) #11
  br label %294

294:                                              ; preds = %292, %281
  store i64 %290, i64* %39, align 8
  store i64 %289, i64* %38, align 8
  store i64 %287, i64* %40, align 8
  %295 = icmp eq i64 %257, 0
  br i1 %295, label %298, label %296

296:                                              ; preds = %294
  %297 = inttoptr i64 %257 to i8*
  tail call void @_ZdlPv(i8* %297) #14
  br label %298

298:                                              ; preds = %296, %294, %252
  %299 = phi i64 [ %254, %252 ], [ %289, %294 ], [ %289, %296 ]
  %300 = phi i64* [ %253, %252 ], [ %288, %294 ], [ %288, %296 ]
  %301 = load i8, i8* %171, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %306

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"struct.gfx::PNGCodec::Comment", %"struct.gfx::PNGCodec::Comment"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %305 = load i64, i64* %304, align 8
  br label %308

306:                                              ; preds = %298
  %307 = zext i8 %301 to i64
  br label %308

308:                                              ; preds = %306, %303
  %309 = phi i64 [ %305, %303 ], [ %307, %306 ]
  %310 = add i64 %309, 1
  %311 = load i64*, i64** %28, align 8
  %312 = icmp ult i64* %300, %311
  %313 = ptrtoint i64* %311 to i64
  br i1 %312, label %314, label %317

314:                                              ; preds = %308
  store i64 %310, i64* %300, align 8
  %315 = getelementptr inbounds i64, i64* %300, i64 1
  %316 = ptrtoint i64* %315 to i64
  store i64 %316, i64* %38, align 8
  br label %364

317:                                              ; preds = %308
  %318 = ptrtoint i64* %300 to i64
  %319 = load i64, i64* %39, align 8
  %320 = sub i64 %318, %319
  %321 = ashr exact i64 %320, 3
  %322 = add nsw i64 %321, 1
  %323 = icmp ugt i64 %322, 2305843009213693951
  br i1 %323, label %324, label %326

324:                                              ; preds = %317
  %325 = bitcast %"class.std::__1::vector.32"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %325) #13
  unreachable

326:                                              ; preds = %317
  %327 = sub i64 %313, %319
  %328 = ashr exact i64 %327, 3
  %329 = icmp ult i64 %328, 1152921504606846975
  br i1 %329, label %330, label %338

330:                                              ; preds = %326
  %331 = ashr exact i64 %327, 2
  %332 = icmp ult i64 %331, %322
  %333 = select i1 %332, i64 %322, i64 %331
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %343, label %335

335:                                              ; preds = %330
  %336 = icmp ugt i64 %333, 2305843009213693951
  br i1 %336, label %337, label %338

337:                                              ; preds = %335
  tail call void @abort() #13
  unreachable

338:                                              ; preds = %335, %326
  %339 = phi i64 [ %333, %335 ], [ 2305843009213693951, %326 ]
  %340 = shl i64 %339, 3
  %341 = tail call i8* @_Znwm(i64 %340) #14
  %342 = bitcast i8* %341 to i64*
  br label %343

343:                                              ; preds = %338, %330
  %344 = phi i64 [ %339, %338 ], [ 0, %330 ]
  %345 = phi i64* [ %342, %338 ], [ null, %330 ]
  %346 = getelementptr inbounds i64, i64* %345, i64 %321
  %347 = getelementptr inbounds i64, i64* %345, i64 %344
  %348 = ptrtoint i64* %347 to i64
  store i64 %310, i64* %346, align 8
  %349 = getelementptr inbounds i64, i64* %346, i64 1
  %350 = ptrtoint i64* %349 to i64
  %351 = sub i64 %299, %319
  %352 = ashr exact i64 %351, 3
  %353 = sub nsw i64 0, %352
  %354 = getelementptr inbounds i64, i64* %346, i64 %353
  %355 = ptrtoint i64* %354 to i64
  %356 = icmp sgt i64 %351, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %343
  %358 = bitcast i64* %354 to i8*
  %359 = inttoptr i64 %319 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %358, i8* align 8 %359, i64 %351, i1 false) #11
  br label %360

360:                                              ; preds = %357, %343
  store i64 %355, i64* %39, align 8
  store i64 %350, i64* %38, align 8
  store i64 %348, i64* %40, align 8
  %361 = icmp eq i64 %319, 0
  br i1 %361, label %364, label %362

362:                                              ; preds = %360
  %363 = inttoptr i64 %319 to i8*
  tail call void @_ZdlPv(i8* %363) #14
  br label %364

364:                                              ; preds = %362, %360, %314
  %365 = getelementptr inbounds %"struct.gfx::PNGCodec::Comment", %"struct.gfx::PNGCodec::Comment"* %101, i64 1
  %366 = icmp eq %"struct.gfx::PNGCodec::Comment"* %365, %32
  br i1 %366, label %41, label %100

367:                                              ; preds = %94, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  store i32 %3, i32* %19, align 4
  %368 = getelementptr inbounds %"class.gfx::VectorWStream", %"class.gfx::VectorWStream"* %8, i64 0, i32 0
  %369 = call zeroext i1 @_ZN12SkPngEncoder6EncodeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream* nonnull %368, %class.SkPixmap* dereferenceable(40) %0, %"struct.SkPngEncoder::Options"* nonnull dereferenceable(16) %9) #11
  %370 = load %class.SkDataTable*, %class.SkDataTable** %20, align 8
  %371 = icmp eq %class.SkDataTable* %370, null
  br i1 %371, label %382, label %372

372:                                              ; preds = %367
  %373 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %370, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = atomicrmw add i32* %373, i32 -1 acq_rel
  %375 = icmp eq i32 %374, 1
  br i1 %375, label %376, label %382

376:                                              ; preds = %372
  %377 = bitcast %class.SkDataTable* %370 to %class.SkRefCntBase*
  %378 = bitcast %class.SkDataTable* %370 to void (%class.SkRefCntBase*)***
  %379 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %378, align 8
  %380 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %379, i64 2
  %381 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %380, align 8
  call void %381(%class.SkRefCntBase* nonnull %377) #11
  br label %382

382:                                              ; preds = %367, %372, %376
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  call void @_ZN9SkWStreamD2Ev(%class.SkWStream* nonnull %368) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  ret i1 %369
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx8PNGCodec22FastEncodeBGRASkBitmapERK8SkBitmapbPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56), i1 zeroext, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPixmap, align 8
  %5 = alloca %"class.std::__1::vector.9", align 8
  %6 = bitcast %class.SkPixmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 40, i1 false) #11
  %7 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %0, %class.SkPixmap* nonnull %4) #11
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::vector.9"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = call fastcc zeroext i1 @_ZN3gfxL14EncodeSkPixmapERK8SkPixmapbRKNSt3__16vectorINS_8PNGCodec7CommentENS3_9allocatorIS6_EEEEPNS4_IhNS7_IhEEEEi(%class.SkPixmap* nonnull dereferenceable(40) %4, i1 zeroext %1, %"class.std::__1::vector.9"* nonnull dereferenceable(24) %5, %"class.std::__1::vector"* %2, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi i1 [ %10, %8 ], [ false, %3 ]
  %13 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %11, %16, %20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8PNGCodec7CommentC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"struct.gfx::PNGCodec::Comment"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = bitcast %"struct.gfx::PNGCodec::Comment"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #11
  br label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.gfx::PNGCodec::Comment", %"struct.gfx::PNGCodec::Comment"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %14, i64 %16) #11
  br label %17

17:                                               ; preds = %8, %11
  %18 = getelementptr inbounds %"struct.gfx::PNGCodec::Comment", %"struct.gfx::PNGCodec::Comment"* %0, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #11
  br label %31

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %18, i8* %28, i64 %30) #11
  br label %31

31:                                               ; preds = %23, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8PNGCodec7CommentD2Ev(%"struct.gfx::PNGCodec::Comment"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gfx::PNGCodec::Comment", %"struct.gfx::PNGCodec::Comment"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %1, %7
  %11 = bitcast %"struct.gfx::PNGCodec::Comment"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.gfx::PNGCodec::Comment", %"struct.gfx::PNGCodec::Comment"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %10, %15
  ret void
}

declare i32 @cr_png_sig_cmp(i8*, i64, i64) local_unnamed_addr #3

declare noalias %struct.png_struct_def* @cr_png_create_read_struct(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #3

declare noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def*) local_unnamed_addr #3

declare i8* @cr_png_get_progressive_ptr(%struct.png_struct_def*) local_unnamed_addr #3

declare i32 @cr_png_get_IHDR(%struct.png_struct_def*, %struct.png_info_def*, i32*, i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #3

declare void @cr_png_set_expand(%struct.png_struct_def*) local_unnamed_addr #3

declare i32 @cr_png_get_valid(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

declare void @cr_png_set_strip_16(%struct.png_struct_def*) local_unnamed_addr #3

declare void @cr_png_set_add_alpha(%struct.png_struct_def*, i32, i32) local_unnamed_addr #3

declare void @cr_png_set_bgr(%struct.png_struct_def*) local_unnamed_addr #3

declare void @cr_png_set_gray_to_rgb(%struct.png_struct_def*) local_unnamed_addr #3

declare i32 @cr_png_get_gAMA(%struct.png_struct_def*, %struct.png_info_def*, double*) local_unnamed_addr #3

declare void @cr_png_set_gAMA(%struct.png_struct_def*, %struct.png_info_def*, double) local_unnamed_addr #3

declare void @cr_png_set_gamma(%struct.png_struct_def*, double, double) local_unnamed_addr #3

declare void @cr_png_set_read_user_transform_fn(%struct.png_struct_def*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_120ConvertRGBARowToSkiaEP14png_struct_defP19png_row_info_structPh(%struct.png_struct_def*, %struct.png_row_info_struct* nocapture readonly, i8*) #0 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  %5 = load i8, i8* %4, align 2
  %6 = zext i8 %5 to i64
  %7 = tail call i8* @cr_png_get_user_transform_ptr(%struct.png_struct_def* %0) #11
  %8 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 %9
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = add nsw i64 %6, -1
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  br label %16

15:                                               ; preds = %47, %3
  ret void

16:                                               ; preds = %12, %47
  %17 = phi i8* [ %2, %12 ], [ %49, %47 ]
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds i8, i8* %17, i64 %13
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, -1
  br i1 %21, label %33, label %22

22:                                               ; preds = %16
  %23 = zext i8 %20 to i32
  store i8 0, i8* %14, align 8
  %24 = load i8, i8* %17, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %17, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %17, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = tail call i32 @_Z17SkPreMultiplyARGBjjjj(i32 %23, i32 %25, i32 %28, i32 %31) #11
  br label %47

33:                                               ; preds = %16
  %34 = load i8, i8* %17, align 1
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds i8, i8* %17, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds i8, i8* %17, i64 2
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %35, 16
  %43 = shl nuw nsw i32 %38, 8
  %44 = or i32 %42, %43
  %45 = or i32 %44, %41
  %46 = or i32 %45, -16777216
  br label %47

47:                                               ; preds = %33, %22
  %48 = phi i32 [ %46, %33 ], [ %32, %22 ]
  store i32 %48, i32* %18, align 4
  %49 = getelementptr inbounds i8, i8* %17, i64 %6
  %50 = icmp ult i8* %49, %10
  br i1 %50, label %16, label %15
}

declare void @cr_png_set_user_transform_info(%struct.png_struct_def*, i8*, i32, i32) local_unnamed_addr #3

declare i32 @cr_png_set_interlace_handling(%struct.png_struct_def*) local_unnamed_addr #3

declare void @cr_png_read_update_info(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #3

declare void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap*, i32, i32, i1 zeroext) local_unnamed_addr #3

declare i8* @cr_png_get_user_transform_ptr(%struct.png_struct_def*) local_unnamed_addr #3

declare i32 @_Z17SkPreMultiplyARGBjjjj(i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #11
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #14
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #11
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #11
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #14
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @cr_png_progressive_combine_row(%struct.png_struct_def*, i8*, i8*) local_unnamed_addr #3

declare void @cr_png_destroy_read_struct(%struct.png_struct_def**, %struct.png_info_def**, %struct.png_info_def**) local_unnamed_addr #3

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #10

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkPixmap10readPixelsERK11SkImageInfoPvmii(%class.SkPixmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN12SkPngEncoder6EncodeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream*, %class.SkPixmap* dereferenceable(40), %"struct.SkPngEncoder::Options"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9SkWStreamD2Ev(%class.SkWStream*) unnamed_addr #10

declare void @_ZN11SkDataTable14MakeCopyArraysEPKPKvPKmi(%class.sk_sp.23* sret, i8**, i64*, i32) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind returns_twice }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!5 = distinct !{!5, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!8 = distinct !{!8, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!9 = !{!10, !7, !4}
!10 = distinct !{!10, !11, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!11 = distinct !{!11, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!12 = !{!13, !4}
!13 = distinct !{!13, !14, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!14 = distinct !{!14, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!17 = distinct !{!17, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!20 = distinct !{!20, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!21 = !{!22, !19, !16}
!22 = distinct !{!22, !23, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!23 = distinct !{!23, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!24 = !{!25, !16}
!25 = distinct !{!25, !26, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!26 = distinct !{!26, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!29 = distinct !{!29, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!30 = !{!31, !33, !28}
!31 = distinct !{!31, !32, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!32 = distinct !{!32, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!33 = distinct !{!33, !34, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!34 = distinct !{!34, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!35 = !{!36, !38, !40}
!36 = distinct !{!36, !37, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!37 = distinct !{!37, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!38 = distinct !{!38, !39, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!39 = distinct !{!39, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!40 = distinct !{!40, !41, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!41 = distinct !{!41, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
