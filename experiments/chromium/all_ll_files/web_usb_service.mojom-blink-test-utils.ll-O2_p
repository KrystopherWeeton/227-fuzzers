; ModuleID = 'gen/third_party/blink/public/mojom/usb/web_usb_service.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/usb/web_usb_service.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::WebUsbServiceAsyncWaiter" = type { %"class.blink::mojom::blink::WebUsbService"* }
%"class.blink::mojom::blink::WebUsbService" = type { i32 (...)** }
%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting" = type { %"class.blink::mojom::blink::WebUsbService" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.8", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.9, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.2", [4 x i8] }>
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.9 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10" }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.device::mojom::blink::UsbDeviceFilter"* }
%"class.device::mojom::blink::UsbDeviceFilter" = type { i8, i16, i8, i16, i8, i8, i8, i8, i8, i8, %"class.WTF::String" }
%"class.base::OnceCallback.12" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16" }
%"class.WTF::VectorBufferBase.16" = type { %"class.mojo::StructPtr.17"*, i32, i32 }
%"class.mojo::StructPtr.17" = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.device::mojom::blink::UsbDeviceInfo"* }
%"class.device::mojom::blink::UsbDeviceInfo" = type { %"class.WTF::String", i8, i8, i8, i8, i8, i8, i32, i32, i16, i16, i8, i8, i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional", i8, %"class.WTF::Vector.27" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.21" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::KURL"* }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29" }
%"class.WTF::VectorBufferBase.29" = type { %"class.mojo::StructPtr.30"*, i32, i32 }
%"class.mojo::StructPtr.30" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.device::mojom::blink::UsbConfigurationInfo"* }
%"class.device::mojom::blink::UsbConfigurationInfo" = type { i8, %"class.WTF::String", i8, i8, i8, %"class.WTF::Vector.34", %"class.WTF::Vector.55" }
%"class.WTF::Vector.34" = type { %"class.WTF::VectorBuffer.35" }
%"class.WTF::VectorBuffer.35" = type { %"class.WTF::VectorBufferBase.36" }
%"class.WTF::VectorBufferBase.36" = type { %"class.mojo::StructPtr.37"*, i32, i32 }
%"class.mojo::StructPtr.37" = type { %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.device::mojom::blink::UsbInterfaceInfo"* }
%"class.device::mojom::blink::UsbInterfaceInfo" = type { i8, i8, %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.mojo::StructPtr.44"*, i32, i32 }
%"class.mojo::StructPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.device::mojom::blink::UsbAlternateInterfaceInfo"* }
%"class.device::mojom::blink::UsbAlternateInterfaceInfo" = type { i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::Vector.48", %"class.WTF::Vector.55" }
%"class.WTF::Vector.48" = type { %"class.WTF::VectorBuffer.49" }
%"class.WTF::VectorBuffer.49" = type { %"class.WTF::VectorBufferBase.50" }
%"class.WTF::VectorBufferBase.50" = type { %"class.mojo::StructPtr.51"*, i32, i32 }
%"class.mojo::StructPtr.51" = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.device::mojom::blink::UsbEndpointInfo"* }
%"class.device::mojom::blink::UsbEndpointInfo" = type { i8, i32, i32, i32, i32, i32, i8, %"class.WTF::Vector.55" }
%"class.WTF::Vector.55" = type { %"class.WTF::VectorBuffer.56" }
%"class.WTF::VectorBuffer.56" = type { %"class.WTF::VectorBufferBase.57" }
%"class.WTF::VectorBufferBase.57" = type { i8*, i32, i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.95, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.88", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.90" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.95 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.96 }
%class.scoped_refptr.96 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.97", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.97" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.98" }
%"struct.std::__1::atomic.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__cxx_atomic_impl.101" }
%"struct.std::__1::__cxx_atomic_impl.101" = type { %"struct.std::__1::__cxx_atomic_base_impl.102" }
%"struct.std::__1::__cxx_atomic_base_impl.102" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink5mojom5blink13WebUsbServiceD2Ev = comdat any

$_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [11 x i8] c"GetDevices\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"gen/third_party/blink/public/mojom/usb/web_usb_service.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"GetPermission\00", align 1
@_ZTVN5blink5mojom5blink34WebUsbServiceInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::WebUsbService"*)* @_ZN5blink5mojom5blink13WebUsbServiceD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)* @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTesting10GetDevicesEN4base12OnceCallbackIFvN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS5_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*, %"class.WTF::String"*, %"class.mojo::PendingReceiver"*)* @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTesting9GetDeviceERKN3WTF6StringEN4mojo15PendingReceiverIN6device5mojom5blink9UsbDeviceEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)* @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTesting13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS6_INS9_13UsbDeviceInfoEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote"*)* @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTesting9SetClientEN4mojo23PendingAssociatedRemoteIN6device5mojom5blink22UsbDeviceManagerClientEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink24WebUsbServiceAsyncWaiterC1EPNS1_13WebUsbServiceE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"*, %"class.blink::mojom::blink::WebUsbService"*), void (%"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"*, %"class.blink::mojom::blink::WebUsbService"*)* @_ZN5blink5mojom5blink24WebUsbServiceAsyncWaiterC2EPNS1_13WebUsbServiceE
@_ZN5blink5mojom5blink24WebUsbServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"*), void (%"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"*)* @_ZN5blink5mojom5blink24WebUsbServiceAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTesting10GetDevicesEN4base12OnceCallbackIFvN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS5_18PartitionAllocatorEEEEEE(%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::WebUsbService"* %7(%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::WebUsbService"* %8 to void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)** %14, i64 2
  %16 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::WebUsbService"* %8, %"class.base::OnceCallback"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTesting9GetDeviceERKN3WTF6StringEN4mojo15PendingReceiverIN6device5mojom5blink9UsbDeviceEEE(%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = bitcast %"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::WebUsbService"* %8(%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %10, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %11) #10
  %12 = bitcast %"class.blink::mojom::blink::WebUsbService"* %9 to void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::String"*, %"class.mojo::PendingReceiver"*)***
  %13 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::String"*, %"class.mojo::PendingReceiver"*)**, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::String"*, %"class.mojo::PendingReceiver"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::String"*, %"class.mojo::PendingReceiver"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::String"*, %"class.mojo::PendingReceiver"*)** %13, i64 3
  %15 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::String"*, %"class.mojo::PendingReceiver"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::String"*, %"class.mojo::PendingReceiver"*)** %14, align 8
  call void %15(%"class.blink::mojom::blink::WebUsbService"* %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.mojo::PendingReceiver"* nonnull %4) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTesting13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS6_INS9_13UsbDeviceInfoEEEEEE(%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*, %"class.WTF::Vector"* nocapture, %"class.base::OnceCallback.12"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.base::OnceCallback.12", align 8
  %6 = bitcast %"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)** %7, i64 6
  %9 = load %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::WebUsbService"* %9(%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.WTF::Vector"* %1 to i64*
  %14 = bitcast %"class.WTF::Vector"* %4 to i64*
  store i64 0, i64* %14, align 8
  %15 = load i64, i64* %13, align 8
  %16 = bitcast %"class.WTF::Vector"* %4 to i64*
  store atomic i64 0, i64* %13 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %11, align 8
  store i32 0, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %12, align 4
  store i32 0, i32* %19, align 4
  %21 = getelementptr inbounds %"class.base::OnceCallback.12", %"class.base::OnceCallback.12"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.12"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback.12"* %5 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = bitcast %"class.blink::mojom::blink::WebUsbService"* %10 to void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)***
  %26 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)**, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)** %26, i64 4
  %28 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)** %27, align 8
  call void %28(%"class.blink::mojom::blink::WebUsbService"* %10, %"class.WTF::Vector"* nonnull %4, %"class.base::OnceCallback.12"* nonnull %5) #10
  %29 = getelementptr inbounds %"class.base::OnceCallback.12", %"class.base::OnceCallback.12"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #10
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %30, align 8
  %32 = icmp eq %"class.mojo::StructPtr"* %31, null
  br i1 %32, label %55, label %33, !prof !2

33:                                               ; preds = %3
  %34 = bitcast %"class.mojo::StructPtr"* %31 to i8*
  %35 = load i32, i32* %12, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %53, label %37, !prof !3

37:                                               ; preds = %33
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %31, i64 %38
  br label %40

40:                                               ; preds = %47, %37
  %41 = phi %"class.mojo::StructPtr"* [ %48, %47 ], [ %31, %37 ]
  %42 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.device::mojom::blink::UsbDeviceFilter"*, %"class.device::mojom::blink::UsbDeviceFilter"** %42, align 8
  store %"class.device::mojom::blink::UsbDeviceFilter"* null, %"class.device::mojom::blink::UsbDeviceFilter"** %42, align 8
  %44 = icmp eq %"class.device::mojom::blink::UsbDeviceFilter"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  call void @_ZN6device5mojom5blink15UsbDeviceFilterD1Ev(%"class.device::mojom::blink::UsbDeviceFilter"* nonnull %43) #10
  %46 = getelementptr inbounds %"class.device::mojom::blink::UsbDeviceFilter", %"class.device::mojom::blink::UsbDeviceFilter"* %43, i64 0, i32 0
  call void @_ZdlPv(i8* %46) #11
  br label %47

47:                                               ; preds = %45, %40
  %48 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 1
  %49 = icmp eq %"class.mojo::StructPtr"* %48, %39
  br i1 %49, label %50, label %40

50:                                               ; preds = %47
  store i32 0, i32* %12, align 4
  %51 = bitcast %"class.WTF::Vector"* %4 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %33
  %54 = phi i8* [ %52, %50 ], [ %34, %33 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %30, align 8
  br label %55

55:                                               ; preds = %3, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTesting9SetClientEN4mojo23PendingAssociatedRemoteIN6device5mojom5blink22UsbDeviceManagerClientEEE(%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %4 = bitcast %"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebUsbService"* (%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::WebUsbService"* %7(%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %9, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %10) #10
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = bitcast %"class.blink::mojom::blink::WebUsbService"* %8 to void (%"class.blink::mojom::blink::WebUsbService"*, %"class.mojo::PendingAssociatedRemote"*)***
  %15 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.mojo::PendingAssociatedRemote"*)**, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.mojo::PendingAssociatedRemote"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::WebUsbService"*, %"class.mojo::PendingAssociatedRemote"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.mojo::PendingAssociatedRemote"*)** %15, i64 5
  %17 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.mojo::PendingAssociatedRemote"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.mojo::PendingAssociatedRemote"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::WebUsbService"* %8, %"class.mojo::PendingAssociatedRemote"* nonnull %3) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %9) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink24WebUsbServiceAsyncWaiterC2EPNS1_13WebUsbServiceE(%"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"* nocapture, %"class.blink::mojom::blink::WebUsbService"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::WebUsbServiceAsyncWaiter", %"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::WebUsbService"* %1, %"class.blink::mojom::blink::WebUsbService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink24WebUsbServiceAsyncWaiterD2Ev(%"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24WebUsbServiceAsyncWaiter10GetDevicesEPN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"* nocapture readonly, %"class.WTF::Vector.14"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint %"class.WTF::Vector.14"* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #10
  %8 = getelementptr inbounds %"class.blink::mojom::blink::WebUsbServiceAsyncWaiter", %"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.blink::mojom::blink::WebUsbService"*, %"class.blink::mojom::blink::WebUsbService"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #11, !noalias !4
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.14"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter10GetDevicesEPN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESI_EEEFvSH_EE7RunOnceEPNS0_13BindStateBaseEOSH_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter10GetDevicesEPN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS6_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESH_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !4
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !4
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !4
  %17 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !4
  %18 = bitcast %"class.blink::mojom::blink::WebUsbService"* %9 to void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)***
  %19 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)** %19, i64 2
  %21 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.base::OnceCallback"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::WebUsbService"* %9, %"class.base::OnceCallback"* nonnull %4) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 65) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24WebUsbServiceAsyncWaiter13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS3_18PartitionAllocatorEEEPNS6_INS9_13UsbDeviceInfoEEE(%"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"* nocapture readonly, %"class.WTF::Vector"* nocapture, %"class.mojo::StructPtr.17"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.base::OnceCallback.12", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.mojo::StructPtr.17"* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::mojom::blink::WebUsbServiceAsyncWaiter", %"class.blink::mojom::blink::WebUsbServiceAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::WebUsbService"*, %"class.blink::mojom::blink::WebUsbService"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector"* %1 to i64*
  %15 = bitcast %"class.WTF::Vector"* %5 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %23 = call i8* @_Znwm(i64 56) #11, !noalias !9
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.17"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS7_18PartitionAllocatorEEEPNSA_INSD_13UsbDeviceInfoEEEE3$_1JPNS_7RunLoopESK_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS6_18PartitionAllocatorEEEPNS9_INSC_13UsbDeviceInfoEEEE3$_1JPNS_7RunLoopESJ_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !9
  %25 = getelementptr inbounds i8, i8* %23, i64 40
  %26 = bitcast i8* %25 to i64*
  store i64 %22, i64* %26, align 8, !noalias !9
  %27 = getelementptr inbounds i8, i8* %23, i64 48
  %28 = bitcast i8* %27 to i64*
  store i64 %8, i64* %28, align 8, !noalias !9
  %29 = bitcast %"class.base::OnceCallback.12"* %6 to i8**
  store i8* %23, i8** %29, align 8, !alias.scope !9
  %30 = bitcast %"class.blink::mojom::blink::WebUsbService"* %11 to void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)***
  %31 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)**, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)** %31, i64 4
  %33 = load void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)*, void (%"class.blink::mojom::blink::WebUsbService"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.12"*)** %32, align 8
  call void %33(%"class.blink::mojom::blink::WebUsbService"* %11, %"class.WTF::Vector"* nonnull %5, %"class.base::OnceCallback.12"* nonnull %6) #10
  %34 = getelementptr inbounds %"class.base::OnceCallback.12", %"class.base::OnceCallback.12"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #10
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %35, align 8
  %37 = icmp eq %"class.mojo::StructPtr"* %36, null
  br i1 %37, label %60, label %38, !prof !2

38:                                               ; preds = %3
  %39 = bitcast %"class.mojo::StructPtr"* %36 to i8*
  %40 = load i32, i32* %13, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %58, label %42, !prof !3

42:                                               ; preds = %38
  %43 = zext i32 %40 to i64
  %44 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %36, i64 %43
  br label %45

45:                                               ; preds = %52, %42
  %46 = phi %"class.mojo::StructPtr"* [ %53, %52 ], [ %36, %42 ]
  %47 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.device::mojom::blink::UsbDeviceFilter"*, %"class.device::mojom::blink::UsbDeviceFilter"** %47, align 8
  store %"class.device::mojom::blink::UsbDeviceFilter"* null, %"class.device::mojom::blink::UsbDeviceFilter"** %47, align 8
  %49 = icmp eq %"class.device::mojom::blink::UsbDeviceFilter"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  call void @_ZN6device5mojom5blink15UsbDeviceFilterD1Ev(%"class.device::mojom::blink::UsbDeviceFilter"* nonnull %48) #10
  %51 = getelementptr inbounds %"class.device::mojom::blink::UsbDeviceFilter", %"class.device::mojom::blink::UsbDeviceFilter"* %48, i64 0, i32 0
  call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %45
  %53 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %46, i64 1
  %54 = icmp eq %"class.mojo::StructPtr"* %53, %44
  br i1 %54, label %55, label %45

55:                                               ; preds = %52
  store i32 0, i32* %13, align 4
  %56 = bitcast %"class.WTF::Vector"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %38
  %59 = phi i8* [ %57, %55 ], [ %39, %38 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %35, align 8
  br label %60

60:                                               ; preds = %3, %58
  %61 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 80) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %61) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink13WebUsbServiceD2Ev(%"class.blink::mojom::blink::WebUsbService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink34WebUsbServiceInterceptorForTestingD0Ev(%"class.blink::mojom::blink::WebUsbServiceInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6device5mojom5blink15UsbDeviceFilterD1Ev(%"class.device::mojom::blink::UsbDeviceFilter"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter10GetDevicesEPN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESI_EEEFvSH_EE7RunOnceEPNS0_13BindStateBaseEOSH_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector.14"* nocapture dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::Vector.14"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::Vector.14"*, %"class.WTF::Vector.14"** %6, align 8
  %9 = bitcast %"class.WTF::Vector.14"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 0, i64* %9 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  store i32 0, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  store i32 0, i32* %13, align 4
  %15 = bitcast %"class.WTF::Vector.14"* %8 to i64*
  %16 = load i64, i64* %15, align 8
  store atomic i64 %10, i64* %15 monotonic, align 8
  %17 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %8, i64 0, i32 0, i32 0, i32 1
  store i32 %12, i32* %17, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %8, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  store i32 %14, i32* %18, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  %20 = inttoptr i64 %16 to %"class.mojo::StructPtr.17"*
  %21 = icmp eq i64 %16, 0
  br i1 %21, label %39, label %22, !prof !2

22:                                               ; preds = %2
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %37, label %24, !prof !3

24:                                               ; preds = %22
  %25 = zext i32 %19 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr.17", %"class.mojo::StructPtr.17"* %20, i64 %25
  br label %27

27:                                               ; preds = %34, %24
  %28 = phi %"class.mojo::StructPtr.17"* [ %35, %34 ], [ %20, %24 ]
  %29 = getelementptr inbounds %"class.mojo::StructPtr.17", %"class.mojo::StructPtr.17"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.device::mojom::blink::UsbDeviceInfo"*, %"class.device::mojom::blink::UsbDeviceInfo"** %29, align 8
  store %"class.device::mojom::blink::UsbDeviceInfo"* null, %"class.device::mojom::blink::UsbDeviceInfo"** %29, align 8
  %31 = icmp eq %"class.device::mojom::blink::UsbDeviceInfo"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  tail call void @_ZN6device5mojom5blink13UsbDeviceInfoD1Ev(%"class.device::mojom::blink::UsbDeviceInfo"* nonnull %30) #10
  %33 = bitcast %"class.device::mojom::blink::UsbDeviceInfo"* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %32, %27
  %35 = getelementptr inbounds %"class.mojo::StructPtr.17", %"class.mojo::StructPtr.17"* %28, i64 1
  %36 = icmp eq %"class.mojo::StructPtr.17"* %35, %26
  br i1 %36, label %37, label %27

37:                                               ; preds = %34, %22
  %38 = inttoptr i64 %16 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #10
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6device5mojom5blink13UsbDeviceInfoD1Ev(%"class.device::mojom::blink::UsbDeviceInfo"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter10GetDevicesEPN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS6_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESH_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS7_18PartitionAllocatorEEEPNSA_INSD_13UsbDeviceInfoEEEE3$_1JPNS_7RunLoopESK_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.17"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.17"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.17"*, %"class.mojo::StructPtr.17"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.17"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.17", %"class.mojo::StructPtr.17"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.device::mojom::blink::UsbDeviceInfo"*, %"class.device::mojom::blink::UsbDeviceInfo"** %11, align 8
  store %"class.device::mojom::blink::UsbDeviceInfo"* null, %"class.device::mojom::blink::UsbDeviceInfo"** %11, align 8
  %13 = icmp eq %"class.device::mojom::blink::UsbDeviceInfo"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.17"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN6device5mojom5blink13UsbDeviceInfoD1Ev(%"class.device::mojom::blink::UsbDeviceInfo"* nonnull %12) #10
  %17 = bitcast %"class.device::mojom::blink::UsbDeviceInfo"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  %18 = load %"class.device::mojom::blink::UsbDeviceInfo"*, %"class.device::mojom::blink::UsbDeviceInfo"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.17"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  %20 = icmp eq %"class.device::mojom::blink::UsbDeviceInfo"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.device::mojom::blink::UsbDeviceInfo"* %18 to i8*
  tail call void @_ZN6device5mojom5blink13UsbDeviceInfoD1Ev(%"class.device::mojom::blink::UsbDeviceInfo"* nonnull %18) #10
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS6_18PartitionAllocatorEEEPNS9_INSC_13UsbDeviceInfoEEEE3$_1JPNS_7RunLoopESJ_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24WebUsbServiceAsyncWaiter10GetDevicesEPN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSI_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24WebUsbServiceAsyncWaiter10GetDevicesEPN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSI_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter10GetDevicesEPN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS5_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter10GetDevicesEPN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink13UsbDeviceInfoEEELj0ENS5_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24WebUsbServiceAsyncWaiter13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS7_18PartitionAllocatorEEEPNSA_INSD_13UsbDeviceInfoEEEE3$_1JPNS_7RunLoopERSK_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24WebUsbServiceAsyncWaiter13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS7_18PartitionAllocatorEEEPNSA_INSD_13UsbDeviceInfoEEEE3$_1JPNS_7RunLoopERSK_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS5_18PartitionAllocatorEEEPNS8_INSB_13UsbDeviceInfoEEEE3$_1JPNS_7RunLoopERSI_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIZN5blink5mojom5blink24WebUsbServiceAsyncWaiter13GetPermissionEN3WTF6VectorIN4mojo9StructPtrIN6device5mojom5blink15UsbDeviceFilterEEELj0ENS5_18PartitionAllocatorEEEPNS8_INSB_13UsbDeviceInfoEEEE3$_1JPNS_7RunLoopERSI_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_"}
