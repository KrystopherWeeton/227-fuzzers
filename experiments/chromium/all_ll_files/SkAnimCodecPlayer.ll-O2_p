; ModuleID = '../../third_party/skia/src/utils/SkAnimCodecPlayer.cpp'
source_filename = "../../third_party/skia/src/utils/SkAnimCodecPlayer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.39, %class.sk_sp.40, %class.sk_sp.41, %class.sk_sp.42, %class.sk_sp.43, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.39 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.40 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.41 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.42 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.43 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon.44 }
%struct.anon.44 = type { i32 }
%class.SkAnimCodecPlayer = type { %"class.std::__1::unique_ptr", %struct.SkImageInfo, %"class.std::__1::vector", %"class.std::__1::vector.25", i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkCodec* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.12, i32, i32 }
%class.sk_sp.12 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.13, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkCodec::FrameInfo"*, %"struct.SkCodec::FrameInfo"*, %"class.std::__1::__compressed_pair.22" }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.SkCodec::FrameInfo"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %class.sk_sp.27*, %class.sk_sp.27*, %"class.std::__1::__compressed_pair.28" }
%class.sk_sp.27 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.sk_sp.27* }
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.6", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkStream* }
%class.SkStream = type { i32 (...)** }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.3, [8 x i8] }
%struct.anon.3 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkImageGenerator = type <{ i32 (...)**, %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.48, [384 x i64], %class.sk_sp.49, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.50", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.56" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.48 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.49 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK13SkEncodedInfo13makeImageInfoEv = comdat any

$_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@__const._ZN17SkAnimCodecPlayer10getFrameAtEi.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.39 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.40 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.41 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.42 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.43 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon.44 { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/skia/include/codec/SkEncodedOrigin.h\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Unexpected origin\00", align 1

@_ZN17SkAnimCodecPlayerC1ENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE = hidden unnamed_addr alias void (%class.SkAnimCodecPlayer*, %class.SkCodec*), void (%class.SkAnimCodecPlayer*, %class.SkCodec*)* @_ZN17SkAnimCodecPlayerC2ENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE
@_ZN17SkAnimCodecPlayerD1Ev = hidden unnamed_addr alias void (%class.SkAnimCodecPlayer*), void (%class.SkAnimCodecPlayer*)* @_ZN17SkAnimCodecPlayerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkAnimCodecPlayerC2ENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE(%class.SkAnimCodecPlayer*, %class.SkCodec*) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %class.sk_sp.27, align 8
  %6 = ptrtoint %class.SkCodec* %1 to i64
  %7 = bitcast %class.SkAnimCodecPlayer* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  %11 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 3
  %12 = bitcast %struct.SkImageInfo* %3 to i8*
  %13 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 76, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %14 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %1, i64 0, i32 1
  call void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* nonnull sret %3, %struct.SkEncodedInfo* %15) #9
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %struct.SkImageInfo* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %16, align 8
  %19 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %20 = load %class.SkColorSpace*, %class.SkColorSpace** %19, align 8
  %21 = bitcast %struct.SkImageInfo* %8 to i64*
  store i64 %18, i64* %21, align 8
  %22 = icmp eq %class.SkColorSpace* %20, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %class.SkColorSpace* %20 to i8*
  call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %2, %23, %27
  %30 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 1, i32 0, i32 1
  %31 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %32 = bitcast i32* %31 to <2 x i64>*
  %33 = load <2 x i64>, <2 x i64>* %32, align 8
  %34 = bitcast i32* %30 to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %34, align 8
  %35 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 8
  %36 = icmp eq %class.SkColorSpace* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorSpace* %35 to i8*
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %29, %37, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  %44 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #9
  %45 = load %class.SkCodec*, %class.SkCodec** %14, align 8
  call void @_ZN7SkCodec12getFrameInfoEv(%"class.std::__1::vector"* nonnull sret %4, %class.SkCodec* %45) #9
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %47 = load %"struct.SkCodec::FrameInfo"*, %"struct.SkCodec::FrameInfo"** %46, align 8
  %48 = icmp eq %"struct.SkCodec::FrameInfo"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = ptrtoint %"struct.SkCodec::FrameInfo"* %47 to i64
  %51 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 2, i32 0, i32 1
  %52 = bitcast %"struct.SkCodec::FrameInfo"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"struct.SkCodec::FrameInfo"* %47 to i8*
  call void @_ZdlPv(i8* %53) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #9
  br label %54

54:                                               ; preds = %43, %49
  %55 = bitcast %"class.std::__1::vector"* %4 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 2, i32 0, i32 1
  %60 = bitcast %"struct.SkCodec::FrameInfo"** %59 to i64*
  %61 = bitcast %"struct.SkCodec::FrameInfo"** %58 to <2 x i64>*
  %62 = load <2 x i64>, <2 x i64>* %61, align 8
  %63 = bitcast %"struct.SkCodec::FrameInfo"** %59 to <2 x i64>*
  store <2 x i64> %62, <2 x i64>* %63, align 8
  %64 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 3, i32 0, i32 1
  %65 = bitcast %class.sk_sp.27** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.25"* %11 to i64*
  %68 = load i64, i64* %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #9
  %69 = extractelement <2 x i64> %62, i32 0
  %70 = sub i64 %69, %56
  %71 = sdiv exact i64 %70, 44
  %72 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 3, i32 0, i32 1
  %73 = bitcast %class.sk_sp.27** %72 to i64*
  %74 = sub i64 %66, %68
  %75 = ashr exact i64 %74, 3
  %76 = icmp ugt i64 %71, %75
  %77 = inttoptr i64 %68 to %class.sk_sp.27*
  %78 = inttoptr i64 %66 to %class.sk_sp.27*
  br i1 %76, label %79, label %81

79:                                               ; preds = %54
  %80 = sub nsw i64 %71, %75
  call void @_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.25"* %11, i64 %80) #9
  br label %105

81:                                               ; preds = %54
  %82 = icmp ult i64 %71, %75
  br i1 %82, label %83, label %105

83:                                               ; preds = %81
  %84 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %77, i64 %71
  %85 = icmp eq %class.sk_sp.27* %84, %78
  br i1 %85, label %104, label %86

86:                                               ; preds = %83, %102
  %87 = phi %class.sk_sp.27* [ %88, %102 ], [ %78, %83 ]
  %88 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %87, i64 -1
  %89 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %88, i64 0, i32 0
  %90 = load %class.SkImage*, %class.SkImage** %89, align 8
  %91 = icmp eq %class.SkImage* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %class.SkImage, %class.SkImage* %90, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = bitcast %class.SkImage* %90 to %class.SkRefCntBase*
  %98 = bitcast %class.SkImage* %90 to void (%class.SkRefCntBase*)***
  %99 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, i64 2
  %101 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, align 8
  call void %101(%class.SkRefCntBase* nonnull %97) #9
  br label %102

102:                                              ; preds = %96, %92, %86
  %103 = icmp eq %class.sk_sp.27* %88, %84
  br i1 %103, label %104, label %86

104:                                              ; preds = %102, %83
  store %class.sk_sp.27* %84, %class.sk_sp.27** %72, align 8
  br label %105

105:                                              ; preds = %79, %81, %104
  %106 = load %"struct.SkCodec::FrameInfo"*, %"struct.SkCodec::FrameInfo"** %46, align 8
  %107 = load %"struct.SkCodec::FrameInfo"*, %"struct.SkCodec::FrameInfo"** %59, align 8
  %108 = icmp eq %"struct.SkCodec::FrameInfo"* %106, %107
  br i1 %108, label %109, label %115

109:                                              ; preds = %105
  %110 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 5
  store i32 0, i32* %110, align 4
  br label %125

111:                                              ; preds = %115
  %112 = trunc i64 %121 to i32
  %113 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 5
  store i32 %112, i32* %113, align 4
  %114 = icmp eq i32 %112, 0
  br i1 %114, label %125, label %180

115:                                              ; preds = %105, %115
  %116 = phi i64 [ %121, %115 ], [ 0, %105 ]
  %117 = phi %"struct.SkCodec::FrameInfo"* [ %123, %115 ], [ %106, %105 ]
  %118 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %117, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = add i64 %116, %120
  %122 = trunc i64 %121 to i32
  store i32 %122, i32* %118, align 4
  %123 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %117, i64 1
  %124 = icmp eq %"struct.SkCodec::FrameInfo"* %123, %107
  br i1 %124, label %111, label %115

125:                                              ; preds = %109, %111
  %126 = load i64, i64* %57, align 8
  store i64 %126, i64* %60, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %11, i64 0, i32 0, i32 0
  %128 = load %class.sk_sp.27*, %class.sk_sp.27** %127, align 8
  %129 = load %class.sk_sp.27*, %class.sk_sp.27** %72, align 8
  %130 = icmp eq %class.sk_sp.27* %129, %128
  br i1 %130, label %149, label %131

131:                                              ; preds = %125, %147
  %132 = phi %class.sk_sp.27* [ %133, %147 ], [ %129, %125 ]
  %133 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %132, i64 -1
  %134 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %133, i64 0, i32 0
  %135 = load %class.SkImage*, %class.SkImage** %134, align 8
  %136 = icmp eq %class.SkImage* %135, null
  br i1 %136, label %147, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %class.SkImage, %class.SkImage* %135, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw add i32* %138, i32 -1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %147

141:                                              ; preds = %137
  %142 = bitcast %class.SkImage* %135 to %class.SkRefCntBase*
  %143 = bitcast %class.SkImage* %135 to void (%class.SkRefCntBase*)***
  %144 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %143, align 8
  %145 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %144, i64 2
  %146 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, align 8
  call void %146(%class.SkRefCntBase* nonnull %142) #9
  br label %147

147:                                              ; preds = %141, %137, %131
  %148 = icmp eq %class.sk_sp.27* %133, %128
  br i1 %148, label %149, label %131

149:                                              ; preds = %147, %125
  store %class.sk_sp.27* %128, %class.sk_sp.27** %72, align 8
  %150 = bitcast %class.sk_sp.27* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #9
  %151 = load %class.SkCodec*, %class.SkCodec** %14, align 8
  store %class.SkCodec* null, %class.SkCodec** %14, align 8
  %152 = call %class.SkImageGenerator* @_ZN21SkCodecImageGenerator13MakeFromCodecENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE(%class.SkCodec* %151) #9
  call void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.27* nonnull sret %5, %class.SkImageGenerator* %152) #9
  %153 = load %class.sk_sp.27*, %class.sk_sp.27** %72, align 8
  %154 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %155 = load %class.sk_sp.27*, %class.sk_sp.27** %154, align 8
  %156 = icmp ult %class.sk_sp.27* %153, %155
  br i1 %156, label %157, label %164

157:                                              ; preds = %149
  %158 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %5, i64 0, i32 0
  %159 = bitcast %class.sk_sp.27* %5 to i64*
  %160 = load i64, i64* %159, align 8
  store %class.SkImage* null, %class.SkImage** %158, align 8
  %161 = bitcast %class.sk_sp.27* %153 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %153, i64 1
  %163 = ptrtoint %class.sk_sp.27* %162 to i64
  store i64 %163, i64* %73, align 8
  br label %165

164:                                              ; preds = %149
  call void @_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.25"* %11, %class.sk_sp.27* nonnull dereferenceable(8) %5) #9
  br label %165

165:                                              ; preds = %157, %164
  %166 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %5, i64 0, i32 0
  %167 = load %class.SkImage*, %class.SkImage** %166, align 8
  %168 = icmp eq %class.SkImage* %167, null
  br i1 %168, label %179, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %class.SkImage, %class.SkImage* %167, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 -1 acq_rel
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %179

173:                                              ; preds = %169
  %174 = bitcast %class.SkImage* %167 to %class.SkRefCntBase*
  %175 = bitcast %class.SkImage* %167 to void (%class.SkRefCntBase*)***
  %176 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %175, align 8
  %177 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %176, i64 2
  %178 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %177, align 8
  call void %178(%class.SkRefCntBase* nonnull %174) #9
  br label %179

179:                                              ; preds = %165, %169, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #9
  br label %180

180:                                              ; preds = %179, %111
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7SkCodec12getFrameInfoEv(%"class.std::__1::vector"* sret, %class.SkCodec*) local_unnamed_addr #2

declare void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.27* sret, %class.SkImageGenerator*) local_unnamed_addr #2

declare %class.SkImageGenerator* @_ZN21SkCodecImageGenerator13MakeFromCodecENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE(%class.SkCodec*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkAnimCodecPlayerD2Ev(%class.SkAnimCodecPlayer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %2, i64 0, i32 0, i32 0
  %4 = load %class.sk_sp.27*, %class.sk_sp.27** %3, align 8
  %5 = icmp eq %class.sk_sp.27* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.sk_sp.27* %4 to i8*
  %8 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %class.sk_sp.27*, %class.sk_sp.27** %8, align 8
  %10 = icmp eq %class.sk_sp.27* %9, %4
  br i1 %10, label %32, label %11

11:                                               ; preds = %6, %27
  %12 = phi %class.sk_sp.27* [ %13, %27 ], [ %9, %6 ]
  %13 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %12, i64 -1
  %14 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %13, i64 0, i32 0
  %15 = load %class.SkImage*, %class.SkImage** %14, align 8
  %16 = icmp eq %class.SkImage* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.SkImage, %class.SkImage* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkImage* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkImage* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #9
  br label %27

27:                                               ; preds = %21, %17, %11
  %28 = icmp eq %class.sk_sp.27* %13, %4
  br i1 %28, label %29, label %11

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector.25"* %2 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %6
  %33 = phi i8* [ %31, %29 ], [ %7, %6 ]
  store %class.sk_sp.27* %4, %class.sk_sp.27** %8, align 8
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 2, i32 0, i32 0
  %36 = load %"struct.SkCodec::FrameInfo"*, %"struct.SkCodec::FrameInfo"** %35, align 8
  %37 = icmp eq %"struct.SkCodec::FrameInfo"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = ptrtoint %"struct.SkCodec::FrameInfo"* %36 to i64
  %40 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 2, i32 0, i32 1
  %41 = bitcast %"struct.SkCodec::FrameInfo"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast %"struct.SkCodec::FrameInfo"* %36 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %34, %38
  %44 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  %46 = icmp eq %class.SkColorSpace* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = bitcast %class.SkColorSpace* %45 to i8*
  tail call void @_ZdlPv(i8* %52) #10
  br label %53

53:                                               ; preds = %43, %47, %51
  %54 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %class.SkCodec*, %class.SkCodec** %54, align 8
  store %class.SkCodec* null, %class.SkCodec** %54, align 8
  %56 = icmp eq %class.SkCodec* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %class.SkCodec* %55 to void (%class.SkCodec*)***
  %59 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %59, i64 1
  %61 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %60, align 8
  tail call void %61(%class.SkCodec* nonnull %55) #9
  br label %62

62:                                               ; preds = %53, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK17SkAnimCodecPlayer10dimensionsEv(%class.SkAnimCodecPlayer* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.SkCodec*, %class.SkCodec** %2, align 8
  %4 = icmp eq %class.SkCodec* %3, null
  br i1 %4, label %5, label %26

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %class.sk_sp.27*, %class.sk_sp.27** %6, align 8
  %8 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %7, i64 0, i32 0
  %9 = load %class.SkImage*, %class.SkImage** %8, align 8
  %10 = icmp eq %class.SkImage* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.SkImage, %class.SkImage* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = getelementptr inbounds %class.SkImage, %class.SkImage* %9, i64 0, i32 2, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkImage, %class.SkImage* %9, i64 0, i32 2, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = atomicrmw add i32* %12, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %40

20:                                               ; preds = %11
  %21 = bitcast %class.SkImage* %9 to %class.SkRefCntBase*
  %22 = bitcast %class.SkImage* %9 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #9
  br label %40

26:                                               ; preds = %1
  %27 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %3, i64 0, i32 7
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 4
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 1, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 1, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  br label %40

35:                                               ; preds = %26
  %36 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 1, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 1, i32 1, i32 1
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %5, %20, %11, %35, %30
  %41 = phi i32 [ %32, %30 ], [ %37, %35 ], [ %15, %11 ], [ %15, %20 ], [ 0, %5 ]
  %42 = phi i32 [ %34, %30 ], [ %39, %35 ], [ %17, %11 ], [ %17, %20 ], [ 0, %5 ]
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 32
  %45 = zext i32 %41 to i64
  %46 = or i64 %44, %45
  ret i64 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkAnimCodecPlayer10getFrameAtEi(%class.sk_sp.27* noalias nocapture sret, %class.SkAnimCodecPlayer*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %"struct.SkCodec::Options", align 8
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca %struct.SkSamplingOptions, align 4
  %11 = alloca %class.sk_sp.27, align 8
  %12 = alloca %class.sk_sp, align 8
  %13 = alloca %class.sk_sp, align 8
  %14 = alloca %struct.SkSamplingOptions, align 4
  %15 = alloca %class.sk_sp.27, align 8
  %16 = alloca %class.sk_sp, align 8
  %17 = sext i32 %2 to i64
  %18 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 3, i32 0, i32 0
  %19 = load %class.sk_sp.27*, %class.sk_sp.27** %18, align 8
  %20 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %19, i64 %17, i32 0
  %21 = load %class.SkImage*, %class.SkImage** %20, align 8
  %22 = icmp eq %class.SkImage* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %0, i64 0, i32 0
  %25 = getelementptr inbounds %class.SkImage, %class.SkImage* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  store %class.SkImage* %21, %class.SkImage** %24, align 8
  br label %481

27:                                               ; preds = %3
  %28 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 1
  %29 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 1, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %28, i64 0, i32 0
  %33 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %32) #9
  %34 = sext i32 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = icmp ult i64 %35, 2147483648
  %37 = select i1 %36, i64 %35, i64 0
  %38 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %28, i64 %37) #9
  %39 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %40, align 8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp* nonnull sret %4, i64 %38) #9
  %41 = bitcast %"struct.SkCodec::Options"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  %42 = bitcast %"struct.SkCodec::Options"* %5 to i64*
  store i64 -6148914691236517206, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %5, i64 0, i32 0
  store i32 1, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %5, i64 0, i32 1
  store %struct.SkIRect* null, %struct.SkIRect** %44, align 8
  %45 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %5, i64 0, i32 2
  %46 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %5, i64 0, i32 3
  store i32 -1, i32* %46, align 4
  store i32 %2, i32* %45, align 8
  %47 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %class.SkCodec*, %class.SkCodec** %47, align 8
  %49 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %48, i64 0, i32 7
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq %class.SkCodec* %48, null
  br i1 %51, label %52, label %72

52:                                               ; preds = %27
  %53 = load %class.sk_sp.27*, %class.sk_sp.27** %18, align 8
  %54 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %53, i64 0, i32 0
  %55 = load %class.SkImage*, %class.SkImage** %54, align 8
  %56 = icmp eq %class.SkImage* %55, null
  br i1 %56, label %82, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.SkImage, %class.SkImage* %55, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic
  %60 = getelementptr inbounds %class.SkImage, %class.SkImage* %55, i64 0, i32 2, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %class.SkImage, %class.SkImage* %55, i64 0, i32 2, i32 1, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = atomicrmw add i32* %58, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %82

66:                                               ; preds = %57
  %67 = bitcast %class.SkImage* %55 to %class.SkRefCntBase*
  %68 = bitcast %class.SkImage* %55 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #9
  br label %82

72:                                               ; preds = %27
  %73 = icmp sgt i32 %50, 4
  br i1 %73, label %74, label %78

74:                                               ; preds = %72
  %75 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 1, i32 1, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* %29, align 4
  br label %82

78:                                               ; preds = %72
  %79 = load i32, i32* %29, align 4
  %80 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 1, i32 1, i32 1
  %81 = load i32, i32* %80, align 4
  br label %82

82:                                               ; preds = %52, %57, %66, %74, %78
  %83 = phi i32 [ %76, %74 ], [ %79, %78 ], [ %61, %57 ], [ %61, %66 ], [ 0, %52 ]
  %84 = phi i32 [ %77, %74 ], [ %81, %78 ], [ %63, %57 ], [ %63, %66 ], [ 0, %52 ]
  %85 = zext i32 %84 to i64
  %86 = shl nuw i64 %85, 32
  %87 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %87) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -1, i64 36, i1 false)
  %88 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  store i32 -1431655766, i32* %88, align 4
  switch i32 %50, label %155 [
    i32 1, label %89
    i32 2, label %92
    i32 3, label %101
    i32 4, label %113
    i32 5, label %121
    i32 6, label %126
    i32 7, label %135
    i32 8, label %147
  ]

89:                                               ; preds = %82
  %90 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %91 = bitcast %class.SkMatrix* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %87, i8* align 4 %91, i64 40, i1 false) #9
  br label %156

92:                                               ; preds = %82
  %93 = sitofp i32 %83 to float
  %94 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 0
  %95 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 1
  %96 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 2
  %97 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 3
  %98 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 7
  %99 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float -1.000000e+00, float* %94, align 16, !alias.scope !2
  store float 0.000000e+00, float* %95, align 4, !alias.scope !2
  store float %93, float* %96, align 8, !alias.scope !2
  %100 = bitcast float* %97 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %100, align 4, !alias.scope !2
  store float 0.000000e+00, float* %98, align 4, !alias.scope !2
  store float 1.000000e+00, float* %99, align 16, !alias.scope !2
  store i32 128, i32* %88, align 4, !alias.scope !2
  br label %156

101:                                              ; preds = %82
  %102 = sitofp i32 %83 to float
  %103 = sitofp i32 %84 to float
  %104 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 0
  %105 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 1
  %106 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 2
  %107 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 3
  %108 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %109 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 5
  %110 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 6
  %111 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 7
  %112 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float -1.000000e+00, float* %104, align 16, !alias.scope !7
  store float 0.000000e+00, float* %105, align 4, !alias.scope !7
  store float %102, float* %106, align 8, !alias.scope !7
  store float 0.000000e+00, float* %107, align 4, !alias.scope !7
  store float -1.000000e+00, float* %108, align 16, !alias.scope !7
  store float %103, float* %109, align 4, !alias.scope !7
  store float 0.000000e+00, float* %110, align 8, !alias.scope !7
  store float 0.000000e+00, float* %111, align 4, !alias.scope !7
  store float 1.000000e+00, float* %112, align 16, !alias.scope !7
  store i32 128, i32* %88, align 4, !alias.scope !7
  br label %156

113:                                              ; preds = %82
  %114 = sitofp i32 %84 to float
  %115 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %116 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 5
  %117 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 6
  %118 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 7
  %119 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  %120 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %120, align 16, !alias.scope !10
  store float -1.000000e+00, float* %115, align 16, !alias.scope !10
  store float %114, float* %116, align 4, !alias.scope !10
  store float 0.000000e+00, float* %117, align 8, !alias.scope !10
  store float 0.000000e+00, float* %118, align 4, !alias.scope !10
  store float 1.000000e+00, float* %119, align 16, !alias.scope !10
  store i32 128, i32* %88, align 4, !alias.scope !10
  br label %156

121:                                              ; preds = %82
  %122 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %123 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  %124 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %124, align 16, !alias.scope !13
  %125 = bitcast float* %122 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %125, i8 0, i64 16, i1 false) #9, !alias.scope !16
  store float 1.000000e+00, float* %123, align 16, !alias.scope !13
  store i32 128, i32* %88, align 4, !alias.scope !13
  br label %156

126:                                              ; preds = %82
  %127 = sitofp i32 %83 to float
  %128 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 0
  %129 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 1
  %130 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 2
  %131 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 3
  %132 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %133 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 0.000000e+00, float* %128, align 16, !alias.scope !17
  store float -1.000000e+00, float* %129, align 4, !alias.scope !17
  store float %127, float* %130, align 8, !alias.scope !17
  store float 1.000000e+00, float* %131, align 4, !alias.scope !17
  %134 = bitcast float* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %134, i8 0, i64 16, i1 false) #9, !alias.scope !16
  store float 1.000000e+00, float* %133, align 16, !alias.scope !17
  store i32 128, i32* %88, align 4, !alias.scope !17
  br label %156

135:                                              ; preds = %82
  %136 = sitofp i32 %83 to float
  %137 = sitofp i32 %84 to float
  %138 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 0
  %139 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 1
  %140 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 2
  %141 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 3
  %142 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %143 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 5
  %144 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 6
  %145 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 7
  %146 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 0.000000e+00, float* %138, align 16, !alias.scope !20
  store float -1.000000e+00, float* %139, align 4, !alias.scope !20
  store float %136, float* %140, align 8, !alias.scope !20
  store float -1.000000e+00, float* %141, align 4, !alias.scope !20
  store float 0.000000e+00, float* %142, align 16, !alias.scope !20
  store float %137, float* %143, align 4, !alias.scope !20
  store float 0.000000e+00, float* %144, align 8, !alias.scope !20
  store float 0.000000e+00, float* %145, align 4, !alias.scope !20
  store float 1.000000e+00, float* %146, align 16, !alias.scope !20
  store i32 128, i32* %88, align 4, !alias.scope !20
  br label %156

147:                                              ; preds = %82
  %148 = sitofp i32 %84 to float
  %149 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %150 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 5
  %151 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 6
  %152 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 7
  %153 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  %154 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float -1.000000e+00>, <4 x float>* %154, align 16, !alias.scope !23
  store float 0.000000e+00, float* %149, align 16, !alias.scope !23
  store float %148, float* %150, align 4, !alias.scope !23
  store float 0.000000e+00, float* %151, align 8, !alias.scope !23
  store float 0.000000e+00, float* %152, align 4, !alias.scope !23
  store float 1.000000e+00, float* %153, align 16, !alias.scope !23
  store i32 128, i32* %88, align 4, !alias.scope !23
  br label %156

155:                                              ; preds = %82
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 43, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

156:                                              ; preds = %89, %92, %101, %113, %121, %126, %135, %147
  %157 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %157) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %157, i8* align 8 bitcast (%class.SkPaint* @__const._ZN17SkAnimCodecPlayer10getFrameAtEi.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #9
  %158 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %7, i64 0, i32 8, i32 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = and i32 %159, -261121
  %161 = or i32 %160, 1024
  store i32 %161, i32* %158, align 8
  %162 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #9
  %163 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %164 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %165 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %28, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 24, i1 false)
  %167 = load %class.SkColorSpace*, %class.SkColorSpace** %165, align 8
  %168 = icmp eq %class.SkColorSpace* %167, null
  br i1 %168, label %172, label %169

169:                                              ; preds = %156
  %170 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 1 monotonic
  br label %172

172:                                              ; preds = %156, %169
  store %class.SkColorSpace* %167, %class.SkColorSpace** %163, align 8
  %173 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 1, i32 0, i32 1
  %174 = bitcast i32* %173 to i64*
  %175 = bitcast i32* %164 to i64*
  %176 = load i64, i64* %174, align 8
  store i64 %176, i64* %175, align 8
  %177 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %178 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 1, i32 1
  %179 = bitcast %struct.SkISize* %178 to i64*
  %180 = bitcast %struct.SkISize* %177 to i64*
  %181 = load i64, i64* %179, align 8
  store i64 %181, i64* %180, align 8
  %182 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 2, i32 0, i32 0
  %183 = load %"struct.SkCodec::FrameInfo"*, %"struct.SkCodec::FrameInfo"** %182, align 8
  %184 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %183, i64 %17, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 1
  %187 = trunc i64 %176 to i32
  br i1 %186, label %223, label %188

188:                                              ; preds = %172
  %189 = and i64 %176, -4294967296
  %190 = icmp eq i64 %189, 4294967296
  br i1 %190, label %197, label %191

191:                                              ; preds = %188
  %192 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %187) #9
  br i1 %192, label %193, label %223

193:                                              ; preds = %191
  %194 = load i64, i64* %180, align 8, !noalias !26
  %195 = load i32, i32* %164, align 8, !noalias !29
  %196 = load %class.SkColorSpace*, %class.SkColorSpace** %163, align 8
  br label %197

197:                                              ; preds = %193, %188
  %198 = phi %class.SkColorSpace* [ %196, %193 ], [ %167, %188 ]
  %199 = phi i32 [ %195, %193 ], [ %187, %188 ]
  %200 = phi i64 [ %194, %193 ], [ %181, %188 ]
  %201 = icmp eq %class.SkColorSpace* %198, null
  br i1 %201, label %202, label %206

202:                                              ; preds = %197
  %203 = zext i32 %199 to i64
  %204 = or i64 %203, 8589934592
  %205 = bitcast %struct.SkImageInfo* %8 to i64*
  store i64 0, i64* %205, align 8
  br label %221

206:                                              ; preds = %197
  %207 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 1 monotonic, !noalias !32
  %209 = load %class.SkColorSpace*, %class.SkColorSpace** %163, align 8
  %210 = ptrtoint %class.SkColorSpace* %198 to i64
  %211 = zext i32 %199 to i64
  %212 = or i64 %211, 8589934592
  %213 = bitcast %struct.SkImageInfo* %8 to i64*
  store i64 %210, i64* %213, align 8
  %214 = icmp eq %class.SkColorSpace* %209, null
  br i1 %214, label %221, label %215

215:                                              ; preds = %206
  %216 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = atomicrmw add i32* %216, i32 -1 acq_rel
  %218 = icmp eq i32 %217, 1
  br i1 %218, label %219, label %221

219:                                              ; preds = %215
  %220 = bitcast %class.SkColorSpace* %209 to i8*
  call void @_ZdlPv(i8* %220) #10
  br label %221

221:                                              ; preds = %219, %215, %206, %202
  %222 = phi i64 [ %204, %202 ], [ %212, %206 ], [ %212, %215 ], [ %212, %219 ]
  store i64 %222, i64* %175, align 8
  store i64 %200, i64* %180, align 8
  br label %223

223:                                              ; preds = %172, %221, %191
  %224 = load %"struct.SkCodec::FrameInfo"*, %"struct.SkCodec::FrameInfo"** %182, align 8
  %225 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %224, i64 %17, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, -1
  br i1 %227, label %281, label %228

228:                                              ; preds = %223
  %229 = sext i32 %226 to i64
  %230 = load %class.sk_sp.27*, %class.sk_sp.27** %18, align 8
  %231 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %230, i64 %229, i32 0
  %232 = load %class.SkImage*, %class.SkImage** %231, align 8
  %233 = icmp eq %class.SkImage* %232, null
  br i1 %233, label %281, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds %class.SkImage, %class.SkImage* %232, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = atomicrmw add i32* %235, i32 1 monotonic
  %237 = load %class.SkData*, %class.SkData** %40, align 8
  %238 = getelementptr inbounds %class.SkData, %class.SkData* %237, i64 0, i32 3
  %239 = load i8*, i8** %238, align 8
  %240 = call %class.SkCanvas* @_ZN8SkCanvas16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%struct.SkImageInfo* nonnull dereferenceable(24) %8, i8* %239, i64 %37, %class.SkSurfaceProps* null) #9
  %241 = icmp eq i32 %50, 1
  br i1 %241, label %264, label %242

242:                                              ; preds = %234
  %243 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %243) #9
  %244 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %245 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %245, align 16
  %246 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %247 = bitcast float* %246 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %247, align 16
  %248 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %248, align 16
  store i32 16, i32* %244, align 4
  %249 = load i32, i32* %88, align 4
  %250 = trunc i32 %249 to i8
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %242
  %253 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %6) #9
  %254 = zext i8 %253 to i32
  store i32 %254, i32* %88, align 4
  br label %255

255:                                              ; preds = %252, %242
  %256 = phi i32 [ %254, %252 ], [ %249, %242 ]
  %257 = and i32 %256, 15
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %261

259:                                              ; preds = %255
  %260 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %9) #9
  br label %263

261:                                              ; preds = %255
  %262 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %6, %class.SkMatrix* nonnull %9) #9
  br label %263

263:                                              ; preds = %259, %261
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %240, %class.SkMatrix* nonnull dereferenceable(40) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %243) #9
  br label %264

264:                                              ; preds = %234, %263
  %265 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %265) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %265, i8 0, i64 20, i1 false)
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %240, %class.SkImage* nonnull %232, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %10, %class.SkPaint* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %265) #9
  store i32 %226, i32* %46, align 4
  %266 = icmp eq %class.SkCanvas* %240, null
  br i1 %266, label %272, label %267

267:                                              ; preds = %264
  %268 = bitcast %class.SkCanvas* %240 to void (%class.SkCanvas*)***
  %269 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %268, align 8
  %270 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %269, i64 1
  %271 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %270, align 8
  call void %271(%class.SkCanvas* nonnull %240) #9
  br label %272

272:                                              ; preds = %267, %264
  %273 = atomicrmw add i32* %235, i32 -1 acq_rel
  %274 = icmp eq i32 %273, 1
  br i1 %274, label %275, label %281

275:                                              ; preds = %272
  %276 = bitcast %class.SkImage* %232 to %class.SkRefCntBase*
  %277 = bitcast %class.SkImage* %232 to void (%class.SkRefCntBase*)***
  %278 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %277, align 8
  %279 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %278, i64 2
  %280 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %279, align 8
  call void %280(%class.SkRefCntBase* nonnull %276) #9
  br label %281

281:                                              ; preds = %228, %275, %272, %223
  %282 = load %class.SkCodec*, %class.SkCodec** %47, align 8
  %283 = load %class.SkData*, %class.SkData** %40, align 8
  %284 = getelementptr inbounds %class.SkData, %class.SkData* %283, i64 0, i32 3
  %285 = load i8*, i8** %284, align 8
  %286 = call i32 @_ZN7SkCodec9getPixelsERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec* %282, %struct.SkImageInfo* nonnull dereferenceable(24) %8, i8* %285, i64 %37, %"struct.SkCodec::Options"* nonnull %5) #9
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %290, label %288

288:                                              ; preds = %281
  %289 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %289, align 8
  br label %462

290:                                              ; preds = %281
  %291 = bitcast %class.sk_sp.27* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #9
  %292 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %11, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %292, align 8
  %293 = bitcast %class.sk_sp* %4 to i64*
  %294 = load i64, i64* %293, align 8
  store %class.SkData* null, %class.SkData** %40, align 8
  %295 = bitcast %class.sk_sp* %12 to i64*
  store i64 %294, i64* %295, align 8
  call void @_ZN7SkImage14MakeRasterDataERK11SkImageInfo5sk_spI6SkDataEm(%class.sk_sp.27* nonnull sret %11, %struct.SkImageInfo* nonnull dereferenceable(24) %8, %class.sk_sp* nonnull %12, i64 %37) #9
  %296 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  %297 = load %class.SkData*, %class.SkData** %296, align 8
  %298 = icmp eq %class.SkData* %297, null
  br i1 %298, label %305, label %299

299:                                              ; preds = %290
  %300 = getelementptr inbounds %class.SkData, %class.SkData* %297, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = atomicrmw add i32* %300, i32 -1 acq_rel
  %302 = icmp eq i32 %301, 1
  br i1 %302, label %303, label %305

303:                                              ; preds = %299
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %297) #9
  %304 = bitcast %class.SkData* %297 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %304) #9
  br label %305

305:                                              ; preds = %290, %299, %303
  %306 = icmp eq i32 %50, 1
  br i1 %306, label %416, label %307

307:                                              ; preds = %305
  %308 = zext i32 %83 to i64
  %309 = or i64 %86, %308
  %310 = load %class.SkColorSpace*, %class.SkColorSpace** %163, align 8
  %311 = icmp eq %class.SkColorSpace* %310, null
  br i1 %311, label %312, label %315

312:                                              ; preds = %307
  %313 = load i64, i64* %175, align 8, !noalias !35
  %314 = bitcast %struct.SkImageInfo* %8 to i64*
  store i64 0, i64* %314, align 8
  br label %329

315:                                              ; preds = %307
  %316 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = atomicrmw add i32* %316, i32 1 monotonic, !noalias !35
  %318 = load %class.SkColorSpace*, %class.SkColorSpace** %163, align 8
  %319 = ptrtoint %class.SkColorSpace* %310 to i64
  %320 = load i64, i64* %175, align 8, !noalias !35
  %321 = bitcast %struct.SkImageInfo* %8 to i64*
  store i64 %319, i64* %321, align 8
  %322 = icmp eq %class.SkColorSpace* %318, null
  br i1 %322, label %329, label %323

323:                                              ; preds = %315
  %324 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %318, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = atomicrmw add i32* %324, i32 -1 acq_rel
  %326 = icmp eq i32 %325, 1
  br i1 %326, label %327, label %329

327:                                              ; preds = %323
  %328 = bitcast %class.SkColorSpace* %318 to i8*
  call void @_ZdlPv(i8* %328) #10
  br label %329

329:                                              ; preds = %327, %323, %315, %312
  %330 = phi i64 [ %313, %312 ], [ %320, %315 ], [ %320, %323 ], [ %320, %327 ]
  store i64 %330, i64* %175, align 8
  store i64 %309, i64* %180, align 8
  %331 = sext i32 %83 to i64
  %332 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0
  %333 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %332) #9
  %334 = sext i32 %333 to i64
  %335 = mul nsw i64 %334, %331
  %336 = icmp ult i64 %335, 2147483648
  %337 = select i1 %336, i64 %335, i64 0
  %338 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %8, i64 %337) #9
  %339 = bitcast %class.sk_sp* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %339) #9
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp* nonnull sret %13, i64 %338) #9
  %340 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %341 = bitcast %class.sk_sp* %13 to i64*
  %342 = load i64, i64* %341, align 8
  store %class.SkData* null, %class.SkData** %340, align 8
  %343 = load %class.SkData*, %class.SkData** %40, align 8
  store i64 %342, i64* %293, align 8
  %344 = icmp eq %class.SkData* %343, null
  br i1 %344, label %360, label %345

345:                                              ; preds = %329
  %346 = getelementptr inbounds %class.SkData, %class.SkData* %343, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = atomicrmw add i32* %346, i32 -1 acq_rel
  %348 = icmp eq i32 %347, 1
  br i1 %348, label %349, label %351

349:                                              ; preds = %345
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %343) #9
  %350 = bitcast %class.SkData* %343 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %350) #9
  br label %351

351:                                              ; preds = %345, %349
  %352 = load %class.SkData*, %class.SkData** %340, align 8
  %353 = icmp eq %class.SkData* %352, null
  br i1 %353, label %360, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %class.SkData, %class.SkData* %352, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = atomicrmw add i32* %355, i32 -1 acq_rel
  %357 = icmp eq i32 %356, 1
  br i1 %357, label %358, label %360

358:                                              ; preds = %354
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %352) #9
  %359 = bitcast %class.SkData* %352 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %359) #9
  br label %360

360:                                              ; preds = %329, %351, %354, %358
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %339) #9
  %361 = load %class.SkData*, %class.SkData** %40, align 8
  %362 = getelementptr inbounds %class.SkData, %class.SkData* %361, i64 0, i32 3
  %363 = load i8*, i8** %362, align 8
  %364 = call %class.SkCanvas* @_ZN8SkCanvas16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%struct.SkImageInfo* nonnull dereferenceable(24) %8, i8* %363, i64 %337, %class.SkSurfaceProps* null) #9
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %364, %class.SkMatrix* nonnull dereferenceable(40) %6) #9
  %365 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %365) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %365, i8 0, i64 20, i1 false)
  %366 = load %class.SkImage*, %class.SkImage** %292, align 8
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %364, %class.SkImage* %366, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %14, %class.SkPaint* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %365) #9
  %367 = bitcast %class.sk_sp.27* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %367) #9
  %368 = load i64, i64* %293, align 8
  store %class.SkData* null, %class.SkData** %40, align 8
  %369 = bitcast %class.sk_sp* %16 to i64*
  store i64 %368, i64* %369, align 8
  call void @_ZN7SkImage14MakeRasterDataERK11SkImageInfo5sk_spI6SkDataEm(%class.sk_sp.27* nonnull sret %15, %struct.SkImageInfo* nonnull dereferenceable(24) %8, %class.sk_sp* nonnull %16, i64 %337) #9
  %370 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %15, i64 0, i32 0
  %371 = bitcast %class.sk_sp.27* %15 to i64*
  %372 = load i64, i64* %371, align 8
  store %class.SkImage* null, %class.SkImage** %370, align 8
  %373 = load %class.SkImage*, %class.SkImage** %292, align 8
  %374 = bitcast %class.sk_sp.27* %11 to i64*
  store i64 %372, i64* %374, align 8
  %375 = icmp eq %class.SkImage* %373, null
  br i1 %375, label %399, label %376

376:                                              ; preds = %360
  %377 = getelementptr inbounds %class.SkImage, %class.SkImage* %373, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = atomicrmw add i32* %377, i32 -1 acq_rel
  %379 = icmp eq i32 %378, 1
  br i1 %379, label %380, label %386

380:                                              ; preds = %376
  %381 = bitcast %class.SkImage* %373 to %class.SkRefCntBase*
  %382 = bitcast %class.SkImage* %373 to void (%class.SkRefCntBase*)***
  %383 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %382, align 8
  %384 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %383, i64 2
  %385 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %384, align 8
  call void %385(%class.SkRefCntBase* nonnull %381) #9
  br label %386

386:                                              ; preds = %376, %380
  %387 = load %class.SkImage*, %class.SkImage** %370, align 8
  %388 = icmp eq %class.SkImage* %387, null
  br i1 %388, label %399, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %class.SkImage, %class.SkImage* %387, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = atomicrmw add i32* %390, i32 -1 acq_rel
  %392 = icmp eq i32 %391, 1
  br i1 %392, label %393, label %399

393:                                              ; preds = %389
  %394 = bitcast %class.SkImage* %387 to %class.SkRefCntBase*
  %395 = bitcast %class.SkImage* %387 to void (%class.SkRefCntBase*)***
  %396 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %395, align 8
  %397 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %396, i64 2
  %398 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %397, align 8
  call void %398(%class.SkRefCntBase* nonnull %394) #9
  br label %399

399:                                              ; preds = %360, %386, %389, %393
  %400 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %16, i64 0, i32 0
  %401 = load %class.SkData*, %class.SkData** %400, align 8
  %402 = icmp eq %class.SkData* %401, null
  br i1 %402, label %409, label %403

403:                                              ; preds = %399
  %404 = getelementptr inbounds %class.SkData, %class.SkData* %401, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = atomicrmw add i32* %404, i32 -1 acq_rel
  %406 = icmp eq i32 %405, 1
  br i1 %406, label %407, label %409

407:                                              ; preds = %403
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %401) #9
  %408 = bitcast %class.SkData* %401 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %408) #9
  br label %409

409:                                              ; preds = %399, %403, %407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %367) #9
  %410 = icmp eq %class.SkCanvas* %364, null
  br i1 %410, label %416, label %411

411:                                              ; preds = %409
  %412 = bitcast %class.SkCanvas* %364 to void (%class.SkCanvas*)***
  %413 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %412, align 8
  %414 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %413, i64 1
  %415 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %414, align 8
  call void %415(%class.SkCanvas* nonnull %364) #9
  br label %416

416:                                              ; preds = %411, %409, %305
  %417 = load %class.sk_sp.27*, %class.sk_sp.27** %18, align 8
  %418 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %417, i64 %17
  %419 = icmp eq %class.sk_sp.27* %418, %11
  br i1 %419, label %440, label %420

420:                                              ; preds = %416
  %421 = load %class.SkImage*, %class.SkImage** %292, align 8
  %422 = icmp eq %class.SkImage* %421, null
  br i1 %422, label %426, label %423

423:                                              ; preds = %420
  %424 = getelementptr inbounds %class.SkImage, %class.SkImage* %421, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = atomicrmw add i32* %424, i32 1 monotonic
  br label %426

426:                                              ; preds = %423, %420
  %427 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %418, i64 0, i32 0
  %428 = load %class.SkImage*, %class.SkImage** %427, align 8
  store %class.SkImage* %421, %class.SkImage** %427, align 8
  %429 = icmp eq %class.SkImage* %428, null
  br i1 %429, label %440, label %430

430:                                              ; preds = %426
  %431 = getelementptr inbounds %class.SkImage, %class.SkImage* %428, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = atomicrmw add i32* %431, i32 -1 acq_rel
  %433 = icmp eq i32 %432, 1
  br i1 %433, label %434, label %440

434:                                              ; preds = %430
  %435 = bitcast %class.SkImage* %428 to %class.SkRefCntBase*
  %436 = bitcast %class.SkImage* %428 to void (%class.SkRefCntBase*)***
  %437 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %436, align 8
  %438 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %437, i64 2
  %439 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %438, align 8
  call void %439(%class.SkRefCntBase* nonnull %435) #9
  br label %440

440:                                              ; preds = %416, %426, %430, %434
  %441 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %0, i64 0, i32 0
  %442 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %418, i64 0, i32 0
  %443 = load %class.SkImage*, %class.SkImage** %442, align 8
  %444 = icmp eq %class.SkImage* %443, null
  br i1 %444, label %448, label %445

445:                                              ; preds = %440
  %446 = getelementptr inbounds %class.SkImage, %class.SkImage* %443, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = atomicrmw add i32* %446, i32 1 monotonic
  br label %448

448:                                              ; preds = %440, %445
  store %class.SkImage* %443, %class.SkImage** %441, align 8
  %449 = load %class.SkImage*, %class.SkImage** %292, align 8
  %450 = icmp eq %class.SkImage* %449, null
  br i1 %450, label %461, label %451

451:                                              ; preds = %448
  %452 = getelementptr inbounds %class.SkImage, %class.SkImage* %449, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = atomicrmw add i32* %452, i32 -1 acq_rel
  %454 = icmp eq i32 %453, 1
  br i1 %454, label %455, label %461

455:                                              ; preds = %451
  %456 = bitcast %class.SkImage* %449 to %class.SkRefCntBase*
  %457 = bitcast %class.SkImage* %449 to void (%class.SkRefCntBase*)***
  %458 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %457, align 8
  %459 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %458, i64 2
  %460 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %459, align 8
  call void %460(%class.SkRefCntBase* nonnull %456) #9
  br label %461

461:                                              ; preds = %448, %451, %455
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #9
  br label %462

462:                                              ; preds = %461, %288
  %463 = load %class.SkColorSpace*, %class.SkColorSpace** %163, align 8
  %464 = icmp eq %class.SkColorSpace* %463, null
  br i1 %464, label %471, label %465

465:                                              ; preds = %462
  %466 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %463, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = atomicrmw add i32* %466, i32 -1 acq_rel
  %468 = icmp eq i32 %467, 1
  br i1 %468, label %469, label %471

469:                                              ; preds = %465
  %470 = bitcast %class.SkColorSpace* %463 to i8*
  call void @_ZdlPv(i8* %470) #10
  br label %471

471:                                              ; preds = %462, %465, %469
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %157) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %87) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  %472 = load %class.SkData*, %class.SkData** %40, align 8
  %473 = icmp eq %class.SkData* %472, null
  br i1 %473, label %480, label %474

474:                                              ; preds = %471
  %475 = getelementptr inbounds %class.SkData, %class.SkData* %472, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = atomicrmw add i32* %475, i32 -1 acq_rel
  %477 = icmp eq i32 %476, 1
  br i1 %477, label %478, label %480

478:                                              ; preds = %474
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %472) #9
  %479 = bitcast %class.SkData* %472 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %479) #9
  br label %480

480:                                              ; preds = %471, %474, %478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  br label %481

481:                                              ; preds = %480, %23
  ret void
}

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #2

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp* sret, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare %class.SkCanvas* @_ZN8SkCanvas16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%struct.SkImageInfo* dereferenceable(24), i8*, i64, %class.SkSurfaceProps*) local_unnamed_addr #2

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare i32 @_ZN7SkCodec9getPixelsERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"*) local_unnamed_addr #2

declare void @_ZN7SkImage14MakeRasterDataERK11SkImageInfo5sk_spI6SkDataEm(%class.sk_sp.27* sret, %struct.SkImageInfo* dereferenceable(24), %class.sk_sp*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkAnimCodecPlayer8getFrameEv(%class.sk_sp.27* noalias nocapture sret, %class.SkAnimCodecPlayer*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN17SkAnimCodecPlayer10getFrameAtEi(%class.sk_sp.27* sret %0, %class.SkAnimCodecPlayer* %1, i32 %8)
  br label %20

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %class.sk_sp.27*, %class.sk_sp.27** %10, align 8
  %12 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %0, i64 0, i32 0
  %13 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %11, i64 0, i32 0
  %14 = load %class.SkImage*, %class.SkImage** %13, align 8
  %15 = icmp eq %class.SkImage* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.SkImage, %class.SkImage* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  br label %19

19:                                               ; preds = %9, %16
  store %class.SkImage* %14, %class.SkImage** %12, align 8
  br label %20

20:                                               ; preds = %19, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17SkAnimCodecPlayer4seekEj(%class.SkAnimCodecPlayer* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = urem i32 %1, %4
  %8 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"struct.SkCodec::FrameInfo"*, %"struct.SkCodec::FrameInfo"** %8, align 8
  %10 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast %"struct.SkCodec::FrameInfo"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"struct.SkCodec::FrameInfo"* %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %6
  %17 = sdiv exact i64 %14, 44
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi %"struct.SkCodec::FrameInfo"* [ %9, %16 ], [ %30, %18 ]
  %20 = phi i64 [ %17, %16 ], [ %29, %18 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %19, i64 1
  %23 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %19, i64 %21, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp ule i32 %24, %7
  %26 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %22, i64 %21
  %27 = xor i64 %21, -1
  %28 = add i64 %20, %27
  %29 = select i1 %25, i64 %28, i64 %21
  %30 = select i1 %25, %"struct.SkCodec::FrameInfo"* %26, %"struct.SkCodec::FrameInfo"* %19
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %18

32:                                               ; preds = %18
  %33 = ptrtoint %"struct.SkCodec::FrameInfo"* %30 to i64
  br label %34

34:                                               ; preds = %32, %6
  %35 = phi i64 [ %33, %32 ], [ %13, %6 ]
  %36 = getelementptr inbounds %class.SkAnimCodecPlayer, %class.SkAnimCodecPlayer* %0, i64 0, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = sub i64 %35, %13
  %39 = sdiv exact i64 %38, 44
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %36, align 8
  %41 = icmp ne i32 %37, %40
  br label %42

42:                                               ; preds = %2, %34
  %43 = phi i1 [ %41, %34 ], [ false, %2 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* noalias sret, %struct.SkEncodedInfo*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp.12, align 8
  %4 = alloca %class.sk_sp.12, align 8
  %5 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %7 [
    i32 0, label %11
    i32 2, label %10
  ]

7:                                                ; preds = %2
  %8 = icmp eq i32 %6, 3
  %9 = select i1 %8, i64 2, i64 6
  br label %11

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %2, %10, %7
  %12 = phi i64 [ 11, %2 ], [ %9, %7 ], [ 1, %10 ]
  %13 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i64 4294967296, i64 12884901888
  %17 = bitcast %class.sk_sp.12* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %3, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %18, align 8
  %19 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %19, align 8
  %21 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  store %class.SkColorSpace* null, %class.SkColorSpace** %18, align 8
  br label %29

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %20, i64 0, i32 0
  call void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp.12* nonnull sret %3, %struct.skcms_ICCProfile* dereferenceable(1008) %24) #9
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %class.SkColorSpace* %25 to i64
  br label %54

29:                                               ; preds = %23, %22
  %30 = bitcast %class.sk_sp.12* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.12* nonnull sret %4) #9
  %31 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %4, i64 0, i32 0
  %32 = bitcast %class.sk_sp.12* %4 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %31, align 8
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %35 = bitcast %class.sk_sp.12* %3 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %class.SkColorSpace* %34, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorSpace* %34 to i8*
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %29, %43, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  %53 = load i64, i64* %35, align 8
  br label %54

54:                                               ; preds = %52, %27
  %55 = phi i64 [ %28, %27 ], [ %53, %52 ]
  %56 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = or i64 %16, %12
  %61 = zext i32 %59 to i64
  %62 = shl nuw i64 %61, 32
  %63 = zext i32 %57 to i64
  %64 = or i64 %62, %63
  %65 = bitcast %struct.SkImageInfo* %0 to i64*
  store i64 %55, i64* %65, align 8, !alias.scope !40
  %66 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %67 = bitcast i32* %66 to i64*
  store i64 %60, i64* %67, align 8, !alias.scope !40
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  store i64 %64, i64* %69, align 8, !alias.scope !40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  ret void
}

declare void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp.12* sret, %struct.skcms_ICCProfile* dereferenceable(1008)) local_unnamed_addr #2

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.12* sret) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.25"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.sk_sp.27** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %class.sk_sp.27** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %class.sk_sp.27*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %class.sk_sp.27, %class.sk_sp.27* %13, i64 %18, i32 0
  %20 = bitcast %class.SkImage** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint %class.sk_sp.27* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %180

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to %class.sk_sp.27*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %class.sk_sp.27* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %57, i64 %33
  %59 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %57, i64 %56
  %60 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %58, i64 %1
  %61 = bitcast %class.sk_sp.27* %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #9
  %63 = ptrtoint %class.sk_sp.27* %59 to i64
  %64 = ptrtoint %class.sk_sp.27* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %66 = load %class.sk_sp.27*, %class.sk_sp.27** %65, align 8
  %67 = ptrtoint %class.sk_sp.27* %66 to i64
  %68 = load %class.sk_sp.27*, %class.sk_sp.27** %6, align 8
  %69 = icmp eq %class.sk_sp.27* %68, %66
  br i1 %69, label %151, label %70

70:                                               ; preds = %55
  %71 = getelementptr %class.sk_sp.27, %class.sk_sp.27* %68, i64 -1, i32 0
  %72 = ptrtoint %class.SkImage** %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %70, %78
  %79 = phi %class.sk_sp.27* [ %82, %78 ], [ %58, %70 ]
  %80 = phi %class.sk_sp.27* [ %83, %78 ], [ %68, %70 ]
  %81 = phi i64 [ %88, %78 ], [ %76, %70 ]
  %82 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %79, i64 -1
  %83 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %80, i64 -1
  %84 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %83, i64 0, i32 0
  %85 = bitcast %class.sk_sp.27* %83 to i64*
  %86 = load i64, i64* %85, align 8
  store %class.SkImage* null, %class.SkImage** %84, align 8
  %87 = bitcast %class.sk_sp.27* %82 to i64*
  store i64 %86, i64* %87, align 8
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %78, !llvm.loop !43

90:                                               ; preds = %78, %70
  %91 = phi %class.sk_sp.27* [ undef, %70 ], [ %82, %78 ]
  %92 = phi %class.sk_sp.27* [ %58, %70 ], [ %82, %78 ]
  %93 = phi %class.sk_sp.27* [ %68, %70 ], [ %83, %78 ]
  %94 = icmp ult i64 %73, 56
  br i1 %94, label %147, label %95

95:                                               ; preds = %90, %95
  %96 = phi %class.sk_sp.27* [ %140, %95 ], [ %92, %90 ]
  %97 = phi %class.sk_sp.27* [ %141, %95 ], [ %93, %90 ]
  %98 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %96, i64 -1
  %99 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %97, i64 -1
  %100 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %99, i64 0, i32 0
  %101 = bitcast %class.sk_sp.27* %99 to i64*
  %102 = load i64, i64* %101, align 8
  store %class.SkImage* null, %class.SkImage** %100, align 8
  %103 = bitcast %class.sk_sp.27* %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %96, i64 -2
  %105 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %97, i64 -2
  %106 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %105, i64 0, i32 0
  %107 = bitcast %class.sk_sp.27* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %class.SkImage* null, %class.SkImage** %106, align 8
  %109 = bitcast %class.sk_sp.27* %104 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %96, i64 -3
  %111 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %97, i64 -3
  %112 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %111, i64 0, i32 0
  %113 = bitcast %class.sk_sp.27* %111 to i64*
  %114 = load i64, i64* %113, align 8
  store %class.SkImage* null, %class.SkImage** %112, align 8
  %115 = bitcast %class.sk_sp.27* %110 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %96, i64 -4
  %117 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %97, i64 -4
  %118 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %117, i64 0, i32 0
  %119 = bitcast %class.sk_sp.27* %117 to i64*
  %120 = load i64, i64* %119, align 8
  store %class.SkImage* null, %class.SkImage** %118, align 8
  %121 = bitcast %class.sk_sp.27* %116 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %96, i64 -5
  %123 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %97, i64 -5
  %124 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %123, i64 0, i32 0
  %125 = bitcast %class.sk_sp.27* %123 to i64*
  %126 = load i64, i64* %125, align 8
  store %class.SkImage* null, %class.SkImage** %124, align 8
  %127 = bitcast %class.sk_sp.27* %122 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %96, i64 -6
  %129 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %97, i64 -6
  %130 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %129, i64 0, i32 0
  %131 = bitcast %class.sk_sp.27* %129 to i64*
  %132 = load i64, i64* %131, align 8
  store %class.SkImage* null, %class.SkImage** %130, align 8
  %133 = bitcast %class.sk_sp.27* %128 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %96, i64 -7
  %135 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %97, i64 -7
  %136 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %135, i64 0, i32 0
  %137 = bitcast %class.sk_sp.27* %135 to i64*
  %138 = load i64, i64* %137, align 8
  store %class.SkImage* null, %class.SkImage** %136, align 8
  %139 = bitcast %class.sk_sp.27* %134 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %96, i64 -8
  %141 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %97, i64 -8
  %142 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %141, i64 0, i32 0
  %143 = bitcast %class.sk_sp.27* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %class.SkImage* null, %class.SkImage** %142, align 8
  %145 = bitcast %class.sk_sp.27* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = icmp eq %class.sk_sp.27* %141, %66
  br i1 %146, label %147, label %95

147:                                              ; preds = %95, %90
  %148 = phi %class.sk_sp.27* [ %91, %90 ], [ %140, %95 ]
  %149 = load i64, i64* %30, align 8
  %150 = load %class.sk_sp.27*, %class.sk_sp.27** %6, align 8
  br label %151

151:                                              ; preds = %55, %147
  %152 = phi %class.sk_sp.27* [ %150, %147 ], [ %66, %55 ]
  %153 = phi %class.sk_sp.27* [ %148, %147 ], [ %58, %55 ]
  %154 = phi i64 [ %149, %147 ], [ %67, %55 ]
  %155 = ptrtoint %class.sk_sp.27* %153 to i64
  store i64 %155, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %156 = inttoptr i64 %154 to %class.sk_sp.27*
  %157 = icmp eq %class.sk_sp.27* %152, %156
  br i1 %157, label %176, label %158

158:                                              ; preds = %151, %174
  %159 = phi %class.sk_sp.27* [ %160, %174 ], [ %152, %151 ]
  %160 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %159, i64 -1
  %161 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %160, i64 0, i32 0
  %162 = load %class.SkImage*, %class.SkImage** %161, align 8
  %163 = icmp eq %class.SkImage* %162, null
  br i1 %163, label %174, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %class.SkImage, %class.SkImage* %162, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw add i32* %165, i32 -1 acq_rel
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %168, label %174

168:                                              ; preds = %164
  %169 = bitcast %class.SkImage* %162 to %class.SkRefCntBase*
  %170 = bitcast %class.SkImage* %162 to void (%class.SkRefCntBase*)***
  %171 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %170, align 8
  %172 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %171, i64 2
  %173 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %172, align 8
  tail call void %173(%class.SkRefCntBase* nonnull %169) #9
  br label %174

174:                                              ; preds = %168, %164, %158
  %175 = icmp eq %class.sk_sp.27* %160, %156
  br i1 %175, label %176, label %158

176:                                              ; preds = %174, %151
  %177 = icmp eq i64 %154, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = inttoptr i64 %154 to i8*
  tail call void @_ZdlPv(i8* %179) #10
  br label %180

180:                                              ; preds = %178, %176, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.25"*, %class.sk_sp.27* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.27** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.27** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %class.sk_sp.27*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.27* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.27* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.27* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.SkImage* null, %class.SkImage** %40, align 8
  %43 = bitcast %class.sk_sp.27* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %37, i64 1
  %45 = ptrtoint %class.sk_sp.27* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.27*, %class.sk_sp.27** %46, align 8
  %48 = ptrtoint %class.sk_sp.27* %47 to i64
  %49 = load %class.sk_sp.27*, %class.sk_sp.27** %3, align 8
  %50 = icmp eq %class.sk_sp.27* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.27, %class.sk_sp.27* %49, i64 -1, i32 0
  %53 = ptrtoint %class.SkImage** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.27* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.27* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.27* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.SkImage* null, %class.SkImage** %65, align 8
  %68 = bitcast %class.sk_sp.27* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !45

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.27* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.27* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.27* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.27* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.27* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.27* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.SkImage* null, %class.SkImage** %81, align 8
  %84 = bitcast %class.sk_sp.27* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.27* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.SkImage* null, %class.SkImage** %87, align 8
  %90 = bitcast %class.sk_sp.27* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.27* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.SkImage* null, %class.SkImage** %93, align 8
  %96 = bitcast %class.sk_sp.27* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.27* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.SkImage* null, %class.SkImage** %99, align 8
  %102 = bitcast %class.sk_sp.27* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.27* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.SkImage* null, %class.SkImage** %105, align 8
  %108 = bitcast %class.sk_sp.27* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.27* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.SkImage* null, %class.SkImage** %111, align 8
  %114 = bitcast %class.sk_sp.27* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.27* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.SkImage* null, %class.SkImage** %117, align 8
  %120 = bitcast %class.sk_sp.27* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.27* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.SkImage* null, %class.SkImage** %123, align 8
  %126 = bitcast %class.sk_sp.27* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.27* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.27* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.27*, %class.sk_sp.27** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.27* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.27* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.27* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.27*
  %138 = icmp eq %class.sk_sp.27* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.27* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %141, i64 0, i32 0
  %143 = load %class.SkImage*, %class.SkImage** %142, align 8
  %144 = icmp eq %class.SkImage* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %class.SkImage, %class.SkImage* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %class.SkImage* %143 to %class.SkRefCntBase*
  %151 = bitcast %class.SkImage* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #9
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.27* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #10
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!4 = distinct !{!4, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!5 = distinct !{!5, !6, !"_ZL23SkEncodedOriginToMatrix15SkEncodedOriginii: argument 0"}
!6 = distinct !{!6, !"_ZL23SkEncodedOriginToMatrix15SkEncodedOriginii"}
!7 = !{!8, !5}
!8 = distinct !{!8, !9, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!9 = distinct !{!9, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!10 = !{!11, !5}
!11 = distinct !{!11, !12, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!12 = distinct !{!12, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!13 = !{!14, !5}
!14 = distinct !{!14, !15, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!15 = distinct !{!15, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!16 = !{!5}
!17 = !{!18, !5}
!18 = distinct !{!18, !19, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!19 = distinct !{!19, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!20 = !{!21, !5}
!21 = distinct !{!21, !22, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!22 = distinct !{!22, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!23 = !{!24, !5}
!24 = distinct !{!24, !25, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!25 = distinct !{!25, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!28 = distinct !{!28, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!29 = !{!30, !27}
!30 = distinct !{!30, !31, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!31 = distinct !{!31, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!32 = !{!33, !30, !27}
!33 = distinct !{!33, !34, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!34 = distinct !{!34, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!37 = distinct !{!37, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!38 = distinct !{!38, !39, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!39 = distinct !{!39, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!42 = distinct !{!42, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!43 = distinct !{!43, !44}
!44 = !{!"llvm.loop.unroll.disable"}
!45 = distinct !{!45, !44}
