; ModuleID = '../../ui/wm/core/wm_state.cc'
source_filename = "../../ui/wm/core/wm_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.wm::WMState" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.wm::TransientWindowStackingClient"* }
%"class.wm::TransientWindowStackingClient" = type { %"class.aura::client::WindowStackingClient" }
%"class.aura::client::WindowStackingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.wm::TransientWindowController"* }
%"class.wm::TransientWindowController" = type { %"class.aura::client::TransientWindowClient", %"class.base::ObserverList" }
%"class.aura::client::TransientWindowClient" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.4" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.wm::CaptureController"* }
%"class.wm::CaptureController" = type { %"class.aura::client::CaptureClient", %"class.aura::Window"*, %"class.aura::client::CaptureDelegate"*, %"class.std::__1::map.104", %"class.base::ObserverList.115" }
%"class.aura::client::CaptureClient" = type { i32 (...)** }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.54", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::vector.73", i32, i32, i32, [4 x i8], %"class.base::ObserverList.80", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.97", %"class.base::WeakPtr.103" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.13", %"class.ui::Layer"*, %"class.base::ObserverList.19" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList.19" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.20", i64, i32, [4 x i8] }>
%"class.base::LinkedList.20" = type { %"class.base::LinkNode.21" }
%"class.base::LinkNode.21" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.23", %"class.std::__1::vector.30", %"class.ui::EventHandler"* }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.25" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.45" }
%"class.std::__1::map.45" = type { %"class.std::__1::__tree.46" }
%"class.std::__1::__tree.46" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.80" = type <{ %"class.std::__1::vector.81", %"class.base::LinkedList.94", i64, i32, [4 x i8] }>
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.89" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.84" }
%"struct.std::__1::atomic.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl.87" }
%"struct.std::__1::__cxx_atomic_impl.87" = type { %"struct.std::__1::__cxx_atomic_base_impl.88" }
%"struct.std::__1::__cxx_atomic_base_impl.88" = type { i8 }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.94" = type { %"class.base::LinkNode.95" }
%"class.base::LinkNode.95" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.103" = type { %"class.base::internal::WeakPtrBase" }
%"class.aura::client::CaptureDelegate" = type opaque
%"class.std::__1::map.104" = type { %"class.std::__1::__tree.105" }
%"class.std::__1::__tree.105" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.base::ObserverList.115" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.116", i64, i32, [4 x i8] }>
%"class.base::LinkedList.116" = type { %"class.base::LinkNode.117" }
%"class.base::LinkNode.117" = type { %"class.base::internal::LinkNodeBase" }

@_ZN2wm7WMStateC1Ev = hidden unnamed_addr alias void (%"class.wm::WMState"*), void (%"class.wm::WMState"*)* @_ZN2wm7WMStateC2Ev
@_ZN2wm7WMStateD1Ev = hidden unnamed_addr alias void (%"class.wm::WMState"*), void (%"class.wm::WMState"*)* @_ZN2wm7WMStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm7WMStateC2Ev(%"class.wm::WMState"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #3
  %3 = bitcast i8* %2 to %"class.wm::TransientWindowStackingClient"*
  tail call void @_ZN2wm29TransientWindowStackingClientC1Ev(%"class.wm::TransientWindowStackingClient"* nonnull %3) #4
  %4 = ptrtoint i8* %2 to i64
  %5 = bitcast %"class.wm::WMState"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.wm::WMState", %"class.wm::WMState"* %0, i64 0, i32 1
  %7 = tail call i8* @_Znwm(i64 64) #3
  %8 = bitcast i8* %7 to %"class.wm::TransientWindowController"*
  tail call void @_ZN2wm25TransientWindowControllerC1Ev(%"class.wm::TransientWindowController"* nonnull %8) #4
  %9 = ptrtoint i8* %7 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.1"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = tail call i8* @_Znwm(i64 104) #3
  %12 = bitcast i8* %11 to %"class.wm::CaptureController"*
  tail call void @_ZN2wm17CaptureControllerC1Ev(%"class.wm::CaptureController"* nonnull %12) #4
  %13 = getelementptr inbounds %"class.wm::WMState", %"class.wm::WMState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = bitcast %"class.wm::CaptureController"** %13 to i8**
  store i8* %11, i8** %14, align 8
  %15 = getelementptr inbounds %"class.wm::WMState", %"class.wm::WMState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.wm::TransientWindowStackingClient"*, %"class.wm::TransientWindowStackingClient"** %15, align 8
  %17 = getelementptr inbounds %"class.wm::TransientWindowStackingClient", %"class.wm::TransientWindowStackingClient"* %16, i64 0, i32 0
  tail call void @_ZN4aura6client23SetWindowStackingClientEPNS0_20WindowStackingClientE(%"class.aura::client::WindowStackingClient"* %17) #4
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %6, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.wm::TransientWindowController"*, %"class.wm::TransientWindowController"** %18, align 8
  %20 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %19, i64 0, i32 0
  tail call void @_ZN4aura6client24SetTransientWindowClientEPNS0_21TransientWindowClientE(%"class.aura::client::TransientWindowClient"* %20) #4
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN2wm29TransientWindowStackingClientC1Ev(%"class.wm::TransientWindowStackingClient"*) unnamed_addr #2

declare void @_ZN2wm25TransientWindowControllerC1Ev(%"class.wm::TransientWindowController"*) unnamed_addr #2

declare void @_ZN4aura6client23SetWindowStackingClientEPNS0_20WindowStackingClientE(%"class.aura::client::WindowStackingClient"*) local_unnamed_addr #2

declare void @_ZN4aura6client24SetTransientWindowClientEPNS0_21TransientWindowClientE(%"class.aura::client::TransientWindowClient"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm7WMStateD2Ev(%"class.wm::WMState"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call %"class.aura::client::WindowStackingClient"* @_ZN4aura6client23GetWindowStackingClientEv() #4
  %3 = getelementptr inbounds %"class.wm::WMState", %"class.wm::WMState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.wm::TransientWindowStackingClient"*, %"class.wm::TransientWindowStackingClient"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::TransientWindowStackingClient", %"class.wm::TransientWindowStackingClient"* %4, i64 0, i32 0
  %6 = icmp eq %"class.aura::client::WindowStackingClient"* %2, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call void @_ZN4aura6client23SetWindowStackingClientEPNS0_20WindowStackingClientE(%"class.aura::client::WindowStackingClient"* null) #4
  br label %8

8:                                                ; preds = %7, %1
  %9 = tail call %"class.aura::client::TransientWindowClient"* @_ZN4aura6client24GetTransientWindowClientEv() #4
  %10 = getelementptr inbounds %"class.wm::WMState", %"class.wm::WMState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.wm::TransientWindowController"*, %"class.wm::TransientWindowController"** %10, align 8
  %12 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %11, i64 0, i32 0
  %13 = icmp eq %"class.aura::client::TransientWindowClient"* %9, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN4aura6client24SetTransientWindowClientEPNS0_21TransientWindowClientE(%"class.aura::client::TransientWindowClient"* null) #4
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.wm::WMState", %"class.wm::WMState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.wm::CaptureController"*, %"class.wm::CaptureController"** %16, align 8
  store %"class.wm::CaptureController"* null, %"class.wm::CaptureController"** %16, align 8
  %18 = icmp eq %"class.wm::CaptureController"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.wm::CaptureController"* %17 to void (%"class.wm::CaptureController"*)***
  %21 = load void (%"class.wm::CaptureController"*)**, void (%"class.wm::CaptureController"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.wm::CaptureController"*)*, void (%"class.wm::CaptureController"*)** %21, i64 7
  %23 = load void (%"class.wm::CaptureController"*)*, void (%"class.wm::CaptureController"*)** %22, align 8
  tail call void %23(%"class.wm::CaptureController"* nonnull %17) #4
  br label %24

24:                                               ; preds = %15, %19
  %25 = load %"class.wm::TransientWindowController"*, %"class.wm::TransientWindowController"** %10, align 8
  store %"class.wm::TransientWindowController"* null, %"class.wm::TransientWindowController"** %10, align 8
  %26 = icmp eq %"class.wm::TransientWindowController"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.wm::TransientWindowController"* %25 to void (%"class.wm::TransientWindowController"*)***
  %29 = load void (%"class.wm::TransientWindowController"*)**, void (%"class.wm::TransientWindowController"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.wm::TransientWindowController"*)*, void (%"class.wm::TransientWindowController"*)** %29, i64 8
  %31 = load void (%"class.wm::TransientWindowController"*)*, void (%"class.wm::TransientWindowController"*)** %30, align 8
  tail call void %31(%"class.wm::TransientWindowController"* nonnull %25) #4
  br label %32

32:                                               ; preds = %24, %27
  %33 = load %"class.wm::TransientWindowStackingClient"*, %"class.wm::TransientWindowStackingClient"** %3, align 8
  store %"class.wm::TransientWindowStackingClient"* null, %"class.wm::TransientWindowStackingClient"** %3, align 8
  %34 = icmp eq %"class.wm::TransientWindowStackingClient"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.wm::TransientWindowStackingClient"* %33 to void (%"class.wm::TransientWindowStackingClient"*)***
  %37 = load void (%"class.wm::TransientWindowStackingClient"*)**, void (%"class.wm::TransientWindowStackingClient"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.wm::TransientWindowStackingClient"*)*, void (%"class.wm::TransientWindowStackingClient"*)** %37, i64 2
  %39 = load void (%"class.wm::TransientWindowStackingClient"*)*, void (%"class.wm::TransientWindowStackingClient"*)** %38, align 8
  tail call void %39(%"class.wm::TransientWindowStackingClient"* nonnull %33) #4
  br label %40

40:                                               ; preds = %32, %35
  ret void
}

declare %"class.aura::client::WindowStackingClient"* @_ZN4aura6client23GetWindowStackingClientEv() local_unnamed_addr #2

declare %"class.aura::client::TransientWindowClient"* @_ZN4aura6client24GetTransientWindowClientEv() local_unnamed_addr #2

declare void @_ZN2wm17CaptureControllerC1Ev(%"class.wm::CaptureController"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { builtin nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
