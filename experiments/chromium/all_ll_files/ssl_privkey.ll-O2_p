; ModuleID = '../../third_party/boringssl/src/ssl/ssl_privkey.cc'
source_filename = "../../third_party/boringssl/src/ssl/ssl_privkey.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.bssl::SSL_SIGNATURE_ALGORITHM" = type { i16, i32, i32, %struct.env_md_st* ()*, i8 }
%struct.env_md_st = type opaque
%struct.anon = type { i16, [23 x i8] }
%struct.anon.125 = type { i32, i32, i16 }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.105, i16, [2 x i8], %"class.std::__1::unique_ptr.60", [2 x %"class.std::__1::unique_ptr.106"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.39", %"class.bssl::Array.39", %"class.bssl::Array.39", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.112", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.95", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.113", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.2", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.75", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.29", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.bssl::SSL_CONFIG"* }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.60", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.70", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.75", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %struct.buf_mem_st* }
%struct.buf_mem_st = type { i64, i8*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr", [7 x %"class.std::__1::unique_ptr.80"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.5", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.15", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.48", %"class.bssl::GrowableArray.93", %"class.bssl::Array.39", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.95", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.39", i16, [6 x i8] }>
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.39", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", i8, [32 x i8], %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.18", %struct.ssl_private_key_method_st* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.28 }
%union.anon.28 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.34", i16, %"class.std::__1::unique_ptr.18" }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%union.crypto_mutex_st = type { double, [48 x i8] }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.8", i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.lhash_st_SSL_SESSION = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.bssl::CERT"* }
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.bssl::GrowableArray.93" = type { i64, %"class.bssl::Array.94" }
%"class.bssl::Array.94" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.15", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array.39", %"class.std::__1::unique_ptr.18", %"class.bssl::Array", %"class.bssl::GrowableArray", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.39", %"class.std::__1::unique_ptr.48", i8, i16, [5 x i8] }>
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.47" }
%"class.bssl::Array.47" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%union.anon.105 = type { i32 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.65", %"class.bssl::internal::StackAllocated.111" }
%"class.bssl::internal::StackAllocated.111" = type { %struct.env_md_ctx_st }
%"class.bssl::Array.39" = type { i16*, i64 }
%"class.bssl::internal::StackAllocated.112" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509_NAME = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.evp_pkey_st* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray.98", i32, [4 x i8] }>
%"class.bssl::GrowableArray.98" = type { i64, %"class.bssl::Array.99" }
%"class.bssl::Array.99" = type { %"class.std::__1::unique_ptr.100"*, i64 }
%"class.std::__1::unique_ptr.100" = type opaque
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%"class.bssl::Span.1" = type { i8*, i64 }
%struct.engine_st = type opaque
%struct.rsa_st = type { %struct.rsa_meth_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.crypto_ex_data_st, i32, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_blinding_st**, i8*, i64, i8 }
%struct.rsa_meth_st = type { %struct.openssl_method_common_st, i8*, i32 (%struct.rsa_st*)*, i32 (%struct.rsa_st*)*, i64 (%struct.rsa_st*)*, i32 (i32, i8*, i32, i8*, i32*, %struct.rsa_st*)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i8*, i8*, i64)*, i32 }
%struct.openssl_method_common_st = type { i32, i8 }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.bn_blinding_st = type opaque
%struct.ec_key_st = type opaque
%struct.ec_group_st = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }

@.str = private unnamed_addr constant [51 x i8] c"../../third_party/boringssl/src/ssl/ssl_privkey.cc\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"ecdsa_sha256\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"ecdsa_sha384\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"ecdsa_sha512\00", align 1
@_ZN4bsslL20kSignatureAlgorithmsE = internal unnamed_addr constant [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"] [%"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 -255, i32 6, i32 0, %struct.env_md_st* ()* @EVP_md5_sha1, i8 0 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 513, i32 6, i32 0, %struct.env_md_st* ()* @EVP_sha1, i8 0 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 1025, i32 6, i32 0, %struct.env_md_st* ()* @EVP_sha256, i8 0 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 1281, i32 6, i32 0, %struct.env_md_st* ()* @EVP_sha384, i8 0 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 1537, i32 6, i32 0, %struct.env_md_st* ()* @EVP_sha512, i8 0 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 2052, i32 6, i32 0, %struct.env_md_st* ()* @EVP_sha256, i8 1 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 2053, i32 6, i32 0, %struct.env_md_st* ()* @EVP_sha384, i8 1 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 2054, i32 6, i32 0, %struct.env_md_st* ()* @EVP_sha512, i8 1 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 515, i32 408, i32 0, %struct.env_md_st* ()* @EVP_sha1, i8 0 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 1027, i32 408, i32 415, %struct.env_md_st* ()* @EVP_sha256, i8 0 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 1283, i32 408, i32 715, %struct.env_md_st* ()* @EVP_sha384, i8 0 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 1539, i32 408, i32 716, %struct.env_md_st* ()* @EVP_sha512, i8 0 }, %"struct.bssl::SSL_SIGNATURE_ALGORITHM" { i16 2055, i32 949, i32 0, %struct.env_md_st* ()* null, i8 0 }], align 16
@_ZL24kSignatureAlgorithmNames = internal constant <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }> <{ %struct.anon { i16 -255, [23 x i8] c"rsa_pkcs1_md5_sha1\00\00\00\00\00" }, { i16, <{ [14 x i8], [9 x i8] }> } { i16 513, <{ [14 x i8], [9 x i8] }> <{ [14 x i8] c"rsa_pkcs1_sha1", [9 x i8] zeroinitializer }> }, %struct.anon { i16 1025, [23 x i8] c"rsa_pkcs1_sha256\00\00\00\00\00\00\00" }, %struct.anon { i16 1281, [23 x i8] c"rsa_pkcs1_sha384\00\00\00\00\00\00\00" }, %struct.anon { i16 1537, [23 x i8] c"rsa_pkcs1_sha512\00\00\00\00\00\00\00" }, { i16, <{ [10 x i8], [13 x i8] }> } { i16 515, <{ [10 x i8], [13 x i8] }> <{ [10 x i8] c"ecdsa_sha1", [13 x i8] zeroinitializer }> }, %struct.anon { i16 1027, [23 x i8] c"ecdsa_secp256r1_sha256\00" }, %struct.anon { i16 1283, [23 x i8] c"ecdsa_secp384r1_sha384\00" }, %struct.anon { i16 1539, [23 x i8] c"ecdsa_secp521r1_sha512\00" }, %struct.anon { i16 2052, [23 x i8] c"rsa_pss_rsae_sha256\00\00\00\00" }, %struct.anon { i16 2053, [23 x i8] c"rsa_pss_rsae_sha384\00\00\00\00" }, %struct.anon { i16 2054, [23 x i8] c"rsa_pss_rsae_sha512\00\00\00\00" }, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } { i16 2055, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> <{ i8 101, i8 100, i8 50, i8 53, i8 53, i8 49, i8 57, [16 x i8] zeroinitializer }> } }>, align 16
@_ZL27kSignatureAlgorithmsMapping = internal constant [12 x %struct.anon.125] [%struct.anon.125 { i32 6, i32 64, i16 513 }, %struct.anon.125 { i32 6, i32 672, i16 1025 }, %struct.anon.125 { i32 6, i32 673, i16 1281 }, %struct.anon.125 { i32 6, i32 674, i16 1537 }, %struct.anon.125 { i32 912, i32 672, i16 2052 }, %struct.anon.125 { i32 912, i32 673, i16 2053 }, %struct.anon.125 { i32 912, i32 674, i16 2054 }, %struct.anon.125 { i32 408, i32 64, i16 515 }, %struct.anon.125 { i32 408, i32 672, i16 1027 }, %struct.anon.125 { i32 408, i32 673, i16 1283 }, %struct.anon.125 { i32 408, i32 674, i16 1539 }, %struct.anon.125 { i32 949, i32 0, i16 2055 }], align 16
@.str.5 = private unnamed_addr constant [24 x i8] c"unknown hash:%d pkey:%d\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/internal.h\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"+ found in hash name at offset %zu\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"empty public key type at offset %zu\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"ECDSA\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"unknown public key type '%s'\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"empty element at offset %zu\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"unknown signature algorithm '%s'\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"SHA1\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"SHA256\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"SHA384\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"SHA512\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"unknown hash function '%s'\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"unknown pkey:%d hash:%s\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"substring too long at offset %zu\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"invalid character 0x%02x at offest %zu\00", align 1
@switch.table._ZL18parse_sigalgs_listPN4bssl5ArrayItEEPKc = private unnamed_addr constant [3 x %struct.anon.125*] [%struct.anon.125* getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 4), %struct.anon.125* getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 5), %struct.anon.125* getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 6)], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4bssl25ssl_is_key_type_supportedEi(i32) local_unnamed_addr #0 {
  switch i32 %0, label %2 [
    i32 408, label %3
    i32 6, label %3
    i32 949, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %2
  %4 = phi i1 [ true, %1 ], [ false, %2 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl19ssl_has_private_keyEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %6, align 8
  %8 = icmp eq %struct.evp_pkey_st* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %5, i64 0, i32 5
  %11 = load %struct.ssl_private_key_method_st*, %struct.ssl_private_key_method_st** %10, align 8
  %12 = icmp eq %struct.ssl_private_key_method_st* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZN4bssl19ssl_signing_with_dcEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* %0) #9
  ret i1 %14

15:                                               ; preds = %1, %9
  ret i1 true
}

declare zeroext i1 @_ZN4bssl19ssl_signing_with_dcEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl20ssl_private_key_signEPNS_13SSL_HANDSHAKEEPhPmmtNS_4SpanIKhEE(%"struct.bssl::SSL_HANDSHAKE"*, i8*, i64*, i64, i16 zeroext, %"class.bssl::Span.1"* nocapture readonly byval(%"class.bssl::Span.1") align 8) local_unnamed_addr #1 {
  %7 = alloca %"class.bssl::internal::StackAllocated.111", align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %9 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %11 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %12, align 8
  %14 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %13, i64 0, i32 5
  %15 = load %struct.ssl_private_key_method_st*, %struct.ssl_private_key_method_st** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %16, align 8
  %18 = tail call zeroext i1 @_ZN4bssl19ssl_signing_with_dcEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* %0) #9
  br i1 %18, label %19, label %27

19:                                               ; preds = %6
  %20 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %21 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %20, i64 0, i32 6, i32 0, i32 0, i32 0
  %22 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %21, align 8
  %23 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %22, i64 0, i32 17
  %24 = load %struct.ssl_private_key_method_st*, %struct.ssl_private_key_method_st** %23, align 8
  %25 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %22, i64 0, i32 16, i32 0, i32 0, i32 0
  %26 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %25, align 8
  br label %27

27:                                               ; preds = %19, %6
  %28 = phi %struct.ssl_private_key_method_st* [ %24, %19 ], [ %15, %6 ]
  %29 = phi %struct.evp_pkey_st* [ %26, %19 ], [ %17, %6 ]
  %30 = icmp eq %struct.ssl_private_key_method_st* %28, null
  br i1 %30, label %59, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 1048576
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.ssl_private_key_method_st, %struct.ssl_private_key_method_st* %28, i64 0, i32 2
  %38 = load i32 (%struct.ssl_st*, i8*, i64*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)** %37, align 8
  %39 = tail call i32 %38(%struct.ssl_st* %9, i8* %1, i64* %2, i64 %3) #9
  br label %48

40:                                               ; preds = %31
  %41 = getelementptr inbounds %struct.ssl_private_key_method_st, %struct.ssl_private_key_method_st* %28, i64 0, i32 0
  %42 = load i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)** %41, align 8
  %43 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %5, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %5, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = tail call i32 %42(%struct.ssl_st* %9, i8* %1, i64* %2, i64 %3, i16 zeroext %4, i8* %44, i64 %46) #9
  br label %48

48:                                               ; preds = %40, %36
  %49 = phi i32 [ %39, %36 ], [ %47, %40 ]
  %50 = icmp eq i32 %49, 2
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @ERR_put_error(i32 16, i32 0, i32 287, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 221) #9
  br label %52

52:                                               ; preds = %51, %48
  %53 = icmp eq i32 %49, 1
  %54 = zext i1 %53 to i32
  %55 = load i32, i32* %32, align 8
  %56 = shl nuw nsw i32 %54, 20
  %57 = and i32 %55, -1048577
  %58 = or i32 %57, %56
  store i32 %58, i32* %32, align 8
  br label %75

59:                                               ; preds = %27
  store i64 %3, i64* %2, align 8
  %60 = bitcast %"class.bssl::internal::StackAllocated.111"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #9
  %61 = getelementptr inbounds %"class.bssl::internal::StackAllocated.111", %"class.bssl::internal::StackAllocated.111"* %7, i64 0, i32 0
  %62 = bitcast %"class.bssl::internal::StackAllocated.111"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %61) #9
  %63 = call fastcc zeroext i1 @_ZN4bsslL9setup_ctxEP6ssl_stP13env_md_ctx_stP11evp_pkey_sttb(%struct.ssl_st* %9, %struct.env_md_ctx_st* nonnull %61, %struct.evp_pkey_st* %29, i16 zeroext %4, i1 zeroext false)
  br i1 %63, label %64, label %72

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %5, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %5, i64 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = call i32 @EVP_DigestSign(%struct.env_md_ctx_st* nonnull %61, i8* %1, i64* %2, i8* %66, i64 %68) #9
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 2, i32 0
  br label %72

72:                                               ; preds = %64, %59
  %73 = phi i32 [ 2, %59 ], [ %71, %64 ]
  %74 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #9
  br label %75

75:                                               ; preds = %72, %52
  %76 = phi i32 [ %49, %52 ], [ %73, %72 ]
  ret i32 %76
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL9setup_ctxEP6ssl_stP13env_md_ctx_stP11evp_pkey_sttb(%struct.ssl_st*, %struct.env_md_ctx_st*, %struct.evp_pkey_st*, i16 zeroext, i1 zeroext) unnamed_addr #1 {
  %6 = alloca %struct.evp_pkey_ctx_st*, align 8
  %7 = tail call fastcc zeroext i1 @_ZN4bsslL23pkey_supports_algorithmEPK6ssl_stP11evp_pkey_stt(%struct.ssl_st* %0, %struct.evp_pkey_st* %2, i16 zeroext %3)
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @ERR_put_error(i32 16, i32 0, i32 245, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 175) #9
  br label %54

9:                                                ; preds = %5
  switch i16 %3, label %22 [
    i16 -255, label %23
    i16 513, label %10
    i16 1025, label %11
    i16 1281, label %12
    i16 1537, label %13
    i16 2052, label %14
    i16 2053, label %15
    i16 2054, label %16
    i16 515, label %17
    i16 1027, label %18
    i16 1283, label %19
    i16 1539, label %20
    i16 2055, label %21
  ]

10:                                               ; preds = %9
  br label %23

11:                                               ; preds = %9
  br label %23

12:                                               ; preds = %9
  br label %23

13:                                               ; preds = %9
  br label %23

14:                                               ; preds = %9
  br label %23

15:                                               ; preds = %9
  br label %23

16:                                               ; preds = %9
  br label %23

17:                                               ; preds = %9
  br label %23

18:                                               ; preds = %9
  br label %23

19:                                               ; preds = %9
  br label %23

20:                                               ; preds = %9
  br label %23

21:                                               ; preds = %9
  br label %23

22:                                               ; preds = %9
  br label %23

23:                                               ; preds = %9, %10, %11, %12, %13, %14, %15, %16, %17, %18, %19, %20, %21, %22
  %24 = phi %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 0), %9 ], [ null, %22 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 1), %10 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 2), %11 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 3), %12 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 4), %13 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 5), %14 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 6), %15 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 7), %16 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 8), %17 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 9), %18 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 10), %19 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 11), %20 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 12), %21 ]
  %25 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %24, i64 0, i32 3
  %26 = load %struct.env_md_st* ()*, %struct.env_md_st* ()** %25, align 8
  %27 = icmp eq %struct.env_md_st* ()* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = tail call %struct.env_md_st* %26() #9
  br label %30

30:                                               ; preds = %23, %28
  %31 = phi %struct.env_md_st* [ %29, %28 ], [ null, %23 ]
  %32 = bitcast %struct.evp_pkey_ctx_st** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  store %struct.evp_pkey_ctx_st* inttoptr (i64 -6148914691236517206 to %struct.evp_pkey_ctx_st*), %struct.evp_pkey_ctx_st** %6, align 8
  br i1 %4, label %33, label %36

33:                                               ; preds = %30
  %34 = call i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st* %1, %struct.evp_pkey_ctx_st** nonnull %6, %struct.env_md_st* %31, %struct.engine_st* null, %struct.evp_pkey_st* %2) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %52, label %39

36:                                               ; preds = %30
  %37 = call i32 @EVP_DigestSignInit(%struct.env_md_ctx_st* %1, %struct.evp_pkey_ctx_st** nonnull %6, %struct.env_md_st* %31, %struct.engine_st* null, %struct.evp_pkey_st* %2) #9
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %52, label %39

39:                                               ; preds = %33, %36
  %40 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %24, i64 0, i32 4
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %39
  %44 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %6, align 8
  %45 = call i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st* %44, i32 6) #9
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %6, align 8
  %49 = call i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st* %48, i32 -1) #9
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %47, %39
  br label %52

52:                                               ; preds = %43, %47, %36, %33, %51
  %53 = phi i1 [ true, %51 ], [ false, %33 ], [ false, %36 ], [ false, %47 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %54

54:                                               ; preds = %52, %8
  %55 = phi i1 [ %53, %52 ], [ false, %8 ]
  ret i1 %55
}

declare i32 @EVP_DigestSign(%struct.env_md_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl21ssl_public_key_verifyEP6ssl_stNS_4SpanIKhEEtP11evp_pkey_stS4_(%struct.ssl_st*, i8*, i64, i16 zeroext, %struct.evp_pkey_st*, %"class.bssl::Span.1"* nocapture readonly byval(%"class.bssl::Span.1") align 8) local_unnamed_addr #1 {
  %7 = alloca %"class.bssl::internal::StackAllocated.111", align 8
  %8 = bitcast %"class.bssl::internal::StackAllocated.111"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.bssl::internal::StackAllocated.111", %"class.bssl::internal::StackAllocated.111"* %7, i64 0, i32 0
  %10 = bitcast %"class.bssl::internal::StackAllocated.111"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %9) #9
  %11 = call fastcc zeroext i1 @_ZN4bsslL9setup_ctxEP6ssl_stP13env_md_ctx_stP11evp_pkey_sttb(%struct.ssl_st* %0, %struct.env_md_ctx_st* nonnull %9, %struct.evp_pkey_st* %4, i16 zeroext %3, i1 zeroext true)
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %5, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %5, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = call i32 @EVP_DigestVerify(%struct.env_md_ctx_st* nonnull %9, i8* %1, i64 %2, i8* %14, i64 %16) #9
  %18 = icmp ne i32 %17, 0
  br label %19

19:                                               ; preds = %6, %12
  %20 = phi i1 [ %18, %12 ], [ false, %6 ]
  %21 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #9
  ret i1 %20
}

declare i32 @EVP_DigestVerify(%struct.env_md_ctx_st*, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl23ssl_private_key_decryptEPNS_13SSL_HANDSHAKEEPhPmmNS_4SpanIKhEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8*, i64*, i64, i8*, i64) local_unnamed_addr #1 {
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %8 = load %struct.ssl_st*, %struct.ssl_st** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %10 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %12 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %11, align 8
  %13 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %12, i64 0, i32 5
  %14 = load %struct.ssl_private_key_method_st*, %struct.ssl_private_key_method_st** %13, align 8
  %15 = icmp eq %struct.ssl_private_key_method_st* %14, null
  br i1 %15, label %40, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 1048576
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.ssl_private_key_method_st, %struct.ssl_private_key_method_st* %14, i64 0, i32 2
  %23 = load i32 (%struct.ssl_st*, i8*, i64*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)** %22, align 8
  %24 = tail call i32 %23(%struct.ssl_st* %8, i8* %1, i64* %2, i64 %3) #9
  br label %29

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.ssl_private_key_method_st, %struct.ssl_private_key_method_st* %14, i64 0, i32 1
  %27 = load i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)** %26, align 8
  %28 = tail call i32 %27(%struct.ssl_st* %8, i8* %1, i64* %2, i64 %3, i8* %4, i64 %5) #9
  br label %29

29:                                               ; preds = %25, %21
  %30 = phi i32 [ %24, %21 ], [ %28, %25 ]
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @ERR_put_error(i32 16, i32 0, i32 287, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 268) #9
  br label %33

33:                                               ; preds = %32, %29
  %34 = icmp eq i32 %30, 1
  %35 = zext i1 %34 to i32
  %36 = load i32, i32* %17, align 8
  %37 = shl nuw nsw i32 %35, 20
  %38 = and i32 %36, -1048577
  %39 = or i32 %38, %37
  store i32 %39, i32* %17, align 8
  br label %50

40:                                               ; preds = %6
  %41 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %41, align 8
  %43 = tail call %struct.rsa_st* @EVP_PKEY_get0_RSA(%struct.evp_pkey_st* %42) #9
  %44 = icmp eq %struct.rsa_st* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 277) #9
  br label %50

46:                                               ; preds = %40
  %47 = tail call i32 @RSA_decrypt(%struct.rsa_st* nonnull %43, i64* %2, i8* %1, i64 %3, i8* %4, i64 %5, i32 3) #9
  %48 = icmp eq i32 %47, 0
  %49 = select i1 %48, i32 2, i32 0
  br label %50

50:                                               ; preds = %45, %46, %33
  %51 = phi i32 [ %30, %33 ], [ 2, %45 ], [ %49, %46 ]
  ret i32 %51
}

declare %struct.rsa_st* @EVP_PKEY_get0_RSA(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @RSA_decrypt(%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl44ssl_private_key_supports_signature_algorithmEPNS_13SSL_HANDSHAKEEt(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i16 zeroext) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 38, i32 0, i32 0, i32 0
  %6 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %5, align 8
  %7 = tail call fastcc zeroext i1 @_ZN4bsslL23pkey_supports_algorithmEPK6ssl_stP11evp_pkey_stt(%struct.ssl_st* %4, %struct.evp_pkey_st* %6, i16 zeroext %1)
  br i1 %7, label %8, label %39

8:                                                ; preds = %2
  switch i16 %1, label %21 [
    i16 -255, label %22
    i16 513, label %9
    i16 1025, label %10
    i16 1281, label %11
    i16 1537, label %12
    i16 2052, label %13
    i16 2053, label %14
    i16 2054, label %15
    i16 515, label %16
    i16 1027, label %17
    i16 1283, label %18
    i16 1539, label %19
    i16 2055, label %20
  ]

9:                                                ; preds = %8
  br label %22

10:                                               ; preds = %8
  br label %22

11:                                               ; preds = %8
  br label %22

12:                                               ; preds = %8
  br label %22

13:                                               ; preds = %8
  br label %22

14:                                               ; preds = %8
  br label %22

15:                                               ; preds = %8
  br label %22

16:                                               ; preds = %8
  br label %22

17:                                               ; preds = %8
  br label %22

18:                                               ; preds = %8
  br label %22

19:                                               ; preds = %8
  br label %22

20:                                               ; preds = %8
  br label %22

21:                                               ; preds = %8
  br label %22

22:                                               ; preds = %8, %9, %10, %11, %12, %13, %14, %15, %16, %17, %18, %19, %20, %21
  %23 = phi %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 0), %8 ], [ null, %21 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 1), %9 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 2), %10 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 3), %11 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 4), %12 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 5), %13 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 6), %14 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 7), %15 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 8), %16 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 9), %17 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 10), %18 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 11), %19 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 12), %20 ]
  %24 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %23, i64 0, i32 4
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %22
  %28 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %5, align 8
  %29 = tail call i32 @EVP_PKEY_size(%struct.evp_pkey_st* %28) #9
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %23, i64 0, i32 3
  %32 = load %struct.env_md_st* ()*, %struct.env_md_st* ()** %31, align 8
  %33 = tail call %struct.env_md_st* %32() #9
  %34 = tail call i64 @EVP_MD_size(%struct.env_md_st* %33) #9
  %35 = shl i64 %34, 1
  %36 = add i64 %35, 2
  %37 = icmp ugt i64 %36, %30
  br i1 %37, label %39, label %38

38:                                               ; preds = %22, %27
  br label %39

39:                                               ; preds = %38, %27, %2
  %40 = phi i1 [ false, %2 ], [ true, %38 ], [ false, %27 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL23pkey_supports_algorithmEPK6ssl_stP11evp_pkey_stt(%struct.ssl_st*, %struct.evp_pkey_st*, i16 zeroext) unnamed_addr #1 {
  switch i16 %2, label %42 [
    i16 -255, label %16
    i16 513, label %4
    i16 1025, label %5
    i16 1281, label %6
    i16 1537, label %7
    i16 2052, label %8
    i16 2053, label %9
    i16 2054, label %10
    i16 515, label %11
    i16 1027, label %12
    i16 1283, label %13
    i16 1539, label %14
    i16 2055, label %15
  ]

4:                                                ; preds = %3
  br label %16

5:                                                ; preds = %3
  br label %16

6:                                                ; preds = %3
  br label %16

7:                                                ; preds = %3
  br label %16

8:                                                ; preds = %3
  br label %16

9:                                                ; preds = %3
  br label %16

10:                                               ; preds = %3
  br label %16

11:                                               ; preds = %3
  br label %16

12:                                               ; preds = %3
  br label %16

13:                                               ; preds = %3
  br label %16

14:                                               ; preds = %3
  br label %16

15:                                               ; preds = %3
  br label %16

16:                                               ; preds = %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %15
  %17 = phi %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 12), %15 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 11), %14 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 10), %13 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 9), %12 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 8), %11 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 7), %10 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 6), %9 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 5), %8 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 4), %7 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 3), %6 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 2), %5 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 1), %4 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 0), %3 ]
  %18 = tail call i32 @EVP_PKEY_id(%struct.evp_pkey_st* %1) #9
  %19 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %17, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %42

22:                                               ; preds = %16
  %23 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #9
  %24 = icmp ugt i16 %23, 771
  br i1 %24, label %25, label %41

25:                                               ; preds = %22
  %26 = load i32, i32* %19, align 4
  switch i32 %26, label %41 [
    i32 6, label %27
    i32 408, label %31
  ]

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %17, i64 0, i32 4
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %42, label %41

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %17, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = tail call %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st* %1) #9
  %37 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %36) #9
  %38 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* %37) #9
  %39 = load i32, i32* %32, align 8
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %25, %27, %35, %22
  br label %42

42:                                               ; preds = %3, %31, %35, %27, %16, %41
  %43 = phi i1 [ true, %41 ], [ false, %16 ], [ false, %27 ], [ false, %35 ], [ false, %31 ], [ false, %3 ]
  ret i1 %43
}

declare i32 @EVP_PKEY_size(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i64 @EVP_MD_size(%struct.env_md_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_use_RSAPrivateKey(%struct.ssl_st* nocapture readonly, %struct.rsa_st*) local_unnamed_addr #1 {
  %3 = icmp eq %struct.rsa_st* %1, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %7 = icmp eq %"struct.bssl::SSL_CONFIG"* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4, %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 67, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 318) #9
  br label %25

9:                                                ; preds = %4
  %10 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #9
  %11 = icmp eq %struct.evp_pkey_st* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  tail call void @ERR_put_error(i32 16, i32 0, i32 6, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 325) #9
  br label %25

13:                                               ; preds = %9
  %14 = tail call i32 @EVP_PKEY_set1_RSA(%struct.evp_pkey_st* nonnull %10, %struct.rsa_st* nonnull %1) #9
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %13
  %17 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %18 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %17, i64 0, i32 6, i32 0, i32 0, i32 0
  %19 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %18, align 8
  %20 = tail call fastcc zeroext i1 @_ZN4bsslL12ssl_set_pkeyEPNS_4CERTEP11evp_pkey_st(%"struct.bssl::CERT"* %19, %struct.evp_pkey_st* nonnull %10)
  %21 = zext i1 %20 to i32
  br label %23

22:                                               ; preds = %13
  tail call void @ERR_put_error(i32 16, i32 0, i32 6, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 325) #9
  br label %23

23:                                               ; preds = %22, %16
  %24 = phi i32 [ %21, %16 ], [ 0, %22 ]
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %10) #9
  br label %25

25:                                               ; preds = %23, %12, %8
  %26 = phi i32 [ 0, %8 ], [ %24, %23 ], [ 0, %12 ]
  ret i32 %26
}

declare %struct.evp_pkey_st* @EVP_PKEY_new() local_unnamed_addr #2

declare i32 @EVP_PKEY_set1_RSA(%struct.evp_pkey_st*, %struct.rsa_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL12ssl_set_pkeyEPNS_4CERTEP11evp_pkey_st(%"struct.bssl::CERT"*, %struct.evp_pkey_st*) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %5 [
    i32 408, label %6
    i32 6, label %6
    i32 949, label %6
  ]

5:                                                ; preds = %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 228, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 81) #9
  br label %27

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %7, align 8
  %9 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = bitcast %struct.stack_st_CRYPTO_BUFFER* %8 to %struct.stack_st*
  %12 = tail call i8* @sk_value(%struct.stack_st* nonnull %11, i64 0) #9
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZN4bssl26ssl_cert_check_private_keyEPKNS_4CERTEPK11evp_pkey_st(%"struct.bssl::CERT"* %0, %struct.evp_pkey_st* %1) #9
  br i1 %15, label %16, label %27

16:                                               ; preds = %6, %10, %14
  %17 = icmp eq %struct.evp_pkey_st* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = tail call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* nonnull %1) #9
  br label %20

20:                                               ; preds = %16, %18
  %21 = ptrtoint %struct.evp_pkey_st* %1 to i64
  %22 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %22, align 8
  %24 = bitcast %"struct.bssl::CERT"* %0 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %struct.evp_pkey_st* %23, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %23) #9
  br label %27

27:                                               ; preds = %20, %26, %14, %5
  %28 = phi i1 [ false, %5 ], [ false, %14 ], [ true, %26 ], [ true, %20 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_use_RSAPrivateKey_ASN1(%struct.ssl_st* nocapture readonly, i8*, i64) local_unnamed_addr #1 {
  %4 = tail call %struct.rsa_st* @RSA_private_key_from_bytes(i8* %1, i64 %2) #9
  %5 = icmp eq %struct.rsa_st* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 12, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 335) #9
  br label %9

7:                                                ; preds = %3
  %8 = tail call i32 @SSL_use_RSAPrivateKey(%struct.ssl_st* %0, %struct.rsa_st* nonnull %4)
  tail call void @RSA_free(%struct.rsa_st* nonnull %4) #9
  br label %9

9:                                                ; preds = %6, %7
  %10 = phi i32 [ 0, %6 ], [ %8, %7 ]
  ret i32 %10
}

declare %struct.rsa_st* @RSA_private_key_from_bytes(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_use_PrivateKey(%struct.ssl_st* nocapture readonly, %struct.evp_pkey_st*) local_unnamed_addr #1 {
  %3 = icmp eq %struct.evp_pkey_st* %1, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %7 = icmp eq %"struct.bssl::SSL_CONFIG"* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4, %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 67, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 344) #9
  br label %14

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %10, align 8
  %12 = tail call fastcc zeroext i1 @_ZN4bsslL12ssl_set_pkeyEPNS_4CERTEP11evp_pkey_st(%"struct.bssl::CERT"* %11, %struct.evp_pkey_st* nonnull %1)
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %8
  %15 = phi i32 [ 0, %8 ], [ %13, %9 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_use_PrivateKey_ASN1(i32, %struct.ssl_st* nocapture readonly, i8*, i64) local_unnamed_addr #1 {
  %5 = alloca i8*, align 8
  %6 = icmp slt i64 %3, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354) #9
  br label %32

8:                                                ; preds = %4
  %9 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store i8* %2, i8** %5, align 8
  %10 = call %struct.evp_pkey_st* @d2i_PrivateKey(i32 %0, %struct.evp_pkey_st** null, i8** nonnull %5, i64 %3) #9
  %11 = icmp eq %struct.evp_pkey_st* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  call void @ERR_put_error(i32 16, i32 0, i32 12, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 361) #9
  br label %30

13:                                               ; preds = %8
  %14 = load i8*, i8** %5, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 %3
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %17, label %27

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %18, align 8
  %20 = icmp eq %"struct.bssl::SSL_CONFIG"* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  call void @ERR_put_error(i32 16, i32 0, i32 67, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 344) #9
  br label %28

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %19, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %23, align 8
  %25 = call fastcc zeroext i1 @_ZN4bsslL12ssl_set_pkeyEPNS_4CERTEP11evp_pkey_st(%"struct.bssl::CERT"* %24, %struct.evp_pkey_st* nonnull %10) #9
  %26 = zext i1 %25 to i32
  br label %28

27:                                               ; preds = %13
  call void @ERR_put_error(i32 16, i32 0, i32 12, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 361) #9
  br label %28

28:                                               ; preds = %21, %22, %27
  %29 = phi i32 [ 0, %27 ], [ %26, %22 ], [ 0, %21 ]
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %10) #9
  br label %30

30:                                               ; preds = %12, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %32

32:                                               ; preds = %30, %7
  %33 = phi i32 [ 0, %7 ], [ %31, %30 ]
  ret i32 %33
}

declare %struct.evp_pkey_st* @d2i_PrivateKey(i32, %struct.evp_pkey_st**, i8**, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_use_RSAPrivateKey(%struct.ssl_ctx_st* nocapture readonly, %struct.rsa_st*) local_unnamed_addr #1 {
  %3 = icmp eq %struct.rsa_st* %1, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 67, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 370) #9
  br label %20

5:                                                ; preds = %2
  %6 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #9
  %7 = icmp eq %struct.evp_pkey_st* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @ERR_put_error(i32 16, i32 0, i32 6, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 377) #9
  br label %20

9:                                                ; preds = %5
  %10 = tail call i32 @EVP_PKEY_set1_RSA(%struct.evp_pkey_st* nonnull %6, %struct.rsa_st* nonnull %1) #9
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %14 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %13, align 8
  %15 = tail call fastcc zeroext i1 @_ZN4bsslL12ssl_set_pkeyEPNS_4CERTEP11evp_pkey_st(%"struct.bssl::CERT"* %14, %struct.evp_pkey_st* nonnull %6)
  %16 = zext i1 %15 to i32
  br label %18

17:                                               ; preds = %9
  tail call void @ERR_put_error(i32 16, i32 0, i32 6, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 377) #9
  br label %18

18:                                               ; preds = %17, %12
  %19 = phi i32 [ %16, %12 ], [ 0, %17 ]
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %6) #9
  br label %20

20:                                               ; preds = %18, %8, %4
  %21 = phi i32 [ 0, %4 ], [ %19, %18 ], [ 0, %8 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_use_RSAPrivateKey_ASN1(%struct.ssl_ctx_st* nocapture readonly, i8*, i64) local_unnamed_addr #1 {
  %4 = tail call %struct.rsa_st* @RSA_private_key_from_bytes(i8* %1, i64 %2) #9
  %5 = icmp eq %struct.rsa_st* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 12, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 388) #9
  br label %9

7:                                                ; preds = %3
  %8 = tail call i32 @SSL_CTX_use_RSAPrivateKey(%struct.ssl_ctx_st* %0, %struct.rsa_st* nonnull %4)
  tail call void @RSA_free(%struct.rsa_st* nonnull %4) #9
  br label %9

9:                                                ; preds = %6, %7
  %10 = phi i32 [ 0, %6 ], [ %8, %7 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_use_PrivateKey(%struct.ssl_ctx_st* nocapture readonly, %struct.evp_pkey_st*) local_unnamed_addr #1 {
  %3 = icmp eq %struct.evp_pkey_st* %1, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 67, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 397) #9
  br label %10

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %6, align 8
  %8 = tail call fastcc zeroext i1 @_ZN4bsslL12ssl_set_pkeyEPNS_4CERTEP11evp_pkey_st(%"struct.bssl::CERT"* %7, %struct.evp_pkey_st* nonnull %1)
  %9 = zext i1 %8 to i32
  br label %10

10:                                               ; preds = %5, %4
  %11 = phi i32 [ 0, %4 ], [ %9, %5 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_use_PrivateKey_ASN1(i32, %struct.ssl_ctx_st* nocapture readonly, i8*, i64) local_unnamed_addr #1 {
  %5 = alloca i8*, align 8
  %6 = icmp slt i64 %3, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 407) #9
  br label %27

8:                                                ; preds = %4
  %9 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store i8* %2, i8** %5, align 8
  %10 = call %struct.evp_pkey_st* @d2i_PrivateKey(i32 %0, %struct.evp_pkey_st** null, i8** nonnull %5, i64 %3) #9
  %11 = icmp eq %struct.evp_pkey_st* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  call void @ERR_put_error(i32 16, i32 0, i32 12, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 414) #9
  br label %25

13:                                               ; preds = %8
  %14 = load i8*, i8** %5, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 %3
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %1, i64 0, i32 37, i32 0, i32 0, i32 0
  %19 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %18, align 8
  %20 = call fastcc zeroext i1 @_ZN4bsslL12ssl_set_pkeyEPNS_4CERTEP11evp_pkey_st(%"struct.bssl::CERT"* %19, %struct.evp_pkey_st* nonnull %10) #9
  %21 = zext i1 %20 to i32
  br label %23

22:                                               ; preds = %13
  call void @ERR_put_error(i32 16, i32 0, i32 12, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 414) #9
  br label %23

23:                                               ; preds = %22, %17
  %24 = phi i32 [ %21, %17 ], [ 0, %22 ]
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %10) #9
  br label %25

25:                                               ; preds = %12, %23
  %26 = phi i32 [ %24, %23 ], [ 0, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %27

27:                                               ; preds = %25, %7
  %28 = phi i32 [ 0, %7 ], [ %26, %25 ]
  ret i32 %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_private_key_method(%struct.ssl_st* nocapture readonly, %struct.ssl_private_key_method_st*) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 5
  store %struct.ssl_private_key_method_st* %1, %struct.ssl_private_key_method_st** %9, align 8
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_set_private_key_method(%struct.ssl_ctx_st* nocapture readonly, %struct.ssl_private_key_method_st*) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 5
  store %struct.ssl_private_key_method_st* %1, %struct.ssl_private_key_method_st** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @SSL_get_signature_algorithm_name(i16 zeroext, i32) local_unnamed_addr #5 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  switch i16 %0, label %23 [
    i16 1027, label %21
    i16 1283, label %5
    i16 1539, label %6
    i16 -255, label %8
    i16 513, label %9
    i16 1025, label %10
    i16 1281, label %11
    i16 1537, label %12
    i16 515, label %13
    i16 2052, label %17
    i16 2053, label %18
    i16 2054, label %19
    i16 2055, label %20
  ]

5:                                                ; preds = %4
  br label %21

6:                                                ; preds = %4
  br label %21

7:                                                ; preds = %2
  switch i16 %0, label %23 [
    i16 -255, label %8
    i16 513, label %21
    i16 1025, label %10
    i16 1281, label %11
    i16 1537, label %12
    i16 515, label %13
    i16 1027, label %14
    i16 1283, label %15
    i16 1539, label %16
    i16 2052, label %17
    i16 2053, label %18
    i16 2054, label %19
    i16 2055, label %20
  ]

8:                                                ; preds = %4, %7
  br label %21

9:                                                ; preds = %4
  br label %21

10:                                               ; preds = %4, %7
  br label %21

11:                                               ; preds = %4, %7
  br label %21

12:                                               ; preds = %4, %7
  br label %21

13:                                               ; preds = %4, %7
  br label %21

14:                                               ; preds = %7
  br label %21

15:                                               ; preds = %7
  br label %21

16:                                               ; preds = %7
  br label %21

17:                                               ; preds = %4, %7
  br label %21

18:                                               ; preds = %4, %7
  br label %21

19:                                               ; preds = %4, %7
  br label %21

20:                                               ; preds = %4, %7
  br label %21

21:                                               ; preds = %4, %7, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %23, %5, %6
  %22 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), %6 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), %5 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), %4 ], [ null, %23 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 0, i32 1, i64 0), %8 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 1, i32 1, i32 0, i64 0), %7 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 1, i32 1, i32 0, i64 0), %9 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 2, i32 1, i64 0), %10 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 3, i32 1, i64 0), %11 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 4, i32 1, i64 0), %12 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 5, i32 1, i32 0, i64 0), %13 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 6, i32 1, i64 0), %14 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 7, i32 1, i64 0), %15 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 8, i32 1, i64 0), %16 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 9, i32 1, i64 0), %17 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 10, i32 1, i64 0), %18 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 11, i32 1, i64 0), %19 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 12, i32 1, i32 0), %20 ]
  ret i8* %22

23:                                               ; preds = %4, %7
  br label %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_signature_algorithm_key_type(i16 zeroext) local_unnamed_addr #5 {
  switch i16 %0, label %18 [
    i16 -255, label %14
    i16 513, label %2
    i16 1025, label %3
    i16 1281, label %4
    i16 1537, label %5
    i16 2052, label %6
    i16 2053, label %7
    i16 2054, label %8
    i16 515, label %9
    i16 1027, label %10
    i16 1283, label %11
    i16 1539, label %12
    i16 2055, label %13
  ]

2:                                                ; preds = %1
  br label %14

3:                                                ; preds = %1
  br label %14

4:                                                ; preds = %1
  br label %14

5:                                                ; preds = %1
  br label %14

6:                                                ; preds = %1
  br label %14

7:                                                ; preds = %1
  br label %14

8:                                                ; preds = %1
  br label %14

9:                                                ; preds = %1
  br label %14

10:                                               ; preds = %1
  br label %14

11:                                               ; preds = %1
  br label %14

12:                                               ; preds = %1
  br label %14

13:                                               ; preds = %1
  br label %14

14:                                               ; preds = %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13
  %15 = phi %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 12), %13 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 11), %12 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 10), %11 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 9), %10 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 8), %9 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 7), %8 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 6), %7 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 5), %6 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 4), %5 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 3), %4 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 2), %3 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 1), %2 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 0), %1 ]
  %16 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %1, %14
  %19 = phi i32 [ %17, %14 ], [ 0, %1 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.env_md_st* @SSL_get_signature_algorithm_digest(i16 zeroext) local_unnamed_addr #1 {
  switch i16 %0, label %21 [
    i16 -255, label %14
    i16 513, label %2
    i16 1025, label %3
    i16 1281, label %4
    i16 1537, label %5
    i16 2052, label %6
    i16 2053, label %7
    i16 2054, label %8
    i16 515, label %9
    i16 1027, label %10
    i16 1283, label %11
    i16 1539, label %12
    i16 2055, label %13
  ]

2:                                                ; preds = %1
  br label %14

3:                                                ; preds = %1
  br label %14

4:                                                ; preds = %1
  br label %14

5:                                                ; preds = %1
  br label %14

6:                                                ; preds = %1
  br label %14

7:                                                ; preds = %1
  br label %14

8:                                                ; preds = %1
  br label %14

9:                                                ; preds = %1
  br label %14

10:                                               ; preds = %1
  br label %14

11:                                               ; preds = %1
  br label %14

12:                                               ; preds = %1
  br label %14

13:                                               ; preds = %1
  br label %14

14:                                               ; preds = %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13
  %15 = phi %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 12), %13 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 11), %12 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 10), %11 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 9), %10 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 8), %9 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 7), %8 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 6), %7 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 5), %6 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 4), %5 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 3), %4 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 2), %3 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 1), %2 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 0), %1 ]
  %16 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %15, i64 0, i32 3
  %17 = load %struct.env_md_st* ()*, %struct.env_md_st* ()** %16, align 8
  %18 = icmp eq %struct.env_md_st* ()* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = tail call %struct.env_md_st* %17() #9
  br label %21

21:                                               ; preds = %1, %14, %19
  %22 = phi %struct.env_md_st* [ %20, %19 ], [ null, %14 ], [ null, %1 ]
  ret %struct.env_md_st* %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_is_signature_algorithm_rsa_pss(i16 zeroext) local_unnamed_addr #5 {
  switch i16 %0, label %19 [
    i16 -255, label %14
    i16 513, label %2
    i16 1025, label %3
    i16 1281, label %4
    i16 1537, label %5
    i16 2052, label %6
    i16 2053, label %7
    i16 2054, label %8
    i16 515, label %9
    i16 1027, label %10
    i16 1283, label %11
    i16 1539, label %12
    i16 2055, label %13
  ]

2:                                                ; preds = %1
  br label %14

3:                                                ; preds = %1
  br label %14

4:                                                ; preds = %1
  br label %14

5:                                                ; preds = %1
  br label %14

6:                                                ; preds = %1
  br label %14

7:                                                ; preds = %1
  br label %14

8:                                                ; preds = %1
  br label %14

9:                                                ; preds = %1
  br label %14

10:                                               ; preds = %1
  br label %14

11:                                               ; preds = %1
  br label %14

12:                                               ; preds = %1
  br label %14

13:                                               ; preds = %1
  br label %14

14:                                               ; preds = %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13
  %15 = phi %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 12), %13 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 11), %12 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 10), %11 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 9), %10 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 8), %9 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 7), %8 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 6), %7 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 5), %6 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 4), %5 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 3), %4 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 2), %3 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 1), %2 ], [ getelementptr inbounds ([13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"], [13 x %"struct.bssl::SSL_SIGNATURE_ALGORITHM"]* @_ZN4bsslL20kSignatureAlgorithmsE, i64 0, i64 0), %1 ]
  %16 = getelementptr inbounds %"struct.bssl::SSL_SIGNATURE_ALGORITHM", %"struct.bssl::SSL_SIGNATURE_ALGORITHM"* %15, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = zext i8 %17 to i32
  br label %19

19:                                               ; preds = %1, %14
  %20 = phi i32 [ %18, %14 ], [ 0, %1 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_signing_algorithm_prefs(%struct.ssl_ctx_st* nocapture readonly, i16*, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %5, i64 0, i32 7
  %7 = bitcast %"class.bssl::Array.39"* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @OPENSSL_free(i8* %8) #9
  %9 = bitcast %"class.bssl::Array.39"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #9
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = icmp slt i64 %2, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %22

14:                                               ; preds = %11
  %15 = shl i64 %2, 1
  %16 = tail call i8* @OPENSSL_malloc(i64 %15) #9
  store i8* %16, i8** %7, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %5, i64 0, i32 7, i32 1
  store i64 %2, i64* %20, align 8
  %21 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 %21, i64 %15, i1 false) #9
  br label %22

22:                                               ; preds = %3, %13, %18, %19
  %23 = phi i32 [ 0, %13 ], [ 0, %18 ], [ 1, %19 ], [ 1, %3 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_signing_algorithm_prefs(%struct.ssl_st* nocapture readonly, i16*, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %9, i64 0, i32 7
  %11 = bitcast %"class.bssl::Array.39"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @OPENSSL_free(i8* %12) #9
  %13 = bitcast %"class.bssl::Array.39"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  %14 = icmp eq i64 %2, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %7
  %16 = icmp slt i64 %2, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %26

18:                                               ; preds = %15
  %19 = shl i64 %2, 1
  %20 = tail call i8* @OPENSSL_malloc(i64 %19) #9
  store i8* %20, i8** %11, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %9, i64 0, i32 7, i32 1
  store i64 %2, i64* %24, align 8
  %25 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %25, i64 %19, i1 false) #9
  br label %26

26:                                               ; preds = %23, %22, %17, %7, %3
  %27 = phi i32 [ 0, %3 ], [ 0, %17 ], [ 0, %22 ], [ 1, %23 ], [ 1, %7 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set1_sigalgs(%struct.ssl_ctx_st* nocapture, i32* nocapture readonly, i64) local_unnamed_addr #1 {
  %4 = alloca %"class.bssl::Array.39", align 8
  %5 = bitcast %"class.bssl::Array.39"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #9
  %6 = call fastcc zeroext i1 @_ZL18parse_sigalg_pairsPN4bssl5ArrayItEEPKim(%"class.bssl::Array.39"* nonnull %4, i32* %1, i64 %2)
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.bssl::Array.39"* %4 to i8**
  %9 = load i8*, i8** %8, align 8
  br label %47

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %4, i64 0, i32 1
  %13 = load i16*, i16** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = tail call fastcc zeroext i1 @_ZL14sigalgs_uniqueN4bssl4SpanIKtEE(i16* %13, i64 %14)
  %16 = bitcast i16* %13 to i8*
  br i1 %15, label %17, label %47

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %19 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %18, align 8
  %20 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %19, i64 0, i32 7
  %21 = bitcast %"class.bssl::Array.39"* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @OPENSSL_free(i8* %22) #9
  %23 = bitcast %"class.bssl::Array.39"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #9
  %24 = icmp eq i64 %14, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %17
  %26 = icmp slt i64 %14, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %47

28:                                               ; preds = %25
  %29 = shl i64 %14, 1
  %30 = tail call i8* @OPENSSL_malloc(i64 %29) #9
  store i8* %30, i8** %21, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %47

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %19, i64 0, i32 7, i32 1
  store i64 %14, i64* %34, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 %16, i64 %29, i1 false) #9
  br label %35

35:                                               ; preds = %33, %17
  %36 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 76
  %37 = bitcast %"class.bssl::Array.39"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @OPENSSL_free(i8* %38) #9
  %39 = bitcast %"class.bssl::Array.39"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #9
  br i1 %24, label %47, label %40

40:                                               ; preds = %35
  %41 = shl i64 %14, 1
  %42 = tail call i8* @OPENSSL_malloc(i64 %41) #9
  store i8* %42, i8** %37, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 76, i32 1
  store i64 %14, i64* %45, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %16, i64 %41, i1 false) #9
  br label %47

46:                                               ; preds = %40
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %47

47:                                               ; preds = %10, %7, %32, %27, %46, %44, %35
  %48 = phi i8* [ %9, %7 ], [ %16, %46 ], [ %16, %44 ], [ %16, %35 ], [ %16, %27 ], [ %16, %32 ], [ %16, %10 ]
  %49 = phi i32 [ 0, %7 ], [ 0, %46 ], [ 1, %44 ], [ 1, %35 ], [ 0, %27 ], [ 0, %32 ], [ 0, %10 ]
  tail call void @OPENSSL_free(i8* %48) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL18parse_sigalg_pairsPN4bssl5ArrayItEEPKim(%"class.bssl::Array.39"* nocapture, i32* nocapture readonly, i64) unnamed_addr #1 {
  %4 = and i64 %2, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %50

6:                                                ; preds = %3
  %7 = lshr i64 %2, 1
  %8 = bitcast %"class.bssl::Array.39"* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @OPENSSL_free(i8* %9) #9
  %10 = bitcast %"class.bssl::Array.39"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #9
  %11 = icmp eq i64 %7, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = and i64 %2, -2
  %14 = tail call i8* @OPENSSL_malloc(i64 %13) #9
  store i8* %14, i8** %8, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %50

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %0, i64 0, i32 1
  store i64 %7, i64* %18, align 8
  br label %19

19:                                               ; preds = %6, %17
  %20 = icmp eq i64 %2, 0
  br i1 %20, label %50, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %0, i64 0, i32 0
  br label %23

23:                                               ; preds = %21, %41
  %24 = phi i64 [ 0, %21 ], [ %48, %41 ]
  %25 = getelementptr inbounds i32, i32* %1, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = or i64 %24, 1
  %28 = getelementptr inbounds i32, i32* %1, i64 %27
  %29 = load i32, i32* %28, align 4
  switch i32 %29, label %58 [
    i32 6, label %30
    i32 912, label %52
    i32 408, label %55
    i32 949, label %56
  ]

30:                                               ; preds = %23
  switch i32 %26, label %58 [
    i32 64, label %41
    i32 672, label %31
    i32 673, label %32
    i32 674, label %33
  ]

31:                                               ; preds = %30
  br label %41

32:                                               ; preds = %30
  br label %41

33:                                               ; preds = %30
  br label %41

34:                                               ; preds = %55
  br label %41

35:                                               ; preds = %55
  br label %41

36:                                               ; preds = %55
  br label %41

37:                                               ; preds = %52
  %38 = sext i32 %53 to i64
  %39 = getelementptr inbounds [3 x %struct.anon.125*], [3 x %struct.anon.125*]* @switch.table._ZL18parse_sigalgs_listPN4bssl5ArrayItEEPKc, i64 0, i64 %38
  %40 = load %struct.anon.125*, %struct.anon.125** %39, align 8
  br label %41

41:                                               ; preds = %37, %55, %36, %35, %34, %30, %33, %32, %31, %56
  %42 = phi %struct.anon.125* [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 0), %30 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 7), %55 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 11), %56 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 1), %31 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 2), %32 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 3), %33 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 8), %34 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 9), %35 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 10), %36 ], [ %40, %37 ]
  %43 = getelementptr inbounds %struct.anon.125, %struct.anon.125* %42, i64 0, i32 2
  %44 = load i16, i16* %43, align 4
  %45 = lshr exact i64 %24, 1
  %46 = load i16*, i16** %22, align 8
  %47 = getelementptr inbounds i16, i16* %46, i64 %45
  store i16 %44, i16* %47, align 2
  %48 = add i64 %24, 2
  %49 = icmp ult i64 %48, %2
  br i1 %49, label %23, label %50

50:                                               ; preds = %41, %19, %3, %16, %58
  %51 = phi i1 [ false, %58 ], [ false, %16 ], [ false, %3 ], [ true, %19 ], [ true, %41 ]
  ret i1 %51

52:                                               ; preds = %23
  %53 = add i32 %26, -672
  %54 = icmp ult i32 %53, 3
  br i1 %54, label %37, label %58

55:                                               ; preds = %23
  switch i32 %26, label %58 [
    i32 64, label %41
    i32 672, label %34
    i32 673, label %35
    i32 674, label %36
  ]

56:                                               ; preds = %23
  %57 = icmp eq i32 %26, 0
  br i1 %57, label %41, label %58

58:                                               ; preds = %52, %23, %55, %30, %56
  %59 = phi i32 [ 949, %56 ], [ 6, %30 ], [ 912, %52 ], [ 408, %55 ], [ %29, %23 ]
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 554) #9
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %26, i32 %59) #9
  br label %50
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL14sigalgs_uniqueN4bssl4SpanIKtEE(i16*, i64) unnamed_addr #1 {
  %3 = icmp ult i64 %1, 2
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  tail call void @OPENSSL_free(i8* null) #9
  %5 = icmp slt i64 %1, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %26

7:                                                ; preds = %4
  %8 = shl i64 %1, 1
  %9 = tail call i8* @OPENSSL_malloc(i64 %8) #9
  %10 = bitcast i8* %9 to i16*
  %11 = icmp eq i8* %9, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %26

13:                                               ; preds = %7
  %14 = bitcast i16* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 %14, i64 %8, i1 false) #9
  tail call void @qsort(i8* nonnull %9, i64 %1, i64 2, i32 (i8*, i8*)* nonnull @_ZL16compare_uint16_tPKvS0_) #9
  %15 = load i16, i16* %10, align 2
  br label %18

16:                                               ; preds = %18
  %17 = icmp eq i64 %24, %1
  br i1 %17, label %26, label %18

18:                                               ; preds = %16, %13
  %19 = phi i16 [ %22, %16 ], [ %15, %13 ]
  %20 = phi i64 [ %24, %16 ], [ 1, %13 ]
  %21 = getelementptr inbounds i16, i16* %10, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %19, %22
  %24 = add nuw i64 %20, 1
  br i1 %23, label %25, label %16

25:                                               ; preds = %18
  tail call void @ERR_put_error(i32 16, i32 0, i32 296, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 589) #9
  br label %26

26:                                               ; preds = %16, %12, %6, %25
  %27 = phi i8* [ %9, %25 ], [ null, %12 ], [ null, %6 ], [ %9, %16 ]
  %28 = phi i1 [ false, %25 ], [ false, %12 ], [ false, %6 ], [ true, %16 ]
  tail call void @OPENSSL_free(i8* %27) #9
  br label %29

29:                                               ; preds = %2, %26
  %30 = phi i1 [ %28, %26 ], [ true, %2 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set1_sigalgs(%struct.ssl_st* nocapture readonly, i32* nocapture readonly, i64) local_unnamed_addr #1 {
  %4 = alloca %"class.bssl::Array.39", align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %7 = icmp eq %"struct.bssl::SSL_CONFIG"* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 615) #9
  br label %59

9:                                                ; preds = %3
  %10 = bitcast %"class.bssl::Array.39"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #9
  %11 = call fastcc zeroext i1 @_ZL18parse_sigalg_pairsPN4bssl5ArrayItEEPKim(%"class.bssl::Array.39"* nonnull %4, i32* %1, i64 %2)
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = bitcast %"class.bssl::Array.39"* %4 to i8**
  %14 = load i8*, i8** %13, align 8
  br label %56

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %4, i64 0, i32 1
  %18 = load i16*, i16** %16, align 8
  %19 = load i64, i64* %17, align 8
  %20 = tail call fastcc zeroext i1 @_ZL14sigalgs_uniqueN4bssl4SpanIKtEE(i16* %18, i64 %19)
  %21 = bitcast i16* %18 to i8*
  br i1 %20, label %22, label %56

22:                                               ; preds = %15
  %23 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %24 = icmp eq %"struct.bssl::SSL_CONFIG"* %23, null
  br i1 %24, label %56, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %23, i64 0, i32 6, i32 0, i32 0, i32 0
  %27 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %26, align 8
  %28 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %27, i64 0, i32 7
  %29 = bitcast %"class.bssl::Array.39"* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @OPENSSL_free(i8* %30) #9
  %31 = bitcast %"class.bssl::Array.39"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #9
  %32 = icmp eq i64 %19, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %25
  %34 = icmp slt i64 %19, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %33
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %56

36:                                               ; preds = %33
  %37 = shl i64 %19, 1
  %38 = tail call i8* @OPENSSL_malloc(i64 %37) #9
  store i8* %38, i8** %29, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %56

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %27, i64 0, i32 7, i32 1
  store i64 %19, i64* %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %21, i64 %37, i1 false) #9
  br label %43

43:                                               ; preds = %41, %25
  %44 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %45 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %44, i64 0, i32 20
  %46 = bitcast %"class.bssl::Array.39"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @OPENSSL_free(i8* %47) #9
  %48 = bitcast %"class.bssl::Array.39"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #9
  br i1 %32, label %56, label %49

49:                                               ; preds = %43
  %50 = shl i64 %19, 1
  %51 = tail call i8* @OPENSSL_malloc(i64 %50) #9
  store i8* %51, i8** %46, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %44, i64 0, i32 20, i32 1
  store i64 %19, i64* %54, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 %21, i64 %50, i1 false) #9
  br label %56

55:                                               ; preds = %49
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %56

56:                                               ; preds = %15, %12, %40, %35, %22, %55, %53, %43
  %57 = phi i8* [ %14, %12 ], [ %21, %55 ], [ %21, %53 ], [ %21, %43 ], [ %21, %22 ], [ %21, %35 ], [ %21, %40 ], [ %21, %15 ]
  %58 = phi i32 [ 0, %12 ], [ 0, %55 ], [ 1, %53 ], [ 1, %43 ], [ 0, %22 ], [ 0, %35 ], [ 0, %40 ], [ 0, %15 ]
  tail call void @OPENSSL_free(i8* %57) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  br label %59

59:                                               ; preds = %56, %8
  %60 = phi i32 [ %58, %56 ], [ 0, %8 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set1_sigalgs_list(%struct.ssl_ctx_st* nocapture, i8* nocapture readonly) local_unnamed_addr #1 {
  %3 = alloca %"class.bssl::Array.39", align 8
  %4 = bitcast %"class.bssl::Array.39"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #9
  %5 = call fastcc zeroext i1 @_ZL18parse_sigalgs_listPN4bssl5ArrayItEEPKc(%"class.bssl::Array.39"* nonnull %3, i8* %1)
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.bssl::Array.39"* %3 to i8**
  %8 = load i8*, i8** %7, align 8
  br label %46

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %3, i64 0, i32 1
  %12 = load i16*, i16** %10, align 8
  %13 = load i64, i64* %11, align 8
  %14 = tail call fastcc zeroext i1 @_ZL14sigalgs_uniqueN4bssl4SpanIKtEE(i16* %12, i64 %13)
  %15 = bitcast i16* %12 to i8*
  br i1 %14, label %16, label %46

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %18 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %17, align 8
  %19 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %18, i64 0, i32 7
  %20 = bitcast %"class.bssl::Array.39"* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @OPENSSL_free(i8* %21) #9
  %22 = bitcast %"class.bssl::Array.39"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #9
  %23 = icmp eq i64 %13, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %16
  %25 = icmp slt i64 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %24
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %46

27:                                               ; preds = %24
  %28 = shl i64 %13, 1
  %29 = tail call i8* @OPENSSL_malloc(i64 %28) #9
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %46

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %18, i64 0, i32 7, i32 1
  store i64 %13, i64* %33, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 %15, i64 %28, i1 false) #9
  br label %34

34:                                               ; preds = %32, %16
  %35 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 76
  %36 = bitcast %"class.bssl::Array.39"* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @OPENSSL_free(i8* %37) #9
  %38 = bitcast %"class.bssl::Array.39"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #9
  br i1 %23, label %46, label %39

39:                                               ; preds = %34
  %40 = shl i64 %13, 1
  %41 = tail call i8* @OPENSSL_malloc(i64 %40) #9
  store i8* %41, i8** %36, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 76, i32 1
  store i64 %13, i64* %44, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* align 1 %15, i64 %40, i1 false) #9
  br label %46

45:                                               ; preds = %39
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %46

46:                                               ; preds = %6, %34, %43, %31, %26, %45, %9
  %47 = phi i8* [ %15, %9 ], [ %8, %6 ], [ %15, %45 ], [ %15, %26 ], [ %15, %31 ], [ %15, %43 ], [ %15, %34 ]
  %48 = phi i32 [ 0, %9 ], [ 0, %6 ], [ 0, %45 ], [ 0, %26 ], [ 0, %31 ], [ 1, %43 ], [ 1, %34 ]
  tail call void @OPENSSL_free(i8* %47) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL18parse_sigalgs_listPN4bssl5ArrayItEEPKc(%"class.bssl::Array.39"* nocapture, i8* nocapture readonly) unnamed_addr #1 {
  %3 = alloca [23 x i8], align 16
  br label %4

4:                                                ; preds = %26, %2
  %5 = phi i64 [ 1, %2 ], [ %29, %26 ]
  %6 = phi i8* [ %1, %2 ], [ %28, %26 ]
  %7 = phi i64 [ 1, %2 ], [ %27, %26 ]
  %8 = load i8, i8* %6, align 1
  switch i8 %8, label %26 [
    i8 0, label %9
    i8 58, label %24
  ]

9:                                                ; preds = %4
  %10 = bitcast %"class.bssl::Array.39"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @OPENSSL_free(i8* %11) #9
  %12 = bitcast %"class.bssl::Array.39"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  %13 = icmp eq i64 %7, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %9
  %15 = icmp slt i64 %7, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %142

17:                                               ; preds = %14
  %18 = shl i64 %7, 1
  %19 = tail call i8* @OPENSSL_malloc(i64 %18) #9
  store i8* %19, i8** %10, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %142

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %0, i64 0, i32 1
  store i64 %7, i64* %23, align 8
  br label %30

24:                                               ; preds = %4
  %25 = add i64 %7, 1
  br label %26

26:                                               ; preds = %4, %24
  %27 = phi i64 [ %25, %24 ], [ %7, %4 ]
  %28 = getelementptr inbounds i8, i8* %6, i64 1
  %29 = add i64 %5, 1
  br label %4

30:                                               ; preds = %9, %22
  %31 = getelementptr inbounds [23 x i8], [23 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %31) #9
  %32 = icmp eq i64 %5, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 23, i1 false)
  br i1 %32, label %140, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %0, i64 0, i32 0
  %35 = bitcast [23 x i8]* %3 to i32*
  %36 = bitcast [23 x i8]* %3 to i64*
  br label %37

37:                                               ; preds = %133, %33
  %38 = phi i64 [ 0, %33 ], [ %138, %133 ]
  %39 = phi i32 [ 0, %33 ], [ %137, %133 ]
  %40 = phi i64 [ 0, %33 ], [ %136, %133 ]
  %41 = phi i32 [ 0, %33 ], [ %135, %133 ]
  %42 = phi i64 [ 0, %33 ], [ %134, %133 ]
  %43 = getelementptr inbounds i8, i8* %1, i64 %38
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  switch i32 %45, label %117 [
    i32 43, label %46
    i32 58, label %65
    i32 0, label %65
  ]

46:                                               ; preds = %37
  %47 = icmp eq i32 %41, 1
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 671) #9
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i64 %38) #9
  br label %140

49:                                               ; preds = %46
  %50 = icmp eq i64 %40, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 676) #9
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i64 %38) #9
  br label %140

52:                                               ; preds = %49
  %53 = getelementptr inbounds [23 x i8], [23 x i8]* %3, i64 0, i64 %40
  store i8 0, i8* %53, align 1
  %54 = load i32, i32* %35, align 16
  %55 = icmp eq i32 %54, 4281170
  br i1 %55, label %133, label %56

56:                                               ; preds = %52
  %57 = load i64, i64* %36, align 16
  %58 = icmp eq i64 %57, 23454026888729426
  %59 = icmp eq i32 %54, 5460816
  %60 = or i1 %59, %58
  br i1 %60, label %133, label %61

61:                                               ; preds = %56
  %62 = call i32 @bcmp(i8* nonnull %31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i64 6)
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %133, label %64

64:                                               ; preds = %61
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 690) #9
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i8* nonnull %31) #9
  br label %140

65:                                               ; preds = %37, %37
  %66 = icmp eq i64 %40, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 703) #9
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i64 %38) #9
  br label %140

68:                                               ; preds = %65
  %69 = getelementptr inbounds [23 x i8], [23 x i8]* %3, i64 0, i64 %40
  store i8 0, i8* %69, align 1
  %70 = icmp eq i32 %41, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %68
  %72 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 0, i32 1, i64 0), i8* nonnull %31) #10
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %81

74:                                               ; preds = %180, %177, %174, %171, %168, %165, %162, %159, %156, %153, %150, %81, %71
  %75 = phi %struct.anon* [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 0), %71 ], [ bitcast (i16* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 1, i32 0) to %struct.anon*), %81 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 2), %150 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 3), %153 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 4), %156 ], [ bitcast (i16* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 5, i32 0) to %struct.anon*), %159 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 6), %162 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 7), %165 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 8), %168 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 9), %171 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 10), %174 ], [ getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 11), %177 ], [ bitcast (i16* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 12, i32 0) to %struct.anon*), %180 ]
  %76 = getelementptr inbounds %struct.anon, %struct.anon* %75, i64 0, i32 0
  %77 = load i16, i16* %76, align 2
  %78 = add i64 %42, 1
  %79 = load i16*, i16** %34, align 8
  %80 = getelementptr inbounds i16, i16* %79, i64 %42
  store i16 %77, i16* %80, align 2
  br label %133

81:                                               ; preds = %71
  %82 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 1, i32 1, i32 0, i64 0), i8* nonnull %31) #10
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %74, label %150

84:                                               ; preds = %68
  %85 = call i32 @bcmp(i8* nonnull %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i64 5)
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %84
  %88 = call i32 @bcmp(i8* nonnull %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i64 7)
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %87
  %91 = call i32 @bcmp(i8* nonnull %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i64 7)
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %90
  %94 = call i32 @bcmp(i8* nonnull %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i64 7)
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 737) #9
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* nonnull %31) #9
  br label %140

97:                                               ; preds = %93, %90, %87, %84
  %98 = phi i32 [ 64, %84 ], [ 672, %87 ], [ 673, %90 ], [ 674, %93 ]
  switch i32 %39, label %148 [
    i32 6, label %99
    i32 912, label %144
    i32 408, label %147
  ]

99:                                               ; preds = %97
  switch i32 %98, label %148 [
    i32 64, label %110
    i32 672, label %100
    i32 673, label %101
    i32 674, label %102
  ]

100:                                              ; preds = %99
  br label %110

101:                                              ; preds = %99
  br label %110

102:                                              ; preds = %99
  br label %110

103:                                              ; preds = %147
  br label %110

104:                                              ; preds = %147
  br label %110

105:                                              ; preds = %147
  br label %110

106:                                              ; preds = %144
  %107 = sext i32 %145 to i64
  %108 = getelementptr inbounds [3 x %struct.anon.125*], [3 x %struct.anon.125*]* @switch.table._ZL18parse_sigalgs_listPN4bssl5ArrayItEEPKc, i64 0, i64 %107
  %109 = load %struct.anon.125*, %struct.anon.125** %108, align 8
  br label %110

110:                                              ; preds = %106, %147, %105, %104, %103, %99, %102, %101, %100
  %111 = phi %struct.anon.125* [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 0), %99 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 7), %147 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 1), %100 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 2), %101 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 3), %102 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 8), %103 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 9), %104 ], [ getelementptr inbounds ([12 x %struct.anon.125], [12 x %struct.anon.125]* @_ZL27kSignatureAlgorithmsMapping, i64 0, i64 10), %105 ], [ %109, %106 ]
  %112 = getelementptr inbounds %struct.anon.125, %struct.anon.125* %111, i64 0, i32 2
  %113 = load i16, i16* %112, align 4
  %114 = add i64 %42, 1
  %115 = load i16*, i16** %34, align 8
  %116 = getelementptr inbounds i16, i16* %115, i64 %42
  store i16 %113, i16* %116, align 2
  br label %133

117:                                              ; preds = %37
  %118 = icmp eq i64 %40, 22
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 766) #9
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i64 %38) #9
  br label %140

120:                                              ; preds = %117
  %121 = add i8 %44, -48
  %122 = icmp ult i8 %121, 10
  %123 = and i8 %44, -33
  %124 = add i8 %123, -65
  %125 = icmp ult i8 %124, 26
  %126 = or i1 %125, %122
  br i1 %126, label %128, label %127

127:                                              ; preds = %120
  switch i8 %44, label %131 [
    i8 95, label %128
    i8 45, label %128
  ]

128:                                              ; preds = %127, %127, %120
  %129 = add i64 %40, 1
  %130 = getelementptr inbounds [23 x i8], [23 x i8]* %3, i64 0, i64 %40
  store i8 %44, i8* %130, align 1
  br label %133

131:                                              ; preds = %127
  %132 = sext i8 %44 to i32
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 775) #9
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0), i32 %132, i64 %38) #9
  br label %140

133:                                              ; preds = %110, %74, %52, %56, %61, %128
  %134 = phi i64 [ %42, %128 ], [ %42, %61 ], [ %42, %56 ], [ %42, %52 ], [ %78, %74 ], [ %114, %110 ]
  %135 = phi i32 [ %41, %128 ], [ 1, %61 ], [ 1, %56 ], [ 1, %52 ], [ 0, %74 ], [ 0, %110 ]
  %136 = phi i64 [ %129, %128 ], [ 0, %61 ], [ 0, %56 ], [ 0, %52 ], [ 0, %74 ], [ 0, %110 ]
  %137 = phi i32 [ %39, %128 ], [ 408, %61 ], [ 912, %56 ], [ 6, %52 ], [ %39, %74 ], [ %39, %110 ]
  %138 = add nuw i64 %38, 1
  %139 = icmp eq i64 %138, %5
  br i1 %139, label %140, label %37

140:                                              ; preds = %133, %30, %64, %51, %48, %96, %148, %183, %67, %131, %119
  %141 = phi i1 [ false, %119 ], [ false, %131 ], [ false, %67 ], [ false, %183 ], [ false, %148 ], [ false, %96 ], [ false, %48 ], [ false, %51 ], [ false, %64 ], [ true, %30 ], [ true, %133 ]
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %31) #9
  br label %142

142:                                              ; preds = %21, %16, %140
  %143 = phi i1 [ %141, %140 ], [ false, %16 ], [ false, %21 ]
  ret i1 %143

144:                                              ; preds = %97
  %145 = add nsw i32 %98, -672
  %146 = icmp ult i32 %145, 3
  br i1 %146, label %106, label %148

147:                                              ; preds = %97
  switch i32 %98, label %148 [
    i32 64, label %110
    i32 672, label %103
    i32 673, label %104
    i32 674, label %105
  ]

148:                                              ; preds = %99, %147, %97, %144
  %149 = phi i32 [ 408, %147 ], [ 912, %144 ], [ 6, %99 ], [ %39, %97 ]
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 754) #9
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i64 0, i64 0), i32 %149, i8* nonnull %31) #9
  br label %140

150:                                              ; preds = %81
  %151 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 2, i32 1, i64 0), i8* nonnull %31) #10
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %74, label %153

153:                                              ; preds = %150
  %154 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 3, i32 1, i64 0), i8* nonnull %31) #10
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %74, label %156

156:                                              ; preds = %153
  %157 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 4, i32 1, i64 0), i8* nonnull %31) #10
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %74, label %159

159:                                              ; preds = %156
  %160 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 5, i32 1, i32 0, i64 0), i8* nonnull %31) #10
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %74, label %162

162:                                              ; preds = %159
  %163 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 6, i32 1, i64 0), i8* nonnull %31) #10
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %74, label %165

165:                                              ; preds = %162
  %166 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 7, i32 1, i64 0), i8* nonnull %31) #10
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %74, label %168

168:                                              ; preds = %165
  %169 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 8, i32 1, i64 0), i8* nonnull %31) #10
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %74, label %171

171:                                              ; preds = %168
  %172 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 9, i32 1, i64 0), i8* nonnull %31) #10
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %74, label %174

174:                                              ; preds = %171
  %175 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 10, i32 1, i64 0), i8* nonnull %31) #10
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %74, label %177

177:                                              ; preds = %174
  %178 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 11, i32 1, i64 0), i8* nonnull %31) #10
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %74, label %180

180:                                              ; preds = %177
  %181 = call i32 @strcmp(i8* getelementptr inbounds (<{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>, <{ %struct.anon, { i16, <{ [14 x i8], [9 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, { i16, <{ [10 x i8], [13 x i8] }> }, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, %struct.anon, { i16, <{ i8, i8, i8, i8, i8, i8, i8, [16 x i8] }> } }>* @_ZL24kSignatureAlgorithmNames, i64 0, i32 12, i32 1, i32 0), i8* nonnull %31) #10
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %74, label %183

183:                                              ; preds = %180
  tail call void @ERR_put_error(i32 16, i32 0, i32 295, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 723) #9
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i8* nonnull %31) #9
  br label %140
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_verify_algorithm_prefs(%struct.ssl_ctx_st* nocapture, i16*, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 76
  %5 = bitcast %"class.bssl::Array.39"* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @OPENSSL_free(i8* %6) #9
  %7 = bitcast %"class.bssl::Array.39"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = icmp slt i64 %2, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %20

12:                                               ; preds = %9
  %13 = shl i64 %2, 1
  %14 = tail call i8* @OPENSSL_malloc(i64 %13) #9
  store i8* %14, i8** %5, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 76, i32 1
  store i64 %2, i64* %18, align 8
  %19 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 %19, i64 %13, i1 false) #9
  br label %20

20:                                               ; preds = %3, %11, %16, %17
  %21 = phi i32 [ 0, %11 ], [ 0, %16 ], [ 1, %17 ], [ 1, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set1_sigalgs_list(%struct.ssl_st* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #1 {
  %3 = alloca %"class.bssl::Array.39", align 8
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 806) #9
  br label %49

8:                                                ; preds = %2
  %9 = bitcast %"class.bssl::Array.39"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %10 = call fastcc zeroext i1 @_ZL18parse_sigalgs_listPN4bssl5ArrayItEEPKc(%"class.bssl::Array.39"* nonnull %3, i8* %1)
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.bssl::Array.39"* %3 to i8**
  %13 = load i8*, i8** %12, align 8
  br label %46

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"class.bssl::Array.39", %"class.bssl::Array.39"* %3, i64 0, i32 1
  %17 = load i16*, i16** %15, align 8
  %18 = load i64, i64* %16, align 8
  %19 = tail call fastcc zeroext i1 @_ZL14sigalgs_uniqueN4bssl4SpanIKtEE(i16* %17, i64 %18)
  %20 = bitcast i16* %17 to i8*
  br i1 %19, label %21, label %46

21:                                               ; preds = %14
  %22 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %23 = icmp eq %"struct.bssl::SSL_CONFIG"* %22, null
  br i1 %23, label %46, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %22, i64 0, i32 6, i32 0, i32 0, i32 0
  %26 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %25, align 8
  %27 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %26, i64 0, i32 7
  %28 = bitcast %"class.bssl::Array.39"* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @OPENSSL_free(i8* %29) #9
  %30 = bitcast %"class.bssl::Array.39"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #9
  %31 = icmp eq i64 %18, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %24
  %33 = icmp slt i64 %18, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %46

35:                                               ; preds = %32
  %36 = shl i64 %18, 1
  %37 = tail call i8* @OPENSSL_malloc(i64 %36) #9
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %46

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %26, i64 0, i32 7, i32 1
  store i64 %18, i64* %41, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 %20, i64 %36, i1 false) #9
  br label %42

42:                                               ; preds = %40, %24
  %43 = tail call i32 @SSL_set_verify_algorithm_prefs(%struct.ssl_st* %0, i16* %17, i64 %18)
  %44 = icmp ne i32 %43, 0
  %45 = zext i1 %44 to i32
  br label %46

46:                                               ; preds = %11, %39, %34, %21, %42, %14
  %47 = phi i8* [ %20, %14 ], [ %13, %11 ], [ %20, %42 ], [ %20, %21 ], [ %20, %34 ], [ %20, %39 ]
  %48 = phi i32 [ 0, %14 ], [ 0, %11 ], [ %45, %42 ], [ 0, %21 ], [ 0, %34 ], [ 0, %39 ]
  tail call void @OPENSSL_free(i8* %47) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br label %49

49:                                               ; preds = %46, %7
  %50 = phi i32 [ %48, %46 ], [ 0, %7 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_verify_algorithm_prefs(%struct.ssl_st* nocapture readonly, i16*, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 832) #9
  br label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 20
  %10 = bitcast %"class.bssl::Array.39"* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @OPENSSL_free(i8* %11) #9
  %12 = bitcast %"class.bssl::Array.39"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  %13 = icmp eq i64 %2, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %8
  %15 = icmp slt i64 %2, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 319) #9
  br label %25

17:                                               ; preds = %14
  %18 = shl i64 %2, 1
  %19 = tail call i8* @OPENSSL_malloc(i64 %18) #9
  store i8* %19, i8** %10, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #9
  br label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 20, i32 1
  store i64 %2, i64* %23, align 8
  %24 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %24, i64 %18, i1 false) #9
  br label %25

25:                                               ; preds = %22, %21, %16, %8, %7
  %26 = phi i32 [ 0, %7 ], [ 0, %16 ], [ 0, %21 ], [ 1, %22 ], [ 1, %8 ]
  ret i32 %26
}

declare i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EVP_DigestSignInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #2

declare i32 @EVP_PKEY_id(%struct.evp_pkey_st*) local_unnamed_addr #2

declare zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #2

declare i32 @EC_GROUP_get_curve_name(%struct.ec_group_st*) local_unnamed_addr #2

declare %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st*) local_unnamed_addr #2

declare %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_md5_sha1() #2

declare %struct.env_md_st* @EVP_sha1() #2

declare %struct.env_md_st* @EVP_sha256() #2

declare %struct.env_md_st* @EVP_sha384() #2

declare %struct.env_md_st* @EVP_sha512() #2

declare zeroext i1 @_ZN4bssl26ssl_cert_check_private_keyEPKNS_4CERTEPK11evp_pkey_st(%"struct.bssl::CERT"*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @ERR_add_error_dataf(i8*, ...) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZL16compare_uint16_tPKvS0_(i8* nocapture readonly, i8* nocapture readonly) #5 {
  %3 = bitcast i8* %0 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = bitcast i8* %1 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = icmp ult i16 %4, %6
  %8 = icmp ugt i16 %4, %6
  %9 = zext i1 %8 to i32
  %10 = select i1 %7, i32 -1, i32 %9
  ret i32 %10
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

declare void @RSA_free(%struct.rsa_st*) local_unnamed_addr #2

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
