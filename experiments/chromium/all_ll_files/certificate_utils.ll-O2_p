; ModuleID = '../../third_party/openscreen/src/util/crypto/certificate_utils.cc'
source_filename = "../../third_party/openscreen/src/util/crypto/certificate_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.rsa_st = type { %struct.rsa_meth_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.crypto_ex_data_st, i32, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_blinding_st**, i8*, i64, i8 }
%struct.rsa_meth_st = type { %struct.openssl_method_common_st, i8*, i32 (%struct.rsa_st*)*, i32 (%struct.rsa_st*)*, i64 (%struct.rsa_st*)*, i32 (i32, i8*, i32, i8*, i32*, %struct.rsa_st*)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i8*, i8*, i64)*, i32 }
%struct.openssl_method_common_st = type { i32, i8 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%struct.bn_blinding_st = type opaque
%struct.bn_gencb_st = type { i8*, i32 (i32, i32, %struct.bn_gencb_st*)* }
%"class.openscreen::ErrorOr" = type <{ %union.anon.12, i8, [7 x i8] }>
%union.anon.12 = type { %"class.openscreen::Error" }
%"class.openscreen::Error" = type { i8, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.20 }
%union.anon.20 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.11 }
%union.anon.11 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%struct.v3_ext_ctx = type { i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_req_st*, %struct.X509_crl_st*, %struct.X509V3_CONF_METHOD_st*, i8* }
%struct.X509_req_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.41, %struct.X509_name_st* }
%union.anon.41 = type { %struct.stack_st_GENERAL_NAME* }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.X509V3_CONF_METHOD_st = type { i8* (i8*, i8*, i8*)*, %struct.stack_st_CONF_VALUE* (i8*, i8*)*, void (i8*, i8*)*, void (i8*, %struct.stack_st_CONF_VALUE*)* }
%struct.stack_st_CONF_VALUE = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.X509_extension_st = type { %struct.asn1_object_st*, i32, %struct.asn1_string_st* }
%struct.conf_st = type opaque
%struct.env_md_st = type opaque
%"class.openscreen::ErrorOr.22" = type <{ %union.anon.23, i8, [7 x i8] }>
%union.anon.23 = type { %"class.openscreen::Error" }
%"class.openscreen::ErrorOr.30" = type <{ %union.anon.31, i8, [7 x i8] }>
%union.anon.31 = type { %"class.openscreen::Error" }
%"class.openscreen::ErrorOr.33" = type <{ %union.anon.34, i8, [7 x i8] }>
%union.anon.34 = type { %"class.openscreen::Error" }

@_ZZN10openscreen12_GLOBAL__N_125CreateCertificateInternalEN4absl11string_viewENSt3__16chrono8durationIxNS3_5ratioILl1ELl1EEEEE11evp_pkey_stS8_bP7x509_stPS9_E13serial_number = internal unnamed_addr global i32 1, align 4
@.str.1 = private unnamed_addr constant [17 x i8] c"critical,CA:TRUE\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @_ZN10openscreen18GenerateRsaKeyPairEi(i32) local_unnamed_addr #0 {
  %2 = tail call %struct.bignum_st* @BN_new() #5
  %3 = tail call i32 @BN_set_word(%struct.bignum_st* %2, i64 65537) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = tail call %struct.rsa_st* @RSA_new() #5
  %7 = tail call i32 @RSA_generate_key_ex(%struct.rsa_st* %6, i32 %0, %struct.bignum_st* %2, %struct.bn_gencb_st* null) #5
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #5
  %11 = ptrtoint %struct.evp_pkey_st* %10 to i64
  %12 = tail call i32 @EVP_PKEY_set1_RSA(%struct.evp_pkey_st* %10, %struct.rsa_st* %6) #5
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = icmp eq %struct.evp_pkey_st* %10, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %14
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %10) #5
  br label %17

17:                                               ; preds = %9, %16, %14, %5
  %18 = phi i64 [ 0, %5 ], [ 0, %14 ], [ 0, %16 ], [ %11, %9 ]
  %19 = icmp eq %struct.rsa_st* %6, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @RSA_free(%struct.rsa_st* nonnull %6) #5
  br label %21

21:                                               ; preds = %20, %17, %1
  %22 = phi i64 [ 0, %1 ], [ %18, %17 ], [ %18, %20 ]
  %23 = icmp eq %struct.bignum_st* %2, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  tail call void @BN_free(%struct.bignum_st* nonnull %2) #5
  br label %25

25:                                               ; preds = %21, %24
  %26 = inttoptr i64 %22 to %struct.evp_pkey_st*
  ret %struct.evp_pkey_st* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.bignum_st* @BN_new() local_unnamed_addr #2

declare i32 @BN_set_word(%struct.bignum_st*, i64) local_unnamed_addr #2

declare %struct.rsa_st* @RSA_new() local_unnamed_addr #2

declare i32 @RSA_generate_key_ex(%struct.rsa_st*, i32, %struct.bignum_st*, %struct.bn_gencb_st*) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_PKEY_new() local_unnamed_addr #2

declare i32 @EVP_PKEY_set1_RSA(%struct.evp_pkey_st*, %struct.rsa_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen31CreateSelfSignedX509CertificateEN4absl11string_viewENSt3__16chrono8durationIxNS2_5ratioILl1ELl1EEEEERK11evp_pkey_stS7_bP7x509_stPS8_(%"class.openscreen::ErrorOr"* noalias sret, i8*, i64, i64, %struct.evp_pkey_st* nocapture readonly dereferenceable(24), i64, i1 zeroext, %struct.x509_st*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %struct.v3_ext_ctx, align 8
  %12 = alloca %struct.evp_pkey_st, align 8
  %13 = bitcast %struct.evp_pkey_st* %4 to i8*
  %14 = bitcast %struct.evp_pkey_st* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %13, i64 24, i1 false)
  %15 = tail call %struct.x509_st* @X509_new() #5
  %16 = ptrtoint %struct.x509_st* %15 to i64
  %17 = icmp eq %struct.x509_st* %7, null
  %18 = select i1 %17, %struct.x509_st* %15, %struct.x509_st* %7
  %19 = icmp eq %struct.evp_pkey_st* %8, null
  %20 = select i1 %19, %struct.evp_pkey_st* %12, %struct.evp_pkey_st* %8
  %21 = tail call i32 @X509_set_version(%struct.x509_st* %15, i64 2) #5
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %104

23:                                               ; preds = %9
  %24 = tail call %struct.asn1_string_st* @X509_get_serialNumber(%struct.x509_st* %15) #5
  %25 = load i32, i32* @_ZZN10openscreen12_GLOBAL__N_125CreateCertificateInternalEN4absl11string_viewENSt3__16chrono8durationIxNS3_5ratioILl1ELl1EEEEE11evp_pkey_stS8_bP7x509_stPS9_E13serial_number, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* @_ZZN10openscreen12_GLOBAL__N_125CreateCertificateInternalEN4absl11string_viewENSt3__16chrono8durationIxNS3_5ratioILl1ELl1EEEEE11evp_pkey_stS8_bP7x509_stPS9_E13serial_number, align 4
  %27 = sext i32 %25 to i64
  %28 = tail call i32 @ASN1_INTEGER_set(%struct.asn1_string_st* %24, i64 %27) #5
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %104

30:                                               ; preds = %23
  %31 = tail call %struct.asn1_string_st* @ASN1_TIME_set(%struct.asn1_string_st* null, i64 %5) #5
  %32 = add nsw i64 %5, %3
  %33 = tail call %struct.asn1_string_st* @ASN1_TIME_set(%struct.asn1_string_st* null, i64 %32) #5
  %34 = tail call i32 @X509_set_notBefore(%struct.x509_st* %15, %struct.asn1_string_st* %31) #5
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %96

36:                                               ; preds = %30
  %37 = tail call i32 @X509_set_notAfter(%struct.x509_st* %15, %struct.asn1_string_st* %33) #5
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %96

39:                                               ; preds = %36
  %40 = tail call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %15) #5
  %41 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #5
  %42 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 2, i8* %43, align 1, !alias.scope !2
  %44 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  store i16 20035, i16* %44, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 2
  store i8 0, i8* %45, align 2
  %46 = trunc i64 %2 to i32
  %47 = call i32 @X509_NAME_add_entry_by_txt(%struct.X509_name_st* %40, i8* nonnull %41, i32 4097, i8* %1, i32 %46, i32 -1, i32 0) #5
  %48 = icmp eq i32 %47, 1
  %49 = load i8, i8* %43, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #6
  br label %54

54:                                               ; preds = %51, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #5
  br i1 %48, label %55, label %96

55:                                               ; preds = %54
  %56 = call %struct.asn1_string_st* @ASN1_BIT_STRING_new() #5
  %57 = call i32 @ASN1_BIT_STRING_set_bit(%struct.asn1_string_st* %56, i32 0, i32 1) #5
  br i1 %6, label %58, label %60

58:                                               ; preds = %55
  %59 = call i32 @ASN1_BIT_STRING_set_bit(%struct.asn1_string_st* %56, i32 5, i32 1) #5
  br label %60

60:                                               ; preds = %58, %55
  %61 = bitcast %struct.asn1_string_st* %56 to i8*
  %62 = call i32 @X509_add1_ext_i2d(%struct.x509_st* %15, i32 83, i8* %61, i32 0, i64 0) #5
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %91

64:                                               ; preds = %60
  br i1 %6, label %65, label %75

65:                                               ; preds = %64
  %66 = bitcast %struct.v3_ext_ctx* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %66) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 48, i1 false) #5
  %67 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %11, i64 0, i32 6
  store i8* null, i8** %67, align 8
  call void @X509V3_set_ctx(%struct.v3_ext_ctx* nonnull %11, %struct.x509_st* %18, %struct.x509_st* %15, %struct.X509_req_st* null, %struct.X509_crl_st* null, i32 0) #5
  %68 = call %struct.X509_extension_st* @X509V3_EXT_nconf_nid(%struct.conf_st* null, %struct.v3_ext_ctx* nonnull %11, i32 87, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #5
  %69 = icmp eq %struct.X509_extension_st* %68, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %65
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %66) #5
  br label %91

71:                                               ; preds = %65
  %72 = call i8* @X509V3_EXT_d2i(%struct.X509_extension_st* nonnull %68) #5
  %73 = call i32 @X509_add1_ext_i2d(%struct.x509_st* %15, i32 87, i8* %72, i32 1, i64 0) #5
  %74 = call i32 @X509V3_EXT_free(i32 87, i8* %72) #5
  call void @X509_EXTENSION_free(%struct.X509_extension_st* nonnull %68) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %66) #5
  br label %75

75:                                               ; preds = %71, %64
  %76 = call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %18) #5
  %77 = call i32 @X509_set_issuer_name(%struct.x509_st* %15, %struct.X509_name_st* %76) #5
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %91

79:                                               ; preds = %75
  %80 = call i32 @X509_set_pubkey(%struct.x509_st* %15, %struct.evp_pkey_st* nonnull %12) #5
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %91

82:                                               ; preds = %79
  %83 = call %struct.env_md_st* @EVP_sha256() #5
  %84 = call i32 @X509_sign(%struct.x509_st* %15, %struct.evp_pkey_st* %20, %struct.env_md_st* %83) #5
  %85 = icmp slt i32 %84, 1
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = call i32 @X509_verify(%struct.x509_st* %15, %struct.evp_pkey_st* %20) #5
  %88 = icmp eq i32 %87, 1
  %89 = select i1 %88, i64 0, i64 %16
  %90 = select i1 %88, i64 %16, i64 0
  br label %91

91:                                               ; preds = %86, %82, %79, %75, %70, %60
  %92 = phi i64 [ %16, %70 ], [ %16, %60 ], [ %16, %79 ], [ %16, %75 ], [ %16, %82 ], [ %89, %86 ]
  %93 = phi i64 [ 0, %70 ], [ 0, %60 ], [ 0, %79 ], [ 0, %75 ], [ 0, %82 ], [ %90, %86 ]
  %94 = icmp eq %struct.asn1_string_st* %56, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  call void @ASN1_STRING_free(%struct.asn1_string_st* nonnull %56) #5
  br label %96

96:                                               ; preds = %95, %91, %54, %36, %30
  %97 = phi i64 [ %16, %36 ], [ %16, %30 ], [ %16, %54 ], [ %92, %91 ], [ %92, %95 ]
  %98 = phi i64 [ 0, %36 ], [ 0, %30 ], [ 0, %54 ], [ %93, %91 ], [ %93, %95 ]
  %99 = icmp eq %struct.asn1_string_st* %33, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  call void @ASN1_STRING_free(%struct.asn1_string_st* nonnull %33) #5
  br label %101

101:                                              ; preds = %100, %96
  %102 = icmp eq %struct.asn1_string_st* %31, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %101
  call void @ASN1_STRING_free(%struct.asn1_string_st* nonnull %31) #5
  br label %104

104:                                              ; preds = %103, %101, %23, %9
  %105 = phi i64 [ %16, %9 ], [ %16, %23 ], [ %97, %101 ], [ %97, %103 ]
  %106 = phi i64 [ 0, %9 ], [ 0, %23 ], [ %98, %101 ], [ %98, %103 ]
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = inttoptr i64 %105 to %struct.x509_st*
  call void @X509_free(%struct.x509_st* nonnull %109) #5
  br label %110

110:                                              ; preds = %104, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14)
  %111 = icmp eq i64 %106, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = bitcast %"class.openscreen::ErrorOr"* %0 to i64*
  store i64 %106, i64* %113, align 8
  br label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.openscreen::ErrorOr", %"class.openscreen::ErrorOr"* %0, i64 0, i32 0, i32 0
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %115, i8 signext 44) #5
  br label %116

116:                                              ; preds = %114, %112
  %117 = phi i8 [ 0, %114 ], [ 1, %112 ]
  %118 = getelementptr inbounds %"class.openscreen::ErrorOr", %"class.openscreen::ErrorOr"* %0, i64 0, i32 1
  store i8 %117, i8* %118, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen26ExportX509CertificateToDerERK7x509_st(%"class.openscreen::ErrorOr.22"* noalias sret, %struct.x509_st* dereferenceable(232)) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  store i8* null, i8** %3, align 8
  %5 = call i32 @i2d_X509(%struct.x509_st* %1, i8** nonnull %3) #5
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.openscreen::ErrorOr.22", %"class.openscreen::ErrorOr.22"* %0, i64 0, i32 0, i32 0
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %8, i8 signext 45) #5
  br label %20

9:                                                ; preds = %2
  %10 = load i8*, i8** %3, align 8
  %11 = sext i32 %5 to i64
  %12 = call i8* @_Znwm(i64 %11) #6
  %13 = getelementptr inbounds i8, i8* %12, i64 %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %10, i64 %11, i1 false) #5
  %14 = ptrtoint i8* %13 to i64
  call void @OPENSSL_free(i8* %10) #5
  %15 = ptrtoint i8* %12 to i64
  %16 = bitcast %"class.openscreen::ErrorOr.22"* %0 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.openscreen::ErrorOr.22", %"class.openscreen::ErrorOr.22"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast i8** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = getelementptr inbounds %"class.openscreen::ErrorOr.22", %"class.openscreen::ErrorOr.22"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %19, align 8
  br label %20

20:                                               ; preds = %9, %7
  %21 = phi i8 [ 1, %9 ], [ 0, %7 ]
  %22 = getelementptr inbounds %"class.openscreen::ErrorOr.22", %"class.openscreen::ErrorOr.22"* %0, i64 0, i32 1
  store i8 %21, i8* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  ret void
}

declare i32 @i2d_X509(%struct.x509_st*, i8**) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen17ImportCertificateEPKhi(%"class.openscreen::ErrorOr"* noalias sret, i8*, i32) local_unnamed_addr #0 {
  %4 = alloca i8*, align 8
  store i8* %1, i8** %4, align 8
  %5 = icmp eq i8* %1, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.openscreen::ErrorOr", %"class.openscreen::ErrorOr"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %7, i8 signext 49) #5
  br label %17

8:                                                ; preds = %3
  %9 = sext i32 %2 to i64
  %10 = call %struct.x509_st* @d2i_X509(%struct.x509_st** null, i8** nonnull %4, i64 %9) #5
  %11 = icmp eq %struct.x509_st* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = ptrtoint %struct.x509_st* %10 to i64
  %14 = bitcast %"class.openscreen::ErrorOr"* %0 to i64*
  store i64 %13, i64* %14, align 8
  br label %17

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.openscreen::ErrorOr", %"class.openscreen::ErrorOr"* %0, i64 0, i32 0, i32 0
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %16, i8 signext 45) #5
  br label %17

17:                                               ; preds = %15, %12, %6
  %18 = phi i8 [ 0, %15 ], [ 1, %12 ], [ 0, %6 ]
  %19 = getelementptr inbounds %"class.openscreen::ErrorOr", %"class.openscreen::ErrorOr"* %0, i64 0, i32 1
  store i8 %18, i8* %19, align 8
  ret void
}

declare %struct.x509_st* @d2i_X509(%struct.x509_st**, i8**, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen19ImportRSAPrivateKeyEPKhi(%"class.openscreen::ErrorOr.30"* noalias sret, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.openscreen::ErrorOr.30", %"class.openscreen::ErrorOr.30"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %8, i8 signext 91) #5
  br label %20

9:                                                ; preds = %3
  %10 = sext i32 %2 to i64
  %11 = tail call %struct.rsa_st* @RSA_private_key_from_bytes(i8* nonnull %1, i64 %10) #5
  %12 = icmp eq %struct.rsa_st* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.openscreen::ErrorOr.30", %"class.openscreen::ErrorOr.30"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %14, i8 signext 42) #5
  br label %20

15:                                               ; preds = %9
  %16 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #5
  %17 = ptrtoint %struct.evp_pkey_st* %16 to i64
  %18 = tail call i32 @EVP_PKEY_assign_RSA(%struct.evp_pkey_st* %16, %struct.rsa_st* nonnull %11) #5
  %19 = bitcast %"class.openscreen::ErrorOr.30"* %0 to i64*
  store i64 %17, i64* %19, align 8
  br label %20

20:                                               ; preds = %13, %15, %7
  %21 = phi i8 [ 0, %13 ], [ 1, %15 ], [ 0, %7 ]
  %22 = getelementptr inbounds %"class.openscreen::ErrorOr.30", %"class.openscreen::ErrorOr.30"* %0, i64 0, i32 1
  store i8 %21, i8* %22, align 8
  ret void
}

declare %struct.rsa_st* @RSA_private_key_from_bytes(i8*, i64) local_unnamed_addr #2

declare i32 @EVP_PKEY_assign_RSA(%struct.evp_pkey_st*, %struct.rsa_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen10GetSpkiTlvEP7x509_st(%"class.std::__1::basic_string"* noalias nocapture sret, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i8*, align 8
  %5 = tail call %struct.X509_pubkey_st* @X509_get_X509_PUBKEY(%struct.x509_st* %1) #5
  %6 = tail call i32 @i2d_X509_PUBKEY(%struct.X509_pubkey_st* %5, i8** null) #5
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #5
  br label %48

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #5
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = sext i32 %6 to i64
  %14 = icmp ult i32 %6, 23
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  br i1 %14, label %24, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = add nuw nsw i64 %13, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #6
  store i8* %21, i8** %12, align 8
  %22 = or i64 %20, -9223372036854775808
  store i64 %22, i64* %17, align 8
  store i64 %13, i64* %18, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %28

24:                                               ; preds = %10
  %25 = trunc i32 %6 to i8
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %16 ], [ %26, %24 ]
  %30 = phi i8* [ %21, %16 ], [ %11, %24 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %30, i8 0, i64 %13, i1 false) #5
  %31 = getelementptr inbounds i8, i8* %30, i64 %13
  store i8 0, i8* %31, align 1
  %32 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #5
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = load i8*, i8** %12, align 8
  %37 = select i1 %35, i8* %36, i8* %11
  store i8* %37, i8** %4, align 8
  %38 = call i32 @i2d_X509_PUBKEY(%struct.X509_pubkey_st* %5, i8** nonnull %4) #5
  %39 = icmp eq i32 %38, 0
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br i1 %39, label %42, label %41

41:                                               ; preds = %28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %11, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #5
  br label %47

42:                                               ; preds = %28
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #5
  %43 = load i8, i8* %33, align 1
  %44 = icmp slt i8 %43, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #5
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %46) #6
  br label %47

47:                                               ; preds = %41, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #5
  br label %48

48:                                               ; preds = %47, %8
  ret void
}

declare %struct.X509_pubkey_st* @X509_get_X509_PUBKEY(%struct.x509_st*) local_unnamed_addr #2

declare i32 @i2d_X509_PUBKEY(%struct.X509_pubkey_st*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen14ParseDerUint64EPK14asn1_string_st(%"class.openscreen::ErrorOr.33"* noalias sret, %struct.asn1_string_st*) local_unnamed_addr #0 {
  %3 = tail call i8* @ASN1_STRING_get0_data(%struct.asn1_string_st* %1) #5
  %4 = tail call i32 @ASN1_STRING_length(%struct.asn1_string_st* %1) #5
  %5 = add i32 %4, -1
  %6 = icmp ugt i32 %5, 7
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = zext i32 %4 to i64
  %9 = add nsw i64 %8, -1
  %10 = and i64 %8, 3
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = sub nsw i64 %8, %10
  br label %36

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.openscreen::ErrorOr.33", %"class.openscreen::ErrorOr.33"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %15, i8 signext 91) #5
  br label %66

16:                                               ; preds = %36, %7
  %17 = phi i64 [ undef, %7 ], [ %62, %36 ]
  %18 = phi i64 [ 0, %7 ], [ %63, %36 ]
  %19 = phi i64 [ 0, %7 ], [ %62, %36 ]
  %20 = icmp eq i64 %10, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %16, %21
  %22 = phi i64 [ %30, %21 ], [ %18, %16 ]
  %23 = phi i64 [ %29, %21 ], [ %19, %16 ]
  %24 = phi i64 [ %31, %21 ], [ %10, %16 ]
  %25 = shl i64 %23, 8
  %26 = getelementptr inbounds i8, i8* %3, i64 %22
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = or i64 %25, %28
  %30 = add nuw nsw i64 %22, 1
  %31 = add i64 %24, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %21, !llvm.loop !5

33:                                               ; preds = %21, %16
  %34 = phi i64 [ %17, %16 ], [ %29, %21 ]
  %35 = bitcast %"class.openscreen::ErrorOr.33"* %0 to i64*
  store i64 %34, i64* %35, align 8
  br label %66

36:                                               ; preds = %36, %12
  %37 = phi i64 [ 0, %12 ], [ %63, %36 ]
  %38 = phi i64 [ 0, %12 ], [ %62, %36 ]
  %39 = phi i64 [ %13, %12 ], [ %64, %36 ]
  %40 = shl i64 %38, 8
  %41 = getelementptr inbounds i8, i8* %3, i64 %37
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %40, %43
  %45 = or i64 %37, 1
  %46 = shl i64 %44, 8
  %47 = getelementptr inbounds i8, i8* %3, i64 %45
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = or i64 %46, %49
  %51 = or i64 %37, 2
  %52 = shl i64 %50, 8
  %53 = getelementptr inbounds i8, i8* %3, i64 %51
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i64
  %56 = or i64 %52, %55
  %57 = or i64 %37, 3
  %58 = shl i64 %56, 8
  %59 = getelementptr inbounds i8, i8* %3, i64 %57
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i64
  %62 = or i64 %58, %61
  %63 = add nuw nsw i64 %37, 4
  %64 = add i64 %39, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %16, label %36

66:                                               ; preds = %33, %14
  %67 = phi i8 [ 1, %33 ], [ 0, %14 ]
  %68 = getelementptr inbounds %"class.openscreen::ErrorOr.33", %"class.openscreen::ErrorOr.33"* %0, i64 0, i32 1
  store i8 %67, i8* %68, align 8
  ret void
}

declare i8* @ASN1_STRING_get0_data(%struct.asn1_string_st*) local_unnamed_addr #2

declare i32 @ASN1_STRING_length(%struct.asn1_string_st*) local_unnamed_addr #2

declare %struct.x509_st* @X509_new() local_unnamed_addr #2

declare i32 @X509_set_version(%struct.x509_st*, i64) local_unnamed_addr #2

declare i32 @ASN1_INTEGER_set(%struct.asn1_string_st*, i64) local_unnamed_addr #2

declare %struct.asn1_string_st* @X509_get_serialNumber(%struct.x509_st*) local_unnamed_addr #2

declare i32 @X509_set_notBefore(%struct.x509_st*, %struct.asn1_string_st*) local_unnamed_addr #2

declare i32 @X509_set_notAfter(%struct.x509_st*, %struct.asn1_string_st*) local_unnamed_addr #2

declare %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st*) local_unnamed_addr #2

declare %struct.asn1_string_st* @ASN1_BIT_STRING_new() local_unnamed_addr #2

declare i32 @ASN1_BIT_STRING_set_bit(%struct.asn1_string_st*, i32, i32) local_unnamed_addr #2

declare i32 @X509_add1_ext_i2d(%struct.x509_st*, i32, i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @X509V3_set_ctx(%struct.v3_ext_ctx*, %struct.x509_st*, %struct.x509_st*, %struct.X509_req_st*, %struct.X509_crl_st*, i32) local_unnamed_addr #2

declare %struct.X509_extension_st* @X509V3_EXT_nconf_nid(%struct.conf_st*, %struct.v3_ext_ctx*, i32, i8*) local_unnamed_addr #2

declare i8* @X509V3_EXT_d2i(%struct.X509_extension_st*) local_unnamed_addr #2

declare i32 @X509V3_EXT_free(i32, i8*) local_unnamed_addr #2

declare i32 @X509_set_issuer_name(%struct.x509_st*, %struct.X509_name_st*) local_unnamed_addr #2

declare i32 @X509_set_pubkey(%struct.x509_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @X509_sign(%struct.x509_st*, %struct.evp_pkey_st*, %struct.env_md_st*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #2

declare i32 @X509_verify(%struct.x509_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare %struct.asn1_string_st* @ASN1_TIME_set(%struct.asn1_string_st*, i64) local_unnamed_addr #2

declare i32 @X509_NAME_add_entry_by_txt(%struct.X509_name_st*, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @X509_EXTENSION_free(%struct.X509_extension_st*) local_unnamed_addr #2

declare void @ASN1_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @RSA_free(%struct.rsa_st*) local_unnamed_addr #2

declare void @X509_free(%struct.x509_st*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @BN_free(%struct.bignum_st*) local_unnamed_addr #2

declare void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"*, i8 signext) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
