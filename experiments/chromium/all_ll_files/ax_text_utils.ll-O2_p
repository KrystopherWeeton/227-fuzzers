; ModuleID = '../../ui/accessibility/ax_text_utils.cc'
source_filename = "../../ui/accessibility/ax_text_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.base::i18n::BreakIterator" = type { i8*, %"class.base::BasicStringPiece", %"class.std::__1::basic_string", i32, i64, i64 }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui26FindAccessibleTextBoundaryERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIiNS4_IiEEEEN2ax5mojom12TextBoundaryEmNSF_13MoveDirectionENSF_12TextAffinityE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32, i64, i32, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.base::i18n::BreakIterator", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  switch i32 %2, label %20 [
    i32 1, label %21
    i32 14, label %17
    i32 18, label %18
    i32 19, label %18
    i32 6, label %19
    i32 4, label %19
    i32 11, label %19
  ]

17:                                               ; preds = %6
  br label %21

18:                                               ; preds = %6, %6
  br label %21

19:                                               ; preds = %6, %6, %6
  br label %21

20:                                               ; preds = %6
  br label %21

21:                                               ; preds = %6, %17, %18, %19, %20
  %22 = phi i32 [ 2, %20 ], [ 2, %19 ], [ 0, %18 ], [ 5, %17 ], [ 3, %6 ]
  %23 = bitcast %"class.base::i18n::BreakIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 72, i1 false)
  %24 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %29 = select i1 %12, i16* %27, i16* %28
  store i16* %29, i16** %25, align 8
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %16, i64* %30, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %7, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8, i32 %22) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  switch i32 %2, label %86 [
    i32 19, label %31
    i32 18, label %31
    i32 14, label %31
    i32 1, label %31
    i32 4, label %35
  ]

31:                                               ; preds = %21, %21, %21, %21
  %32 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %7) #9
  br i1 %32, label %33, label %163

33:                                               ; preds = %31
  %34 = icmp eq i32 %2, 4
  br i1 %34, label %35, label %86

35:                                               ; preds = %21, %33
  %36 = icmp eq i32 %4, 2
  br i1 %36, label %37, label %60

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %39, %41
  br i1 %42, label %163, label %43

43:                                               ; preds = %37
  %44 = icmp eq i32 %5, 1
  %45 = icmp ne i32 %5, 2
  br label %48

46:                                               ; preds = %56
  %47 = icmp eq i32* %59, %41
  br i1 %47, label %163, label %48

48:                                               ; preds = %43, %46
  %49 = phi i32* [ %39, %43 ], [ %59, %46 ]
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, 0
  %52 = select i1 %51, i32 %50, i32 0
  %53 = zext i32 %52 to i64
  %54 = icmp ugt i64 %53, %3
  %55 = and i1 %44, %54
  br i1 %55, label %157, label %56

56:                                               ; preds = %48
  %57 = icmp ult i64 %53, %3
  %58 = or i1 %45, %57
  %59 = getelementptr inbounds i32, i32* %49, i64 1
  br i1 %58, label %46, label %155

60:                                               ; preds = %35
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector"* %1 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = ashr exact i64 %66, 2
  %68 = inttoptr i64 %65 to i32*
  %69 = icmp ne i32 %5, 1
  %70 = icmp eq i32 %5, 2
  br label %71

71:                                               ; preds = %83, %60
  %72 = phi i64 [ %67, %60 ], [ %75, %83 ]
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %163, label %74

74:                                               ; preds = %71
  %75 = add i64 %72, -1
  %76 = getelementptr inbounds i32, i32* %68, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = icmp sgt i32 %77, 0
  %79 = select i1 %78, i32 %77, i32 0
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %80, %3
  %82 = or i1 %69, %81
  br i1 %82, label %83, label %159

83:                                               ; preds = %74
  %84 = icmp ult i64 %80, %3
  %85 = and i1 %70, %84
  br i1 %85, label %161, label %71

86:                                               ; preds = %21, %33
  %87 = icmp eq i32 %4, 2
  %88 = icmp ne i32 %4, 1
  %89 = xor i1 %87, true
  %90 = select i1 %87, i64 1, i64 -1
  br label %91

91:                                               ; preds = %153, %86
  %92 = phi i64 [ %3, %86 ], [ %154, %153 ]
  br i1 %87, label %93, label %95

93:                                               ; preds = %91
  %94 = icmp ult i64 %92, %16
  br i1 %94, label %99, label %163

95:                                               ; preds = %91
  %96 = icmp eq i64 %92, 0
  br i1 %96, label %163, label %97

97:                                               ; preds = %95
  %98 = add i64 %92, -1
  br label %99

99:                                               ; preds = %93, %97
  %100 = phi i64 [ %98, %97 ], [ %92, %93 ]
  switch i32 %2, label %153 [
    i32 4, label %163
    i32 1, label %101
    i32 18, label %107
    i32 19, label %113
    i32 14, label %124
    i32 11, label %145
  ]

101:                                              ; preds = %99
  %102 = call zeroext i1 @_ZNK4base4i18n13BreakIterator18IsGraphemeBoundaryEm(%"class.base::i18n::BreakIterator"* nonnull %7, i64 %92) #9
  %103 = xor i1 %102, true
  %104 = icmp eq i64 %92, %3
  %105 = and i1 %88, %104
  %106 = or i1 %105, %103
  br i1 %106, label %153, label %163

107:                                              ; preds = %99
  %108 = call zeroext i1 @_ZNK4base4i18n13BreakIterator13IsStartOfWordEm(%"class.base::i18n::BreakIterator"* nonnull %7, i64 %92) #9
  %109 = xor i1 %108, true
  %110 = icmp eq i64 %92, %3
  %111 = and i1 %88, %110
  %112 = or i1 %111, %109
  br i1 %112, label %153, label %163

113:                                              ; preds = %99
  %114 = call zeroext i1 @_ZNK4base4i18n13BreakIterator13IsStartOfWordEm(%"class.base::i18n::BreakIterator"* nonnull %7, i64 %92) #9
  br i1 %114, label %115, label %118

115:                                              ; preds = %113
  %116 = icmp eq i64 %92, %3
  %117 = and i1 %88, %116
  br i1 %117, label %153, label %163

118:                                              ; preds = %113
  %119 = call zeroext i1 @_ZNK4base4i18n13BreakIterator11IsEndOfWordEm(%"class.base::i18n::BreakIterator"* nonnull %7, i64 %92) #9
  %120 = xor i1 %119, true
  %121 = icmp eq i64 %92, %3
  %122 = and i1 %121, %89
  %123 = or i1 %122, %120
  br i1 %123, label %153, label %163

124:                                              ; preds = %99
  %125 = call zeroext i1 @_ZNK4base4i18n13BreakIterator18IsSentenceBoundaryEm(%"class.base::i18n::BreakIterator"* nonnull %7, i64 %92) #9
  %126 = xor i1 %125, true
  %127 = icmp eq i64 %92, %3
  %128 = and i1 %88, %127
  %129 = or i1 %128, %126
  br i1 %129, label %153, label %130

130:                                              ; preds = %124
  %131 = icmp ult i64 %92, %16
  br i1 %131, label %132, label %163

132:                                              ; preds = %130, %142
  %133 = phi i64 [ %143, %142 ], [ %92, %130 ]
  %134 = load i8, i8* %10, align 1
  %135 = icmp slt i8 %134, 0
  %136 = load i16*, i16** %26, align 8
  %137 = select i1 %135, i16* %136, i16* %28
  %138 = getelementptr inbounds i16, i16* %137, i64 %133
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = call zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext %140) #9
  br i1 %141, label %142, label %163

142:                                              ; preds = %132
  %143 = add nuw i64 %133, 1
  %144 = icmp eq i64 %143, %16
  br i1 %144, label %163, label %132

145:                                              ; preds = %99
  %146 = load i8, i8* %10, align 1
  %147 = icmp slt i8 %146, 0
  %148 = load i16*, i16** %26, align 8
  %149 = select i1 %147, i16* %148, i16* %28
  %150 = getelementptr inbounds i16, i16* %149, i64 %100
  %151 = load i16, i16* %150, align 2
  %152 = icmp eq i16 %151, 10
  br i1 %152, label %163, label %153

153:                                              ; preds = %124, %118, %107, %101, %145, %99, %115
  %154 = add i64 %92, %90
  br label %91

155:                                              ; preds = %56
  %156 = zext i32 %52 to i64
  br label %163

157:                                              ; preds = %48
  %158 = zext i32 %52 to i64
  br label %163

159:                                              ; preds = %74
  %160 = zext i32 %79 to i64
  br label %163

161:                                              ; preds = %83
  %162 = zext i32 %79 to i64
  br label %163

163:                                              ; preds = %71, %46, %145, %115, %99, %95, %93, %101, %107, %118, %132, %142, %159, %161, %155, %157, %37, %130, %31
  %164 = phi i64 [ %3, %31 ], [ %92, %130 ], [ %16, %37 ], [ %156, %155 ], [ %158, %157 ], [ %160, %159 ], [ %162, %161 ], [ %16, %142 ], [ %133, %132 ], [ %16, %93 ], [ 0, %95 ], [ %3, %99 ], [ %92, %115 ], [ %92, %145 ], [ %92, %101 ], [ %92, %107 ], [ %92, %118 ], [ %16, %46 ], [ 0, %71 ]
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %23) #9
  ret i64 %164
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece"* dereferenceable(16), i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base4i18n13BreakIterator18IsGraphemeBoundaryEm(%"class.base::i18n::BreakIterator"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base4i18n13BreakIterator13IsStartOfWordEm(%"class.base::i18n::BreakIterator"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base4i18n13BreakIterator11IsEndOfWordEm(%"class.base::i18n::BreakIterator"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base4i18n13BreakIterator18IsSentenceBoundaryEm(%"class.base::i18n::BreakIterator"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GetWordStartOffsetsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::i18n::BreakIterator", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = bitcast %"class.base::i18n::BreakIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 72, i1 false)
  %9 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  store i16* %18, i16** %10, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %13 to i64
  %23 = select i1 %14, i64 %21, i64 %22
  store i64 %23, i64* %19, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  %24 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %24, label %25, label %92

25:                                               ; preds = %2
  %26 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %26, label %27, label %92

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %3, i64 0, i32 4
  %29 = bitcast i32** %5 to i64*
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = bitcast i32** %6 to i64*
  br label %32

32:                                               ; preds = %27, %90
  %33 = call zeroext i1 @_ZNK4base4i18n13BreakIterator6IsWordEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %33, label %34, label %90

34:                                               ; preds = %32
  %35 = load i64, i64* %28, align 8
  %36 = icmp ult i64 %35, 2147483648
  br i1 %36, label %38, label %37, !prof !2

37:                                               ; preds = %34
  call void @llvm.trap() #9
  unreachable

38:                                               ; preds = %34
  %39 = trunc i64 %35 to i32
  %40 = load i32*, i32** %5, align 8
  %41 = load i32*, i32** %6, align 8
  %42 = icmp ult i32* %40, %41
  %43 = ptrtoint i32* %41 to i64
  br i1 %42, label %44, label %47

44:                                               ; preds = %38
  store i32 %39, i32* %40, align 4
  %45 = getelementptr inbounds i32, i32* %40, i64 1
  %46 = ptrtoint i32* %45 to i64
  store i64 %46, i64* %29, align 8
  br label %90

47:                                               ; preds = %38
  %48 = ptrtoint i32* %40 to i64
  %49 = load i64, i64* %30, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 2
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 4611686018427387903
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #10
  unreachable

56:                                               ; preds = %47
  %57 = sub i64 %43, %49
  %58 = ashr exact i64 %57, 2
  %59 = icmp ult i64 %58, 2305843009213693951
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = ashr exact i64 %57, 1
  %62 = icmp ult i64 %61, %52
  %63 = select i1 %62, i64 %52, i64 %61
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = icmp ugt i64 %63, 4611686018427387903
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  call void @abort() #10
  unreachable

68:                                               ; preds = %65, %56
  %69 = phi i64 [ %63, %65 ], [ 4611686018427387903, %56 ]
  %70 = shl i64 %69, 2
  %71 = call i8* @_Znwm(i64 %70) #11
  %72 = bitcast i8* %71 to i32*
  br label %73

73:                                               ; preds = %68, %60
  %74 = phi i64 [ %69, %68 ], [ 0, %60 ]
  %75 = phi i8* [ %71, %68 ], [ null, %60 ]
  %76 = phi i32* [ %72, %68 ], [ null, %60 ]
  %77 = getelementptr inbounds i32, i32* %76, i64 %51
  %78 = getelementptr inbounds i32, i32* %76, i64 %74
  %79 = ptrtoint i32* %78 to i64
  store i32 %39, i32* %77, align 4
  %80 = getelementptr inbounds i32, i32* %77, i64 1
  %81 = ptrtoint i32* %80 to i64
  %82 = ptrtoint i32* %76 to i64
  %83 = icmp sgt i64 %50, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %73
  %85 = inttoptr i64 %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %85, i64 %50, i1 false) #9
  br label %86

86:                                               ; preds = %84, %73
  store i64 %82, i64* %30, align 8
  store i64 %81, i64* %29, align 8
  store i64 %79, i64* %31, align 8
  %87 = icmp eq i64 %49, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %49 to i8*
  call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %88, %86, %44, %32
  %91 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %91, label %32, label %92

92:                                               ; preds = %90, %25, %2
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #9
  ret void
}

declare zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base4i18n13BreakIterator6IsWordEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17GetWordEndOffsetsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::i18n::BreakIterator", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = bitcast %"class.base::i18n::BreakIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 72, i1 false)
  %9 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  store i16* %18, i16** %10, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %13 to i64
  %23 = select i1 %14, i64 %21, i64 %22
  store i64 %23, i64* %19, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  %24 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %24, label %25, label %92

25:                                               ; preds = %2
  %26 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %26, label %27, label %92

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %3, i64 0, i32 5
  %29 = bitcast i32** %5 to i64*
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = bitcast i32** %6 to i64*
  br label %32

32:                                               ; preds = %27, %90
  %33 = call zeroext i1 @_ZNK4base4i18n13BreakIterator6IsWordEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %33, label %34, label %90

34:                                               ; preds = %32
  %35 = load i64, i64* %28, align 8
  %36 = icmp ult i64 %35, 2147483648
  br i1 %36, label %38, label %37, !prof !2

37:                                               ; preds = %34
  call void @llvm.trap() #9
  unreachable

38:                                               ; preds = %34
  %39 = trunc i64 %35 to i32
  %40 = load i32*, i32** %5, align 8
  %41 = load i32*, i32** %6, align 8
  %42 = icmp ult i32* %40, %41
  %43 = ptrtoint i32* %41 to i64
  br i1 %42, label %44, label %47

44:                                               ; preds = %38
  store i32 %39, i32* %40, align 4
  %45 = getelementptr inbounds i32, i32* %40, i64 1
  %46 = ptrtoint i32* %45 to i64
  store i64 %46, i64* %29, align 8
  br label %90

47:                                               ; preds = %38
  %48 = ptrtoint i32* %40 to i64
  %49 = load i64, i64* %30, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 2
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 4611686018427387903
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #10
  unreachable

56:                                               ; preds = %47
  %57 = sub i64 %43, %49
  %58 = ashr exact i64 %57, 2
  %59 = icmp ult i64 %58, 2305843009213693951
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = ashr exact i64 %57, 1
  %62 = icmp ult i64 %61, %52
  %63 = select i1 %62, i64 %52, i64 %61
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = icmp ugt i64 %63, 4611686018427387903
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  call void @abort() #10
  unreachable

68:                                               ; preds = %65, %56
  %69 = phi i64 [ %63, %65 ], [ 4611686018427387903, %56 ]
  %70 = shl i64 %69, 2
  %71 = call i8* @_Znwm(i64 %70) #11
  %72 = bitcast i8* %71 to i32*
  br label %73

73:                                               ; preds = %68, %60
  %74 = phi i64 [ %69, %68 ], [ 0, %60 ]
  %75 = phi i8* [ %71, %68 ], [ null, %60 ]
  %76 = phi i32* [ %72, %68 ], [ null, %60 ]
  %77 = getelementptr inbounds i32, i32* %76, i64 %51
  %78 = getelementptr inbounds i32, i32* %76, i64 %74
  %79 = ptrtoint i32* %78 to i64
  store i32 %39, i32* %77, align 4
  %80 = getelementptr inbounds i32, i32* %77, i64 1
  %81 = ptrtoint i32* %80 to i64
  %82 = ptrtoint i32* %76 to i64
  %83 = icmp sgt i64 %50, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %73
  %85 = inttoptr i64 %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %85, i64 %50, i1 false) #9
  br label %86

86:                                               ; preds = %84, %73
  store i64 %82, i64* %30, align 8
  store i64 %81, i64* %29, align 8
  store i64 %79, i64* %31, align 8
  %87 = icmp eq i64 %49, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %49 to i8*
  call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %88, %86, %44, %32
  %91 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %91, label %32, label %92

92:                                               ; preds = %90, %25, %2
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23GetSentenceStartOffsetsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::i18n::BreakIterator", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = bitcast %"class.base::i18n::BreakIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 72, i1 false)
  %9 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  store i16* %18, i16** %10, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %13 to i64
  %23 = select i1 %14, i64 %21, i64 %22
  store i64 %23, i64* %19, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, i32 5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  %24 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %24, label %25, label %90

25:                                               ; preds = %2
  %26 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %26, label %27, label %90

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %3, i64 0, i32 4
  %29 = bitcast i32** %5 to i64*
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = bitcast i32** %6 to i64*
  br label %32

32:                                               ; preds = %27, %88
  %33 = load i64, i64* %28, align 8
  %34 = icmp ult i64 %33, 2147483648
  br i1 %34, label %36, label %35, !prof !2

35:                                               ; preds = %32
  call void @llvm.trap() #9
  unreachable

36:                                               ; preds = %32
  %37 = trunc i64 %33 to i32
  %38 = load i32*, i32** %5, align 8
  %39 = load i32*, i32** %6, align 8
  %40 = icmp ult i32* %38, %39
  %41 = ptrtoint i32* %39 to i64
  br i1 %40, label %42, label %45

42:                                               ; preds = %36
  store i32 %37, i32* %38, align 4
  %43 = getelementptr inbounds i32, i32* %38, i64 1
  %44 = ptrtoint i32* %43 to i64
  store i64 %44, i64* %29, align 8
  br label %88

45:                                               ; preds = %36
  %46 = ptrtoint i32* %38 to i64
  %47 = load i64, i64* %30, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 2
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 4611686018427387903
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #10
  unreachable

54:                                               ; preds = %45
  %55 = sub i64 %41, %47
  %56 = ashr exact i64 %55, 2
  %57 = icmp ult i64 %56, 2305843009213693951
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = ashr exact i64 %55, 1
  %60 = icmp ult i64 %59, %50
  %61 = select i1 %60, i64 %50, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 4611686018427387903
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  call void @abort() #10
  unreachable

66:                                               ; preds = %63, %54
  %67 = phi i64 [ %61, %63 ], [ 4611686018427387903, %54 ]
  %68 = shl i64 %67, 2
  %69 = call i8* @_Znwm(i64 %68) #11
  %70 = bitcast i8* %69 to i32*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi i8* [ %69, %66 ], [ null, %58 ]
  %74 = phi i32* [ %70, %66 ], [ null, %58 ]
  %75 = getelementptr inbounds i32, i32* %74, i64 %49
  %76 = getelementptr inbounds i32, i32* %74, i64 %72
  %77 = ptrtoint i32* %76 to i64
  store i32 %37, i32* %75, align 4
  %78 = getelementptr inbounds i32, i32* %75, i64 1
  %79 = ptrtoint i32* %78 to i64
  %80 = ptrtoint i32* %74 to i64
  %81 = icmp sgt i64 %48, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %71
  %83 = inttoptr i64 %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %83, i64 %48, i1 false) #9
  br label %84

84:                                               ; preds = %82, %71
  store i64 %80, i64* %30, align 8
  store i64 %79, i64* %29, align 8
  store i64 %77, i64* %31, align 8
  %85 = icmp eq i64 %47, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = inttoptr i64 %47 to i8*
  call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %42, %84, %86
  %89 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %89, label %32, label %90

90:                                               ; preds = %88, %25, %2
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21GetSentenceEndOffsetsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::i18n::BreakIterator", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = bitcast %"class.base::i18n::BreakIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 72, i1 false)
  %9 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  store i16* %18, i16** %10, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %13 to i64
  %23 = select i1 %14, i64 %21, i64 %22
  store i64 %23, i64* %19, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, i32 5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  %24 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %24, label %25, label %90

25:                                               ; preds = %2
  %26 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %26, label %27, label %90

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %3, i64 0, i32 5
  %29 = bitcast i32** %5 to i64*
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = bitcast i32** %6 to i64*
  br label %32

32:                                               ; preds = %27, %88
  %33 = load i64, i64* %28, align 8
  %34 = icmp ult i64 %33, 2147483648
  br i1 %34, label %36, label %35, !prof !2

35:                                               ; preds = %32
  call void @llvm.trap() #9
  unreachable

36:                                               ; preds = %32
  %37 = trunc i64 %33 to i32
  %38 = load i32*, i32** %5, align 8
  %39 = load i32*, i32** %6, align 8
  %40 = icmp ult i32* %38, %39
  %41 = ptrtoint i32* %39 to i64
  br i1 %40, label %42, label %45

42:                                               ; preds = %36
  store i32 %37, i32* %38, align 4
  %43 = getelementptr inbounds i32, i32* %38, i64 1
  %44 = ptrtoint i32* %43 to i64
  store i64 %44, i64* %29, align 8
  br label %88

45:                                               ; preds = %36
  %46 = ptrtoint i32* %38 to i64
  %47 = load i64, i64* %30, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 2
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 4611686018427387903
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #10
  unreachable

54:                                               ; preds = %45
  %55 = sub i64 %41, %47
  %56 = ashr exact i64 %55, 2
  %57 = icmp ult i64 %56, 2305843009213693951
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = ashr exact i64 %55, 1
  %60 = icmp ult i64 %59, %50
  %61 = select i1 %60, i64 %50, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 4611686018427387903
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  call void @abort() #10
  unreachable

66:                                               ; preds = %63, %54
  %67 = phi i64 [ %61, %63 ], [ 4611686018427387903, %54 ]
  %68 = shl i64 %67, 2
  %69 = call i8* @_Znwm(i64 %68) #11
  %70 = bitcast i8* %69 to i32*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi i8* [ %69, %66 ], [ null, %58 ]
  %74 = phi i32* [ %70, %66 ], [ null, %58 ]
  %75 = getelementptr inbounds i32, i32* %74, i64 %49
  %76 = getelementptr inbounds i32, i32* %74, i64 %72
  %77 = ptrtoint i32* %76 to i64
  store i32 %37, i32* %75, align 4
  %78 = getelementptr inbounds i32, i32* %75, i64 1
  %79 = ptrtoint i32* %78 to i64
  %80 = ptrtoint i32* %74 to i64
  %81 = icmp sgt i64 %48, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %71
  %83 = inttoptr i64 %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %83, i64 %48, i1 false) #9
  br label %84

84:                                               ; preds = %82, %71
  store i64 %80, i64* %30, align 8
  store i64 %79, i64* %29, align 8
  store i64 %77, i64* %31, align 8
  %85 = icmp eq i64 %47, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = inttoptr i64 %47 to i8*
  call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %42, %84, %86
  %89 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  br i1 %89, label %32, label %90

90:                                               ; preds = %88, %25, %2
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #9
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
