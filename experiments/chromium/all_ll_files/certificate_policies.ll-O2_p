; ModuleID = '../../net/cert/internal/certificate_policies.cc'
source_filename = "../../net/cert/internal/certificate_policies.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::der::Input" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::der::Input"* }
%"class.net::CertErrors" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.6" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.net::CertError"* }
%"class.net::der::Parser" = type { %struct.cbs_st, i64 }
%struct.cbs_st = type { i8*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.14" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.net::ParsedPolicyMapping"* }

$_ZNSt3__16vectorIN3net3der5InputENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_ = comdat any

@_ZZN3net9AnyPolicyEvE10any_policy = internal constant [4 x i8] c"U\1D \00", align 1
@_ZZN3net19InhibitAnyPolicyOidEvE3oid = internal constant [3 x i8] c"U\1D6", align 1
@_ZZN3net17PolicyMappingsOidEvE3oid = internal constant [3 x i8] c"U\1D!", align 1
@.str = private unnamed_addr constant [30 x i8] c"Policies is an empty SEQUENCE\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Policies contains duplicate OIDs\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"oid\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"PolicyInformation has trailing data\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Failed parsing policy qualifiers\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"The policy qualifiers SEQUENCE is empty\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"Unknown policy qualifier OID (not CPS or User Notice)\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"PolicyQualifierInfo is missing qualifier\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"PolicyQualifierInfo has trailing data\00", align 1
@_ZZN3net12_GLOBAL__N_112CpsPointerIdEvE14cps_pointer_id = internal constant [8 x i8] c"+\06\01\05\05\07\02\01", align 1
@_ZZN3net12_GLOBAL__N_112UserNoticeIdEvE14user_notice_id = internal constant [8 x i8] c"+\06\01\05\05\07\02\02", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net9AnyPolicyEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3net9AnyPolicyEvE10any_policy, i64 0, i64 0), i64 4 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net19InhibitAnyPolicyOidEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net19InhibitAnyPolicyOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net17PolicyMappingsOidEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net17PolicyMappingsOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net33ParseCertificatePoliciesExtensionERKNS_3der5InputEbPNSt3__16vectorIS1_NS4_9allocatorIS1_EEEEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), i1 zeroext, %"class.std::__1::vector"*, %"class.net::CertErrors"*) local_unnamed_addr #1 {
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca %"class.net::der::Input", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.net::der::Input", align 8
  %11 = alloca %"class.net::der::Parser", align 8
  %12 = alloca %"class.net::der::Parser", align 8
  %13 = alloca %"class.net::der::Parser", align 8
  %14 = alloca %"class.net::der::Input", align 8
  %15 = alloca %"class.net::der::Parser", align 8
  %16 = alloca %"class.net::der::Input", align 8
  %17 = bitcast %"class.net::der::Parser"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  %18 = bitcast %"class.net::der::Parser"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %11, %"class.net::der::Input"* dereferenceable(16) %0) #8
  %19 = bitcast %"class.net::der::Parser"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = bitcast %"class.net::der::Parser"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %12) #8
  %21 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %11, %"class.net::der::Parser"* nonnull %12) #8
  br i1 %21, label %22, label %136

22:                                               ; preds = %4
  %23 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %11) #8
  br i1 %23, label %136, label %24

24:                                               ; preds = %22
  %25 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %12) #8
  br i1 %25, label %27, label %26

26:                                               ; preds = %24
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #8
  br label %136

27:                                               ; preds = %24
  %28 = bitcast %"class.std::__1::vector"* %2 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %31 = bitcast %"class.net::der::Input"** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %12) #8
  br i1 %32, label %33, label %136

33:                                               ; preds = %27
  %34 = bitcast %"class.net::der::Parser"* %13 to i8*
  %35 = bitcast %"class.net::der::Input"* %14 to i8*
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %37 = bitcast %"class.net::der::Parser"* %15 to i8*
  %38 = bitcast %"class.net::der::Input"* %16 to i8*
  %39 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %16, i64 0, i32 0
  %40 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %16, i64 0, i32 1
  %41 = bitcast %"class.net::der::Parser"* %5 to i8*
  %42 = bitcast %"class.net::der::Input"* %6 to i8*
  %43 = bitcast %"class.net::der::Input"* %7 to i8*
  %44 = bitcast %"class.net::der::Input"* %8 to i8*
  %45 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 0
  %46 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 1
  %47 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 0
  %48 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 1
  %49 = bitcast i32* %9 to i8*
  %50 = bitcast %"class.net::der::Input"* %10 to i8*
  %51 = bitcast %"class.net::der::Parser"* %13 to i8*
  %52 = bitcast %"class.net::der::Input"* %14 to i8*
  %53 = bitcast %"class.net::der::Parser"* %15 to i8*
  br label %54

54:                                               ; preds = %33, %134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %13) #8
  %55 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %12, %"class.net::der::Parser"* nonnull %13) #8
  br i1 %55, label %57, label %56

56:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  br label %136

57:                                               ; preds = %54
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %14) #8
  %58 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %13, i32 6, %"class.net::der::Input"* nonnull %14) #8
  br i1 %58, label %59, label %129

59:                                               ; preds = %57
  %60 = load %"class.net::der::Input"*, %"class.net::der::Input"** %36, align 8
  %61 = load i64, i64* %31, align 8
  %62 = ptrtoint %"class.net::der::Input"* %60 to i64
  %63 = sub i64 %61, %62
  %64 = icmp eq i64 %63, 0
  %65 = inttoptr i64 %61 to %"class.net::der::Input"*
  br i1 %64, label %82, label %66

66:                                               ; preds = %59
  %67 = ashr exact i64 %63, 4
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi %"class.net::der::Input"* [ %78, %68 ], [ %60, %66 ]
  %70 = phi i64 [ %77, %68 ], [ %67, %66 ]
  %71 = lshr i64 %70, 1
  %72 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %69, i64 %71
  %73 = call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %72, %"class.net::der::Input"* nonnull dereferenceable(16) %14) #8
  %74 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %72, i64 1
  %75 = xor i64 %71, -1
  %76 = add i64 %70, %75
  %77 = select i1 %73, i64 %76, i64 %71
  %78 = select i1 %73, %"class.net::der::Input"* %74, %"class.net::der::Input"* %69
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %80, label %68

80:                                               ; preds = %68
  %81 = load %"class.net::der::Input"*, %"class.net::der::Input"** %30, align 8
  br label %82

82:                                               ; preds = %80, %59
  %83 = phi %"class.net::der::Input"* [ %65, %59 ], [ %81, %80 ]
  %84 = phi %"class.net::der::Input"* [ %60, %59 ], [ %78, %80 ]
  %85 = icmp eq %"class.net::der::Input"* %84, %83
  br i1 %85, label %90, label %86

86:                                               ; preds = %82
  %87 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %84, %"class.net::der::Input"* nonnull dereferenceable(16) %14) #8
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = call %"class.net::CertErrorParams"* @_ZN3net25CreateCertErrorParams1DerEPKcRKNS_3der5InputE(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), %"class.net::der::Input"* nonnull dereferenceable(16) %14) #8
  call void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"* %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), %"class.net::CertErrorParams"* %89) #8
  br label %129

90:                                               ; preds = %82, %86
  %91 = call %"class.net::der::Input"* @_ZNSt3__16vectorIN3net3der5InputENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector"* %2, %"class.net::der::Input"* %84, %"class.net::der::Input"* nonnull dereferenceable(16) %14)
  %92 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %13) #8
  br i1 %92, label %93, label %134

93:                                               ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %15) #8
  %94 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %13, %"class.net::der::Parser"* nonnull %15) #8
  br i1 %94, label %95, label %132

95:                                               ; preds = %93
  %96 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %13) #8
  br i1 %96, label %130, label %97

97:                                               ; preds = %95
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #8
  br i1 %1, label %100, label %98

98:                                               ; preds = %97
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3net9AnyPolicyEvE10any_policy, i64 0, i64 0), i8** %39, align 8
  store i64 4, i64* %40, align 8
  %99 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %14, %"class.net::der::Input"* nonnull dereferenceable(16) %16) #8
  br label %100

100:                                              ; preds = %98, %97
  %101 = phi i1 [ true, %97 ], [ %99, %98 ]
  %102 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %15) #8
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %15) #8
  br i1 %104, label %106, label %133

105:                                              ; preds = %100
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %128

106:                                              ; preds = %103, %126
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false) #8
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %5) #8
  %107 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %15, %"class.net::der::Parser"* nonnull %5) #8
  br i1 %107, label %109, label %108

108:                                              ; preds = %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  br label %128

109:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false) #8
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %6) #8
  %110 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %5, i32 6, %"class.net::der::Input"* nonnull %6) #8
  br i1 %110, label %111, label %125

111:                                              ; preds = %109
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #8
  br i1 %101, label %112, label %118

112:                                              ; preds = %111
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net12_GLOBAL__N_112CpsPointerIdEvE14cps_pointer_id, i64 0, i64 0), i8** %45, align 8
  store i64 8, i64* %46, align 8
  %113 = call zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %6, %"class.net::der::Input"* nonnull dereferenceable(16) %7) #8
  br i1 %113, label %114, label %118

114:                                              ; preds = %112
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net12_GLOBAL__N_112UserNoticeIdEvE14user_notice_id, i64 0, i64 0), i8** %47, align 8
  store i64 8, i64* %48, align 8
  %115 = call zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %6, %"class.net::der::Input"* nonnull dereferenceable(16) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #8
  br i1 %115, label %116, label %119

116:                                              ; preds = %114
  %117 = call %"class.net::CertErrorParams"* @_ZN3net25CreateCertErrorParams1DerEPKcRKNS_3der5InputE(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), %"class.net::der::Input"* nonnull dereferenceable(16) %6) #8
  call void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0), %"class.net::CertErrorParams"* %117) #8
  br label %125

118:                                              ; preds = %111, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #8
  br label %119

119:                                              ; preds = %118, %114
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #8
  store i32 -1431655766, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false) #8
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %10) #8
  %120 = call zeroext i1 @_ZN3net3der6Parser15ReadTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"* nonnull %5, i32* nonnull %9, %"class.net::der::Input"* nonnull %10) #8
  br i1 %120, label %122, label %121

121:                                              ; preds = %119
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  br label %128

122:                                              ; preds = %119
  %123 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #8
  br i1 %123, label %124, label %126

124:                                              ; preds = %122
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  br label %128

125:                                              ; preds = %109, %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  br label %128

126:                                              ; preds = %122
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  %127 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %15) #8
  br i1 %127, label %106, label %133

128:                                              ; preds = %105, %108, %125, %124, %121
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #8
  br label %130

129:                                              ; preds = %57, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  br label %136

130:                                              ; preds = %95, %128
  %131 = phi i8* [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), %128 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), %95 ]
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* %131) #8
  br label %132

132:                                              ; preds = %93, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  br label %136

133:                                              ; preds = %126, %103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  br label %134

134:                                              ; preds = %90, %133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  %135 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %12) #8
  br i1 %135, label %54, label %136

136:                                              ; preds = %134, %132, %27, %129, %56, %22, %4, %26
  %137 = phi i1 [ false, %26 ], [ false, %4 ], [ false, %22 ], [ false, %56 ], [ false, %129 ], [ true, %27 ], [ false, %132 ], [ true, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  ret i1 %137
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"*, %"class.net::der::Input"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"*) unnamed_addr #3

declare zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"*, %"class.net::der::Parser"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"*) local_unnamed_addr #3

declare void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #3

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #3

declare zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"*, i32, %"class.net::der::Input"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"*, i8*, %"class.net::CertErrorParams"*) local_unnamed_addr #3

declare %"class.net::CertErrorParams"* @_ZN3net25CreateCertErrorParams1DerEPKcRKNS_3der5InputE(i8*, %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.net::der::Input"* @_ZNSt3__16vectorIN3net3der5InputENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector"*, %"class.net::der::Input"*, %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %"class.net::der::Input"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.net::der::Input"*, %"class.net::der::Input"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.net::der::Input"*, %"class.net::der::Input"** %8, align 8
  %10 = icmp ult %"class.net::der::Input"* %7, %9
  %11 = ptrtoint %"class.net::der::Input"* %7 to i64
  %12 = ptrtoint %"class.net::der::Input"* %9 to i64
  br i1 %10, label %13, label %97

13:                                               ; preds = %3
  %14 = icmp eq %"class.net::der::Input"* %7, %1
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = bitcast %"class.net::der::Input"* %1 to i8*
  %17 = bitcast %"class.net::der::Input"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %1, i64 1
  %19 = ptrtoint %"class.net::der::Input"* %18 to i64
  %20 = bitcast %"class.net::der::Input"** %6 to i64*
  store i64 %19, i64* %20, align 8
  br label %235

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %1, i64 1
  %23 = ptrtoint %"class.net::der::Input"* %22 to i64
  %24 = sub i64 %11, %23
  %25 = ashr exact i64 %24, 4
  %26 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %1, i64 %25
  %27 = bitcast %"class.net::der::Input"** %6 to i64*
  %28 = icmp ult %"class.net::der::Input"* %26, %7
  br i1 %28, label %29, label %58

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr %"class.net::der::Input", %"class.net::der::Input"* %7, i64 %30, i32 0
  %32 = bitcast i8** %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 4
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %29, %40
  %41 = phi %"class.net::der::Input"* [ %47, %40 ], [ %7, %29 ]
  %42 = phi %"class.net::der::Input"* [ %46, %40 ], [ %26, %29 ]
  %43 = phi i64 [ %48, %40 ], [ %38, %29 ]
  %44 = bitcast %"class.net::der::Input"* %41 to i8*
  %45 = bitcast %"class.net::der::Input"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false) #8
  %46 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %42, i64 1
  %47 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %41, i64 1
  %48 = add i64 %43, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %40, !llvm.loop !2

50:                                               ; preds = %40, %29
  %51 = phi %"class.net::der::Input"* [ %7, %29 ], [ %47, %40 ]
  %52 = phi %"class.net::der::Input"* [ %26, %29 ], [ %46, %40 ]
  %53 = phi %"class.net::der::Input"* [ undef, %29 ], [ %47, %40 ]
  %54 = icmp ult i8* %34, inttoptr (i64 48 to i8*)
  br i1 %54, label %55, label %66

55:                                               ; preds = %66, %50
  %56 = phi %"class.net::der::Input"* [ %53, %50 ], [ %84, %66 ]
  %57 = ptrtoint %"class.net::der::Input"* %56 to i64
  br label %58

58:                                               ; preds = %55, %21
  %59 = phi i64 [ %57, %55 ], [ %11, %21 ]
  store i64 %59, i64* %27, align 8
  %60 = icmp eq i64 %24, 0
  br i1 %60, label %86, label %61

61:                                               ; preds = %58
  %62 = sub nsw i64 0, %25
  %63 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 %62
  %64 = bitcast %"class.net::der::Input"* %63 to i8*
  %65 = bitcast %"class.net::der::Input"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %24, i1 false) #8
  br label %86

66:                                               ; preds = %50, %66
  %67 = phi %"class.net::der::Input"* [ %84, %66 ], [ %51, %50 ]
  %68 = phi %"class.net::der::Input"* [ %83, %66 ], [ %52, %50 ]
  %69 = bitcast %"class.net::der::Input"* %67 to i8*
  %70 = bitcast %"class.net::der::Input"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false) #8
  %71 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %68, i64 1
  %72 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %67, i64 1
  %73 = bitcast %"class.net::der::Input"* %72 to i8*
  %74 = bitcast %"class.net::der::Input"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #8
  %75 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %68, i64 2
  %76 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %67, i64 2
  %77 = bitcast %"class.net::der::Input"* %76 to i8*
  %78 = bitcast %"class.net::der::Input"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #8
  %79 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %68, i64 3
  %80 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %67, i64 3
  %81 = bitcast %"class.net::der::Input"* %80 to i8*
  %82 = bitcast %"class.net::der::Input"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false) #8
  %83 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %68, i64 4
  %84 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %67, i64 4
  %85 = icmp ult %"class.net::der::Input"* %83, %7
  br i1 %85, label %66, label %55

86:                                               ; preds = %58, %61
  %87 = icmp ugt %"class.net::der::Input"* %1, %2
  br i1 %87, label %93, label %88

88:                                               ; preds = %86
  %89 = load %"class.net::der::Input"*, %"class.net::der::Input"** %6, align 8
  %90 = icmp ugt %"class.net::der::Input"* %89, %2
  %91 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %2, i64 1
  %92 = select i1 %90, %"class.net::der::Input"* %91, %"class.net::der::Input"* %2
  br label %93

93:                                               ; preds = %88, %86
  %94 = phi %"class.net::der::Input"* [ %2, %86 ], [ %92, %88 ]
  %95 = bitcast %"class.net::der::Input"* %1 to i8*
  %96 = bitcast %"class.net::der::Input"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false)
  br label %235

97:                                               ; preds = %3
  %98 = bitcast %"class.net::der::Input"** %6 to i64*
  %99 = bitcast %"class.std::__1::vector"* %0 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %11, %100
  %102 = ashr exact i64 %101, 4
  %103 = add nsw i64 %102, 1
  %104 = icmp ugt i64 %103, 1152921504606846975
  br i1 %104, label %105, label %107

105:                                              ; preds = %97
  %106 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %106) #9
  unreachable

107:                                              ; preds = %97
  %108 = bitcast %"class.net::der::Input"** %8 to i64*
  %109 = sub i64 %12, %100
  %110 = ashr exact i64 %109, 4
  %111 = icmp ult i64 %110, 576460752303423487
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = sub i64 %4, %100
  %114 = ashr exact i64 %113, 4
  br label %125

115:                                              ; preds = %107
  %116 = ashr exact i64 %109, 3
  %117 = icmp ult i64 %116, %103
  %118 = select i1 %117, i64 %103, i64 %116
  %119 = sub i64 %4, %100
  %120 = ashr exact i64 %119, 4
  %121 = icmp eq i64 %118, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %115
  %123 = icmp ugt i64 %118, 1152921504606846975
  br i1 %123, label %124, label %125

124:                                              ; preds = %122
  tail call void @abort() #9
  unreachable

125:                                              ; preds = %112, %122
  %126 = phi i64 [ 1152921504606846975, %112 ], [ %118, %122 ]
  %127 = phi i64 [ %114, %112 ], [ %120, %122 ]
  %128 = shl i64 %126, 4
  %129 = tail call i8* @_Znwm(i64 %128) #10
  %130 = bitcast i8* %129 to %"class.net::der::Input"*
  br label %131

131:                                              ; preds = %115, %125
  %132 = phi i64 [ %127, %125 ], [ %120, %115 ]
  %133 = phi i64 [ %126, %125 ], [ 0, %115 ]
  %134 = phi i8* [ %129, %125 ], [ null, %115 ]
  %135 = phi %"class.net::der::Input"* [ %130, %125 ], [ null, %115 ]
  %136 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %135, i64 %132
  %137 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %135, i64 %133
  %138 = ptrtoint %"class.net::der::Input"* %137 to i64
  %139 = icmp eq i64 %132, %133
  %140 = bitcast %"class.net::der::Input"* %136 to i8*
  br i1 %139, label %141, label %165

141:                                              ; preds = %131
  %142 = icmp sgt i64 %132, 0
  br i1 %142, label %143, label %148

143:                                              ; preds = %141
  %144 = add nuw nsw i64 %132, 1
  %145 = sdiv i64 %144, -2
  %146 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %136, i64 %145
  %147 = bitcast %"class.net::der::Input"* %146 to i8*
  br label %165

148:                                              ; preds = %141
  %149 = shl nsw i64 %132, 1
  %150 = icmp eq i64 %132, 0
  %151 = select i1 %150, i64 1, i64 %149
  %152 = icmp ugt i64 %151, 1152921504606846975
  br i1 %152, label %153, label %154

153:                                              ; preds = %148
  tail call void @abort() #9
  unreachable

154:                                              ; preds = %148
  %155 = lshr i64 %151, 2
  %156 = shl i64 %151, 4
  %157 = tail call i8* @_Znwm(i64 %156) #10
  %158 = bitcast i8* %157 to %"class.net::der::Input"*
  %159 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %158, i64 %155
  %160 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %158, i64 %151
  %161 = ptrtoint %"class.net::der::Input"* %160 to i64
  %162 = icmp eq %"class.net::der::Input"* %135, null
  %163 = bitcast %"class.net::der::Input"* %159 to i8*
  br i1 %162, label %165, label %164

164:                                              ; preds = %154
  tail call void @_ZdlPv(i8* %134) #10
  br label %165

165:                                              ; preds = %131, %143, %154, %164
  %166 = phi %"class.net::der::Input"* [ %146, %143 ], [ %159, %154 ], [ %159, %164 ], [ %136, %131 ]
  %167 = phi i64 [ %138, %143 ], [ %161, %154 ], [ %161, %164 ], [ %138, %131 ]
  %168 = phi i8* [ %147, %143 ], [ %163, %154 ], [ %163, %164 ], [ %140, %131 ]
  %169 = bitcast %"class.net::der::Input"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false) #8
  %170 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %166, i64 1
  %171 = load %"class.net::der::Input"*, %"class.net::der::Input"** %5, align 8
  %172 = ptrtoint %"class.net::der::Input"* %171 to i64
  %173 = sub i64 %4, %172
  %174 = ashr exact i64 %173, 4
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %166, i64 %175
  %177 = ptrtoint %"class.net::der::Input"* %176 to i64
  %178 = icmp sgt i64 %173, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %165
  %180 = bitcast %"class.net::der::Input"* %176 to i8*
  %181 = bitcast %"class.net::der::Input"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 %173, i1 false) #8
  br label %182

182:                                              ; preds = %179, %165
  %183 = load %"class.net::der::Input"*, %"class.net::der::Input"** %6, align 8
  %184 = icmp eq %"class.net::der::Input"* %183, %1
  br i1 %184, label %228, label %185

185:                                              ; preds = %182
  %186 = getelementptr %"class.net::der::Input", %"class.net::der::Input"* %183, i64 -1, i32 0
  %187 = ptrtoint i8** %186 to i64
  %188 = sub i64 %187, %4
  %189 = lshr i64 %188, 4
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 3
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %203, label %193

193:                                              ; preds = %185, %193
  %194 = phi %"class.net::der::Input"* [ %200, %193 ], [ %170, %185 ]
  %195 = phi %"class.net::der::Input"* [ %199, %193 ], [ %1, %185 ]
  %196 = phi i64 [ %201, %193 ], [ %191, %185 ]
  %197 = bitcast %"class.net::der::Input"* %194 to i8*
  %198 = bitcast %"class.net::der::Input"* %195 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 16, i1 false) #8
  %199 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %195, i64 1
  %200 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %194, i64 1
  %201 = add i64 %196, -1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %193, !llvm.loop !4

203:                                              ; preds = %193, %185
  %204 = phi %"class.net::der::Input"* [ undef, %185 ], [ %200, %193 ]
  %205 = phi %"class.net::der::Input"* [ %170, %185 ], [ %200, %193 ]
  %206 = phi %"class.net::der::Input"* [ %1, %185 ], [ %199, %193 ]
  %207 = icmp ult i64 %188, 48
  br i1 %207, label %228, label %208

208:                                              ; preds = %203, %208
  %209 = phi %"class.net::der::Input"* [ %226, %208 ], [ %205, %203 ]
  %210 = phi %"class.net::der::Input"* [ %225, %208 ], [ %206, %203 ]
  %211 = bitcast %"class.net::der::Input"* %209 to i8*
  %212 = bitcast %"class.net::der::Input"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 16, i1 false) #8
  %213 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %210, i64 1
  %214 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %209, i64 1
  %215 = bitcast %"class.net::der::Input"* %214 to i8*
  %216 = bitcast %"class.net::der::Input"* %213 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 16, i1 false) #8
  %217 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %210, i64 2
  %218 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %209, i64 2
  %219 = bitcast %"class.net::der::Input"* %218 to i8*
  %220 = bitcast %"class.net::der::Input"* %217 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 16, i1 false) #8
  %221 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %210, i64 3
  %222 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %209, i64 3
  %223 = bitcast %"class.net::der::Input"* %222 to i8*
  %224 = bitcast %"class.net::der::Input"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 16, i1 false) #8
  %225 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %210, i64 4
  %226 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %209, i64 4
  %227 = icmp eq %"class.net::der::Input"* %225, %183
  br i1 %227, label %228, label %208

228:                                              ; preds = %203, %208, %182
  %229 = phi %"class.net::der::Input"* [ %170, %182 ], [ %204, %203 ], [ %226, %208 ]
  %230 = ptrtoint %"class.net::der::Input"* %229 to i64
  %231 = load %"class.net::der::Input"*, %"class.net::der::Input"** %5, align 8
  store i64 %177, i64* %99, align 8
  store i64 %230, i64* %98, align 8
  store i64 %167, i64* %108, align 8
  %232 = icmp eq %"class.net::der::Input"* %231, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %228
  %234 = bitcast %"class.net::der::Input"* %231 to i8*
  tail call void @_ZdlPv(i8* %234) #10
  br label %235

235:                                              ; preds = %233, %228, %15, %93
  %236 = phi %"class.net::der::Input"* [ %1, %15 ], [ %1, %93 ], [ %166, %228 ], [ %166, %233 ]
  ret %"class.net::der::Input"* %236
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net22ParsePolicyConstraintsERKNS_3der5InputEPNS_23ParsedPolicyConstraintsE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParsedPolicyConstraints"*) local_unnamed_addr #1 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.net::der::Input", align 8
  %6 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #8
  %8 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %4) #8
  %10 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Parser"* nonnull %4) #8
  br i1 %10, label %11, label %44

11:                                               ; preds = %2
  %12 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %12, label %13, label %44

13:                                               ; preds = %11
  %14 = bitcast %"class.net::der::Input"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = bitcast %"class.net::der::Input"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %5) #8
  %16 = call i32 @_ZN3net3der24ContextSpecificPrimitiveEh(i8 zeroext 0) #8
  %17 = getelementptr inbounds %"struct.net::ParsedPolicyConstraints", %"struct.net::ParsedPolicyConstraints"* %1, i64 0, i32 0
  %18 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %4, i32 %16, %"class.net::der::Input"* nonnull %5, i8* %17) #8
  br i1 %18, label %19, label %42

19:                                               ; preds = %13
  %20 = load i8, i8* %17, align 1, !range !5
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"struct.net::ParsedPolicyConstraints", %"struct.net::ParsedPolicyConstraints"* %1, i64 0, i32 1
  br i1 %21, label %25, label %23

23:                                               ; preds = %19
  %24 = call zeroext i1 @_ZN3net3der10ParseUint8ERKNS0_5InputEPh(%"class.net::der::Input"* nonnull dereferenceable(16) %5, i8* %22) #8
  br i1 %24, label %26, label %42

25:                                               ; preds = %19
  store i8 0, i8* %22, align 1
  br label %26

26:                                               ; preds = %23, %25
  %27 = call i32 @_ZN3net3der24ContextSpecificPrimitiveEh(i8 zeroext 1) #8
  %28 = getelementptr inbounds %"struct.net::ParsedPolicyConstraints", %"struct.net::ParsedPolicyConstraints"* %1, i64 0, i32 2
  %29 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %4, i32 %27, %"class.net::der::Input"* nonnull %5, i8* %28) #8
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = load i8, i8* %28, align 1, !range !5
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"struct.net::ParsedPolicyConstraints", %"struct.net::ParsedPolicyConstraints"* %1, i64 0, i32 3
  br i1 %32, label %36, label %34

34:                                               ; preds = %30
  %35 = call zeroext i1 @_ZN3net3der10ParseUint8ERKNS0_5InputEPh(%"class.net::der::Input"* nonnull dereferenceable(16) %5, i8* %33) #8
  br i1 %35, label %37, label %42

36:                                               ; preds = %30
  store i8 0, i8* %33, align 1
  br label %37

37:                                               ; preds = %34, %36
  %38 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %38, label %42, label %39

39:                                               ; preds = %37
  %40 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #8
  %41 = xor i1 %40, true
  br label %42

42:                                               ; preds = %39, %37, %34, %26, %23, %13
  %43 = phi i1 [ false, %13 ], [ false, %23 ], [ false, %26 ], [ false, %34 ], [ false, %37 ], [ %41, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %44

44:                                               ; preds = %11, %2, %42
  %45 = phi i1 [ %43, %42 ], [ false, %2 ], [ false, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret i1 %45
}

declare zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"*, i32, %"class.net::der::Input"*, i8*) local_unnamed_addr #3

declare i32 @_ZN3net3der24ContextSpecificPrimitiveEh(i8 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN3net3der10ParseUint8ERKNS0_5InputEPh(%"class.net::der::Input"* dereferenceable(16), i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net21ParseInhibitAnyPolicyERKNS_3der5InputEPh(%"class.net::der::Input"* dereferenceable(16), i8*) local_unnamed_addr #1 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #8
  %6 = call zeroext i1 @_ZN3net3der6Parser9ReadUint8EPh(%"class.net::der::Parser"* nonnull %3, i8* %1) #8
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #8
  %9 = xor i1 %8, true
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi i1 [ false, %2 ], [ %9, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret i1 %11
}

declare zeroext i1 @_ZN3net3der6Parser9ReadUint8EPh(%"class.net::der::Parser"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19ParsePolicyMappingsERKNS_3der5InputEPNSt3__16vectorINS_19ParsedPolicyMappingENS4_9allocatorIS6_EEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::vector.12"*) local_unnamed_addr #1 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"struct.net::ParsedPolicyMapping", align 8
  %7 = bitcast %"class.std::__1::vector.12"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"struct.net::ParsedPolicyMapping"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #8
  %13 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  %14 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %4) #8
  %15 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Parser"* nonnull %4) #8
  br i1 %15, label %16, label %107

16:                                               ; preds = %2
  %17 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %17, label %18, label %107

18:                                               ; preds = %16
  %19 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %19, label %20, label %104

20:                                               ; preds = %18
  %21 = bitcast %"class.net::der::Parser"* %5 to i8*
  %22 = bitcast %"struct.net::ParsedPolicyMapping"* %6 to i8*
  %23 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %6, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %6, i64 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"struct.net::ParsedPolicyMapping"** %25 to i64*
  %27 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 0
  %28 = bitcast %"class.net::der::Parser"* %5 to i8*
  %29 = bitcast %"struct.net::ParsedPolicyMapping"* %6 to i8*
  br label %30

30:                                               ; preds = %20, %102
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %5) #8
  %31 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Parser"* nonnull %5) #8
  br i1 %31, label %33, label %32

32:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #8
  br label %107

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %23) #8
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %24) #8
  %34 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %5, i32 6, %"class.net::der::Input"* nonnull %23) #8
  br i1 %34, label %35, label %101

35:                                               ; preds = %33
  %36 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %5, i32 6, %"class.net::der::Input"* %24) #8
  br i1 %36, label %37, label %101

37:                                               ; preds = %35
  %38 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #8
  br i1 %38, label %101, label %39

39:                                               ; preds = %37
  %40 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %9, align 8
  %41 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %25, align 8
  %42 = icmp eq %"struct.net::ParsedPolicyMapping"* %40, %41
  %43 = ptrtoint %"struct.net::ParsedPolicyMapping"* %41 to i64
  br i1 %42, label %48, label %44

44:                                               ; preds = %39
  %45 = bitcast %"struct.net::ParsedPolicyMapping"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %22, i64 32, i1 false) #8
  %46 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %40, i64 1
  %47 = ptrtoint %"struct.net::ParsedPolicyMapping"* %46 to i64
  store i64 %47, i64* %10, align 8
  br label %102

48:                                               ; preds = %39
  %49 = ptrtoint %"struct.net::ParsedPolicyMapping"* %40 to i64
  %50 = load i64, i64* %7, align 8
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 5
  %53 = add nsw i64 %52, 1
  %54 = icmp ugt i64 %53, 576460752303423487
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::vector.12"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %56) #9
  unreachable

57:                                               ; preds = %48
  %58 = sub i64 %43, %50
  %59 = ashr exact i64 %58, 5
  %60 = icmp ult i64 %59, 288230376151711743
  br i1 %60, label %61, label %69

61:                                               ; preds = %57
  %62 = ashr exact i64 %58, 4
  %63 = icmp ult i64 %62, %53
  %64 = select i1 %63, i64 %53, i64 %62
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %61
  %67 = icmp ugt i64 %64, 576460752303423487
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  call void @abort() #9
  unreachable

69:                                               ; preds = %66, %57
  %70 = phi i64 [ %64, %66 ], [ 576460752303423487, %57 ]
  %71 = shl i64 %70, 5
  %72 = call i8* @_Znwm(i64 %71) #10
  %73 = bitcast i8* %72 to %"struct.net::ParsedPolicyMapping"*
  br label %74

74:                                               ; preds = %69, %61
  %75 = phi i64 [ %70, %69 ], [ 0, %61 ]
  %76 = phi %"struct.net::ParsedPolicyMapping"* [ %73, %69 ], [ null, %61 ]
  %77 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %76, i64 %52
  %78 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %76, i64 %75
  %79 = ptrtoint %"struct.net::ParsedPolicyMapping"* %78 to i64
  %80 = bitcast %"struct.net::ParsedPolicyMapping"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* nonnull align 8 %22, i64 32, i1 false) #8
  %81 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %77, i64 1
  %82 = ptrtoint %"struct.net::ParsedPolicyMapping"* %81 to i64
  %83 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %27, align 8
  %84 = load i64, i64* %10, align 8
  %85 = ptrtoint %"struct.net::ParsedPolicyMapping"* %83 to i64
  %86 = sub i64 %84, %85
  %87 = ashr exact i64 %86, 5
  %88 = sub nsw i64 0, %87
  %89 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %77, i64 %88
  %90 = ptrtoint %"struct.net::ParsedPolicyMapping"* %89 to i64
  %91 = icmp sgt i64 %86, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %74
  %93 = bitcast %"struct.net::ParsedPolicyMapping"* %89 to i8*
  %94 = bitcast %"struct.net::ParsedPolicyMapping"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %86, i1 false) #8
  %95 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %27, align 8
  br label %96

96:                                               ; preds = %92, %74
  %97 = phi %"struct.net::ParsedPolicyMapping"* [ %83, %74 ], [ %95, %92 ]
  store i64 %90, i64* %7, align 8
  store i64 %82, i64* %10, align 8
  store i64 %79, i64* %26, align 8
  %98 = icmp eq %"struct.net::ParsedPolicyMapping"* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %96
  %100 = bitcast %"struct.net::ParsedPolicyMapping"* %97 to i8*
  call void @_ZdlPv(i8* %100) #10
  br label %102

101:                                              ; preds = %33, %35, %37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #8
  br label %107

102:                                              ; preds = %44, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #8
  %103 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %103, label %30, label %104

104:                                              ; preds = %102, %18
  %105 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #8
  %106 = xor i1 %105, true
  br label %107

107:                                              ; preds = %101, %32, %104, %16, %2
  %108 = phi i1 [ false, %2 ], [ false, %16 ], [ %106, %104 ], [ false, %32 ], [ false, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  ret i1 %108
}

declare zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZN3net3der6Parser15ReadTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"*, i32*, %"class.net::der::Input"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{i8 0, i8 2}
