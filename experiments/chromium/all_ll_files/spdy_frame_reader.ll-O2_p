; ModuleID = '../../net/third_party/quiche/src/spdy/core/spdy_frame_reader.cc'
source_filename = "../../net/third_party/quiche/src/spdy/core/spdy_frame_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spdy::SpdyFrameReader" = type { i8*, i64, i64 }
%"class.absl::string_view" = type { i8*, i64 }

@_ZN4spdy15SpdyFrameReaderC1EPKcm = hidden unnamed_addr alias void (%"class.spdy::SpdyFrameReader"*, i8*, i64), void (%"class.spdy::SpdyFrameReader"*, i8*, i64)* @_ZN4spdy15SpdyFrameReaderC2EPKcm

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4spdy15SpdyFrameReaderC2EPKcm(%"class.spdy::SpdyFrameReader"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  store i64 0, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader9ReadUInt8EPh(%"class.spdy::SpdyFrameReader"* nocapture, i8* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %6
  %12 = load i8, i8* %11, align 1
  store i8 %12, i8* %1, align 1
  %13 = load i64, i64* %5, align 8
  %14 = add i64 %13, 1
  br label %15

15:                                               ; preds = %2, %8
  %16 = phi i64 [ %14, %8 ], [ %4, %2 ]
  %17 = phi i1 [ true, %8 ], [ false, %2 ]
  store i64 %16, i64* %5, align 8
  ret i1 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4spdy15SpdyFrameReader7CanReadEm(%"class.spdy::SpdyFrameReader"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp uge i64 %7, %1
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4spdy15SpdyFrameReader9OnFailureEv(%"class.spdy::SpdyFrameReader"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader10ReadUInt16EPt(%"class.spdy::SpdyFrameReader"* nocapture, i16* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ugt i64 %7, 1
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %6
  %13 = bitcast i8* %12 to i16*
  %14 = load i16, i16* %13, align 2
  %15 = tail call i16 @llvm.bswap.i16(i16 %14) #7
  store i16 %15, i16* %1, align 2
  %16 = load i64, i64* %5, align 8
  %17 = add i64 %16, 2
  br label %18

18:                                               ; preds = %2, %9
  %19 = phi i64 [ %17, %9 ], [ %4, %2 ]
  %20 = phi i1 [ true, %9 ], [ false, %2 ]
  store i64 %19, i64* %5, align 8
  ret i1 %20
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader10ReadUInt32EPj(%"class.spdy::SpdyFrameReader"* nocapture, i32* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ugt i64 %7, 3
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %6
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #7
  store i32 %15, i32* %1, align 4
  %16 = load i64, i64* %5, align 8
  %17 = add i64 %16, 4
  br label %18

18:                                               ; preds = %2, %9
  %19 = phi i64 [ %17, %9 ], [ %4, %2 ]
  %20 = phi i1 [ true, %9 ], [ false, %2 ]
  store i64 %19, i64* %5, align 8
  ret i1 %20
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader10ReadUInt64EPm(%"class.spdy::SpdyFrameReader"* nocapture, i64* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ugt i64 %7, 7
  br i1 %8, label %9, label %26

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %6
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #7
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %12, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = tail call i32 @llvm.bswap.i32(i32 %19) #7
  %21 = zext i32 %20 to i64
  %22 = shl nuw i64 %16, 32
  %23 = or i64 %22, %21
  store i64 %23, i64* %1, align 8
  %24 = load i64, i64* %5, align 8
  %25 = add i64 %24, 8
  br label %26

26:                                               ; preds = %2, %9
  %27 = phi i64 [ %25, %9 ], [ %4, %2 ]
  %28 = phi i1 [ true, %9 ], [ false, %2 ]
  store i64 %27, i64* %5, align 8
  ret i1 %28
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader10ReadUInt31EPj(%"class.spdy::SpdyFrameReader"* nocapture, i32* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ugt i64 %7, 3
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  store i64 %4, i64* %5, align 8
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %6
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = tail call i32 @llvm.bswap.i32(i32 %15) #7
  store i32 %16, i32* %1, align 4
  %17 = load i64, i64* %5, align 8
  %18 = add i64 %17, 4
  store i64 %18, i64* %5, align 8
  %19 = load i32, i32* %1, align 4
  %20 = and i32 %19, 2147483647
  store i32 %20, i32* %1, align 4
  br label %21

21:                                               ; preds = %9, %10
  %22 = phi i1 [ true, %10 ], [ false, %9 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader10ReadUInt24EPj(%"class.spdy::SpdyFrameReader"* nocapture, i32* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ugt i64 %7, 2
  br i1 %8, label %9, label %20

9:                                                ; preds = %2
  store i32 0, i32* %1, align 4
  %10 = bitcast i32* %1 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  %12 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = load i64, i64* %5, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %15, i64 3, i1 false)
  %16 = load i32, i32* %1, align 4
  %17 = tail call i32 @llvm.bswap.i32(i32 %16) #7
  store i32 %17, i32* %1, align 4
  %18 = load i64, i64* %5, align 8
  %19 = add i64 %18, 3
  br label %20

20:                                               ; preds = %2, %9
  %21 = phi i64 [ %19, %9 ], [ %4, %2 ]
  %22 = phi i1 [ true, %9 ], [ false, %2 ]
  store i64 %21, i64* %5, align 8
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader17ReadStringPiece16EPN4absl11string_viewE(%"class.spdy::SpdyFrameReader"* nocapture, %"class.absl::string_view"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ugt i64 %7, 1
  br i1 %8, label %9, label %26

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %6
  %13 = bitcast i8* %12 to i16*
  %14 = load i16, i16* %13, align 2
  %15 = tail call i16 @llvm.bswap.i16(i16 %14) #7
  %16 = add i64 %6, 2
  store i64 %16, i64* %5, align 8
  %17 = zext i16 %15 to i64
  %18 = sub i64 %4, %16
  %19 = icmp ult i64 %18, %17
  br i1 %19, label %26, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds i8, i8* %11, i64 %16
  %22 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  store i64 %17, i64* %23, align 8
  %24 = load i64, i64* %5, align 8
  %25 = add i64 %24, %17
  br label %26

26:                                               ; preds = %9, %2, %20
  %27 = phi i64 [ %25, %20 ], [ %4, %2 ], [ %4, %9 ]
  %28 = phi i1 [ true, %20 ], [ false, %2 ], [ false, %9 ]
  store i64 %27, i64* %5, align 8
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader17ReadStringPiece32EPN4absl11string_viewE(%"class.spdy::SpdyFrameReader"* nocapture, %"class.absl::string_view"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ugt i64 %7, 3
  br i1 %8, label %9, label %26

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %6
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #7
  %16 = add i64 %6, 4
  store i64 %16, i64* %5, align 8
  %17 = zext i32 %15 to i64
  %18 = sub i64 %4, %16
  %19 = icmp ult i64 %18, %17
  br i1 %19, label %26, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds i8, i8* %11, i64 %16
  %22 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  store i64 %17, i64* %23, align 8
  %24 = load i64, i64* %5, align 8
  %25 = add i64 %24, %17
  br label %26

26:                                               ; preds = %9, %2, %20
  %27 = phi i64 [ %25, %20 ], [ %4, %2 ], [ %4, %9 ]
  %28 = phi i1 [ true, %20 ], [ false, %2 ], [ false, %9 ]
  store i64 %27, i64* %5, align 8
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader9ReadBytesEPvm(%"class.spdy::SpdyFrameReader"* nocapture, i8* nocapture, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %13, i64 %2, i1 false)
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %2
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi i64 [ %15, %10 ], [ %5, %3 ]
  %18 = phi i1 [ true, %10 ], [ false, %3 ]
  store i64 %17, i64* %6, align 8
  ret i1 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4spdy15SpdyFrameReader4SeekEm(%"class.spdy::SpdyFrameReader"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ult i64 %7, %1
  %9 = add i64 %6, %1
  %10 = select i1 %8, i64 %4, i64 %9
  %11 = xor i1 %8, true
  store i64 %10, i64* %5, align 8
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4spdy15SpdyFrameReader13IsDoneReadingEv(%"class.spdy::SpdyFrameReader"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.spdy::SpdyFrameReader", %"class.spdy::SpdyFrameReader"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  ret i1 %6
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
