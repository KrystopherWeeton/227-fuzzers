; ModuleID = '../../third_party/skia/src/core/SkPictureImageGenerator.cpp'
source_filename = "../../third_party/skia/src/core/SkPictureImageGenerator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPictureImageGenerator = type { %class.SkImageGenerator.base, %class.sk_sp.12, %class.SkMatrix, %class.SkTLazy }
%class.SkImageGenerator.base = type <{ i32 (...)**, %struct.SkImageInfo, i32 }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.12 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.13", [7 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkTLazy = type { [72 x i8], %class.SkPaint* }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %class.sk_sp.11, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.8 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.9 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.11 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkImageGenerator = type <{ i32 (...)**, %struct.SkImageInfo, i32, [4 x i8] }>
%"struct.SkImageGenerator::Options" = type { i8 }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.20, [384 x i64], %class.sk_sp.21, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.22", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.28" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.20 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.21 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.GrSurfaceProxyView = type <{ %class.sk_sp.69, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.69 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.70, %class.sk_sp.71, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.107" }
%class.SkNVRefCnt.70 = type { %"struct.std::__1::atomic" }
%class.sk_sp.71 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.75 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.72, [4 x i8] }>
%union.anon.72 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.73, i8* }
%class.sk_sp.73 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.74, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.74 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.75 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.76, void (i8*)*, i8* }
%class.SkNVRefCnt.76 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.77, i32, [4 x i8] }
%union.anon.77 = type { %struct.anon.78 }
%struct.anon.78 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.71, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.104, %class.sk_sp.106, %class.sk_sp.106 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.86, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.86 = type { %class.SkTHashTable.87 }
%class.SkTHashTable.87 = type { i32, i32, %class.SkAutoTArray.88 }
%class.SkAutoTArray.88 = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.95, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.95 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.104 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.105, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.105 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.106 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl.110" }
%"struct.std::__1::__cxx_atomic_impl.110" = type { %"struct.std::__1::__cxx_atomic_base_impl.111" }
%"struct.std::__1::__cxx_atomic_base_impl.111" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.38", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.37 }
%class.sk_sp.37 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.53 }
%class.SkFibBlockSizes.53 = type { i32 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrProxyProvider* }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.112 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.sk_sp.113 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.114", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.114" = type { i32 }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.13", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.115", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.115" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.116", %class.sk_sp.73, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.116" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }

$_ZN23SkPictureImageGeneratorD2Ev = comdat any

$_ZN23SkPictureImageGeneratorD0Ev = comdat any

$_ZN16SkImageGenerator16onRefEncodedDataEv = comdat any

$_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext = comdat any

$_ZNK16SkImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN16SkImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

@_ZTV23SkPictureImageGenerator = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPictureImageGenerator*)* @_ZN23SkPictureImageGeneratorD2Ev to i8*), i8* bitcast (void (%class.SkPictureImageGenerator*)* @_ZN23SkPictureImageGeneratorD0Ev to i8*), i8* bitcast (void (%class.sk_sp.73*, %class.SkImageGenerator*)* @_ZN16SkImageGenerator16onRefEncodedDataEv to i8*), i8* bitcast (i1 (%class.SkPictureImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)* @_ZN23SkPictureImageGenerator11onGetPixelsERK11SkImageInfoPvmRKN16SkImageGenerator7OptionsE to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)* @_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK16SkImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)* @_ZN16SkImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (void (%class.GrSurfaceProxyView*, %class.SkPictureImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo*, %struct.SkIPoint*, i1, i32)* @_ZN23SkPictureImageGenerator17onGenerateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@_ZTV16SkImageGenerator = external unnamed_addr constant { [10 x i8*] }, align 8

@_ZN23SkPictureImageGeneratorC1ERK11SkImageInfo5sk_spI9SkPictureEPK8SkMatrixPK7SkPaint = hidden unnamed_addr alias void (%class.SkPictureImageGenerator*, %struct.SkImageInfo*, %class.sk_sp.12*, %class.SkMatrix*, %class.SkPaint*), void (%class.SkPictureImageGenerator*, %struct.SkImageInfo*, %class.sk_sp.12*, %class.SkMatrix*, %class.SkPaint*)* @_ZN23SkPictureImageGeneratorC2ERK11SkImageInfo5sk_spI9SkPictureEPK8SkMatrixPK7SkPaint

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkImageGenerator* @_ZN16SkImageGenerator15MakeFromPictureERK7SkISize5sk_spI9SkPictureEPK8SkMatrixPK7SkPaintN7SkImage8BitDepthES3_I12SkColorSpaceE(%struct.SkISize* nocapture readonly dereferenceable(8), %class.sk_sp.12* nocapture, %class.SkMatrix* readonly, %class.SkPaint*, i32, %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkImageInfo, align 8
  %8 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %1, i64 0, i32 0
  %9 = load %class.SkPicture*, %class.SkPicture** %8, align 8
  %10 = icmp eq %class.SkPicture* %9, null
  br i1 %10, label %80, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  %15 = ptrtoint %class.SkColorSpace* %13 to i64
  br i1 %14, label %80, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %80, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %80, label %24

24:                                               ; preds = %20
  %25 = icmp eq i32 %4, 1
  %26 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 1
  %29 = bitcast %struct.SkISize* %0 to i64*
  %30 = load i64, i64* %29, align 4
  store %class.SkColorSpace* null, %class.SkColorSpace** %12, align 8
  %31 = select i1 %25, i64 8589934605, i64 8589934598
  %32 = bitcast %struct.SkImageInfo* %7 to i64*
  store i64 %15, i64* %32, align 8, !alias.scope !2
  %33 = bitcast i32* %28 to i64*
  store i64 %31, i64* %33, align 8, !alias.scope !2
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 1
  %35 = bitcast %struct.SkISize* %34 to i64*
  store i64 %30, i64* %35, align 8, !alias.scope !2
  %36 = tail call i8* @_Znwm(i64 168) #9
  %37 = bitcast %class.sk_sp.12* %1 to i64*
  %38 = load i64, i64* %37, align 8
  store %class.SkPicture* null, %class.SkPicture** %8, align 8
  %39 = bitcast i8* %36 to %class.SkImageGenerator*
  call void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator* nonnull %39, %struct.SkImageInfo* nonnull dereferenceable(24) %7, i32 0) #8
  %40 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23SkPictureImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %36, i64 40
  %42 = bitcast i8* %41 to i64*
  store i64 %38, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 48
  %44 = bitcast i8* %43 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %44, align 4
  %45 = getelementptr inbounds i8, i8* %36, i64 64
  %46 = bitcast i8* %45 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %46, align 4
  %47 = getelementptr inbounds i8, i8* %36, i64 80
  %48 = bitcast i8* %47 to float*
  store float 1.000000e+00, float* %48, align 4
  %49 = getelementptr inbounds i8, i8* %36, i64 84
  %50 = bitcast i8* %49 to i32*
  store i32 16, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %36, i64 88
  %52 = getelementptr inbounds i8, i8* %36, i64 160
  %53 = bitcast i8* %52 to %class.SkPaint**
  store %class.SkPaint* null, %class.SkPaint** %53, align 8
  %54 = icmp eq %class.SkMatrix* %2, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %24
  %56 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 4 %56, i64 40, i1 false) #8
  br label %60

57:                                               ; preds = %24
  %58 = bitcast i8* %43 to %class.SkMatrix*
  %59 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* %58) #8
  br label %60

60:                                               ; preds = %57, %55
  %61 = icmp eq %class.SkPaint* %3, null
  br i1 %61, label %70, label %62

62:                                               ; preds = %60
  %63 = load %class.SkPaint*, %class.SkPaint** %53, align 8
  %64 = icmp eq %class.SkPaint* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %63, %class.SkPaint* nonnull dereferenceable(72) %3) #8
  br label %70

67:                                               ; preds = %62
  %68 = bitcast i8* %51 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %68, %class.SkPaint* nonnull dereferenceable(72) %3) #8
  %69 = bitcast i8* %52 to i8**
  store i8* %51, i8** %69, align 8
  br label %70

70:                                               ; preds = %67, %65, %60
  %71 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %72 = icmp eq %class.SkColorSpace* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = bitcast %class.SkColorSpace* %71 to i8*
  call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %70, %73, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  br label %80

80:                                               ; preds = %11, %6, %16, %20, %79
  %81 = phi %class.SkImageGenerator* [ %39, %79 ], [ null, %20 ], [ null, %11 ], [ null, %6 ], [ null, %16 ]
  ret %class.SkImageGenerator* %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SkPictureImageGeneratorC2ERK11SkImageInfo5sk_spI9SkPictureEPK8SkMatrixPK7SkPaint(%class.SkPictureImageGenerator*, %struct.SkImageInfo* dereferenceable(24), %class.sk_sp.12* nocapture, %class.SkMatrix* readonly, %class.SkPaint*) unnamed_addr #0 align 2 {
  %6 = bitcast %class.SkPictureImageGenerator* %0 to %class.SkImageGenerator*
  tail call void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator* %6, %struct.SkImageInfo* dereferenceable(24) %1, i32 0) #8
  %7 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23SkPictureImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %2, i64 0, i32 0
  %10 = bitcast %class.sk_sp.12* %2 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkPicture* null, %class.SkPicture** %9, align 8
  %12 = bitcast %class.sk_sp.12* %8 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 2
  %14 = bitcast %class.SkMatrix* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %14, align 4
  %15 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 2, i32 0, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %16, align 4
  %17 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 2, i32 1
  store i32 16, i32* %18, align 4
  %19 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 3
  %20 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 3, i32 1
  store %class.SkPaint* null, %class.SkPaint** %20, align 8
  %21 = icmp eq %class.SkMatrix* %3, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %5
  %23 = bitcast %class.SkMatrix* %13 to i8*
  %24 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 4 %24, i64 40, i1 false)
  br label %27

25:                                               ; preds = %5
  %26 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* %13) #8
  br label %27

27:                                               ; preds = %25, %22
  %28 = icmp eq %class.SkPaint* %4, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = load %class.SkPaint*, %class.SkPaint** %20, align 8
  %31 = icmp eq %class.SkPaint* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = tail call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %30, %class.SkPaint* nonnull dereferenceable(72) %4) #8
  br label %37

34:                                               ; preds = %29
  %35 = bitcast %class.SkTLazy* %19 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %35, %class.SkPaint* nonnull dereferenceable(72) %4) #8
  %36 = bitcast %class.SkPaint** %20 to %class.SkTLazy**
  store %class.SkTLazy* %19, %class.SkTLazy** %36, align 8
  br label %37

37:                                               ; preds = %34, %32, %27
  ret void
}

declare void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator*, %struct.SkImageInfo* dereferenceable(24), i32) unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23SkPictureImageGenerator11onGetPixelsERK11SkImageInfoPvmRKN16SkImageGenerator7OptionsE(%class.SkPictureImageGenerator*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkImageGenerator::Options"* nocapture readnone dereferenceable(1)) unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca %class.SkSurfaceProps, align 4
  %8 = bitcast %class.SkSurfaceProps* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %7, i64 0, i32 0
  store i32 -1431655766, i32* %9, align 4
  %10 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %7, i64 0, i32 1
  store i32 -1431655766, i32* %10, align 4
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %7, i32 0, i32 0) #8
  %11 = call %class.SkCanvas* @_ZN8SkCanvas16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, %class.SkSurfaceProps* nonnull %7) #8
  %12 = icmp eq %class.SkCanvas* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %5
  %14 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRGBA4f*
  %15 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #8
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 0
  store <2 x float> %18, <2 x float>* %17, align 8
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %20 = extractvalue { <2 x float>, <2 x float> } %16, 1
  store <2 x float> %20, <2 x float>* %19, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* nonnull %11, %struct.SkRGBA4f* nonnull dereferenceable(16) %14, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  %21 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 2
  %22 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 3, i32 1
  %23 = load %class.SkPaint*, %class.SkPaint** %22, align 8
  %24 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 1, i32 0
  %25 = load %class.SkPicture*, %class.SkPicture** %24, align 8
  call void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas* nonnull %11, %class.SkPicture* %25, %class.SkMatrix* %21, %class.SkPaint* %23) #8
  %26 = bitcast %class.SkCanvas* %11 to void (%class.SkCanvas*)***
  %27 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %27, i64 1
  %29 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %28, align 8
  call void %29(%class.SkCanvas* nonnull %11) #8
  br label %30

30:                                               ; preds = %5, %13
  %31 = phi i1 [ true, %13 ], [ false, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  ret i1 %31
}

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #3

declare %class.SkCanvas* @_ZN8SkCanvas16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%struct.SkImageInfo* dereferenceable(24), i8*, i64, %class.SkSurfaceProps*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SkPictureImageGenerator17onGenerateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy(%class.GrSurfaceProxyView* noalias sret, %class.SkPictureImageGenerator* nocapture readonly, %class.GrRecordingContext*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIPoint* nocapture readonly dereferenceable(8), i1 zeroext, i32) unnamed_addr #0 align 2 {
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %class.SkSurfaceProps, align 4
  %10 = alloca %class.sk_sp.112, align 8
  %11 = alloca %class.SkMatrix, align 4
  %12 = alloca %class.sk_sp.113, align 8
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = bitcast %class.SkSurfaceProps* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %9, i64 0, i32 0
  store i32 -1431655766, i32* %15, align 4
  %16 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %9, i64 0, i32 1
  store i32 -1431655766, i32* %16, align 4
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %9, i32 0, i32 0) #8
  %17 = icmp ne i32 %6, 1
  %18 = bitcast %class.sk_sp.112* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %class.sk_sp.112, %class.sk_sp.112* %10, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %19, align 8
  call void @_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfoi15GrSurfaceOriginPK14SkSurfacePropsb(%class.sk_sp.112* nonnull sret %10, %class.GrRecordingContext* %2, i1 zeroext %17, %struct.SkImageInfo* dereferenceable(24) %3, i32 0, i32 0, %class.SkSurfaceProps* nonnull %9, i1 zeroext %5) #8
  %20 = load %class.SkSurface*, %class.SkSurface** %19, align 8
  %21 = icmp eq %class.SkSurface* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %7
  %23 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %24 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #8
  br label %109

25:                                               ; preds = %7
  %26 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #8
  %27 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %1, i64 0, i32 2
  %28 = bitcast %class.SkMatrix* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 8 %28, i64 40, i1 false)
  %29 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = sub nsw i32 0, %30
  %32 = sitofp i32 %31 to float
  %33 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sub nsw i32 0, %34
  %36 = sitofp i32 %35 to float
  %37 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %11, float %32, float %36) #8
  %38 = load %class.SkSurface*, %class.SkSurface** %19, align 8
  %39 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %38) #8
  %40 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRGBA4f*
  %41 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #8
  %42 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #8
  %43 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %44 = extractvalue { <2 x float>, <2 x float> } %42, 0
  store <2 x float> %44, <2 x float>* %43, align 8
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %46 = extractvalue { <2 x float>, <2 x float> } %42, 1
  store <2 x float> %46, <2 x float>* %45, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %39, %struct.SkRGBA4f* nonnull dereferenceable(16) %40, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #8
  %47 = load %class.SkSurface*, %class.SkSurface** %19, align 8
  %48 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %47) #8
  %49 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %1, i64 0, i32 1, i32 0
  %50 = load %class.SkPicture*, %class.SkPicture** %49, align 8
  %51 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %1, i64 0, i32 3, i32 1
  %52 = load %class.SkPaint*, %class.SkPaint** %51, align 8
  call void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas* %48, %class.SkPicture* %50, %class.SkMatrix* nonnull %11, %class.SkPaint* %52) #8
  %53 = bitcast %class.sk_sp.113* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #8
  %54 = getelementptr inbounds %class.sk_sp.113, %class.sk_sp.113* %12, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %54, align 8
  %55 = load %class.SkSurface*, %class.SkSurface** %19, align 8
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.113* nonnull sret %12, %class.SkSurface* %55) #8
  %56 = load %class.SkImage*, %class.SkImage** %54, align 8
  %57 = icmp eq %class.SkImage* %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %25
  %59 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %60 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #8
  br label %95

61:                                               ; preds = %25
  %62 = bitcast %class.SkImage* %56 to %class.SkImage_Base*
  %63 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #8
  %64 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %67 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 24, i1 false)
  call void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* nonnull sret %13, %class.SkImage_Base* nonnull %62, %class.GrRecordingContext* %2, i1 zeroext %5, i32 0) #8
  %68 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 0, i32 0
  %69 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %64, align 8
  %70 = icmp eq %class.GrSurfaceProxy* %69, null
  br i1 %70, label %89, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %69, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 1 monotonic
  store %class.GrSurfaceProxy* %69, %class.GrSurfaceProxy** %68, align 8
  %74 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %75 = load i32, i32* %65, align 8
  store i32 %75, i32* %74, align 8
  %76 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %77 = load i16, i16* %66, align 4
  store i16 %77, i16* %76, align 2
  %78 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %69, i64 0, i32 1
  %79 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %94

82:                                               ; preds = %71
  %83 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %78, i64 -2
  %84 = bitcast %class.SkNVRefCnt.70* %83 to %class.GrSurfaceProxy*
  %85 = bitcast %class.SkNVRefCnt.70* %83 to void (%class.GrSurfaceProxy*)***
  %86 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %85, align 8
  %87 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %86, i64 1
  %88 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %87, align 8
  call void %88(%class.GrSurfaceProxy* nonnull %84) #8
  br label %94

89:                                               ; preds = %61
  store %class.GrSurfaceProxy* %69, %class.GrSurfaceProxy** %68, align 8
  %90 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %91 = load i32, i32* %65, align 8
  store i32 %91, i32* %90, align 8
  %92 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %93 = load i16, i16* %66, align 4
  store i16 %93, i16* %92, align 2
  br label %94

94:                                               ; preds = %89, %71, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #8
  br label %95

95:                                               ; preds = %94, %58
  %96 = load %class.SkImage*, %class.SkImage** %54, align 8
  %97 = icmp eq %class.SkImage* %96, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %class.SkImage, %class.SkImage* %96, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = bitcast %class.SkImage* %96 to %class.SkRefCntBase*
  %104 = bitcast %class.SkImage* %96 to void (%class.SkRefCntBase*)***
  %105 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, i64 2
  %107 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, align 8
  call void %107(%class.SkRefCntBase* nonnull %103) #8
  br label %108

108:                                              ; preds = %95, %98, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #8
  br label %109

109:                                              ; preds = %108, %22
  %110 = load %class.SkSurface*, %class.SkSurface** %19, align 8
  %111 = icmp eq %class.SkSurface* %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %110, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 -1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %122

116:                                              ; preds = %112
  %117 = bitcast %class.SkSurface* %110 to %class.SkRefCntBase*
  %118 = bitcast %class.SkSurface* %110 to void (%class.SkRefCntBase*)***
  %119 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %118, align 8
  %120 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, i64 2
  %121 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, align 8
  call void %121(%class.SkRefCntBase* nonnull %117) #8
  br label %122

122:                                              ; preds = %109, %112, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  ret void
}

declare void @_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfoi15GrSurfaceOriginPK14SkSurfacePropsb(%class.sk_sp.112* sret, %class.GrRecordingContext*, i1 zeroext, %struct.SkImageInfo* dereferenceable(24), i32, i32, %class.SkSurfaceProps*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #3

declare void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) local_unnamed_addr #3

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.113* sret, %class.SkSurface*) local_unnamed_addr #3

declare void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* sret, %class.SkImage_Base*, %class.GrRecordingContext*, i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkPictureImageGeneratorD2Ev(%class.SkPictureImageGenerator*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23SkPictureImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 3, i32 1
  %4 = load %class.SkPaint*, %class.SkPaint** %3, align 8
  %5 = icmp eq %class.SkPaint* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #8
  store %class.SkPaint* null, %class.SkPaint** %3, align 8
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 1, i32 0
  %9 = load %class.SkPicture*, %class.SkPicture** %8, align 8
  %10 = icmp eq %class.SkPicture* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkPicture* %9 to %class.SkRefCntBase*
  %17 = bitcast %class.SkPicture* %9 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %21

21:                                               ; preds = %7, %11, %15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16SkImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %22 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %class.SkColorSpace*, %class.SkColorSpace** %22, align 8
  %24 = icmp eq %class.SkColorSpace* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %class.SkColorSpace* %23 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %21, %25, %29
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkPictureImageGeneratorD0Ev(%class.SkPictureImageGenerator*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23SkPictureImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 3, i32 1
  %4 = load %class.SkPaint*, %class.SkPaint** %3, align 8
  %5 = icmp eq %class.SkPaint* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #8
  store %class.SkPaint* null, %class.SkPaint** %3, align 8
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 1, i32 0
  %9 = load %class.SkPicture*, %class.SkPicture** %8, align 8
  %10 = icmp eq %class.SkPicture* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkPicture* %9 to %class.SkRefCntBase*
  %17 = bitcast %class.SkPicture* %9 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %21

21:                                               ; preds = %15, %11, %7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16SkImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %22 = getelementptr inbounds %class.SkPictureImageGenerator, %class.SkPictureImageGenerator* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %class.SkColorSpace*, %class.SkColorSpace** %22, align 8
  %24 = icmp eq %class.SkColorSpace* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %class.SkColorSpace* %23 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %21, %25, %29
  %32 = bitcast %class.SkPictureImageGenerator* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkImageGenerator16onRefEncodedDataEv(%class.sk_sp.73* noalias sret, %class.SkImageGenerator*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.sk_sp.73, %class.sk_sp.73* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext(%class.SkImageGenerator*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16SkImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkImageGenerator*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #3

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #8
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #8
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #8
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
