; ModuleID = '../../extensions/browser/api/messaging/channel_endpoint.cc'
source_filename = "../../extensions/browser/api/messaging/channel_endpoint.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ChannelEndpoint" = type { %"class.content::BrowserContext"*, i32, %"struct.extensions::PortContext" }
%"struct.extensions::PortContext" = type { %"class.absl::optional", %"class.absl::optional.0" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.extensions::PortContext::FrameContext" }
%"struct.extensions::PortContext::FrameContext" = type { i32 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"struct.extensions::PortContext::WorkerContext" }
%"struct.extensions::PortContext::WorkerContext" = type { i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.content::BrowserContext" = type opaque
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"struct.extensions::WorkerId" = type <{ %"class.std::__1::basic_string", i32, [4 x i8], i64, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.extensions::ProcessManager" = type { %class.KeyedService, %"class.extensions::ExtensionRegistryObserver", %"class.extensions::EventPageTracker", %"class.content::DevToolsAgentHostObserver", %"class.content::RenderProcessHostObserver", %"class.extensions::ExtensionHostObserver", %"class.extensions::ExtensionRegistry"*, %"class.std::__1::set", %class.scoped_refptr.21, %"class.content::BrowserContext"*, %"class.std::__1::map", %class.scoped_refptr.31, %"class.extensions::WorkerIdSet", %"class.std::__1::map.43", i8, [7 x i8], %"class.base::ObserverList", i64, %"class.std::__1::map.60", %"class.base::ScopedMultiSourceObservation", %"class.std::__1::map.89", %"class.base::WeakPtrFactory.98" }
%class.KeyedService = type { i32 (...)** }
%"class.extensions::ExtensionRegistryObserver" = type { i32 (...)** }
%"class.extensions::EventPageTracker" = type { i32 (...)** }
%"class.content::DevToolsAgentHostObserver" = type { i32 (...)** }
%"class.content::RenderProcessHostObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"class.extensions::ExtensionHostObserver" = type { i32 (...)** }
%"class.extensions::ExtensionRegistry" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%class.scoped_refptr.21 = type { %"class.content::SiteInstance"* }
%"class.content::SiteInstance" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.22" }
%"class.std::__1::__tree.22" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%class.scoped_refptr.31 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.32" }>
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.extensions::WorkerIdSet" = type { %"class.std::__1::set.33" }
%"class.std::__1::set.33" = type { %"class.std::__1::__tree.34" }
%"class.std::__1::__tree.34" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.43" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.55" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::map.60" = type { %"class.std::__1::__tree.61" }
%"class.std::__1::__tree.61" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.base::ScopedMultiSourceObservation" = type { %"class.content::RenderProcessHostObserver"*, %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.content::RenderProcessHost"**, %"class.content::RenderProcessHost"**, %"class.std::__1::__compressed_pair.84" }
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.73", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.73" = type { %"class.std::__1::__tree.74" }
%"class.std::__1::__tree.74" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.content::RenderProcessHost"** }
%"class.std::__1::map.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.base::WeakPtrFactory.98" = type { %"class.base::internal::WeakPtrFactoryBase" }

@_ZN10extensions15ChannelEndpointC1EPN7content14BrowserContextEiRKNS_11PortContextE = hidden unnamed_addr alias void (%"class.extensions::ChannelEndpoint"*, %"class.content::BrowserContext"*, i32, %"struct.extensions::PortContext"*), void (%"class.extensions::ChannelEndpoint"*, %"class.content::BrowserContext"*, i32, %"struct.extensions::PortContext"*)* @_ZN10extensions15ChannelEndpointC2EPN7content14BrowserContextEiRKNS_11PortContextE
@_ZN10extensions15ChannelEndpointC1EPN7content14BrowserContextE = hidden unnamed_addr alias void (%"class.extensions::ChannelEndpoint"*, %"class.content::BrowserContext"*), void (%"class.extensions::ChannelEndpoint"*, %"class.content::BrowserContext"*)* @_ZN10extensions15ChannelEndpointC2EPN7content14BrowserContextE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15ChannelEndpointC2EPN7content14BrowserContextEiRKNS_11PortContextE(%"class.extensions::ChannelEndpoint"*, %"class.content::BrowserContext"*, i32, %"struct.extensions::PortContext"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 0
  store %"class.content::BrowserContext"* %1, %"class.content::BrowserContext"** %5, align 8
  %6 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2
  tail call void @_ZN10extensions11PortContextC1ERKS0_(%"struct.extensions::PortContext"* %7, %"struct.extensions::PortContext"* dereferenceable(56) %3) #6
  ret void
}

declare void @_ZN10extensions11PortContextC1ERKS0_(%"struct.extensions::PortContext"*, %"struct.extensions::PortContext"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15ChannelEndpointC2EPN7content14BrowserContextE(%"class.extensions::ChannelEndpoint"*, %"class.content::BrowserContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 0
  store %"class.content::BrowserContext"* %1, %"class.content::BrowserContext"** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 1
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2
  tail call void @_ZN10extensions11PortContextC1Ev(%"struct.extensions::PortContext"* %5) #6
  ret void
}

declare void @_ZN10extensions11PortContextC1Ev(%"struct.extensions::PortContext"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions15ChannelEndpoint21is_for_service_workerEv(%"class.extensions::ChannelEndpoint"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions15ChannelEndpoint19is_for_render_frameEv(%"class.extensions::ChannelEndpoint"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions15ChannelEndpoint18is_for_native_hostEv(%"class.extensions::ChannelEndpoint"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::RenderFrameHost"* @_ZNK10extensions15ChannelEndpoint18GetRenderFrameHostEv(%"class.extensions::ChannelEndpoint"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6, !prof !3

5:                                                ; preds = %1
  tail call void @llvm.trap() #6
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = tail call %"class.content::RenderFrameHost"* @_ZN7content15RenderFrameHost6FromIDEii(i32 %8, i32 %10) #6
  ret %"class.content::RenderFrameHost"* %11
}

declare %"class.content::RenderFrameHost"* @_ZN7content15RenderFrameHost6FromIDEii(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions15ChannelEndpoint11GetWorkerIdEv(%"struct.extensions::WorkerId"* noalias sret, %"class.extensions::ChannelEndpoint"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8, !prof !3

7:                                                ; preds = %2
  tail call void @llvm.trap() #6
  unreachable

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %8
  %15 = bitcast %"struct.extensions::WorkerId"* %0 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #6
  %17 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  br label %31

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %3, i8* %22, i64 %24) #6
  %25 = load i8, i8* %4, align 8, !range !2
  %26 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %1, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %26, align 8
  %29 = icmp eq i8 %25, 0
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %20
  tail call void @llvm.trap() #6
  unreachable

31:                                               ; preds = %14, %20
  %32 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %0, i64 0, i32 3
  %33 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions15ChannelEndpoint7IsValidEv(%"class.extensions::ChannelEndpoint"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.extensions::WorkerId", align 8
  %3 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %53, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 0
  %8 = load %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %7, align 8
  %9 = tail call %"class.extensions::ProcessManager"* @_ZN10extensions14ProcessManager3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %8) #6
  %10 = bitcast %"struct.extensions::WorkerId"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %2, i64 0, i32 0
  %12 = load i8, i8* %3, align 8, !range !2, !noalias !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15, !prof !3

14:                                               ; preds = %6
  tail call void @llvm.trap() #6
  unreachable

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !4
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %22, i64 24, i1 false) #6
  %23 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %2, i64 0, i32 1
  %24 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 8, !noalias !4
  store i32 %25, i32* %23, align 8, !alias.scope !4
  br label %37

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !4
  %29 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !4
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %11, i8* %28, i64 %30) #6
  %31 = load i8, i8* %3, align 8, !range !2, !noalias !4
  %32 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8, !noalias !4
  store i32 %34, i32* %32, align 8, !alias.scope !4
  %35 = icmp eq i8 %31, 0
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %26
  call void @llvm.trap() #6
  unreachable

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %2, i64 0, i32 3
  %39 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %40 = load i64, i64* %39, align 8, !noalias !4
  store i64 %40, i64* %38, align 8, !alias.scope !4
  %41 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %2, i64 0, i32 4
  %42 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %43 = load i32, i32* %42, align 8, !noalias !4
  store i32 %43, i32* %41, align 8, !alias.scope !4
  %44 = call zeroext i1 @_ZNK10extensions14ProcessManager16HasServiceWorkerERKNS_8WorkerIdE(%"class.extensions::ProcessManager"* %9, %"struct.extensions::WorkerId"* nonnull dereferenceable(48) %2) #6
  %45 = bitcast %"struct.extensions::WorkerId"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"struct.extensions::WorkerId", %"struct.extensions::WorkerId"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #7
  br label %52

52:                                               ; preds = %37, %49
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #6
  br label %64

53:                                               ; preds = %1
  %54 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.extensions::ChannelEndpoint", %"class.extensions::ChannelEndpoint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = tail call %"class.content::RenderFrameHost"* @_ZN7content15RenderFrameHost6FromIDEii(i32 %59, i32 %61) #6
  %63 = icmp ne %"class.content::RenderFrameHost"* %62, null
  br label %64

64:                                               ; preds = %53, %57, %52
  %65 = phi i1 [ %44, %52 ], [ %63, %57 ], [ true, %53 ]
  ret i1 %65
}

declare %"class.extensions::ProcessManager"* @_ZN10extensions14ProcessManager3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK10extensions14ProcessManager16HasServiceWorkerERKNS_8WorkerIdE(%"class.extensions::ProcessManager"*, %"struct.extensions::WorkerId"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK10extensions15ChannelEndpoint11GetWorkerIdEv: argument 0"}
!6 = distinct !{!6, !"_ZNK10extensions15ChannelEndpoint11GetWorkerIdEv"}
