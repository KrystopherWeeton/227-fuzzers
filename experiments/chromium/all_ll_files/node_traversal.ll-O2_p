; ModuleID = '../../third_party/blink/renderer/core/dom/node_traversal.cc'
source_filename = "../../third_party/blink/renderer/core/dom/node_traversal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.100", %"class.WTF::Vector.100", i8, i32, %"class.blink::Member.111", %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.124", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.135", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.151", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.160", double, double, i64, i64, %"class.blink::HeapHashSet.162", %"class.blink::HeapHashSet.169", i16, i8, %"class.blink::Member.176", %"class.blink::Member.178", %"class.blink::Member.180", %"class.blink::Member.182", %"class.blink::TextLinkColors", %"class.blink::Member.184", i8, [7 x i8], %"class.blink::HeapHashMap.186", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.193", %"class.blink::Member.198", %"class.blink::Member.200", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.202", %"class.blink::HeapVector.204", %"class.std::__1::unique_ptr.212", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.218", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.230", %"class.WTF::Vector.232", i8, i8, %"class.std::__1::unique_ptr.237", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.243", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.251", i8, i32, %"class.blink::Member.253", %"class.blink::Member.255", %"class.blink::Member.257", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.259", %"class.WTF::HashMap.261", %"class.blink::Member.266", %"class.blink::Member.268", %"class.blink::Member.270", %"class.blink::Member.272", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.274", i8, i32, %"class.blink::Member.281", %"class.blink::Member.283", i32, %"class.blink::Member.285", %"class.blink::Member.287", %"class.blink::Member.289", %"class.std::__1::unique_ptr.291", i64, %"class.std::__1::unique_ptr.297", i32, i32, %"class.blink::Member.303", %"class.blink::Member.305", %"class.blink::Member.307", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.309", %"class.WTF::Vector.311", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.316", %"class.blink::Member.323", %"class.std::__1::unique_ptr.325", %"class.blink::Member.331", i8, i8, %"class.WTF::String", %"class.blink::Member.333", i8, [7 x i8], %"class.blink::HeapHashMap.335", %"class.blink::HeapObserverSet", %"class.blink::Member.349", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.351", i32, i8, i8, %"class.blink::WeakMember.353", %"class.blink::Member.354" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.93" }
%"class.blink::HeapHashMap.93" = type { %"class.WTF::HashMap.96" }
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.99"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.99" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i32 }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.61", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.63, %"class.WTF::Vector.64", %"class.WTF::Vector.64", %"class.blink::Member", %"class.blink::Member.69", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.77", %"class.WTF::TextPosition", %"class.blink::Member.81", %"class.blink::HeapVector.83", %"class.blink::Member.90" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.63 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.71" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.75" }
%"class.WTF::HashTable.75" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.83" = type { %"class.WTF::Vector.86" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.8", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.153" }
%"class.blink::HeapHashMap.153" = type { %"class.WTF::HashMap.156" }
%"class.WTF::HashMap.156" = type { %"class.WTF::HashTable.157" }
%"class.WTF::HashTable.157" = type <{ %"struct.WTF::KeyValuePair.159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.159" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.162" = type { %"class.WTF::HashSet.165" }
%"class.WTF::HashSet.165" = type { %"class.WTF::HashTable.166" }
%"class.WTF::HashTable.166" = type <{ %"class.blink::WeakMember.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.168" = type opaque
%"class.blink::HeapHashSet.169" = type { %"class.WTF::HashSet.172" }
%"class.WTF::HashSet.172" = type { %"class.WTF::HashTable.173" }
%"class.WTF::HashTable.173" = type <{ %"class.blink::WeakMember.175"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.175" = type opaque
%"class.blink::Member.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.53" }
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.186" = type { %"class.WTF::HashMap.189" }
%"class.WTF::HashMap.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.WTF::KeyValuePair.192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.192" = type opaque
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.204" = type { %"class.WTF::Vector.207" }
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209" }
%"class.WTF::VectorBufferBase.209" = type { %"class.blink::Member.210"*, i32, i32 }
%"class.blink::Member.210" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.218" = type { %"class.WTF::HashSet.221" }
%"class.WTF::HashSet.221" = type { %"class.WTF::HashTable.222" }
%"class.WTF::HashTable.222" = type <{ %"class.blink::WeakMember.224"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.224" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.225", i32, [4 x i8] }>
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.232" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.243" = type { %"class.WTF::Vector.246" }
%"class.WTF::Vector.246" = type { %"class.WTF::VectorBuffer.247" }
%"class.WTF::VectorBuffer.247" = type { %"class.WTF::VectorBufferBase.248" }
%"class.WTF::VectorBufferBase.248" = type { %"class.blink::Member.249"*, i32, i32 }
%"class.blink::Member.249" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.261" = type { %"class.WTF::HashTable.262" }
%"class.WTF::HashTable.262" = type <{ %"struct.WTF::KeyValuePair.265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.265" = type opaque
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.150", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.141, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.141 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142" }>
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.143 }
%class.scoped_refptr.143 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.144", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.145" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i8 }
%"class.blink::WeakMember.150" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.274" = type { %"class.WTF::HashSet.277" }
%"class.WTF::HashSet.277" = type { %"class.WTF::HashTable.278" }
%"class.WTF::HashTable.278" = type <{ %"class.blink::Member.280"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.280" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.311" = type { %"class.WTF::VectorBuffer.312" }
%"class.WTF::VectorBuffer.312" = type { %"class.WTF::VectorBufferBase.313" }
%"class.WTF::VectorBufferBase.313" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.316" = type { %"class.WTF::HashMap.319" }
%"class.WTF::HashMap.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"struct.WTF::KeyValuePair.322"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.322" = type opaque
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.342" }
%"class.blink::HeapHashSet.342" = type { %"class.WTF::HashSet.345" }
%"class.WTF::HashSet.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.358", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.365", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.358" = type { %"class.WTF::HashSet.361" }
%"class.WTF::HashSet.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"class.blink::Member.364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.364" = type opaque
%"class.blink::HeapTaskRunnerTimer.365" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.366", { i64, i64 } }
%"class.blink::WeakMember.366" = type { %"class.blink::MemberBase.352" }
%"class.blink::WeakMember.353" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %0, %1
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::Node"* @_ZNK5blink4Node26PseudoAwarePreviousSiblingEv(%"class.blink::Node"* %0) #3
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = tail call %"class.blink::Node"* @_ZNK5blink4Node20PseudoAwareLastChildEv(%"class.blink::Node"* nonnull %5) #3
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %10
  %11 = phi %"class.blink::Node"* [ %12, %10 ], [ %5, %7 ]
  %12 = tail call %"class.blink::Node"* @_ZNK5blink4Node20PseudoAwareLastChildEv(%"class.blink::Node"* %11) #3
  %13 = tail call %"class.blink::Node"* @_ZNK5blink4Node20PseudoAwareLastChildEv(%"class.blink::Node"* %12) #3
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %18, label %10

15:                                               ; preds = %4
  %16 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #3
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %16, i64 0, i32 0
  br label %18

18:                                               ; preds = %10, %7, %2, %15
  %19 = phi %"class.blink::Node"* [ %17, %15 ], [ null, %2 ], [ %5, %7 ], [ %12, %10 ]
  ret %"class.blink::Node"* %19
}

declare %"class.blink::Node"* @_ZNK5blink4Node26PseudoAwarePreviousSiblingEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink4Node20PseudoAwareLastChildEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Node"* @_ZNK5blink4Node21PseudoAwareFirstChildEv(%"class.blink::Node"* %0) #3
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %19

5:                                                ; preds = %2
  %6 = icmp eq %"class.blink::Node"* %0, null
  %7 = icmp eq %"class.blink::Node"* %0, %1
  %8 = or i1 %6, %7
  br i1 %8, label %19, label %9

9:                                                ; preds = %5, %13
  %10 = phi %"class.blink::Node"* [ %15, %13 ], [ %0, %5 ]
  %11 = tail call %"class.blink::Node"* @_ZNK5blink4Node22PseudoAwareNextSiblingEv(%"class.blink::Node"* nonnull %10) #3
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %10) #3
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  %16 = icmp eq %"class.blink::ContainerNode"* %14, null
  %17 = icmp eq %"class.blink::Node"* %15, %1
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %9

19:                                               ; preds = %13, %9, %5, %2
  %20 = phi %"class.blink::Node"* [ %3, %2 ], [ null, %5 ], [ null, %13 ], [ %11, %9 ]
  ret %"class.blink::Node"* %20
}

declare %"class.blink::Node"* @_ZNK5blink4Node21PseudoAwareFirstChildEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink4Node22PseudoAwareNextSiblingEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal35NextIncludingPseudoSkippingChildrenERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %0, null
  %4 = icmp eq %"class.blink::Node"* %0, %1
  %5 = or i1 %3, %4
  br i1 %5, label %16, label %6

6:                                                ; preds = %2, %10
  %7 = phi %"class.blink::Node"* [ %12, %10 ], [ %0, %2 ]
  %8 = tail call %"class.blink::Node"* @_ZNK5blink4Node22PseudoAwareNextSiblingEv(%"class.blink::Node"* nonnull %7) #3
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %7) #3
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %11, i64 0, i32 0
  %13 = icmp eq %"class.blink::ContainerNode"* %11, null
  %14 = icmp eq %"class.blink::Node"* %12, %1
  %15 = or i1 %13, %14
  br i1 %15, label %16, label %6

16:                                               ; preds = %10, %6, %2
  %17 = phi %"class.blink::Node"* [ null, %2 ], [ %8, %6 ], [ null, %10 ]
  ret %"class.blink::Node"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #3
  %3 = icmp eq %"class.blink::ContainerNode"* %2, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1, %9
  %5 = phi %"class.blink::ContainerNode"* [ %11, %9 ], [ %2, %1 ]
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %5, i64 0, i32 0
  %11 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %10) #3
  %12 = icmp eq %"class.blink::ContainerNode"* %11, null
  br i1 %12, label %13, label %4

13:                                               ; preds = %4, %9, %1
  %14 = phi %"class.blink::Node"* [ null, %1 ], [ null, %9 ], [ %7, %4 ]
  ret %"class.blink::Node"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #3
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0
  %5 = icmp eq %"class.blink::ContainerNode"* %3, null
  %6 = icmp eq %"class.blink::Node"* %4, %1
  %7 = or i1 %5, %6
  br i1 %7, label %20, label %8

8:                                                ; preds = %2, %14
  %9 = phi %"class.blink::Node"* [ %16, %14 ], [ %4, %2 ]
  %10 = phi %"class.blink::ContainerNode"* [ %15, %14 ], [ %3, %2 ]
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %9) #3
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0
  %17 = icmp eq %"class.blink::ContainerNode"* %15, null
  %18 = icmp eq %"class.blink::Node"* %16, %1
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %8

20:                                               ; preds = %8, %14, %2
  %21 = phi %"class.blink::Node"* [ null, %2 ], [ null, %14 ], [ %12, %8 ]
  ret %"class.blink::Node"* %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal10LastWithinERKNS_13ContainerNodeE(%"class.blink::ContainerNode"* nocapture readonly dereferenceable(80)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %7, %13, %1
  %6 = phi %"class.blink::Node"* [ null, %1 ], [ %8, %13 ], [ %8, %7 ]
  ret %"class.blink::Node"* %6

7:                                                ; preds = %1, %13
  %8 = phi %"class.blink::Node"* [ %16, %13 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %5, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 0, i32 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.blink::Node"**
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %5, label %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* readonly dereferenceable(64)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  %6 = icmp eq %"class.blink::Node"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %24, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %10 = bitcast %"class.blink::TraceWrapperV8Reference"* %9 to %"class.blink::Node"**
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %8, %19
  %14 = phi %"class.blink::Node"* [ %22, %19 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 0, i32 0, i32 1
  %21 = bitcast %"class.blink::TraceWrapperV8Reference"* %20 to %"class.blink::Node"**
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %24, label %13

24:                                               ; preds = %19, %13, %8, %1
  %25 = phi %"class.blink::Node"* [ null, %1 ], [ null, %8 ], [ %14, %13 ], [ %14, %19 ]
  %26 = icmp eq %"class.blink::Node"* %25, null
  %27 = select i1 %26, %"class.blink::Node"* %0, %"class.blink::Node"* %25
  ret %"class.blink::Node"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %0, %1
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %4, %16
  %9 = phi %"class.blink::Node"* [ %19, %16 ], [ %6, %4 ]
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 0, i32 0, i32 1
  %18 = bitcast %"class.blink::TraceWrapperV8Reference"* %17 to %"class.blink::Node"**
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %24, label %8

21:                                               ; preds = %4
  %22 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #3
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %22, i64 0, i32 0
  br label %24

24:                                               ; preds = %16, %11, %8, %2, %21
  %25 = phi %"class.blink::Node"* [ %23, %21 ], [ null, %2 ], [ %9, %11 ], [ null, %8 ], [ %9, %16 ]
  ret %"class.blink::Node"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal38PreviousAbsoluteSiblingIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %0, null
  %4 = icmp eq %"class.blink::Node"* %0, %1
  %5 = or i1 %3, %4
  br i1 %5, label %16, label %6

6:                                                ; preds = %2, %10
  %7 = phi %"class.blink::Node"* [ %12, %10 ], [ %0, %2 ]
  %8 = tail call %"class.blink::Node"* @_ZNK5blink4Node26PseudoAwarePreviousSiblingEv(%"class.blink::Node"* nonnull %7) #3
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %7) #3
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %11, i64 0, i32 0
  %13 = icmp eq %"class.blink::ContainerNode"* %11, null
  %14 = icmp eq %"class.blink::Node"* %12, %1
  %15 = or i1 %13, %14
  br i1 %15, label %16, label %6

16:                                               ; preds = %10, %6, %2
  %17 = phi %"class.blink::Node"* [ null, %2 ], [ %8, %6 ], [ null, %10 ]
  ret %"class.blink::Node"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousAbsoluteSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %0, null
  %4 = icmp eq %"class.blink::Node"* %0, %1
  %5 = or i1 %3, %4
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %11
  %7 = phi %"class.blink::Node"* [ %13, %11 ], [ %0, %2 ]
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %7) #3
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0
  %14 = icmp eq %"class.blink::ContainerNode"* %12, null
  %15 = icmp eq %"class.blink::Node"* %13, %1
  %16 = or i1 %14, %15
  br i1 %16, label %17, label %6

17:                                               ; preds = %11, %6, %2
  %18 = phi %"class.blink::Node"* [ null, %2 ], [ %9, %6 ], [ null, %11 ]
  ret %"class.blink::Node"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal13NextPostOrderERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %0, %1
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #3
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0
  br label %24

11:                                               ; preds = %4, %19
  %12 = phi %"class.blink::Node"* [ %22, %19 ], [ %6, %4 ]
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 1
  %21 = bitcast %"class.blink::Node"* %20 to %"class.blink::Node"**
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %24, label %11

24:                                               ; preds = %19, %14, %11, %2, %8
  %25 = phi %"class.blink::Node"* [ %10, %8 ], [ null, %2 ], [ %12, %14 ], [ null, %11 ], [ %12, %19 ]
  ret %"class.blink::Node"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal32PreviousAncestorSiblingPostOrderERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #3
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0
  %5 = icmp eq %"class.blink::ContainerNode"* %3, null
  %6 = icmp eq %"class.blink::Node"* %4, %1
  %7 = or i1 %5, %6
  br i1 %7, label %20, label %8

8:                                                ; preds = %2, %14
  %9 = phi %"class.blink::Node"* [ %16, %14 ], [ %4, %2 ]
  %10 = phi %"class.blink::ContainerNode"* [ %15, %14 ], [ %3, %2 ]
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 4, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %9) #3
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0
  %17 = icmp eq %"class.blink::ContainerNode"* %15, null
  %18 = icmp eq %"class.blink::Node"* %16, %1
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %8

20:                                               ; preds = %8, %14, %2
  %21 = phi %"class.blink::Node"* [ null, %2 ], [ null, %14 ], [ %12, %8 ]
  ret %"class.blink::Node"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal17PreviousPostOrderERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %0, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %11 = bitcast %"class.blink::TraceWrapperV8Reference"* %10 to %"class.blink::Node"**
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %38

14:                                               ; preds = %4, %2, %9
  %15 = icmp eq %"class.blink::Node"* %0, %1
  br i1 %15, label %38, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 4, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %20, label %38

20:                                               ; preds = %16
  %21 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #3
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %21, i64 0, i32 0
  %23 = icmp eq %"class.blink::ContainerNode"* %21, null
  %24 = icmp eq %"class.blink::Node"* %22, %1
  %25 = or i1 %23, %24
  br i1 %25, label %38, label %26

26:                                               ; preds = %20, %32
  %27 = phi %"class.blink::Node"* [ %34, %32 ], [ %22, %20 ]
  %28 = phi %"class.blink::ContainerNode"* [ %33, %32 ], [ %21, %20 ]
  %29 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %28, i64 0, i32 0, i32 4, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %27) #3
  %34 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %33, i64 0, i32 0
  %35 = icmp eq %"class.blink::ContainerNode"* %33, null
  %36 = icmp eq %"class.blink::Node"* %34, %1
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %26

38:                                               ; preds = %32, %26, %20, %16, %14, %9
  %39 = phi %"class.blink::Node"* [ %12, %9 ], [ null, %14 ], [ %18, %16 ], [ null, %20 ], [ %30, %26 ], [ null, %32 ]
  ret %"class.blink::Node"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13NodeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Node"* @_ZN5blink5Range23commonAncestorContainerEPKNS_4NodeES3_(%"class.blink::Node"* %0, %"class.blink::Node"* %1) #3
  ret %"class.blink::Node"* %3
}

declare %"class.blink::Node"* @_ZN5blink5Range23commonAncestorContainerEPKNS_4NodeES3_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
